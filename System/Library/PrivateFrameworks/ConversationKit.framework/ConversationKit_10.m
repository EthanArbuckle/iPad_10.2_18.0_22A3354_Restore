uint64_t MultiwayViewController.VideoVisibility.isInCanvas.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

ConversationKit::MultiwayViewController::VideoVisibility __swiftcall MultiwayViewController.VideoVisibility.init(visibility:isInCanvas:)(Swift::Int visibility, Swift::Bool isInCanvas)
{
  Swift::Bool v2;
  ConversationKit::MultiwayViewController::VideoVisibility result;

  v2 = isInCanvas;
  result.visibility = visibility;
  result.isInCanvas = v2;
  return result;
}

void MultiwayViewController.inCallControlsViewController(_:didTap:from:)()
{
  char *v0;
  uint64_t *v1;
  char *v2;
  void *v3;
  void *v4;
  void (*v5)(void);
  void (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  _WORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[30];
  _BYTE v74[216];
  uint64_t v75[6];
  uint64_t v76;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v9 = OUTLINED_FUNCTION_7_22();
  *v1 = v9;
  OUTLINED_FUNCTION_384_0(v9, *MEMORY[0x1E0DEF740]);
  _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_275_3();
  if ((v0 & 1) == 0)
  {
    __break(1u);
    goto LABEL_74;
  }
  v10 = &v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_186_3((uint64_t)v10, (uint64_t)v74);
  OUTLINED_FUNCTION_186_3((uint64_t)v74, (uint64_t)v75);
  v11 = OUTLINED_FUNCTION_12_109(v75);
  if (v13)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_5:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v14 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
      v73[0] = (uint64_t)v6;
      type metadata accessor for CNKCommand(0);
      v15 = String.init<A>(reflecting:)();
      v17 = v16;
      *(_QWORD *)(v14 + 64) = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v14 + 32) = v15;
      *(_QWORD *)(v14 + 40) = v17;
      OUTLINED_FUNCTION_239_1();
      OUTLINED_FUNCTION_133();
      goto LABEL_72;
    }
LABEL_74:
    swift_once();
    goto LABEL_5;
  }
  switch((unint64_t)v6)
  {
    case 0uLL:
    case 1uLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xFuLL:
    case 0x12uLL:
      break;
    case 2uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      MultiwayViewController.removeAllEffectsObjects()();
      v18 = OUTLINED_FUNCTION_422_0(*(void **)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController]);
      v6();

      ConversationController.leaveConversation(reason:)();
      goto LABEL_71;
    case 3uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      ConversationController.joinConversation()();
      goto LABEL_71;
    case 4uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      ConversationController.swapLocalParticipantCamera()();
      v19 = (_QWORD *)(v76 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
      OUTLINED_FUNCTION_1();
      switch(*v19)
      {
        case 0:
        case 1:
        case 2:
        case 3:
          goto LABEL_71;
        case 4:
          v20 = v2;
          v21 = 1;
          goto LABEL_70;
        case 5:
          v20 = v2;
          v21 = 2;
          goto LABEL_70;
        case 6:
          v20 = v2;
          v21 = 3;
LABEL_70:
          OUTLINED_FUNCTION_18_71(v20, sel_setControlsState_animated_, v21);
          goto LABEL_71;
        default:
          goto LABEL_76;
      }
    case 5uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      MultiwayViewController.toggleAudioMute()();
      goto LABEL_71;
    case 6uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      MultiwayViewController.toggleVideoMute(shouldPauseIfStopped:)(0);
      goto LABEL_71;
    case 7uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      MultiwayViewController.toggleCinematicFraming()();
      goto LABEL_71;
    case 8uLL:
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_185_0();
    case 9uLL:
      v22 = (_QWORD *)(v76 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
      OUTLINED_FUNCTION_1();
      v23 = *v22 - 2;
      if (v23 > 4)
        v24 = 4;
      else
        v24 = qword_1BD665948[v23];
      OUTLINED_FUNCTION_18_71(v2, sel_setControlsState_animated_, v24);
      break;
    case 0xAuLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      v47 = OUTLINED_FUNCTION_42_54();
      OUTLINED_FUNCTION_512_0(v47, v48, v49, v50, v51, v52, v53, v54, v69, v70, v71, v72, v73[0], v73[1], v73[2], v73[3], v73[4], v73[5], v73[6],
        v73[7]);
      goto LABEL_71;
    case 0xDuLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      MultiwayViewController.handleToggleLayoutAction()();
      return;
    case 0xEuLL:
      if (v4)
      {
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v74, (uint64_t)v73, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        OUTLINED_FUNCTION_42_54();
        v55 = v4;
      }
      else
      {
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v74, (uint64_t)v73, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        v66 = OUTLINED_FUNCTION_42_54();
        v67 = OUTLINED_FUNCTION_9(v66, sel_view);
        if (!v67)
        {
          __break(1u);
LABEL_76:
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
          __break(1u);
          JUMPOUT(0x1BD51BF3CLL);
        }
        v55 = v67;
        v4 = 0;
      }
      v68 = v4;
      MultiwayViewController.handleShareLinkAction(_:)(v55);
      OUTLINED_FUNCTION_182_5();

      break;
    case 0x10uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      OUTLINED_FUNCTION_255();
      goto LABEL_71;
    case 0x11uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      ConversationController.cancelJoinCountdown()();
      goto LABEL_71;
    case 0x13uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      MultiwayViewController.handleUserDidToggleCaptions()();
LABEL_71:
      OUTLINED_FUNCTION_182_5();
      break;
    case 0x14uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v25 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v25, (uint64_t)&static Logger.conversationKit);
      v26 = OUTLINED_FUNCTION_60_3();
      v27 = (void *)Logger.logObject.getter();
      v28 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_313_4(v28))
      {
        *(_DWORD *)OUTLINED_FUNCTION_105() = 67109120;
        OUTLINED_FUNCTION_141_8();
        OUTLINED_FUNCTION_350_1();

        OUTLINED_FUNCTION_127_9();
        OUTLINED_FUNCTION_254_3(&dword_1BD004000, v29, v30, "call is blocked() : %{BOOL}d");
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_141_8();
      OUTLINED_FUNCTION_350_1();
      OUTLINED_FUNCTION_4_39();
      if ((v26 & 1) != 0)
        goto LABEL_56;
      if (one-time initialization token for faceTime != -1)
        swift_once();
      OUTLINED_FUNCTION_141_8();
      v10 = v59;
      v41 = (char *)OUTLINED_FUNCTION_9(v59, sel_presentedViewController);
      if (!v41)
        v41 = (char *)v26;
      OUTLINED_FUNCTION_137_8();
      specialized ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)();
      goto LABEL_63;
    case 0x15uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v31 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v31, (uint64_t)&static Logger.conversationKit);
      v32 = OUTLINED_FUNCTION_60_3();
      v33 = (void *)Logger.logObject.getter();
      v34 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_313_4(v34))
      {
        *(_DWORD *)OUTLINED_FUNCTION_105() = 67109120;
        OUTLINED_FUNCTION_141_8();
        OUTLINED_FUNCTION_350_1();

        OUTLINED_FUNCTION_127_9();
        OUTLINED_FUNCTION_254_3(&dword_1BD004000, v35, v36, "call is blocked() : %{BOOL}d");
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_141_8();
      OUTLINED_FUNCTION_350_1();
      OUTLINED_FUNCTION_4_39();
      if ((v32 & 1) != 0)
      {
LABEL_56:
        OUTLINED_FUNCTION_141_8();
        v10 = v60;
        TUCall.unblock()();
LABEL_57:
        OUTLINED_FUNCTION_182_5();
      }
      else
      {
        if (one-time initialization token for faceTime != -1)
          swift_once();
        OUTLINED_FUNCTION_141_8();
        v10 = v61;
        v41 = (char *)OUTLINED_FUNCTION_9(v61, sel_presentedViewController);
        if (!v41)
          v41 = (char *)v32;
        v62 = OUTLINED_FUNCTION_137_8();
        specialized ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(v62, v63, v64, v65);
LABEL_63:
        OUTLINED_FUNCTION_182_5();

      }
      break;
    case 0x16uLL:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v37 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v37, (uint64_t)&static Logger.conversationKit);
      v38 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_51_3(v38))
      {
        v39 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_220_0(v39);
        OUTLINED_FUNCTION_130(&dword_1BD004000, v10, (os_log_type_t)v6, "report single participant", (uint8_t *)v4);
        OUTLINED_FUNCTION_60();
      }

      if (one-time initialization token for faceTime != -1)
        swift_once();
      OUTLINED_FUNCTION_141_8();
      v10 = v40;
      v41 = (char *)OUTLINED_FUNCTION_9(v40, sel_presentedViewController);
      if (!v41)
        v41 = v2;
      v42 = OUTLINED_FUNCTION_137_8();
      specialized ReportSpamManager.presentReportSingleParticipantAlert(of:from:preparationHandler:)(v42, v43, v44, v45, v46);
      goto LABEL_63;
    default:
      OUTLINED_FUNCTION_23_82(v11, v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      if (one-time initialization token for default != -1)
        swift_once();
      v56 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v56, (uint64_t)&static Log.default);
      v57 = OUTLINED_FUNCTION_55_6();
      if (OUTLINED_FUNCTION_5_3(v57))
      {
        v58 = (uint8_t *)OUTLINED_FUNCTION_105();
        *(_WORD *)v58 = 0;
        OUTLINED_FUNCTION_130(&dword_1BD004000, v10, (os_log_type_t)v2, "Unknown enum case", v58);
        OUTLINED_FUNCTION_60();
      }
      goto LABEL_57;
  }
LABEL_72:
  OUTLINED_FUNCTION_52_1();
}

void MultiwayViewController.inCallControlsViewController(_:didAdd:)(int a1, CNContact a2)
{
  ConversationController.addContactToCurrentConversation(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.didCreateCollectionViewForInCallControlsViewController(_:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  void *v4;
  id v5;
  id v6;
  char v7;
  uint64_t v8;
  __int16 v9;
  _BYTE v10[216];
  uint64_t v11[27];

  OUTLINED_FUNCTION_399_2();
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_40_60(v2, (uint64_t)v10);
  OUTLINED_FUNCTION_40_60((uint64_t)v10, (uint64_t)v11);
  OUTLINED_FUNCTION_12_109(v11);
  if (!v3)
  {
    v4 = *(void **)(v2 + 16);
    type metadata accessor for InCallControlsViewController();
    v5 = v4;
    v6 = OUTLINED_FUNCTION_12_13();
    OUTLINED_FUNCTION_396_1();
    v7 = OUTLINED_FUNCTION_435();

    if ((v7 & 1) != 0)
    {
      OUTLINED_FUNCTION_1();
      v9 = 513;
      v8 = OUTLINED_FUNCTION_124();
      InCallControlsViewController.update(with:updateReason:)(v8, &v9);
      OUTLINED_FUNCTION_13_3();
    }
  }
  OUTLINED_FUNCTION_91();
}

void closure #1 in MultiwayViewController.setLocalParticipantState(_:animated:)(uint64_t a1, char a2, unsigned __int8 a3)
{
  int v3;
  uint64_t v4;
  BOOL v5;
  BOOL *v6;

  v3 = a3;
  v4 = *(_QWORD *)(a1 + 56);
  LocalParticipantView.isInRoster.setter(a2);
  v5 = v3 == 128;
  v6 = (BOOL *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView)
              + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded);
  swift_beginAccess();
  *v6 = v5;
  ParticipantView.isExpanded.didset();
  LocalParticipantView.updateControlsAlpha(animated:)(0);
}

void closure #2 in MultiwayViewController.setLocalParticipantState(_:animated:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id *v9;
  uint64_t (*v10)(void);
  id v11;
  uint64_t v12;
  unsigned __int8 *v13;
  _BYTE v14[216];
  uint64_t v15[27];

  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = (id *)(v7 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
    swift_beginAccess();
    v10 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v9) + 0x180);
    v11 = *v9;
    LOBYTE(v10) = v10();

    if ((v10 & 1) == 0)
    {
      v12 = (uint64_t)v8 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of MultiwayViewController.ViewContent?(v12, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v14, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v15) != 1)
      {
        v13 = (unsigned __int8 *)(*(_QWORD *)(v12 + 48)
                                + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
        swift_beginAccess();
        if ((static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(a3, *v13) & 1) != 0)
        {
          MultiwayViewController.updateZoomControls(for:)(a3);
          if ((a4 & 1) != 0)
            MultiwayViewController.testing_localPreviewDidFinishMinimize()();
        }
      }
    }

  }
}

UIMenu_optional __swiftcall MultiwayViewController.audioRouteMenu()()
{
  MultiwayViewController.audioRouteMenu()();
}

id sub_1BD51C2DC(void *a1)
{
  void *v1;

  return a1;
}

void MultiwayViewController.audioRouteGlyph(for:)()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

void sub_1BD51C324(void *a1)
{
  if (a1)
  {
    OUTLINED_FUNCTION_65(a1, sel_audioRouteGlyphFor_);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_32();
}

id sub_1BD51C388(void *a1)
{
  void *v1;
  void *v2;

  return a1;
}

void MultiwayViewController.audioRouteGlyph(for:buttonStyle:)()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

void sub_1BD51C3E0(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    objc_msgSend(a1, sel_audioRouteGlyphFor_buttonStyle_, v2, v1);
    OUTLINED_FUNCTION_113();
  }
  OUTLINED_FUNCTION_9_0();
}

id sub_1BD51C438(void *a1)
{
  void *v1;

  return a1;
}

void MultiwayViewController.audioRouteGlyphForDevice.getter()
{
  MultiwayViewController.audioRouteMenu()();
}

void MultiwayViewController.audioRouteMenu()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

void sub_1BD51C48C(void *a1)
{
  SEL *v1;

  if (a1)
  {
    objc_msgSend(a1, *v1);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isPresentingCallDetails.getter()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(void);
  _QWORD *v3;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator);
  if (v1)
  {
    v2 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78);
    v3 = v1;
    v2();
    OUTLINED_FUNCTION_37_0();
  }
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.canDismissControls.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52[216];
  uint64_t v53[6];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v1, (uint64_t)v52);
  OUTLINED_FUNCTION_6_110((uint64_t)v52, (uint64_t)v53);
  OUTLINED_FUNCTION_12_109(v53);
  if (!v2)
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_320_2();
    if (v2)
    {
      OUTLINED_FUNCTION_398_1(v3, v4, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?, v5, v6, v7, v8, v9, v17, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
        v29,
        v30,
        v31,
        v32,
        v33,
        v34,
        v35,
        v36,
        v37,
        v38,
        v39,
        v40,
        v41,
        v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52[0]);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)&v19);
      v10 = MultiwayViewController.inCallConversationBannerHidable()();
      OUTLINED_FUNCTION_146_5(v10, (uint64_t)outlined consume of MultiwayViewController.ViewContent?, v11, v12, v13, v14, v15, v16, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
        v29,
        v30,
        v31,
        v32,
        v33,
        v34,
        v35,
        v36,
        v37,
        v38,
        v39,
        v40,
        v41,
        v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52[0]);
    }
  }
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.inCallBannerDisplayName.getter()
{
  ConversationController.conversationDisplayName.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t MultiwayViewController.isScreenSharingVisible.getter()
{
  NSObject *v0;
  void *v1;
  os_log_type_t v2;
  double *v3;
  char v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;

  v3 = (double *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo);
  OUTLINED_FUNCTION_1();
  if (v3[1] == 0.0 && v3[2] == 0.0 || (OUTLINED_FUNCTION_1(), OUTLINED_FUNCTION_320_2(), v4))
  {
    v5 = (unsigned __int8 *)v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isScreenSharingFullScreen;
    OUTLINED_FUNCTION_1();
    v6 = *v5;
  }
  else
  {
    v6 = 1;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v7 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationKit);
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_19_73();
  v8 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v8))
  {
    v9 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 67109888;
    OUTLINED_FUNCTION_391_1();
    *(_WORD *)(v9 + 8) = 1024;
    OUTLINED_FUNCTION_391_1();
    *(_WORD *)(v9 + 14) = 1024;
    OUTLINED_FUNCTION_1();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 20) = 1024;
    OUTLINED_FUNCTION_1();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl(&dword_1BD004000, v0, v2, "isScreenSharingVisible: %{BOOL}d, isMediaPipped: %{BOOL}d, isPipStashed:%{BOOL}d, isScreenSharingFullScreen:%{BOOL}d", (uint8_t *)v9, 0x1Au);
    OUTLINED_FUNCTION_60();
  }

  return v6;
}

Swift::Void __swiftcall MultiwayViewController.didAcceptCall()()
{
  MultiwayViewController.didExpandIncomingCallBanner.setter(1);
}

void MultiwayViewController.updateState(for:preferredControlsSize:presentingMenu:)()
{
  uint64_t v0;
  double v1;
  double v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  void *v11;
  NSObject *v12;
  _BYTE *v13;
  void *v14;
  int v15;
  double *v16;
  BOOL v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int8x16_t v33;
  id v34;
  void *v35;
  unsigned __int8 v36;
  _QWORD **v37;
  _QWORD *v38;
  void (*v39)(void);
  _QWORD *v40;
  id v41;
  char v42;
  unsigned __int8 v43;
  uint64_t v44;
  int8x16_t v45;
  int8x16_t v46;
  char v47;
  uint64_t v48;
  _BYTE v49[216];
  uint64_t v50[6];
  NSObject *v51;

  OUTLINED_FUNCTION_51_29();
  v4 = v3;
  OUTLINED_FUNCTION_42_51();
  v6 = v5;
  OUTLINED_FUNCTION_15_6();
  v7 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_54_41(v7, (uint64_t)v49);
  OUTLINED_FUNCTION_54_41((uint64_t)v49, (uint64_t)v50);
  v8 = OUTLINED_FUNCTION_12_109(v50);
  if (v17)
    goto LABEL_25;
  OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  v10 = v9;
  v11 = (void *)v50[3];
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v49);
  v11;
  static NSObject.== infix(_:_:)();
  OUTLINED_FUNCTION_8_20();
  if ((v10 & 1) == 0)
    goto LABEL_24;
  v12 = v51;
  v13 = (char *)v51 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState;
  v14 = (void *)OUTLINED_FUNCTION_1();
  if ((v4 & 1) != 0)
    goto LABEL_33;
  v15 = *v13;
  v16 = (double *)((char *)v12 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize);
  OUTLINED_FUNCTION_2_0();
  if (((_BYTE)v16[2] & 1) == 0 && *v16 == v2)
  {
    v17 = v16[1] == v1 && v15 == 1;
    if (v17)
      goto LABEL_24;
  }
  v42 = *((_BYTE *)v16 + 16);
  *v16 = v2;
  v16[1] = v1;
  *((_BYTE *)v16 + 16) = 0;
  MultiwayViewConstraintsController.bannerControlsSize.didset();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v18 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v18, (uint64_t)&static Logger.conversationControls);
  v19 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v12, v19))
  {
    v20 = OUTLINED_FUNCTION_105();
    v44 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v20 = 136446466;
    v21 = _typeName(_:qualified:)();
    OUTLINED_FUNCTION_16_26(v21, v22, v23, v24, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_21_0();
    *(_WORD *)(v20 + 12) = 2082;
    v26 = OUTLINED_FUNCTION_235();
    v27 = MEMORY[0x1C3B7379C](v26);
    v48 = OUTLINED_FUNCTION_16_26(v27, v28, v29, v30, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v12, v19, "[%{public}s] set preffered contentSize of banner to %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v32 = v6 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType;
  OUTLINED_FUNCTION_1();
  outlined init with copy of ConversationControlsType(v32, (uint64_t)&v44);
  if (v47 == 6
    && (v33 = vorrq_s8(v45, v46),
        !(*(_QWORD *)&vorr_s8(*(int8x8_t *)v33.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v33, v33, 8uLL)) | v44)))
  {
    outlined destroy of ConversationControlsType((uint64_t)&v44);
    v37 = (_QWORD **)(v6
                    + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
    v14 = (void *)OUTLINED_FUNCTION_1();
    v38 = *v37;
    if (*v37)
    {
      v39 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v38) + 0x340);
      v40 = v38;
      v39();

      v14 = (void *)static Platform.current.getter();
      if ((_BYTE)v14)
      {
        MultiwayViewConstraintsController.configure(rosterCellWidth:)();
        ParticipantListViewController.collectionView.getter();
        if (v14)
        {
          v41 = objc_msgSend(v14, sel_collectionViewLayout);
          OUTLINED_FUNCTION_18_14();
          objc_msgSend(v39, sel_invalidateLayout);

        }
      }
    }
  }
  else
  {
    v14 = (void *)outlined destroy of ConversationControlsType((uint64_t)&v44);
  }
  if ((v42 & 1) == 0)
  {
LABEL_33:
    if (!*v13)
    {
LABEL_24:
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v49);
LABEL_25:
      OUTLINED_FUNCTION_7_7();
      return;
    }
  }
  v34 = OUTLINED_FUNCTION_2_2((uint64_t)v14, sel_view);
  if (v34)
  {
    v35 = v34;
    objc_msgSend(v34, sel_layoutIfNeeded);

    if ((v4 & 1) != 0)
      v36 = 2;
    else
      v36 = 1;
    v43 = v36;
    OUTLINED_FUNCTION_325_2(&v43);
    goto LABEL_24;
  }
  __break(1u);
}

void MultiwayViewController.updateInCallConversationControls(type:showControlsIfHidden:forceUpdate:)()
{
  uint64_t v0;
  os_log_type_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unsigned __int8 *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  int8x16_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  int8x16_t v35;
  int8x16_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __int128 v42[5];
  _BYTE v43[216];
  uint64_t v44[27];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  type metadata accessor for ReactionNotice(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_78();
  v9 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  outlined init with take of MultiwayViewController.ViewContent?(v9, (uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v43, (uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_12_109(v44);
  if (v10)
    goto LABEL_36;
  v11 = (unsigned __int8 *)(v44[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  v12 = OUTLINED_FUNCTION_1();
  v13 = *v11;
  v14 = OUTLINED_FUNCTION_439(v12, (uint64_t)&v38);
  if (v41)
  {
    OUTLINED_FUNCTION_397_0(v14, v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)&v34);
    v16 = outlined destroy of ConversationControlsType((uint64_t)&v38);
  }
  else
  {
    outlined init with take of Notice(&v38, (uint64_t)v42);
    v17 = outlined init with take of Notice(v42, (uint64_t)&v33);
    OUTLINED_FUNCTION_397_0(v17, v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)&v34);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
    v16 = OUTLINED_FUNCTION_97();
    if ((_DWORD)v16)
    {
      v19 = OUTLINED_FUNCTION_311_4();
      OUTLINED_FUNCTION_15_12((uint64_t)v19, type metadata accessor for ReactionNotice);
      goto LABEL_36;
    }
  }
  OUTLINED_FUNCTION_439(v16, (uint64_t)&v34);
  if (!v37)
  {
    OUTLINED_FUNCTION_403();
    v30 = v39;
    v31 = v40;
    __swift_project_boxed_opaque_existential_1(&v38, v39);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v31 + 64))(&v34, v30, v31);
    if (v34 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = OUTLINED_FUNCTION_13();
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
      {
        OUTLINED_FUNCTION_446_0();
        goto LABEL_8;
      }
    }
    if (v13 == 1)
    {
      LOBYTE(v34) = 0;
      OUTLINED_FUNCTION_201_3();
    }
    OUTLINED_FUNCTION_311_4();
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_402();
LABEL_8:
  ConversationController.lookupActiveConversation()();
  if (v36.i64[0])
  {
    OUTLINED_FUNCTION_403();
    v20 = v39;
    v21 = v40;
    v22 = __swift_project_boxed_opaque_existential_1(&v38, v39);
    v23 = v20;
    v24 = v22;
    Conversation.isContinuitySession.getter(v23, v21);
    if ((v25 & 1) != 0)
    {
      OUTLINED_FUNCTION_439(v25, (uint64_t)&v34);
      if (v37 == 2)
      {
        OUTLINED_FUNCTION_402();
      }
      else if (v37 != 6
             || v34 != 5
             || (v26 = vorrq_s8(v35, v36),
                 *(_QWORD *)&vorr_s8(*(int8x8_t *)v26.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v26, v26, 8uLL))))
      {
        OUTLINED_FUNCTION_402();
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        v27 = OUTLINED_FUNCTION_17_2();
        OUTLINED_FUNCTION_3(v27, (uint64_t)&static Logger.conversationKit);
        v28 = OUTLINED_FUNCTION_12_0();
        if (OUTLINED_FUNCTION_5_3(v28))
        {
          v29 = (uint8_t *)OUTLINED_FUNCTION_105();
          *(_WORD *)v29 = 0;
          OUTLINED_FUNCTION_130(&dword_1BD004000, v24, v1, "Skipping update for non-laguna banner while presentationContext mode is continuitySession", v29);
          OUTLINED_FUNCTION_60();
        }
        OUTLINED_FUNCTION_311_4();

LABEL_25:
        OUTLINED_FUNCTION_446_0();
        goto LABEL_36;
      }
    }
    OUTLINED_FUNCTION_446_0();
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v34, &demangling cache variable for type metadata for Conversation?);
  }
  if ((InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)(v7, v3 & 1) & 1) != 0
    && (v5 & 1) != 0
    && !v13)
  {
    LOBYTE(v34) = 1;
    OUTLINED_FUNCTION_201_3();
  }
  OUTLINED_FUNCTION_311_4();
LABEL_36:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall MultiwayViewController.presentCallDetails()()
{
  void (*v0)(unint64_t);
  uint64_t v1;
  void *v2;
  unint64_t v3;
  id v4;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator);
  if (v2)
  {
    v4 = OUTLINED_FUNCTION_220_3(v2);
    v3 = OUTLINED_FUNCTION_444();
    v0(v3);
    OUTLINED_FUNCTION_7_1(v4);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

void MultiwayViewController.presentShareCardViewController(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id *v3;
  id v4;
  void *v5;
  _BYTE v6[216];
  uint64_t v7[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v1, (uint64_t)v6);
  OUTLINED_FUNCTION_6_110((uint64_t)v6, (uint64_t)v7);
  OUTLINED_FUNCTION_12_109(v7);
  if (!v2)
  {
    v3 = (id *)(*(_QWORD *)(v1 + 24)
              + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
    OUTLINED_FUNCTION_1();
    if (*v3)
    {
      v4 = *v3;
      v5 = (void *)OUTLINED_FUNCTION_13_6();
      ConversationHUDViewController.presentShareCardViewController(_:)(v5);

    }
  }
  OUTLINED_FUNCTION_18();
}

void closure #1 in MultiwayViewController.showKickParticipantAlert(toKick:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  id v9;

  v2 = a2 + 16;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1BD004000, v4, v5, "MultiwayViewController: did tap on kick from the kick participant alert", v6, 2u);
    MEMORY[0x1C3B751B8](v6, -1, -1);
  }

  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](v2);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = *(id *)(v7 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

    ConversationController.kick(_:)();
  }
}

void closure #2 in MultiwayViewController.showKickParticipantAlert(toKick:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  void *v8;

  v2 = a2 + 16;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1BD004000, v4, v5, "MultiwayViewController: did tap on cancel from the kick participant alert", v6, 2u);
    MEMORY[0x1C3B751B8](v6, -1, -1);
  }

  swift_beginAccess();
  v7 = (void *)MEMORY[0x1C3B752C0](v2);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void protocol witness for ConversationControlsDismissalTimerDelegate.invalidateAndRescheduleTimer(reschedule:) in conformance MultiwayViewController()
{
  MultiwayViewController.invalidateAndRescheduleTimer(reschedule:)(0);
}

void MultiwayViewController.inCallControlsViewController(_:didTapBuzz:)()
{
  ConversationController.buzz(_:)();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.inCallControlsViewController(_:didApprove:)()
{
  ConversationController.approve(_:)();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.inCallControlsViewController(_:didDismiss:)()
{
  ConversationController.dismiss(_:)();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.inCallControlsViewController(_:didKick:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v2 = OUTLINED_FUNCTION_75_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_149_6();
  v4 = OUTLINED_FUNCTION_69_0(v0, 1, v2);
  if (v5)
  {
    OUTLINED_FUNCTION_219(v4, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    OUTLINED_FUNCTION_343_3(v0);
    v6 = ConversationController.canKick(_:)();
    if ((v6 & 1) != 0)
      OUTLINED_FUNCTION_505_0();
    OUTLINED_FUNCTION_22_29(v6, type metadata accessor for Participant);
  }
  OUTLINED_FUNCTION_91();
}

uint64_t MultiwayViewController.hasConnectedToCall.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_1();
  v2 = *(_QWORD *)(v1 + 8);
  v3 = OUTLINED_FUNCTION_15_6();
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96);
  swift_unknownObjectRetain();
  LOBYTE(v2) = v4(v3, v2);
  OUTLINED_FUNCTION_10();
  return v2 & 1;
}

void MultiwayViewController.participantGridViewController(_:didUpdateVisibleParticipantsFrom:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  void (*v83)();
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  _QWORD v91[30];
  _BYTE v92[216];
  uint64_t v93[28];

  OUTLINED_FUNCTION_93();
  v85 = v3;
  v5 = v4;
  v88 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = (id)OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_5_27();
  v87 = v10;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v73 - v12;
  v14 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v14, (uint64_t)v92);
  OUTLINED_FUNCTION_6_110((uint64_t)v92, (uint64_t)v93);
  v15 = OUTLINED_FUNCTION_12_109(v93);
  if (!v17)
  {
    v74 = v0;
    v18 = *(_QWORD *)(v5 + 16);
    v83 = (void (*)())v5;
    v84 = v1;
    if (v18)
    {
      v19 = MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_394_2(v15, v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v91);
      v90 = v19;
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v18, 0);
      OUTLINED_FUNCTION_37_3();
      v21 = v5 + v20;
      v22 = *(_QWORD **)(v1 + 72);
      v86 = v22;
      do
      {
        _s15ConversationKit11ParticipantVWOcTm_4();
        OUTLINED_FUNCTION_393_1();
        OUTLINED_FUNCTION_139((uint64_t)v13, v23, v24);
        outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
        v25 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_53_31(0, *(_QWORD *)(v25 + 16) + 1);
          v22 = v86;
          v25 = v90;
        }
        v27 = *(_QWORD *)(v25 + 16);
        v26 = *(_QWORD *)(v25 + 24);
        if (v27 >= v26 >> 1)
        {
          OUTLINED_FUNCTION_53_31(v26 > 1, v27 + 1);
          v22 = v86;
          v25 = v90;
        }
        *(_QWORD *)(v25 + 16) = v27 + 1;
        OUTLINED_FUNCTION_37_3();
        OUTLINED_FUNCTION_139(v25 + v28 + *(_QWORD *)(v2 + 72) * v27, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
        v90 = v25;
        v21 += (uint64_t)v22;
        --v18;
      }
      while (v18);
    }
    else
    {
      OUTLINED_FUNCTION_394_2(v15, v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v91);
      v25 = MEMORY[0x1E0DEE9D8];
    }
    v29 = v87;
    v30 = v85;
    v31 = v85[2];
    v32 = MEMORY[0x1E0DEE9D8];
    if (v31)
    {
      v91[0] = MEMORY[0x1E0DEE9D8];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v31, 0);
      OUTLINED_FUNCTION_37_3();
      v34 = (char *)v30 + v33;
      v86 = *(_QWORD **)(v35 + 72);
      do
      {
        OUTLINED_FUNCTION_420_1();
        OUTLINED_FUNCTION_393_1();
        OUTLINED_FUNCTION_139((uint64_t)v29, v36, v37);
        OUTLINED_FUNCTION_40_58((uint64_t)v8);
        v32 = v91[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_53_31(0, *(_QWORD *)(v32 + 16) + 1);
          v32 = v91[0];
        }
        v39 = *(_QWORD *)(v32 + 16);
        v38 = *(_QWORD *)(v32 + 24);
        if (v39 >= v38 >> 1)
        {
          OUTLINED_FUNCTION_53_31(v38 > 1, v39 + 1);
          v32 = v91[0];
        }
        *(_QWORD *)(v32 + 16) = v39 + 1;
        OUTLINED_FUNCTION_37_3();
        v41 = v32 + v40 + *(_QWORD *)(v2 + 72) * v39;
        v29 = v87;
        OUTLINED_FUNCTION_139(v41, (uint64_t)v87, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
        v91[0] = v32;
        v34 = (char *)v86 + (_QWORD)v34;
        --v31;
      }
      while (v31);
    }
    v42 = swift_bridgeObjectRetain();
    specialized _ArrayProtocol.filter(_:)(v42, v32);
    v90 = v43;
    v44 = OUTLINED_FUNCTION_35_0();
    specialized _ArrayProtocol.filter(_:)(v44, v25);
    specialized Array.append<A>(contentsOf:)();
    v45 = v90;
    v46 = *(_QWORD *)(v90 + 16);
    if (v46)
    {
      v47 = v84;
      OUTLINED_FUNCTION_37_3();
      v49 = v45 + v48;
      v50 = (_QWORD *)(v74 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
      v89 = (id)v93[0];
      v79 = v93[3];
      v80 = v93[1];
      v77 = v93[17];
      v78 = v93[12];
      v73 = v45;
      OUTLINED_FUNCTION_8_8();
      v81 = v50;
      OUTLINED_FUNCTION_1();
      v76 = *(_QWORD *)(v47 + 72);
      v75 = xmmword_1BD646730;
      v51 = (void *)v80;
      do
      {
        v88 = v46;
        OUTLINED_FUNCTION_424_0();
        v52 = v89;
        ParticipantListViewController.update(participant:broadcastingState:)(v53);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantsViewController>);
        v54 = OUTLINED_FUNCTION_15();
        *(_OWORD *)(v54 + 16) = v75;
        v55 = OUTLINED_FUNCTION_514_0();
        *(_QWORD *)(v54 + 56) = v55;
        v84 = v55;
        *(_QWORD *)(v54 + 64) = &protocol witness table for ParticipantGridViewController;
        *(_QWORD *)(v54 + 32) = v51;
        *(_QWORD *)(v54 + 96) = OUTLINED_FUNCTION_519_0();
        *(_QWORD *)(v54 + 104) = &protocol witness table for ParticipantListViewController;
        *(_QWORD *)(v54 + 72) = v52;
        *(_QWORD *)(v54 + 136) = OUTLINED_FUNCTION_518_0();
        *(_QWORD *)(v54 + 144) = &protocol witness table for InCallBannerHostViewController;
        v56 = (void *)v79;
        *(_QWORD *)(v54 + 112) = v79;
        v85 = (_QWORD *)(v54 + 112);
        *(_QWORD *)(v54 + 176) = ObjC metadata update function for MostActiveParticipantViewController();
        *(_QWORD *)(v54 + 184) = &protocol witness table for MostActiveParticipantViewController;
        v57 = (void *)v78;
        *(_QWORD *)(v54 + 152) = v78;
        v86 = (_QWORD *)(v54 + 152);
        *(_QWORD *)(v54 + 216) = OUTLINED_FUNCTION_516_0();
        *(_QWORD *)(v54 + 224) = &protocol witness table for CaptionsViewController;
        v58 = (void *)v77;
        *(_QWORD *)(v54 + 192) = v77;
        v87 = (_QWORD *)(v54 + 192);
        v82 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v54 + 32), v55);
        v59 = v81;
        v60 = *v81;
        v83 = protocol witness for ParticipantsViewController.update(participant:localParticipantOrientation:) in conformance ParticipantGridViewController;
        v61 = v51;
        v62 = v89;
        v63 = v56;
        v64 = v57;
        v65 = v58;
        ((void (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v83)(v49, v60, v84, &protocol witness table for ParticipantGridViewController);
        v66 = *(_QWORD *)(v54 + 96);
        v67 = *(_QWORD *)(v54 + 104);
        v68 = (_QWORD *)OUTLINED_FUNCTION_202_0();
        __swift_project_boxed_opaque_existential_1(v68, v69);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v67 + 56))(v49, *v59, v66, v67);
        __swift_project_boxed_opaque_existential_1(v85, *(_QWORD *)(v54 + 136));
        OUTLINED_FUNCTION_163_5();
        __swift_project_boxed_opaque_existential_1(v86, *(_QWORD *)(v54 + 176));
        OUTLINED_FUNCTION_163_5();
        v70 = *(_QWORD *)(v54 + 216);
        v71 = *(_QWORD *)(v54 + 224);
        __swift_project_boxed_opaque_existential_1(v87, v70);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v49, *v59, v70, v71);
        swift_setDeallocating();
        v72 = v88;
        specialized _ContiguousArrayStorage.__deallocating_deinit();
        v49 += v76;
        v46 = v72 - 1;
      }
      while (v46);
      OUTLINED_FUNCTION_2_1();
    }
    OUTLINED_FUNCTION_2_1();
    MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()();
    MultiwayViewController.updateDeskViewButtonVisibility()();
    MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(1);
    MultiwayViewController.needsUpdatePresentationContexts.setter(1);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v92);
  }
  OUTLINED_FUNCTION_52_1();
}

void MultiwayViewController.participantGridViewController(_:participantDidHideSash:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  id v5;
  id *v6;
  void (*v7)(void);
  id v8;
  _BYTE v9[216];
  uint64_t v10[27];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v2, (uint64_t)v9);
  OUTLINED_FUNCTION_6_110((uint64_t)v9, (uint64_t)v10);
  OUTLINED_FUNCTION_12_109(v10);
  if (!v3)
  {
    v4 = (void *)v10[7];
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v9);
    v5 = v4;
    MultiwayViewController.bringSubviewToFront(_:)(v4);

    v6 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
    OUTLINED_FUNCTION_1();
    v7 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v6) + 0x180);
    v8 = *v6;
    v7();
    OUTLINED_FUNCTION_14_18();
    if ((v7 & 1) != 0)
      MultiwayViewController.updateZoomControls(for:)(0xFCu);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v9);
  }
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.participantGridViewController(_:didUpdateFullScreenFocusedParticipantFrom:newParticipant:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(a2, a3);
}

void MultiwayViewController.participantGridViewController(_:didDodgeMediaPipWithActiveParticipants:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _BYTE v7[216];
  uint64_t v8[4];
  void *v9;
  uint64_t v10;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_40_60(v1, (uint64_t)v7);
  OUTLINED_FUNCTION_40_60((uint64_t)v7, (uint64_t)v8);
  OUTLINED_FUNCTION_12_109(v8);
  if (!v2)
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_25_2();
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v7);
    OUTLINED_FUNCTION_134_1();
    Array<A>.participants(notIn:)();
    OUTLINED_FUNCTION_53();
    ParticipantListViewController.update(with:updateReason:)();
    OUTLINED_FUNCTION_133();
    ParticipantListViewController.participantCount.getter();
    MultiwayViewController.setParticipantListState(_:animated:)(v3 > 0, 1);
    v4 = v9;
    if (v9)
    {
      v5 = v10;
      swift_getObjectType();
      v6 = v4;
      ParticipantListViewController.participantCount.getter();
      (*(void (**)(void))(v5 + 72))();

    }
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v7);
  }
  OUTLINED_FUNCTION_70_26();
}

void MultiwayViewController.participantGridViewController(_:didSetOverlayHidden:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  _BYTE v6[216];
  _BYTE v7[216];
  uint64_t v8[27];

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v4, (uint64_t)v7);
  OUTLINED_FUNCTION_6_110((uint64_t)v7, (uint64_t)v8);
  OUTLINED_FUNCTION_12_109(v8);
  if (!v5)
  {
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v7, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v6);
    ParticipantListViewController.setOverlayHidden(_:)(a2 & 1);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v7);
  }
  OUTLINED_FUNCTION_18();
}

uint64_t MultiwayViewController.configurableRosterCellWidth.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _BYTE v5[216];
  uint64_t v6[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v1, (uint64_t)v5);
  OUTLINED_FUNCTION_5_131((uint64_t)v5, (uint64_t)v6);
  OUTLINED_FUNCTION_12_109(v6);
  if (v2)
    return 0;
  v3 = *(_QWORD *)(v1 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidth;
  OUTLINED_FUNCTION_1();
  return *(_QWORD *)v3;
}

uint64_t protocol witness for ParticipantListViewControllerDelegate.configurableRosterCellWidth.getter in conformance MultiwayViewController()
{
  return MultiwayViewController.configurableRosterCellWidth.getter();
}

void MultiwayViewController.cameraViewController(_:didRenderFrame:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id *v21;
  id v22;
  uint64_t v23;
  _BYTE v24[216];
  uint64_t v25[27];

  v3 = v2;
  v6 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_54_41(v6, (uint64_t)v24);
  OUTLINED_FUNCTION_54_41((uint64_t)v24, (uint64_t)v25);
  v7 = OUTLINED_FUNCTION_12_109(v25);
  if (!v8)
  {
    v9 = *(void **)(v6 + 64);
    if (v9)
    {
      OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
      v10 = a1;
      v11 = v9;
      OUTLINED_FUNCTION_311_0();
      OUTLINED_FUNCTION_435();
      OUTLINED_FUNCTION_8_20();

      if ((a1 & 1) != 0)
      {
        v13 = OUTLINED_FUNCTION_9(v12, sel_pixelBuffer);
        objc_msgSend(a2, sel_timestamp);
        v14 = v23;
        v15 = objc_allocWithZone(MEMORY[0x1E0CF22D8]);
        OUTLINED_FUNCTION_43_15();
        v19 = @nonobjc AVCVideoFrame.init(pixelBuffer:time:imageData:)(v16, v17, v18, v14, 0, 0xF000000000000000);
        if (v19)
        {
          v20 = v19;
          v21 = (id *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects);
          OUTLINED_FUNCTION_1();
          if (*v21)
          {
            v22 = *v21;
            OUTLINED_FUNCTION_48_1(v22, sel_encodeProcessedVideoFrame_);

          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_70_26();
}

Swift::Void __swiftcall MultiwayViewController.cameraViewControllerPresentationRectWasDoubleTapped(_:)(CFXCameraViewController *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  _BYTE v16[216];
  uint64_t v17[27];

  v4 = v1;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v7 = OUTLINED_FUNCTION_7_22();
  *v2 = v7;
  OUTLINED_FUNCTION_17(v7, *MEMORY[0x1E0DEF740]);
  v8 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v9, (uint64_t)v16);
  OUTLINED_FUNCTION_6_110((uint64_t)v16, (uint64_t)v17);
  OUTLINED_FUNCTION_12_109(v17);
  if (!v10)
  {
    v11 = *(void **)(v17[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v16);
    v12 = v11;
    v8 = UIView.tapInteractions(withTapCount:)((id)2);

    if (!(v8 >> 62))
    {
      if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v8 & 0xC000000000000001) == 0, v8);
        if ((v8 & 0xC000000000000001) != 0)
          v13 = (id)MEMORY[0x1C3B73D18](0, v8);
        else
          v13 = *(id *)(v8 + 32);
        v14 = v13;
        OUTLINED_FUNCTION_27();
        TapInteraction.triggerInteraction()();

        goto LABEL_11;
      }
LABEL_10:
      OUTLINED_FUNCTION_27();
LABEL_11:
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v16);
      goto LABEL_12;
    }
LABEL_9:
    OUTLINED_FUNCTION_5_0();
    v15 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
    if (v15)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_12:
  OUTLINED_FUNCTION_70_26();
}

void MultiwayViewController.cameraViewController(_:presentationRectWasPinchedWith:scale:velocity:)(double a1)
{
  uint64_t v1;
  id *v3;
  void (*v4)(uint64_t, double);
  id v5;
  uint64_t v6;

  v3 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
  OUTLINED_FUNCTION_1();
  v4 = *(void (**)(uint64_t, double))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v3) + 0x198);
  v5 = *v3;
  v6 = OUTLINED_FUNCTION_13_6();
  v4(v6, a1);

  OUTLINED_FUNCTION_289_0();
}

void MultiwayViewController.cameraViewController(_:didChange:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v6 = v5;
  v16 = *(_QWORD *)(OUTLINED_FUNCTION_285_0() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  v15 = OUTLINED_FUNCTION_20_3();
  v8 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v10 = (void *)OUTLINED_FUNCTION_7_22();
  v11 = (_QWORD *)OUTLINED_FUNCTION_15();
  v11[2] = v6;
  v11[3] = v0;
  v11[4] = v4;
  v12 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v13 = v6;
  v14 = v0;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_431((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_290_4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v2, v1, v12);
  _Block_release(v12);

  OUTLINED_FUNCTION_39_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v15);
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in MultiwayViewController.cameraViewController(_:didChange:)(void *a1, uint64_t a2, unint64_t a3)
{
  void *v5;
  void *v6;
  id v7;
  char v8;
  void *v9;
  void *v10;
  _QWORD *v11;

  MultiwayViewController.effectsViewController.getter();
  if (v5)
  {
    v6 = v5;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
    v7 = a1;
    v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) != 0)
    {
      MultiwayViewController.effectsControlsViewController.getter();
      if (v9)
      {
        v10 = v9;
        type metadata accessor for EffectsControlsViewController();
        v11 = (_QWORD *)swift_dynamicCastClass();
        if (v11)
        {
          (*(void (**)(BOOL))((*MEMORY[0x1E0DEEDD8] & *v11) + 0xB0))(a3 != 0);
          MultiwayViewController.updateLocalParticipantControls()();
        }

      }
      specialized EffectsHandler.updateAVCEffects(with:)(a3);
    }
  }
}

void MultiwayViewController.shouldAlwaysPresentExpandedApps(for:)()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  _QWORD *v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController);
  if (v1)
  {
    v2 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78);
    v3 = v1;
    v4 = OUTLINED_FUNCTION_13_6();
    v2(v4);
    OUTLINED_FUNCTION_37_0();
  }
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.effectBrowserViewController(_:presentExpandedAppViewController:animated:completion:)()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController))
  {
    OUTLINED_FUNCTION_291_5();
    v2 = v1;
    OUTLINED_FUNCTION_113_14();
    OUTLINED_FUNCTION_4_21(v3);
  }
  else
  {
    OUTLINED_FUNCTION_289_0();
  }
}

void MultiwayViewController.effectBrowserViewController(_:dismissExpandedAppViewController:animated:completion:)()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController))
  {
    OUTLINED_FUNCTION_291_5();
    v2 = v1;
    OUTLINED_FUNCTION_113_14();
    OUTLINED_FUNCTION_4_21(v3);
  }
  else
  {
    OUTLINED_FUNCTION_289_0();
  }
}

void MultiwayViewController.expandedAppViewControllerSize(for:)()
{
  char *v0;
  void (*v1)(uint64_t);
  void *v2;
  uint64_t v3;

  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController];
  if (v2)
  {
    OUTLINED_FUNCTION_421_0(v2);
    v3 = OUTLINED_FUNCTION_13_6();
    v1(v3);

  }
  OUTLINED_FUNCTION_235();
}

_QWORD *MultiwayViewController.effectBrowserViewController(_:willChangeDockHeight:)(double a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  _QWORD *result;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void (*v19)(double);
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64[216];
  uint64_t v65[9];
  _QWORD *v66;

  v2 = v1;
  v4 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v4, (uint64_t)v64);
  OUTLINED_FUNCTION_6_110((uint64_t)v64, (uint64_t)v65);
  result = (_QWORD *)OUTLINED_FUNCTION_12_109(v65);
  if (!v6)
  {
    v7 = (_QWORD *)(v65[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
    result = (_QWORD *)OUTLINED_FUNCTION_1();
    v15 = *v7 - 2;
    if (v15 <= 4 && ((0x1Bu >> v15) & 1) != 0)
    {
      v16 = qword_1BD665970[v15];
      v17 = qword_1BD665998[v15];
      v18 = v66;
      if (v66)
      {
        v19 = *(void (**)(double))((*MEMORY[0x1E0DEEDD8] & *v66) + 0xC8);
        OUTLINED_FUNCTION_146_5((uint64_t)result, (uint64_t)outlined copy of MultiwayViewController.ViewContent?, v9, v10, v11, v12, v13, v14, v29, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
          v41,
          v42,
          v43,
          v44,
          v45,
          v46,
          v47,
          v48,
          v49,
          v50,
          v51,
          v52,
          v53,
          v54,
          v55,
          v56,
          v57,
          v58,
          v59,
          v60,
          v61,
          v62,
          v63,
          v64[0]);
        v20 = v18;
        v19(a1);

      }
      else
      {
        OUTLINED_FUNCTION_398_1((uint64_t)result, v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?, v10, v11, v12, v13, v14, v29, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
          v41,
          v42,
          v43,
          v44,
          v45,
          v46,
          v47,
          v48,
          v49,
          v50,
          v51,
          v52,
          v53,
          v54,
          v55,
          v56,
          v57,
          v58,
          v59,
          v60,
          v61,
          v62,
          v63,
          v64[0]);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)&v31);
      }
      if (a1 <= 50.0)
        v21 = v17;
      else
        v21 = v16;
      v22 = OUTLINED_FUNCTION_18_71(v2, sel_setControlsState_animated_, v21);
      return OUTLINED_FUNCTION_146_5((uint64_t)v22, (uint64_t)outlined consume of MultiwayViewController.ViewContent?, v23, v24, v25, v26, v27, v28, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
               v41,
               v42,
               v43,
               v44,
               v45,
               v46,
               v47,
               v48,
               v49,
               v50,
               v51,
               v52,
               v53,
               v54,
               v55,
               v56,
               v57,
               v58,
               v59,
               v60,
               v61,
               v62,
               v63,
               v64[0]);
    }
  }
  return result;
}

id MultiwayViewController.didCapture(_:)(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  void *v5;
  double (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id result;
  uint64_t v13;
  void *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  NSData v35;
  uint64_t v36;
  void *v37;
  id v38;
  double (*v39)();
  _QWORD v40[6];
  _BYTE v41[72];

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  v5 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  if (v5)
  {
    v6 = 0;
  }
  else
  {
    *(_QWORD *)v41 = 0;
    *(_OWORD *)&v41[8] = *(_OWORD *)(v4 + 8);
    *(_OWORD *)&v41[24] = *(_OWORD *)(v4 + 24);
    *(_OWORD *)&v41[40] = *(_OWORD *)(v4 + 40);
    *(_OWORD *)&v41[56] = *(_OWORD *)(v4 + 56);
    OUTLINED_FUNCTION_59((uint64_t)a1, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v7 = OUTLINED_FUNCTION_7_22();
    v8 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v8 + 16) = v2;
    *(_QWORD *)(v8 + 24) = v41;
    v9 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v9 + 16) = partial apply for closure #1 in MultiwayViewController.didCapture(_:);
    *(_QWORD *)(v9 + 24) = v8;
    v40[4] = partial apply for thunk for @callee_guaranteed () -> ();
    v40[5] = v9;
    v40[0] = MEMORY[0x1E0C809B0];
    v40[1] = 1107296256;
    v40[2] = thunk for @escaping @callee_guaranteed () -> ();
    v40[3] = &block_descriptor_53_1;
    v10 = _Block_copy(v40);
    v11 = v2;
    OUTLINED_FUNCTION_15_22();
    swift_release();
    dispatch_sync((dispatch_queue_t)v7, v10);

    _Block_release(v10);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    result = (id)OUTLINED_FUNCTION_17_22();
    if ((v7 & 1) != 0)
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    v13 = *(_QWORD *)&v41[64];
    v14 = *(void **)v4;
    v15 = *(void **)v41;
    v16 = *(_OWORD *)&v41[16];
    *(_OWORD *)v4 = *(_OWORD *)v41;
    *((_OWORD *)v4 + 1) = v16;
    v17 = *(_OWORD *)&v41[48];
    *((_OWORD *)v4 + 2) = *(_OWORD *)&v41[32];
    *((_OWORD *)v4 + 3) = v17;
    *((_QWORD *)v4 + 8) = v13;
    v18 = v15;

    v5 = *(void **)v4;
    if (!*(_QWORD *)v4)
    {
      v39 = partial apply for closure #1 in MultiwayViewController.didCapture(_:);
      return (id)outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v39);
    }
    v6 = partial apply for closure #1 in MultiwayViewController.didCapture(_:);
  }
  v20 = *((double *)v4 + 7);
  v19 = *((double *)v4 + 8);
  v22 = *((double *)v4 + 5);
  v21 = *((double *)v4 + 6);
  v24 = *((double *)v4 + 3);
  v23 = *((double *)v4 + 4);
  v26 = *((double *)v4 + 1);
  v25 = *((double *)v4 + 2);
  objc_opt_self();
  v27 = swift_dynamicCastObjCClass();
  if (!v27)
  {
LABEL_15:
    v39 = v6;
    return (id)outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v39);
  }
  v28 = (void *)v27;
  v29 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController]
      + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_1();
  if (*(char *)(v29 + 16) < 0)
  {
    if ((unint64_t)*(unsigned __int8 *)(v29 + 1) << 8 == 256)
      v30 = 3;
    else
      v30 = 4;
  }
  else
  {
    v30 = 4;
  }
  v31 = v5;
  result = (id)outlined bridged method (pb) of @objc CNContact.imageData.getter(a1);
  if (v32 >> 60 == 15)
    goto LABEL_19;
  v33 = (uint64_t)result;
  v34 = v32;
  v35.super.isa = Data._bridgeToObjectiveC()().super.isa;
  v36 = outlined consume of Data?(v33, v34);
  result = OUTLINED_FUNCTION_9(v36, sel_pixelBuffer);
  if (result)
  {
    v37 = result;
    v38 = OUTLINED_FUNCTION_9((uint64_t)result, sel_depthPixelBuffer);
    objc_msgSend(v28, sel_renderFrameWithImageDataArchive_imagePixelBuffer_depthPixelBuffer_orientation_presentationRect_contentsRect_, v35.super.isa, v37, v38, v30, v26, v25, v24, v23, v22, v21, v20, v19);

    goto LABEL_15;
  }
LABEL_20:
  __break(1u);
  return result;
}

__n128 closure #1 in MultiwayViewController.didCapture(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v20[216];
  uint64_t v21[27];
  _BYTE v22[216];
  uint64_t v23[27];

  v3 = a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v3, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v22, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v23) != 1)
  {
    v5 = *(void **)(v3 + 64);
    if (v5)
    {
      objc_opt_self();
      v6 = swift_dynamicCastObjCClass();
      if (v6)
      {
        v7 = v6;
        outlined init with take of MultiwayViewController.ViewContent?(v3, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v20, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        if (getEnumTag for TapInteraction.EventType(v21) != 1)
        {
          v8 = *(void **)(v3 + 56);
          v9 = v5;
          objc_msgSend(v8, sel_frame);
          v10 = *(void **)a2;
          *(_QWORD *)a2 = v7;
          *(_QWORD *)(a2 + 8) = v11;
          *(_QWORD *)(a2 + 16) = v12;
          *(_QWORD *)(a2 + 24) = v13;
          *(_QWORD *)(a2 + 32) = v14;
          *(_QWORD *)(a2 + 40) = 0;
          *(_QWORD *)(a2 + 48) = 0;
          __asm { FMOV            V0.2D, #1.0 }
          *(_OWORD *)(a2 + 56) = _Q0;

        }
      }
    }
  }
  return result;
}

UIView *MultiwayViewController.setupReducedMotionAnimation(forSnapshot:animations:completion:)(void *a1, uint64_t a2, uint64_t *a3)
{
  void *v3;
  UIView *result;
  UIView *v8;
  UIView *v9;
  uint64_t v10;
  uint64_t v11;

  result = (UIView *)objc_msgSend(v3, sel_view);
  if (result)
  {
    v8 = result;
    -[UIView addSubview:](result, sel_addSubview_, a1);

    result = (UIView *)objc_msgSend(v3, sel_view);
    if (result)
    {
      v9 = result;
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*a3);
      UIView.addConstraintsToFill(_:insets:)(v9, *MEMORY[0x1E0DC3298]);

      (*(void (**)(void))a2)();
      swift_release();
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = a1;
      *(_QWORD *)a2 = partial apply for closure #1 in FlashView.flash(completion:);
      *(_QWORD *)(a2 + 8) = v10;
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = a1;
      *a3 = (uint64_t)partial apply for closure #2 in closure #1 in ParticipantGridView.startAnimations(_:animationStyle:completion:);
      a3[1] = v11;
      return (UIView *)a1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void closure #1 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(void *a1, void (*a2)(void))
{
  id v3;
  void *v4;

  v3 = objc_msgSend(a1, sel_view);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_layoutIfNeeded);

    if (a2)
      a2();
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #2 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(char a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t result;
  void (*v7)(_QWORD);

  result = swift_beginAccess();
  v7 = *(void (**)(_QWORD))(a2 + 16);
  if (v7)
  {
    swift_retain();
    v7(a1 & 1);
    result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v7);
  }
  if (a3)
    return a3(a1 & 1);
  return result;
}

BOOL MultiwayViewController.shouldHideStatusBar.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[216];
  uint64_t v5[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v4, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v5) == 1)
    return 0;
  v3 = (_BYTE *)(v5[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  return *v3 == 0;
}

void MultiwayViewController.setControlsState(_:animated:)()
{
  char *v0;
  uint64_t *v1;
  char *v2;
  char v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unsigned int v13;
  char *v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _BYTE v26[216];
  _BYTE v27[216];
  uint64_t v28[28];

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v9 = OUTLINED_FUNCTION_7_22();
  *v1 = v9;
  OUTLINED_FUNCTION_384_0(v9, *MEMORY[0x1E0DEF740]);
  _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_275_3();
  if ((v0 & 1) != 0)
  {
    v10 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_186_3(v10, (uint64_t)v27);
    OUTLINED_FUNCTION_186_3((uint64_t)v27, (uint64_t)v28);
    OUTLINED_FUNCTION_12_109(v28);
    if (!v11)
    {
      OUTLINED_FUNCTION_400_2(v26, v28);
      v12 = v6 - 4;
      v13 = (v6 < 7) & (0x6Cu >> v6);
      v14 = (char *)(v28[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      OUTLINED_FUNCTION_1();
      v15 = *v14;
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v27, (uint64_t)&v25, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      OUTLINED_FUNCTION_42_54();
      MultiwayViewController.effectsBrowserIsOpaque.getter();
      if ((v16 & 1) != 0)
        v17 = 2;
      else
        v17 = 1;
      if (!v6)
      {
        if (static Platform.current.getter() == 1)
        {
          if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
            v6 = 0;
          else
            v6 = v17;
        }
        else
        {
          v6 = 0;
        }
      }
      MultiwayViewConstraintsController.inCallControlsState.setter(v6);
      v18 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
      v19 = OUTLINED_FUNCTION_15_6();
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 320))(v19, v18) & (v12 > 2);
      v21 = OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_400_2((void *)(v21 + 16), v26);
      *(_BYTE *)(v21 + 232) = v12 < 3;
      *(_BYTE *)(v21 + 233) = v13;
      *(_QWORD *)(v21 + 240) = v2;
      *(_BYTE *)(v21 + 248) = v15;
      v22 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v22 + 16) = v2;
      v23 = v2;
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v27);
      v24 = v23;
      MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(v4 & 1, v20, (void (*)(id))partial apply for closure #1 in MultiwayViewController.setControlsState(_:animated:), v21, (void (*)(uint64_t))partial apply for closure #2 in MultiwayViewController.setControlsState(_:animated:), v22);
      OUTLINED_FUNCTION_17_22();
      OUTLINED_FUNCTION_27_0();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v27);
    }
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in MultiwayViewController.setControlsState(_:animated:)(uint64_t a1, char a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  _BYTE *v10;
  id v11;
  void *v12;
  double v13;
  id *v14;
  uint64_t (*v15)(void);
  id v16;
  _BYTE v17[8];
  id v18;

  v10 = (_BYTE *)(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isExpanded);
  swift_beginAccess();
  *v10 = a2;
  InCallControlsViewController.isExpanded.didset();
  outlined init with take of MultiwayViewController.ViewContent?(a1 + 72, (uint64_t)v17, &demangling cache variable for type metadata for EffectsControlsViewController?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v17, (uint64_t)&v18, &demangling cache variable for type metadata for EffectsControlsViewController?);
  if (v18)
  {
    v11 = objc_msgSend(v18, sel_view);
    if (!v11)
    {
      __break(1u);
      return;
    }
    v12 = v11;
    v13 = 0.0;
    if ((a3 & 1) != 0)
      v13 = 1.0;
    objc_msgSend(v11, sel_setAlpha_, v13);

  }
  v14 = (id *)(a4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
  swift_beginAccess();
  v15 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v14) + 0x180);
  v16 = *v14;
  LOBYTE(v15) = v15();

  if ((v15 & 1) != 0)
    MultiwayViewController.updateZoomControls(for:)(a5);
}

void closure #2 in MultiwayViewController.setControlsState(_:animated:)(char a1)
{
  id v1;
  id v2;

  if ((a1 & 1) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

    if (!v2)
      MultiwayViewController.needsUpdatePresentationContexts.setter(1);
  }
}

void closure #1 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  double v12;
  uint64_t v13;
  _BYTE v14[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) == 0)
    InCallBannerHostViewController.hudTransition()();
  swift_beginAccess();
  if (*(_BYTE *)(a3 + 16))
    v12 = 1.0;
  else
    v12 = 0.0;
  ParticipantView.updateGradientOverlayView(isHidden:alpha:)(2, *(uint64_t *)&v12, 0);
  v13 = *(_QWORD *)(a2 + 8)
      + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v13, (uint64_t)v8, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    outlined init with take of Participant((uint64_t)v8, (uint64_t)v11);
    ParticipantGridViewController.update(participant:gradientOverlayAlpha:)();
    outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for Participant);
  }
}

uint64_t closure #2 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(char a1, char a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  int8x16_t v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;
  char v13;
  _OWORD v14[2];
  uint64_t v15;
  char v16;

  v5 = (_BYTE *)(a4 + 16);
  if ((a2 & 1) == 0 && (a1 & 1) != 0)
    InCallBannerHostViewController.hideOrShowRootView()();
  result = swift_beginAccess();
  if (!*v5)
  {
    v7 = *(_QWORD *)(a3 + 24) + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType;
    swift_beginAccess();
    outlined init with copy of ConversationControlsType(v7, (uint64_t)v14);
    outlined init with copy of ConversationControlsType((uint64_t)v14, (uint64_t)&v10);
    if (v13 == 1)
    {
      outlined destroy of ConversationControlsType((uint64_t)&v10);
    }
    else if (v13 != 6
           || (v10 != 5 ? (v8 = v10 == 2) : (v8 = 1),
               !v8
            || (v9 = vorrq_s8(v11, v12),
                *(_QWORD *)&vorr_s8(*(int8x8_t *)v9.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL)))))
    {
      outlined destroy of ConversationControlsType((uint64_t)&v10);
      return outlined destroy of ConversationControlsType((uint64_t)v14);
    }
    outlined destroy of ConversationControlsType((uint64_t)v14);
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    v16 = 6;
    InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)((uint64_t)v14, 0);
    return outlined destroy of ConversationControlsType((uint64_t)v14);
  }
  return result;
}

void closure #1 in MultiwayViewController.setParticipantListState(_:animated:)(id *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(*a1, sel_view);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_superview);

    objc_msgSend(v3, sel_layoutIfNeeded);
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.participantViewDragControllerDidStartDrag(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char *v3;
  char *v4;
  char *v5;
  _BYTE v6[216];
  uint64_t v7[27];

  OUTLINED_FUNCTION_312_4();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v1, (uint64_t)v6);
  OUTLINED_FUNCTION_5_131((uint64_t)v6, (uint64_t)v7);
  OUTLINED_FUNCTION_12_109(v7);
  if (!v2)
  {
    v3 = *(char **)(v1 + 56);
    v4 = &v3[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden];
    OUTLINED_FUNCTION_2_0();
    *v4 = 1;
    v5 = v3;
    LocalParticipantView.requiresControlsHidden.didset();

  }
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.participantViewDragController(_:didEndDragAtPosition:velocity:)()
{
  char *v0;
  double v1;
  double v2;
  char *v3;
  uint64_t v4;
  char v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  char v16;
  char v17;
  char v18;
  _BYTE *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD aBlock[6];
  _BYTE v35[216];
  uint64_t v36[27];
  _BYTE v37[216];
  uint64_t v38[27];
  _BYTE v39[216];
  uint64_t v40[27];

  v3 = v0;
  OUTLINED_FUNCTION_17_7();
  v4 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v4, (uint64_t)v39);
  OUTLINED_FUNCTION_5_131((uint64_t)v39, (uint64_t)v40);
  OUTLINED_FUNCTION_12_109(v40);
  if (v5)
    return;
  v6 = objc_msgSend(*(id *)(v4 + 8), sel_view);
  if (!v6)
    return;
  v7 = v6;
  MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(0, 1, 0);
  MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
  OUTLINED_FUNCTION_465();
  v9 = v8 * 0.5;
  OUTLINED_FUNCTION_465();
  v11 = v10 * 0.5;
  MultiwayViewController.constraintController.getter();
  if (v11 <= v2)
  {
    if (v9 > v1)
    {
      if (v12
        && (v16 = v12 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState,
            OUTLINED_FUNCTION_1(),
            OUTLINED_FUNCTION_355_3(),
            (v16 & 1) != 0))
      {
        v14 = 0;
        v15 = 65;
      }
      else
      {
        v14 = 1;
        v15 = 1;
      }
      goto LABEL_23;
    }
    if (v12)
    {
      v18 = v12 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState;
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_355_3();
      if ((v18 & 1) != 0)
      {
        v14 = 0;
        v15 = 67;
        goto LABEL_23;
      }
    }
    v15 = 3;
    goto LABEL_22;
  }
  if (v9 <= v1)
  {
    if (v12)
    {
      v17 = v12 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState;
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_355_3();
      if ((v17 & 1) != 0)
      {
        v14 = 0;
        v15 = 66;
        goto LABEL_23;
      }
    }
    v15 = 2;
LABEL_22:
    v14 = 1;
    goto LABEL_23;
  }
  if (!v12
    || (v13 = v12 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState,
        OUTLINED_FUNCTION_1(),
        OUTLINED_FUNCTION_355_3(),
        (v13 & 1) == 0))
  {
    v15 = 0;
    goto LABEL_22;
  }
  v14 = 0;
  v15 = 64;
LABEL_23:
  OUTLINED_FUNCTION_5_131(v4, (uint64_t)v37);
  OUTLINED_FUNCTION_5_131((uint64_t)v37, (uint64_t)v38);
  OUTLINED_FUNCTION_12_109(v38);
  if (!v5)
  {
    v19 = (_BYTE *)(*(_QWORD *)(v4 + 48)
                  + OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate);
    OUTLINED_FUNCTION_2_0();
    *v19 = 1;
  }
  OUTLINED_FUNCTION_5_131(v4, (uint64_t)v35);
  OUTLINED_FUNCTION_5_131((uint64_t)v35, (uint64_t)v36);
  OUTLINED_FUNCTION_12_109(v36);
  if (!v5)
  {
    v20 = *(char **)(v4 + 56);
    v21 = &v20[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden];
    OUTLINED_FUNCTION_2_0();
    *v21 = 0;
    v22 = v20;
    LocalParticipantView.requiresControlsHidden.didset();

  }
  if (v14)
    v23 = v15;
  else
    v23 = v15 & 3;
  v24 = *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
  v25 = OUTLINED_FUNCTION_650();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 584))(v23, v25, v24);
  LOBYTE(aBlock[0]) = 0;
  OUTLINED_FUNCTION_417_1((unsigned __int8 *)aBlock, v15);
  v26 = *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
  v27 = OUTLINED_FUNCTION_15_6();
  if ((OUTLINED_FUNCTION_6_9(v27, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 320)) & 1) == 0)
  {
    OUTLINED_FUNCTION_520_0();
    v28 = OUTLINED_FUNCTION_235();
    v30 = static ParticipantViewDragController.boingAnimator(usingVelocity:)(v28, v29);
    v31 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v31 + 16) = v3;
    aBlock[4] = partial apply for closure #1 in MultiwayViewController.participantViewDragController(_:didEndDragAtPosition:velocity:);
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_65_0;
    _Block_copy(aBlock);
    v32 = v3;
    OUTLINED_FUNCTION_17_22();
    OUTLINED_FUNCTION_59_6(v30, sel_addAnimations_);
    OUTLINED_FUNCTION_58_6();
    OUTLINED_FUNCTION_25_1(v33, sel_startAnimation);

  }
  MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);

}

BOOL closure #1 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  double v6;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1C3B752C0](v3);
  v5 = v4;
  if (v4)
  {
    v6 = 1.0;
    if ((a2 & 1) != 0)
      v6 = 0.0;
    objc_msgSend(v4, sel_setAlpha_, v6);

  }
  return v5 == 0;
}

BOOL closure #2 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1C3B752C0](v3);
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, sel_setEnabled_, (a2 & 1) == 0);

  }
  return v5 == 0;
}

void MultiwayViewController.captionsViewDragControllerDidStartDrag(_:atPosition:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned __int8 v3;
  _BYTE v4[216];
  _BYTE v5[216];
  uint64_t v6[6];

  OUTLINED_FUNCTION_42_51();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v1, (uint64_t)v5);
  OUTLINED_FUNCTION_6_110((uint64_t)v5, (uint64_t)v6);
  OUTLINED_FUNCTION_12_109(v6);
  if (!v2)
  {
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v5, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v4);
    OUTLINED_FUNCTION_372_2();
    v3 = 0;
    OUTLINED_FUNCTION_325_2(&v3);
    OUTLINED_FUNCTION_312_4();
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v5);
  }
  OUTLINED_FUNCTION_315_5();
}

void MultiwayViewController.captionsViewDragController(_:didMoveToPosition:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91[216];
  uint64_t v92[27];

  OUTLINED_FUNCTION_42_51();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v1, (uint64_t)v91);
  OUTLINED_FUNCTION_6_110((uint64_t)v91, (uint64_t)v92);
  v2 = OUTLINED_FUNCTION_12_109(v92);
  if (!v9)
  {
    OUTLINED_FUNCTION_200_3(v2, v3, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?, v4, v5, v6, v7, v8, v23, v25, v27, v29, v31, v33, v35, v37, v39, v41, v43,
      v45,
      v47,
      v49,
      v51,
      v53,
      v55,
      v57,
      v59,
      v61,
      v63,
      v65,
      v67,
      v69,
      v71,
      v73,
      v75,
      v77,
      v79,
      v81,
      v83,
      v85,
      v87,
      v89,
      v91[0]);
    OUTLINED_FUNCTION_412_1(v10, v11, v12, v13);
    v14 = OUTLINED_FUNCTION_371_2();
    if (v14 < 0xFCu)
    {
      v21 = v14;
      v22 = v92[18];
      v14 = OUTLINED_FUNCTION_1();
      if ((*(_BYTE *)(v22 + 88) & 1) == 0)
      {
        OUTLINED_FUNCTION_372_2();
        v14 = (uint64_t)OUTLINED_FUNCTION_470_0(v21);
      }
    }
    OUTLINED_FUNCTION_146_5(v14, (uint64_t)outlined consume of MultiwayViewController.ViewContent?, v15, v16, v17, v18, v19, v20, v24, v26, v28, v30, v32, v34, v36, v38, v40, v42, v44,
      v46,
      v48,
      v50,
      v52,
      v54,
      v56,
      v58,
      v60,
      v62,
      v64,
      v66,
      v68,
      v70,
      v72,
      v74,
      v76,
      v78,
      v80,
      v82,
      v84,
      v86,
      v88,
      v90,
      v91[0]);
  }
  OUTLINED_FUNCTION_315_5();
}

void MultiwayViewController.captionsViewDragController(_:didEndDragAtPosition:velocity:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v8;
  char v9;
  id v10;
  double v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  char aBlock[8];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _BYTE v26[216];
  uint64_t v27[27];

  v5 = v4;
  OUTLINED_FUNCTION_42_51();
  v8 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v8, (uint64_t)v26);
  OUTLINED_FUNCTION_6_110((uint64_t)v26, (uint64_t)v27);
  OUTLINED_FUNCTION_12_109(v27);
  if (!v9)
  {
    v10 = *(id *)(v8 + 48);
    v11 = OUTLINED_FUNCTION_235();
    MultiwayViewConstraintsController.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)((CGPoint)__PAIR128__(v12, *(unint64_t *)&v11), 1);
    aBlock[0] = 0;
    OUTLINED_FUNCTION_417_1((unsigned __int8 *)aBlock, 0xFCu);
    v13 = *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
    v14 = OUTLINED_FUNCTION_15_6();
    if ((OUTLINED_FUNCTION_6_9(v14, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 320)) & 1) == 0)
    {
      OUTLINED_FUNCTION_520_0();
      v15 = static ParticipantViewDragController.boingAnimator(usingVelocity:)(a3, a4);
      v16 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v16 + 16) = v5;
      v24 = partial apply for closure #1 in MultiwayViewController.captionsViewDragController(_:didEndDragAtPosition:velocity:);
      v25 = v16;
      OUTLINED_FUNCTION_117((uint64_t)thunk for @escaping @callee_guaranteed () -> (), v20, MEMORY[0x1E0C809B0], 1107296256, v22, v23);
      v17 = v5;
      OUTLINED_FUNCTION_17_22();
      OUTLINED_FUNCTION_59_6(v15, sel_addAnimations_);
      OUTLINED_FUNCTION_58_6();
      OUTLINED_FUNCTION_25_1(v18, sel_startAnimation);

    }
    v19 = OUTLINED_FUNCTION_371_2();
    if (v19 <= 0xFBu)
      OUTLINED_FUNCTION_470_0(v19);

  }
  OUTLINED_FUNCTION_188_5();
}

void MultiwayViewController.pipViewController.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v5[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v1, (uint64_t)&v4);
  OUTLINED_FUNCTION_5_131((uint64_t)&v4, (uint64_t)v5);
  OUTLINED_FUNCTION_83_26(v5);
  if (!v2)
    v3 = *(id *)(v1 + 96);
  OUTLINED_FUNCTION_173_6();
  OUTLINED_FUNCTION_69_24();
}

__C::CGRect __swiftcall MultiwayViewController.frameForRestoreAnimation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  double v27;
  id v28;
  SEL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  double v44;
  id v45;
  SEL v46;
  _QWORD *v47;
  _BYTE v49[104];
  _BYTE v50[216];
  uint64_t v51[27];
  __C::CGRect result;

  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v49[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v49[-v9 - 8];
  v11 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v50, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v50, (uint64_t)v51, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_12_109(v51);
  if (!v12)
  {
    v13 = v51[12] + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
    OUTLINED_FUNCTION_1();
    outlined init with copy of FeatureEligibility?(v13, (uint64_t)v5, &demangling cache variable for type metadata for Participant?);
    v14 = OUTLINED_FUNCTION_69_0((uint64_t)v5, 1, v6);
    if (v12)
    {
      OUTLINED_FUNCTION_225_3(v14, &demangling cache variable for type metadata for Participant?);
      goto LABEL_5;
    }
    v30 = OUTLINED_FUNCTION_157();
    outlined init with take of Participant(v30, v31);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v50, (uint64_t)v49, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v49);
    v32 = ConversationController.isOneToOneModeEnabled.getter();
    _s15ConversationKit11ParticipantVWOcTm_4();
    if ((v32 & 1) != 0)
    {
      v34 = *(_QWORD *)(v1 + *(int *)(v6 + 28));
      OUTLINED_FUNCTION_43_19(v33, type metadata accessor for Participant);
      if (!v34)
      {
        OUTLINED_FUNCTION_22_29(v35, type metadata accessor for Participant);
        OUTLINED_FUNCTION_182_5();
        goto LABEL_5;
      }
    }
    else
    {
      OUTLINED_FUNCTION_43_19(v33, type metadata accessor for Participant);
    }
    if (*(_QWORD *)&v10[*(int *)(v6 + 28)])
    {
      v36 = OUTLINED_FUNCTION_9(v35, sel_view);
      if (!v36)
      {
LABEL_22:
        __break(1u);
        goto _$s15ConversationKit22MultiwayViewControllerC24frameForRestoreAnimationSo6CGRectVyF;
      }
      v37 = v36;
      ParticipantGridViewController.spatialPosition(for:relativeTo:)((uint64_t)v10, (uint64_t)v36);
      OUTLINED_FUNCTION_89();

    }
    else
    {
      objc_msgSend((id)v51[7], sel_frame);
      OUTLINED_FUNCTION_89();
    }
    v38 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    v39 = objc_msgSend(v38, sel_fixedCoordinateSpace);

    v41 = OUTLINED_FUNCTION_9(v40, sel_view);
    if (v41)
    {
      v42 = v41;
      v43 = objc_msgSend(v41, sel_coordinateSpace);

      v44 = OUTLINED_FUNCTION_66();
      objc_msgSend(v45, v46, v43, v44);
      OUTLINED_FUNCTION_10();
      swift_unknownObjectRelease();
      v47 = OUTLINED_FUNCTION_182_5();
      OUTLINED_FUNCTION_22_29((uint64_t)v47, type metadata accessor for Participant);
      goto LABEL_18;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_5:
  v15 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  v16 = objc_msgSend(v15, sel_fixedCoordinateSpace);

  v18 = OUTLINED_FUNCTION_9(v17, sel_view);
  if (!v18)
  {
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v18, sel_frame);
  OUTLINED_FUNCTION_238_2();
  v24 = OUTLINED_FUNCTION_9(v23, sel_view);
  if (!v24)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, sel_coordinateSpace);

  v27 = OUTLINED_FUNCTION_66();
  objc_msgSend(v28, v29, v26, v27);
  OUTLINED_FUNCTION_10();
  swift_unknownObjectRelease();
LABEL_18:
  OUTLINED_FUNCTION_328_2();
  OUTLINED_FUNCTION_126_6();
_$s15ConversationKit22MultiwayViewControllerC24frameForRestoreAnimationSo6CGRectVyF:
  result.size.height = v22;
  result.size.width = v21;
  result.origin.y = v20;
  result.origin.x = v19;
  return result;
}

Swift::Bool __swiftcall MultiwayViewController.restoreViewControllerHierarchyWhenExitingPiP()()
{
  return 0;
}

id MultiwayViewController.underlyingView.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_view);
}

void MultiwayViewController.senderHandle(videoMessageController:)(_QWORD *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (!(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x138))())
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_facetimeService);
    v2 = (id)IMPreferredAccountForService();

    if (v2)
    {
      outlined bridged method (ob) of @objc IMAccount.displayName.getter(v2);
      if (v4)
      {
        v5 = v3;
        v6 = v4;
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
        TUHandle.__allocating_init(type:value:)(1, v5, v6);
      }
    }
  }
}

void MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  id v23;
  _QWORD *v24;
  uint64_t *v25;
  char v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  Class isa;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD);
  void (**v58)();
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void **, _QWORD);
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  OUTLINED_FUNCTION_407();
  v5 = type metadata accessor for PersonNameComponents();
  v73 = *(_QWORD *)(v5 - 8);
  v74 = v5;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  v72 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_42_32();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v66 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (void (*)())((char *)&v66 - v17);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_101_0();
  v20 = type metadata accessor for URL();
  v21 = OUTLINED_FUNCTION_134_1();
  v22(v21);
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v20);
  LOBYTE(v79) = 0;
  v23 = objc_allocWithZone((Class)type metadata accessor for VideoMessagePlayerViewModel(0));
  v24 = VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)();
  v25 = (uint64_t *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                  + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_1();
  specialized Collection.first.getter(*v25, (uint64_t)v10);
  OUTLINED_FUNCTION_69_0((uint64_t)v10, 1, v11);
  if (!v26)
  {
    v71 = v4;
    outlined init with take of Participant((uint64_t)v10, (uint64_t)v18);
    v27 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_61();
    v70 = OUTLINED_FUNCTION_0_3(0xD000000000000016, v28);
    v30 = v29;

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v31 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v31 + 16) = xmmword_1BD6441D0;
    v32 = (uint64_t *)((char *)v18 + *(int *)(v11 + 36));
    v33 = v32[1];
    v75 = *v32;
    OUTLINED_FUNCTION_311_0();
    _s15ConversationKit11ParticipantVWOcTm_4();
    *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v31 + 64) = lazy protocol witness table accessor for type String and conformance String();
    if (v33)
    {
      v34 = v33;
    }
    else
    {
      v35 = *(void **)&v15[*(int *)(v11 + 28)];
      v68 = 0;
      v69 = v30;
      if (v35)
      {
        v36 = v35;
        outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v36);
        v67 = v38;
        if (v38)
        {
          v75 = v37;
          v66 = v36;
          if (objc_msgSend(v36, sel_shouldHideContact, v68, v69))
          {
            v34 = v67;
            swift_bridgeObjectRetain();
            PersonNameComponents.init()();
            specialized ParticipantsViewController.participantsViewControllerDelegate.getter();
            PersonNameComponents.givenName.setter();
            OUTLINED_FUNCTION_50_2();
            if (one-time initialization token for initials != -1)
              swift_once();
            OUTLINED_FUNCTION_1();
            v39 = (id)static NSPersonNameComponentsFormatter.initials;
            isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            v41 = OUTLINED_FUNCTION_37_23(v39, sel_stringFromPersonNameComponents_);

            v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v44 = v43;

            OUTLINED_FUNCTION_60_11(v73);
            v79 = (void *)v42;
            v80 = v44;
            lazy protocol witness table accessor for type String and conformance String();
            StringProtocol.localizedUppercase.getter();
            OUTLINED_FUNCTION_2_1();

            OUTLINED_FUNCTION_25();
            OUTLINED_FUNCTION_27();
            goto LABEL_15;
          }
          swift_bridgeObjectRelease();
          v36 = v66;
        }

      }
      _s15ConversationKit11ParticipantVWOcTm_4();
      partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      ParticipantContactDetailsCache.contactDetails(for:)(v2, v45, v46, v47, v48, v49, v50, v51, v68, v69, v70, (uint64_t)v71, v72, v73, v74, v75, v76, v77, v78,
        (uint64_t)v79);
      v52 = v79;
      v34 = v81;
      v74 = v82;
      v75 = v80;
      swift_release();
      outlined destroy of AccountUpdateNotice(v2, type metadata accessor for Participant);

      OUTLINED_FUNCTION_2_1();
      swift_bridgeObjectRelease();
    }
LABEL_15:
    *(_QWORD *)(v31 + 32) = v75;
    *(_QWORD *)(v31 + 40) = v34;
    OUTLINED_FUNCTION_5_0();
    outlined destroy of AccountUpdateNotice((uint64_t)v15, type metadata accessor for Participant);
    v53 = String.init(format:_:)();
    v55 = v54;
    OUTLINED_FUNCTION_21_0();
    (*(void (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v24) + 0x188))(v53, v55);
    v56 = OUTLINED_FUNCTION_396_1();
    outlined destroy of AccountUpdateNotice(v56, v57);
    v4 = v71;
    goto LABEL_16;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
LABEL_16:
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_162_7();
  OUTLINED_FUNCTION_15_22();
  OUTLINED_FUNCTION_159_7();
  *v58 = partial apply for closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:);
  v58[1] = v18;
  swift_release();
  OUTLINED_FUNCTION_251_3();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_162_7();
  v59 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v59 + 16) = v18;
  *(_QWORD *)(v59 + 24) = v4;
  OUTLINED_FUNCTION_15_22();
  v60 = v4;
  OUTLINED_FUNCTION_159_7();
  *(_QWORD *)(v61 + 16) = partial apply for closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:);
  *(_QWORD *)(v61 + 24) = v59;
  swift_release();
  OUTLINED_FUNCTION_251_3();
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_162_7();
  OUTLINED_FUNCTION_15_22();
  OUTLINED_FUNCTION_159_7();
  *(_QWORD *)(v62 + 48) = partial apply for closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:);
  *(_QWORD *)(v62 + 56) = v18;
  swift_release();
  OUTLINED_FUNCTION_251_3();
  OUTLINED_FUNCTION_17_22();
  v63 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_11_1();
  v64 = (void (*)(void **, _QWORD))OUTLINED_FUNCTION_159_7();
  *(_QWORD *)(v65 + 64) = partial apply for closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:);
  *(_QWORD *)(v65 + 72) = v63;
  swift_release();
  v64(&v79, 0);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 64) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v4 + 72) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

void closure #1 in closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  OUTLINED_FUNCTION_389_0();
  v1 = (void *)(v0 + 16);
  OUTLINED_FUNCTION_1();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
    OUTLINED_FUNCTION_14_18();
    specialized ParticipantsViewController.participantsViewControllerDelegate.getter();
    ConversationController.resetRecordingVideoMessage(completion:)();

  }
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

uint64_t sub_1BD521110(void *a1)
{
  void *v1;
  uint64_t v2;
  id v3;

  if (a1)
  {
    v3 = objc_msgSend(a1, sel_navigationController);
    OUTLINED_FUNCTION_49_5();
    if (v1)
    {

    }
  }
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
  type metadata accessor for MainActor();
  swift_retain();
  v8 = a2;
  v9 = static MainActor.shared.getter();
  v10 = (_QWORD *)swift_allocObject();
  v11 = MEMORY[0x1E0DF06E8];
  v10[2] = v9;
  v10[3] = v11;
  v10[4] = a1;
  v10[5] = v8;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[17] = a4;
  v5[18] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v5[19] = swift_task_alloc();
  v6 = type metadata accessor for UUID();
  v5[20] = v6;
  v5[21] = *(_QWORD *)(v6 - 8);
  v5[22] = swift_task_alloc();
  v7 = type metadata accessor for Participant(0);
  v5[23] = v7;
  v5[24] = *(_QWORD *)(v7 - 8);
  v5[25] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[26] = static MainActor.shared.getter();
  v5[27] = dispatch thunk of Actor.unownedExecutor.getter();
  v5[28] = v8;
  return swift_task_switch();
}

void closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

{
  uint64_t v0;
  uint8_t *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  void (*v7)(void);
  id v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  _WORD *v12;

  v2 = *(void **)(v0 + 248);
  OUTLINED_FUNCTION_329_3();

  v4 = OUTLINED_FUNCTION_25_1(v3, sel_navigationController);
  if (v4)
  {
    v5 = OUTLINED_FUNCTION_40_3(v4, sel_popViewControllerAnimated_);
    OUTLINED_FUNCTION_37_0();

  }
  OUTLINED_FUNCTION_323_1();
  v7 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v6) + 0x310);
  v9 = v8;
  v7();

  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v10, (uint64_t)&static Logger.videoMessaging);
  v11 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v11))
  {
    v12 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_220_0(v12);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v9, (os_log_type_t)v7, "Video message send complete. Requesting dismissal", v1);
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

uint64_t closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[21] + 8))(v2[22], v2[20]);
  OUTLINED_FUNCTION_13_3();
  return OUTLINED_FUNCTION_24_29();
}

{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  id *v3;
  os_log_type_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(NSObject **)(v0 + 248);
  OUTLINED_FUNCTION_329_3();

  v2 = *(_QWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 120) = v2;
  v3 = (id *)(v0 + 120);
  OUTLINED_FUNCTION_15_63();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  if ((OUTLINED_FUNCTION_503_0() & 1) != 0)
  {
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.videoMessaging);
    v6 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_4_14(v6))
    {
      v7 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v7 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v1, v4, "Video message send called when already sending.", v7);
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_2();
  }
  else
  {

    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v8, (uint64_t)&static Logger.videoMessaging);
    v9 = (id)OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_15_63();
    Logger.logObject.getter();
    v10 = OUTLINED_FUNCTION_232();
    if (os_log_type_enabled(v1, v10))
    {
      v11 = (uint8_t *)OUTLINED_FUNCTION_105();
      v15 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v0 + 128) = v2;
      OUTLINED_FUNCTION_15_63();
      v12 = String.init<A>(reflecting:)();
      *(_QWORD *)(v0 + 112) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_19_2();
      OUTLINED_FUNCTION_19_2();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v1, v10, "Unknown error on send: %s", v11);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();

  }
  OUTLINED_FUNCTION_157_4();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  return OUTLINED_FUNCTION_8_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

void closure #1 in closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  swift_release();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1BD521DC0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v4;

  if (a1)
  {
    v4 = *(id *)(a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
    OUTLINED_FUNCTION_49_5();
    ConversationController.saveRecordedVideoMessage()();

  }
  **(_BYTE **)(v2 + 40) = a1 == 0;
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v2 + 8));
}

void closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t, _QWORD *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_77_0((uint64_t)v9, v11, v12, v10);
  type metadata accessor for MainActor();
  swift_retain();
  v13 = static MainActor.shared.getter();
  v14 = (_QWORD *)OUTLINED_FUNCTION_15();
  v15 = MEMORY[0x1E0DF06E8];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = a1;
  a4(v9, a3, v14);
  swift_release();
  OUTLINED_FUNCTION_91();
}

uint64_t closure #1 in closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 64) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v4 + 72) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

void closure #1 in closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  OUTLINED_FUNCTION_389_0();
  v1 = (void *)(v0 + 16);
  OUTLINED_FUNCTION_1();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
    OUTLINED_FUNCTION_14_18();
    ConversationController.discardRecordedVideoMessage()();

  }
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

uint64_t sub_1BD521FA4(void *a1)
{
  void *v1;
  uint64_t v2;
  id v3;

  if (a1)
  {
    v3 = objc_msgSend(a1, sel_navigationController);
    OUTLINED_FUNCTION_49_5();
    if (v1)
    {

    }
  }
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v2 + 8));
}

Swift::Void __swiftcall MultiwayViewController.prepareForAppSwitcher()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;
  uint64_t v7;
  char v9;
  _QWORD *v10;
  void (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  char v15;

  OUTLINED_FUNCTION_96();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  v2 = OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController;
  v3 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0xF0);
  v6 = v3;
  v5();
  OUTLINED_FUNCTION_4_39();
  if (VideoMessageController.State.rawValue.getter(v5) == 0x676E696D726177
    && v7 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v9 = OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_27();
  if ((v9 & 1) != 0)
  {
LABEL_13:
    MultiwayViewController.pauseVideoMessageRecording()();
    return;
  }
  v10 = *(_QWORD **)(v1 + v2);
  v11 = *(void (**)(void))((*v4 & *v10) + 0xF0);
  v12 = v10;
  v11();
  OUTLINED_FUNCTION_14_18();
  if (VideoMessageController.State.rawValue.getter(v11) == 0x6552657669746361
    && v13 == 0xEF676E6964726F63)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_27();
    if ((v15 & 1) == 0)
      goto LABEL_16;
  }
  ConversationController.stopRecordingVideoMessage()();
LABEL_16:
  OUTLINED_FUNCTION_65_1();
}

void MultiwayViewController.showCameraAlert()()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  Swift::String v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  id v13;
  id v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  Swift::String v18;
  id v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;

  v1 = v0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_conversationKit);
  v21._object = (void *)0xE000000000000000;
  v4._object = (void *)0x80000001BD691A00;
  v4._countAndFlagsBits = 0xD000000000000020;
  v5.value._countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v21._countAndFlagsBits = 0;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v21);

  v20 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v7._countAndFlagsBits, (uint64_t)v7._object, 0, 0xE000000000000000, 1);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
  v8 = objc_msgSend(v2, sel_conversationKit);
  v22._object = (void *)0xE000000000000000;
  v9._object = (void *)0x80000001BD691A30;
  v9._countAndFlagsBits = 0xD000000000000020;
  v10.value._countAndFlagsBits = 0x61737265766E6F43;
  v10.value._object = (void *)0xEF74694B6E6F6974;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v22);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v12._countAndFlagsBits, (uint64_t)v12._object, 0, (uint64_t)partial apply for closure #1 in MultiwayViewController.showCameraAlert());
  objc_msgSend(v20, sel_addAction_, v13);

  v14 = objc_msgSend(v2, sel_conversationKit);
  v15._countAndFlagsBits = 0xD000000000000024;
  v23._object = (void *)0xE000000000000000;
  v15._object = (void *)0x80000001BD691A60;
  v16.value._countAndFlagsBits = 0x61737265766E6F43;
  v16.value._object = (void *)0xEF74694B6E6F6974;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0;
  v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v23);

  v19 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v18._countAndFlagsBits, (uint64_t)v18._object, 0, 0);
  objc_msgSend(v20, sel_addAction_, v19);

  objc_msgSend(v1, sel_presentViewController_animated_completion_, v20, 1, 0);
}

void closure #2 in MultiwayViewController.startRecordingVideoMessage()(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  id v7;

  LocalParticipantView.endCountdown()();
  if ((a1 & 1) != 0)
  {
    swift_beginAccess();
    v5 = MEMORY[0x1C3B752C0](a3 + 16);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = *(id *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

      ConversationController.startRecordingVideoMessage()();
    }
  }
}

void closure #1 in MultiwayViewController.showCameraAlert()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(id *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

    ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
  }
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v2);
  if (v6)
  {
    v7 = (void *)v6;
    MultiwayViewController.startRecordingVideoMessage()();

  }
}

void closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13[3];

  v3 = a3 + 16;
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.videoMessaging);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13[0] = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v5, v6, "Dismissing due to error %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v8, -1, -1);
    MEMORY[0x1C3B751B8](v7, -1, -1);
  }

  swift_beginAccess();
  v11 = MEMORY[0x1C3B752C0](v3);
  if (v11)
  {
    v12 = (void *)v11;
    swift_retain();
    MultiwayViewController.cancelVideoRecording(completion:)();
    swift_release();

  }
}

void closure #1 in closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
    swift_beginAccess();
    v6 = (void *)MEMORY[0x1C3B752C0](v5);

    if (v6)
    {
      objc_msgSend(v6, sel_unansweredCallUIDismissed);
      swift_unknownObjectRelease();
    }
  }
}

void MultiwayViewController.didConfirm(forInterventionViewController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void (*v29)(void);
  id v30;
  id v31;
  char v32;
  void (*v33)(void);

  OUTLINED_FUNCTION_96();
  a17 = v20;
  a18 = v21;
  OUTLINED_FUNCTION_399_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for URL();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_11_2();
  if (v18)
  {
    objc_opt_self();
    v27 = (void *)OUTLINED_FUNCTION_443_0();
    if (v27)
      OUTLINED_FUNCTION_458_0(v27, sel_dismissViewControllerAnimated_completion_, 1);
  }
  OUTLINED_FUNCTION_323_1();
  v29 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v28) + 0x210);
  v31 = v30;
  v29();

  OUTLINED_FUNCTION_69_0((uint64_t)v24, 1, v25);
  if (v32)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, &demangling cache variable for type metadata for URL?);
  }
  else
  {
    OUTLINED_FUNCTION_43_15();
    v33();
    MultiwayViewController.showLocalVideoMessagePreview(usingURL:)();
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  }
  OUTLINED_FUNCTION_65_1();
}

void MultiwayViewController.didReject(forInterventionViewController:)(uint64_t a1)
{
  void *v1;

  if (a1)
  {
    objc_opt_self();
    v1 = (void *)OUTLINED_FUNCTION_95();
    if (v1)
      OUTLINED_FUNCTION_458_0(v1, sel_dismissViewControllerAnimated_completion_, 1);
  }
  ConversationController.discardRecordedVideoMessage()();
  OUTLINED_FUNCTION_0();
}

void @objc MultiwayViewController.didConfirm(forInterventionViewController:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;

  swift_unknownObjectRetain();
  v7 = a1;
  a4(a3);
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_15_9(v7);
}

id @nonobjc AVCVideoFrame.init(pixelBuffer:time:imageData:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  void *v6;
  Class isa;
  id v14;
  _QWORD v16[3];

  if (a6 >> 60 == 15)
  {
    isa = 0;
  }
  else
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data?(a5, a6);
  }
  v16[0] = a2;
  v16[1] = a3;
  v16[2] = a4;
  v14 = objc_msgSend(v6, sel_initWithPixelBuffer_time_imageData_, a1, v16, isa);

  return v14;
}

uint64_t partial apply for closure #1 in MultiwayViewController.activeRemoteParticipants(in:)(uint64_t a1)
{
  return closure #1 in MultiwayViewController.activeRemoteParticipants(in:)(a1) & 1;
}

_QWORD *_s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v2 = OUTLINED_FUNCTION_44_19(a1);
  v3(v2, v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17], v1[18],
    v1[19],
    v1[20],
    v1[21],
    v1[22],
    v1[23],
    v1[24],
    v1[25],
    v1[26]);
  return v1;
}

uint64_t outlined retain of MultiwayViewController.ViewContent(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a1 + 24);
  v6 = *(void **)(a1 + 32);
  v8 = *(void **)(a1 + 48);
  v7 = *(void **)(a1 + 56);
  v10 = *(void **)(a1 + 64);
  v9 = *(void **)(a1 + 72);
  v36 = *(void **)(a1 + 80);
  v37 = *(void **)(a1 + 88);
  v38 = *(void **)(a1 + 96);
  v39 = *(void **)(a1 + 104);
  v40 = *(void **)(a1 + 112);
  v41 = *(void **)(a1 + 120);
  v42 = *(void **)(a1 + 128);
  v43 = *(void **)(a1 + 136);
  v44 = *(void **)(a1 + 160);
  v45 = *(void **)(a1 + 168);
  v46 = *(void **)(a1 + 176);
  v47 = *(void **)(a1 + 184);
  v48 = *(void **)(a1 + 192);
  v49 = *(void **)(a1 + 200);
  v11 = *(id *)(a1 + 208);
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v8;
  v18 = v7;
  v19 = v10;
  v20 = v9;
  v21 = v36;
  v22 = v37;
  v23 = v38;
  v24 = v39;
  v25 = v40;
  v26 = v41;
  v27 = v42;
  v28 = v43;
  swift_retain();
  swift_retain();
  v29 = v44;
  v30 = v45;
  v31 = v46;
  v32 = v47;
  v33 = v48;
  v34 = v49;
  return a1;
}

void sub_1BD522D1C()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_4();
  *v0 = MultiwayViewController.isOnScreen.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD522D40(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewController.isOnScreen.setter();
  OUTLINED_FUNCTION_0();
}

void outlined bridged method (ob) of @objc IMAccount.displayName.getter(void *a1)
{
  void *v1;
  id v2;

  v2 = objc_msgSend(a1, sel_displayName);
  OUTLINED_FUNCTION_37_0();
  if (v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_45_21();

  }
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_18();
}

uint64_t specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(void *a1, void *a2, unint64_t *a3, __int16 a4)
{
  id v8;
  id v9;
  unint64_t v10;
  char v11;
  Swift::OpaquePointer v12;
  id v14[3];
  _BYTE v15[40];
  _QWORD v16[5];

  v16[3] = type metadata accessor for ParticipantGridViewController();
  v16[4] = &protocol witness table for ParticipantGridViewController;
  v16[0] = a1;
  outlined init with copy of RadarReporting((uint64_t)v16, (uint64_t)v15);
  v8 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantsViewController);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  if (swift_dynamicCast())
  {
    v9 = v14[0];
    swift_beginAccess();
    v10 = *a3;
    swift_bridgeObjectRetain();
    v11 = specialized Sequence<>.contains(_:)((uint64_t)v14[0], v10);
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      swift_beginAccess();
      v9 = v14[0];
      MEMORY[0x1C3B7301C]();
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFF8) + 0x10));
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      LOWORD(v14[0]) = a4;
      v12._rawValue = a2;
      ParticipantGridViewController.update(with:updateReason:)(v12, (char *)v14);
    }

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(void *a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, void (*a7)(uint64_t, id *))
{
  id v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  char v16;
  id v18[3];
  _BYTE v19[40];
  _QWORD v20[5];

  v20[3] = a5(0);
  v20[4] = a6;
  v20[0] = a1;
  outlined init with copy of RadarReporting((uint64_t)v20, (uint64_t)v19);
  v12 = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantsViewController);
  OUTLINED_FUNCTION_59(v13, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  if (OUTLINED_FUNCTION_97())
  {
    v14 = v18[0];
    OUTLINED_FUNCTION_1();
    v15 = *a3;
    OUTLINED_FUNCTION_35_0();
    v16 = specialized Sequence<>.contains(_:)((uint64_t)v18[0], v15);
    OUTLINED_FUNCTION_133();
    if ((v16 & 1) == 0)
    {
      OUTLINED_FUNCTION_2_0();
      v14 = v18[0];
      MEMORY[0x1C3B7301C]();
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFF8) + 0x10));
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      OUTLINED_FUNCTION_25_29();
      a7(a2, v18);
    }

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

uint64_t specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(uint64_t a1, uint64_t a2, unint64_t *a3, __int16 a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1;
  id v13;
  unint64_t v14;
  char v15;
  id v17[3];
  _BYTE v18[40];
  uint64_t v19[5];

  v19[3] = a5;
  v19[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  outlined init with copy of RadarReporting((uint64_t)v19, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantsViewController);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  if (swift_dynamicCast())
  {
    v13 = v17[0];
    swift_beginAccess();
    v14 = *a3;
    swift_bridgeObjectRetain();
    v15 = specialized Sequence<>.contains(_:)((uint64_t)v17[0], v14);
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      swift_beginAccess();
      v13 = v17[0];
      MEMORY[0x1C3B7301C]();
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFF8) + 0x10));
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      LOWORD(v17[0]) = a4;
      (*(void (**)(uint64_t, id *, uint64_t, uint64_t))(a6 + 72))(a2, v17, a5, a6);
    }

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

void specialized NameAndPhotoUtilities.denySendingNameAndPhoto(using:)(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  Class isa;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t var58[13];

  v3 = objc_msgSend(a1, sel_handle);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_value);

    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v8 = v7;

    swift_bridgeObjectRetain();
    NameAndPhotoUtilities.createIMHandle(with:)(v6, v8, v9, v10, v11, v12, v13, v14, v35, v37, v38, var58[0], var58[1], var58[2], var58[3], var58[4], var58[5], var58[6], var58[7],
      var58[8],
      var58[9],
      var58[10],
      var58[11],
      var58[12]);
    v16 = v15;
    swift_bridgeObjectRelease();
    if (v16)
    {
      swift_bridgeObjectRelease();
      if (one-time initialization token for nickname != -1)
        swift_once();
      v17 = type metadata accessor for Logger();
      __swift_project_value_buffer(v17, (uint64_t)&static Logger.nickname);
      v18 = v16;
      v19 = Logger.logObject.getter();
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v36 = a2;
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v21 = 138412290;
        v23 = v18;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *v22 = v16;

        a2 = v36;
        _os_log_impl(&dword_1BD004000, v19, v20, "Denying sending name and photo to handle %@", v21, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v22, -1, -1);
        MEMORY[0x1C3B751B8](v21, -1, -1);

      }
      else
      {

      }
      v31 = *(void **)(a2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1BD6443F0;
      *(_QWORD *)(v32 + 32) = v18;
      specialized Array._endMutation()();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for IMHandle);
      v33 = v18;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v31, sel_denyHandlesForNicknameSharing_, isa);

    }
    else
    {
      if (one-time initialization token for nickname != -1)
        swift_once();
      v24 = type metadata accessor for Logger();
      __swift_project_value_buffer(v24, (uint64_t)&static Logger.nickname);
      swift_bridgeObjectRetain();
      v25 = Logger.logObject.getter();
      v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        var58[0] = v28;
        *(_DWORD *)v27 = 136315138;
        swift_bridgeObjectRetain();
        v29 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, var58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v25, v26, "Cant deny nickname sharing because could not create IMHandle with handle %s", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v28, -1, -1);
        MEMORY[0x1C3B751B8](v27, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void specialized NameAndPhotoUtilities.denyIncomingName(from:)(void *a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;

  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((uint64_t)&lazy protocol witness table cache variable for type TUCall and conformance TUCall);
  if (one-time initialization token for nickname != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)&static Logger.nickname);
  swift_unknownObjectRetain_n();
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v13 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = objc_msgSend(a1, sel_handle);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, sel_value);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      v9 = String.init<A>(reflecting:)();
      v11 = v10;
    }
    else
    {
      v11 = 0xE300000000000000;
      v9 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v2, v3, "Denying incoming name from handle %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v5, -1, -1);
    MEMORY[0x1C3B751B8](v4, -1, -1);

  }
  else
  {

  }
}

void specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_BYTE *a22)
{
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _BYTE *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  id v69;
  uint64_t v70;
  unint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _UNKNOWN **v84;
  _QWORD *(*v85)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD *v86;
  Swift::Bool v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  int v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  void (*v123)(__int128 *, _QWORD);
  char *v124;
  uint64_t v125;
  char *v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(void);
  _UNKNOWN **v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t *v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  _QWORD *v147;
  void *v148;
  uint64_t v149;
  id v150;
  id v151;
  _OWORD *v152;
  int v153;
  uint64_t v154;
  unsigned __int8 v155;
  int v156;
  void *v157;
  void *v158;
  id v159;
  uint64_t (*v160)(void);
  char *v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(void);
  char *v175;
  void (*v176)(char *, _UNKNOWN **);
  id v177;
  _BYTE *v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  id v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  uint64_t v222;
  uint64_t v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  uint64_t v228;
  uint64_t v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  id v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  id v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  id v242;
  uint64_t v243;
  uint64_t v244;
  id v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  id v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  id v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  id v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  id v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  id v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  id v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  id v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  id v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  id v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  _QWORD *v299;
  uint64_t v300;
  uint64_t v301;
  char v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  _UNKNOWN **v317;
  void *v318;
  uint64_t v319;
  uint64_t v320;
  objc_class *ObjectType;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  _BYTE *v326;
  uint64_t v327;
  uint64_t v328;
  id v329;
  uint64_t v330;
  uint64_t v331;
  int v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  uint64_t v338;
  char *v339;
  __int128 v340;
  id v341;
  uint64_t v342;
  uint64_t v343;
  __int128 v344;
  char v345;
  _QWORD v346[3];
  __int128 v347;
  uint64_t v348;
  char v349;
  objc_super v350;
  _QWORD v351[5];
  _QWORD *v352;
  uint64_t v353;
  char v354;
  uint64_t v355;
  __int128 v356;
  __int128 v357;
  _UNKNOWN **v358;
  _QWORD v359[5];
  _QWORD v360[5];
  _QWORD v361[3];
  uint64_t v362;
  _UNKNOWN **v363;

  OUTLINED_FUNCTION_93();
  v330 = v23;
  v331 = v22;
  v332 = v24;
  HIDWORD(v320) = v25;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  *(_QWORD *)&v340 = v32;
  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_41();
  v322 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_41();
  v341 = v36;
  v338 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_41();
  v336 = v38;
  v39 = OUTLINED_FUNCTION_56_7();
  v328 = type metadata accessor for Participant.State(v39);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_41();
  v335 = v41;
  v323 = *(_QWORD *)(OUTLINED_FUNCTION_14_2() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_41();
  v329 = v43;
  v44 = OUTLINED_FUNCTION_33();
  v333 = *(_QWORD *)(v44 - 8);
  v334 = v44;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v45);
  v337 = (char *)&v320 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_56_7();
  v47 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  v326 = *(_BYTE **)(v47 - 8);
  v327 = v47;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v48);
  v325 = (uint64_t)&v320 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_56_7();
  type metadata accessor for OS_dispatch_queue.Attributes();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v50);
  OUTLINED_FUNCTION_101_0();
  type metadata accessor for DispatchQoS();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_11_2();
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((uint64_t)&lazy protocol witness table cache variable for type TUCall and conformance TUCall);
  v339 = v52;
  v362 = type metadata accessor for CallCenter();
  v363 = &protocol witness table for CallCenter;
  v361[0] = v31;
  v360[3] = &type metadata for DefaultParticipantMediaProviderCreator;
  v360[4] = &protocol witness table for DefaultParticipantMediaProviderCreator;
  v360[0] = OUTLINED_FUNCTION_15();
  outlined init with take of DefaultParticipantMediaProviderCreator(v29, v360[0] + 16);
  v359[3] = &type metadata for DefaultParticipantCaptionsProviderCreator;
  v359[4] = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
  v359[0] = OUTLINED_FUNCTION_15();
  v53 = outlined init with take of DefaultParticipantCaptionsProviderCreator(v27, v359[0] + 16);
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable] = 0;
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable] = 0;
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable] = 0;
  *(_QWORD *)&a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController] = 0;
  v324 = OBJC_IVAR____TtC15ConversationKit22ConversationController_audioCallbackQueue;
  OUTLINED_FUNCTION_59(v53, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v54 = a22;
  OUTLINED_FUNCTION_269();
  *(_QWORD *)&v356 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*((void (**)(uint64_t, _QWORD, uint64_t))v326 + 13))(v325, *MEMORY[0x1E0DEF8D0], v327);
  OUTLINED_FUNCTION_61();
  *(_QWORD *)&a22[v324] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes] = 0;
  v55 = &v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes];
  *(_OWORD *)v55 = 0u;
  *((_OWORD *)v55 + 1) = 0u;
  *((_OWORD *)v55 + 2) = 0u;
  *((_OWORD *)v55 + 3) = 0u;
  *((_OWORD *)v55 + 4) = 0u;
  *((_OWORD *)v55 + 5) = 0u;
  v55[96] = 1;
  *(_QWORD *)&v54[OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController] = 0;
  *(_QWORD *)&v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider] = 0;
  v56 = OBJC_IVAR____TtC15ConversationKit22ConversationController_recentPresentationContexts;
  v57 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v54[v56] = Dictionary.init(dictionaryLiteral:)();
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame] = 0;
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit] = 0;
  v58 = (uint64_t)&v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_pendingNoticeWaitingForRemoteScreenShareAttributes];
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
  OUTLINED_FUNCTION_77_0(v58, v60, v61, v59);
  v62 = OBJC_IVAR____TtC15ConversationKit22ConversationController_scheduledVideoInfoResetDates;
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  v63 = v334;
  *(_QWORD *)&v54[v62] = Dictionary.init(dictionaryLiteral:)();
  *(_QWORD *)&v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState] = 0;
  *(_QWORD *)&v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState] = 0;
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests] = 0;
  *(_QWORD *)&v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount] = 0;
  v326 = &v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
  *(_QWORD *)&v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation] = 1;
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction] = 0;
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera] = 0;
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning] = 0;
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo] = 0;
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity] = 0;
  v64 = OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags;
  *(_QWORD *)&v54[v64] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] = 0;
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] = 0;
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_enableVideoOnJoin] = 0;
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] = 0;
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView] = 0;
  OUTLINED_FUNCTION_114_15(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID);
  OUTLINED_FUNCTION_114_15(OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageConversationUUID);
  *(_QWORD *)&v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs] = v57;
  v65 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsThatHaveReceivedFirstVideoFrame] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame] = v65;
  v66 = OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrameTasks;
  type metadata accessor for DispatchWorkItem();
  *(_QWORD *)&v54[v66] = Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_114_15(OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDResolvingCroppedAspectRatio);
  OUTLINED_FUNCTION_4_141(OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID);
  v67 = (uint64_t)&v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession];
  *(_QWORD *)(v67 + 32) = 0;
  *(_OWORD *)v67 = 0u;
  *(_OWORD *)(v67 + 16) = 0u;
  v325 = v67;
  v68 = v337;
  Date.init()();
  v69 = objc_msgSend((id)v340, sel_remoteParticipantHandles);
  OUTLINED_FUNCTION_43_15();
  type metadata accessor for NSObject(v70, v71);
  v73 = v72;
  OUTLINED_FUNCTION_43_15();
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue(v74);
  v327 = v73;
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_14_18();
  v75 = specialized Set.count.getter(&lazy cache variable for type metadata for TUHandle);
  OUTLINED_FUNCTION_2_1();
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter] = v75 == 1;
  v338 = (uint64_t)v54;
  v54[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] = v332;
  (*(void (**)(uint64_t, char *, uint64_t))(v333 + 16))(v335, v68, v63);
  swift_storeEnumTagMultiPayload();
  UUID.init()();
  if (one-time initialization token for shared != -1)
    swift_once();
  v76 = static Defaults.shared;
  v77 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 568))();
  v78 = (*(uint64_t (**)(void))(*(_QWORD *)v76 + 168))();
  v358 = 0;
  v356 = 0u;
  v357 = 0u;
  if (one-time initialization token for default != -1)
    swift_once();
  OUTLINED_FUNCTION_1();
  v79 = (id)static Colors.ParticipantGradients.default;
  v80 = type metadata accessor for Participant.CountdownInfo(0);
  OUTLINED_FUNCTION_77_0((uint64_t)v341, v81, v82, v80);
  v83 = v362;
  v84 = v363;
  OUTLINED_FUNCTION_415_0();
  v85 = (_QWORD *(*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD))v84[13];
  OUTLINED_FUNCTION_35_0();
  v86 = v85(&v352, v340, v339, v83, v84);
  if (v355)
  {
    __swift_project_boxed_opaque_existential_1(&v352, v355);
    OUTLINED_FUNCTION_64();
    v87 = Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v352);
  }
  else
  {
    OUTLINED_FUNCTION_411_1((uint64_t)v86, &demangling cache variable for type metadata for Conversation?);
    v87 = 0;
  }
  v88 = type metadata accessor for ParticipantContactDetailsCache();
  v89 = v88;
  if (one-time initialization token for queue != -1)
    v88 = swift_once();
  MEMORY[0x1E0C80A78](v88);
  OUTLINED_FUNCTION_362_2();
  v90 = v339;
  v91 = v340;
  *(_QWORD *)(v92 - 32) = v89;
  *(_QWORD *)(v92 - 24) = v91;
  *(_QWORD *)(v92 - 16) = v90;
  v328 = v89;
  isUniquelyReferenced_nonNull_native = 0;
  OS_dispatch_queue.sync<A>(execute:)();
  v324 = 0;
  if ((v78 & 1) != 0)
    v94 = 0x100010100;
  else
    v94 = 65792;
  LOBYTE(v319) = v87;
  v95 = (uint64_t)v329;
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(v335, v336, v94 & 0xFFFFFFFFFFFFFFFELL | v77 & 1, (uint64_t)&v356, (uint64_t)v79, 0, 0, (uint64_t)v341, v319, (uint64_t)v352, v320, (uint64_t)ObjectType, v322, v323, v324, v325, (uint64_t)v326, v327, v328,
    (uint64_t)v329,
    v330,
    v331);
  v96 = outlined init with take of Participant(v95, v338 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant);
  v97 = OUTLINED_FUNCTION_39(v96, sel_remoteParticipantHandles);
  v98 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v99 = specialized Set.count.getter(v98);
  if (!v99)
  {
    v106 = OUTLINED_FUNCTION_53();
    v107 = MEMORY[0x1E0DEE9D8];
LABEL_32:
    v336 = a21;
    MEMORY[0x1E0C80A78](v106);
    OUTLINED_FUNCTION_362_2();
    v124 = v337;
    *(_QWORD *)(v125 - 32) = v337;
    *(_QWORD *)(v125 - 24) = v361;
    v126 = v339;
    v127 = (void *)v340;
    *(_QWORD *)(v125 - 16) = v340;
    *(_QWORD *)(v125 - 8) = v126;
    v128 = v324;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((uint64_t)partial apply for closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:), v129, v107);
    v131 = v130;
    OUTLINED_FUNCTION_27();
    *(_QWORD *)(v338 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants) = v131;
    OUTLINED_FUNCTION_147_6();
    OUTLINED_FUNCTION_263();
    OUTLINED_FUNCTION_339_0();
    v132();
    if (*((_QWORD *)&v357 + 1))
    {
      v133 = v358;
      __swift_project_boxed_opaque_existential_1(&v356, *((uint64_t *)&v357 + 1));
      v134 = OUTLINED_FUNCTION_7_16((uint64_t (*)(uint64_t, uint64_t))v133[19]);
      MEMORY[0x1E0C80A78](v134);
      OUTLINED_FUNCTION_362_2();
      *(_QWORD *)(v135 - 32) = v124;
      *(_QWORD *)(v135 - 24) = v361;
      *(_QWORD *)(v135 - 16) = v127;
      *(_QWORD *)(v135 - 8) = v126;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFShySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((void (*)(void **))partial apply for closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:), v136, v134);
      v138 = v137;
      v335 = v128;
      OUTLINED_FUNCTION_53();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v356);
    }
    else
    {
      v335 = v128;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v356, &demangling cache variable for type metadata for Conversation?);
      v138 = MEMORY[0x1E0DEE9D8];
    }
    v139 = v338;
    *(_QWORD *)(v338 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants) = v138;
    outlined init with copy of RadarReporting((uint64_t)v361, v139 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    v140 = (_QWORD *)(v139 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
    *v140 = v127;
    v140[1] = v126;
    outlined init with copy of RadarReporting((uint64_t)v360, v139 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator);
    outlined init with copy of RadarReporting((uint64_t)v359, v139 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator);
    *(_BYTE *)(v139
             + OBJC_IVAR____TtC15ConversationKit22ConversationController_includeLocalParticipantInVisibleParticipants) = BYTE4(v320) & 1;
    OUTLINED_FUNCTION_414_1();
    v141 = (uint64_t *)v326;
    OUTLINED_FUNCTION_1();
    v142 = *v141;
    v341 = v127;
    v143 = specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v341, &v356, v142, 0);
    v144 = v139 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    *(_QWORD *)v144 = v143;
    *(_QWORD *)(v144 + 8) = v145;
    *(_BYTE *)(v144 + 16) = v146;
    *(_QWORD *)(v139 + OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker) = v330;
    v147 = (_QWORD *)(v139 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults);
    *v147 = v336;
    v147[1] = &protocol witness table for Defaults;
    OUTLINED_FUNCTION_414_1();
    v148 = (void *)objc_opt_self();
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v149 = OUTLINED_FUNCTION_11_1();
    v150 = OUTLINED_FUNCTION_39(v149, sel_defaultCenter);
    OUTLINED_FUNCTION_407();
    v151 = objc_allocWithZone((Class)type metadata accessor for VideoMessageController());
    *(_QWORD *)(v139 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController) = VideoMessageController.init(callCenter:notificationCenter:)();
    outlined init with copy of FeatureEligibility?(v331, (uint64_t)&v352, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    if (v355)
    {
      OUTLINED_FUNCTION_410_1();
    }
    else
    {
      *((_QWORD *)&v357 + 1) = &type metadata for SingleDisplaySharingSession;
      v358 = &protocol witness table for SingleDisplaySharingSession;
      v152 = (_OWORD *)OUTLINED_FUNCTION_15();
      *(_QWORD *)&v356 = v152;
      v152[1] = 0u;
      v152[2] = 0u;
      v152[3] = 0u;
      v152[4] = 0u;
      v152[5] = 0u;
      v152[6] = 0u;
      OUTLINED_FUNCTION_411_1((uint64_t)v152, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    }
    v153 = v332;
    v154 = v325;
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of Date?((uint64_t)&v356, v154, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    swift_endAccess();
    OUTLINED_FUNCTION_1();
    v155 = 0;
    v156 = *(char *)(v144 + 16);
    LODWORD(v340) = v153;
    v329 = v148;
    if (v156 < 0 && v153 == 1)
    {
      OUTLINED_FUNCTION_147_6();
      v157 = (void *)OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v139 + 80));
      v155 = objc_msgSend(v157, sel_isPreviewRunning);

    }
    v158 = (void *)v338;
    *(_BYTE *)(v338 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) = v155;

    v350.receiver = v158;
    v350.super_class = ObjectType;
    v159 = objc_msgSendSuper2(&v350, sel_init);
    OUTLINED_FUNCTION_147_6();
    v160 = *(uint64_t (**)(void))(v139 + 104);
    v161 = (char *)v159;
    OUTLINED_FUNCTION_339_0();
    v162 = v160();
    if (v355)
    {
      OUTLINED_FUNCTION_410_1();
      ConversationController.updateIdentityClaimingAssociations(in:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v356);
    }
    else
    {
      OUTLINED_FUNCTION_411_1(v162, &demangling cache variable for type metadata for Conversation?);
    }
    v163 = v340;
    v164 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_112_5();
    v165 = (uint64_t *)&v161[OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock];
    OUTLINED_FUNCTION_2_0();
    v166 = *v165;
    *v165 = (uint64_t)partial apply for closure #4 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:);
    v165[1] = v164;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v166);
    if ((v163 - 1) <= 1)
    {
      v167 = (uint64_t)&v161[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator];
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_468();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantMediaProviderCreator);
      if (OUTLINED_FUNCTION_97())
      {
        v349 = 0;
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v348, (uint64_t)&v347);
        swift_unknownObjectWeakAssign();
        *((_QWORD *)&v357 + 1) = &type metadata for DefaultParticipantMediaProviderCreator;
        v358 = &protocol witness table for DefaultParticipantMediaProviderCreator;
        *(_QWORD *)&v356 = OUTLINED_FUNCTION_15();
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v347, v356 + 16);
        OUTLINED_FUNCTION_2_0();
        __swift_destroy_boxed_opaque_existential_1(v167);
        OUTLINED_FUNCTION_418_1();
        swift_endAccess();
      }
      else
      {
        v348 = 0;
        v349 = 1;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v348, &demangling cache variable for type metadata for DefaultParticipantMediaProviderCreator?);
      }
    }
    v168 = (uint64_t)&v161[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator];
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_468();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantCaptionsProviderCreator);
    if (OUTLINED_FUNCTION_97())
    {
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v347, (uint64_t)v346);
      v346[1] = &protocol witness table for ConversationController;
      swift_unknownObjectWeakAssign();
      *((_QWORD *)&v357 + 1) = &type metadata for DefaultParticipantCaptionsProviderCreator;
      v358 = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
      *(_QWORD *)&v356 = OUTLINED_FUNCTION_15();
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)v346, v356 + 16);
      OUTLINED_FUNCTION_2_0();
      __swift_destroy_boxed_opaque_existential_1(v168);
      OUTLINED_FUNCTION_418_1();
      swift_endAccess();
    }
    else
    {
      v347 = xmmword_1BD6491B0;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v347, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantCaptionsProviderCreator?);
    }
    static ParticipantContactDetailsCache.resetAll()();
    v169 = &v161[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    OUTLINED_FUNCTION_1();
    v339 = v169;
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
    ConversationController.lookupActiveConversation()();
    ConversationController.update(with:)((uint64_t)&v356);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v356, &demangling cache variable for type metadata for Conversation?);
    v170 = &v161[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    OUTLINED_FUNCTION_2_0();
    v171 = *((_QWORD *)v170 + 4);
    v172 = OUTLINED_FUNCTION_157();
    __swift_mutable_project_boxed_opaque_existential_1(v172, v173);
    v174 = *(void (**)(void))(v171 + 56);
    v175 = v161;
    OUTLINED_FUNCTION_339_0();
    v174();
    swift_endAccess();
    v176 = *(void (**)(char *, _UNKNOWN **))(**(_QWORD **)&v175[OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker]
                                                      + 176);
    v98 = v175;
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v176(v161, &protocol witness table for ConversationController);
    OUTLINED_FUNCTION_43();
    ConversationController.updateIDSStatusForVideoMessaging()();
    ConversationController.setupScreenSharingSessionCallbacks()();
    v177 = objc_msgSend(v341, sel_screenShareAttributes);
    ConversationController.updateScreenSharingSession(with:)((uint64_t)v177);

    LOBYTE(v170) = ConversationController.updateIsUsingIPadExternalCamera()();
    v178 = (_BYTE *)(v98 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera);
    OUTLINED_FUNCTION_2_0();
    *v178 = v170 & 1;
    v102 = objc_msgSend(v329, sel_defaultCenter);
    isUniquelyReferenced_nonNull_native = (uint64_t)&selRef_associatedAppBundleIdentifier;
    v179 = objc_msgSend(v102, sel_addObserver_selector_name_object_, v98, sel_handleLocalVideoPreviewFirstFrameArrived_, *MEMORY[0x1E0DBD800], 0);
    v182 = OUTLINED_FUNCTION_3_124((uint64_t)v179, v180, v181, (uint64_t)sel_handleLocalVideoAttributesChanged_, *MEMORY[0x1E0DBD7F0]);
    v185 = OUTLINED_FUNCTION_3_124((uint64_t)v182, v183, v184, (uint64_t)sel_handleSendingVideoChanged_, *MEMORY[0x1E0DBD510]);
    v188 = OUTLINED_FUNCTION_3_124((uint64_t)v185, v186, v187, (uint64_t)sel_handleAudioUplinkChange_, *MEMORY[0x1E0DBD520]);
    if (v163 == 1)
    {
      v191 = OUTLINED_FUNCTION_3_124((uint64_t)v188, v189, v190, (uint64_t)sel_handleCameraZoomBecameAvailable_, *MEMORY[0x1E0DBD818]);
      v194 = OUTLINED_FUNCTION_3_124((uint64_t)v191, v192, v193, (uint64_t)sel_handleCameraZoomBecameUnavailable_, *MEMORY[0x1E0DBD820]);
      v197 = OUTLINED_FUNCTION_3_124((uint64_t)v194, v195, v196, (uint64_t)sel_handlelocalCameraUIDDidChange_, *MEMORY[0x1E0DBD7A8]);
      v200 = OUTLINED_FUNCTION_3_124((uint64_t)v197, v198, v199, (uint64_t)sel_handleCameraCinematicFramingAvailabilityChanged_, *MEMORY[0x1E0DBD788]);
      v203 = OUTLINED_FUNCTION_3_124((uint64_t)v200, v201, v202, (uint64_t)sel_handleCameraCinematicFramingEnabledChanged_, *MEMORY[0x1E0DBD790]);
      v206 = OUTLINED_FUNCTION_3_124((uint64_t)v203, v204, v205, (uint64_t)sel_handleCameraReactionEffectsEnabledChanged_, *MEMORY[0x1E0DBD7F8]);
      v209 = OUTLINED_FUNCTION_3_124((uint64_t)v206, v207, v208, (uint64_t)sel_handleCameraStudioLightEnabledChanged_, *MEMORY[0x1E0DBD808]);
      v212 = OUTLINED_FUNCTION_3_124((uint64_t)v209, v210, v211, (uint64_t)sel_handleCameraBlurEnabledChanged_, *MEMORY[0x1E0DBD780]);
      v215 = OUTLINED_FUNCTION_3_124((uint64_t)v212, v213, v214, (uint64_t)sel_handleCameraListDidChange_, *MEMORY[0x1E0DBD7C8]);
      v188 = OUTLINED_FUNCTION_3_124((uint64_t)v215, v216, v217, (uint64_t)sel_handleSystemPreferredCameraChanged_, *MEMORY[0x1E0DBD810]);
    }
    v218 = OUTLINED_FUNCTION_3_124((uint64_t)v188, v189, v190, (uint64_t)sel_handleScreenSharingDidChange_, *MEMORY[0x1E0DBD518]);
    v221 = OUTLINED_FUNCTION_3_124((uint64_t)v218, v219, v220, (uint64_t)sel_handleVideoCallStatusDidChange_, *MEMORY[0x1E0DBD4F0]);
    v224 = OUTLINED_FUNCTION_3_124((uint64_t)v221, v222, v223, (uint64_t)sel_handleCallStatusDidChange_, *MEMORY[0x1E0DBD4A0]);
    v227 = OUTLINED_FUNCTION_3_124((uint64_t)v224, v225, v226, (uint64_t)sel_handleCallConnected_, *MEMORY[0x1E0DBD488]);
    v230 = OUTLINED_FUNCTION_3_124((uint64_t)v227, v228, v229, (uint64_t)sel_handleCallStartedConnecting_, *MEMORY[0x1E0DBD498]);
    if (!v163)
      v230 = OUTLINED_FUNCTION_3_124((uint64_t)v230, v231, v232, (uint64_t)sel_handleBluetoothAudioFormatChanged_, *MEMORY[0x1E0DBD478]);
    v234 = OUTLINED_FUNCTION_8_115((uint64_t)v230, v231, v232, v233, *MEMORY[0x1E0DBD7B8]);
    v238 = OUTLINED_FUNCTION_8_115((uint64_t)v234, v235, v236, v237, *MEMORY[0x1E0DBD7B0]);
    v242 = OUTLINED_FUNCTION_8_115((uint64_t)v238, v239, v240, v241, *MEMORY[0x1E0DBD7C0]);
    v245 = OUTLINED_FUNCTION_3_124((uint64_t)v242, v243, v244, (uint64_t)sel_handleHoldMusicDidChange_, *MEMORY[0x1E0DBD4B0]);
    OUTLINED_FUNCTION_3_124((uint64_t)v245, v246, v247, (uint64_t)sel_handleScreenSharingAttributesChanged_, *MEMORY[0x1E0DBD540]);
    v248 = static Platform.current.getter();
    if (v248 != 3)
      goto LABEL_58;
    v101 = sel_handleWindowDidFinishResize_;
    v252 = one-time initialization token for didEndWindowLiveResizeNotification;
    v79 = (id)v98;
    if (v252 == -1)
    {
LABEL_57:
      objc_msgSend(v102, *(SEL *)(isUniquelyReferenced_nonNull_native + 856), v79, v101, static Strings.Notifications.didEndWindowLiveResizeNotification, 0);

LABEL_58:
      v253 = OUTLINED_FUNCTION_8_115(v248, v249, v250, v251, *MEMORY[0x1E0DC5348]);
      v257 = OUTLINED_FUNCTION_8_115((uint64_t)v253, v254, v255, v256, *MEMORY[0x1E0DC5350]);
      v261 = OUTLINED_FUNCTION_8_115((uint64_t)v257, v258, v259, v260, *MEMORY[0x1E0DBD408]);
      v265 = OUTLINED_FUNCTION_8_115((uint64_t)v261, v262, v263, v264, *MEMORY[0x1E0DBD400]);
      v269 = OUTLINED_FUNCTION_8_115((uint64_t)v265, v266, v267, v268, *MEMORY[0x1E0DBD410]);
      v273 = OUTLINED_FUNCTION_8_115((uint64_t)v269, v270, v271, v272, *MEMORY[0x1E0DBD418]);
      v277 = OUTLINED_FUNCTION_8_115((uint64_t)v273, v274, v275, v276, *MEMORY[0x1E0DBD3E0]);
      v281 = OUTLINED_FUNCTION_8_115((uint64_t)v277, v278, v279, v280, *MEMORY[0x1E0DBD3E8]);
      v285 = OUTLINED_FUNCTION_8_115((uint64_t)v281, v282, v283, v284, *MEMORY[0x1E0DBD3F0]);
      OUTLINED_FUNCTION_8_115((uint64_t)v285, v286, v287, v288, *MEMORY[0x1E0DBD3F8]);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v289 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v289 + 16) = xmmword_1BD645390;
      v290 = v98 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID;
      OUTLINED_FUNCTION_1();
      v291 = v290;
      v292 = v322;
      outlined init with copy of FeatureEligibility?(v291, v322, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      specialized >> prefix<A>(_:)(v292);
      v294 = v293;
      v296 = v295;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v292, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v297 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v289 + 56) = MEMORY[0x1E0DEA968];
      v298 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v289 + 64) = v298;
      *(_QWORD *)(v289 + 32) = v294;
      *(_QWORD *)(v289 + 40) = v296;
      v299 = (_QWORD *)(v98 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
      OUTLINED_FUNCTION_1();
      *(_QWORD *)&v344 = *v299;
      type metadata accessor for TUConversationState(0);
      v300 = OUTLINED_FUNCTION_427_0();
      *(_QWORD *)(v289 + 96) = v297;
      *(_QWORD *)(v289 + 104) = v298;
      *(_QWORD *)(v289 + 72) = v300;
      *(_QWORD *)(v289 + 80) = v301;
      v302 = v339[16];
      v344 = *(_OWORD *)v339;
      v345 = v302;
      v303 = OUTLINED_FUNCTION_427_0();
      *(_QWORD *)(v289 + 136) = v297;
      *(_QWORD *)(v289 + 144) = v298;
      *(_QWORD *)(v289 + 112) = v303;
      *(_QWORD *)(v289 + 120) = v304;
      LOBYTE(v344) = v340;
      v305 = OUTLINED_FUNCTION_427_0();
      *(_QWORD *)(v289 + 176) = v297;
      *(_QWORD *)(v289 + 184) = v298;
      *(_QWORD *)(v289 + 152) = v305;
      *(_QWORD *)(v289 + 160) = v306;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v307 = OUTLINED_FUNCTION_15();
      v340 = xmmword_1BD6441D0;
      *(_OWORD *)(v307 + 16) = xmmword_1BD6441D0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      v308 = swift_allocObject();
      *(_OWORD *)(v308 + 16) = v340;
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_354_1();
      _s15ConversationKit11ParticipantVWOcTm_4();
      OUTLINED_FUNCTION_1();
      v342 = v308;
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit11ParticipantVGG_SSs5NeverOTg506_sSi15f5Kit11h34VSSIgyno_Si6offset_AC7elementtSSs5I355OIegnrzr_TR04_s15a103Kit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalC217InVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSSSi_AA0O0VtXEfU3_Tf3nnnpf_nTf1cn_n();
      v310 = v309;
      OUTLINED_FUNCTION_27();
      v342 = v310;
      OUTLINED_FUNCTION_31_11();
      OUTLINED_FUNCTION_431((uint64_t)&lazy protocol witness table cache variable for type [String] and conformance [A]);
      v311 = BidirectionalCollection<>.joined(separator:)();
      v313 = v312;
      OUTLINED_FUNCTION_2_1();
      v342 = v311;
      v343 = v313;
      v314 = String.init<A>(reflecting:)();
      *(_QWORD *)(v307 + 56) = v297;
      *(_QWORD *)(v307 + 64) = v298;
      *(_QWORD *)(v307 + 32) = v314;
      *(_QWORD *)(v307 + 40) = v315;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_239_1();
      OUTLINED_FUNCTION_133();
      ConversationController.fetchExistingScreenSharingAttributes()();
      if (*(_BYTE *)(v98 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) == 1)
      {
        v316 = v362;
        v317 = v363;
        OUTLINED_FUNCTION_415_0();
        v318 = (void *)((uint64_t (*)(uint64_t, _UNKNOWN **))v317[10])(v316, v317);
        objc_msgSend(v318, sel_startPreview);
        swift_release();

        v102 = v318;
      }
      else
      {
        swift_release();
      }

      swift_release();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v331, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v359);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v360);
      OUTLINED_FUNCTION_60_11(v333);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v361);
      OUTLINED_FUNCTION_52_1();
      return;
    }
LABEL_65:
    swift_once();
    goto LABEL_57;
  }
  v100 = v99;
  v351[0] = MEMORY[0x1E0DEE9D8];
  v101 = (char *)v351;
  specialized ContiguousArray.reserveCapacity(_:)();
  v102 = (id)(v98 & 0xC000000000000001);
  if ((v98 & 0xC000000000000001) != 0)
  {
    v103 = __CocoaSet.startIndex.getter();
    v105 = 1;
  }
  else
  {
    v103 = specialized _NativeSet.startIndex.getter(v98);
    v105 = v108 & 1;
  }
  v352 = (_QWORD *)v103;
  v353 = v104;
  v354 = v105;
  if (v100 < 0)
  {
    __break(1u);
    goto LABEL_65;
  }
  v109 = (void *)(v98 & 0xFFFFFFFFFFFFFF8);
  if (v98 < 0)
    v109 = (void *)v98;
  v341 = v109;
  while (1)
  {
    v111 = (uint64_t)v352;
    v110 = v353;
    v112 = v354;
    v113 = OUTLINED_FUNCTION_464_0();
    specialized Set.subscript.getter(v113, v114, v115, v116);
    if (!(id)TUNormalizedHandleForTUHandle())
      break;
    OUTLINED_FUNCTION_14_18();
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    OUTLINED_FUNCTION_396_1();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (v102)
    {
      if ((v112 & 1) == 0)
        goto LABEL_67;
      if (__CocoaSet.Index.handleBitPattern.getter())
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      else
        isUniquelyReferenced_nonNull_native = 1;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
      v123 = (void (*)(__int128 *, _QWORD))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v123(&v356, 0);
    }
    else
    {
      v117 = OUTLINED_FUNCTION_464_0();
      specialized _NativeSet.index(after:)(v117, v118, v119, v120);
      OUTLINED_FUNCTION_45_21();
      v122 = v121;
      outlined consume of Set<TUHandle>.Index._Variant(v111, v110, v112);
      v352 = v351;
      v353 = isUniquelyReferenced_nonNull_native;
      v354 = v122 & 1;
    }
    if (!--v100)
    {
      outlined consume of Set<TUHandle>.Index._Variant((uint64_t)v352, v353, v354);
      v107 = v351[0];
      v106 = OUTLINED_FUNCTION_53();
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_67:
  __break(1u);
}

unint64_t specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(void *a1, _QWORD *a2, uint64_t a3, char a4)
{
  BOOL v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  if (!objc_msgSend(a1, sel_isSendingVideo))
    goto LABEL_7;
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 152))() & 1) != 0)
  {
    outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v28);
    if ((a4 & 1) != 0)
    {
      v7 = 0;
    }
    else
    {
      v12 = v29;
      v13 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      v14 = objc_msgSend((id)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13), sel_currentVideoCalls);
      swift_unknownObjectRelease();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
      v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        v16 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v7 = v16 < 2;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    v17 = objc_msgSend(a1, sel_isUplinkMuted);
    if (v7)
    {
      v18 = 0;
    }
    else
    {
      v19 = a2[3];
      v20 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v19);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v20 + 32))(v25, v19, v20);
      v21 = v26;
      v22 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      v18 = (unint64_t)v23 << 8;
    }
    objc_msgSend(a1, sel_isSharingScreen);

    v11 = v18 | v17;
  }
  else
  {
LABEL_7:
    v8 = objc_msgSend(a1, sel_isUplinkMuted);
    v9 = objc_msgSend(a1, sel_isSharingScreen);

    v10 = 256;
    if (!v9)
      v10 = 0;
    v11 = v10 | v8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v11;
}

char *specialized MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(void *a1, char *a2, void *a3, uint64_t a4, void *a5, _BYTE *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  void **v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  char *v42;
  void **v43;
  void *v44;
  id v45;
  void *v46;
  char *v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t (*v51)(id);
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  char *v69;
  char *v70;
  _QWORD *v71;
  void (*v72)(char *);
  char *v73;
  _QWORD *v74;
  id v75;
  char *v76;
  id v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  void *v238;
  uint64_t v239;
  NSObject *v240;
  uint64_t v241;
  NSObject *v242;
  void (*v243)(void);
  char *v244;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  objc_class *ObjectType;
  char *v250;
  id v251;
  void *v252;
  id v253;
  char *v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  objc_super v261;
  char v262;
  _BYTE v263[224];

  v253 = a5;
  v254 = a2;
  v255 = a4;
  v251 = a3;
  v252 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v257 = type metadata accessor for Participant(0);
  v247 = *(_QWORD *)(v257 - 8);
  MEMORY[0x1E0C80A78](v257);
  v256 = (char *)&v246 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v258 - 8);
  MEMORY[0x1E0C80A78](v258);
  v259 = (char *)&v246 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v246 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_queryForSuggestedBannerStartTime];
  v15 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v15);
  *(_QWORD *)&a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_remoteControlAccessoryEventsAgent] = 0;
  a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow] = 0;
  v16 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags;
  v17 = objc_allocWithZone(MEMORY[0x1E0DBD2F0]);
  v18 = a6;
  *(_QWORD *)&a6[v16] = objc_msgSend(v17, sel_init);
  v19 = (void **)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox];
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox] = 0;
  v20 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captioningStateManager;
  if (one-time initialization token for shared != -1)
    swift_once();
  v21 = static ConversationCapabilities.shared;
  type metadata accessor for CaptioningStateManager();
  swift_allocObject();
  *(_QWORD *)&v18[v20] = CaptioningStateManager.init(capabilities:)(v21);
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible] = 2;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask] = 0;
  v22 = (uint64_t)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTip];
  v23 = type metadata accessor for VideoReactionPickerTip();
  __swift_storeEnumTagSinglePayload(v22, 1, 1, v23);
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsTips] = 1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects] = 0;
  v24 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  *(_OWORD *)v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((_OWORD *)v24 + 2) = 0u;
  *((_OWORD *)v24 + 3) = 0u;
  *((_QWORD *)v24 + 8) = 0;
  v25 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_linkShareCoordinator];
  *((_QWORD *)v25 + 4) = 0;
  *(_OWORD *)v25 = 0u;
  *((_OWORD *)v25 + 1) = 0u;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner] = 2;
  v26 = (uint64_t)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOi0_(v263);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v263, v26, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didNotifyMutedCaller] = 0;
  v27 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedPresentationSize];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  v28 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsConnectionAnimation] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState] = 4;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation] = 1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations] = 2;
  v29 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__isOnScreen];
  v262 = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v29, v13, v10);
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner] = 0;
  v30 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  v31 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio];
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  v31[16] = 1;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentGridIsFullScreen] = 2;
  v32 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  v33 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  v34 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isAmbient] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView] = 1;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews] = 0;
  v35 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame];
  *(_OWORD *)v35 = 0u;
  *((_OWORD *)v35 + 1) = 0u;
  v36 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene];
  *(_OWORD *)v36 = 0u;
  *((_OWORD *)v36 + 1) = 0u;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isScreenSharingFullScreen] = 0;
  v37 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
  *v37 = 4;
  *((_QWORD *)v37 + 1) = 0;
  *((_QWORD *)v37 + 2) = 0;
  v38 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callUUIDsThatPresentedSNaPSecondaryPill] = MEMORY[0x1E0DEE9D8];
  v39 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer;
  *(_QWORD *)&v18[v39] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TonePlayer()), sel_init);
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_subscriptions] = MEMORY[0x1E0DEE9E8];
  v40 = v254;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController] = v254;
  v41 = objc_allocWithZone((Class)CNKBannerPresentationManager);
  v254 = (char *)v40;
  v42 = (char *)objc_msgSend(v41, sel_init);
  v43 = (void **)&v42[OBJC_IVAR___CNKBannerPresentationManager_value];
  swift_beginAccess();
  v44 = *v43;
  v45 = v251;
  *v43 = v251;
  v251 = v45;

  swift_beginAccess();
  v46 = *v19;
  *v19 = v42;
  v250 = v42;

  v47 = &v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults];
  v48 = v255;
  *(_QWORD *)v47 = v255;
  *((_QWORD *)v47 + 1) = &protocol witness table for Defaults;
  v49 = v253;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features] = v253;
  swift_beginAccess();
  if (static AmbientState.isPresented == 1)
  {
    v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle] = 0;
    swift_retain();
    v50 = v49;
  }
  else
  {
    v51 = *(uint64_t (**)(id))(*(_QWORD *)v48 + 504);
    swift_retain();
    v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle] = v51(v49) & 1;
  }
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState] = 0;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState] = 0;
  v248 = v18;
  v18[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  v52 = *(_QWORD *)(v247 + 72);
  v53 = (*(unsigned __int8 *)(v247 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v247 + 80);
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_1BD6441D0;
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_4();
  swift_beginAccess();
  v260 = v54;
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  v55 = v260;
  v56 = *(_QWORD *)(v260 + 16);
  v57 = v259;
  if (v56)
  {
    v260 = v38;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v56, 0);
    v247 = v55;
    v58 = v55 + v53;
    v59 = v258;
    do
    {
      v60 = (uint64_t)v256;
      _s15ConversationKit11ParticipantVWOcTm_4();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v57, v60 + *(int *)(v257 + 20), v59);
      outlined destroy of AccountUpdateNotice(v60, type metadata accessor for Participant);
      v61 = v260;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v61 + 16) + 1, 1);
        v61 = v260;
      }
      v63 = *(_QWORD *)(v61 + 16);
      v62 = *(_QWORD *)(v61 + 24);
      if (v63 >= v62 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1);
        v61 = v260;
      }
      *(_QWORD *)(v61 + 16) = v63 + 1;
      v64 = v61
          + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
          + *(_QWORD *)(v8 + 72) * v63;
      v59 = v258;
      v57 = v259;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v64, v259, v258);
      v260 = v61;
      v58 += v52;
      --v56;
    }
    while (v56);
    v65 = swift_bridgeObjectRelease();
  }
  else
  {
    v65 = swift_bridgeObjectRelease();
    v61 = MEMORY[0x1E0DEE9D8];
  }
  v66 = v255;
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v255 + 504))(v65) & 1) != 0)
    v67 = 4;
  else
    v67 = 16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>);
  swift_allocObject();
  v68 = specialized MostActiveParticipantsController.init(participantIdentifiers:configuration:)(v61, v67);
  v69 = v248;
  *(_QWORD *)&v248[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController] = v68;
  *(_QWORD *)&v69[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PipZoomControl()), sel_init);
  *(_QWORD *)&v69[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MutedTalkerBannerViewController()), sel_init);
  *(_QWORD *)&v69[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation] = 1;

  v261.receiver = v69;
  v261.super_class = ObjectType;
  v70 = (char *)objc_msgSendSuper2(&v261, sel_initWithNibName_bundle_, 0, 0);
  v71 = *(_QWORD **)&v70[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController];
  v72 = *(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v71) + 0x148);
  v73 = v70;
  v74 = v71;
  v72(v70);

  v75 = objc_allocWithZone((Class)type metadata accessor for EffectsLayoutController());
  v76 = v73;
  v77 = EffectsLayoutController.init(containingViewController:)(v76);
  v78 = *(void **)&v76[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController];
  *(_QWORD *)&v76[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController] = v77;

  v79 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v80 = v254;
  v81 = (uint64_t *)&v254[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant];
  swift_beginAccess();
  v82 = *v81;
  *v81 = (uint64_t)partial apply for closure #2 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v81[1] = v79;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v82);
  v83 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v84 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant];
  swift_beginAccess();
  v85 = *v84;
  *v84 = (uint64_t)partial apply for closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v84[1] = v83;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v85);
  v86 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v87 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant];
  swift_beginAccess();
  v88 = *v87;
  *v87 = (uint64_t)partial apply for closure #4 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v87[1] = v86;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v88);
  v89 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v90 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant];
  swift_beginAccess();
  v91 = *v90;
  *v90 = (uint64_t)partial apply for closure #5 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v90[1] = v89;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v91);
  v92 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v93 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant];
  swift_beginAccess();
  v94 = *v93;
  *v93 = (uint64_t)partial apply for closure #6 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v93[1] = v92;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v94);
  v95 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v96 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant];
  swift_beginAccess();
  v97 = *v96;
  *v96 = (uint64_t)partial apply for closure #7 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v96[1] = v95;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v97);
  v98 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v99 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange];
  swift_beginAccess();
  v100 = *v99;
  *v99 = (uint64_t)partial apply for closure #8 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v99[1] = v98;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v100);
  v101 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v102 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange];
  swift_beginAccess();
  v103 = *v102;
  *v102 = (uint64_t)partial apply for closure #9 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v102[1] = v101;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v103);
  v104 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v105 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
  swift_beginAccess();
  v106 = *v105;
  *v105 = (uint64_t)partial apply for closure #10 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v105[1] = v104;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v106);
  v107 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v108 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition];
  swift_beginAccess();
  v109 = *v108;
  *v108 = (uint64_t)partial apply for closure #11 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v108[1] = v107;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v109);
  v110 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v111 = (_QWORD *)swift_allocObject();
  v111[2] = v110;
  v111[3] = v66;
  v111[4] = &protocol witness table for Defaults;
  v112 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo];
  swift_beginAccess();
  v113 = *v112;
  *v112 = (uint64_t)closure #12 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)partial apply;
  v112[1] = (uint64_t)v111;
  swift_retain();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v113);
  v114 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v115 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing];
  swift_beginAccess();
  v116 = *v115;
  *v115 = (uint64_t)partial apply for closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v115[1] = v114;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v116);
  v117 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v118 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive];
  swift_beginAccess();
  v119 = *v118;
  *v118 = (uint64_t)partial apply for closure #14 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v118[1] = v117;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v119);
  v120 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v121 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode];
  swift_beginAccess();
  v122 = *v121;
  *v121 = (uint64_t)partial apply for closure #15 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v121[1] = v120;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v122);
  v123 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v124 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive];
  swift_beginAccess();
  v125 = *v124;
  *v124 = (uint64_t)partial apply for closure #16 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v124[1] = v123;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v125);
  v126 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v127 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange];
  swift_beginAccess();
  v128 = *v127;
  *v127 = (uint64_t)partial apply for closure #17 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v127[1] = v126;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v128);
  v129 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v130 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange];
  swift_beginAccess();
  v131 = *v130;
  *v130 = (uint64_t)partial apply for closure #18 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v130[1] = v129;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v131);
  v132 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v133 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange];
  swift_beginAccess();
  v134 = *v133;
  *v133 = (uint64_t)partial apply for closure #19 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v133[1] = v132;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v134);
  v135 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v136 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact];
  swift_beginAccess();
  v137 = *v136;
  *v136 = (uint64_t)partial apply for closure #20 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v136[1] = v135;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v137);
  v138 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v139 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting];
  swift_beginAccess();
  v140 = *v139;
  *v139 = (uint64_t)partial apply for closure #21 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v139[1] = v138;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v140);
  v141 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v142 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange];
  swift_beginAccess();
  v143 = *v142;
  *v142 = (uint64_t)partial apply for closure #22 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v142[1] = v141;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v143);
  v144 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v145 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange];
  swift_beginAccess();
  v146 = *v145;
  *v145 = (uint64_t)partial apply for closure #23 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v145[1] = v144;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v146);
  v147 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v148 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange];
  swift_beginAccess();
  v149 = *v148;
  *v148 = (uint64_t)partial apply for closure #24 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v148[1] = v147;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v149);
  v150 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v151 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange];
  swift_beginAccess();
  v152 = *v151;
  *v151 = (uint64_t)partial apply for closure #25 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v151[1] = v150;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v152);
  v153 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v154 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange];
  swift_beginAccess();
  v155 = *v154;
  *v154 = (uint64_t)partial apply for closure #26 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v154[1] = v153;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v155);
  v156 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v157 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange];
  swift_beginAccess();
  v158 = *v157;
  *v157 = (uint64_t)partial apply for closure #27 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v157[1] = v156;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v158);
  v159 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v160 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange];
  swift_beginAccess();
  v161 = *v160;
  *v160 = (uint64_t)partial apply for closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v160[1] = v159;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v161);
  v162 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v163 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange];
  swift_beginAccess();
  v164 = *v163;
  *v163 = (uint64_t)partial apply for closure #29 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v163[1] = v162;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v164);
  v165 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v166 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange];
  swift_beginAccess();
  v167 = *v166;
  *v166 = (uint64_t)partial apply for closure #30 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v166[1] = v165;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v167);
  v168 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v169 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange];
  swift_beginAccess();
  v170 = *v169;
  *v169 = (uint64_t)partial apply for closure #31 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v169[1] = v168;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v170);
  v171 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v172 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange];
  swift_beginAccess();
  v173 = *v172;
  *v172 = (uint64_t)partial apply for closure #32 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v172[1] = v171;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v173);
  v174 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v175 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize];
  swift_beginAccess();
  v176 = *v175;
  *v175 = (uint64_t)partial apply for closure #33 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v175[1] = v174;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v176);
  v177 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v178 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange];
  swift_beginAccess();
  v179 = *v178;
  *v178 = (uint64_t)partial apply for closure #34 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v178[1] = v177;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v179);
  v180 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v181 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
  swift_beginAccess();
  v182 = *v181;
  *v181 = (uint64_t)closure #35 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)partial apply;
  v181[1] = v180;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v182);
  v183 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v184 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange];
  swift_beginAccess();
  v185 = *v184;
  *v184 = (uint64_t)partial apply for closure #36 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v184[1] = v183;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v185);
  v186 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v187 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls];
  swift_beginAccess();
  v188 = *v187;
  *v187 = (uint64_t)partial apply for closure #37 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v187[1] = v186;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v188);
  v189 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v190 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic];
  swift_beginAccess();
  v191 = *v190;
  *v190 = (uint64_t)partial apply for closure #38 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v190[1] = v189;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v191);
  v192 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v193 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants];
  swift_beginAccess();
  v194 = *v193;
  *v193 = (uint64_t)partial apply for closure #39 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v193[1] = v192;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v194);
  v195 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v196 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations];
  swift_beginAccess();
  v197 = *v196;
  *v196 = (uint64_t)partial apply for closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v196[1] = v195;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v197);
  v198 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v199 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange];
  swift_beginAccess();
  v200 = *v199;
  *v199 = (uint64_t)partial apply for closure #41 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v199[1] = v198;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v200);
  v201 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v202 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame];
  swift_beginAccess();
  v203 = *v202;
  *v202 = (uint64_t)partial apply for closure #42 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v202[1] = v201;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v203);
  v204 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v205 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange];
  swift_beginAccess();
  v206 = *v205;
  *v205 = (uint64_t)partial apply for closure #43 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v205[1] = v204;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v206);
  v207 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v208 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants];
  swift_beginAccess();
  v209 = *v208;
  *v208 = (uint64_t)partial apply for closure #44 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v208[1] = v207;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v209);
  v210 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v211 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange];
  swift_beginAccess();
  v212 = *v211;
  *v211 = (uint64_t)partial apply for closure #45 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v211[1] = v210;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v212);
  v213 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v214 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment];
  swift_beginAccess();
  v215 = *v214;
  *v214 = (uint64_t)partial apply for closure #46 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v214[1] = v213;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v215);
  v216 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v217 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions];
  swift_beginAccess();
  v218 = *v217;
  *v217 = (uint64_t)partial apply for closure #47 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v217[1] = v216;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v218);
  v219 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v220 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange];
  swift_beginAccess();
  v221 = *v220;
  *v220 = (uint64_t)partial apply for closure #48 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v220[1] = v219;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v221);
  v222 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v223 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities];
  swift_beginAccess();
  v224 = *v223;
  *v223 = (uint64_t)partial apply for closure #49 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v223[1] = v222;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v224);
  v225 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v226 = (uint64_t *)&v80[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured];
  swift_beginAccess();
  v227 = *v226;
  *v226 = (uint64_t)partial apply for closure #50 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v226[1] = v225;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v227);
  v228 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController;
  v229 = *(_QWORD *)&v76[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController];
  v230 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  v231 = *(_QWORD *)(v229 + 16);
  *(_QWORD *)(v229 + 16) = closure #51 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)partial apply;
  *(_QWORD *)(v229 + 24) = v230;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v231);
  v232 = *(_QWORD *)&v76[v228];
  v233 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v234 = (_QWORD *)swift_allocObject();
  v234[2] = v233;
  v234[3] = v66;
  v234[4] = &protocol witness table for Defaults;
  swift_beginAccess();
  v235 = *(_QWORD *)(v232 + 32);
  *(_QWORD *)(v232 + 32) = closure #52 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)partial apply;
  *(_QWORD *)(v232 + 40) = v234;
  swift_retain();
  v236 = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v235);
  v237 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v66 + 136))(v236);
  v238 = v252;
  if ((v237 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    objc_msgSend(v238, sel_setUplinkMuted_, 1);
  }
  MultiwayViewController.testing_callStatusDidChange(_:)((int)objc_msgSend(v238, sel_status));
  v239 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  swift_retain();
  v240 = static OS_dispatch_queue.main.getter();
  notifyRegisterDispatch(name:queue:handler:)(0xD000000000000027, 0x80000001BD6723E0, v240, (uint64_t)partial apply for closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:), v239);
  swift_release_n();

  v241 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v242 = static OS_dispatch_queue.main.getter();
  notifyRegisterDispatch(name:queue:handler:)(0xD000000000000028, 0x80000001BD672410, v242, (uint64_t)partial apply for closure #54 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:), v241);
  swift_release_n();

  MultiwayViewController.registerForSystemEventsIfNecessary()();
  if (one-time initialization token for shared != -1)
    swift_once();
  v243 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ScreenSharingInteractionController.shared)
                          + 0x1C8);
  v244 = v76;
  v243();

  swift_release();
  return v244;
}

char *specialized MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(void *a1, char *a2, void *a3, uint64_t a4, void *a5, _BYTE *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  void **v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  char *v44;
  void **v45;
  void *v46;
  id v47;
  void *v48;
  char *v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  id v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  char *v73;
  char *v74;
  _QWORD *v75;
  void (*v76)(char *);
  char *v77;
  _QWORD *v78;
  id v79;
  char *v80;
  id v81;
  void *v82;
  uint64_t v83;
  char *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  uint64_t v239;
  char v240;
  void *v241;
  uint64_t v242;
  NSObject *v243;
  uint64_t v244;
  NSObject *v245;
  void (*v246)(void);
  char *v247;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  objc_class *ObjectType;
  char *v253;
  id v254;
  void *v255;
  uint64_t v256;
  id v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  objc_super v266;
  char v267;
  _BYTE v268[224];

  v256 = a8;
  v257 = a5;
  v258 = a7;
  v259 = a2;
  v260 = a4;
  v254 = a3;
  v255 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v262 = type metadata accessor for Participant(0);
  v250 = *(_QWORD *)(v262 - 8);
  MEMORY[0x1E0C80A78](v262);
  v261 = (char *)&v249 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = type metadata accessor for UUID();
  v10 = *(_QWORD *)(v264 - 8);
  MEMORY[0x1E0C80A78](v264);
  v263 = (char *)&v249 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v249 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)&a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_queryForSuggestedBannerStartTime];
  v17 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v16, 1, 1, v17);
  *(_QWORD *)&a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_remoteControlAccessoryEventsAgent] = 0;
  a6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow] = 0;
  v18 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags;
  v19 = objc_allocWithZone(MEMORY[0x1E0DBD2F0]);
  v20 = a6;
  *(_QWORD *)&a6[v18] = objc_msgSend(v19, sel_init);
  v21 = (void **)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox];
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox] = 0;
  v22 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captioningStateManager;
  if (one-time initialization token for shared != -1)
    swift_once();
  v23 = static ConversationCapabilities.shared;
  type metadata accessor for CaptioningStateManager();
  swift_allocObject();
  *(_QWORD *)&v20[v22] = CaptioningStateManager.init(capabilities:)(v23);
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive] = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible] = 2;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask] = 0;
  v24 = (uint64_t)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTip];
  v25 = type metadata accessor for VideoReactionPickerTip();
  __swift_storeEnumTagSinglePayload(v24, 1, 1, v25);
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsTips] = 1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects] = 0;
  v26 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  *(_OWORD *)v26 = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  *((_OWORD *)v26 + 2) = 0u;
  *((_OWORD *)v26 + 3) = 0u;
  *((_QWORD *)v26 + 8) = 0;
  v27 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_linkShareCoordinator];
  *((_QWORD *)v27 + 4) = 0;
  *(_OWORD *)v27 = 0u;
  *((_OWORD *)v27 + 1) = 0u;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner] = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner] = 2;
  v28 = (uint64_t)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOi0_(v268);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v268, v28, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController] = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer] = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didNotifyMutedCaller] = 0;
  v29 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedPresentationSize];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v30 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsConnectionAnimation] = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState] = 4;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation] = 1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations] = 2;
  v31 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__isOnScreen];
  v267 = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v31, v15, v12);
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo] = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner] = 0;
  v32 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  v33 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  v33[16] = 1;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentGridIsFullScreen] = 2;
  v34 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0;
  v35 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler];
  *(_QWORD *)v35 = 0;
  *((_QWORD *)v35 + 1) = 0;
  v36 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler];
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen] = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isAmbient] = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled] = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView] = 1;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews] = 0;
  v37 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame];
  *(_OWORD *)v37 = 0u;
  *((_OWORD *)v37 + 1) = 0u;
  v38 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene];
  *(_OWORD *)v38 = 0u;
  *((_OWORD *)v38 + 1) = 0u;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isScreenSharingFullScreen] = 0;
  v39 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
  *v39 = 4;
  *((_QWORD *)v39 + 1) = 0;
  *((_QWORD *)v39 + 2) = 0;
  v40 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callUUIDsThatPresentedSNaPSecondaryPill] = MEMORY[0x1E0DEE9D8];
  v41 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer;
  *(_QWORD *)&v20[v41] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TonePlayer()), sel_init);
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_subscriptions] = MEMORY[0x1E0DEE9E8];
  v42 = v259;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController] = v259;
  v43 = objc_allocWithZone((Class)CNKBannerPresentationManager);
  v259 = (char *)v42;
  v44 = (char *)objc_msgSend(v43, sel_init);
  v45 = (void **)&v44[OBJC_IVAR___CNKBannerPresentationManager_value];
  swift_beginAccess();
  v46 = *v45;
  v47 = v254;
  *v45 = v254;
  v254 = v47;

  swift_beginAccess();
  v48 = *v21;
  *v21 = v44;
  v253 = v44;

  v49 = &v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults];
  v50 = v256;
  v51 = v257;
  *(_QWORD *)v49 = v260;
  *((_QWORD *)v49 + 1) = v50;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features] = v51;
  swift_beginAccess();
  if (static AmbientState.isPresented == 1)
  {
    v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle] = 0;
    swift_unknownObjectRetain();
    v52 = v51;
  }
  else
  {
    v53 = v50;
    v54 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 248);
    swift_unknownObjectRetain();
    v55 = v51;
    v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle] = v54(v258, v53) & 1;
  }
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState] = 0;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState] = 0;
  v251 = v20;
  v20[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  v56 = *(_QWORD *)(v250 + 72);
  v57 = (*(unsigned __int8 *)(v250 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1BD6441D0;
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_4();
  swift_beginAccess();
  v265 = v58;
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  v59 = v265;
  v60 = *(_QWORD *)(v265 + 16);
  if (v60)
  {
    v265 = v40;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v60, 0);
    v250 = v59;
    v61 = v59 + v57;
    v63 = v263;
    v62 = v264;
    do
    {
      v64 = (uint64_t)v261;
      _s15ConversationKit11ParticipantVWOcTm_4();
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v63, v64 + *(int *)(v262 + 20), v62);
      outlined destroy of AccountUpdateNotice(v64, type metadata accessor for Participant);
      v65 = v265;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v65 + 16) + 1, 1);
        v65 = v265;
      }
      v67 = *(_QWORD *)(v65 + 16);
      v66 = *(_QWORD *)(v65 + 24);
      if (v67 >= v66 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
        v65 = v265;
      }
      *(_QWORD *)(v65 + 16) = v67 + 1;
      v68 = v65
          + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
          + *(_QWORD *)(v10 + 72) * v67;
      v63 = v263;
      v62 = v264;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v68, v263, v264);
      v265 = v65;
      v61 += v56;
      --v60;
    }
    while (v60);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v65 = MEMORY[0x1E0DEE9D8];
  }
  v69 = v256;
  v70 = v260;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v256 + 248))(v258, v256) & 1) != 0)
    v71 = 4;
  else
    v71 = 16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>);
  swift_allocObject();
  v72 = specialized MostActiveParticipantsController.init(participantIdentifiers:configuration:)(v65, v71);
  v73 = v251;
  *(_QWORD *)&v251[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController] = v72;
  *(_QWORD *)&v73[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PipZoomControl()), sel_init);
  *(_QWORD *)&v73[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MutedTalkerBannerViewController()), sel_init);
  *(_QWORD *)&v73[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation] = 1;

  v266.receiver = v73;
  v266.super_class = ObjectType;
  v74 = (char *)objc_msgSendSuper2(&v266, sel_initWithNibName_bundle_, 0, 0);
  v75 = *(_QWORD **)&v74[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController];
  v76 = *(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v75) + 0x148);
  v77 = v74;
  v78 = v75;
  v76(v74);

  v79 = objc_allocWithZone((Class)type metadata accessor for EffectsLayoutController());
  v80 = v77;
  v81 = EffectsLayoutController.init(containingViewController:)(v80);
  v82 = *(void **)&v80[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController];
  *(_QWORD *)&v80[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController] = v81;

  v83 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v84 = v259;
  v85 = (uint64_t *)&v259[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant];
  swift_beginAccess();
  v86 = *v85;
  *v85 = (uint64_t)partial apply for closure #2 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v85[1] = v83;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v86);
  v87 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v88 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant];
  swift_beginAccess();
  v89 = *v88;
  *v88 = (uint64_t)partial apply for closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v88[1] = v87;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v89);
  v90 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v91 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant];
  swift_beginAccess();
  v92 = *v91;
  *v91 = (uint64_t)partial apply for closure #4 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v91[1] = v90;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v92);
  v93 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v94 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant];
  swift_beginAccess();
  v95 = *v94;
  *v94 = (uint64_t)partial apply for closure #5 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v94[1] = v93;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v95);
  v96 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v97 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant];
  swift_beginAccess();
  v98 = *v97;
  *v97 = (uint64_t)partial apply for closure #6 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v97[1] = v96;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v98);
  v99 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v100 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant];
  swift_beginAccess();
  v101 = *v100;
  *v100 = (uint64_t)partial apply for closure #7 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v100[1] = v99;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v101);
  v102 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v103 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange];
  swift_beginAccess();
  v104 = *v103;
  *v103 = (uint64_t)partial apply for closure #8 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v103[1] = v102;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v104);
  v105 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v106 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange];
  swift_beginAccess();
  v107 = *v106;
  *v106 = (uint64_t)partial apply for closure #9 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v106[1] = v105;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v107);
  v108 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v109 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
  swift_beginAccess();
  v110 = *v109;
  *v109 = (uint64_t)partial apply for closure #10 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v109[1] = v108;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v110);
  v111 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v112 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition];
  swift_beginAccess();
  v113 = *v112;
  *v112 = (uint64_t)partial apply for closure #11 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v112[1] = v111;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v113);
  v114 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v115 = (_QWORD *)swift_allocObject();
  v115[2] = v114;
  v115[3] = v70;
  v115[4] = v69;
  v116 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo];
  swift_beginAccess();
  v117 = *v116;
  *v116 = (uint64_t)partial apply for closure #12 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v116[1] = (uint64_t)v115;
  swift_unknownObjectRetain();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v117);
  v118 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v119 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing];
  swift_beginAccess();
  v120 = *v119;
  *v119 = (uint64_t)partial apply for closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v119[1] = v118;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v120);
  v121 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v122 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive];
  swift_beginAccess();
  v123 = *v122;
  *v122 = (uint64_t)partial apply for closure #14 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v122[1] = v121;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v123);
  v124 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v125 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode];
  swift_beginAccess();
  v126 = *v125;
  *v125 = (uint64_t)partial apply for closure #15 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v125[1] = v124;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v126);
  v127 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v128 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive];
  swift_beginAccess();
  v129 = *v128;
  *v128 = (uint64_t)partial apply for closure #16 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v128[1] = v127;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v129);
  v130 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v131 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange];
  swift_beginAccess();
  v132 = *v131;
  *v131 = (uint64_t)partial apply for closure #17 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v131[1] = v130;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v132);
  v133 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v134 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange];
  swift_beginAccess();
  v135 = *v134;
  *v134 = (uint64_t)partial apply for closure #18 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v134[1] = v133;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v135);
  v136 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v137 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange];
  swift_beginAccess();
  v138 = *v137;
  *v137 = (uint64_t)partial apply for closure #19 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v137[1] = v136;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v138);
  v139 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v140 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact];
  swift_beginAccess();
  v141 = *v140;
  *v140 = (uint64_t)partial apply for closure #20 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v140[1] = v139;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v141);
  v142 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v143 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting];
  swift_beginAccess();
  v144 = *v143;
  *v143 = (uint64_t)partial apply for closure #21 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v143[1] = v142;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v144);
  v145 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v146 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange];
  swift_beginAccess();
  v147 = *v146;
  *v146 = (uint64_t)partial apply for closure #22 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v146[1] = v145;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v147);
  v148 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v149 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange];
  swift_beginAccess();
  v150 = *v149;
  *v149 = (uint64_t)partial apply for closure #23 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v149[1] = v148;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v150);
  v151 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v152 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange];
  swift_beginAccess();
  v153 = *v152;
  *v152 = (uint64_t)partial apply for closure #24 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v152[1] = v151;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v153);
  v154 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v155 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange];
  swift_beginAccess();
  v156 = *v155;
  *v155 = (uint64_t)partial apply for closure #25 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v155[1] = v154;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v156);
  v157 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v158 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange];
  swift_beginAccess();
  v159 = *v158;
  *v158 = (uint64_t)partial apply for closure #26 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v158[1] = v157;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v159);
  v160 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v161 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange];
  swift_beginAccess();
  v162 = *v161;
  *v161 = (uint64_t)partial apply for closure #27 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v161[1] = v160;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v162);
  v163 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v164 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange];
  swift_beginAccess();
  v165 = *v164;
  *v164 = (uint64_t)partial apply for closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v164[1] = v163;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v165);
  v166 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v167 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange];
  swift_beginAccess();
  v168 = *v167;
  *v167 = (uint64_t)partial apply for closure #29 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v167[1] = v166;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v168);
  v169 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v170 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange];
  swift_beginAccess();
  v171 = *v170;
  *v170 = (uint64_t)partial apply for closure #30 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v170[1] = v169;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v171);
  v172 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v173 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange];
  swift_beginAccess();
  v174 = *v173;
  *v173 = (uint64_t)partial apply for closure #31 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v173[1] = v172;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v174);
  v175 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v176 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange];
  swift_beginAccess();
  v177 = *v176;
  *v176 = (uint64_t)partial apply for closure #32 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v176[1] = v175;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v177);
  v178 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v179 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize];
  swift_beginAccess();
  v180 = *v179;
  *v179 = (uint64_t)partial apply for closure #33 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v179[1] = v178;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v180);
  v181 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v182 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange];
  swift_beginAccess();
  v183 = *v182;
  *v182 = (uint64_t)partial apply for closure #34 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v182[1] = v181;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v183);
  v184 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v185 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
  swift_beginAccess();
  v186 = *v185;
  *v185 = (uint64_t)partial apply for closure #35 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v185[1] = v184;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v186);
  v187 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v188 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange];
  swift_beginAccess();
  v189 = *v188;
  *v188 = (uint64_t)partial apply for closure #36 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v188[1] = v187;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v189);
  v190 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v191 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls];
  swift_beginAccess();
  v192 = *v191;
  *v191 = (uint64_t)partial apply for closure #37 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v191[1] = v190;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v192);
  v193 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v194 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic];
  swift_beginAccess();
  v195 = *v194;
  *v194 = (uint64_t)partial apply for closure #38 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v194[1] = v193;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v195);
  v196 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v197 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants];
  swift_beginAccess();
  v198 = *v197;
  *v197 = (uint64_t)partial apply for closure #39 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v197[1] = v196;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v198);
  v199 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v200 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations];
  swift_beginAccess();
  v201 = *v200;
  *v200 = (uint64_t)partial apply for closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v200[1] = v199;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v201);
  v202 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v203 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange];
  swift_beginAccess();
  v204 = *v203;
  *v203 = (uint64_t)partial apply for closure #41 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v203[1] = v202;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v204);
  v205 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v206 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame];
  swift_beginAccess();
  v207 = *v206;
  *v206 = (uint64_t)partial apply for closure #42 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v206[1] = v205;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v207);
  v208 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v209 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange];
  swift_beginAccess();
  v210 = *v209;
  *v209 = (uint64_t)partial apply for closure #43 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v209[1] = v208;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v210);
  v211 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v212 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants];
  swift_beginAccess();
  v213 = *v212;
  *v212 = (uint64_t)partial apply for closure #44 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v212[1] = v211;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v213);
  v214 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v215 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange];
  swift_beginAccess();
  v216 = *v215;
  *v215 = (uint64_t)partial apply for closure #45 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v215[1] = v214;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v216);
  v217 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v218 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment];
  swift_beginAccess();
  v219 = *v218;
  *v218 = (uint64_t)partial apply for closure #46 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v218[1] = v217;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v219);
  v220 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v221 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions];
  swift_beginAccess();
  v222 = *v221;
  *v221 = (uint64_t)partial apply for closure #47 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v221[1] = v220;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v222);
  v223 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v224 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange];
  swift_beginAccess();
  v225 = *v224;
  *v224 = (uint64_t)partial apply for closure #48 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v224[1] = v223;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v225);
  v226 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v227 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities];
  swift_beginAccess();
  v228 = *v227;
  *v227 = (uint64_t)partial apply for closure #49 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v227[1] = v226;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v228);
  v229 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v230 = (uint64_t *)&v84[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured];
  swift_beginAccess();
  v231 = *v230;
  *v230 = (uint64_t)partial apply for closure #50 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  v230[1] = v229;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v231);
  v232 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController;
  v233 = *(_QWORD *)&v80[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController];
  v234 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  v235 = *(_QWORD *)(v233 + 16);
  *(_QWORD *)(v233 + 16) = partial apply for closure #51 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  *(_QWORD *)(v233 + 24) = v234;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v235);
  v236 = *(_QWORD *)&v80[v232];
  v237 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v238 = (_QWORD *)swift_allocObject();
  v238[2] = v237;
  v238[3] = v70;
  v238[4] = v69;
  swift_beginAccess();
  v239 = *(_QWORD *)(v236 + 32);
  *(_QWORD *)(v236 + 32) = partial apply for closure #52 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  *(_QWORD *)(v236 + 40) = v238;
  swift_unknownObjectRetain();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v239);
  v240 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 48))(v258, v69);
  v241 = v255;
  if ((v240 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    objc_msgSend(v241, sel_setUplinkMuted_, 1);
  }
  MultiwayViewController.testing_callStatusDidChange(_:)((int)objc_msgSend(v241, sel_status));
  v242 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  swift_retain();
  v243 = static OS_dispatch_queue.main.getter();
  notifyRegisterDispatch(name:queue:handler:)(0xD000000000000027, 0x80000001BD6723E0, v243, (uint64_t)partial apply for closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:), v242);

  swift_release_n();
  v244 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v245 = static OS_dispatch_queue.main.getter();
  notifyRegisterDispatch(name:queue:handler:)(0xD000000000000028, 0x80000001BD672410, v245, (uint64_t)partial apply for closure #54 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:), v244);

  swift_release_n();
  MultiwayViewController.registerForSystemEventsIfNecessary()();
  if (one-time initialization token for shared != -1)
    swift_once();
  v246 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ScreenSharingInteractionController.shared)
                          + 0x1C8);
  v247 = v80;
  v246();

  swift_unknownObjectRelease();
  return v247;
}

uint64_t specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22[2];
  uint64_t v23;
  uint64_t v24[9];

  outlined init with take of DefaultParticipantMediaProviderCreator(a3, (uint64_t)v24);
  v14 = objc_allocWithZone((Class)type metadata accessor for ConversationController(0));
  outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)v24, (uint64_t)&v23);
  outlined init with copy of DefaultParticipantCaptionsProviderCreator(a4, (uint64_t)v22);
  v15 = OUTLINED_FUNCTION_202_0();
  specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(v15, v16, v17, v18, a5, a6, a7, a8, a9, (uint64_t)v14, v22[0], v22[1], v23, v24[0], v24[1], v24[2], v24[3], v24[4], v24[5],
    v24[6],
    v24[7],
    (_BYTE *)v24[8]);
  v20 = v19;
  outlined destroy of DefaultParticipantCaptionsProviderCreator(a4);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)v24);
  return v20;
}

void _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOi0_(void *a1)
{
  bzero(a1, 0xD8uLL);
}

uint64_t sub_1BD52AED0()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MultiwayViewController.viewDidLoad()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in MultiwayViewController.viewDidLoad()(a1, v1);
}

uint64_t specialized ParticipantViewDragController.init(participantView:constraintIdentifier:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;

  *(_BYTE *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a4 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a4 + 72) = 0;
  *(_QWORD *)(a4 + 80) = 0;
  *(_BYTE *)(a4 + 88) = 0;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AA0]), sel_init);
  *(_QWORD *)(a4 + 96) = v8;
  *(_QWORD *)(a4 + 48) = &protocol witness table for LocalParticipantView;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(a4 + 56) = a2;
  *(_QWORD *)(a4 + 64) = a3;
  objc_msgSend(v8, sel_addTarget_action_, a4, sel_handlePanGestureRecognizer_);
  objc_msgSend(v8, sel_setEnabled_, 0);
  objc_msgSend(a1, sel_addGestureRecognizer_, v8);

  return a4;
}

char *specialized EffectsControlsViewController.init(delegate:)(void *a1, _BYTE *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v12;
  objc_super v13;
  char v14;
  ValueMetadata *v15;
  _UNKNOWN **v16;

  *(_QWORD *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserViewController] = 0;
  a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsEnabled] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsBrowserHeight] = 0x404D000000000000;
  a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButtonIsVisible] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_constraintsToUpdate] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&a2[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v4 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_effectsButton;
  type metadata accessor for InCallControlButton();
  v15 = &type metadata for SymbolImageDescribers.LocalParticipantView;
  v16 = &protocol witness table for SymbolImageDescribers.LocalParticipantView;
  v14 = 3;
  v5 = a2;
  LOWORD(v12) = 1;
  *(_QWORD *)&a2[v4] = InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
  v6 = OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_backgroundBlurView;
  v7 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 8, v12);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v7);

  *(_QWORD *)&v5[v6] = v8;
  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for EffectsControlsViewController();
  v9 = (char *)objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, 0, 0);
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit29EffectsControlsViewController_delegate + 8] = &protocol witness table for MultiwayViewController;
  swift_unknownObjectWeakAssign();
  v10 = v9;
  EffectsControlsViewController.setupViews()();

  return v10;
}

char *specialized CallDetailsCoordinator.init(hostViewController:controlsManager:deferredPresentationManager:)(void *a1, void *a2, void *a3, _BYTE *a4)
{
  char *v8;
  char *v9;
  _QWORD *v10;
  void (*v11)(char *);
  char *v12;
  _QWORD *v13;
  objc_super v15;

  swift_getObjectType();
  a4[OBJC_IVAR___CNKCallDetailsCoordinatorInternal_shouldHideViewsFromScreenSharing] = 0;
  swift_unknownObjectUnownedInit();
  swift_unknownObjectUnownedInit();
  swift_unknownObjectUnownedInit();
  v8 = a4;
  *(_QWORD *)&v8[OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController] = static CallDetailsCoordinator.makeDetailsNavigationController(using:)(a2);

  v15.receiver = v8;
  v15.super_class = (Class)type metadata accessor for CallDetailsCoordinator();
  v9 = (char *)objc_msgSendSuper2(&v15, sel_init);
  v10 = *(_QWORD **)&v9[OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController];
  v11 = *(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x78);
  v12 = v9;
  v13 = v10;
  v11(v9);

  return v12;
}

void partial apply for specialized closure #3 in MultiwayViewController.viewDidLoad()(char a1)
{
  uint64_t v1;

  specialized closure #3 in MultiwayViewController.viewDidLoad()(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void partial apply for closure #4 in MultiwayViewController.viewDidLoad()(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  closure #4 in MultiwayViewController.viewDidLoad()(a1, v2, a2);
}

void lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue(uint64_t a1)
{
  unint64_t *v1;

  if (!OUTLINED_FUNCTION_44_19(a1))
  {
    type metadata accessor for NSObject(255, v1);
    OUTLINED_FUNCTION_52_0();
  }
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #5 in MultiwayViewController.viewDidLoad()(unsigned __int8 a1, int a2)
{
  uint64_t v2;

  closure #5 in MultiwayViewController.viewDidLoad()(a1, a2, v2);
}

uint64_t sub_1BD52B33C()
{
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_guaranteed (@unowned VideoMessageController.State, @unowned VideoMessageController.State) -> ()(unsigned __int8 *a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type URL? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type URL? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type URL? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for URL?);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type URL and conformance URL);
    v3 = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEE998], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type URL? and conformance <A> A?);
  }
  return result;
}

void partial apply for closure #6 in MultiwayViewController.viewDidLoad()(uint64_t a1)
{
  uint64_t v1;

  closure #6 in MultiwayViewController.viewDidLoad()(a1, v1);
}

void partial apply for closure #2 in MultiwayViewController.viewDidLoad()(char a1)
{
  uint64_t v1;

  closure #2 in MultiwayViewController.viewDidLoad()(a1, v1);
}

uint64_t sub_1BD52B404()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void partial apply for closure #3 in MultiwayViewController.showOneToOneLivePhotosAlert(_:)(uint64_t a1)
{
  uint64_t v1;

  closure #3 in MultiwayViewController.showOneToOneLivePhotosAlert(_:)(a1, v1);
}

void partial apply for closure #1 in MultiwayViewController.viewWillTransition(to:with:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MultiwayViewController.viewWillTransition(to:with:)(a1, v1);
}

uint64_t partial apply for closure #2 in MultiwayViewController.viewWillTransition(to:with:)()
{
  return closure #2 in MultiwayViewController.viewWillTransition(to:with:)();
}

void partial apply for closure #1 in MultiwayViewController.showKickParticipantAlert(toKick:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_511_0();
  closure #1 in MultiwayViewController.showKickParticipantAlert(toKick:)(a1, *(_QWORD *)(v1 + 16));
}

void partial apply for closure #2 in MultiwayViewController.showKickParticipantAlert(toKick:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in MultiwayViewController.showKickParticipantAlert(toKick:)(a1, v1);
}

uint64_t _sSTsSQ7ElementRpzrlE8containsySbABFSbABXEfU_Say10Foundation4UUIDVG_Tg5TA_0(uint64_t a1)
{
  uint64_t v1;

  return specialized closure #1 in Sequence<>.contains(_:)(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1BD52B48C()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.cameraViewController(_:didChange:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.cameraViewController(_:didChange:)(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BD52B4B4()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

double partial apply for closure #1 in MultiwayViewController.didCapture(_:)()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = closure #1 in MultiwayViewController.didCapture(_:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24)).n128_u64[0];
  return result;
}

uint64_t sub_1BD52B4D4()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t sub_1BD52B4E0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_195_4();
  OUTLINED_FUNCTION_292_2();
  OUTLINED_FUNCTION_373_3();
  OUTLINED_FUNCTION_281_5();
  OUTLINED_FUNCTION_280_4();
  OUTLINED_FUNCTION_279_5();
  OUTLINED_FUNCTION_278_3();
  OUTLINED_FUNCTION_277_5();
  OUTLINED_FUNCTION_276_2();
  OUTLINED_FUNCTION_273_5();
  OUTLINED_FUNCTION_272_4();
  OUTLINED_FUNCTION_271_3();
  OUTLINED_FUNCTION_306_2();
  OUTLINED_FUNCTION_305_2();
  OUTLINED_FUNCTION_390_0();
  OUTLINED_FUNCTION_304_3();
  OUTLINED_FUNCTION_367_2();
  OUTLINED_FUNCTION_270_2();
  OUTLINED_FUNCTION_266_4();
  OUTLINED_FUNCTION_265_6();
  OUTLINED_FUNCTION_264_3();
  OUTLINED_FUNCTION_303_3();
  OUTLINED_FUNCTION_302_2();

  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.setControlsState(_:animated:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.setControlsState(_:animated:)(v0 + 16, *(_BYTE *)(v0 + 232), *(_BYTE *)(v0 + 233), *(_QWORD *)(v0 + 240), *(_BYTE *)(v0 + 248));
}

void partial apply for closure #2 in MultiwayViewController.setControlsState(_:animated:)(char a1)
{
  closure #2 in MultiwayViewController.setControlsState(_:animated:)(a1);
}

void partial apply for closure #1 in MultiwayViewController.participantViewDragController(_:didEndDragAtPosition:velocity:)()
{
  uint64_t v0;

  closure #1 in CallControlsViewController.animateSidebarState(_:)(*(void **)(v0 + 16));
}

void partial apply for closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v0, (uint64_t)&unk_1E763D780, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:), (void (*)(char *, uint64_t, _QWORD *))_sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5);
}

uint64_t partial apply for closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;

  return closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void partial apply for closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v0, (uint64_t)&unk_1E763D730, (uint64_t)&async function pointer to partial apply for closure #1 in closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:), (void (*)(char *, uint64_t, _QWORD *))_sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5);
}

void partial apply for closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v0, (uint64_t)&unk_1E763D708, (uint64_t)&async function pointer to partial apply for closure #1 in closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:), (void (*)(char *, uint64_t, _QWORD *))_sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5);
}

unint64_t lazy protocol witness table accessor for type VideoMessagingError and conformance VideoMessagingError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError;
  if (!lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessagingError, &type metadata for VideoMessagingError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError;
  if (!lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessagingError, &type metadata for VideoMessagingError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessagingError and conformance VideoMessagingError);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewController.LayoutStyle and conformance MultiwayViewController.LayoutStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MultiwayViewController.LayoutStyle and conformance MultiwayViewController.LayoutStyle;
  if (!lazy protocol witness table cache variable for type MultiwayViewController.LayoutStyle and conformance MultiwayViewController.LayoutStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MultiwayViewController.LayoutStyle, &type metadata for MultiwayViewController.LayoutStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewController.LayoutStyle and conformance MultiwayViewController.LayoutStyle);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewController.LayoutIdiom and conformance MultiwayViewController.LayoutIdiom()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MultiwayViewController.LayoutIdiom and conformance MultiwayViewController.LayoutIdiom;
  if (!lazy protocol witness table cache variable for type MultiwayViewController.LayoutIdiom and conformance MultiwayViewController.LayoutIdiom)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MultiwayViewController.LayoutIdiom, &type metadata for MultiwayViewController.LayoutIdiom);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewController.LayoutIdiom and conformance MultiwayViewController.LayoutIdiom);
  }
  return result;
}

void sub_1BD52B704(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B734(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewController.didExpandIncomingCallBanner.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B754(uint64_t *a1)
{
  MultiwayViewController.deviceOrientation.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B778(uint64_t *a1)
{
  MultiwayViewController.frontBoardInterfaceOrientation.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B798()
{
  MultiwayViewController.$isOnScreen.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B7BC(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  SharedContentViewController.isPipped.setter(v1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo, (void (*)(uint64_t))MultiwayViewController.hasParticipantVideo.didset);
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B7EC(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewController.isDisplayedInBanner.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B82C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewController.isFullScreen.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B84C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewController.isPipStashed.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B86C(uint64_t *a1)
{
  MultiwayViewController.pipState.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B88C()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_4();
  MultiwayViewController.isCaptioningEnabled.getter();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B8B0(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewController.isCaptioningEnabled.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B8CC()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4();
  MultiwayViewController.effectsViewController.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B8F0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4();
  MultiwayViewController.effectsBrowserViewController.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B914()
{
  key path getter for MultiwayViewController.delegate : MultiwayViewController();
}

void sub_1BD52B930()
{
  key path setter for MultiwayViewController.delegate : MultiwayViewController();
}

void sub_1BD52B94C()
{
  key path getter for MultiwayViewController.delegate : MultiwayViewController();
}

void sub_1BD52B968()
{
  key path setter for MultiwayViewController.delegate : MultiwayViewController();
}

void sub_1BD52B984()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4();
  MultiwayViewController.flashView.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD52B9A8()
{
  id *v0;

  OUTLINED_FUNCTION_4();
  *v0 = MultiwayViewController.insulatingView.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for VideoMessagingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD52BA1C + 4 * byte_1BD66531A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD52BA3C + 4 * byte_1BD66531F[v4]))();
}

_BYTE *sub_1BD52BA1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD52BA3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD52BA44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD52BA4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD52BA54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD52BA5C(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for VideoMessagingError()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t ObjC metadata update function for MultiwayViewController()
{
  return type metadata accessor for MultiwayViewController();
}

uint64_t type metadata accessor for MultiwayViewController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for MultiwayViewController;
  if (!type metadata singleton initialization cache for MultiwayViewController)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for MultiwayViewController()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for UIListContentConfiguration?(319, (unint64_t *)&lazy cache variable for type metadata for Date?, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UIListContentConfiguration?(319, (unint64_t *)&lazy cache variable for type metadata for VideoReactionPickerTip?, (void (*)(uint64_t))MEMORY[0x1E0DBD070]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Bool>();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for MultiwayViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MultiwayViewController.__allocating_init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 640))();
}

void type metadata accessor for MultiwayViewController.LayoutStyle()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for MultiwayViewController.LayoutStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD52BD38 + 4 * byte_1BD665329[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD52BD6C + 4 * byte_1BD665324[v4]))();
}

uint64_t sub_1BD52BD6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD52BD74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD52BD7CLL);
  return result;
}

uint64_t sub_1BD52BD88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD52BD90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD52BD94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD52BD9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for MultiwayViewController.LayoutIdiom()
{
  OUTLINED_FUNCTION_34_0();
}

void destroy for MultiwayViewController.ViewContent(id *a1)
{

  swift_release();
  swift_release();

}

uint64_t initializeWithCopy for MultiwayViewController.ViewContent(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  __int128 v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  v41 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v41;
  v8 = *(void **)(a2 + 48);
  v7 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v7;
  v9 = *(void **)(a2 + 64);
  v10 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  v11 = *(void **)(a2 + 80);
  v12 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v12;
  v42 = *(void **)(a2 + 96);
  v43 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v42;
  *(_QWORD *)(a1 + 104) = v43;
  v44 = *(void **)(a2 + 112);
  v45 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v44;
  *(_QWORD *)(a1 + 120) = v45;
  v13 = *(void **)(a2 + 136);
  v46 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v46;
  *(_QWORD *)(a1 + 136) = v13;
  v47 = v13;
  v14 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v14;
  v48 = *(void **)(a2 + 160);
  v15 = *(void **)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v48;
  *(_QWORD *)(a1 + 168) = v15;
  v49 = v15;
  v50 = *(void **)(a2 + 176);
  v51 = *(void **)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v50;
  *(_QWORD *)(a1 + 184) = v51;
  v52 = *(void **)(a2 + 192);
  v53 = *(void **)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v52;
  *(_QWORD *)(a1 + 200) = v53;
  v54 = *(void **)(a2 + 208);
  *(_QWORD *)(a1 + 208) = v54;
  v16 = v3;
  v17 = v4;
  v18 = v6;
  v19 = v5;
  v20 = (id)v41;
  v21 = v8;
  v22 = v7;
  v23 = v9;
  v24 = v10;
  v25 = v11;
  v26 = v12;
  v27 = v42;
  v28 = v43;
  v29 = v44;
  v30 = v45;
  v31 = v46;
  v32 = v47;
  swift_retain();
  swift_retain();
  v33 = v48;
  v34 = v49;
  v35 = v50;
  v36 = v51;
  v37 = v52;
  v38 = v53;
  v39 = v54;
  return a1;
}

uint64_t assignWithCopy for MultiwayViewController.ViewContent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  void *v65;
  void *v66;
  id v67;
  void *v68;
  void *v69;
  id v70;
  void *v71;
  void *v72;
  id v73;
  void *v74;
  void *v75;
  id v76;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(_QWORD *)(a2 + 40);
  v18 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v19 = v16;

  *(_QWORD *)(a1 + 40) = v17;
  v20 = *(void **)(a2 + 48);
  v21 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v20;
  v22 = v20;

  v23 = *(void **)(a2 + 56);
  v24 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v23;
  v25 = v23;

  v26 = *(void **)(a1 + 64);
  v27 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v27;
  v28 = v27;

  v29 = *(void **)(a1 + 72);
  v30 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v30;
  v31 = v30;

  v32 = *(void **)(a1 + 80);
  v33 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v33;
  v34 = v33;

  v35 = *(void **)(a1 + 88);
  v36 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v36;
  v37 = v36;

  v38 = *(void **)(a2 + 96);
  v39 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v38;
  v40 = v38;

  v41 = *(void **)(a1 + 104);
  v42 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v42;
  v43 = v42;

  v44 = *(void **)(a1 + 112);
  v45 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v45;
  v46 = v45;

  v47 = *(void **)(a1 + 120);
  v48 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v48;
  v49 = v48;

  v50 = *(void **)(a1 + 128);
  v51 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v51;
  v52 = v51;

  v53 = *(void **)(a2 + 136);
  v54 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v53;
  v55 = v53;

  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_retain();
  swift_release();
  v56 = *(void **)(a1 + 160);
  v57 = *(void **)(a2 + 160);
  *(_QWORD *)(a1 + 160) = v57;
  v58 = v57;

  v59 = *(void **)(a1 + 168);
  v60 = *(void **)(a2 + 168);
  *(_QWORD *)(a1 + 168) = v60;
  v61 = v60;

  v62 = *(void **)(a1 + 176);
  v63 = *(void **)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v63;
  v64 = v63;

  v65 = *(void **)(a1 + 184);
  v66 = *(void **)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v66;
  v67 = v66;

  v68 = *(void **)(a1 + 192);
  v69 = *(void **)(a2 + 192);
  *(_QWORD *)(a1 + 192) = v69;
  v70 = v69;

  v71 = *(void **)(a1 + 200);
  v72 = *(void **)(a2 + 200);
  *(_QWORD *)(a1 + 200) = v72;
  v73 = v72;

  v74 = *(void **)(a1 + 208);
  v75 = *(void **)(a2 + 208);
  *(_QWORD *)(a1 + 208) = v75;
  v76 = v75;

  return a1;
}

void *__swift_memcpy216_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD8uLL);
}

uint64_t assignWithTake for MultiwayViewController.ViewContent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  v7 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  v8 = *(void **)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);

  v9 = *(void **)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);

  v10 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  v11 = *(void **)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);

  swift_release();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();

  v12 = *(void **)(a1 + 168);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);

  v13 = *(void **)(a1 + 184);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);

  v14 = *(void **)(a1 + 200);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);

  v15 = *(void **)(a1 + 208);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);

  return a1;
}

uint64_t getEnumTagSinglePayload for MultiwayViewController.ViewContent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 216))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiwayViewController.ViewContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 216) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 216) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MultiwayViewController.ViewContent()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeWithCopy for MultiwayViewController.ConversationSnapshot(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MultiwayViewController.ConversationSnapshot(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  return a1;
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MultiwayViewController.ConversationSnapshot(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiwayViewController.ConversationSnapshot(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 36))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiwayViewController.ConversationSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 36) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MultiwayViewController.ConversationSnapshot()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for MultiwayViewController.VideoVisibility(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiwayViewController.VideoVisibility(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

void type metadata accessor for MultiwayViewController.VideoVisibility()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeWithCopy for MultiwayViewController.EffectsCaptureInfo(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for MultiwayViewController.EffectsCaptureInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for MultiwayViewController.EffectsCaptureInfo(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

void *type metadata accessor for MultiwayViewController.EffectsCaptureInfo()
{
  return &unk_1E763D520;
}

uint64_t sub_1BD52C864()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t _sIeyB_Ieg_TRTA_0()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_205_4(*(_QWORD *)(v0 + 16));
}

uint64_t partial apply for closure #1 in closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #4 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #3 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v2, v3, v4, v5);
}

uint64_t sub_1BD52C928()
{
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_195_4();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_37_1(v1);
  return closure #1 in closure #2 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v2, v3, v4, v5, v6);
}

uint64_t objectdestroy_171Tm()
{
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #1 in MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)(v2, v3, v4, v5);
}

void _s15ConversationKit11ParticipantVWOcTm_4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_407();
  v2 = v1(v0);
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD52CA88()
{
  OUTLINED_FUNCTION_285();
  return swift_deallocObject();
}

BOOL partial apply for closure #1 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)()
{
  uint64_t v0;

  return closure #1 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

BOOL partial apply for closure #2 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)()
{
  uint64_t v0;

  return closure #2 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1BD52CAC0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();
  if (*(_QWORD *)(v0 + 24))
    OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(*(void **)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1BD52CAF0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t sub_1BD52CB10()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  if (*(_QWORD *)(v0 + 24))
    OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(char a1)
{
  uint64_t v1;

  return closure #2 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD))(v1 + 24));
}

uint64_t sub_1BD52CB40()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t sub_1BD52CB4C()
{
  return OUTLINED_FUNCTION_23_4();
}

void partial apply for specialized closure #1 in EffectsHandler.handleAVCServerTimeout()()
{
  uint64_t v0;

  specialized closure #1 in EffectsHandler.handleAVCServerTimeout()(*(void **)(v0 + 16));
}

void partial apply for closure #1 in MultiwayViewController.setParticipantListState(_:animated:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.setParticipantListState(_:animated:)((id *)(v0 + 16));
}

void partial apply for closure #1 in MultiwayViewController.handleShareLinkAction(_:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.handleShareLinkAction(_:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t objectdestroy_5Tm_2()
{
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)(void *a1, void *a2)
{
  uint64_t v2;

  return closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1BD52CBA0()
{
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)()
{
  uint64_t v0;

  closure #1 in closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

void partial apply for closure #1 in MultiwayViewController.needsUpdatePresentationContexts.didset()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.needsUpdatePresentationContexts.didset(v0);
}

uint64_t sub_1BD52CBD4()
{
  return OUTLINED_FUNCTION_23_4();
}

void partial apply for closure #1 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(*(_BYTE *)(v0 + 16), v0 + 24, *(_QWORD *)(v0 + 240));
}

uint64_t objectdestroy_268Tm()
{
  id *v0;

  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_195_4();
  OUTLINED_FUNCTION_292_2();

  OUTLINED_FUNCTION_281_5();
  OUTLINED_FUNCTION_280_4();
  OUTLINED_FUNCTION_279_5();
  OUTLINED_FUNCTION_278_3();
  OUTLINED_FUNCTION_277_5();
  OUTLINED_FUNCTION_276_2();
  OUTLINED_FUNCTION_273_5();
  OUTLINED_FUNCTION_272_4();
  OUTLINED_FUNCTION_271_3();
  OUTLINED_FUNCTION_306_2();
  OUTLINED_FUNCTION_305_2();

  OUTLINED_FUNCTION_304_3();
  swift_release();
  OUTLINED_FUNCTION_270_2();
  OUTLINED_FUNCTION_266_4();
  OUTLINED_FUNCTION_265_6();
  OUTLINED_FUNCTION_264_3();
  OUTLINED_FUNCTION_303_3();
  OUTLINED_FUNCTION_302_2();

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(char a1)
{
  uint64_t v1;

  return closure #2 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(a1, *(_BYTE *)(v1 + 16), v1 + 24, *(_QWORD *)(v1 + 240));
}

uint64_t sub_1BD52CCA4()
{
  return objectdestroy_237Tm();
}

void partial apply for closure #1 in MultiwayViewController.setLocalParticipantState(_:animated:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.setLocalParticipantState(_:animated:)(v0 + 16, *(_BYTE *)(v0 + 232), *(_BYTE *)(v0 + 233));
}

uint64_t sub_1BD52CCBC()
{
  OUTLINED_FUNCTION_285();
  return swift_deallocObject();
}

void partial apply for closure #2 in MultiwayViewController.setLocalParticipantState(_:animated:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in MultiwayViewController.setLocalParticipantState(_:animated:)(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_BYTE *)(v1 + 25));
}

void partial apply for closure #1 in MultiwayViewController.showReactionPicker(after:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MultiwayViewController.showReactionPicker(after:)(a1, v1);
}

id partial apply for closure #1 in MultiwayViewController.startRecordingVideoMessage()(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 72), sel_updateCountdownWith_, a1);
}

uint64_t sub_1BD52CD0C()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_195_4();
  OUTLINED_FUNCTION_292_2();
  OUTLINED_FUNCTION_373_3();
  OUTLINED_FUNCTION_281_5();
  OUTLINED_FUNCTION_280_4();
  OUTLINED_FUNCTION_279_5();
  OUTLINED_FUNCTION_278_3();
  OUTLINED_FUNCTION_277_5();
  OUTLINED_FUNCTION_276_2();
  OUTLINED_FUNCTION_273_5();
  OUTLINED_FUNCTION_272_4();
  OUTLINED_FUNCTION_271_3();
  OUTLINED_FUNCTION_306_2();
  OUTLINED_FUNCTION_305_2();
  OUTLINED_FUNCTION_390_0();
  OUTLINED_FUNCTION_304_3();
  OUTLINED_FUNCTION_367_2();
  OUTLINED_FUNCTION_270_2();
  OUTLINED_FUNCTION_266_4();
  OUTLINED_FUNCTION_265_6();
  OUTLINED_FUNCTION_264_3();
  OUTLINED_FUNCTION_303_3();
  OUTLINED_FUNCTION_302_2();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in MultiwayViewController.startRecordingVideoMessage()(char a1)
{
  uint64_t v1;

  closure #2 in MultiwayViewController.startRecordingVideoMessage()(a1, v1 + 16, *(_QWORD *)(v1 + 232));
}

void partial apply for closure #1 in MultiwayViewController.showCameraAlert()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MultiwayViewController.showCameraAlert()(a1, v1);
}

uint64_t outlined release of MultiwayViewController.ViewContent(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  v3 = *(void **)a1;
  v2 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a1 + 24);
  v6 = *(void **)(a1 + 48);
  v7 = *(void **)(a1 + 56);
  v11 = *(void **)(a1 + 32);
  v12 = *(void **)(a1 + 64);
  v13 = *(void **)(a1 + 72);
  v14 = *(void **)(a1 + 80);
  v8 = *(void **)(a1 + 96);
  v15 = *(void **)(a1 + 88);
  v16 = *(void **)(a1 + 104);
  v17 = *(void **)(a1 + 112);
  v18 = *(void **)(a1 + 120);
  v9 = *(void **)(a1 + 136);
  v19 = *(void **)(a1 + 160);
  v20 = *(void **)(a1 + 128);
  v21 = *(void **)(a1 + 168);
  v22 = *(void **)(a1 + 176);
  v23 = *(void **)(a1 + 184);
  v24 = *(void **)(a1 + 192);
  v25 = *(void **)(a1 + 200);
  v26 = *(void **)(a1 + 208);
  swift_release();
  swift_release();

  return a1;
}

uint64_t sub_1BD52CF10()
{
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_167_6();
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_383_2();
  return specialized closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)(*(_QWORD *)(v0 + 16), v0 + v2, *(_BYTE *)(v0 + v2 + v1));
}

uint64_t sub_1BD52CF6C()
{
  return objectdestroy_299Tm();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)()
{
  uint64_t v0;

  return specialized closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(*(uint64_t (**)(BOOL))(v0 + 16));
}

void outlined init with take of MultiwayViewController.ViewContent?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  OUTLINED_FUNCTION_83(a1, a2, a3);
  OUTLINED_FUNCTION_100_0();
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32));
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD52CFA8()
{
  return objectdestroy_299Tm();
}

uint64_t objectdestroy_299Tm()
{
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_375_2();
  return OUTLINED_FUNCTION_370();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()()
{
  uint64_t v0;

  return specialized closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()(*(void (**)(char *, float, float, float))(v0 + 16), *(float *)(v0 + 40));
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.boostParticipantEMAToMax(_:)()
{
  return specialized closure #1 in closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)() & 1;
}

void partial apply for closure #1 in MultiwayViewController.restartAutoHideInCallControlsTimer()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MultiwayViewController.restartAutoHideInCallControlsTimer()(a1, v1);
}

uint64_t sub_1BD52D008()
{
  uint64_t v0;
  id *v1;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_110_5();
  v1 = (id *)(v0 + 32);
  switch(*(_BYTE *)(v0 + 72))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.showSNAPHudIfNeeded(for:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.showSNAPHudIfNeeded(for:)(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

void partial apply for closure #1 in MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

id partial apply for closure #3 in MultiwayViewController.hideAlert()()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setHidden_, 1);
}

uint64_t partial apply for closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_140_9();
  OUTLINED_FUNCTION_111_12();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_37_1(v1);
  return closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver()(v2, v3, v4, v5, v6);
}

uint64_t objectdestroy_346Tm()
{
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_140_9();
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_43_3();
  swift_release();
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_140_9();
  OUTLINED_FUNCTION_111_12();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_37_1(v1);
  return closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver()(v2, v3, v4, v5, v6);
}

void partial apply for closure #1 in MultiwayViewController.registerCaptioningStateObservers()(uint64_t *a1)
{
  uint64_t v1;

  closure #1 in MultiwayViewController.registerCaptioningStateObservers()(a1, v1);
}

uint64_t partial apply for closure #1 in MultiwayViewController.promptForCaptionsSpeechModelFetch()()
{
  uint64_t v0;

  return closure #1 in MultiwayViewController.promptForCaptionsSpeechModelFetch()(v0);
}

uint64_t partial apply for closure #2 in MultiwayViewController.promptForCaptionsSpeechModelFetch()()
{
  return closure #2 in MultiwayViewController.promptForCaptionsSpeechModelFetch()();
}

uint64_t partial apply for closure #4 in MultiwayViewController.mostActiveParticipants.getter()
{
  return closure #4 in MultiwayViewController.mostActiveParticipants.getter() & 1;
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter()
{
  uint64_t v0;

  return specialized closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD52D204()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t partial apply for closure #2 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #2 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t partial apply for closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t partial apply for closure #5 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #2 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t sub_1BD52D28C()
{
  return OUTLINED_FUNCTION_77_17();
}

void partial apply for closure #12 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1)
{
  uint64_t *v1;

  closure #12 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1[2], v1[3], v1[4]);
}

uint64_t partial apply for closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t partial apply for closure #17 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #2 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t partial apply for closure #19 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t partial apply for closure #21 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t partial apply for closure #22 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t partial apply for closure #32 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

void partial apply for closure #35 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, char a2)
{
  uint64_t v2;

  closure #35 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2 & 1, v2);
}

uint64_t partial apply for closure #36 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t partial apply for closure #37 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t partial apply for closure #38 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t partial apply for closure #43 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

void partial apply for closure #51 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1)
{
  uint64_t v1;

  closure #51 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1 & 1, v1);
}

uint64_t sub_1BD52D468()
{
  return OUTLINED_FUNCTION_77_17();
}

void partial apply for closure #52 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, float a2, float a3, float a4)
{
  uint64_t *v4;

  closure #52 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a2, a3, a4, a1, v4[2], v4[3], v4[4]);
}

void partial apply for closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  OUTLINED_FUNCTION_497();
}

void partial apply for closure #54 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  OUTLINED_FUNCTION_500();
}

void partial apply for closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void partial apply for closure #1 in closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:)(a1, v1);
}

void partial apply for specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto()()
{
  specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto()();
}

{
  specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto()();
}

uint64_t sub_1BD52D50C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewController.scheduleLinkEducationFirstTimeAlert()()
{
  uint64_t v0;

  closure #1 in MultiwayViewController.scheduleLinkEducationFirstTimeAlert()(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

_QWORD *partial apply for closure #1 in closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  return closure #1 in closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

uint64_t sub_1BD52D548()
{
  return OUTLINED_FUNCTION_23_4();
}

void partial apply for closure #1 in closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  uint64_t v0;

  closure #1 in closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1BD52D560()
{
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_43_15();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)()
{
  return partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)((void (*)(_QWORD))MEMORY[0x1E0CB0998], specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:));
}

id *outlined release of ParticipantMediaPriorities(id *a1)
{

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BD52D5F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_167_6();
  v2 = (v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_43_3();

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_17_33();
}

void partial apply for specialized closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_383_2();
  specialized closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)(*(_QWORD *)(v0 + 16), v0 + v2, v0 + ((v1 + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t outlined assign with copy of MostActiveParticipantsController<UUID>.ActivityDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD52D6C0()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  return specialized closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()();
}

uint64_t objectdestroy_36Tm()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_96();
  v1 = (int *)OUTLINED_FUNCTION_14_2();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  OUTLINED_FUNCTION_285();
  v3 = v0 + v2;
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v4 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v4);
      break;
    case 4u:
      v10 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v10);
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v12 = v3 + *(int *)(v11 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v12 + 96);
      if (*(_QWORD *)(v12 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v3 + *(int *)(v11 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v5 = v3 + v1[5];
  v6 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (id *)(v3 + v1[7]);
  if (*v7)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v8 = OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_7_23())
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
  type metadata accessor for Participant.CountdownInfo(0);
  if (!OUTLINED_FUNCTION_7_23())
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
  swift_release();
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #1 in MultiwayViewController.scheduleUpdate(for:)()
{
  return partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)((void (*)(_QWORD))type metadata accessor for Participant, (uint64_t (*)(_QWORD, uint64_t))closure #1 in MultiwayViewController.scheduleUpdate(for:));
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)(void (*a1)(_QWORD), uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  a1(0);
  OUTLINED_FUNCTION_511_0();
  return a2(*(_QWORD *)(v2 + 16), v2 + v3);
}

uint64_t sub_1BD52D904()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  OUTLINED_FUNCTION_64();
  return OUTLINED_FUNCTION_18_19();
}

void partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  specialized closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BD52D9A4()
{
  return objectdestroy_384Tm();
}

uint64_t partial apply for specialized closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)()
{
  uint64_t v0;

  return specialized closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD52D9BC()
{
  return OUTLINED_FUNCTION_77_17();
}

uint64_t sub_1BD52D9C8()
{
  return OUTLINED_FUNCTION_77_17();
}

uint64_t objectdestroy_384Tm()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_285();
  v1(*(_QWORD *)(v0 + 24));
  OUTLINED_FUNCTION_375_2();
  return OUTLINED_FUNCTION_18_19();
}

uint64_t sub_1BD52DA00()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)();
}

uint64_t sub_1BD52DA3C()
{
  _QWORD *v0;

  if (v0[2])
    OUTLINED_FUNCTION_53_2();
  if (v0[4])
    swift_release();
  if (v0[6])
    swift_release();
  if (v0[8])
    swift_release();
  if (v0[10])
    swift_release();
  if (v0[12])
    swift_release();
  return swift_deallocObject();
}

void outlined assign with take of Date?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  OUTLINED_FUNCTION_83(a1, a2, a3);
  OUTLINED_FUNCTION_100_0();
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40));
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #4 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  closure #4 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)();
}

void partial apply for closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)();
}

uint64_t partial apply for closure #1 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(_QWORD *a1)
{
  uint64_t v1;

  return closure #1 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1BD52DB20()
{
  return objectdestroy_237Tm();
}

uint64_t objectdestroy_237Tm()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_195_4();
  OUTLINED_FUNCTION_292_2();
  OUTLINED_FUNCTION_373_3();
  OUTLINED_FUNCTION_281_5();
  OUTLINED_FUNCTION_280_4();
  OUTLINED_FUNCTION_279_5();
  OUTLINED_FUNCTION_278_3();
  OUTLINED_FUNCTION_277_5();
  OUTLINED_FUNCTION_276_2();
  OUTLINED_FUNCTION_273_5();
  OUTLINED_FUNCTION_272_4();
  OUTLINED_FUNCTION_271_3();
  OUTLINED_FUNCTION_306_2();
  OUTLINED_FUNCTION_305_2();
  OUTLINED_FUNCTION_390_0();
  OUTLINED_FUNCTION_304_3();
  OUTLINED_FUNCTION_367_2();
  OUTLINED_FUNCTION_270_2();
  OUTLINED_FUNCTION_266_4();
  OUTLINED_FUNCTION_265_6();
  OUTLINED_FUNCTION_264_3();
  OUTLINED_FUNCTION_303_3();
  OUTLINED_FUNCTION_302_2();
  OUTLINED_FUNCTION_375_2();
  return OUTLINED_FUNCTION_370();
}

void partial apply for closure #3 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)()
{
  uint64_t v0;

  closure #3 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(*(double *)(v0 + 232));
}

void partial apply for closure #2 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)()
{
  uint64_t v0;

  closure #2 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BD52DBC0()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

id partial apply for closure #1 in MultiwayViewController.reactionPickerTipState.didset()
{
  uint64_t v0;
  double v1;

  v1 = 0.0;
  if (*(_BYTE *)(v0 + 24))
    v1 = 1.0;
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, v1);
}

uint64_t sub_1BD52DC04()
{
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

id partial apply for closure #2 in MultiwayViewController.reactionPickerTipState.didset()
{
  uint64_t v0;
  id result;

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
    return objc_msgSend(*(id *)(v0 + 24), sel_removeFromSuperview);
  return result;
}

uint64_t partial apply for specialized closure #1 in closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)()
{
  return partial apply for specialized closure #1 in MostActiveParticipantsController.boostParticipantEMAToMax(_:)() & 1;
}

uint64_t OUTLINED_FUNCTION_89_23()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t OUTLINED_FUNCTION_104_12()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_127_9()
{
  uint64_t v0;
  char v1;

  *(_DWORD *)(v0 + 8) = v1 & 1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_129_8()
{
  uint64_t v0;

}

char *OUTLINED_FUNCTION_130_7(void *a1, char *a2, void *a3, uint64_t a4, void *a5, _BYTE *a6, uint64_t a7, uint64_t a8)
{
  return specialized MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_140_9()
{
  return type metadata accessor for VideoReactionPickerTip();
}

void OUTLINED_FUNCTION_141_8()
{
  MultiwayViewController.call.getter();
}

uint64_t OUTLINED_FUNCTION_143_7()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_144_4()
{
  void *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;

  return objc_msgSend(v0, (SEL)(v1 + 3016), v2, v3, v4, v5);
}

_QWORD *OUTLINED_FUNCTION_146_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)&a43);
}

_QWORD *OUTLINED_FUNCTION_147_6()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 128), *(_QWORD *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_159_7()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1 - 168);
}

_QWORD *OUTLINED_FUNCTION_160_2()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 3208), v1);
}

void OUTLINED_FUNCTION_161_8()
{
  JUMPOUT(0x1C3B7301CLL);
}

uint64_t OUTLINED_FUNCTION_162_7()
{
  return swift_unknownObjectWeakInit();
}

uint64_t OUTLINED_FUNCTION_163_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v0, *v3, v1, v2);
}

id OUTLINED_FUNCTION_164_2(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1992));
}

uint64_t OUTLINED_FUNCTION_173_6()
{
  uint64_t v0;

  return v0;
}

_QWORD *OUTLINED_FUNCTION_182_5()
{
  uint64_t v0;

  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0(v0 + 272);
}

void OUTLINED_FUNCTION_186_3(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with take of MultiwayViewController.ViewContent?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_196_3()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_201_3()
{
  uint64_t v0;

  return MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)((unsigned __int8 *)(v0 + 48), 0xFCu, 1);
}

uint64_t OUTLINED_FUNCTION_205_4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void OUTLINED_FUNCTION_206_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #14 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_207_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #6 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_208_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #18 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_209_2(void *a1, char a2)
{
  uint64_t v2;

  closure #41 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_210_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #9 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_211_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #23 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_212_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #4 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_213_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #16 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_214_2(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  closure #48 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, a3, v3);
}

void OUTLINED_FUNCTION_215_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  closure #20 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, a3, v3);
}

id OUTLINED_FUNCTION_220_3@<X0>(void *a1@<X8>)
{
  return a1;
}

void OUTLINED_FUNCTION_221_4(char a1)
{
  uint64_t v1;

  closure #50 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_222_5(uint64_t a1)
{
  uint64_t v1;

  closure #44 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_223_1(char a1)
{
  uint64_t v1;

  closure #25 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_224_2(uint64_t a1)
{
  uint64_t v1;

  closure #15 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_225_5(uint64_t a1)
{
  uint64_t v1;

  closure #47 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

uint64_t OUTLINED_FUNCTION_226_1(char a1)
{
  uint64_t v1;

  return closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_227_2(char a1)
{
  uint64_t v1;

  closure #31 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_228_4(char a1)
{
  uint64_t v1;

  closure #24 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_229_6(char a1)
{
  uint64_t v1;

  closure #8 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_230_3(char a1)
{
  uint64_t v1;

  closure #27 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_231_4(char a1)
{
  uint64_t v1;

  closure #11 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_232_5(uint64_t a1)
{
  uint64_t v1;

  closure #49 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_233_3(uint64_t a1, Swift::Float a2)
{
  uint64_t v2;

  closure #30 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v2, a2);
}

void OUTLINED_FUNCTION_234_1(_QWORD *a1)
{
  uint64_t v1;

  closure #45 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_235_1(uint64_t a1)
{
  uint64_t v1;

  closure #34 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_236_7(char a1)
{
  uint64_t v1;

  closure #26 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, v1);
}

void OUTLINED_FUNCTION_237_5()
{
  void *v0;

}

double OUTLINED_FUNCTION_238_2()
{
  void *v0;
  double result;

  return result;
}

void OUTLINED_FUNCTION_247_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  closure #7 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, a3, a4, v4);
}

void OUTLINED_FUNCTION_248_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  closure #10 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_251_3()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 168, 0);
}

uint64_t OUTLINED_FUNCTION_252_3()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

void OUTLINED_FUNCTION_254_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 8u);
}

uint64_t OUTLINED_FUNCTION_263_4()
{
  return MultiwayViewController.localVideoProvider.getter();
}

void OUTLINED_FUNCTION_264_3()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_265_6()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_266_4()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_270_2()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_271_3()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_272_4()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_273_5()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_275_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_276_2()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_277_5()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_278_3()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_279_5()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_280_4()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_281_5()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_282_2()
{
  uint64_t v0;

  return closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

void OUTLINED_FUNCTION_283_2()
{
  uint64_t v0;

  closure #29 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

void OUTLINED_FUNCTION_284_2()
{
  uint64_t v0;

  closure #39 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

void OUTLINED_FUNCTION_285_4()
{
  uint64_t v0;

  closure #46 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

void OUTLINED_FUNCTION_286_3()
{
  uint64_t v0;

  closure #33 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

uint64_t OUTLINED_FUNCTION_288_2()
{
  uint64_t v0;

  return closure #42 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v0);
}

uint64_t OUTLINED_FUNCTION_290_4()
{
  uint64_t v0;

  return v0 - 128;
}

void OUTLINED_FUNCTION_292_2()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_293_2()
{
  return objectdestroy_237Tm();
}

void OUTLINED_FUNCTION_298_2(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_301_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, a2, v2);
}

void OUTLINED_FUNCTION_302_2()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_303_3()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_304_3()
{
  return swift_release();
}

void OUTLINED_FUNCTION_305_2()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_306_2()
{
  uint64_t v0;

}

_QWORD *OUTLINED_FUNCTION_311_4()
{
  uint64_t v0;

  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0(v0 + 400);
}

void OUTLINED_FUNCTION_312_4()
{
  MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(1, 1, 0);
}

BOOL OUTLINED_FUNCTION_313_4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id OUTLINED_FUNCTION_324_5()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, (SEL)(v2 + 3918), v1);
}

uint64_t OUTLINED_FUNCTION_325_2(unsigned __int8 *a1)
{
  return MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(a1, 0xFCu, 1);
}

double OUTLINED_FUNCTION_328_2()
{
  double v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_329_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_330_3()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

id OUTLINED_FUNCTION_331_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(*(id *)(v0 + 24), (SEL)(v2 + 980), v1);
}

unint64_t OUTLINED_FUNCTION_333_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return lazy protocol witness table accessor for type String and conformance String();
}

_QWORD *OUTLINED_FUNCTION_334_3()
{
  uint64_t v0;

  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0(v0 + 328);
}

uint64_t OUTLINED_FUNCTION_337_2()
{
  return MultiwayViewController.wantsStandardControls.getter();
}

uint64_t OUTLINED_FUNCTION_343_3(uint64_t a1)
{
  uint64_t v1;

  return outlined init with take of Participant(a1, v1);
}

BOOL OUTLINED_FUNCTION_350_1()
{
  return TUCall.isBlocked()();
}

void OUTLINED_FUNCTION_353_2(__CFNotificationCenter *a1, const __CFString *a2)
{
  CFNotificationCenterPostNotification(a1, a2, 0, 0, 1u);
}

void OUTLINED_FUNCTION_355_3()
{
  void *v0;

}

void OUTLINED_FUNCTION_356_1()
{
  void *v0;

  MultiwayViewController.effectsBrowserViewController.setter(v0);
}

id OUTLINED_FUNCTION_361_1(double a1, uint64_t a2, const char *a3)
{
  void *v3;
  int v4;

  LODWORD(a1) = v4;
  return objc_msgSend(v3, a3, 0, a1);
}

void OUTLINED_FUNCTION_367_2()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_371_2()
{
  double v0;
  double v1;

  return MultiwayViewController.nextLocalParticipantState(forNewCaptionsViewPosition:)(v1, v0);
}

void OUTLINED_FUNCTION_372_2()
{
  unint64_t v0;
  unint64_t v1;

  MultiwayViewConstraintsController.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)((CGPoint)__PAIR128__(v0, v1), 0);
}

void OUTLINED_FUNCTION_373_3()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_375_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_384_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_388_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 184) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 88);
}

uint64_t OUTLINED_FUNCTION_389_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_390_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_391_1()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id OUTLINED_FUNCTION_392_0(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, objc_super a11)
{
  char v11;

  return objc_msgSendSuper2(&a11, a2, v11 & 1);
}

void OUTLINED_FUNCTION_394_2(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with take of MultiwayViewController.ViewContent?(v3 + 408, v3 + 168, a3);
}

void OUTLINED_FUNCTION_397_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with take of MultiwayViewController.ViewContent?(v3 + 400, v3 + 48, a3);
}

void OUTLINED_FUNCTION_398_1(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)&a43, (uint64_t)&a10, a3);
}

void *OUTLINED_FUNCTION_400_2(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD8uLL);
}

uint64_t OUTLINED_FUNCTION_403()
{
  uint64_t v0;

  return outlined init with take of Notice((__int128 *)(v0 + 48), v0 + 264);
}

uint64_t OUTLINED_FUNCTION_410_1()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with take of Notice((__int128 *)(v0 + 480), v1 - 256);
}

void OUTLINED_FUNCTION_411_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 + 480, a2);
}

uint64_t OUTLINED_FUNCTION_412_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return outlined retain of MultiwayViewController.ViewContent((uint64_t)va);
}

void OUTLINED_FUNCTION_414_1()
{
  uint64_t v0;

  outlined init with copy of RadarReporting(v0 - 128, v0 - 256);
}

_QWORD *OUTLINED_FUNCTION_415_0()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 128), v0);
}

uint64_t OUTLINED_FUNCTION_417_1(unsigned __int8 *a1, unsigned int a2)
{
  return MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(a1, a2, 0);
}

uint64_t OUTLINED_FUNCTION_418_1()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with take of Notice((__int128 *)(v1 - 256), v0);
}

uint64_t OUTLINED_FUNCTION_419_1@<X0>(char a1@<W0>, uint64_t (*a2)(_QWORD)@<X8>)
{
  return a2(a1 & 1);
}

void OUTLINED_FUNCTION_420_1()
{
  _s15ConversationKit11ParticipantVWOcTm_4();
}

id OUTLINED_FUNCTION_421_0@<X0>(void *a1@<X8>)
{
  return a1;
}

id OUTLINED_FUNCTION_422_0@<X0>(void *a1@<X8>)
{
  return a1;
}

id OUTLINED_FUNCTION_425_0()
{
  uint64_t v0;

  return *(id *)(v0 + 456);
}

uint64_t OUTLINED_FUNCTION_427_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_428_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_430_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

void OUTLINED_FUNCTION_431(uint64_t a1)
{
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>(a1);
}

_QWORD *OUTLINED_FUNCTION_433(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)va);
}

void OUTLINED_FUNCTION_434_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_435()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_436()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

unint64_t OUTLINED_FUNCTION_437_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 56) = v1;
  return lazy protocol witness table accessor for type String and conformance String();
}

uint64_t OUTLINED_FUNCTION_439(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return outlined init with copy of ConversationControlsType(v2, a2);
}

uint64_t OUTLINED_FUNCTION_443_0()
{
  return swift_dynamicCastObjCClass();
}

unint64_t OUTLINED_FUNCTION_444()
{
  return 0xD000000000000027;
}

uint64_t OUTLINED_FUNCTION_446_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 + 264);
}

id OUTLINED_FUNCTION_458_0(id a1, SEL a2, uint64_t a3)
{
  return objc_msgSend(a1, a2, a3, 0);
}

uint64_t OUTLINED_FUNCTION_464_0()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_465()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 968));
}

uint64_t OUTLINED_FUNCTION_466()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_468()
{
  uint64_t v0;
  uint64_t v1;

  outlined init with copy of RadarReporting(v0, v1 - 256);
}

_QWORD *OUTLINED_FUNCTION_470_0(unsigned int a1)
{
  return MultiwayViewController.setLocalParticipantState(_:animated:)(a1, 1);
}

void OUTLINED_FUNCTION_472(uint64_t a1, unint64_t *a2)
{
  type metadata accessor for NSObject(a1, a2);
}

void OUTLINED_FUNCTION_473_0()
{
  JUMPOUT(0x1C3B752C0);
}

void OUTLINED_FUNCTION_476(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with take of MultiwayViewController.ViewContent?(v3 + 288, v3 + 24, a3);
}

uint64_t OUTLINED_FUNCTION_477()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 + 3208);
}

void OUTLINED_FUNCTION_478()
{
  uint64_t v0;

  MultiwayViewController.layoutIdiom.getter((BOOL *)(v0 + 3208));
}

uint64_t OUTLINED_FUNCTION_479_0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_481_0(char a1, uint64_t a2)
{
  ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(a1, a2, 1, 0);
}

uint64_t OUTLINED_FUNCTION_484()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void *OUTLINED_FUNCTION_485@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char aBlock, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  a8 = v9;
  a9 = a1;
  return _Block_copy(&aBlock);
}

id OUTLINED_FUNCTION_489_0(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3784));
}

uint64_t OUTLINED_FUNCTION_490()
{
  return MultiwayViewController.localVideoProvider.getter();
}

id OUTLINED_FUNCTION_492_0(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 3);
}

void OUTLINED_FUNCTION_494_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of FeatureEligibility?(v3, v4, a3);
}

void OUTLINED_FUNCTION_497()
{
  closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

void OUTLINED_FUNCTION_498()
{
  _s15ConversationKit11ParticipantVWOcTm_4();
}

void OUTLINED_FUNCTION_500()
{
  closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)();
}

void OUTLINED_FUNCTION_501_0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  outlined destroy of AccountUpdateNotice(v0, v1);
}

uint64_t OUTLINED_FUNCTION_503_0()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_505_0()
{
  MultiwayViewController.showKickParticipantAlert(toKick:)();
}

void OUTLINED_FUNCTION_512_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  ConversationController.openMessagesConversation(completion:)(0, 0, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t OUTLINED_FUNCTION_514_0()
{
  return type metadata accessor for ParticipantGridViewController();
}

uint64_t OUTLINED_FUNCTION_516_0()
{
  return type metadata accessor for CaptionsViewController();
}

uint64_t OUTLINED_FUNCTION_518_0()
{
  return type metadata accessor for InCallBannerHostViewController();
}

uint64_t OUTLINED_FUNCTION_519_0()
{
  return type metadata accessor for ParticipantListViewController();
}

uint64_t OUTLINED_FUNCTION_520_0()
{
  return type metadata accessor for ParticipantViewDragController();
}

uint64_t OUTLINED_FUNCTION_522_0()
{
  return type metadata accessor for UUID();
}

uint64_t *UIColor.systemGreenWithUserInterfaceStyleLight.unsafeMutableAddressor()
{
  if (one-time initialization token for systemGreenWithUserInterfaceStyleLight != -1)
    swift_once();
  return &static UIColor.systemGreenWithUserInterfaceStyleLight;
}

id static UIColor.systemGreenWithUserInterfaceStyleLight.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for systemGreenWithUserInterfaceStyleLight, (id *)&static UIColor.systemGreenWithUserInterfaceStyleLight);
}

id one-time initialization function for systemFillDark()
{
  id v0;
  id result;

  v0 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  result = @nonobjc UIColor.init(dynamicProvider:)((uint64_t)closure #1 in variable initialization expression of static UIColor.systemFillDark, 0);
  static UIColor.systemFillDark = (uint64_t)result;
  return result;
}

id closure #1 in variable initialization expression of static UIColor.systemFillDark(uint64_t a1)
{
  return closure #1 in variable initialization expression of static UIColor.systemGreenWithUserInterfaceStyleLight(a1, (SEL *)&selRef_systemFillColor);
}

id closure #1 in variable initialization expression of static UIColor.systemGreenWithUserInterfaceStyleLight(uint64_t a1, SEL *a2)
{
  id v2;
  void *v3;
  id v4;

  v2 = objc_msgSend((id)objc_opt_self(), *a2);
  v3 = (void *)UITraitCollection.modifyingTraits(_:)();
  v4 = objc_msgSend(v2, sel_resolvedColorWithTraitCollection_, v3);

  return v4;
}

uint64_t closure #1 in closure #1 in variable initialization expression of static UIColor.systemFillDark(uint64_t a1)
{
  return closure #1 in closure #1 in variable initialization expression of static UIColor.systemGreenWithUserInterfaceStyleLight(a1);
}

uint64_t *UIColor.systemFillDark.unsafeMutableAddressor()
{
  if (one-time initialization token for systemFillDark != -1)
    swift_once();
  return &static UIColor.systemFillDark;
}

id static UIColor.systemFillDark.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for systemFillDark, (id *)&static UIColor.systemFillDark);
}

void specialized Sequence.compactMap<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  void *v41;

  OUTLINED_FUNCTION_35_9();
  v41 = v4;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = OUTLINED_FUNCTION_14_2();
  v36 = *(_QWORD *)(v40 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_5_27();
  v39 = v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_62();
  v35 = v13;
  v14 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_408_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_30_6();
  v17 = *(_QWORD *)(v6 + 16);
  v32[1] = v6;
  v33 = v2;
  if (v17)
  {
    OUTLINED_FUNCTION_37_3();
    v19 = v6 + v18;
    v20 = *(void (**)(uint64_t))(v1 + 16);
    v37 = *(_QWORD *)(v1 + 72);
    v38 = v20;
    OUTLINED_FUNCTION_35_0();
    v21 = MEMORY[0x1E0DEE9D8];
    v34 = v9;
    v22 = v1;
    while (1)
    {
      v23 = OUTLINED_FUNCTION_416_0();
      v38(v23);
      OUTLINED_FUNCTION_3_68(v0, 0);
      if (__swift_getEnumTagSinglePayload(v0, 1, v14) == 1)
        break;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v3, v0, v14);
      ConversationController.participant(with:)();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v3, v14);
      v24 = OUTLINED_FUNCTION_601_0();
      if (__swift_getEnumTagSinglePayload(v24, v25, v40) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        v26 = v22;
        v27 = v35;
        outlined init with take of StagedCollaboration((uint64_t)v9, v35, type metadata accessor for Participant);
        outlined init with take of StagedCollaboration(v27, v39, type metadata accessor for Participant);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_595_0();
          v21 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        v29 = *(_QWORD *)(v21 + 16);
        v28 = *(_QWORD *)(v21 + 24);
        if (v29 >= v28 >> 1)
        {
          OUTLINED_FUNCTION_786(v28);
          v21 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        *(_QWORD *)(v21 + 16) = v29 + 1;
        OUTLINED_FUNCTION_30_36();
        outlined init with take of StagedCollaboration(v39, v21 + v30 + *(_QWORD *)(v31 + 72) * v29, type metadata accessor for Participant);
        v9 = v34;
        v22 = v26;
      }
      v19 += v37;
      if (!--v17)
        goto LABEL_14;
    }
  }
  else
  {
    OUTLINED_FUNCTION_35_0();
LABEL_14:
    OUTLINED_FUNCTION_3_68(v0, 1);
  }

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_29();
}

uint64_t specialized Sequence.compactMap<A>(_:)(_QWORD *(*a1)(uint64_t *__return_ptr, _OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  _BYTE *i;
  char v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;
  uint64_t v13;
  _OWORD v14[4];
  char v15;
  uint64_t v16;

  result = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (i = (_BYTE *)(a3 + 96); ; i += 72)
    {
      v9 = *i;
      v10 = *((_OWORD *)i - 3);
      v14[0] = *((_OWORD *)i - 4);
      v14[1] = v10;
      v11 = *((_OWORD *)i - 1);
      v14[2] = *((_OWORD *)i - 2);
      v14[3] = v11;
      v15 = v9;
      v12 = a1(&v13, v14);
      if (v3)
        break;
      if (v13)
      {
        MEMORY[0x1C3B7301C](v12);
        if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        return v16;
      }
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t specialized _ArrayProtocol.filter(_:)(uint64_t result, char *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  int v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  CGRect v48;
  CGRect v49;

  v2 = result;
  v3 = 0;
  v42 = &a2[OBJC_IVAR____TtC15ConversationKit22ConversationController_recentPresentationContexts];
  v43 = *(_QWORD *)(result + 16);
  v40 = MEMORY[0x1E0DEE9D8];
  v41 = result;
LABEL_2:
  v4 = 72 * v3;
  while (1)
  {
    v5 = v3;
    if (v43 == v3)
    {

      swift_bridgeObjectRelease();
      return v40;
    }
    if (v3 >= *(_QWORD *)(v2 + 16))
      break;
    v7 = *(_QWORD *)(v2 + v4 + 32);
    v6 = *(_QWORD *)(v2 + v4 + 40);
    v8 = *(_QWORD *)(v2 + v4 + 48);
    v9 = *(_QWORD *)(v2 + v4 + 56);
    v10 = *(double *)(v2 + v4 + 64);
    v11 = *(double *)(v2 + v4 + 72);
    v12 = *(double *)(v2 + v4 + 80);
    v13 = *(double *)(v2 + v4 + 88);
    v14 = *(unsigned __int8 *)(v2 + v4 + 96);
    swift_beginAccess();
    v15 = *(_QWORD *)v42;
    v44 = v7;
    if (!*(_QWORD *)(*(_QWORD *)v42 + 16)
      || (v16 = specialized __RawDictionaryStorage.find<A>(_:)(v7), (v17 & 1) == 0))
    {
      swift_endAccess();
      v33 = v14;
LABEL_22:
      v34 = v40;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v40 + 16) + 1, 1);
        v34 = v40;
      }
      v36 = *(_QWORD *)(v34 + 16);
      v35 = *(_QWORD *)(v34 + 24);
      v37 = v36 + 1;
      if (v36 >= v35 >> 1)
      {
        result = (uint64_t)specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((_QWORD *)(v35 > 1), v36 + 1, 1);
        v37 = v36 + 1;
        v34 = v40;
      }
      v3 = v5 + 1;
      *(_QWORD *)(v34 + 16) = v37;
      v40 = v34;
      v38 = v34 + 72 * v36;
      *(_QWORD *)(v38 + 32) = v44;
      *(_QWORD *)(v38 + 40) = v6;
      *(_QWORD *)(v38 + 48) = v8;
      *(_QWORD *)(v38 + 56) = v9;
      *(CGFloat *)(v38 + 64) = v10;
      *(CGFloat *)(v38 + 72) = v11;
      *(CGFloat *)(v38 + 80) = v12;
      *(CGFloat *)(v38 + 88) = v13;
      *(_BYTE *)(v38 + 96) = v33;
      goto LABEL_2;
    }
    v18 = *(_QWORD *)(v15 + 56) + 72 * v16;
    v46 = v8;
    v47 = v5;
    v19 = v6;
    v20 = *(_QWORD *)v18;
    v21 = *(_QWORD *)(v18 + 8);
    v45 = v9;
    v22 = v7;
    v24 = *(_QWORD *)(v18 + 16);
    v23 = *(_QWORD *)(v18 + 24);
    v25 = *(double *)(v18 + 32);
    v26 = *(double *)(v18 + 40);
    v27 = *(double *)(v18 + 48);
    v28 = *(double *)(v18 + 56);
    v29 = *(unsigned __int8 *)(v18 + 64);
    swift_endAccess();
    v30 = v22 == v20;
    v6 = v19;
    v30 = v30 && v19 == v21;
    v8 = v46;
    v5 = v47;
    v31 = v30 && v46 == v24;
    v2 = v41;
    v9 = v45;
    v32 = v31 && v45 == v23;
    v33 = v14;
    if (v32)
    {
      v48.origin.x = v10;
      v48.origin.y = v11;
      v48.size.width = v12;
      v48.size.height = v13;
      v49.origin.x = v25;
      v49.origin.y = v26;
      v49.size.width = v27;
      v49.size.height = v28;
      result = CGRectEqualToRect(v48, v49);
      if ((_DWORD)result)
      {
        v3 = v47 + 1;
        v4 += 72;
        if (v14 == v29)
          continue;
      }
    }
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

void specialized Sequence.forEach(_:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  if (a1 == a2)
  {
LABEL_2:

  }
  else
  {
    if (a2 >= a1)
    {
      v6 = (uint64_t *)&a3[OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants];
      v7 = a1;
      while ((uint64_t)v7 < a2)
      {
        swift_beginAccess();
        v8 = *v6;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v6 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if (a1 < 0)
            goto LABEL_12;
        }
        else
        {
          v8 = specialized _ArrayBuffer._consumeAndCreateNew()();
          *v6 = v8;
          if (a1 < 0)
          {
LABEL_12:
            __break(1u);
            break;
          }
        }
        if (v7 >= *(_QWORD *)(v8 + 16))
          goto LABEL_14;
        v10 = type metadata accessor for Participant(0);
        *(_BYTE *)(v8
                 + ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))
                 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v7
                 + *(int *)(v10 + 52)) = 1;
        swift_endAccess();
        if (a2 == ++v7)
          goto LABEL_2;
      }
      __break(1u);
LABEL_14:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t specialized Sequence.forEach(_:)(uint64_t a1, char *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t i;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  char *v41;
  unint64_t v42;
  char *v43;
  char *v44;
  char v45;
  uint64_t v46;
  id v47;
  char *v48;
  char *v49;
  uint64_t v50;
  int64_t v51;
  char *v52;
  __int128 v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  char *v60;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD **)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v49 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v48 = (char *)&v46 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v46 - v10;
  v12 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v60 = (char *)&v46 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v46 - v19;
  v21 = *(_QWORD *)(a1 + 56);
  v50 = a1 + 56;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v47 = a2;
  v54 = &a2[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrameTasks];
  v55 = a1;
  v51 = (unint64_t)(v22 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v26 = 0;
  v53 = xmmword_1BD6441D0;
  v56 = v5;
  v52 = v20;
  if (!v24)
    goto LABEL_5;
LABEL_4:
  v27 = __clz(__rbit64(v24));
  v28 = (v24 - 1) & v24;
  for (i = v27 | (v26 << 6); ; i = __clz(__rbit64(v31)) + (v26 << 6))
  {
    v33 = (void (*)(char *, unint64_t, uint64_t))v5[2];
    v33(v20, *(_QWORD *)(v55 + 48) + v5[9] * i, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v4);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v4) == 1)
      goto LABEL_34;
    v57 = v28;
    v58 = v26;
    v34 = (void (*)(char *, char *, uint64_t))v5[4];
    v34(v11, v20, v4);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v59 = static OS_os_log.conversationKit;
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v53;
    v36 = (uint64_t)v60;
    v33(v60, (unint64_t)v11, v4);
    __swift_storeEnumTagSinglePayload(v36, 0, 1, v4);
    outlined init with copy of FeatureEligibility?(v36, (uint64_t)v16, v12);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v4) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, v12);
      v37 = 0xE300000000000000;
      v38 = 7104878;
    }
    else
    {
      v39 = v12;
      v40 = v11;
      v41 = v48;
      v34(v48, v16, v4);
      v33(v49, (unint64_t)v41, v4);
      v38 = String.init<A>(reflecting:)();
      v37 = v42;
      v43 = v41;
      v11 = v40;
      v12 = v39;
      ((void (*)(char *, uint64_t))v56[1])(v43, v4);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v60, v12);
    *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v35 + 32) = v38;
    *(_QWORD *)(v35 + 40) = v37;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v44 = v54;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v44 + 16)
      && (specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v11), (v45 & 1) != 0))
    {
      swift_endAccess();
      swift_retain();
      dispatch thunk of DispatchWorkItem.cancel()();
      swift_release();
    }
    else
    {
      swift_endAccess();
    }
    v5 = v56;
    v24 = v57;
    v20 = v52;
    v26 = v58;
    result = ((uint64_t (*)(char *, uint64_t))v56[1])(v11, v4);
    if (v24)
      goto LABEL_4;
LABEL_5:
    v30 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v30 >= v51)
      goto LABEL_33;
    v31 = *(_QWORD *)(v50 + 8 * v30);
    ++v26;
    if (!v31)
    {
      v26 = v30 + 1;
      if (v30 + 1 >= v51)
        goto LABEL_33;
      v31 = *(_QWORD *)(v50 + 8 * v26);
      if (!v31)
      {
        v26 = v30 + 2;
        if (v30 + 2 >= v51)
          goto LABEL_33;
        v31 = *(_QWORD *)(v50 + 8 * v26);
        if (!v31)
        {
          v26 = v30 + 3;
          if (v30 + 3 >= v51)
            goto LABEL_33;
          v31 = *(_QWORD *)(v50 + 8 * v26);
          if (!v31)
            break;
        }
      }
    }
LABEL_20:
    v28 = (v31 - 1) & v31;
  }
  v32 = v30 + 4;
  if (v32 >= v51)
  {
LABEL_33:
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v4);
LABEL_34:

    return swift_release();
  }
  v31 = *(_QWORD *)(v50 + 8 * v32);
  if (v31)
  {
    v26 = v32;
    goto LABEL_20;
  }
  while (1)
  {
    v26 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v26 >= v51)
      goto LABEL_33;
    v31 = *(_QWORD *)(v50 + 8 * v26);
    ++v32;
    if (v31)
      goto LABEL_20;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t specialized Sequence.forEach(_:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  id v24;

  v24 = a2;
  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + 56;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(a1 + 56);
  v23 = (unint64_t)(v12 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * i, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v4);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4) == 1)
      goto LABEL_28;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    closure #2 in ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset((uint64_t)v7, (uint64_t)v24);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_28;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v14)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v16++, 1))
      break;
    if (v16 >= v23)
      goto LABEL_27;
    v20 = *(_QWORD *)(v11 + 8 * v16);
    if (!v20)
    {
      v21 = v16 + 1;
      if (v16 + 1 >= v23)
        goto LABEL_27;
      v20 = *(_QWORD *)(v11 + 8 * v21);
      if (v20)
        goto LABEL_16;
      v21 = v16 + 2;
      if (v16 + 2 >= v23)
        goto LABEL_27;
      v20 = *(_QWORD *)(v11 + 8 * v21);
      if (v20)
        goto LABEL_16;
      v21 = v16 + 3;
      if (v16 + 3 >= v23)
        goto LABEL_27;
      v20 = *(_QWORD *)(v11 + 8 * v21);
      if (v20)
      {
LABEL_16:
        v16 = v21;
        goto LABEL_17;
      }
      v21 = v16 + 4;
      if (v16 + 4 < v23)
      {
        v20 = *(_QWORD *)(v11 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v16 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_30;
            if (v16 >= v23)
              goto LABEL_27;
            v20 = *(_QWORD *)(v11 + 8 * v16);
            ++v21;
            if (v20)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_27:
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v4);
LABEL_28:

      return swift_release();
    }
LABEL_17:
    v14 = (v20 - 1) & v20;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void specialized Sequence.first(where:)(uint64_t a1, id a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    Set.Iterator.init(_cocoa:)();
    v3 = v19;
    v18 = v20;
    v4 = v21;
    v5 = v22;
    v6 = v23;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v17 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_10;
LABEL_8:
  if (v6)
  {
    v10 = (v6 - 1) & v6;
    v11 = __clz(__rbit64(v6)) | (v5 << 6);
    v12 = v5;
    goto LABEL_29;
  }
  v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 < v17)
    {
      v15 = *(_QWORD *)(v18 + 8 * v14);
      v12 = v5 + 1;
      if (v15)
        goto LABEL_28;
      v12 = v5 + 2;
      if (v5 + 2 >= v17)
        goto LABEL_33;
      v15 = *(_QWORD *)(v18 + 8 * v12);
      if (v15)
        goto LABEL_28;
      v12 = v5 + 3;
      if (v5 + 3 >= v17)
        goto LABEL_33;
      v15 = *(_QWORD *)(v18 + 8 * v12);
      if (v15)
        goto LABEL_28;
      v12 = v5 + 4;
      if (v5 + 4 >= v17)
        goto LABEL_33;
      v15 = *(_QWORD *)(v18 + 8 * v12);
      if (v15)
      {
LABEL_28:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
        v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v11);
        if (v13)
        {
          do
          {
            if (objc_msgSend(v13, sel_identifier) == a2)
              break;

            v5 = v12;
            v6 = v10;
            if ((v3 & 0x8000000000000000) == 0)
              goto LABEL_8;
LABEL_10:
            if (!__CocoaSet.Iterator.next()())
              break;
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v13 = v24;
            swift_unknownObjectRelease();
            v12 = v5;
            v10 = v6;
          }
          while (v24);
        }
        goto LABEL_33;
      }
      v12 = v5 + 5;
      if (v5 + 5 < v17)
      {
        v15 = *(_QWORD *)(v18 + 8 * v12);
        if (!v15)
        {
          v16 = v5 + 6;
          while (v16 < v17)
          {
            v15 = *(_QWORD *)(v18 + 8 * v16++);
            if (v15)
            {
              v12 = v16 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    outlined consume of [String : Application].Iterator._Variant();
    return;
  }
  __break(1u);
}

void specialized Sequence.first(where:)(uint64_t a1, id *a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    Set.Iterator.init(_cocoa:)();
    v3 = v19;
    v18 = v20;
    v4 = v21;
    v5 = v22;
    v6 = v23;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v17 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_10;
LABEL_8:
  if (v6)
  {
    v10 = (v6 - 1) & v6;
    v11 = __clz(__rbit64(v6)) | (v5 << 6);
    v12 = v5;
    goto LABEL_29;
  }
  v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 < v17)
    {
      v15 = *(_QWORD *)(v18 + 8 * v14);
      v12 = v5 + 1;
      if (v15)
        goto LABEL_28;
      v12 = v5 + 2;
      if (v5 + 2 >= v17)
        goto LABEL_33;
      v15 = *(_QWORD *)(v18 + 8 * v12);
      if (v15)
        goto LABEL_28;
      v12 = v5 + 3;
      if (v5 + 3 >= v17)
        goto LABEL_33;
      v15 = *(_QWORD *)(v18 + 8 * v12);
      if (v15)
        goto LABEL_28;
      v12 = v5 + 4;
      if (v5 + 4 >= v17)
        goto LABEL_33;
      v15 = *(_QWORD *)(v18 + 8 * v12);
      if (v15)
      {
LABEL_28:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
        v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v11);
        if (v13)
        {
          do
          {
            if (objc_msgSend(v13, sel_identifier) == *a2)
              break;

            v5 = v12;
            v6 = v10;
            if ((v3 & 0x8000000000000000) == 0)
              goto LABEL_8;
LABEL_10:
            if (!__CocoaSet.Iterator.next()())
              break;
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v13 = v24;
            swift_unknownObjectRelease();
            v12 = v5;
            v10 = v6;
          }
          while (v24);
        }
        goto LABEL_33;
      }
      v12 = v5 + 5;
      if (v5 + 5 < v17)
      {
        v15 = *(_QWORD *)(v18 + 8 * v12);
        if (!v15)
        {
          v16 = v5 + 6;
          while (v16 < v17)
          {
            v15 = *(_QWORD *)(v18 + 8 * v16++);
            if (v15)
            {
              v12 = v16 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    outlined consume of [String : Application].Iterator._Variant();
    return;
  }
  __break(1u);
}

void specialized Sequence.first(where:)(uint64_t a1, void *a2, unint64_t *a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  id i;
  uint64_t v7;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  unsigned int v24;
  int64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v7 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, a3);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(a5, a3);
    OUTLINED_FUNCTION_760();
    v7 = v29;
    v27 = v30;
    v10 = v31;
    v11 = v32;
    v12 = v33;
  }
  else
  {
    v27 = a1 + 56;
    OUTLINED_FUNCTION_291_0();
    v12 = v13 & v14;
    swift_bridgeObjectRetain();
    v10 = v5;
    v11 = 0;
  }
  v26 = (unint64_t)(v10 + 64) >> 6;
  if (v7 < 0)
    goto LABEL_7;
LABEL_5:
  if (v12)
  {
    v15 = (v12 - 1) & v12;
    v16 = __clz(__rbit64(v12)) | (v11 << 6);
    v17 = v11;
    goto LABEL_26;
  }
  v18 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v18 < v26)
    {
      v19 = *(_QWORD *)(v27 + 8 * v18);
      v17 = v11 + 1;
      if (v19)
        goto LABEL_25;
      v17 = v11 + 2;
      if (v11 + 2 >= v26)
        goto LABEL_30;
      v19 = *(_QWORD *)(v27 + 8 * v17);
      if (v19)
        goto LABEL_25;
      v17 = v11 + 3;
      if (v11 + 3 >= v26)
        goto LABEL_30;
      v19 = *(_QWORD *)(v27 + 8 * v17);
      if (v19)
        goto LABEL_25;
      v17 = v11 + 4;
      if (v11 + 4 >= v26)
        goto LABEL_30;
      v19 = *(_QWORD *)(v27 + 8 * v17);
      if (v19)
      {
LABEL_25:
        v15 = (v19 - 1) & v19;
        v16 = __clz(__rbit64(v19)) + (v17 << 6);
LABEL_26:
        for (i = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v16); i; v15 = v12)
        {
          v21 = v7;
          v22 = objc_msgSend(i, sel_handle);
          v23 = objc_msgSend(a2, sel_handle);
          v24 = objc_msgSend(v22, sel_isEquivalentToHandle_, v23);

          if (v24)
            break;

          v11 = v17;
          v12 = v15;
          v7 = v21;
          if ((v21 & 0x8000000000000000) == 0)
            goto LABEL_5;
LABEL_7:
          if (!__CocoaSet.Iterator.next()())
            break;
          type metadata accessor for NSObject(0, a3);
          OUTLINED_FUNCTION_755();
          OUTLINED_FUNCTION_366();
          OUTLINED_FUNCTION_750();
          v17 = v11;
        }
        goto LABEL_30;
      }
      v17 = v11 + 5;
      if (v11 + 5 < v26)
      {
        v19 = *(_QWORD *)(v27 + 8 * v17);
        if (!v19)
        {
          v20 = v11 + 6;
          while (v20 < v26)
          {
            v19 = *(_QWORD *)(v27 + 8 * v20++);
            if (v19)
            {
              v17 = v20 - 1;
              goto LABEL_25;
            }
          }
          goto LABEL_30;
        }
        goto LABEL_25;
      }
    }
LABEL_30:
    outlined consume of [String : Application].Iterator._Variant();

    return;
  }
  __break(1u);
}

void specialized Sequence.first(where:)(uint64_t a1, void *a2, unint64_t *a3)
{
  uint64_t v3;
  id i;
  uint64_t v5;
  _QWORD *v7;
  unint64_t *v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  id v20;
  unsigned int v21;
  uint64_t v22;
  int64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_730();
    OUTLINED_FUNCTION_35_0();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, a3);
    v7 = (_QWORD *)OUTLINED_FUNCTION_416_0();
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(v7, v8);
    OUTLINED_FUNCTION_760();
    v5 = v27;
    v25 = v28;
    v9 = v29;
    v10 = v30;
    v11 = v31;
  }
  else
  {
    v25 = a1 + 56;
    OUTLINED_FUNCTION_291_0();
    v11 = v12 & v13;
    OUTLINED_FUNCTION_35_0();
    v9 = v3;
    v10 = 0;
  }
  v22 = v9;
  v24 = (unint64_t)(v9 + 64) >> 6;
  if (v5 < 0)
    goto LABEL_7;
LABEL_5:
  if (v11)
  {
    v14 = (v11 - 1) & v11;
    v15 = __clz(__rbit64(v11)) | (v10 << 6);
    v16 = v10;
    goto LABEL_26;
  }
  v17 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v17 < v24)
    {
      v18 = *(_QWORD *)(v25 + 8 * v17);
      v16 = v10 + 1;
      if (v18)
        goto LABEL_25;
      v16 = v10 + 2;
      if (v10 + 2 >= v24)
        goto LABEL_30;
      v18 = *(_QWORD *)(v25 + 8 * v16);
      if (v18)
        goto LABEL_25;
      v16 = v10 + 3;
      if (v10 + 3 >= v24)
        goto LABEL_30;
      v18 = *(_QWORD *)(v25 + 8 * v16);
      if (v18)
        goto LABEL_25;
      v16 = v10 + 4;
      if (v10 + 4 >= v24)
        goto LABEL_30;
      v18 = *(_QWORD *)(v25 + 8 * v16);
      if (v18)
      {
LABEL_25:
        v14 = (v18 - 1) & v18;
        v15 = __clz(__rbit64(v18)) + (v16 << 6);
LABEL_26:
        for (i = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v15); i; v14 = v11)
        {
          v20 = objc_msgSend(i, sel_handle, v22);
          v21 = objc_msgSend(v20, sel_isEqualToHandle_, a2);

          if (v21)
            break;

          v10 = v16;
          v11 = v14;
          if ((v5 & 0x8000000000000000) == 0)
            goto LABEL_5;
LABEL_7:
          if (!__CocoaSet.Iterator.next()())
            break;
          type metadata accessor for NSObject(0, a3);
          OUTLINED_FUNCTION_755();
          OUTLINED_FUNCTION_366();
          OUTLINED_FUNCTION_750();
          v16 = v10;
        }
        goto LABEL_30;
      }
      v16 = v10 + 5;
      if (v10 + 5 < v24)
      {
        v18 = *(_QWORD *)(v25 + 8 * v16);
        if (!v18)
        {
          v19 = v10 + 6;
          while (v19 < v24)
          {
            v18 = *(_QWORD *)(v25 + 8 * v19++);
            if (v18)
            {
              v16 = v19 - 1;
              goto LABEL_25;
            }
          }
          goto LABEL_30;
        }
        goto LABEL_25;
      }
    }
LABEL_30:
    outlined consume of [String : Application].Iterator._Variant();

    return;
  }
  __break(1u);
}

void thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()(unsigned __int8 *a1, void (*a2)(_QWORD))
{
  a2(*a1);
  OUTLINED_FUNCTION_0();
}

void thunk for @escaping @callee_guaranteed (@in_guaranteed Bool) -> (@out ())(char a1, void (*a2)(char *))
{
  char v2;

  v2 = a1;
  a2(&v2);
  OUTLINED_FUNCTION_36();
}

void specialized Sequence.contains(where:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  id v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  void *v26;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    Set.Iterator.init(_cocoa:)();
    v2 = v21;
    v19 = v22;
    v3 = v23;
    v4 = v24;
    v5 = v25;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v19 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = 0;
  }
  v18 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    v9 = v4;
    if ((v2 & 0x8000000000000000) == 0)
      break;
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_32;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v26;
    swift_unknownObjectRelease();
    if (!v26)
      goto LABEL_32;
LABEL_31:
    v16 = objc_msgSend(v12, sel_identifier);
    v17 = objc_msgSend(a2, sel_identifier);

    if (v16 == v17)
      goto LABEL_32;
  }
  if (v5)
  {
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v11 = v10 | (v4 << 6);
LABEL_30:
    v12 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (!v12)
      goto LABEL_32;
    goto LABEL_31;
  }
  v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v18)
      goto LABEL_32;
    v14 = *(_QWORD *)(v19 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v9 + 2;
      if (v9 + 2 >= v18)
        goto LABEL_32;
      v14 = *(_QWORD *)(v19 + 8 * v4);
      if (!v14)
      {
        v4 = v9 + 3;
        if (v9 + 3 >= v18)
          goto LABEL_32;
        v14 = *(_QWORD *)(v19 + 8 * v4);
        if (!v14)
        {
          v4 = v9 + 4;
          if (v9 + 4 >= v18)
            goto LABEL_32;
          v14 = *(_QWORD *)(v19 + 8 * v4);
          if (!v14)
          {
            v4 = v9 + 5;
            if (v9 + 5 >= v18)
              goto LABEL_32;
            v14 = *(_QWORD *)(v19 + 8 * v4);
            if (!v14)
            {
              v15 = v9 + 6;
              while (v15 < v18)
              {
                v14 = *(_QWORD *)(v19 + 8 * v15++);
                if (v14)
                {
                  v4 = v15 - 1;
                  goto LABEL_29;
                }
              }
LABEL_32:
              outlined consume of [String : Application].Iterator._Variant();

              return;
            }
          }
        }
      }
    }
LABEL_29:
    v5 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  char v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    Set.Iterator.init(_cocoa:)();
    v2 = v34;
    v31 = v35;
    v4 = v36;
    v3 = v37;
    v5 = v38;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v31 = a1 + 56;
    v4 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v30 = (unint64_t)(v4 + 64) >> 6;
  v29 = v2;
  while (1)
  {
    v9 = v3;
    if (v2 < 0)
    {
      if (!__CocoaSet.Iterator.next()())
        goto LABEL_43;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v13 = v39;
      swift_unknownObjectRelease();
      v12 = v9;
      if (!v39)
        goto LABEL_43;
      goto LABEL_31;
    }
    if (!v5)
      break;
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v11 = v10 | (v3 << 6);
    v12 = v3;
LABEL_30:
    v13 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_43;
LABEL_31:
    v32 = v12;
    v17 = objc_msgSend(v13, sel_handles);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v18 & 0xC000000000000001) != 0)
    {
      v19 = a2;
      v20 = __CocoaSet.contains(_:)();

      swift_bridgeObjectRelease();
      v3 = v32;
      if ((v20 & 1) != 0)
        goto LABEL_43;
    }
    else
    {
      if (*(_QWORD *)(v18 + 16))
      {
        v21 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v18 + 40));
        v22 = -1 << *(_BYTE *)(v18 + 32);
        v23 = v21 & ~v22;
        if (((*(_QWORD *)(v18 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
        {
          v24 = *(id *)(*(_QWORD *)(v18 + 48) + 8 * v23);
          v25 = static NSObject.== infix(_:_:)();

          if ((v25 & 1) != 0)
          {
LABEL_42:

            swift_bridgeObjectRelease();
LABEL_43:
            outlined consume of [String : Application].Iterator._Variant();

            return;
          }
          v26 = ~v22;
          while (1)
          {
            v23 = (v23 + 1) & v26;
            if (((*(_QWORD *)(v18 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
              break;
            v27 = *(id *)(*(_QWORD *)(v18 + 48) + 8 * v23);
            v28 = static NSObject.== infix(_:_:)();

            if ((v28 & 1) != 0)
              goto LABEL_42;
          }
        }
      }

      swift_bridgeObjectRelease();
      v2 = v29;
      v3 = v12;
    }
  }
  v14 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v14 >= v30)
      goto LABEL_43;
    v15 = *(_QWORD *)(v31 + 8 * v14);
    v12 = v9 + 1;
    if (!v15)
    {
      v12 = v9 + 2;
      if (v9 + 2 >= v30)
        goto LABEL_43;
      v15 = *(_QWORD *)(v31 + 8 * v12);
      if (!v15)
      {
        v12 = v9 + 3;
        if (v9 + 3 >= v30)
          goto LABEL_43;
        v15 = *(_QWORD *)(v31 + 8 * v12);
        if (!v15)
        {
          v12 = v9 + 4;
          if (v9 + 4 >= v30)
            goto LABEL_43;
          v15 = *(_QWORD *)(v31 + 8 * v12);
          if (!v15)
          {
            v12 = v9 + 5;
            if (v9 + 5 >= v30)
              goto LABEL_43;
            v15 = *(_QWORD *)(v31 + 8 * v12);
            if (!v15)
            {
              v16 = v9 + 6;
              while (v16 < v30)
              {
                v15 = *(_QWORD *)(v31 + 8 * v16++);
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_29;
                }
              }
              goto LABEL_43;
            }
          }
        }
      }
    }
LABEL_29:
    v5 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void specialized Sequence.contains(where:)(uint64_t a1, id *a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  unsigned int v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  void *v26;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    Set.Iterator.init(_cocoa:)();
    v2 = v21;
    v19 = v22;
    v3 = v23;
    v4 = v24;
    v5 = v25;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v19 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = 0;
  }
  v18 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    v9 = v4;
    if ((v2 & 0x8000000000000000) == 0)
      break;
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_32;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v26;
    swift_unknownObjectRelease();
    if (!v26)
      goto LABEL_32;
LABEL_31:
    v16 = objc_msgSend(v12, sel_handle);
    v17 = objc_msgSend(v16, sel_isEqualToHandle_, *a2);

    if (v17)
      goto LABEL_32;
  }
  if (v5)
  {
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v11 = v10 | (v4 << 6);
LABEL_30:
    v12 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (!v12)
      goto LABEL_32;
    goto LABEL_31;
  }
  v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v18)
      goto LABEL_32;
    v14 = *(_QWORD *)(v19 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v9 + 2;
      if (v9 + 2 >= v18)
        goto LABEL_32;
      v14 = *(_QWORD *)(v19 + 8 * v4);
      if (!v14)
      {
        v4 = v9 + 3;
        if (v9 + 3 >= v18)
          goto LABEL_32;
        v14 = *(_QWORD *)(v19 + 8 * v4);
        if (!v14)
        {
          v4 = v9 + 4;
          if (v9 + 4 >= v18)
            goto LABEL_32;
          v14 = *(_QWORD *)(v19 + 8 * v4);
          if (!v14)
          {
            v4 = v9 + 5;
            if (v9 + 5 >= v18)
              goto LABEL_32;
            v14 = *(_QWORD *)(v19 + 8 * v4);
            if (!v14)
            {
              v15 = v9 + 6;
              while (v15 < v18)
              {
                v14 = *(_QWORD *)(v19 + 8 * v15++);
                if (v14)
                {
                  v4 = v15 - 1;
                  goto LABEL_29;
                }
              }
LABEL_32:
              outlined consume of [String : Application].Iterator._Variant();
              outlined release of ParticipantMediaPriorities(a2);
              return;
            }
          }
        }
      }
    }
LABEL_29:
    v5 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t specialized Sequence.contains(where:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  void *v35;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UISceneSession);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(lazy protocol witness table cache variable for type UISceneSession and conformance NSObject, &lazy cache variable for type metadata for UISceneSession);
    result = Set.Iterator.init(_cocoa:)();
    v1 = v30;
    v29 = v31;
    v3 = v32;
    v4 = v33;
    v5 = v34;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v29 = a1 + 56;
    v7 = ~v6;
    v8 = -v6;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v5 = v9 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v3 = v7;
    v4 = 0;
  }
  v27 = v3;
  v28 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    v10 = v4;
    if (v1 < 0)
    {
      v13 = __CocoaSet.Iterator.next()();
      if (!v13)
        goto LABEL_39;
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UISceneSession);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v35;
      swift_unknownObjectRelease();
      v11 = v5;
      if (!v35)
        goto LABEL_38;
      goto LABEL_31;
    }
    if (!v5)
      break;
    v11 = (v5 - 1) & v5;
    v12 = __clz(__rbit64(v5)) | (v4 << 6);
LABEL_30:
    v14 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v12);
    if (!v14)
      goto LABEL_38;
LABEL_31:
    v18 = v1;
    v19 = objc_msgSend(v14, sel_configuration, v27);
    v20 = objc_msgSend(v19, sel_role);

    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v23 = v22;
    if (v21 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v23 == v24)
    {

      swift_bridgeObjectRelease_n();
      v13 = 1;
      goto LABEL_39;
    }
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v1 = v18;
    v5 = v11;
    if ((v26 & 1) != 0)
    {
      v13 = 1;
      goto LABEL_39;
    }
  }
  v15 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v15 >= v28)
      goto LABEL_38;
    v16 = *(_QWORD *)(v29 + 8 * v15);
    ++v4;
    if (!v16)
    {
      v4 = v10 + 2;
      if (v10 + 2 >= v28)
        goto LABEL_38;
      v16 = *(_QWORD *)(v29 + 8 * v4);
      if (!v16)
      {
        v4 = v10 + 3;
        if (v10 + 3 >= v28)
          goto LABEL_38;
        v16 = *(_QWORD *)(v29 + 8 * v4);
        if (!v16)
        {
          v4 = v10 + 4;
          if (v10 + 4 >= v28)
            goto LABEL_38;
          v16 = *(_QWORD *)(v29 + 8 * v4);
          if (!v16)
          {
            v4 = v10 + 5;
            if (v10 + 5 >= v28)
              goto LABEL_38;
            v16 = *(_QWORD *)(v29 + 8 * v4);
            if (!v16)
            {
              v17 = v10 + 6;
              while (v17 < v28)
              {
                v16 = *(_QWORD *)(v29 + 8 * v17++);
                if (v16)
                {
                  v4 = v17 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              v13 = 0;
LABEL_39:
              outlined consume of [String : Application].Iterator._Variant();
              return v13;
            }
          }
        }
      }
    }
LABEL_29:
    v11 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v4 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall ConversationController.swapLocalParticipantCamera()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_93();
  v5 = v0;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v8 = OUTLINED_FUNCTION_7_22();
  *v1 = v8;
  OUTLINED_FUNCTION_4_57(v8, *MEMORY[0x1E0DEF740]);
  v9 = OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_101((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v9 = v5 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_1();
  if ((*(char *)(v9 + 16) & 0x80000000) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_4:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v10 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v10 + 16) = xmmword_1BD6441D0;
      v11 = *(_BYTE *)(v9 + 16);
      v33 = *(_OWORD *)v9;
      v34 = v11;
      OUTLINED_FUNCTION_708();
      OUTLINED_FUNCTION_582_0();
      *(_QWORD *)(v10 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v10 + 32) = v9;
      *(_QWORD *)(v10 + 40) = v2;
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
      goto LABEL_12;
    }
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  v12 = *(_QWORD *)v9;
  if (BYTE1(v12))
  {
    if (BYTE1(v12) != 1)
      goto LABEL_12;
    v13 = 0;
  }
  else
  {
    v13 = 1;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v14 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v14 + 16) = xmmword_1BD645380;
  OUTLINED_FUNCTION_489_1();
  OUTLINED_FUNCTION_637();
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  v16 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 32) = v3;
  *(_QWORD *)(v14 + 40) = v4;
  LOBYTE(v33) = v13;
  v17 = OUTLINED_FUNCTION_489_1();
  *(_QWORD *)(v14 + 96) = v15;
  *(_QWORD *)(v14 + 104) = v16;
  OUTLINED_FUNCTION_702(v17, v18);
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_53();
  v19 = (uint64_t *)(v5 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_379_2();
  v20 = (_QWORD *)(v5 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_1();
  v21 = v20[3];
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v22 = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v23);
  v25 = OUTLINED_FUNCTION_200_4(v24, v32);
  OUTLINED_FUNCTION_291((uint64_t)v25, v26, v27);
  OUTLINED_FUNCTION_138_10(v21);
  OUTLINED_FUNCTION_336_4(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  v28 = v35;
  v29 = v36;
  __swift_project_boxed_opaque_existential_1(&v33, v35);
  v30 = *v19;
  v31 = OUTLINED_FUNCTION_748();
  (*(void (**)(uint64_t, uint64_t, BOOL, uint64_t, uint64_t))(v29 + 32))(v13, v30, (v31 & 1) == 0, v28, v29);
  OUTLINED_FUNCTION_707();
LABEL_12:
  OUTLINED_FUNCTION_52_1();
}

void thunk for @escaping @callee_guaranteed (@guaranteed String) -> ()(_QWORD *a1, void (*a2)(_QWORD, _QWORD))
{
  a2(*a1, a1[1]);
  OUTLINED_FUNCTION_0();
}

void thunk for @escaping @callee_guaranteed (@in_guaranteed String) -> (@out ())(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  a3(v3);
  OUTLINED_FUNCTION_36();
}

void _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit11ParticipantVGG_SSs5NeverOTg506_sSi15f5Kit11h34VSSIgyno_Si6offset_AC7elementtSSs5I355OIegnrzr_TR04_s15a103Kit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalC217InVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSSSi_AA0O0VtXEfU3_Tf3nnnpf_nTf1cn_n()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  char *v28;
  uint64_t v29;
  Swift::String v30;
  void (*v31)(uint64_t, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;
  char *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void **v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  OUTLINED_FUNCTION_35_9();
  v2 = v1;
  v3 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v4);
  v60 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_62();
  v59 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_5_27();
  v68 = v9;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_62();
  v70 = v11;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  v65 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v14);
  v64 = (_QWORD *)((char *)v58 - v15);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_62();
  v69 = (void **)v17;
  v78 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v18 = *(_QWORD *)(v2 + 16);
  OUTLINED_FUNCTION_124();
  v63 = v18;
  v58[0] = v2;
  if (v18)
  {
    v19 = 0;
    v67 = OUTLINED_FUNCTION_14_2();
    v20 = *(_QWORD *)(v67 - 8);
    v21 = v2 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v61 = *(_QWORD *)(v20 + 72);
    v62 = v0;
    do
    {
      v22 = v66;
      v23 = (uint64_t)&v65[*(int *)(v66 + 48)];
      outlined init with copy of ConversationControlsAppLaunchButtonType(v21, v23, type metadata accessor for Participant);
      v24 = (uint64_t)v64;
      v25 = (uint64_t)v64 + *(int *)(v22 + 48);
      *v64 = v19;
      v26 = v0;
      outlined init with take of StagedCollaboration(v23, v25, type metadata accessor for Participant);
      v27 = v69;
      outlined init with take of Any?(v24, (uint64_t)v69, &demangling cache variable for type metadata for (offset: Int, element: Participant));
      v28 = (char *)v27 + *(int *)(v22 + 48);
      v71 = *v27;
      v76 = dispatch thunk of CustomStringConvertible.description.getter();
      v77 = v29;
      v30._countAndFlagsBits = 979659048;
      v30._object = (void *)0xE400000000000000;
      String.append(_:)(v30);
      v31 = *(void (**)(uint64_t, char *, uint64_t))(v0 + 16);
      v32 = v70;
      v31(v70, &v28[*(int *)(v67 + 20)], v3);
      v33 = OUTLINED_FUNCTION_782();
      __swift_storeEnumTagSinglePayload(v33, v34, v35, v36);
      v37 = v68;
      outlined init with copy of FeatureEligibility?(v32, v68, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v37, 1, v3) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v68, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      }
      else
      {
        v38 = v59;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v59, v68, v3);
        v39 = OUTLINED_FUNCTION_291_4();
        ((void (*)(uint64_t))v31)(v39);
        OUTLINED_FUNCTION_153_1();
        String.init<A>(reflecting:)();
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v38, v3);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v70, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v40._countAndFlagsBits = OUTLINED_FUNCTION_261_2();
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      v41._countAndFlagsBits = 8236;
      v41._object = (void *)0xE200000000000000;
      String.append(_:)(v41);
      v42 = &v28[*(int *)(v67 + 28)];
      v43 = *(void **)v42;
      if (*(_QWORD *)v42)
      {
        v45 = *((_QWORD *)v42 + 3);
        v44 = *((_QWORD *)v42 + 4);
        v46 = *((_DWORD *)v42 + 4);
        v47 = *((_QWORD *)v42 + 1);
        v71 = v43;
        v72 = v47;
        v73 = v46 & 1;
        v74 = v45;
        v75 = v44;
        swift_bridgeObjectRetain();
        v48 = v43;
        v49 = String.init<A>(reflecting:)();
        v51 = v50;
      }
      else
      {
        v51 = 0xE300000000000000;
        v49 = 7104878;
      }
      v52 = v51;
      String.append(_:)(*(Swift::String *)&v49);
      swift_bridgeObjectRelease();
      v53 = v76;
      v54 = v77;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v69, &demangling cache variable for type metadata for (offset: Int, element: Participant));
      v55 = v78;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_595_0();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v55 = v78;
      }
      v56 = *(_QWORD *)(v55 + 16);
      if (v56 >= *(_QWORD *)(v55 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v55 = v78;
      }
      ++v19;
      *(_QWORD *)(v55 + 16) = v56 + 1;
      v57 = v55 + 16 * v56;
      *(_QWORD *)(v57 + 32) = v53;
      *(_QWORD *)(v57 + 40) = v54;
      v0 = v62;
      v21 += v61;
    }
    while (v63 != v19);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_29();
}

void ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *v28;
  uint64_t v29;
  uint64_t v30;

  HIDWORD(v21) = a8;
  ObjectType = swift_getObjectType();
  specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(a1, a3, a4, a5, a6, a7, HIDWORD(v21), a9, a10, a11, v11, ObjectType, a2, v19, a7, v21, v22, v23, v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30);
}

void protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.didUpdateVisibleParticipantScreenInfo.getter in conformance ConversationController()
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationController.didUpdateVisibleParticipantScreenInfo.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.didUpdateVisibleParticipantScreenInfo.setter in conformance ConversationController(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2);
  OUTLINED_FUNCTION_0();
}

void ConversationController.didUpdateVisibleParticipantScreenInfo.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.didUpdateVisibleParticipantScreenInfo.modify in conformance ConversationController()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationController.didUpdateVisibleParticipantScreenInfo.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.call.getter in conformance ConversationController()
{
  ConversationController.call.getter();
  OUTLINED_FUNCTION_0();
}

void ConversationController.call.getter()
{
  OUTLINED_FUNCTION_1();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_32();
}

void protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.remoteParticipants.getter in conformance ConversationController()
{
  ConversationController.remoteParticipants.getter();
  OUTLINED_FUNCTION_0();
}

void ConversationController.remoteParticipants.getter()
{
  ParticipantsCollectionViewDataSource.onlineParticipants.getter();
}

void protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.lookupActiveParticipant(correspondingTo:) in conformance ConversationController(uint64_t a1)
{
  ConversationController.lookupActiveParticipant(correspondingTo:)(a1);
  OUTLINED_FUNCTION_0();
}

void ConversationController.lookupActiveParticipant(correspondingTo:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];

  OUTLINED_FUNCTION_303_4();
  if (v17)
  {
    OUTLINED_FUNCTION_251_4(v2, v3, v4, v5, v6, v7, v8, v9, v15, v16, v17, v18, v19[0]);
    v10 = ConversationController.activeParticipant(correspondingTo:in:)(a1, v19);
    OUTLINED_FUNCTION_219_4(v10, v11, v12, v13, v14);
  }
  else
  {
    OUTLINED_FUNCTION_273_6(v2, &demangling cache variable for type metadata for Conversation?, v4, v5, v6, v7, v8, v9, v15);
  }
  OUTLINED_FUNCTION_2();
}

void protocol witness for ScreenSharingStateMonitorConversationProviderProtocol.lookupActiveParticipant(from:) in conformance ConversationController(void *a1@<X0>, uint64_t a2@<X8>)
{
  ConversationController.lookupActiveParticipant(from:)(a1, a2);
  OUTLINED_FUNCTION_0();
}

void ConversationController.lookupActiveParticipant(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  OUTLINED_FUNCTION_303_4();
  if (!v28)
  {
    OUTLINED_FUNCTION_273_6(v4, &demangling cache variable for type metadata for Conversation?, v6, v7, v8, v9, v10, v11, v26);
LABEL_6:
    v23 = OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_77_0(a2, v24, v25, v23);
    goto LABEL_7;
  }
  v12 = OUTLINED_FUNCTION_251_4(v4, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30);
  if (!a1)
  {
    OUTLINED_FUNCTION_219_4(v12, v13, v14, v15, v16);
    goto LABEL_6;
  }
  v17 = a1;
  ConversationController.activeParticipant(from:in:)(v17, a2);

  OUTLINED_FUNCTION_219_4(v18, v19, v20, v21, v22);
LABEL_7:
  OUTLINED_FUNCTION_40_7();
}

uint64_t specialized Collection.firstIndex(where:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;

  v5 = type metadata accessor for UUID();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - v10;
  v26 = *(_QWORD *)(a1 + 16);
  if (v26)
  {
    v22 = v2;
    v12 = v9;
    v13 = type metadata accessor for Participant(0);
    v14 = 0;
    v15 = *(_QWORD *)(v13 - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v23 = *(_QWORD *)(v15 + 72);
    v24 = v12;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    while (1)
    {
      v17 = v25;
      v25(v11, v16 + *(int *)(v13 + 20), v5);
      result = __swift_getEnumTagSinglePayload(a2, 1, v13);
      if ((_DWORD)result == 1)
        break;
      v19 = a2;
      v17(v7, a2 + *(int *)(v13 + 20), v5);
      v20 = static UUID.== infix(_:_:)();
      v21 = *(void (**)(char *, uint64_t))(v24 + 8);
      v21(v7, v5);
      v21(v11, v5);
      if ((v20 & 1) != 0)
        return v14;
      ++v14;
      v16 += v23;
      a2 = v19;
      if (v26 == v14)
        return 0;
    }
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

void ConversationController.lookupActiveConversation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[11];
  _QWORD v39[5];

  OUTLINED_FUNCTION_93();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_55_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_256_2();
  ConversationController.updateConversationUUIDIfNeeded()();
  if (v38[9])
  {
    OUTLINED_FUNCTION_54_38();
    OUTLINED_FUNCTION_656_0();
  }
  else
  {
    OUTLINED_FUNCTION_69_25(v8, &demangling cache variable for type metadata for Conversation?);
    OUTLINED_FUNCTION_1();
    v9 = OUTLINED_FUNCTION_202_0();
    outlined init with copy of FeatureEligibility?(v9, v10, v11);
    v12 = OUTLINED_FUNCTION_392_1();
    v14 = OUTLINED_FUNCTION_69_0(v12, v13, v5);
    if (v15)
    {
      OUTLINED_FUNCTION_275(v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(_OWORD *)v3 = 0u;
      *(_OWORD *)(v3 + 16) = 0u;
      *(_QWORD *)(v3 + 32) = 0;
    }
    else
    {
      v16 = OUTLINED_FUNCTION_295_3();
      OUTLINED_FUNCTION_8_7(v16, v17, v18);
      v19 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
      OUTLINED_FUNCTION_1();
      v21 = v19[3];
      v20 = v19[4];
      OUTLINED_FUNCTION_605_0(v19);
      v22 = *(_QWORD *)(v21 - 8);
      OUTLINED_FUNCTION_54_42();
      MEMORY[0x1E0C80A78](v23);
      v25 = OUTLINED_FUNCTION_619(v24, v38[0]);
      OUTLINED_FUNCTION_107_0((uint64_t)v25, v26, v27);
      v28 = OUTLINED_FUNCTION_371(v21, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 16));
      v29 = (uint64_t)v19;
      v30 = v28;
      OUTLINED_FUNCTION_584(v29, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
      v31 = *(_QWORD *)(v30 + 16);
      if (v31)
      {
        v38[1] = v30;
        v38[2] = (uint64_t)v38;
        v32 = v30 + 32;
        v33 = OUTLINED_FUNCTION_5_0();
        while (1)
        {
          OUTLINED_FUNCTION_374_2(v33, (uint64_t)v39);
          __swift_project_boxed_opaque_existential_1(v39, v39[3]);
          OUTLINED_FUNCTION_180_2();
          OUTLINED_FUNCTION_49_16();
          v34 = static UUID.== infix(_:_:)();
          v35 = *(void (**)(uint64_t))(v1 + 8);
          v36 = OUTLINED_FUNCTION_396_1();
          v35(v36);
          if ((v34 & 1) != 0)
            break;
          v33 = OUTLINED_FUNCTION_12_6();
          v32 += 40;
          if (!--v31)
          {
            OUTLINED_FUNCTION_27();
            goto LABEL_11;
          }
        }
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_656_0();
        OUTLINED_FUNCTION_27();
      }
      else
      {
LABEL_11:
        OUTLINED_FUNCTION_437();
        OUTLINED_FUNCTION_27();
        v35 = *(void (**)(uint64_t))(v1 + 8);
      }
      v37 = OUTLINED_FUNCTION_315_0();
      v35(v37);
    }
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.mostRecentActiveConversation.getter()
{
  uint64_t v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                          + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController))
                    + 0x120))();
  OUTLINED_FUNCTION_0();
}

void ConversationController.conversationIsAVLess.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[11];

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_256_2();
  ConversationController.lookupActiveConversation()();
  if (v21[3])
  {
    OUTLINED_FUNCTION_243_2();
    v5 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    OUTLINED_FUNCTION_1();
    outlined init with copy of RadarReporting(v5, (uint64_t)v18);
    v6 = v19;
    v7 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v8 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    OUTLINED_FUNCTION_1();
    v9 = *(_QWORD *)(v8 + 8);
    v10 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 112);
    v11 = OUTLINED_FUNCTION_491_0();
    v10(&v16, v11, v9, v6, v7);
    swift_unknownObjectRelease();
    if (v17)
    {
      outlined init with take of Notice(&v16, (uint64_t)v21);
      OUTLINED_FUNCTION_518_1();
      v12 = v21[8];
      OUTLINED_FUNCTION_644_0();
      OUTLINED_FUNCTION_138_10(v12);
      OUTLINED_FUNCTION_517();
      OUTLINED_FUNCTION_138_10(v12);
      OUTLINED_FUNCTION_315_0();
      static UUID.== infix(_:_:)();
      v13 = *(void (**)(uint64_t))(v1 + 8);
      v14 = OUTLINED_FUNCTION_124_0();
      v13(v14);
      v15 = OUTLINED_FUNCTION_131();
      v13(v15);
      OUTLINED_FUNCTION_103();
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v16, &demangling cache variable for type metadata for Conversation?);
      OUTLINED_FUNCTION_518_1();
    }
    OUTLINED_FUNCTION_100_2();
  }
  else
  {
    OUTLINED_FUNCTION_159_8(v4, &demangling cache variable for type metadata for Conversation?);
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.localVideoSupported.getter()
{
  char v0;

  if ((ConversationController.isCarPlayConnected.getter() & 1) == 0)
  {
    if (objc_msgSend((id)objc_opt_self(), sel_supportsDisplayingFaceTimeAudioCalls))
    {
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_242_5();
      OUTLINED_FUNCTION_21_55();
      v0 = OUTLINED_FUNCTION_214_3();
      OUTLINED_FUNCTION_113();
      if ((v0 & 1) == 0)
        OUTLINED_FUNCTION_1();
    }
  }
  OUTLINED_FUNCTION_10_10();
}

Swift::Void __swiftcall ConversationController.cancelJoinCountdown()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_256_2();
  OUTLINED_FUNCTION_1();
  v3 = OUTLINED_FUNCTION_396_1();
  OUTLINED_FUNCTION_224_0(v3, v4);
  Participant.asCanceledJoinCountdown()();
  OUTLINED_FUNCTION_68_2(v0);
  OUTLINED_FUNCTION_2_0();
  v5 = OUTLINED_FUNCTION_318();
  outlined assign with take of Participant(v5, v6);
  swift_endAccess();
  OUTLINED_FUNCTION_91();
}

uint64_t ConversationController.shouldShowJoinCountdown.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v19[5];
  _QWORD v20[13];
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_96();
  v21 = v2;
  v22 = v3;
  v4 = v0;
  v5 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_120_4();
  ConversationController.lookupActiveConversation()();
  if (v19[3])
  {
    OUTLINED_FUNCTION_672_0();
    v10 = v20[4];
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    v11 = OUTLINED_FUNCTION_312_0(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 216));

    if (!v11)
    {
LABEL_11:
      OUTLINED_FUNCTION_316_4();
      return v11 & 1;
    }
    v12 = (_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
    OUTLINED_FUNCTION_1();
    if (*v12 == 3)
    {
      v13 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_111(v13, v1);
      v14 = *(_QWORD *)(v1 + *(int *)(v5 + 28));
      v15 = OUTLINED_FUNCTION_124_0();
      OUTLINED_FUNCTION_111(v15, v16);
      if (v14)
        LOBYTE(v11) = 0;
      else
        v11 = Participant.CountdownInfo.shouldShowJoinCountdown.getter();
      OUTLINED_FUNCTION_110((uint64_t)v9);
      OUTLINED_FUNCTION_110(v1);
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_316_4();
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for Conversation?);
  }
  LOBYTE(v11) = 0;
  return v11 & 1;
}

void ConversationController.activeOneToOneConversationBackedByGroupSession.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t v14;
  Class isa;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[9];
  _QWORD v25[5];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_320_3();
  if (!v24[7])
  {
    OUTLINED_FUNCTION_69_25(v4, &demangling cache variable for type metadata for Conversation?);
LABEL_7:
    OUTLINED_FUNCTION_437();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_54_38();
  v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_1();
  v6 = v5[3];
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_291((uint64_t)v24 - v9, v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  v11 = OUTLINED_FUNCTION_49_16();
  v13 = (void *)v12(v11);
  OUTLINED_FUNCTION_336_4(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  v14 = v25[4];
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  OUTLINED_FUNCTION_64_25(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 88));
  OUTLINED_FUNCTION_617_0();
  OUTLINED_FUNCTION_802(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
  isa = Set._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_27();
  v16 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_1();
  v17 = *(_QWORD *)(v16 + 8);
  OUTLINED_FUNCTION_287_3();
  v18 = *(uint64_t (**)(uint64_t))(v17 + 128);
  OUTLINED_FUNCTION_21_55();
  v19 = OUTLINED_FUNCTION_202_0();
  LOBYTE(v16) = v18(v19);
  OUTLINED_FUNCTION_113();
  v20 = objc_msgSend(v13, sel_activeConversationWithRemoteMembers_andLink_matchingVideo_backedByGroupSession_, isa, 0, v16 & 1, 1);

  if (!v20)
  {
    OUTLINED_FUNCTION_12_6();
    goto LABEL_7;
  }
  v22 = (uint64_t)OUTLINED_FUNCTION_25_1(v21, sel_isOneToOneModeEnabled);
  if ((v22 & 1) != 0)
  {
    OUTLINED_FUNCTION_59(v22, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    *(_QWORD *)(v3 + 24) = v23;
    *(_QWORD *)(v3 + 32) = &protocol witness table for TUConversation;
  }
  else
  {

    v20 = 0;
    *(_OWORD *)(v3 + 24) = 0u;
    *(_OWORD *)(v3 + 8) = 0u;
  }
  *(_QWORD *)v3 = v20;
  OUTLINED_FUNCTION_12_6();
LABEL_10:
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationController.isOneToOneModeEnabled.getter()
{
  uint64_t v0;
  char v1;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter) & 1) != 0
    || (ConversationController.isOneToOneModeInferred.getter() & 1) != 0)
  {
    v1 = *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity) ^ 1;
  }
  else
  {
    v1 = 0;
  }
  return v1 & 1;
}

void ConversationController.participant(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);

  OUTLINED_FUNCTION_93();
  v5 = v4;
  v6 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_138_0();
  v9 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_92_12(v9, v2);
  v11 = *(void **)(v2 + *(int *)(v6 + 28));
  if (v11)
  {
    v12 = v11;
    OUTLINED_FUNCTION_162_5((uint64_t)v12, type metadata accessor for Participant);
    v13 = OUTLINED_FUNCTION_53_0(v12, sel_isEqualToHandle_);

    if (v13)
    {
      v14 = OUTLINED_FUNCTION_311_0();
      outlined init with copy of ConversationControlsAppLaunchButtonType(v14, v15, v16);
      OUTLINED_FUNCTION_72(v5, 0);
      goto LABEL_15;
    }
  }
  else
  {
    OUTLINED_FUNCTION_162_5(v10, type metadata accessor for Participant);
  }
  v17 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_1();
  v18 = *v17;
  v19 = *(_QWORD *)(*v17 + 16);
  if (v19)
  {
    OUTLINED_FUNCTION_37_3();
    v21 = v18 + v20;
    v22 = *(_QWORD *)(v3 + 72);
    OUTLINED_FUNCTION_35_0();
    while (1)
    {
      v23 = OUTLINED_FUNCTION_157();
      OUTLINED_FUNCTION_122(v23, v24);
      v25 = *(void **)(v1 + *(int *)(v6 + 28));
      if (v25)
      {
        if (OUTLINED_FUNCTION_53_0(v25, sel_isEqualToHandle_))
          break;
      }
      OUTLINED_FUNCTION_488_0();
      v21 += v22;
      if (!--v19)
        goto LABEL_12;
    }
    v28 = OUTLINED_FUNCTION_295_3();
    outlined init with take of StagedCollaboration(v28, v29, v30);
    v26 = v5;
    v27 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_35_0();
LABEL_12:
    v26 = OUTLINED_FUNCTION_392_1();
  }
  OUTLINED_FUNCTION_72(v26, v27);
  OUTLINED_FUNCTION_133();
LABEL_15:
  OUTLINED_FUNCTION_52_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v55 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v51 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_62();
  v54 = v9;
  v10 = OUTLINED_FUNCTION_14_2();
  v53 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v12);
  v50 = (char *)&v49 - v13;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_231();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_62();
  v52 = v16;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_408_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_16_2();
  v18 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_8_7(v1, v18 + *(int *)(v10 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  v19 = OUTLINED_FUNCTION_233_4();
  OUTLINED_FUNCTION_101(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  if ((v19 & 1) != 0)
  {
    v20 = v55;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v18, v55, type metadata accessor for Participant);
LABEL_25:
    v48 = 0;
    goto LABEL_26;
  }
  v21 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_1();
  v22 = *v21;
  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    OUTLINED_FUNCTION_30_36();
    v25 = v22 + v24;
    v27 = *(_QWORD *)(v26 + 72);
    OUTLINED_FUNCTION_124();
    while (1)
    {
      OUTLINED_FUNCTION_467(v25, v3);
      if ((OUTLINED_FUNCTION_233_4() & 1) != 0)
        break;
      OUTLINED_FUNCTION_94(v3);
      v25 += v27;
      if (!--v23)
        goto LABEL_9;
    }
    v30 = v54;
    OUTLINED_FUNCTION_655(v3, v28, type metadata accessor for Participant);
    v29 = 0;
    v20 = v55;
  }
  else
  {
    OUTLINED_FUNCTION_124();
LABEL_9:
    v29 = 1;
    v30 = v54;
    v20 = v55;
  }
  __swift_storeEnumTagSinglePayload(v30, v29, 1, v10);
  OUTLINED_FUNCTION_13_3();
  v31 = OUTLINED_FUNCTION_69_0(v30, 1, v10);
  if (!v32)
  {
    v43 = v30;
    v44 = v52;
LABEL_24:
    OUTLINED_FUNCTION_64_5(v43, v44);
    OUTLINED_FUNCTION_64_5(v44, v20);
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_225_3(v31, &demangling cache variable for type metadata for Participant?);
  v33 = (uint64_t *)(v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants);
  OUTLINED_FUNCTION_1();
  v34 = *v33;
  v35 = *(_QWORD *)(v34 + 16);
  if (v35)
  {
    OUTLINED_FUNCTION_30_36();
    v37 = v34 + v36;
    v39 = *(_QWORD *)(v38 + 72);
    OUTLINED_FUNCTION_124();
    while (1)
    {
      v40 = OUTLINED_FUNCTION_758();
      OUTLINED_FUNCTION_467(v40, v41);
      if ((OUTLINED_FUNCTION_233_4() & 1) != 0)
        break;
      OUTLINED_FUNCTION_94(v2);
      v37 += v39;
      if (!--v35)
        goto LABEL_19;
    }
    v46 = (uint64_t)v51;
    OUTLINED_FUNCTION_655(v2, v42, type metadata accessor for Participant);
    v45 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_124();
LABEL_19:
    v45 = 1;
    v46 = (uint64_t)v51;
  }
  __swift_storeEnumTagSinglePayload(v46, v45, 1, v10);
  OUTLINED_FUNCTION_13_3();
  v47 = OUTLINED_FUNCTION_69_0(v46, 1, v10);
  if (!v32)
  {
    v43 = v46;
    v44 = (uint64_t)v50;
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_225_3(v47, &demangling cache variable for type metadata for Participant?);
  v48 = 1;
LABEL_26:
  OUTLINED_FUNCTION_3_68(v20, v48);
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.hasMessageCapableRemoteParticipants.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  unsigned __int8 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_93();
  v24 = OUTLINED_FUNCTION_238();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_55_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_88_11();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_33_2();
  ConversationController.remoteAndAssociatedParticipants.getter();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    OUTLINED_FUNCTION_37_3();
    v23 = v12;
    v14 = v12 + v13;
    v25 = *(_QWORD *)(v0 + 72);
    while (1)
    {
      v15 = OUTLINED_FUNCTION_261_2();
      OUTLINED_FUNCTION_135(v15, v16);
      v17 = *(void **)(v2 + *(int *)(v26 + 28));
      if (!v17)
        break;
      v18 = objc_msgSend(v17, sel_value, v23, v24);
      v19 = v18;
      if (!v18)
      {
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v19 = (void *)MEMORY[0x1C3B72E00](v20);
        v18 = (id)OUTLINED_FUNCTION_58_1();
      }
      v21 = OUTLINED_FUNCTION_25_1((uint64_t)v18, sel_destinationIdIsTemporary);

      OUTLINED_FUNCTION_135(v2, v3);
      if ((v21 & 1) == 0)
        goto LABEL_9;
      OUTLINED_FUNCTION_137_1(v3);
      OUTLINED_FUNCTION_135(v2, v1);
      OUTLINED_FUNCTION_137_1(v1);
      OUTLINED_FUNCTION_137_1(v2);
      v14 += v25;
      if (!--v11)
        goto LABEL_11;
    }
    OUTLINED_FUNCTION_135(v2, v3);
LABEL_9:
    outlined init with copy of ConversationControlsAppLaunchButtonType(v3, (uint64_t)v6, type metadata accessor for Participant.State);
    v22 = (char *)&loc_1BD532960 + *((int *)qword_1BD532AB0 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
LABEL_11:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationController.audioRoute.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_1();
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - v6;
  OUTLINED_FUNCTION_120_7(v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v9 = OUTLINED_FUNCTION_181_6(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40));
  OUTLINED_FUNCTION_101((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  return v9;
}

Swift::Void __swiftcall ConversationController.update()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[40];

  OUTLINED_FUNCTION_311_5();
  ConversationController.update(with:)((uint64_t)v2);
  OUTLINED_FUNCTION_305(v0, &demangling cache variable for type metadata for Conversation?, v1);
}

void ConversationController.updateCallForAVModeChange(_:)()
{
  uint64_t (**v0)(_QWORD, _QWORD);
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[5];

  OUTLINED_FUNCTION_6_6();
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  OUTLINED_FUNCTION_2_0();
  *v3 = v2;
  v3[1] = v0;
  OUTLINED_FUNCTION_21_55();
  OUTLINED_FUNCTION_45_34();
  v4 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
  OUTLINED_FUNCTION_1();
  outlined init with copy of RadarReporting(v4, (uint64_t)v9);
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
  OUTLINED_FUNCTION_1();
  v6 = *v5;
  v7 = OUTLINED_FUNCTION_287_3();
  v8 = OUTLINED_FUNCTION_21_55();
  specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v8, v9, v6, 0, v7, v0);
  ConversationController.broadcastingState.setter();
  OUTLINED_FUNCTION_512_1();
}

Swift::Void __swiftcall ConversationController.joinConversation()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_96();
  v3 = v0;
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_120_4();
  v6 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DEF740], v6);
  v9 = OUTLINED_FUNCTION_112_7();
  v10 = OUTLINED_FUNCTION_153_1();
  v11(v10);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_5;
  }
  v12 = (_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
  OUTLINED_FUNCTION_1();
  if (*v12 == 1)
  {
    OUTLINED_FUNCTION_1();
    v13 = OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_157_2(v13, v14);
    Participant.asRequestedApproval()();
    v15 = OUTLINED_FUNCTION_295_3();
    outlined destroy of AccountUpdateNotice(v15, v16);
    OUTLINED_FUNCTION_2_0();
    v17 = OUTLINED_FUNCTION_345_1();
    outlined assign with take of Participant(v17, v18);
    swift_endAccess();
  }
  if (one-time initialization token for conversationKit != -1)
    goto LABEL_7;
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  *(_OWORD *)(OUTLINED_FUNCTION_15() + 16) = xmmword_1BD6441D0;
  v19 = (__int128 *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  OUTLINED_FUNCTION_1();
  v27 = *v19;
  OUTLINED_FUNCTION_836();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
  OUTLINED_FUNCTION_837();
  OUTLINED_FUNCTION_56_33();
  v20 = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
  OUTLINED_FUNCTION_11_62(v20);
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_53();
  v21 = OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_403_0(v21, (uint64_t)&v27);
  v22 = v28;
  v23 = v29;
  __swift_project_boxed_opaque_existential_1(&v27, v28);
  v24 = *((_QWORD *)v19 + 1);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 96);
  v26 = OUTLINED_FUNCTION_349_2();
  v25(v26, v24, v22, v23);
  OUTLINED_FUNCTION_45_34();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  OUTLINED_FUNCTION_65_1();
}

Swift::Void __swiftcall ConversationController.downgradeToAVLess()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v0 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  v5 = OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_101((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v5 & 1) != 0)
  {
    if (one-time initialization token for shared == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  if ((OUTLINED_FUNCTION_110_2() & 1) != 0)
  {
    v6 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_85_21(v6, (uint64_t)v8);
    OUTLINED_FUNCTION_80_20(v8, v8[3]);
    OUTLINED_FUNCTION_1();
    v7 = OUTLINED_FUNCTION_349_2();
    OUTLINED_FUNCTION_606(v7);
    OUTLINED_FUNCTION_45_34();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  OUTLINED_FUNCTION_91();
}

void ConversationController.leaveConversation(reason:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_96();
  v4 = v0;
  v6 = v5;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v9 = OUTLINED_FUNCTION_7_22();
  *v1 = v9;
  OUTLINED_FUNCTION_17(v9, *MEMORY[0x1E0DEF740]);
  v10 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (one-time initialization token for conversationKit != -1)
LABEL_5:
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v11 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
  v12 = (__int128 *)(v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  OUTLINED_FUNCTION_1();
  v18 = *v12;
  OUTLINED_FUNCTION_836();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
  OUTLINED_FUNCTION_205_5();
  OUTLINED_FUNCTION_637();
  *(_QWORD *)(v11 + 64) = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
  *(_QWORD *)(v11 + 32) = v2;
  *(_QWORD *)(v11 + 40) = v3;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_239_1();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_142_3();
  v13 = v19;
  v14 = v20;
  OUTLINED_FUNCTION_184(&v18);
  v15 = *((_QWORD *)v12 + 1);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 88);
  v17 = OUTLINED_FUNCTION_777();
  v16(v17, v15, v6, v13, v14);
  OUTLINED_FUNCTION_776();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  OUTLINED_FUNCTION_65_1();
}

void ConversationController.openMessagesConversation(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t EnumTagSinglePayload;
  uint64_t v69;
  uint64_t (*v70)(uint64_t);
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  void *v83;
  uint64_t v84;
  unsigned __int8 v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(_QWORD);
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  NSURL *v123;
  void *v124;
  void *v125;
  void *v126;
  void (*v127)(uint64_t);
  id v128;
  uint64_t v129;
  _QWORD *v130;
  id v131;
  uint64_t v132;
  unint64_t v133;
  id v134;
  uint64_t (*v135)(_QWORD);
  uint64_t v136;
  uint64_t (*v137)(uint64_t, _QWORD);
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t);
  uint64_t (*v153)(uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  __int128 v162;
  uint64_t v163;
  _QWORD v164[7];

  OUTLINED_FUNCTION_93();
  a19 = v26;
  a20 = v27;
  v147 = v28;
  v152 = v29;
  v164[5] = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URLComponents?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_4_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_96_14();
  MEMORY[0x1E0C80A78](v32);
  v143 = (char *)&v138 - v33;
  v34 = type metadata accessor for URL();
  OUTLINED_FUNCTION_812(v34);
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v35);
  v37 = (unint64_t)&v138 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = type metadata accessor for URLComponents();
  v149 = *(_QWORD *)(v144 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v38);
  v40 = OUTLINED_FUNCTION_202_5(v39, v138);
  v155 = type metadata accessor for Participant.State(v40);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v41);
  v160 = (uint64_t)&v138 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v161 = OUTLINED_FUNCTION_14_2();
  v159 = *(_QWORD *)(v161 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_5_27();
  v145 = v44;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_18_0();
  v156 = v46;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v47);
  OUTLINED_FUNCTION_18_0();
  v157 = v48;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_231();
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)&v138 - v51;
  v53 = type metadata accessor for URLQueryItem();
  OUTLINED_FUNCTION_96_2(v53, (uint64_t)&a17);
  v151 = v54;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v55);
  v146 = (char *)&v138 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v57);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_33_18(v58);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v59);
  v61 = (char *)&v138 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v63);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v64);
  v158 = v21;
  ConversationController.lookupActiveConversation()();
  if (v163)
  {
    v138 = v24;
    v139 = v22;
    v140 = v37;
    v153 = v23;
    outlined init with take of Notice(&v162, (uint64_t)v164);
    v65 = v164[3];
    OUTLINED_FUNCTION_184(v164);
    OUTLINED_FUNCTION_192_4(v65);
    v66 = OUTLINED_FUNCTION_601_0();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v66, v67, v62);
    v69 = MEMORY[0x1E0DEE9D8];
    if ((_DWORD)EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_92_1(EnumTagSinglePayload, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v142 = MEMORY[0x1E0DEE9D8];
      v70 = v153;
      v71 = v157;
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v148, v61, v62);
      UUID.uuidString.getter();
      v73 = v141;
      URLQueryItem.init(name:value:)();
      OUTLINED_FUNCTION_27();
      v142 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v75 = *(_QWORD *)(v142 + 16);
      v74 = *(_QWORD *)(v142 + 24);
      v37 = v75 + 1;
      v71 = v157;
      if (v75 >= v74 >> 1)
      {
        OUTLINED_FUNCTION_138_4(v74);
        v142 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      v70 = v153;
      *(_QWORD *)(v142 + 16) = v37;
      OUTLINED_FUNCTION_30_36();
      OUTLINED_FUNCTION_784(v77 + v76 + *(_QWORD *)(v78 + 72) * v75, v73, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v78 + 32));
      OUTLINED_FUNCTION_584(v148, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
      v69 = MEMORY[0x1E0DEE9D8];
    }
    ConversationController.remoteAndAssociatedParticipants.getter();
    v80 = v79;
    *(_QWORD *)&v162 = v69;
    v158 = *(_QWORD *)(v79 + 16);
    if (v158)
    {
      v37 = 0;
      v70 = type metadata accessor for Participant;
      while (v37 < *(_QWORD *)(v80 + 16))
      {
        OUTLINED_FUNCTION_135(v80+ ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80))+ *(_QWORD *)(v159 + 72) * v37, (uint64_t)v52);
        v81 = *(void **)&v52[*(int *)(v161 + 28)];
        if (!v81)
        {
          OUTLINED_FUNCTION_135((uint64_t)v52, v25);
LABEL_20:
          outlined init with copy of ConversationControlsAppLaunchButtonType(v25, v160, type metadata accessor for Participant.State);
          v86 = (char *)&loc_1BD5336F0 + *((int *)qword_1BD533E70 + swift_getEnumCaseMultiPayload());
          __asm { BR              X9 }
        }
        v82 = objc_msgSend(v81, sel_value);
        v83 = v82;
        if (!v82)
        {
          v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v83 = (void *)MEMORY[0x1C3B72E00](v84);
          v82 = (id)OUTLINED_FUNCTION_2_1();
        }
        v85 = OUTLINED_FUNCTION_25_1((uint64_t)v82, sel_destinationIdIsTemporary);

        OUTLINED_FUNCTION_135((uint64_t)v52, v25);
        if ((v85 & 1) == 0)
          goto LABEL_20;
        OUTLINED_FUNCTION_137_1(v25);
        OUTLINED_FUNCTION_135((uint64_t)v52, v71);
        OUTLINED_FUNCTION_137_1(v71);
        OUTLINED_FUNCTION_137_1((uint64_t)v52);
        if (v158 == ++v37)
        {
          v69 = v162;
          v70 = v153;
          goto LABEL_23;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_23:
      OUTLINED_FUNCTION_25();
      v87 = *(_QWORD *)(v69 + 16);
      v88 = v145;
      if (v87)
      {
        OUTLINED_FUNCTION_30_36();
        v90 = v69 + v89;
        v92 = *(_QWORD *)(v91 + 72);
        v160 = v69;
        OUTLINED_FUNCTION_11_1();
        v93 = MEMORY[0x1E0DEE9D8];
        do
        {
          OUTLINED_FUNCTION_467(v90, v88);
          v94 = *(void **)(v88 + *(int *)(v161 + 28));
          if (v94)
          {
            v95 = objc_msgSend(v94, sel_value);
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            OUTLINED_FUNCTION_56_33();

            OUTLINED_FUNCTION_94(v88);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_595_0();
              specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
              v93 = v99;
            }
            v97 = *(_QWORD *)(v93 + 16);
            v96 = *(_QWORD *)(v93 + 24);
            if (v97 >= v96 >> 1)
            {
              OUTLINED_FUNCTION_786(v96);
              specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
              v93 = v100;
            }
            *(_QWORD *)(v93 + 16) = v97 + 1;
            v98 = v93 + 16 * v97;
            *(_QWORD *)(v98 + 32) = v52;
            *(_QWORD *)(v98 + 40) = v37;
          }
          else
          {
            OUTLINED_FUNCTION_94(v88);
          }
          v90 += v92;
          --v87;
        }
        while (v87);
        OUTLINED_FUNCTION_23_0();
        v70 = v153;
      }
      else
      {
        OUTLINED_FUNCTION_11_0();
        v93 = MEMORY[0x1E0DEE9D8];
      }
      *(_QWORD *)&v162 = v93;
      OUTLINED_FUNCTION_31_11();
      OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [String] and conformance [A]);
      BidirectionalCollection<>.joined(separator:)();
      OUTLINED_FUNCTION_13_3();
      v71 = (uint64_t)v146;
      URLQueryItem.init(name:value:)();
      OUTLINED_FUNCTION_2_1();
      v101 = v142;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_36;
    }
    OUTLINED_FUNCTION_595_0();
    v101 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_36:
    v102 = (uint64_t)v143;
    v104 = *(_QWORD *)(v101 + 16);
    v103 = *(_QWORD *)(v101 + 24);
    if (v104 >= v103 >> 1)
    {
      OUTLINED_FUNCTION_138_4(v103);
      v101 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    *(_QWORD *)(v101 + 16) = v104 + 1;
    OUTLINED_FUNCTION_30_36();
    OUTLINED_FUNCTION_784(v101 + v105 + *(_QWORD *)(v106 + 72) * v104, v71, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v106 + 32));
    URLComponents.init()();
    URLComponents.scheme.setter();
    URLComponents.path.setter();
    URLComponents.queryItems.setter();
    URLComponents.url.getter();
    v107 = OUTLINED_FUNCTION_193_2();
    v109 = OUTLINED_FUNCTION_69_0(v107, v108, v150);
    if (v110)
    {
      OUTLINED_FUNCTION_32_18(v109, &demangling cache variable for type metadata for URL?);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v111 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v111 + 16) = xmmword_1BD6441D0;
      v112 = v139;
      OUTLINED_FUNCTION_107_0(v139, v154, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v149 + 16));
      OUTLINED_FUNCTION_3_68(v112, 0);
      specialized >> prefix<A>(_:)(v112);
      OUTLINED_FUNCTION_790();
      OUTLINED_FUNCTION_275(v113, &demangling cache variable for type metadata for URLComponents?);
      *(_QWORD *)(v111 + 64) = OUTLINED_FUNCTION_331_4(MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v111 + 32) = v71;
      *(_QWORD *)(v111 + 40) = v101;
      OUTLINED_FUNCTION_119_7();
      OUTLINED_FUNCTION_2_1();
      OUTLINED_FUNCTION_612_0();
      if (v114)
        OUTLINED_FUNCTION_341_2(v114);
      v115 = OUTLINED_FUNCTION_743();
      OUTLINED_FUNCTION_584(v115, v116);
    }
    else
    {
      v117 = v140;
      OUTLINED_FUNCTION_533(v140, v102, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v70 + 4));
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v118 = OUTLINED_FUNCTION_15();
      v161 = xmmword_1BD6441D0;
      *(_OWORD *)(v118 + 16) = xmmword_1BD6441D0;
      v119 = v138;
      OUTLINED_FUNCTION_533(v138, v117, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v70 + 2));
      OUTLINED_FUNCTION_72(v119, 0);
      specialized >> prefix<A>(_:)(v119);
      OUTLINED_FUNCTION_56_33();
      OUTLINED_FUNCTION_96_6(v120, &demangling cache variable for type metadata for URL?);
      v121 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v118 + 56) = MEMORY[0x1E0DEA968];
      v122 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_11_62(v122);
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
      URL._bridgeToObjectiveC()(v123);
      v125 = v124;
      *(_QWORD *)&v162 = 0;
      OUTLINED_FUNCTION_80_0();
      LODWORD(v118) = TUOpenURLWithError();

      v126 = (void *)v162;
      if ((_DWORD)v118)
      {
        v127 = v152;
        if (v152)
        {
          v128 = (id)v162;
          v127(1);
        }
        else
        {
          v134 = (id)v162;
        }
      }
      else
      {
        v129 = OUTLINED_FUNCTION_15();
        v130 = (_QWORD *)v129;
        *(_OWORD *)(v129 + 16) = v161;
        if (v126)
        {
          *(_QWORD *)&v162 = v126;
          OUTLINED_FUNCTION_59(v129, &lazy cache variable for type metadata for NSError);
          v131 = v126;
          v132 = OUTLINED_FUNCTION_204_5();
        }
        else
        {
          v133 = 0xE300000000000000;
          v132 = 7104878;
        }
        v130[7] = v121;
        v130[8] = v122;
        v130[4] = v132;
        v130[5] = v133;
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_132_3();
        OUTLINED_FUNCTION_224_3();
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_612_0();
        if (v135)
          OUTLINED_FUNCTION_341_2(v135);
      }
      OUTLINED_FUNCTION_560_0(v140, *((uint64_t (**)(uint64_t, _QWORD))v70 + 1));
      v136 = OUTLINED_FUNCTION_743();
      OUTLINED_FUNCTION_560_0(v136, v137);

    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v164);
    goto LABEL_58;
  }
  v72 = v152;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v162, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_55_0();
  if (v72)
    OUTLINED_FUNCTION_341_2((uint64_t (*)(_QWORD))v72);
LABEL_58:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.setLocalAudio(muted:bluetoothAudioFormat:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  OUTLINED_FUNCTION_93();
  v6 = v5;
  v8 = v7;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v10, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_139((uint64_t)v2, *MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
  OUTLINED_FUNCTION_132_2();
  OUTLINED_FUNCTION_714();
  OUTLINED_FUNCTION_371((uint64_t)v2, v11);
  if ((v1 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v12 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_1();
  if ((*(char *)(v12 + 16) & 0x80000000) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_4:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v13 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
      OUTLINED_FUNCTION_176_3();
      OUTLINED_FUNCTION_704();
      *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v13 + 32) = v3;
      *(_QWORD *)(v13 + 40) = v4;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_132_3();
      os_log(_:dso:log:type:_:)();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_639_0();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_15_6();
      OUTLINED_FUNCTION_72_9();
      OUTLINED_FUNCTION_558();
      goto LABEL_8;
    }
LABEL_12:
    swift_once();
    goto LABEL_4;
  }
  v21 = v8;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v14 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v14 + 16) = xmmword_1BD645380;
  OUTLINED_FUNCTION_176_3();
  OUTLINED_FUNCTION_704();
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  v16 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 32) = v3;
  *(_QWORD *)(v14 + 40) = v4;
  v17 = OUTLINED_FUNCTION_176_3();
  *(_QWORD *)(v14 + 96) = v15;
  *(_QWORD *)(v14 + 104) = v16;
  *(_QWORD *)(v14 + 72) = v17;
  *(_QWORD *)(v14 + 80) = v18;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_639_0();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_72_9();
  OUTLINED_FUNCTION_558();
  v8 = v21;
  v6 = v6;
LABEL_8:
  OUTLINED_FUNCTION_10();
  if ((v6 & 1) == 0)
  {
    OUTLINED_FUNCTION_1();
    v19 = OUTLINED_FUNCTION_242_5();
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 280);
    OUTLINED_FUNCTION_21_55();
    v20(v8, v19, v6);
    OUTLINED_FUNCTION_113();
  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationController.toggleLocalAudio()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t *v10;
  _BOOL8 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BOOL8, uint64_t, uint64_t);

  OUTLINED_FUNCTION_93();
  v5 = v0;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v8 = OUTLINED_FUNCTION_7_22();
  *v1 = v8;
  OUTLINED_FUNCTION_4_57(v8, *MEMORY[0x1E0DEF740]);
  v9 = OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_101((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v10 = (uint64_t *)(v5 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
  OUTLINED_FUNCTION_1();
  v4 = *v10;
  if (((char)v10[2] & 0x80000000) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_4:
      v11 = (v4 & 1) == 0;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      *(_OWORD *)(OUTLINED_FUNCTION_15() + 16) = xmmword_1BD6441D0;
      OUTLINED_FUNCTION_176_3();
      OUTLINED_FUNCTION_56_33();
      v12 = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_11_62(v12);
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_379_2();
      v13 = v5 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      goto LABEL_8;
    }
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v11 = (v4 & 1) == 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v14 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v14 + 16) = xmmword_1BD645380;
  OUTLINED_FUNCTION_176_3();
  OUTLINED_FUNCTION_56_33();
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  v16 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 32) = v2;
  *(_QWORD *)(v14 + 40) = v3;
  v17 = OUTLINED_FUNCTION_176_3();
  *(_QWORD *)(v14 + 96) = v15;
  *(_QWORD *)(v14 + 104) = v16;
  OUTLINED_FUNCTION_702(v17, v18);
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_379_2();
  v13 = v5 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
LABEL_8:
  OUTLINED_FUNCTION_1();
  v19 = *(_QWORD *)(v13 + 8);
  v20 = OUTLINED_FUNCTION_15_6();
  v21 = *(void (**)(_BOOL8, uint64_t, uint64_t))(v19 + 360);
  OUTLINED_FUNCTION_72_9();
  v21(v11, v20, v19);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationController.toggleLocalVideo(shouldPauseIfStopped:)(Swift::Bool shouldPauseIfStopped)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v4 = v1;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v8 = OUTLINED_FUNCTION_7_22();
  *v2 = v8;
  OUTLINED_FUNCTION_17(v8, *MEMORY[0x1E0DEF740]);
  v9 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v9 & 1) != 0)
  {
    v10 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    OUTLINED_FUNCTION_1();
    if (*(char *)(v10 + 16) < 0)
    {
      ConversationController.stopLocalVideo()();
    }
    else if (shouldPauseIfStopped)
    {
      ConversationController.pauseLocalVideoIfStopped()();
    }
    else
    {
      OUTLINED_FUNCTION_638_0();
    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationController.startScreenSharingSession()()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  _QWORD v47[2];
  Class isa;
  __int128 v49;
  uint64_t v50;
  uint64_t v51[5];

  OUTLINED_FUNCTION_93();
  v47[1] = OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v47 - v6;
  v8 = OUTLINED_FUNCTION_33_0();
  isa = v8[-1].isa;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  v10 = OUTLINED_FUNCTION_58_5();
  type metadata accessor for ScreenSharingSessionConfiguration(v10);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_4_1();
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_17_2();
  v13 = OUTLINED_FUNCTION_3(v12, (uint64_t)&static Log.screenSharing);
  v14 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_459_0(v13))
  {
    v15 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v15 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v13, v14, "Starting screen sharing session", v15);
    OUTLINED_FUNCTION_60();
  }

  v16 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession];
  OUTLINED_FUNCTION_1();
  outlined init with copy of FeatureEligibility?(v16, (uint64_t)&v49, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
  if (v50)
  {
    outlined init with take of Notice(&v49, (uint64_t)v51);
    v18 = &v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    OUTLINED_FUNCTION_1();
    v19 = *((_QWORD *)v18 + 1);
    OUTLINED_FUNCTION_565_0();
    v20 = *(uint64_t (**)(uint64_t))(v19 + 176);
    OUTLINED_FUNCTION_462();
    v21 = OUTLINED_FUNCTION_263();
    v22 = (void *)v20(v21);
    v23 = OUTLINED_FUNCTION_372_3();
    if (v22)
    {
      v24 = OUTLINED_FUNCTION_25_1(v23, sel_windowUUID);

      if (v24)
      {
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v25 = 0;
      }
      else
      {
        v25 = 1;
      }
      OUTLINED_FUNCTION_72(v3, v25);
      v33 = OUTLINED_FUNCTION_291_4();
      outlined init with take of Any?(v33, v34, v35);
      v36 = OUTLINED_FUNCTION_99_5();
      v32 = OUTLINED_FUNCTION_69_0(v36, v37, (uint64_t)v8);
      if (!v38)
      {
        v39 = (void (*)(uint64_t))*((_QWORD *)isa + 4);
        v40 = OUTLINED_FUNCTION_49_16();
        v39(v40);
        v41 = OUTLINED_FUNCTION_345_1();
        v39(v41);
        v42 = 0;
LABEL_17:
        OUTLINED_FUNCTION_72(v1, v42);
        __swift_project_boxed_opaque_existential_1(v51, v51[3]);
        v43 = OUTLINED_FUNCTION_124_0();
        v46 = OUTLINED_FUNCTION_93_4(v43, v44, v45);
        OUTLINED_FUNCTION_315(v46, type metadata accessor for ScreenSharingSessionConfiguration);
        OUTLINED_FUNCTION_12_6();
        goto LABEL_18;
      }
    }
    else
    {
      v32 = OUTLINED_FUNCTION_72((uint64_t)v7, 1);
    }
    OUTLINED_FUNCTION_30_7(v32, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v42 = 1;
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_553(v17, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
  v26 = v0;
  OUTLINED_FUNCTION_621();
  v27 = OUTLINED_FUNCTION_689();
  if (OUTLINED_FUNCTION_71_0(v8))
  {
    v28 = (uint8_t *)OUTLINED_FUNCTION_105();
    v51[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v28 = 136315138;
    *(_QWORD *)&v49 = v2;
    v29 = v2;
    v30 = String.init<A>(reflecting:)();
    *(_QWORD *)&v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, v51);
    OUTLINED_FUNCTION_31_3();

    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v8, v27, "Not able to make screen sharing session due to screenSharingSession being nil. %s", v28);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

LABEL_18:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.requestScreenSharingPicker(with:)()
{
  void *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[40];

  OUTLINED_FUNCTION_441_0();
  if (v24)
  {
    OUTLINED_FUNCTION_326_5(v3, v4, v5, v6);
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v9 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v9, (uint64_t)&static Log.screenSharing);
    v10 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_51_3(v10))
    {
      v11 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v11 = 134217984;
      v23[0] = v0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v1, v2, "Requesting screen sharing picker with contentStyle: %ld", v11);
      OUTLINED_FUNCTION_60();
    }

    v12 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_85_21(v12, (uint64_t)v23);
    v13 = v25;
    OUTLINED_FUNCTION_80_20(v23, v24);
    OUTLINED_FUNCTION_31_38((uint64_t)v26, (uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 240));
    v14 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    OUTLINED_FUNCTION_16_56(v14, v15, v16, v17);
  }
  else
  {
    OUTLINED_FUNCTION_85_13(v3, &demangling cache variable for type metadata for Conversation?, v5, v6, v7, v8);
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v18 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v18, (uint64_t)&static Log.screenSharing);
    v19 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v19))
    {
      v20 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v20);
      OUTLINED_FUNCTION_14_14(&dword_1BD004000, v21, v22, "Failed to request screen sharing picker because there is no active conversation");
      OUTLINED_FUNCTION_60();
    }

  }
  OUTLINED_FUNCTION_512_1();
}

void ConversationController.requestScreenSharingSession(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  void *v21;
  _QWORD v22[12];

  OUTLINED_FUNCTION_96();
  v2 = v1;
  ConversationController.lookupActiveConversation()();
  if (v22[10])
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    v5 = OUTLINED_FUNCTION_97();
    if ((v5 & 1) != 0)
    {
      v6 = (void *)v22[6];
      v7 = OUTLINED_FUNCTION_123(v5, sel_activeRemoteParticipants);
      OUTLINED_FUNCTION_617_0();
      OUTLINED_FUNCTION_802(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
      v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      MEMORY[0x1E0C80A78](v9);
      v22[2] = v2;
      specialized Sequence.first(where:)((uint64_t (*)(id *))partial apply for closure #1 in ConversationController.requestScreenSharingSession(for:), (uint64_t)v22, v8);
      v11 = v10;
      OUTLINED_FUNCTION_133();
      if (v11)
      {
        v12 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
        OUTLINED_FUNCTION_1();
        v13 = *(_QWORD *)(v12 + 24);
        v14 = *(_QWORD *)(v12 + 32);
        OUTLINED_FUNCTION_574();
        v15 = *(_QWORD *)(v13 - 8);
        OUTLINED_FUNCTION_54_42();
        MEMORY[0x1E0C80A78](v16);
        v18 = OUTLINED_FUNCTION_200_4(v17, v22[4]);
        OUTLINED_FUNCTION_93_4((uint64_t)v18, v19, v20);
        v21 = (void *)OUTLINED_FUNCTION_52(v13, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 72));
        OUTLINED_FUNCTION_6_9(v12, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
        OUTLINED_FUNCTION_630_0(v21, sel_requestParticipantToShareScreen_forConversation_, (uint64_t)v11);

      }
      else
      {
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        static os_log_type_t.error.getter();
        OUTLINED_FUNCTION_255();

      }
      goto LABEL_9;
    }
  }
  else
  {
    OUTLINED_FUNCTION_428(v3, &demangling cache variable for type metadata for Conversation?);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_55_0();
LABEL_9:
  OUTLINED_FUNCTION_65_1();
}

Swift::Void __swiftcall ConversationController.stopScreenSharingSession()()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18[3];

  OUTLINED_FUNCTION_15_6();
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Log.screenSharing);
  v3 = OUTLINED_FUNCTION_251_0();
  if (OUTLINED_FUNCTION_78_0(v1))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v4 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v1, v3, "Stopping screen sharing session", v4);
    OUTLINED_FUNCTION_60();
  }

  v5 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession;
  OUTLINED_FUNCTION_1();
  outlined init with copy of FeatureEligibility?(v5, (uint64_t)&v16, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
  if (v17)
  {
    outlined init with take of Notice(&v16, (uint64_t)v18);
    OUTLINED_FUNCTION_565(v18);
    v8 = OUTLINED_FUNCTION_65_2();
    v9(v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    OUTLINED_FUNCTION_305(v6, &demangling cache variable for type metadata for ScreenSharingSessionProvider?, v7);
    v10 = v0;
    Logger.logObject.getter();
    v11 = OUTLINED_FUNCTION_55_6();
    if (OUTLINED_FUNCTION_51_3(v11))
    {
      v12 = (uint8_t *)OUTLINED_FUNCTION_105();
      v18[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v12 = 136315138;
      *(_QWORD *)&v16 = v10;
      v13 = v10;
      v14 = String.init<A>(reflecting:)();
      *(_QWORD *)&v16 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v0, (os_log_type_t)v5, "Not able to stop screen sharing session due to screenSharingSession being nil. %s", v12);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

  }
}

void ConversationController.declineOrCancelScreenShareRequest(for:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19[6];

  OUTLINED_FUNCTION_96();
  v2 = v0;
  OUTLINED_FUNCTION_787();
  if (v19[4])
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    if ((OUTLINED_FUNCTION_97() & 1) != 0)
    {
      v5 = v19[0];
      specialized Conversation.currentScreenSharingRequest(ignoring:)();
      OUTLINED_FUNCTION_49_5();
      if (v5)
      {
        OUTLINED_FUNCTION_59(v6, &lazy cache variable for type metadata for TUScreenSharingRequest);
        v7 = v1;
        v8 = v5;
        v9 = static NSObject.== infix(_:_:)();

        if ((v9 & 1) != 0)
        {
          v10 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
          OUTLINED_FUNCTION_1();
          v11 = v10[3];
          v12 = v10[4];
          __swift_project_boxed_opaque_existential_1(v10, v11);
          v13 = *(_QWORD *)(v11 - 8);
          OUTLINED_FUNCTION_54_42();
          MEMORY[0x1E0C80A78](v14);
          v16 = (char *)v19 - v15;
          OUTLINED_FUNCTION_120_7(v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
          v18 = (void *)OUTLINED_FUNCTION_52(v11, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 72));
          OUTLINED_FUNCTION_101((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
          OUTLINED_FUNCTION_630_0(v18, sel_cancelOrDenyScreenShareRequest_forConversation_, (uint64_t)v7);

          goto LABEL_11;
        }
      }

    }
  }
  else
  {
    OUTLINED_FUNCTION_428(v3, &demangling cache variable for type metadata for Conversation?);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_55_0();
LABEL_11:
  OUTLINED_FUNCTION_65_1();
}

void ConversationController.approve(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE v31[32];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[40];

  OUTLINED_FUNCTION_93();
  v3 = v2;
  OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_30_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_320_3();
  if (v33)
  {
    OUTLINED_FUNCTION_522_1();
    v13 = OUTLINED_FUNCTION_69_0((uint64_t)v7, 1, v8);
    if (v14)
    {
      OUTLINED_FUNCTION_275(v13, &demangling cache variable for type metadata for Participant?);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v15 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v15 + 16) = xmmword_1BD645380;
      v16 = OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_327_0(v16);
      OUTLINED_FUNCTION_431_0(v0, 0, 1, v1);
      OUTLINED_FUNCTION_96_3(v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v18 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
      v19 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_440_0(v19);
      v20 = OUTLINED_FUNCTION_204_5();
      *(_QWORD *)(v15 + 96) = v18;
      *(_QWORD *)(v15 + 104) = v0;
      *(_QWORD *)(v15 + 72) = v20;
      *(_QWORD *)(v15 + 80) = v21;
      OUTLINED_FUNCTION_168_3();
      OUTLINED_FUNCTION_21_0();
      v30 = v35;
    }
    else
    {
      OUTLINED_FUNCTION_64_5((uint64_t)v7, (uint64_t)v11);
      v28 = OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_85_21(v28, (uint64_t)v32);
      v29 = v34;
      OUTLINED_FUNCTION_80_20(v32, v33);
      OUTLINED_FUNCTION_31_38((uint64_t)v11, (uint64_t)v35, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 168));
      OUTLINED_FUNCTION_68_2((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      v30 = v32;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  else
  {
    OUTLINED_FUNCTION_69_25(v12, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v22 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v22 + 16) = xmmword_1BD6441D0;
    v23 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_139(v0, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16));
    OUTLINED_FUNCTION_431_0(v0, 0, 1, v23);
    v25 = v24;
    v27 = v26;
    OUTLINED_FUNCTION_96_3(v24, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(_QWORD *)(v22 + 64) = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v22 + 32) = v25;
    *(_QWORD *)(v22 + 40) = v27;
    OUTLINED_FUNCTION_239_1();
    OUTLINED_FUNCTION_133();
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.dismiss(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE v31[32];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[40];

  OUTLINED_FUNCTION_93();
  v3 = v2;
  OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_30_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_320_3();
  if (v33)
  {
    OUTLINED_FUNCTION_522_1();
    v13 = OUTLINED_FUNCTION_69_0((uint64_t)v7, 1, v8);
    if (v14)
    {
      OUTLINED_FUNCTION_275(v13, &demangling cache variable for type metadata for Participant?);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v15 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v15 + 16) = xmmword_1BD645380;
      v16 = OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_327_0(v16);
      OUTLINED_FUNCTION_431_0(v0, 0, 1, v1);
      OUTLINED_FUNCTION_96_3(v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v18 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
      v19 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_440_0(v19);
      v20 = OUTLINED_FUNCTION_204_5();
      *(_QWORD *)(v15 + 96) = v18;
      *(_QWORD *)(v15 + 104) = v0;
      *(_QWORD *)(v15 + 72) = v20;
      *(_QWORD *)(v15 + 80) = v21;
      OUTLINED_FUNCTION_168_3();
      OUTLINED_FUNCTION_21_0();
      v30 = v35;
    }
    else
    {
      OUTLINED_FUNCTION_64_5((uint64_t)v7, (uint64_t)v11);
      v28 = OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_85_21(v28, (uint64_t)v32);
      v29 = v34;
      OUTLINED_FUNCTION_80_20(v32, v33);
      OUTLINED_FUNCTION_31_38((uint64_t)v11, (uint64_t)v35, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 176));
      OUTLINED_FUNCTION_68_2((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      v30 = v32;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  else
  {
    OUTLINED_FUNCTION_69_25(v12, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v22 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v22 + 16) = xmmword_1BD6441D0;
    v23 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_139(v0, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16));
    OUTLINED_FUNCTION_431_0(v0, 0, 1, v23);
    v25 = v24;
    v27 = v26;
    OUTLINED_FUNCTION_96_3(v24, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(_QWORD *)(v22 + 64) = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v22 + 32) = v25;
    *(_QWORD *)(v22 + 40) = v27;
    OUTLINED_FUNCTION_239_1();
    OUTLINED_FUNCTION_133();
  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationController.pttLeaveChannel()()
{
  uint64_t v0;
  NSObject **v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];

  v1 = (NSObject **)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_72_9();
  v3 = OUTLINED_FUNCTION_214_3();
  OUTLINED_FUNCTION_10();
  if ((v3 & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v4, (uint64_t)&static Logger.conversationControls);
    v5 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_51_3(v5))
    {
      v6 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v6 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v2, v3, "Leaving PTT Channel", v6);
      OUTLINED_FUNCTION_60();
    }

    v7 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_85_21(v7, (uint64_t)v10);
    OUTLINED_FUNCTION_80_20(v10, v10[3]);
    v8 = OUTLINED_FUNCTION_349_2();
    OUTLINED_FUNCTION_606(v8);
    v9 = OUTLINED_FUNCTION_45_34();
    OUTLINED_FUNCTION_557(v9);
  }
  OUTLINED_FUNCTION_434_1();
}

Swift::Void __swiftcall ConversationController.pttStopTransmit()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  int v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_1();
  v3 = *(NSObject **)v2;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_72_9();
  v4 = OUTLINED_FUNCTION_214_3();
  OUTLINED_FUNCTION_10();
  if (v4 == 1)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
    v6 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_51_3(v6))
    {
      v7 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v7 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v3, OS_LOG_TYPE_INFO, "Holding PTT Call", v7);
      OUTLINED_FUNCTION_60();
    }

    v8 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_85_21(v8, (uint64_t)v16);
    v9 = v17;
    v10 = v18;
    OUTLINED_FUNCTION_80_20(v16, v17);
    v11 = *(_QWORD *)(v2 + 8);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 256);
    v13 = OUTLINED_FUNCTION_777();
    v12(v13, v11, v9, v10);
    v14 = OUTLINED_FUNCTION_776();
    OUTLINED_FUNCTION_557(v14);
    v15 = 0;
  }
  else
  {
    v15 = 1;
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit) = v15;
  OUTLINED_FUNCTION_415_1();
}

Swift::Void __swiftcall ConversationController.pttStartTransmit()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationControls);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v4 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "Unholding PTT Call", v4);
    OUTLINED_FUNCTION_60();
  }

  v5 = OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_85_21(v5, (uint64_t)v12);
  v6 = v12[4];
  OUTLINED_FUNCTION_80_20(v12, v12[3]);
  OUTLINED_FUNCTION_1();
  v7 = *(void (**)(void))(v6 + 248);
  OUTLINED_FUNCTION_777();
  OUTLINED_FUNCTION_490_0();
  v7();
  v8 = OUTLINED_FUNCTION_776();
  OUTLINED_FUNCTION_16_56(v8, v9, v10, v11);
  *((_BYTE *)&v0->isa + OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit) = 0;
  OUTLINED_FUNCTION_415_1();
}

Swift::Void __swiftcall ConversationController.callBack()()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_72_9();
  v2 = OUTLINED_FUNCTION_214_3();
  OUTLINED_FUNCTION_10();
  if ((v2 & 1) != 0)
  {
    v3 = *(_QWORD *)(v1 + 8);
    OUTLINED_FUNCTION_15_6();
    v4 = *(uint64_t (**)(uint64_t))(v3 + 504);
    OUTLINED_FUNCTION_72_9();
    v5 = OUTLINED_FUNCTION_315_0();
    v6 = (void *)v4(v5);
    OUTLINED_FUNCTION_10();
    if (v6)
    {
      v7 = OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_403_0(v7, (uint64_t)v11);
      v8 = v12;
      v9 = v13;
      OUTLINED_FUNCTION_80_20(v11, v12);
      (*(void (**)(void *, _QWORD, _QWORD, uint64_t, uint64_t))(v9 + 232))(v6, 0, 0, v8, v9);

      OUTLINED_FUNCTION_557(v10);
    }
  }
  OUTLINED_FUNCTION_434_1();
}

void ConversationController.buzz(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[8];
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_93();
  v6 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[1] = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_83_4();
  OUTLINED_FUNCTION_59(v13, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v4 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_175_3(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  v14 = OUTLINED_FUNCTION_333_4();
  OUTLINED_FUNCTION_147_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    swift_once();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_694();
  if (v46)
  {
    OUTLINED_FUNCTION_54_38();
    v16 = ConversationController.indexOfRemoteParticipant(with:)();
    if ((v17 & 1) != 0)
    {
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_13:
        static os_log_type_t.error.getter();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v29 = OUTLINED_FUNCTION_15();
        *(_OWORD *)(v29 + 16) = xmmword_1BD6441D0;
        OUTLINED_FUNCTION_33_0();
        OUTLINED_FUNCTION_23_36();
        v30 = OUTLINED_FUNCTION_311_0();
        OUTLINED_FUNCTION_93_4(v30, v31, v32);
        OUTLINED_FUNCTION_83_0(v3, 0);
        OUTLINED_FUNCTION_818();
        v34 = v33;
        v36 = v35;
        OUTLINED_FUNCTION_219(v33, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        *(_QWORD *)(v29 + 64) = OUTLINED_FUNCTION_331_4(MEMORY[0x1E0DEA968]);
        *(_QWORD *)(v29 + 32) = v34;
        *(_QWORD *)(v29 + 40) = v36;
        OUTLINED_FUNCTION_119_7();
        OUTLINED_FUNCTION_2_1();
LABEL_18:
        OUTLINED_FUNCTION_12_6();
        goto LABEL_19;
      }
    }
    else
    {
      v18 = v16;
      v3 = v6 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
      OUTLINED_FUNCTION_1();
      if ((v18 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v18 < *(_QWORD *)(*(_QWORD *)v3 + 16))
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(*(_QWORD *)v3+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v18, v0, type metadata accessor for Participant);
        Participant.isBuzzable.getter();
        if ((v19 & 1) != 0)
        {
          v20 = OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_85_21(v20, (uint64_t)v45);
          v21 = v47;
          OUTLINED_FUNCTION_80_20(v45, v46);
          OUTLINED_FUNCTION_697(v0, (uint64_t)&v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 144));
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v22 = OUTLINED_FUNCTION_15();
          *(_OWORD *)(v22 + 16) = xmmword_1BD6441D0;
          OUTLINED_FUNCTION_157_2(v0, (uint64_t)v10);
          OUTLINED_FUNCTION_479_1();
          v24 = v23;
          v26 = v25;
          OUTLINED_FUNCTION_32_18(v23, &demangling cache variable for type metadata for Participant?);
          *(_QWORD *)(v22 + 64) = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
          *(_QWORD *)(v22 + 32) = v24;
          *(_QWORD *)(v22 + 40) = v26;
          static os_log_type_t.default.getter();
          OUTLINED_FUNCTION_239_1();
          OUTLINED_FUNCTION_133();
          v27 = OUTLINED_FUNCTION_416_0();
        }
        else
        {
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          static os_log_type_t.error.getter();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v37 = OUTLINED_FUNCTION_15();
          *(_OWORD *)(v37 + 16) = xmmword_1BD6441D0;
          v38 = OUTLINED_FUNCTION_65_2();
          OUTLINED_FUNCTION_122(v38, v39);
          OUTLINED_FUNCTION_479_1();
          v41 = v40;
          v43 = v42;
          OUTLINED_FUNCTION_32_18(v40, &demangling cache variable for type metadata for Participant?);
          *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v37 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(_QWORD *)(v37 + 32) = v41;
          *(_QWORD *)(v37 + 40) = v43;
          OUTLINED_FUNCTION_132_3();
          OUTLINED_FUNCTION_527_0();
          OUTLINED_FUNCTION_30_4();
          v27 = v0;
          v28 = type metadata accessor for Participant;
        }
        outlined destroy of AccountUpdateNotice(v27, v28);
        goto LABEL_18;
      }
      __break(1u);
    }
    swift_once();
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_69_25(v15, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationKit != -1)
    goto LABEL_21;
LABEL_11:
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_55_0();
LABEL_19:
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationController.canKick(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD);
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD v45[2];
  uint64_t v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_51_29();
  v49 = v6;
  v50 = v7;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45[1] = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_120_4();
  v14 = ConversationController.indexOfRemoteParticipant(with:)();
  if ((v15 & 1) != 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_7:
      v21 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_182_3(v21, (uint64_t)&static Logger.conversationKit);
      v22 = OUTLINED_FUNCTION_481_1();
      OUTLINED_FUNCTION_533(v22, v23, v24);
      v25 = Logger.logObject.getter();
      v26 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_78_0(v25))
      {
        v27 = (uint8_t *)OUTLINED_FUNCTION_105();
        v48 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v27 = 136315138;
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v28 = dispatch thunk of CustomStringConvertible.description.getter();
        v46[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v48);
        OUTLINED_FUNCTION_13_2();
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_39_0(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        OUTLINED_FUNCTION_48(&dword_1BD004000, v25, v26, "Could not find participant with identifier %s", v27);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_39_0(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));

      return 0;
    }
LABEL_21:
    swift_once();
    goto LABEL_7;
  }
  v16 = v14;
  v17 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  OUTLINED_FUNCTION_1();
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v16 >= *(_QWORD *)(*(_QWORD *)v17 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_71_1(*(_QWORD *)v17+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v16, v18, type metadata accessor for Participant);
  Participant.isKickingAvailableWithLeeway.getter();
  if ((v19 & 1) != 0)
  {
    OUTLINED_FUNCTION_315(v19, type metadata accessor for Participant);
    return 1;
  }
  Participant.broadcastStartDate.getter((uint64_t)v11);
  v30 = OUTLINED_FUNCTION_33();
  v31 = OUTLINED_FUNCTION_69_0((uint64_t)v11, 1, v30);
  if (v32)
  {
    OUTLINED_FUNCTION_96_6(v31, (uint64_t *)&demangling cache variable for type metadata for Date?);
    v34 = 0x2074657920746F6ELL;
  }
  else
  {
    Date.timeIntervalSinceNow.getter();
    OUTLINED_FUNCTION_371((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8));
    v46[0] = 0;
    v46[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    Double.write<A>(to:)();
    v33._object = (void *)0x80000001BD6928F0;
    v33._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v33);
    v34 = v46[0];
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v35 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_182_3(v35, (uint64_t)&static Logger.conversationKit);
  v36 = OUTLINED_FUNCTION_38_21();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v36, v37, v38);
  OUTLINED_FUNCTION_26_22();
  v39 = Logger.logObject.getter();
  v40 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = OUTLINED_FUNCTION_105();
    v46[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v41 = 136315394;
    OUTLINED_FUNCTION_26_22();
    v47 = OUTLINED_FUNCTION_191(v34, v42, v46);
    OUTLINED_FUNCTION_137_0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v41 + 12) = 2080;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v43 = dispatch thunk of CustomStringConvertible.description.getter();
    v47 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, v46);
    OUTLINED_FUNCTION_82_8();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_68_2(v2);
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v39, v40, "Requested to kick out a participant that cannot be kicked out %s: %s", (uint8_t *)v41);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_68_2(v2);
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_68_2(v1);
  return 0;
}

void ConversationController.kick(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[40];

  OUTLINED_FUNCTION_441_0();
  if (v14)
  {
    OUTLINED_FUNCTION_326_5(v1, v2, v3, v4);
    v7 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_85_21(v7, (uint64_t)v13);
    v8 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    OUTLINED_FUNCTION_31_38(v0, (uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 152));
    v9 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    OUTLINED_FUNCTION_16_56(v9, v10, v11, v12);
  }
  else
  {
    OUTLINED_FUNCTION_85_13(v1, &demangling cache variable for type metadata for Conversation?, v3, v4, v5, v6);
  }
  OUTLINED_FUNCTION_322_3();
}

uint64_t *ConversationController.DidChangeIsWaitingOnFirstFrameNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for DidChangeIsWaitingOnFirstFrameNotification != -1)
    swift_once();
  return &static ConversationController.DidChangeIsWaitingOnFirstFrameNotification;
}

void *ConversationController.DidChangeIsWaitingOnFirstFrameUUIDKey.unsafeMutableAddressor()
{
  return &static ConversationController.DidChangeIsWaitingOnFirstFrameUUIDKey;
}

void *ConversationController.DidChangeIsWaitingOnFirstFrameKey.unsafeMutableAddressor()
{
  return &static ConversationController.DidChangeIsWaitingOnFirstFrameKey;
}

uint64_t ConversationController.visibleParticipants.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_1();
  v3 = *v2;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_8_8();
  specialized Array.append<A>(contentsOf:)();
  v4 = v3;
  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtC15ConversationKit22ConversationController_includeLocalParticipantInVisibleParticipants) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
    v5 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_14_2() - 8) + 80);
    v6 = (v5 + 32) & ~v5;
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BD6441D0;
    v8 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_259(v8, v7 + v6);
    specialized Array.append<A>(contentsOf:)();
    return v7;
  }
  return v4;
}

uint64_t ConversationController.shareableLink(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD *, void (*)(void *, void *), uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  __int128 v14[2];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];

  ConversationController.lookupActiveConversation()();
  if (v16)
  {
    outlined init with take of Notice(&v15, (uint64_t)v18);
    v4 = v18[4];
    OUTLINED_FUNCTION_14_64(v18);
    v5 = OUTLINED_FUNCTION_64_25(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 216));
    if (v5)
    {
      v6 = (void *)v5;
      if (a1)
        OUTLINED_FUNCTION_686(v5);

    }
    else
    {
      v8 = OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_85_21(v8, (uint64_t)&v15);
      v9 = v16;
      v10 = v17;
      OUTLINED_FUNCTION_80_20(&v15, v16);
      outlined init with copy of RadarReporting((uint64_t)v18, (uint64_t)v14);
      v11 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v11 + 16) = a1;
      *(_QWORD *)(v11 + 24) = a2;
      outlined init with take of Notice(v14, v11 + 32);
      v12 = *(void (**)(_QWORD *, void (*)(void *, void *), uint64_t, uint64_t, uint64_t))(v10 + 184);
      v13 = OUTLINED_FUNCTION_65_2();
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v13);
      v12(v18, partial apply for closure #1 in ConversationController.shareableLink(completionHandler:), v11, v9, v10);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v15, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    result = OUTLINED_FUNCTION_255();
    if (a1)
      return OUTLINED_FUNCTION_686(0);
  }
  return result;
}

void ConversationController.joinedConversation.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void ConversationController.cameraStartPolicy.getter()
{
  char v0;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_72_9();
  v0 = OUTLINED_FUNCTION_5_80();
  OUTLINED_FUNCTION_10();
  if ((v0 & 1) != 0)
    objc_msgSend((id)objc_opt_self(), sel_allowsScreenSharingWithVideo);
  OUTLINED_FUNCTION_9_0();
}

void thunk for @escaping @callee_guaranteed () -> (@unowned Bool)(uint64_t (*a1)(void)@<X0>, _BYTE *a2@<X8>)
{
  *a2 = a1() & 1;
  OUTLINED_FUNCTION_0();
}

void thunk for @escaping @callee_guaranteed () -> (@out Bool)(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;

  a1(&v1);
  OUTLINED_FUNCTION_36();
}

void ConversationController.hasAvailableDeskViewCameras.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = static Defaults.shared;
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 304))() & 1) != 0)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_1();
    v4 = v3[3];
    __swift_project_boxed_opaque_existential_1(v3, v4);
    v5 = *(_QWORD *)(v4 - 8);
    OUTLINED_FUNCTION_54_42();
    MEMORY[0x1E0C80A78](v6);
    OUTLINED_FUNCTION_67_24(v7, v8, v9);
    OUTLINED_FUNCTION_107_12();
    OUTLINED_FUNCTION_101(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    OUTLINED_FUNCTION_218_3();
    OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 112));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  OUTLINED_FUNCTION_647_0();
  OUTLINED_FUNCTION_91();
}

void thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> ()(uint64_t a1, void (*a2)(void))
{
  a2();
  OUTLINED_FUNCTION_0();
}

void ConversationController.participants(with:)()
{
  OUTLINED_FUNCTION_8_86();
  specialized Sequence.compactMap<A>(_:)();
}

Swift::Void __swiftcall ConversationController.updateLayoutStyle(_:)(ConversationKit::MultiwayViewController::LayoutStyle a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  v5 = *v2;
  OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_584_0();
  v7 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v7 + 16) = v2;
  *(_BYTE *)(v7 + 24) = v5;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  swift_release();
  OUTLINED_FUNCTION_269();
  OUTLINED_FUNCTION_585(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_385_1();
  OUTLINED_FUNCTION_132_10();
  OUTLINED_FUNCTION_429();
}

void sub_1BD5370F4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50_3();

  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8));
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.activeCallHasPreviouslyReceivedFirstRemoteFrame.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_423_1();
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_349_2();
  OUTLINED_FUNCTION_468_0();
  OUTLINED_FUNCTION_45_34();
  OUTLINED_FUNCTION_772();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.hasRingingCalls.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs;
  OUTLINED_FUNCTION_1();
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_72_9();
    OUTLINED_FUNCTION_5_80();
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_14_1();
}

void ConversationController.isTrackingActiveConversation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_1();
  v2 = OUTLINED_FUNCTION_52_28();
  outlined init with copy of FeatureEligibility?(v2, v3, v4);
  OUTLINED_FUNCTION_33_0();
  v5 = OUTLINED_FUNCTION_193_2();
  OUTLINED_FUNCTION_69_0(v5, v6, v7);
  OUTLINED_FUNCTION_25_0(v0);
  OUTLINED_FUNCTION_18();
}

void ConversationController.isWaitingOnFirstRemoteFrame.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_423_1();
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_349_2();
  OUTLINED_FUNCTION_468_0();
  OUTLINED_FUNCTION_45_34();
  OUTLINED_FUNCTION_772();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationController.isLocallyCreated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  _QWORD v17[5];

  OUTLINED_FUNCTION_303_4();
  if (v16)
  {
    outlined init with take of Notice(&v15, (uint64_t)v17);
    v7 = v17[4];
    OUTLINED_FUNCTION_565(v17);
    v8 = OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 208));
    v9 = v8;
    OUTLINED_FUNCTION_219_4(v8, v10, v11, v12, v13);
  }
  else
  {
    OUTLINED_FUNCTION_273_6(v0, &demangling cache variable for type metadata for Conversation?, v1, v2, v3, v4, v5, v6, v15);
    v9 = 1;
  }
  return v9 & 1;
}

uint64_t ConversationController.shouldShowLastFrameUI.getter()
{
  uint64_t v0;

  ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff);
}

void ConversationController.deviceOrientation.setter(uint64_t a1)
{
  MultiwayViewController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation, (void (*)(uint64_t))ConversationController.deviceOrientation.didset);
}

uint64_t ConversationController.isCarPlayConnected.getter()
{
  id v0;
  char v1;

  v0 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_sharedApplication), sel_openSessions);
  OUTLINED_FUNCTION_49_5();
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UISceneSession);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(lazy protocol witness table cache variable for type UISceneSession and conformance NSObject, &lazy cache variable for type metadata for UISceneSession);
  OUTLINED_FUNCTION_157();
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_37_0();
  v1 = specialized Sequence.contains(where:)((uint64_t)&lazy cache variable for type metadata for UISceneSession);
  OUTLINED_FUNCTION_13_3();
  return v1 & 1;
}

void ConversationController.supportsCameraBlur.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = static Defaults.shared;
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 152))() & 1) != 0)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_1();
    v4 = v3[3];
    __swift_project_boxed_opaque_existential_1(v3, v4);
    v5 = *(_QWORD *)(v4 - 8);
    OUTLINED_FUNCTION_54_42();
    MEMORY[0x1E0C80A78](v6);
    OUTLINED_FUNCTION_67_24(v7, v8, v9);
    OUTLINED_FUNCTION_107_12();
    OUTLINED_FUNCTION_101(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    OUTLINED_FUNCTION_218_3();
    OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 80));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  OUTLINED_FUNCTION_647_0();
  OUTLINED_FUNCTION_91();
}

void ConversationController.supportsReactionGestures.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = static Features.shared;
  if ((OUTLINED_FUNCTION_19_15(*(_QWORD *)static Features.shared) & 1) != 0
    || static Platform.current.getter() == 2)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_1();
    v4 = v3[3];
    __swift_project_boxed_opaque_existential_1(v3, v4);
    v5 = *(_QWORD *)(v4 - 8);
    OUTLINED_FUNCTION_54_42();
    MEMORY[0x1E0C80A78](v6);
    OUTLINED_FUNCTION_67_24(v7, v8, v9);
    OUTLINED_FUNCTION_107_12();
    OUTLINED_FUNCTION_101((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    OUTLINED_FUNCTION_218_3();
    OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 136));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  OUTLINED_FUNCTION_647_0();
  OUTLINED_FUNCTION_91();
}

void ConversationController.supportsStudioLight.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = static Features.shared;
  if ((OUTLINED_FUNCTION_19_15(*(_QWORD *)static Features.shared) & 1) != 0
    || static Platform.current.getter() == 2)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_1();
    v4 = v3[3];
    __swift_project_boxed_opaque_existential_1(v3, v4);
    v5 = *(_QWORD *)(v4 - 8);
    OUTLINED_FUNCTION_54_42();
    MEMORY[0x1E0C80A78](v6);
    OUTLINED_FUNCTION_67_24(v7, v8, v9);
    OUTLINED_FUNCTION_107_12();
    OUTLINED_FUNCTION_101((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    OUTLINED_FUNCTION_218_3();
    OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 144));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  OUTLINED_FUNCTION_647_0();
  OUTLINED_FUNCTION_91();
}

void ConversationController.remoteOneToOneParticipant.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t EnumTagSinglePayload;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[42];
  uint64_t v69;

  OUTLINED_FUNCTION_93();
  v5 = v4;
  OUTLINED_FUNCTION_238();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_5_27();
  v63 = v7;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_120_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_5_27();
  v58 = v10;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_18_0();
  v60 = v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_62();
  v62 = v14;
  v61 = OUTLINED_FUNCTION_14_2();
  v67 = *(_QWORD *)(v61 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_42_32();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_18_0();
  v55 = v17;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_18_0();
  v57 = v19;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_18_0();
  v65 = v21;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_138_0();
  v23 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_1();
  v56 = v23;
  v24 = *v23;
  v25 = MEMORY[0x1E0DEE9D8];
  v69 = MEMORY[0x1E0DEE9D8];
  v26 = *(_QWORD *)(v24 + 16);
  OUTLINED_FUNCTION_35_0();
  v64 = v3;
  v66 = v26;
  v59 = v5;
  if (v26)
  {
    v27 = 0;
    while (1)
    {
      if (v27 >= *(_QWORD *)(v24 + 16))
      {
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x1BD537CD0);
      }
      v28 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
      v29 = *(_QWORD *)(v67 + 72);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v24 + v28 + v29 * v27, v2, type metadata accessor for Participant);
      OUTLINED_FUNCTION_95_1(v2, v1);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        OUTLINED_FUNCTION_7_2((uint64_t *)(v1 + *(int *)(v30 + 64)));
        OUTLINED_FUNCTION_148(v68);
        v31 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_75(v31);
        v32 = v68[0];
        outlined destroy of Participant.MediaInfo((uint64_t)v68);
        if ((v32 & 1) == 0)
        {
          outlined init with take of StagedCollaboration(v2, v65, type metadata accessor for Participant);
          v33 = v69;
          if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
          {
            OUTLINED_FUNCTION_89_1(0, *(_QWORD *)(v33 + 16) + 1);
            v33 = v69;
          }
          v35 = *(_QWORD *)(v33 + 16);
          v34 = *(_QWORD *)(v33 + 24);
          if (v35 >= v34 >> 1)
          {
            v36 = OUTLINED_FUNCTION_138_4(v34);
            OUTLINED_FUNCTION_89_1(v36, v35 + 1);
            v33 = v69;
          }
          *(_QWORD *)(v33 + 16) = v35 + 1;
          outlined init with take of StagedCollaboration(v65, v33 + v28 + v35 * v29, type metadata accessor for Participant);
          v3 = v64;
          goto LABEL_13;
        }
      }
      else
      {
        OUTLINED_FUNCTION_46(v1);
      }
      outlined destroy of AccountUpdateNotice(v2, type metadata accessor for Participant);
LABEL_13:
      if (v66 == ++v27)
      {
        v25 = v69;
        v5 = v59;
        break;
      }
    }
  }
  OUTLINED_FUNCTION_133();
  v68[0] = v25;
  OUTLINED_FUNCTION_5_0();
  specialized MutableCollection<>.sort(by:)(v68);
  OUTLINED_FUNCTION_43();
  specialized Collection.first.getter(v68[0], v62);
  OUTLINED_FUNCTION_43();
  v37 = OUTLINED_FUNCTION_311_0();
  outlined init with copy of FeatureEligibility?(v37, v38, v39);
  v40 = OUTLINED_FUNCTION_392_1();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v40, v41, v61);
  if ((_DWORD)EnumTagSinglePayload != 1)
  {
    OUTLINED_FUNCTION_219(EnumTagSinglePayload, &demangling cache variable for type metadata for Participant?);
    v46 = v60;
    v47 = v57;
LABEL_22:
    OUTLINED_FUNCTION_153_0(v46, v47);
    v53 = OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_153_0(v53, v54);
    v52 = 0;
    goto LABEL_23;
  }
  OUTLINED_FUNCTION_275(EnumTagSinglePayload, &demangling cache variable for type metadata for Participant?);
  if (*(_QWORD *)(*v56 + 16))
  {
    OUTLINED_FUNCTION_597_0();
    OUTLINED_FUNCTION_5_0();
    v43 = OUTLINED_FUNCTION_239_2();
    OUTLINED_FUNCTION_259(v43, v44);
    OUTLINED_FUNCTION_111(v3, v63);
    v45 = (char *)&loc_1BD537B80 + *((int *)qword_1BD537CD0 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_19_3(v58, 1);
  OUTLINED_FUNCTION_27();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v62, &demangling cache variable for type metadata for Participant?);
  v48 = OUTLINED_FUNCTION_312();
  v50 = OUTLINED_FUNCTION_69_0(v48, v49, v61);
  if (!v51)
  {
    v46 = v58;
    v47 = v55;
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_219(v50, &demangling cache variable for type metadata for Participant?);
  v52 = 1;
LABEL_23:
  OUTLINED_FUNCTION_19_3(v5, v52);
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.shouldPlayToneForAVModeChange(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];

  OUTLINED_FUNCTION_303_4();
  if (v23)
  {
    OUTLINED_FUNCTION_251_4(v2, v3, v4, v5, v6, v7, v8, v9, v21, v22, v23, v24, v25[0]);
    ConversationController.lookupActiveParticipant(correspondingTo:)(a1);
    if (v10)
    {
      v15 = v10;
      ConversationController.identityClaimingAssociationRelationship(for:in:)(v10, v25);

      OUTLINED_FUNCTION_219_4(v16, v17, v18, v19, v20);
    }
    else
    {
      OUTLINED_FUNCTION_219_4(0, v11, v12, v13, v14);
    }
  }
  else
  {
    OUTLINED_FUNCTION_273_6(v2, &demangling cache variable for type metadata for Conversation?, v4, v5, v6, v7, v8, v9, v21);
  }
  OUTLINED_FUNCTION_2();
}

uint64_t ConversationController.conversationDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[5];

  OUTLINED_FUNCTION_303_4();
  if (v15)
  {
    outlined init with take of Notice(&v14, (uint64_t)v16);
    v7 = v16[4];
    OUTLINED_FUNCTION_565(v16);
    v8 = OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 224));
    OUTLINED_FUNCTION_219_4(v8, v9, v10, v11, v12);
  }
  else
  {
    OUTLINED_FUNCTION_273_6(v0, &demangling cache variable for type metadata for Conversation?, v1, v2, v3, v4, v5, v6, v14);
  }
  return OUTLINED_FUNCTION_50();
}

uint64_t ConversationController.isLinkSharingSupported.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_311_5();
  v2 = v7;
  if (v7)
  {
    v3 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    Conversation.isLinkSharingSupported.getter(v2, v3);
    LOBYTE(v2) = v4;
    OUTLINED_FUNCTION_557(v4);
  }
  else
  {
    OUTLINED_FUNCTION_305(v0, &demangling cache variable for type metadata for Conversation?, v1);
  }
  return v2 & 1;
}

uint64_t ConversationController.messagesGroupName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[5];

  OUTLINED_FUNCTION_311_5();
  if (v5[3])
  {
    v2 = v5[4];
    OUTLINED_FUNCTION_565(v5);
    v3 = OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40));
    OUTLINED_FUNCTION_557(v3);
  }
  else
  {
    OUTLINED_FUNCTION_305(v0, &demangling cache variable for type metadata for Conversation?, v1);
  }
  return OUTLINED_FUNCTION_50();
}

void ConversationController.broadcastingState.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  OUTLINED_FUNCTION_829();
  v4 = v3;
  OUTLINED_FUNCTION_572();
  v5 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_2_0();
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(v5 + 8);
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v1;
  v8 = *(_BYTE *)(v5 + 16);
  *(_BYTE *)(v5 + 16) = v4;
  ConversationController.broadcastingState.didset(v6, v7, v8);
  OUTLINED_FUNCTION_2_3();
}

void ConversationController.participant(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  char v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  id v83;
  char v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t (*v88)(_QWORD);
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[3];
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;

  OUTLINED_FUNCTION_93();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v104 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_5_27();
  v101 = v28;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v29);
  v103 = (char *)v100 - v30;
  v31 = OUTLINED_FUNCTION_14_2();
  v102 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v32);
  v106 = (char *)v100 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_18_0();
  v100[2] = v35;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_112();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_33_18(v38);
  v39 = *(void **)v25;
  v109 = *(_QWORD *)(v25 + 8);
  v111 = *(unsigned __int8 *)(v25 + 16);
  v41 = *(_QWORD *)(v25 + 24);
  v40 = *(_QWORD *)(v25 + 32);
  v105 = v20;
  v42 = (char *)(v20 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant);
  v43 = OUTLINED_FUNCTION_1();
  v113 = v40;
  v114 = v31;
  v44 = &v42[*(int *)(v31 + 28)];
  v45 = *(void **)v44;
  v46 = *((_QWORD *)v44 + 1);
  v47 = *((_QWORD *)v44 + 2);
  v107 = v41;
  if (v45)
  {
    v112 = v42;
    OUTLINED_FUNCTION_59(v43, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    OUTLINED_FUNCTION_390_1();
    OUTLINED_FUNCTION_390_1();
    OUTLINED_FUNCTION_124();
    v48 = v39;
    OUTLINED_FUNCTION_239_2();
    v49 = static NSObject.== infix(_:_:)();
    OUTLINED_FUNCTION_13_3();

    v50 = v39;
    v51 = v109;
    if ((v49 & 1) != 0)
    {
      if ((v47 & 1) != 0)
      {
        if ((v111 & 1) != 0)
        {

          OUTLINED_FUNCTION_54_1();
          OUTLINED_FUNCTION_183_4(v45);
          goto LABEL_10;
        }
      }
      else if ((v111 & 1) == 0)
      {

        OUTLINED_FUNCTION_54_1();
        OUTLINED_FUNCTION_183_4(v45);
        if (v46 != v51)
          goto LABEL_12;
LABEL_10:
        v53 = v104;
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v112, v104, type metadata accessor for Participant);
        goto LABEL_48;
      }
    }

    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_183_4(v45);
  }
  else
  {
    OUTLINED_FUNCTION_124();
    v52 = v39;
    OUTLINED_FUNCTION_183_4(0);
    outlined consume of Participant.RemoteIdentifiers?(v39);
    v50 = v39;
  }
LABEL_12:
  v54 = (uint64_t *)(v105 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_1();
  v55 = *v54;
  v56 = *(_QWORD *)(*v54 + 16);
  v112 = v50;
  if (!v56)
  {
    OUTLINED_FUNCTION_25_2();
LABEL_26:
    v67 = 1;
    v68 = (uint64_t)v103;
    v53 = v104;
    goto LABEL_27;
  }
  OUTLINED_FUNCTION_30_36();
  v58 = v55 + v57;
  v110 = *(_QWORD *)(v59 + 72);
  v100[1] = v55;
  OUTLINED_FUNCTION_16_31();
  v108 = v21;
  while (1)
  {
    OUTLINED_FUNCTION_95_1(v58, v21);
    v60 = v21 + *(int *)(v114 + 28);
    v62 = *(void **)v60;
    v61 = *(_QWORD *)(v60 + 8);
    v63 = *(_QWORD *)(v60 + 16);
    if (!*(_QWORD *)v60)
    {
      v66 = v50;
      OUTLINED_FUNCTION_5_0();
      OUTLINED_FUNCTION_166_4(0);
      outlined consume of Participant.RemoteIdentifiers?(v50);
      goto LABEL_23;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    OUTLINED_FUNCTION_376_3();
    v64 = v50;
    OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_376_3();
    v65 = OUTLINED_FUNCTION_735();
    OUTLINED_FUNCTION_133();

    if ((v65 & 1) == 0)
      goto LABEL_22;
    if ((v63 & 1) != 0)
      break;
    if ((v111 & 1) != 0)
      goto LABEL_22;

    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_166_4(v62);
    v21 = v108;
    v50 = v112;
    if (v61 == v109)
      goto LABEL_51;
LABEL_23:
    OUTLINED_FUNCTION_46(v21);
    v58 += v110;
    if (!--v56)
    {
      OUTLINED_FUNCTION_53();
      goto LABEL_26;
    }
  }
  if ((v111 & 1) == 0)
  {
LABEL_22:

    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_166_4(v62);
    v50 = v112;
    v21 = v108;
    goto LABEL_23;
  }

  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_166_4(v62);
  v21 = v108;
LABEL_51:
  OUTLINED_FUNCTION_53();
  v68 = (uint64_t)v103;
  OUTLINED_FUNCTION_74_1(v21, v98, type metadata accessor for Participant);
  v67 = 0;
  v53 = v104;
LABEL_27:
  v69 = v114;
  __swift_storeEnumTagSinglePayload(v68, v67, 1, v114);
  OUTLINED_FUNCTION_53();
  v70 = OUTLINED_FUNCTION_69_0(v68, 1, v69);
  if (!v71)
  {
    v90 = v68;
    v91 = &a17;
    goto LABEL_47;
  }
  OUTLINED_FUNCTION_32_18(v70, &demangling cache variable for type metadata for Participant?);
  v72 = (uint64_t *)(v105 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants);
  OUTLINED_FUNCTION_1();
  v73 = *v72;
  v74 = *(_QWORD *)(*v72 + 16);
  if (!v74)
  {
    OUTLINED_FUNCTION_25_2();
    v89 = 1;
LABEL_43:
    v92 = v101;
    goto LABEL_44;
  }
  OUTLINED_FUNCTION_30_36();
  v76 = v73 + v75;
  v110 = *(_QWORD *)(v77 + 72);
  v108 = v73;
  OUTLINED_FUNCTION_16_31();
  v78 = (uint64_t)v106;
  while (2)
  {
    OUTLINED_FUNCTION_92_12(v76, v78);
    v79 = v78 + *(int *)(v114 + 28);
    v81 = *(void **)v79;
    v80 = *(_QWORD *)(v79 + 8);
    v82 = *(_QWORD *)(v79 + 16);
    if (!*(_QWORD *)v79)
    {
      v85 = v112;
      v86 = v112;
      OUTLINED_FUNCTION_26_22();
      OUTLINED_FUNCTION_165_7(0);
      outlined consume of Participant.RemoteIdentifiers?(v85);
      goto LABEL_40;
    }
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    OUTLINED_FUNCTION_375_3();
    v83 = v112;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_375_3();
    v84 = OUTLINED_FUNCTION_735();
    OUTLINED_FUNCTION_25();

    if ((v84 & 1) == 0)
      goto LABEL_39;
    if ((v82 & 1) == 0)
    {
      if ((v111 & 1) == 0)
      {

        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_165_7(v81);
        v78 = (uint64_t)v106;
        if (v80 == v109)
          goto LABEL_53;
        goto LABEL_40;
      }
LABEL_39:

      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_165_7(v81);
      v78 = (uint64_t)v106;
LABEL_40:
      v87 = OUTLINED_FUNCTION_610_0();
      outlined destroy of AccountUpdateNotice(v87, v88);
      v76 += v110;
      if (!--v74)
      {
        OUTLINED_FUNCTION_53();
        v89 = 1;
        v53 = v104;
        goto LABEL_43;
      }
      continue;
    }
    break;
  }
  if ((v111 & 1) == 0)
    goto LABEL_39;

  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_165_7(v81);
  v78 = (uint64_t)v106;
LABEL_53:
  OUTLINED_FUNCTION_53();
  v92 = v101;
  OUTLINED_FUNCTION_74_1(v78, v99, type metadata accessor for Participant);
  v89 = 0;
  v53 = v104;
LABEL_44:
  v93 = v114;
  __swift_storeEnumTagSinglePayload(v92, v89, 1, v114);
  OUTLINED_FUNCTION_53();
  v94 = OUTLINED_FUNCTION_69_0(v92, 1, v93);
  if (v71)
  {
    OUTLINED_FUNCTION_32_18(v94, &demangling cache variable for type metadata for Participant?);
    v95 = 1;
  }
  else
  {
    v90 = v92;
    v91 = &a15;
LABEL_47:
    OUTLINED_FUNCTION_64_5(v90, *(v91 - 32));
    v96 = OUTLINED_FUNCTION_114();
    OUTLINED_FUNCTION_64_5(v96, v97);
LABEL_48:
    v95 = 0;
  }
  __swift_storeEnumTagSinglePayload(v53, v95, 1, v114);
  OUTLINED_FUNCTION_52_1();
}

BOOL static ConversationController.OneToOneModeChangeSource.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

Swift::Void __swiftcall ConversationController.startLocalVideo(allowVideoUpgrade:)(Swift::Bool allowVideoUpgrade)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (**v49)(uint64_t);
  void (*v50)(uint64_t);
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  void (**v69)(uint64_t, uint64_t);
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;

  OUTLINED_FUNCTION_93();
  v4 = v1;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v3 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v3, *MEMORY[0x1E0DEF740], v7);
  v10 = OUTLINED_FUNCTION_112_7();
  OUTLINED_FUNCTION_6_9((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v11 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_1();
  if (*(char *)(v11 + 16) < 0)
    goto LABEL_25;
  v7 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_1();
  v12 = *(_QWORD *)(v7 + 8);
  OUTLINED_FUNCTION_15_6();
  v13 = *(uint64_t (**)(uint64_t))(v12 + 128);
  OUTLINED_FUNCTION_72_9();
  v14 = OUTLINED_FUNCTION_202_0();
  LOBYTE(v12) = v13(v14);
  OUTLINED_FUNCTION_10();
  if ((v12 & 1) != 0
    || (v15 = (_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState),
        OUTLINED_FUNCTION_1(),
        *v15 == 3))
  {
    v16 = (_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
    OUTLINED_FUNCTION_1();
    if (*v16 == 3)
    {
      v17 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
      OUTLINED_FUNCTION_1();
      v18 = *(_QWORD *)(v17 + 24);
      v19 = (_QWORD *)OUTLINED_FUNCTION_758();
      __swift_project_boxed_opaque_existential_1(v19, v20);
      v21 = *(_QWORD *)(v18 - 8);
      OUTLINED_FUNCTION_54_42();
      MEMORY[0x1E0C80A78](v22);
      v24 = OUTLINED_FUNCTION_619(v23, v77);
      OUTLINED_FUNCTION_139((uint64_t)v24, v25, v26);
      OUTLINED_FUNCTION_182_6();
      OUTLINED_FUNCTION_371(v17, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
      v27 = v81;
      OUTLINED_FUNCTION_76_11(v79);
      v3 = (_QWORD *)OUTLINED_FUNCTION_312_0(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
      OUTLINED_FUNCTION_833();
    }
    else
    {
      v3 = 0;
    }
    v28 = (uint64_t *)(v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
    OUTLINED_FUNCTION_1();
    v29 = *v28;
    ConversationController.cameraStartPolicy.getter();
    if (v30)
    {
      v78 = v29;
      HIDWORD(v77) = v6;
      v31 = (_BYTE *)(v4
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable);
      OUTLINED_FUNCTION_2_0();
      *v31 = 0;
      v32 = (_BYTE *)(v4
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable);
      OUTLINED_FUNCTION_2_0();
      *v32 = 0;
      v33 = (_BYTE *)(v4
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable);
      OUTLINED_FUNCTION_2_0();
      *v33 = 0;
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_10:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v34 = OUTLINED_FUNCTION_15();
        *(_OWORD *)(v34 + 16) = xmmword_1BD6441D0;
        LOBYTE(v79[0]) = (_BYTE)v3;
        v35 = String.init<A>(reflecting:)();
        v37 = v36;
        *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v34 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v34 + 32) = v35;
        *(_QWORD *)(v34 + 40) = v37;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        OUTLINED_FUNCTION_54_1();
        OUTLINED_FUNCTION_639_0();
        if ((ConversationController.shouldDeferStartCameraAction.getter() & 1) != 0)
        {
          ConversationController.didDeferStartCameraAction.setter(1);
        }
        else
        {
          v52 = (_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
          OUTLINED_FUNCTION_1();
          v53 = v52[3];
          __swift_project_boxed_opaque_existential_1(v52, v53);
          v54 = *(_QWORD *)(v53 - 8);
          OUTLINED_FUNCTION_54_42();
          MEMORY[0x1E0C80A78](v55);
          v57 = OUTLINED_FUNCTION_620(v56, v77);
          OUTLINED_FUNCTION_291((uint64_t)v57, v58, v59);
          OUTLINED_FUNCTION_76_22(v53);
          OUTLINED_FUNCTION_336_4(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
          v60 = v80;
          v61 = v81;
          OUTLINED_FUNCTION_80_20(v79, v80);
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 32))(v3, v78, 1, v60, v61);
          OUTLINED_FUNCTION_833();
        }
        if ((v77 & 0x100000000) != 0)
        {
          OUTLINED_FUNCTION_15_6();
          OUTLINED_FUNCTION_72_9();
          v62 = OUTLINED_FUNCTION_781();
          OUTLINED_FUNCTION_10();
          if ((v62 & 1) != 0)
          {
            v63 = OUTLINED_FUNCTION_1();
            OUTLINED_FUNCTION_85_21(v63, (uint64_t)v79);
            v64 = v80;
            v65 = v81;
            OUTLINED_FUNCTION_80_20(v79, v80);
            v66 = *(_QWORD *)(v7 + 8);
            v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 216);
            v68 = OUTLINED_FUNCTION_462();
            v67(v68, v66, v64, v65);
            OUTLINED_FUNCTION_372_3();
            OUTLINED_FUNCTION_833();
            v69 = (void (**)(uint64_t, uint64_t))(v4
                                                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
            OUTLINED_FUNCTION_1();
            v70 = *v69;
            if (*v69)
            {
              v71 = *(_QWORD *)(v7 + 8);
              v72 = OUTLINED_FUNCTION_114();
              _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v72);
              v73 = OUTLINED_FUNCTION_349_2();
              v70(v73, v71);
              OUTLINED_FUNCTION_11_14((uint64_t)v70);
              OUTLINED_FUNCTION_45_34();
            }
          }
        }
        v74 = *(_QWORD *)(v7 + 8);
        v75 = OUTLINED_FUNCTION_15_6();
        v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 312);
        OUTLINED_FUNCTION_72_9();
        v76(1, v75, v74);
        OUTLINED_FUNCTION_10();
        goto LABEL_25;
      }
LABEL_27:
      swift_once();
      goto LABEL_10;
    }
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v38 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v38 + 16) = xmmword_1BD645380;
    v39 = *(_QWORD *)(v7 + 8);
    OUTLINED_FUNCTION_15_6();
    v40 = *(uint64_t (**)(uint64_t))(v39 + 328);
    OUTLINED_FUNCTION_72_9();
    v41 = OUTLINED_FUNCTION_804();
    LOBYTE(v39) = v40(v41);
    OUTLINED_FUNCTION_10();
    LOBYTE(v79[0]) = v39 & 1;
    v42 = OUTLINED_FUNCTION_680();
    v44 = v43;
    v45 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v38 + 56) = MEMORY[0x1E0DEA968];
    v46 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v38 + 64) = v46;
    *(_QWORD *)(v38 + 32) = v42;
    *(_QWORD *)(v38 + 40) = v44;
    LOBYTE(v79[0]) = objc_msgSend((id)objc_opt_self(), sel_allowsScreenSharingWithVideo);
    v47 = OUTLINED_FUNCTION_680();
    *(_QWORD *)(v38 + 96) = v45;
    *(_QWORD *)(v38 + 104) = v46;
    *(_QWORD *)(v38 + 72) = v47;
    *(_QWORD *)(v38 + 80) = v48;
    OUTLINED_FUNCTION_168_3();
    OUTLINED_FUNCTION_21_0();
    v49 = (void (**)(uint64_t))(v4
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
    OUTLINED_FUNCTION_1();
    v50 = *v49;
    if (*v49)
    {
      v51 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v50(v51);
      OUTLINED_FUNCTION_11_14((uint64_t)v50);
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_255();
  }
LABEL_25:
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationController.allowsVideoCroppedByAspectRatio.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter);
}

void ConversationController.isCameraBlurEnabled.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[6];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_1();
  v2 = v1[3];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v3 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_67_24(v5, v6, v8);
  OUTLINED_FUNCTION_107_12();
  OUTLINED_FUNCTION_101(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v7 = v9[4];
  OUTLINED_FUNCTION_565(v9);
  OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88));
  OUTLINED_FUNCTION_316_4();
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall ConversationController.update(presentationContexts:forceUpdate:)(Swift::OpaquePointer presentationContexts, Swift::Bool forceUpdate)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD v23[7];
  _QWORD v24[5];
  _QWORD v25[6];

  OUTLINED_FUNCTION_93();
  v6 = v5;
  v8 = v7;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_16_2();
  v10 = v2;
  v11 = OUTLINED_FUNCTION_35_0();
  v12 = *(_QWORD *)(specialized _ArrayProtocol.filter(_:)(v11, v10) + 16);
  swift_bridgeObjectRelease();
  if (v12 || (v6 & 1) != 0)
  {
    ConversationController.lookupActiveConversation()();
    if (v24[3])
    {
      v14 = OUTLINED_FUNCTION_243_2();
      MEMORY[0x1E0C80A78](v14);
      v23[2] = v25;
      v23[3] = v10;
      v15 = specialized Sequence.compactMap<A>(_:)((_QWORD *(*)(uint64_t *__return_ptr, _OWORD *))partial apply for closure #2 in ConversationController.update(presentationContexts:forceUpdate:), (uint64_t)v23, v8);
      if (v15 >> 62)
      {
        OUTLINED_FUNCTION_8_8();
        v22 = _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_2_1();
        if (v22)
          goto LABEL_6;
      }
      else if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v16 = OUTLINED_FUNCTION_15();
        *(_OWORD *)(v16 + 16) = xmmword_1BD6441D0;
        *(_QWORD *)(v16 + 56) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [TUConversationParticipantPresentationContext]);
        lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type [TUConversationParticipantPresentationContext] and conformance [A], &demangling cache variable for type metadata for [TUConversationParticipantPresentationContext]);
        *(_QWORD *)(v16 + 64) = v17;
        *(_QWORD *)(v16 + 32) = v15;
        OUTLINED_FUNCTION_8_8();
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_527_0();
        OUTLINED_FUNCTION_30_4();
        v18 = OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_85_21(v18, (uint64_t)v24);
        OUTLINED_FUNCTION_517();
        __swift_project_boxed_opaque_existential_1(v25, v25[3]);
        OUTLINED_FUNCTION_180_2();
        v19 = OUTLINED_FUNCTION_315_0();
        OUTLINED_FUNCTION_697(v19, v20, v21);
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_39_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
        OUTLINED_FUNCTION_103();
        goto LABEL_12;
      }
      OUTLINED_FUNCTION_2_1();
LABEL_12:
      OUTLINED_FUNCTION_100_2();
      goto LABEL_13;
    }
    OUTLINED_FUNCTION_159_8(v13, &demangling cache variable for type metadata for Conversation?);
  }
LABEL_13:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationController.toggleCameraBlur()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[9];

  OUTLINED_FUNCTION_93();
  v3 = v0;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v6 = OUTLINED_FUNCTION_7_22();
  *v1 = v6;
  OUTLINED_FUNCTION_4_57(v6, *MEMORY[0x1E0DEF740]);
  v7 = OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_101((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v7 & 1) != 0)
  {
    v8 = (_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_1();
    v9 = v8[3];
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v10 = *(_QWORD *)(v9 - 8);
    OUTLINED_FUNCTION_54_42();
    MEMORY[0x1E0C80A78](v11);
    OUTLINED_FUNCTION_108_14(v12, v13, v20);
    OUTLINED_FUNCTION_73_24();
    OUTLINED_FUNCTION_39_0(v7, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v14 = v23[4];
    __swift_project_boxed_opaque_existential_1(v23, v23[3]);
    v15 = v8[3];
    __swift_project_boxed_opaque_existential_1(v8, v15);
    v16 = *(_QWORD *)(v15 - 8);
    OUTLINED_FUNCTION_54_42();
    MEMORY[0x1E0C80A78](v17);
    OUTLINED_FUNCTION_109_12(v18, v19, v21);
    OUTLINED_FUNCTION_182_6();
    OUTLINED_FUNCTION_371(v7, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    OUTLINED_FUNCTION_594_0();
    OUTLINED_FUNCTION_64_25(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    OUTLINED_FUNCTION_128_9(*(uint64_t (**)(BOOL, uint64_t, uint64_t))(v14 + 96));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationController.toggleCinematicFraming()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[9];

  OUTLINED_FUNCTION_93();
  v3 = v0;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v6 = OUTLINED_FUNCTION_7_22();
  *v1 = v6;
  OUTLINED_FUNCTION_4_57(v6, *MEMORY[0x1E0DEF740]);
  v7 = OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_101((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v7 & 1) != 0)
  {
    v8 = (_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    OUTLINED_FUNCTION_1();
    v9 = v8[3];
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v10 = *(_QWORD *)(v9 - 8);
    OUTLINED_FUNCTION_54_42();
    MEMORY[0x1E0C80A78](v11);
    OUTLINED_FUNCTION_108_14(v12, v13, v20);
    OUTLINED_FUNCTION_73_24();
    OUTLINED_FUNCTION_39_0(v7, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v14 = v23[4];
    __swift_project_boxed_opaque_existential_1(v23, v23[3]);
    v15 = v8[3];
    __swift_project_boxed_opaque_existential_1(v8, v15);
    v16 = *(_QWORD *)(v15 - 8);
    OUTLINED_FUNCTION_54_42();
    MEMORY[0x1E0C80A78](v17);
    OUTLINED_FUNCTION_109_12(v18, v19, v21);
    OUTLINED_FUNCTION_182_6();
    OUTLINED_FUNCTION_371(v7, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    OUTLINED_FUNCTION_594_0();
    OUTLINED_FUNCTION_64_25(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 120));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    OUTLINED_FUNCTION_128_9(*(uint64_t (**)(BOOL, uint64_t, uint64_t))(v14 + 128));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationController.stopLocalVideoForMiniWindow()()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned __int8 v3;
  unsigned __int8 *v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_isGreenTea);

    v4 = (unsigned __int8 *)(v0
                           + OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable);
    OUTLINED_FUNCTION_2_0();
    *v4 = v3;
    ConversationController.stopLocalVideo()();
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationController.openMessagesConversation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  ConversationController.openMessagesConversation(completion:)(0, 0, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16,
    v17);
}

Swift::Void __swiftcall ConversationController.effectsEnabledForLocalParticipant(with:)(Swift::Bool with)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v3 + *(int *)(OUTLINED_FUNCTION_14_2() + 40)) = with;
  OUTLINED_FUNCTION_32();
}

Swift::Void __swiftcall ConversationController.updateVideoStateForExternalFactors(isShowingInMiniWindow:)(Swift::Bool isShowingInMiniWindow)
{
  uint64_t v1;
  _BOOL4 v3;
  char v4;
  _BYTE *v5;
  char v6;
  _BYTE *v7;
  _BYTE *v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = 1;
  if ((ConversationController.isCarPlayConnected.getter() & 1) == 0 && !isShowingInMiniWindow)
  {
    ConversationController.cameraStartPolicy.getter();
    v3 = v4 == 0;
  }
  if (((ConversationController.isCarPlayConnected.getter() & 1) != 0
     || (v5 = (_BYTE *)(v1
                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable),
         OUTLINED_FUNCTION_1(),
         (*v5 & 1) == 0))
    && ((ConversationController.isLocallySharingScreen.getter(), (v6 & 1) != 0)
     || (v7 = (_BYTE *)(v1
                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable),
         OUTLINED_FUNCTION_1(),
         (*v7 & 1) == 0))
    && (isShowingInMiniWindow
     || (v8 = (_BYTE *)(v1
                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable),
         OUTLINED_FUNCTION_1(),
         *v8 != 1)))
  {
    if (!v3)
      goto LABEL_18;
  }
  else if (!v3)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    *(_OWORD *)(OUTLINED_FUNCTION_15() + 16) = xmmword_1BD646740;
    v9 = ConversationController.isCarPlayConnected.getter();
    OUTLINED_FUNCTION_590_0(v9);
    OUTLINED_FUNCTION_339_1(v10);
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_53();
    ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
    goto LABEL_18;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  *(_OWORD *)(OUTLINED_FUNCTION_15() + 16) = xmmword_1BD646740;
  v11 = ConversationController.isCarPlayConnected.getter();
  OUTLINED_FUNCTION_590_0(v11);
  OUTLINED_FUNCTION_339_1(v12);
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_53();
  ConversationController.stopLocalVideo()();
LABEL_18:
  OUTLINED_FUNCTION_80_10();
}

void ConversationController.conversationHasActiveRemoteParticipants.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];

  OUTLINED_FUNCTION_303_4();
  if (v16)
  {
    OUTLINED_FUNCTION_251_4(v0, v1, v2, v3, v4, v5, v6, v7, v14, v15, v16, v17, v18[0]);
    __swift_project_boxed_opaque_existential_1(v18, v18[3]);
    OUTLINED_FUNCTION_471();
    specialized Set.count.getter(v8);
    v9 = OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_219_4(v9, v10, v11, v12, v13);
  }
  else
  {
    OUTLINED_FUNCTION_273_6(v0, &demangling cache variable for type metadata for Conversation?, v2, v3, v4, v5, v6, v7, v14);
  }
  OUTLINED_FUNCTION_2();
}

uint64_t ConversationController.shouldDeferStartCameraAction.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults);
  v2 = *(_QWORD *)(v1 + 8);
  v4 = OUTLINED_FUNCTION_15_6();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 624))(v4, v2) & 1) == 0)
    return 0;
  objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_currentDevice), sel_userInterfaceIdiom);
  OUTLINED_FUNCTION_49_5();
  if (v3 != 1)
    return 0;
  v5 = objc_msgSend((id)objc_opt_self(), sel_systemPreferredCamera);
  if (v5)
  {

    return 0;
  }
  return 1;
}

void ConversationController.didDeferStartCameraAction.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction, (void (*)(uint64_t))ConversationController.didDeferStartCameraAction.didset);
}

void ConversationController.captionsRecognizerShouldBeRunning.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void ConversationController.captionsRecognizerShouldBeRunning.setter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD);
  _BYTE *v39;
  uint64_t v40;
  uint64_t ObjectType;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[312];
  uint64_t v48;

  OUTLINED_FUNCTION_93();
  v6 = v0;
  v8 = v7;
  OUTLINED_FUNCTION_238();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_83_4();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v44 = v11;
  v45 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_42_32();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_62();
  v46 = v14;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v16, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_148_2(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  v17 = OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_101((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v17 & 1) != 0)
  {
    if (*(_BYTE *)(v6 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
    {
      v43 = v6;
      v18 = (uint64_t *)(v6 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
      OUTLINED_FUNCTION_1();
      v19 = *v18;
      v20 = *(_QWORD *)(*v18 + 16);
      if (v20)
      {
        v42 = v8;
        OUTLINED_FUNCTION_37_3();
        v22 = v19 + v21;
        v23 = *(_QWORD *)(v2 + 72);
        OUTLINED_FUNCTION_16_31();
        do
        {
          OUTLINED_FUNCTION_111(v22, v5);
          v24 = OUTLINED_FUNCTION_607_0();
          OUTLINED_FUNCTION_259(v24, v25);
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
            OUTLINED_FUNCTION_7_2((uint64_t *)(v4 + *(int *)(v26 + 64)));
            OUTLINED_FUNCTION_148(v47);
            v27 = OUTLINED_FUNCTION_33();
            OUTLINED_FUNCTION_254_4(v27);
            v28 = v48;
            outlined copy of Participant.CaptionInfo?(v48);
            outlined destroy of Participant.MediaInfo((uint64_t)v47);
            if (v28)
            {
              OUTLINED_FUNCTION_53();
              OUTLINED_FUNCTION_10();
              OUTLINED_FUNCTION_30_4();
              v29 = v44;
              OUTLINED_FUNCTION_74_1(v5, v30, type metadata accessor for Participant);
              v31 = 0;
              v8 = v42;
              goto LABEL_13;
            }
          }
          else
          {
            OUTLINED_FUNCTION_110(v4);
          }
          OUTLINED_FUNCTION_40_58(v5);
          v22 += v23;
          --v20;
        }
        while (v20);
        OUTLINED_FUNCTION_53();
        v31 = 1;
        v8 = v42;
      }
      else
      {
        OUTLINED_FUNCTION_25_2();
        v31 = 1;
      }
      v29 = v44;
LABEL_13:
      __swift_storeEnumTagSinglePayload(v29, v31, 1, v45);
      OUTLINED_FUNCTION_53();
      v32 = OUTLINED_FUNCTION_193_2();
      v34 = OUTLINED_FUNCTION_69_0(v32, v33, v45);
      if (v35)
      {
        OUTLINED_FUNCTION_32_18(v34, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        v36 = OUTLINED_FUNCTION_345_1();
        outlined init with take of StagedCollaboration(v36, v37, v38);
        v39 = (_BYTE *)(v43
                      + OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning);
        OUTLINED_FUNCTION_2_0();
        if (*v39 == (v8 & 1))
        {
          outlined destroy of AccountUpdateNotice(v46, type metadata accessor for Participant);
        }
        else
        {
          Participant.captionsProvider.getter();
          if (v40)
          {
            OUTLINED_FUNCTION_257_1();
            ObjectType = swift_getObjectType();
            (*(void (**)(_QWORD, uint64_t, uint64_t))(v19 + 48))(v8 & 1, ObjectType, v19);
            OUTLINED_FUNCTION_10();
          }
          outlined destroy of AccountUpdateNotice(v46, type metadata accessor for Participant);
          *v39 = v8 & 1;
        }
      }
    }
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    __break(1u);
  }
}

void ConversationController.isRemoteParticipantEligibleForVideoMessaging.getter()
{
  uint64_t v0;
  void (**v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;

  v1 = (void (**)(uint64_t))(v0
                                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  if (*v1)
  {
    v3 = OUTLINED_FUNCTION_11_1();
    v2(v3);
    OUTLINED_FUNCTION_496_0();
  }
  OUTLINED_FUNCTION_9_0();
}

id ConversationController.momentsController.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    objc_msgSend(v4, sel_addDelegate_, v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void ConversationController.addScreenSharingType(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[40];

  OUTLINED_FUNCTION_441_0();
  if (v14)
  {
    OUTLINED_FUNCTION_326_5(v1, v2, v3, v4);
    v7 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_85_21(v7, (uint64_t)v13);
    v8 = v15;
    OUTLINED_FUNCTION_80_20(v13, v14);
    OUTLINED_FUNCTION_31_38(v0, (uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 200));
    v9 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    OUTLINED_FUNCTION_16_56(v9, v10, v11, v12);
  }
  else
  {
    OUTLINED_FUNCTION_85_13(v1, &demangling cache variable for type metadata for Conversation?, v3, v4, v5, v6);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_55_0();
  }
  OUTLINED_FUNCTION_322_3();
}

void ConversationController.resetAssociatedDateForInactiveParticipant(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t i;
  uint64_t v25;
  char *v26;
  uint64_t v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v27 - v5;
  OUTLINED_FUNCTION_238();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_5_27();
  v28 = v8;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_18_0();
  v30 = v10;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_827(v12, v13, v14, v15, v16, v17, v18, v19, v27[0]);
  v20 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  OUTLINED_FUNCTION_1();
  v21 = *(_QWORD *)(*(_QWORD *)v20 + 16);
  if (v21)
  {
    v27[1] = v0;
    v27[2] = (uint64_t)v6;
    v27[0] = v1;
    v22 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v23 = *(_QWORD *)(v2 + 72);
    OUTLINED_FUNCTION_124();
    for (i = 0; i != v21; ++i)
    {
      if ((static UUID.== infix(_:_:)() & 1) != 0)
      {
        OUTLINED_FUNCTION_13_3();
        if (i < *(_QWORD *)(*(_QWORD *)v20 + 16))
        {
          v25 = v29;
          OUTLINED_FUNCTION_224_0(*(_QWORD *)v20 + v22, v29);
          OUTLINED_FUNCTION_224_0(v25, v28);
          OUTLINED_FUNCTION_263();
          v26 = (char *)&loc_1BD539CE4 + *((int *)qword_1BD539E90 + swift_getEnumCaseMultiPayload());
          __asm { BR              X10 }
        }
        __break(1u);
        JUMPOUT(0x1BD539E70);
      }
      v22 += v23;
    }
    OUTLINED_FUNCTION_13_3();
  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationController.toggleReactionEffectGesture()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];
  _QWORD v17[9];

  OUTLINED_FUNCTION_96();
  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_1();
  v2 = v1[3];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v3 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_108_14(v5, v6, v14);
  OUTLINED_FUNCTION_73_24();
  OUTLINED_FUNCTION_39_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v7 = v17[4];
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  v8 = v1[3];
  __swift_project_boxed_opaque_existential_1(v1, v8);
  v9 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_109_12(v11, v12, v15);
  OUTLINED_FUNCTION_182_6();
  OUTLINED_FUNCTION_371(v0, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  v13 = v16[4];
  OUTLINED_FUNCTION_14_64(v16);
  OUTLINED_FUNCTION_64_25(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 152));
  OUTLINED_FUNCTION_716();
  OUTLINED_FUNCTION_128_9(*(uint64_t (**)(BOOL, uint64_t, uint64_t))(v7 + 160));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  OUTLINED_FUNCTION_65_1();
}

Swift::Void __swiftcall ConversationController.toggleStudioLight()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];
  _QWORD v17[9];

  OUTLINED_FUNCTION_96();
  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  OUTLINED_FUNCTION_1();
  v2 = v1[3];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v3 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_108_14(v5, v6, v14);
  OUTLINED_FUNCTION_73_24();
  OUTLINED_FUNCTION_39_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v7 = v17[4];
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  v8 = v1[3];
  __swift_project_boxed_opaque_existential_1(v1, v8);
  v9 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_109_12(v11, v12, v15);
  OUTLINED_FUNCTION_182_6();
  OUTLINED_FUNCTION_371(v0, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  v13 = v16[4];
  OUTLINED_FUNCTION_14_64(v16);
  OUTLINED_FUNCTION_64_25(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 168));
  OUTLINED_FUNCTION_716();
  OUTLINED_FUNCTION_128_9(*(uint64_t (**)(BOOL, uint64_t, uint64_t))(v7 + 176));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  OUTLINED_FUNCTION_65_1();
}

Swift::Void __swiftcall ConversationController.startRecordingLocalVideo()()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  _QWORD aBlock[3];
  void *v10;
  void (*v11)(uint64_t, uint64_t, void *);
  uint64_t v12;
  id v13;

  OUTLINED_FUNCTION_83_17();
  if (v0)
  {
    OUTLINED_FUNCTION_311_5();
    if (v10)
    {
      v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
      OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
      if ((OUTLINED_FUNCTION_97() & 1) != 0)
      {
        v4 = v13;
        if (one-time initialization token for shared != -1)
          swift_once();
        if ((OUTLINED_FUNCTION_22_6() & 1) != 0)
        {
          v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD338]), sel_initWithConversation_, v13);
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          static os_log_type_t.default.getter();
          OUTLINED_FUNCTION_255();
          v6 = ConversationController.momentsController.getter();
          v7 = OUTLINED_FUNCTION_15();
          OUTLINED_FUNCTION_251();
          v11 = partial apply for closure #1 in ConversationController.startRecordingLocalVideo();
          v12 = v7;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed String?, @guaranteed Error?) -> ();
          v10 = &block_descriptor_10_4;
          v8 = _Block_copy(aBlock);
          swift_release();
          objc_msgSend(v6, sel_startRequestWithMediaType_forProvider_requesteeID_completion_, 2, v5, 0, v8);
          OUTLINED_FUNCTION_813();

LABEL_19:
          OUTLINED_FUNCTION_40_7();
          return;
        }

      }
    }
    else
    {
      OUTLINED_FUNCTION_305(v1, &demangling cache variable for type metadata for Conversation?, v2);
    }
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_55_0();
    goto LABEL_19;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_127_5();
  OUTLINED_FUNCTION_429_0();
}

Swift::Void __swiftcall ConversationController.stopRecordingLocalVideo()()
{
  uint64_t v0;
  _QWORD *v1;
  Swift::String v2;
  void (**v3)(_QWORD);
  void (*v4)(_QWORD);

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID);
  OUTLINED_FUNCTION_2_0();
  if (v1[1])
  {
    OUTLINED_FUNCTION_8_8();
    v2._countAndFlagsBits = OUTLINED_FUNCTION_315_0();
    ConversationController.endRequest(for:)(v2);
    OUTLINED_FUNCTION_2_1();
    *v1 = 0;
    v1[1] = 0;
    swift_bridgeObjectRelease();
    v3 = (void (**)(_QWORD))(v0
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
    OUTLINED_FUNCTION_1();
    v4 = *v3;
    if (*v3)
    {
      partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v4(0);
      OUTLINED_FUNCTION_11_14((uint64_t)v4);
    }
  }
  OUTLINED_FUNCTION_289_0();
}

void ConversationController.captureMoment(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, void *, void *);
  uint64_t v55;
  void *v56;

  OUTLINED_FUNCTION_93();
  v4 = v1;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_37_18();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - v10;
  v12 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_83_17();
  if (v14)
  {
    ConversationController.participant(with:)();
    v15 = OUTLINED_FUNCTION_312();
    v17 = OUTLINED_FUNCTION_69_0(v15, v16, v12);
    if (v14)
    {
      OUTLINED_FUNCTION_219(v17, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      outlined init with take of StagedCollaboration((uint64_t)v11, v0, type metadata accessor for Participant);
      v18 = (_QWORD *)(v0 + *(int *)(v12 + 28));
      if (*v18)
      {
        v19 = v18[4];
        if (v19)
        {
          v20 = v18[3];
          OUTLINED_FUNCTION_35_0();
          OUTLINED_FUNCTION_357_2();
          if (v53)
          {
            v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
            OUTLINED_FUNCTION_59(v21, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
            if ((OUTLINED_FUNCTION_97() & 1) != 0)
            {
              v22 = v56;
              v23 = objc_allocWithZone(MEMORY[0x1E0DBD338]);
              v50 = v22;
              v49 = objc_msgSend(v23, sel_initWithConversation_, v22);
              if (one-time initialization token for conversationKit != -1)
                swift_once();
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
              v24 = OUTLINED_FUNCTION_15();
              *(_OWORD *)(v24 + 16) = xmmword_1BD6441D0;
              v25 = OUTLINED_FUNCTION_610_0();
              outlined init with copy of ConversationControlsAppLaunchButtonType(v25, v26, v27);
              OUTLINED_FUNCTION_265_7(v3, 0);
              specialized >> prefix<A>(_:)(v3);
              v29 = v28;
              v31 = v30;
              OUTLINED_FUNCTION_92_1(v28, &demangling cache variable for type metadata for Participant?);
              *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v24 + 64) = lazy protocol witness table accessor for type String and conformance String();
              *(_QWORD *)(v24 + 32) = v29;
              *(_QWORD *)(v24 + 40) = v31;
              static os_log_type_t.default.getter();
              OUTLINED_FUNCTION_132_3();
              OUTLINED_FUNCTION_460();
              OUTLINED_FUNCTION_58_1();
              v32 = ConversationController.momentsController.getter();
              v33 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
              OUTLINED_FUNCTION_1();
              v34 = *(_QWORD *)(v33 + 8);
              OUTLINED_FUNCTION_650();
              v35 = *(uint64_t (**)(uint64_t))(v34 + 112);
              OUTLINED_FUNCTION_598();
              v36 = OUTLINED_FUNCTION_607_0();
              LOBYTE(v34) = v35(v36);
              swift_unknownObjectRelease();
              v37 = 0;
              if ((v34 & 1) != 0)
                v37 = (void *)MEMORY[0x1C3B72E00](v20, v19);
              OUTLINED_FUNCTION_133();
              v38 = OUTLINED_FUNCTION_15();
              swift_unknownObjectWeakInit();
              v54 = partial apply for closure #1 in ConversationController.captureMoment(for:);
              v55 = v38;
              v51 = MEMORY[0x1E0C809B0];
              v52 = 1107296256;
              v39 = OUTLINED_FUNCTION_207((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed String?, @guaranteed Error?) -> ());
              swift_release();
              v40 = v49;
              objc_msgSend(v32, sel_startRequestWithMediaType_forProvider_requesteeID_completion_, 3, v49, v37, v39);
              OUTLINED_FUNCTION_768();

LABEL_27:
              outlined destroy of AccountUpdateNotice(v0, type metadata accessor for Participant);
LABEL_28:
              OUTLINED_FUNCTION_52_1();
              return;
            }
            OUTLINED_FUNCTION_133();
          }
          else
          {
            v47 = OUTLINED_FUNCTION_133();
            OUTLINED_FUNCTION_484_0(v47, &demangling cache variable for type metadata for Conversation?);
          }
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          static os_log_type_t.error.getter();
          OUTLINED_FUNCTION_255();
          goto LABEL_27;
        }
      }
      outlined destroy of AccountUpdateNotice(v0, type metadata accessor for Participant);
    }
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v41 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v41 + 16) = xmmword_1BD6441D0;
    v42 = OUTLINED_FUNCTION_33_0();
    v43 = OUTLINED_FUNCTION_295_3();
    OUTLINED_FUNCTION_291(v43, v44, v45);
    OUTLINED_FUNCTION_77_16(v2);
    specialized >> prefix<A>(_:)(v2);
    OUTLINED_FUNCTION_56_33();
    OUTLINED_FUNCTION_30_7(v46, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(_QWORD *)(v41 + 64) = OUTLINED_FUNCTION_331_4(MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v41 + 32) = v42;
    *(_QWORD *)(v41 + 40) = v6;
    OUTLINED_FUNCTION_119_7();
    OUTLINED_FUNCTION_2_1();
    goto LABEL_28;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_30_48();
}

Swift::Void __swiftcall ConversationController.addContactToCurrentConversation(_:)(CNContact a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  void *v14;
  uint64_t inited;
  unint64_t v16;
  uint64_t v17;
  Class isa;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_787();
  if (v21)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    if ((OUTLINED_FUNCTION_97() & 1) != 0)
    {
      v5 = (void *)v20;
      v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
      OUTLINED_FUNCTION_1();
      v7 = v6[3];
      __swift_project_boxed_opaque_existential_1(v6, v7);
      v8 = *(_QWORD *)(v7 - 8);
      OUTLINED_FUNCTION_54_42();
      MEMORY[0x1E0C80A78](v9);
      OUTLINED_FUNCTION_291((uint64_t)&v19 - v10, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
      v12 = OUTLINED_FUNCTION_396_1();
      v14 = (void *)v13(v12);
      OUTLINED_FUNCTION_336_4(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BD6443F0;
      *(_QWORD *)(inited + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2A0]), sel_initWithContact_, v2);
      v20 = inited;
      specialized Array._endMutation()();
      v16 = v20;
      if (v20 >> 62)
      {
        OUTLINED_FUNCTION_5_0();
        v17 = _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_27();
      }
      else
      {
        v17 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v17)
        specialized Set.init(_nonEmptyArrayLiteral:)(v16);
      else
        swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_615_0();
      OUTLINED_FUNCTION_696(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
      OUTLINED_FUNCTION_758();
      isa = Set._bridgeToObjectiveC()().super.isa;
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_630_0(v14, sel_addRemoteMembers_toConversation_, (uint64_t)isa);

      goto LABEL_13;
    }
  }
  else
  {
    OUTLINED_FUNCTION_428(v3, &demangling cache variable for type metadata for Conversation?);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_55_0();
LABEL_13:
  OUTLINED_FUNCTION_65_1();
}

void ConversationController.resetRecordingVideoMessage(completion:)()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_96();
  v22 = v4;
  v23 = v5;
  OUTLINED_FUNCTION_6_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_16_2();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
  {
    v7 = OUTLINED_FUNCTION_415();
    OUTLINED_FUNCTION_77_0(v3, v8, v9, v7);
    v10 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_299();
    OUTLINED_FUNCTION_48_2();
    OUTLINED_FUNCTION_474();
    swift_retain();
    v11 = OUTLINED_FUNCTION_124_0();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v11);
    v12 = static MainActor.shared.getter();
    v13 = (_QWORD *)OUTLINED_FUNCTION_15();
    v14 = MEMORY[0x1E0DF06E8];
    v13[2] = v12;
    v13[3] = v14;
    v13[4] = v10;
    v13[5] = v2;
    v13[6] = v0;
    swift_release();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v15 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v15, (uint64_t)&static Logger.videoMessaging);
    v20 = OUTLINED_FUNCTION_8_86();
    Logger.logObject.getter();
    v16 = OUTLINED_FUNCTION_689();
    if (OUTLINED_FUNCTION_71_0(v0))
    {
      v17 = (uint8_t *)OUTLINED_FUNCTION_105();
      v21 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v17 = 136315138;
      v18 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v21);
      OUTLINED_FUNCTION_253();
      OUTLINED_FUNCTION_642();
      OUTLINED_FUNCTION_642();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v16, "Invalid request to stop video message recording for mode %s", v17);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_642();
  }
}

Swift::Void __swiftcall ConversationController.saveRecordedVideoMessage()()
{
  ConversationController.saveRecordedVideoMessage()();
}

Swift::Void __swiftcall ConversationController.discardRecordedVideoMessage()()
{
  ConversationController.discardRecordedVideoMessage()();
}

Swift::Void __swiftcall ConversationController.pauseRecordingVideoMessage()()
{
  ConversationController.discardRecordedVideoMessage()();
}

void ConversationController.discardRecordedVideoMessage()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  const char *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  OUTLINED_FUNCTION_572();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  if (*((_BYTE *)&v0->isa + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
  {
    v6 = OUTLINED_FUNCTION_415();
    __swift_storeEnumTagSinglePayload(v2, 1, 1, v6);
    OUTLINED_FUNCTION_48_2();
    v7 = OUTLINED_FUNCTION_8_86();
    v8 = static MainActor.shared.getter();
    v9 = (_QWORD *)OUTLINED_FUNCTION_15();
    v10 = MEMORY[0x1E0DF06E8];
    v9[2] = v8;
    v9[3] = v10;
    v9[4] = v7;
    OUTLINED_FUNCTION_396_1();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v11, (uint64_t)&static Logger.videoMessaging);
    v12 = OUTLINED_FUNCTION_44_18();
    OUTLINED_FUNCTION_629((uint64_t)v12);
    v13 = OUTLINED_FUNCTION_55_6();
    if (OUTLINED_FUNCTION_51_3(v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_728(4.8149e-34);
      v15 = OUTLINED_FUNCTION_633_0();
      OUTLINED_FUNCTION_664_0(v15, v16);
      OUTLINED_FUNCTION_31_3();
      OUTLINED_FUNCTION_256_4();
      OUTLINED_FUNCTION_256_4();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v1, v4, v14);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_256_4();
    OUTLINED_FUNCTION_17_41(v17);
  }
}

Swift::Void __swiftcall ConversationController.startRecordingVideoMessage()()
{
  ConversationController.saveRecordedVideoMessage()();
}

void ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_6_0();
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
  {
    v13 = OUTLINED_FUNCTION_415();
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v13);
    OUTLINED_FUNCTION_48_2();
    v14 = v0;
    OUTLINED_FUNCTION_1_28();
    swift_retain();
    v15 = static MainActor.shared.getter();
    v16 = (_QWORD *)OUTLINED_FUNCTION_15();
    v17 = MEMORY[0x1E0DF06E8];
    v16[2] = v15;
    v16[3] = v17;
    v16[4] = v14;
    v16[5] = v11;
    v16[6] = v9;
    v16[7] = v7;
    v16[8] = v5;
    v16[9] = v3;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v18 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v18, (uint64_t)&static Logger.videoMessaging);
    v23 = OUTLINED_FUNCTION_8_86();
    Logger.logObject.getter();
    v19 = OUTLINED_FUNCTION_689();
    if (OUTLINED_FUNCTION_71_0(v3))
    {
      v20 = (uint8_t *)OUTLINED_FUNCTION_105();
      v24 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v20 = 136315138;
      v21 = OUTLINED_FUNCTION_633_0();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v24);
      OUTLINED_FUNCTION_253();
      OUTLINED_FUNCTION_256_4();
      OUTLINED_FUNCTION_256_4();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v19, "Invalid request to prep for video message recording for mode %s", v20);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_256_4();
    OUTLINED_FUNCTION_17_41(v23);
  }
}

Swift::Void __swiftcall ConversationController.stopRecordingVideoMessage()()
{
  ConversationController.saveRecordedVideoMessage()();
}

void ConversationController.saveRecordedVideoMessage()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  const char *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  OUTLINED_FUNCTION_572();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  if (*((_BYTE *)&v0->isa + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
  {
    v6 = OUTLINED_FUNCTION_415();
    OUTLINED_FUNCTION_77_0(v2, v7, v8, v6);
    v9 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_299();
    v10 = OUTLINED_FUNCTION_48_2();
    swift_retain();
    static MainActor.shared.getter();
    OUTLINED_FUNCTION_577();
    v11 = (_QWORD *)OUTLINED_FUNCTION_15();
    v12 = MEMORY[0x1E0DF06E8];
    v11[2] = v10;
    v11[3] = v12;
    v11[4] = v9;
    swift_release();
    OUTLINED_FUNCTION_396_1();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    swift_release();
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v13, (uint64_t)&static Logger.videoMessaging);
    v14 = OUTLINED_FUNCTION_44_18();
    OUTLINED_FUNCTION_629((uint64_t)v14);
    v15 = OUTLINED_FUNCTION_55_6();
    if (OUTLINED_FUNCTION_51_3(v15))
    {
      v16 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_728(4.8149e-34);
      v17 = OUTLINED_FUNCTION_633_0();
      OUTLINED_FUNCTION_664_0(v17, v18);
      OUTLINED_FUNCTION_31_3();
      OUTLINED_FUNCTION_256_4();
      OUTLINED_FUNCTION_256_4();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v1, v4, v16);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_256_4();
    OUTLINED_FUNCTION_17_41(v19);
  }
}

uint64_t one-time initialization function for DidChangeIsWaitingOnFirstFrameNotification()
{
  uint64_t result;

  result = MEMORY[0x1C3B72E00](0xD00000000000002ALL, 0x80000001BD697AF0);
  static ConversationController.DidChangeIsWaitingOnFirstFrameNotification = result;
  return result;
}

id static ConversationController.DidChangeIsWaitingOnFirstFrameNotification.getter()
{
  if (one-time initialization token for DidChangeIsWaitingOnFirstFrameNotification != -1)
    swift_once();
  return (id)static ConversationController.DidChangeIsWaitingOnFirstFrameNotification;
}

unint64_t static ConversationController.DidChangeIsWaitingOnFirstFrameKey.getter()
{
  return 0xD000000000000021;
}

unint64_t static ConversationController.DidChangeIsWaitingOnFirstFrameUUIDKey.getter()
{
  return 0xD000000000000025;
}

BOOL ConversationController.ControlsMode.isScreenSharing.getter()
{
  return OUTLINED_FUNCTION_652();
}

BOOL static ConversationController.ControlsMode.== infix(_:_:)()
{
  return OUTLINED_FUNCTION_652();
}

BOOL ConversationController.ControlsMode.isAudioVideo.getter()
{
  return OUTLINED_FUNCTION_652();
}

uint64_t ConversationController.ControlsMode.debugDescription.getter(char a1)
{
  if (!a1)
    return 0x6C6F72746E6F632ELL;
  if (a1 == 1)
    return 0x69566F696475612ELL;
  return 0x536E65657263732ELL;
}

void ConversationController.ControlsMode.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void ConversationController.ControlsMode.hashValue.getter()
{
  unsigned __int8 v0;

  OUTLINED_FUNCTION_7_65();
  Hasher._combine(_:)(v0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ConversationController.ControlsMode()
{
  return static ConversationController.ControlsMode.== infix(_:_:)();
}

void protocol witness for Hashable.hashValue.getter in conformance ConversationController.ControlsMode()
{
  ConversationController.ControlsMode.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance ConversationController.ControlsMode(uint64_t a1)
{
  unsigned __int8 *v1;

  ConversationController.ControlsMode.hash(into:)(a1, *v1);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ConversationController.ControlsMode()
{
  char *v0;

  return ConversationController.ControlsMode.debugDescription.getter(*v0);
}

void ConversationController.localParticipant.getter(uint64_t a1@<X8>)
{
  ConversationController.videoMessageConversationUUID.getter(&OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant, (uint64_t)type metadata accessor for Participant, (void (*)(uint64_t, uint64_t, uint64_t))outlined init with copy of ConversationControlsAppLaunchButtonType, a1);
}

void ConversationController.videoMessageConversationUUID.getter(_QWORD *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = v4 + *a1;
  OUTLINED_FUNCTION_1();
  a3(v8, a4, a2);
  OUTLINED_FUNCTION_9_0();
}

void ConversationController.otherInvitedParticipants.getter()
{
  ParticipantsCollectionViewDataSource.onlineParticipants.getter();
}

void ConversationController.carPlayDisconnectRequiresLocalVideoEnable.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void ConversationController.screenSharingEndingRequiresLocalVideoEnable.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void ConversationController.showingInMiniWindowRequiresLocalVideoEnable.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void key path setter for ConversationController.momentsController : ConversationController(id *a1)
{
  ConversationController.momentsController.setter((uint64_t)*a1);
}

void ConversationController.momentsController.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController) = a1;

}

void ConversationController.momentsController.modify(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationController.momentsController.getter();
  OUTLINED_FUNCTION_0();
}

void ConversationController.momentsController.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    ConversationController.momentsController.setter((uint64_t)v3);

  }
  else
  {
    ConversationController.momentsController.setter((uint64_t)v2);
    OUTLINED_FUNCTION_36();
  }
}

void ConversationController.remoteAndAssociatedParticipants.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  v4 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  OUTLINED_FUNCTION_1();
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v5)
  {
    v6 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v7 = *(_QWORD *)v4 + v6;
    v8 = *(_QWORD *)(v2 + 72);
    OUTLINED_FUNCTION_16_31();
    v9 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v10 = OUTLINED_FUNCTION_396_1();
      OUTLINED_FUNCTION_224_0(v10, v11);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BD6441D0;
      OUTLINED_FUNCTION_224_0(v1, v12 + v6);
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      OUTLINED_FUNCTION_68_2(v1);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v9 + 16);
      if (__OFADD__(v14, v13))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(_QWORD *)(v9 + 24) >> 1)
        v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (*(_QWORD *)(v12 + 16))
      {
        v15 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v15 < v13)
          goto LABEL_23;
        v16 = v9 + v6 + v15 * v8;
        if (v12 + v6 < v16 + v13 * v8 && v16 < v12 + v6 + v13 * v8)
          goto LABEL_25;
        swift_arrayInitWithCopy();
        if (v13)
        {
          v18 = *(_QWORD *)(v9 + 16);
          v19 = __OFADD__(v18, v13);
          v20 = v18 + v13;
          if (v19)
            goto LABEL_24;
          *(_QWORD *)(v9 + 16) = v20;
        }
      }
      else if (v13)
      {
        goto LABEL_22;
      }
      OUTLINED_FUNCTION_27();
      v7 += v8;
      if (!--v5)
      {
        OUTLINED_FUNCTION_19_1();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    OUTLINED_FUNCTION_0_45();
    OUTLINED_FUNCTION_22_1();
    __break(1u);
  }
  else
  {
LABEL_20:
    OUTLINED_FUNCTION_52_1();
  }
}

void ConversationController.conversationState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ConversationController.conversationState : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ConversationController.conversationState.setter(uint64_t a1)
{
  MultiwayViewController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState, (void (*)(uint64_t))ConversationController.conversationState.didset);
}

uint64_t ConversationController.conversationState.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  void (**v6)(uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t);

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  result = swift_beginAccess();
  v5 = *v3;
  if (v5 != a1)
  {
    v6 = (void (**)(uint64_t, uint64_t))(v1
                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
    result = swift_beginAccess();
    v7 = *v6;
    if (*v6)
    {
      swift_retain();
      v7(a1, v5);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v7);
    }
  }
  return result;
}

void ConversationController.conversationState.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_25_65((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_53_43();
  OUTLINED_FUNCTION_18();
}

void ConversationController.conversationState.modify(uint64_t a1, uint64_t a2)
{
  MultiwayViewController.deviceOrientation.modify(a1, a2, ConversationController.conversationState.setter);
}

void ConversationController.conversationLetMeInRequestState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ConversationController.conversationLetMeInRequestState : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ConversationController.conversationLetMeInRequestState.setter(uint64_t a1)
{
  MultiwayViewController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState, (void (*)(uint64_t))ConversationController.conversationLetMeInRequestState.didset);
}

uint64_t ConversationController.conversationLetMeInRequestState.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v15;
  void (**v16)(uint64_t);
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for Participant(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
  result = swift_beginAccess();
  v12 = *v10;
  if (*v10 != a1)
  {
    if (a1 == 1 && v12 == 2)
    {
      v15 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      swift_beginAccess();
      outlined init with copy of ConversationControlsAppLaunchButtonType(v15, (uint64_t)v7, type metadata accessor for Participant);
      Participant.asRequestedApproval()();
    }
    else
    {
      if (a1 != 2 || v12 != 3)
        goto LABEL_14;
      v15 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      swift_beginAccess();
      outlined init with copy of ConversationControlsAppLaunchButtonType(v15, (uint64_t)v7, type metadata accessor for Participant);
      Participant.asReceivedApproval()();
    }
    outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for Participant);
    swift_beginAccess();
    outlined assign with take of Participant((uint64_t)v9, v15);
    swift_endAccess();
LABEL_14:
    v16 = (void (**)(uint64_t))(v2
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
    result = swift_beginAccess();
    v17 = *v16;
    if (*v16)
    {
      v18 = *v10;
      swift_retain();
      v17(v18);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v17);
    }
  }
  return result;
}

void ConversationController.conversationLetMeInRequestState.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_25_65((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_53_43();
  OUTLINED_FUNCTION_18();
}

void ConversationController.conversationLetMeInRequestState.modify(uint64_t a1, uint64_t a2)
{
  MultiwayViewController.deviceOrientation.modify(a1, a2, ConversationController.conversationLetMeInRequestState.setter);
}

void ConversationController.ignoreLetMeInRequests.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ConversationController.ignoreLetMeInRequests : ConversationController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ConversationController.ignoreLetMeInRequests.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests, (void (*)(uint64_t))ConversationController.ignoreLetMeInRequests.didset);
}

uint64_t ConversationController.ignoreLetMeInRequests.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  uint64_t result;
  uint64_t v5;
  void (**v6)(uint64_t);
  void (*v7)(uint64_t);

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests);
  result = swift_beginAccess();
  v5 = *v3;
  if ((_DWORD)v5 != v2)
  {
    v6 = (void (**)(uint64_t))(v1
                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
    result = swift_beginAccess();
    v7 = *v6;
    if (*v6)
    {
      swift_retain();
      v7(v5);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v7);
    }
  }
  return result;
}

void ConversationController.ignoreLetMeInRequests.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void ConversationController.ignoreLetMeInRequests.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))ConversationController.ignoreLetMeInRequests.setter);
}

void ConversationController.rejectedParticipantsCount.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ConversationController.rejectedParticipantsCount : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ConversationController.rejectedParticipantsCount.setter(uint64_t a1)
{
  MultiwayViewController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount, (void (*)(uint64_t))ConversationController.rejectedParticipantsCount.didset);
}

uint64_t ConversationController.rejectedParticipantsCount.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  void (**v6)(uint64_t);
  void (*v7)(uint64_t);

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount);
  result = swift_beginAccess();
  v5 = *v3;
  if (v5 != a1)
  {
    v6 = (void (**)(uint64_t))(v1
                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
    result = swift_beginAccess();
    v7 = *v6;
    if (*v6)
    {
      swift_retain();
      v7(v5);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v7);
    }
  }
  return result;
}

void ConversationController.rejectedParticipantsCount.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_25_65((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_53_43();
  OUTLINED_FUNCTION_18();
}

void ConversationController.rejectedParticipantsCount.modify(uint64_t a1, uint64_t a2)
{
  MultiwayViewController.deviceOrientation.modify(a1, a2, ConversationController.rejectedParticipantsCount.setter);
}

void ConversationController.deviceOrientation.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ConversationController.deviceOrientation : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t ConversationController.deviceOrientation.didset(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
  result = swift_beginAccess();
  if (*v3 != a1)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BD645380;
    v25[0] = a1;
    type metadata accessor for CNKDeviceOrientation(0);
    v6 = String.init<A>(reflecting:)();
    v8 = v7;
    v9 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
    v10 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v5 + 64) = v10;
    *(_QWORD *)(v5 + 32) = v6;
    *(_QWORD *)(v5 + 40) = v8;
    v25[0] = *v3;
    v11 = String.init<A>(reflecting:)();
    *(_QWORD *)(v5 + 96) = v9;
    *(_QWORD *)(v5 + 104) = v10;
    *(_QWORD *)(v5 + 72) = v11;
    *(_QWORD *)(v5 + 80) = v12;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v13 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    swift_beginAccess();
    if (*(char *)(v13 + 16) < 0)
      ConversationController.broadcastingState.setter();
    v14 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    swift_beginAccess();
    v15 = v14[3];
    v16 = v14[4];
    v17 = __swift_project_boxed_opaque_existential_1(v14, v15);
    v18 = *(_QWORD *)(v15 - 8);
    v19 = MEMORY[0x1E0C80A78](v17);
    v21 = (char *)&v25[-1] - v20;
    (*(void (**)(char *, __n128))(v18 + 16))((char *)&v25[-1] - v20, v19);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v16 + 32))(v25, v15, v16);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v15);
    v22 = v26;
    v23 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v23 + 48))(*v3, v22, v23);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  return result;
}

void ConversationController.deviceOrientation.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_25_65((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_53_43();
  OUTLINED_FUNCTION_18();
}

void ConversationController.deviceOrientation.modify(uint64_t a1, uint64_t a2)
{
  MultiwayViewController.deviceOrientation.modify(a1, a2, ConversationController.deviceOrientation.setter);
}

void ConversationController.didDeferStartCameraAction.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ConversationController.didDeferStartCameraAction : ConversationController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ConversationController.didDeferStartCameraAction.didset(char a1)
{
  uint64_t v1;
  int v2;
  _BYTE *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  const char *v8;
  uint64_t v9;

  v2 = a1 & 1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction);
  swift_beginAccess();
  if (*v3 != v2)
  {
    if (*v3)
    {
      if (one-time initialization token for conversationController != -1)
        swift_once();
      v4 = type metadata accessor for Logger();
      __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationController);
      v5 = Logger.logObject.getter();
      v6 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v5, v6))
        goto LABEL_12;
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      v8 = "Deferring start camera action until systemPreferredCamera is initialized";
    }
    else
    {
      if (one-time initialization token for conversationController != -1)
        swift_once();
      v9 = type metadata accessor for Logger();
      __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationController);
      v5 = Logger.logObject.getter();
      v6 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v5, v6))
        goto LABEL_12;
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      v8 = "Start camera action no longer deferred for systemPreferredCamera initialization";
    }
    _os_log_impl(&dword_1BD004000, v5, v6, v8, v7, 2u);
    MEMORY[0x1C3B751B8](v7, -1, -1);
LABEL_12:

  }
}

void ConversationController.didDeferStartCameraAction.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void ConversationController.didDeferStartCameraAction.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))ConversationController.didDeferStartCameraAction.setter);
}

void ConversationController.isUsingIPadExternalCamera.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ConversationController.isUsingIPadExternalCamera : ConversationController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ConversationController.isUsingIPadExternalCamera.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera, (void (*)(uint64_t))ConversationController.isUsingIPadExternalCamera.didset);
}

void ConversationController.isUsingIPadExternalCamera.didset(char a1)
{
  char *v1;
  int v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;

  v2 = a1 & 1;
  v3 = &v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
  swift_beginAccess();
  if (*v3 != v2)
  {
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationController);
    v5 = v1;
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      *(_DWORD *)v8 = 67109376;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v8 + 8) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl(&dword_1BD004000, v6, v7, "isUsingIPadExternalCamera changed from %{BOOL}d to %{BOOL}d", (uint8_t *)v8, 0xEu);
      MEMORY[0x1C3B751B8](v8, -1, -1);
    }
    else
    {

      v6 = v5;
    }

    ConversationController.selectFrontLocalParticipantCamera()();
    swift_beginAccess();
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
  }
}

Swift::Void __swiftcall ConversationController.selectFrontLocalParticipantCamera()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_96();
  v2 = v0;
  v3 = (__int128 *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
  OUTLINED_FUNCTION_1();
  if ((char)v3[1] < 0)
  {
    v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_379_2();
    v7 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    OUTLINED_FUNCTION_1();
    v8 = *(_QWORD *)(v7 + 24);
    OUTLINED_FUNCTION_574();
    v9 = *(_QWORD *)(v8 - 8);
    OUTLINED_FUNCTION_54_42();
    MEMORY[0x1E0C80A78](v10);
    v12 = (char *)&v20 - v11;
    OUTLINED_FUNCTION_93_4((uint64_t)&v20 - v11, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    v14 = OUTLINED_FUNCTION_318();
    v15(v14);
    OUTLINED_FUNCTION_6_9((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    v16 = v22;
    v17 = v23;
    __swift_project_boxed_opaque_existential_1(&v20, v22);
    v18 = *v6;
    v19 = OUTLINED_FUNCTION_748();
    (*(void (**)(_QWORD, uint64_t, BOOL, uint64_t, uint64_t))(v17 + 32))(0, v18, (v19 & 1) == 0, v16, v17);
    OUTLINED_FUNCTION_442_0();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v4 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v4 + 16) = xmmword_1BD6441D0;
    v5 = *((_BYTE *)v3 + 16);
    v20 = *v3;
    v21 = v5;
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_582_0();
    *(_QWORD *)(v4 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v4 + 32) = v3;
    *(_QWORD *)(v4 + 40) = v1;
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_53();
  }
  OUTLINED_FUNCTION_65_1();
}

void ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  char v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  _BOOL4 v59;
  unint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  __objc2_prop_list **p_base_props;
  char *v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  void *v91;
  NSObject *v92;
  os_log_type_t v93;
  const char *v94;
  uint8_t *v95;
  uint64_t v96;
  int v97;
  void (*v98)(uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  id v107;
  os_log_type_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  void *v113;
  os_log_t v114;
  os_log_type_t v115;
  const char *v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  char v121;
  char v122;
  uint64_t v123;
  _BYTE *v124;
  NSObject *v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  NSObject *v141;
  os_log_type_t v142;
  int v143;
  _BOOL4 v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  int v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  __int16 v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  char v176;
  uint64_t (*v177)(uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(uint64_t, uint64_t, uint64_t);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  void (*v192)(uint64_t);
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t (*v196)(_QWORD);
  char *v197;
  uint64_t v198;
  void (*v199)(uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  _BOOL4 v207;
  uint64_t v208;
  int v209;
  unsigned int v210;
  int v211;
  int v212;
  uint64_t v213;
  int v214;
  unsigned int v215;
  int v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  _BYTE *v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  int v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  __int128 v238;
  __int128 v239;
  unsigned __int8 v240;
  _BYTE v241[246];
  _QWORD v242[3];
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _BYTE v247[40];
  _DWORD v248[10];
  uint64_t v249[8];
  _OWORD v250[2];
  unsigned __int8 v251;
  __int128 v252;
  _BYTE v253[25];
  __int128 v254;
  __int128 v255;
  __int128 v256;
  _QWORD v257[5];
  _QWORD v258[4];
  unsigned __int8 v259;

  OUTLINED_FUNCTION_51_29();
  v4 = v0;
  LODWORD(v225) = v5;
  v7 = v6;
  v227 = v8;
  v10 = v9;
  OUTLINED_FUNCTION_238();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v233 = v12;
  v13 = OUTLINED_FUNCTION_33_0();
  v14 = *(_QWORD *)(v13 - 8);
  v236 = v13;
  v237 = v14;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_41();
  v235 = v16;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v201 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = OUTLINED_FUNCTION_14_2();
  v226 = *(char **)(v234 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_508_0();
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v201 - v23;
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_183();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_33_2();
  v228 = v7;
  v230 = v10;
  if ((v7 & 0x80) == 0)
  {
    v28 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_467(v28, v1);
    ConversationController.conversationIsAVLess.getter();
    v254 = 0u;
    v255 = 0u;
    v256 = 0u;
    memset(v257, 0, 26);
    v238 = 0uLL;
    *(_QWORD *)&v239 = 0;
    *((_QWORD *)&v239 + 1) = 1;
    bzero(&v240, 0xB1uLL);
    Participant.copresenceInfo.getter(v250);
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?((uint64_t *)v250);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v238, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    OUTLINED_FUNCTION_94(v1);
    v29 = OUTLINED_FUNCTION_261_2();
    outlined init with take of StagedCollaboration(v29, v30, type metadata accessor for Participant);
    v31 = 0;
    goto LABEL_65;
  }
  v224 = v19;
  v208 = v27;
  v205 = v1;
  v231 = v3;
  v229 = v2;
  v32 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
  OUTLINED_FUNCTION_1();
  v33 = *(_QWORD *)(v32 + 24);
  OUTLINED_FUNCTION_574();
  v232 = v4;
  v34 = *(_QWORD *)(v33 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v35);
  v37 = OUTLINED_FUNCTION_620(v36, v201);
  OUTLINED_FUNCTION_93_4((uint64_t)v37, v38, v39);
  OUTLINED_FUNCTION_138_10(v33);
  OUTLINED_FUNCTION_6_9(v32, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
  v40 = v232;
  v41 = (uint64_t)&v232[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  OUTLINED_FUNCTION_1();
  v42 = type metadata accessor for Participant;
  OUTLINED_FUNCTION_259(v41, (uint64_t)v24);
  Participant.videoInfo.getter();
  OUTLINED_FUNCTION_110((uint64_t)v24);
  outlined init with take of Any?((uint64_t)&v246, (uint64_t)v250, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  v223 = v41;
  if (*(_QWORD *)&v250[0])
  {
    v238 = v250[0];
    v239 = v250[1];
    *(_OWORD *)v241 = v252;
    *(_OWORD *)&v241[16] = *(_OWORD *)v253;
    *(_OWORD *)&v241[25] = *(_OWORD *)&v253[9];
    v240 = v251;
    if (v251 == BYTE1(v230))
    {
      v43 = 1;
      v44 = v224;
    }
    else
    {
      v44 = v224;
      if (one-time initialization token for conversationController != -1)
        swift_once();
      v81 = OUTLINED_FUNCTION_17_2();
      v82 = OUTLINED_FUNCTION_722(v81, (uint64_t)&static Logger.conversationController);
      OUTLINED_FUNCTION_613_0();
      v83 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_51_3(v83))
      {
        v84 = OUTLINED_FUNCTION_105();
        v222 = OUTLINED_FUNCTION_105();
        *(_QWORD *)&v254 = v222;
        *(_DWORD *)v84 = 136315650;
        LOBYTE(v249[0]) = *((_BYTE *)&OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_keyColor
                          + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode);
        v85 = String.init<A>(reflecting:)();
        v249[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v85, v86, (uint64_t *)&v254);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        OUTLINED_FUNCTION_30_4();
        *(_WORD *)(v84 + 12) = 2080;
        LOBYTE(v249[0]) = BYTE1(v10);
        v87 = String.init<A>(reflecting:)();
        v249[0] = OUTLINED_FUNCTION_665(v87, v88);
        OUTLINED_FUNCTION_7_53();
        OUTLINED_FUNCTION_25();
        *(_WORD *)(v84 + 22) = 2080;
        OUTLINED_FUNCTION_1();
        LOBYTE(v249[0]) = v240;
        v89 = String.init<A>(reflecting:)();
        v249[0] = OUTLINED_FUNCTION_665(v89, v90);
        OUTLINED_FUNCTION_7_53();
        OUTLINED_FUNCTION_25();
        OUTLINED_FUNCTION_534();
        OUTLINED_FUNCTION_28_62(v91, v92, v93, v94, v95);
        OUTLINED_FUNCTION_23_31();
        OUTLINED_FUNCTION_60();
      }

      v43 = 1;
      OUTLINED_FUNCTION_2_0();
      v240 = BYTE1(v10);
      if (static Platform.current.getter() != 3)
      {
        v43 = 1;
        if ((OUTLINED_FUNCTION_695() & 1) == 0)
        {
          HIBYTE(v238) = 1;
          v43 = 0;
        }
      }
    }
    OUTLINED_FUNCTION_2_0();
    v96 = BYTE8(v238);
    OUTLINED_FUNCTION_674_0();
    if ((v96 & 1) != 0)
    {
      OUTLINED_FUNCTION_524();
    }
    else
    {
      v42 = (uint64_t (*)(uint64_t))v256;
      __swift_project_boxed_opaque_existential_1(&v254, *((uint64_t *)&v255 + 1));
      v96 = OUTLINED_FUNCTION_23_11(*((uint64_t (**)(uint64_t, uint64_t))v42 + 3));
      OUTLINED_FUNCTION_524();
      v43 &= v96 ^ 1;
    }
    v97 = v225;
    if (v239 == 1)
    {
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_242_5();
      v98 = (void (*)(uint64_t))*((_QWORD *)v42 + 25);
      OUTLINED_FUNCTION_21_55();
      v99 = OUTLINED_FUNCTION_291_4();
      v98(v99);
      OUTLINED_FUNCTION_113();
      OUTLINED_FUNCTION_80_0();
      __swift_storeEnumTagSinglePayload(v100, v101, v102, v236);
      v96 = (uint64_t)&v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDResolvingCroppedAspectRatio];
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_438_0((uint64_t)v44, v103, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      swift_endAccess();
      v43 = 0;
    }
    v104 = v231;
    if (v97 == 2 || (v105 = v97 & 1, v105 == BYTE1(v239)))
    {
      if ((v43 & 1) != 0)
        goto LABEL_29;
    }
    else
    {
      if (one-time initialization token for conversationController != -1)
        swift_once();
      v106 = OUTLINED_FUNCTION_17_2();
      v107 = OUTLINED_FUNCTION_722(v106, (uint64_t)&static Logger.conversationController);
      OUTLINED_FUNCTION_621();
      v108 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_51_3(v108))
      {
        v109 = OUTLINED_FUNCTION_105();
        v249[0] = OUTLINED_FUNCTION_105();
        *(_DWORD *)v109 = 136315394;
        v225 = v109 + 4;
        LOBYTE(v248[0]) = v44[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
        v110 = OUTLINED_FUNCTION_432();
        v112 = OUTLINED_FUNCTION_359_1(v110, v111);
        OUTLINED_FUNCTION_523_0(v112);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v109 + 12) = 1024;
        v248[0] = v105;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_534();
        _os_log_impl(v113, v114, v115, v116, v117, 0x12u);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      BYTE1(v239) = v105;
    }
    v118 = v235;
    v119 = v237;
    OUTLINED_FUNCTION_8_7(v235, v223 + *(int *)(v234 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v237 + 16));
    ConversationController.scheduleResetVideoInfo(for:after:)();
    OUTLINED_FUNCTION_101(v118, *(uint64_t (**)(uint64_t, uint64_t))(v119 + 8));
LABEL_29:
    v120 = (uint64_t *)&v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
    OUTLINED_FUNCTION_1();
    v59 = *v120 != *((_QWORD *)&v239 + 1);
    if (*v120 != *((_QWORD *)&v239 + 1))
      *((_QWORD *)&v239 + 1) = *v120;
    v121 = ConversationController.isCameraMixedWithScreen.getter();
    p_base_props = &ParticipantVideoOverlayView.base_props;
    if ((v121 & 1) != v241[40])
    {
      v122 = v121;
      if (one-time initialization token for conversationController != -1)
        swift_once();
      v123 = OUTLINED_FUNCTION_17_2();
      v124 = OUTLINED_FUNCTION_722(v123, (uint64_t)&static Logger.conversationController);
      v125 = Logger.logObject.getter();
      v126 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_459_0(v125))
      {
        v127 = OUTLINED_FUNCTION_105();
        LODWORD(v225) = v126;
        v128 = v127;
        v249[0] = OUTLINED_FUNCTION_105();
        *(_DWORD *)v128 = 136315394;
        LOBYTE(v248[0]) = v124[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
        v129 = OUTLINED_FUNCTION_432();
        v131 = OUTLINED_FUNCTION_359_1(v129, v130);
        OUTLINED_FUNCTION_523_0(v131);
        OUTLINED_FUNCTION_137_0();

        OUTLINED_FUNCTION_25();
        *(_WORD *)(v128 + 12) = 2080;
        LOBYTE(v248[0]) = ConversationController.isCameraMixedWithScreen.getter() & 1;
        v132 = OUTLINED_FUNCTION_432();
        v134 = OUTLINED_FUNCTION_359_1(v132, v133);
        OUTLINED_FUNCTION_523_0(v134);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_26_6(&dword_1BD004000, v125, (os_log_type_t)v225, "[%s] Updating local participant videoInfo with isMixedWithScreen: %s", (uint8_t *)v128);
        OUTLINED_FUNCTION_25_6();
        OUTLINED_FUNCTION_60();
      }

      v241[40] = v122 & 1;
      v59 = 1;
    }
    if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
    {
      ConversationController.videoProviderForResizingLocal.getter(v249);
      v135 = &v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
      OUTLINED_FUNCTION_1();
      v136 = *v135;
      v137 = *v120;
      OUTLINED_FUNCTION_111(v223, v104);
      Participant.aspectRatio.getter();
      OUTLINED_FUNCTION_40_58(v104);
      AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(v249, 1, 1, v136, v137, (uint64_t)v248, (uint64_t)v247, 1.0, 1.0);
      outlined init with take of AspectRatio((uint64_t)&v241[7], (uint64_t)v258);
      if (!static AspectRatio.== infix(_:_:)((uint64_t)v247, (uint64_t)v258))
      {
        outlined init with take of AspectRatio((uint64_t)v247, (uint64_t)&v241[7]);
        v59 = 1;
      }
    }
    v53 = v238;
    v222 = BYTE8(v238);
    v72 = BYTE9(v238);
    v73 = BYTE10(v238);
    v74 = BYTE11(v238);
    v75 = BYTE12(v238);
    v71 = BYTE13(v238);
    v76 = BYTE14(v238);
    v77 = HIBYTE(v238);
    v78 = v239;
    v79 = BYTE1(v239);
    v70 = (char *)*((_QWORD *)&v239 + 1);
    v80 = v240;
    v60 = *(_QWORD *)&v241[7];
    v61 = *(_BYTE **)&v241[15];
    v63 = *(_QWORD *)&v241[23];
    v68 = *(_QWORD *)&v241[31];
    v67 = v241[39];
    v66 = v241[40];
    goto LABEL_41;
  }
  v45 = v244;
  __swift_project_boxed_opaque_existential_1(v242, v243);
  v222 = OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(v45 + 24));
  v46 = v245;
  __swift_project_boxed_opaque_existential_1(v242, v243);
  LODWORD(v225) = OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 24));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Participant.VideoProviderType, ParticipantVideoProvider)>);
  v47 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v47 + 16) = xmmword_1BD6441D0;
  *(_BYTE *)(v47 + 32) = 2;
  v48 = v243;
  v49 = v245;
  v50 = OUTLINED_FUNCTION_4_0(v242);
  v221 = v10 >> 8;
  v51 = (uint64_t)v50;
  *(_QWORD *)(v47 + 64) = v48;
  *(_QWORD *)(v47 + 72) = v49;
  __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(v47 + 40));
  OUTLINED_FUNCTION_93_4(v52, v51, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType();
  v53 = Dictionary.init(dictionaryLiteral:)();
  v54 = (uint64_t *)&v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
  OUTLINED_FUNCTION_1();
  v224 = (char *)*v54;
  ConversationController.videoProviderForResizingLocal.getter((uint64_t *)&v238);
  LOBYTE(v48) = ConversationController.isOneToOneModeEnabled.getter();
  v55 = &v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
  OUTLINED_FUNCTION_1();
  LOBYTE(v49) = *v55;
  v56 = *v54;
  v57 = v231;
  OUTLINED_FUNCTION_122(v41, v231);
  Participant.aspectRatio.getter();
  outlined destroy of AccountUpdateNotice(v57, type metadata accessor for Participant);
  v58 = v48 & 1;
  v59 = 1;
  AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(&v238, v58, 1, v49, v56, (uint64_t)v248, (uint64_t)v258, 1.0, 1.0);
  v60 = v258[0];
  v61 = (_BYTE *)v258[1];
  v63 = v258[2];
  v62 = v258[3];
  v64 = v40;
  v65 = v259;
  v66 = ConversationController.isCameraMixedWithScreen.getter();
  v67 = v65;
  v40 = v64;
  v68 = v62;
  p_base_props = (__objc2_prop_list **)(&ParticipantVideoOverlayView + 64);
  v70 = v224;
  v71 = v225;
  v72 = 0;
  v73 = 0;
  v74 = 0;
  v75 = 0;
  v76 = 0;
  v77 = 0;
  v78 = 0;
  v79 = 0;
  v80 = v221;
LABEL_41:
  v203 = v72;
  v204 = v73;
  v209 = v75;
  v210 = v74;
  v211 = v76;
  v212 = v77;
  v213 = v80;
  v214 = v79;
  v215 = v78;
  v216 = v66;
  v217 = v67;
  v218 = v68;
  v219 = v63;
  v220 = v61;
  v221 = v60;
  v224 = v70;
  LODWORD(v225) = v71;
  v207 = v59;
  if (p_base_props[467] != (__objc2_prop_list *)-1)
    swift_once();
  v138 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_182_3(v138, (uint64_t)&static Logger.conversationController);
  OUTLINED_FUNCTION_674_0();
  v139 = v40;
  OUTLINED_FUNCTION_16_31();
  v140 = v139;
  v141 = OUTLINED_FUNCTION_613_0();
  v142 = static os_log_type_t.default.getter();
  v143 = v142;
  v144 = os_log_type_enabled(v141, v142);
  v145 = v222;
  v206 = v53;
  if (v144)
  {
    v146 = OUTLINED_FUNCTION_105();
    v202 = OUTLINED_FUNCTION_105();
    v249[0] = v202;
    *(_DWORD *)v146 = 136315650;
    HIDWORD(v201) = v143;
    LOBYTE(v238) = v61[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    v147 = OUTLINED_FUNCTION_684();
    *(_QWORD *)&v238 = OUTLINED_FUNCTION_359_1(v147, v148);
    OUTLINED_FUNCTION_137_0();

    OUTLINED_FUNCTION_133();
    *(_WORD *)(v146 + 12) = 2080;
    *(_QWORD *)&v238 = v53;
    BYTE8(v238) = v145 & 1;
    BYTE9(v238) = v203;
    BYTE10(v238) = v204;
    BYTE11(v238) = v210;
    BYTE12(v238) = v209;
    BYTE13(v238) = v225 & 1;
    BYTE14(v238) = v211;
    HIBYTE(v238) = v212;
    LOBYTE(v239) = v215;
    BYTE1(v239) = v214;
    *((_QWORD *)&v239 + 1) = v224;
    v240 = v213;
    *(_QWORD *)&v241[7] = v221;
    *(_QWORD *)&v241[15] = v220;
    *(_QWORD *)&v241[23] = v219;
    *(_QWORD *)&v241[31] = v218;
    v241[39] = v217;
    v241[40] = v216 & 1;
    OUTLINED_FUNCTION_25_2();
    v149 = OUTLINED_FUNCTION_684();
    *(_QWORD *)&v238 = OUTLINED_FUNCTION_359_1(v149, v150);
    OUTLINED_FUNCTION_137_0();
    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_133();
    *(_WORD *)(v146 + 22) = 2080;
    v152 = *((_QWORD *)&v255 + 1);
    v151 = v256;
    OUTLINED_FUNCTION_76_11(&v254);
    LOBYTE(v238) = (*(uint64_t (**)(uint64_t, uint64_t))(v151 + 24))(v152, v151) & 1;
    v153 = OUTLINED_FUNCTION_684();
    *(_QWORD *)&v238 = OUTLINED_FUNCTION_359_1(v153, v154);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_524();
    OUTLINED_FUNCTION_28_62(&dword_1BD004000, v141, BYTE4(v201), "[%s] Updating local participant to use videoInfo: %s, isPreviewRunning: %s", (uint8_t *)v146);
    OUTLINED_FUNCTION_23_31();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_1();

  OUTLINED_FUNCTION_524();
  v155 = v205;
  v157 = v203;
  v156 = v204;
  v158 = v223;
  OUTLINED_FUNCTION_467(v223, v205);
  ConversationController.conversationIsAVLess.getter();
  if (v157)
    v159 = 256;
  else
    v159 = 0;
  v160 = v159 & 0xFFFFFFFFFFFFFFFELL | v145 & 1;
  v161 = 0x10000;
  if (!v156)
    v161 = 0;
  v162 = v160 | v161 | ((unint64_t)v210 << 24);
  v163 = 0x100000000;
  if (!v209)
    v163 = 0;
  v164 = 0x10000000000;
  if ((v225 & 1) == 0)
    v164 = 0;
  v165 = v163 | v164;
  v166 = 0x1000000000000;
  if (!v211)
    v166 = 0;
  v167 = v162 | v165 | v166;
  v168 = 0x100000000000000;
  if (!v212)
    v168 = 0;
  *(_QWORD *)&v254 = v206;
  *((_QWORD *)&v254 + 1) = v167 | v168;
  if (v214)
    v169 = 256;
  else
    v169 = 0;
  *(_QWORD *)&v255 = v169 | v215;
  *((_QWORD *)&v255 + 1) = v224;
  *(_QWORD *)&v256 = v213;
  *((_QWORD *)&v256 + 1) = v221;
  v257[0] = v220;
  v257[1] = v219;
  v257[2] = v218;
  if ((v216 & 1) != 0)
    v170 = 256;
  else
    v170 = 0;
  LOWORD(v257[3]) = v170 | v217;
  v238 = 0uLL;
  *(_QWORD *)&v239 = 0;
  *((_QWORD *)&v239 + 1) = 1;
  bzero(&v240, 0xB1uLL);
  v171 = v208;
  OUTLINED_FUNCTION_467(v158, v208);
  Participant.captionInfo.getter();
  OUTLINED_FUNCTION_56_33();
  OUTLINED_FUNCTION_94(v171);
  Participant.copresenceInfo.getter(v249);
  v3 = v231;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v249);
  v172 = OUTLINED_FUNCTION_311_0();
  outlined consume of Participant.CaptionInfo?(v172);
  OUTLINED_FUNCTION_54_1();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v238, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  OUTLINED_FUNCTION_94(v155);
  v2 = v229;
  outlined init with take of StagedCollaboration(v3, v229, type metadata accessor for Participant);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v242);
  v31 = v207;
  v4 = v232;
LABEL_65:
  v173 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  OUTLINED_FUNCTION_1();
  v174 = v233;
  OUTLINED_FUNCTION_259(v173, v233);
  OUTLINED_FUNCTION_153_1();
  static Participant.State.== infix(_:_:)();
  v176 = v175;
  OUTLINED_FUNCTION_110(v174);
  if (v31 || (v176 & 1) == 0)
  {
    OUTLINED_FUNCTION_2_0();
    outlined assign with copy of Participant.State(v2, v173, type metadata accessor for Participant);
    OUTLINED_FUNCTION_675_0();
    v179 = *(_QWORD *)(ConversationController.visibleParticipants.getter() + 16);
    if (v179)
    {
      v231 = v3;
      v229 = v2;
      OUTLINED_FUNCTION_30_36();
      v182 = v180 + v181;
      v183 = v4;
      v185 = *(_QWORD *)(v184 + 72);
      v186 = *(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 16);
      v232 = v183;
      v233 = v180;
      v226 = v183;
      v187 = 0;
      v188 = v235;
      v189 = v236;
      while (1)
      {
        v186(v188, v173 + *(int *)(v234 + 20), v189);
        v190 = OUTLINED_FUNCTION_443_1();
        v191 = OUTLINED_FUNCTION_318();
        v192(v191);
        if ((v190 & 1) != 0)
          break;
        ++v187;
        v182 += v185;
        if (v179 == v187)
        {
          swift_bridgeObjectRelease();

          v3 = v231;
          v4 = v232;
          goto LABEL_76;
        }
      }
      swift_bridgeObjectRelease();
      v193 = v226;

      v194 = &v193[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant];
      OUTLINED_FUNCTION_1();
      v3 = v231;
      v4 = v232;
      if (*(_QWORD *)v194)
      {
        OUTLINED_FUNCTION_157_2(v173, v231);
        swift_retain();
        OUTLINED_FUNCTION_803();
        OUTLINED_FUNCTION_2_125();
        v195 = OUTLINED_FUNCTION_261_2();
        outlined destroy of AccountUpdateNotice(v195, v196);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_76:
    v197 = &v4[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
    v198 = OUTLINED_FUNCTION_2_0();
    v199 = *(void (**)(uint64_t))v197;
    if (!*(_QWORD *)v197)
    {
      OUTLINED_FUNCTION_43_19(v198, type metadata accessor for Participant);
      OUTLINED_FUNCTION_675_0();
      goto LABEL_79;
    }
    OUTLINED_FUNCTION_675_0();
    OUTLINED_FUNCTION_111(v173, v3);
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v200 = OUTLINED_FUNCTION_348();
    v199(v200);
    OUTLINED_FUNCTION_11_14((uint64_t)v199);
    OUTLINED_FUNCTION_40_58(v3);
    v178 = OUTLINED_FUNCTION_153_1();
  }
  else
  {
    v177 = type metadata accessor for Participant;
    v178 = v2;
  }
  outlined destroy of AccountUpdateNotice(v178, v177);
LABEL_79:
  OUTLINED_FUNCTION_7_7();
}

void ConversationController.isUsingIPadExternalCamera.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void ConversationController.isUsingIPadExternalCamera.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))ConversationController.isUsingIPadExternalCamera.setter);
}

Swift::Bool __swiftcall ConversationController.updateIsUsingIPadExternalCamera()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  Swift::Bool result;
  _BYTE v10[80];
  _QWORD v11[10];
  _BYTE __dst[74];

  v2 = v0;
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults + 8);
  v5 = OUTLINED_FUNCTION_15_6();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 624))(v5, v4) & 1) != 0)
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

    if (v7 == (id)1)
    {
      v8 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_259(v8, v1);
      Participant.videoInfo.getter();
      OUTLINED_FUNCTION_110(v1);
      outlined init with take of Any?((uint64_t)v10, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v11[0])
      {
        memcpy(__dst, v11, sizeof(__dst));
        Participant.VideoInfo.cameraType.getter();
        outlined release of LinearGradient((uint64_t)v10);
      }
    }
  }
  OUTLINED_FUNCTION_91();
  return result;
}

void ConversationController._captionsRecognizerShouldBeRunning.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void ConversationController._captionsRecognizerShouldBeRunning.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationController.captionsRecognizerShouldBeRunning.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void ConversationController.captionsRecognizerShouldBeRunning.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))ConversationController.captionsRecognizerShouldBeRunning.setter);
}

void ConversationController.isLocallySharingScreen.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_72_9();
  OUTLINED_FUNCTION_5_80();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_9_0();
}

void ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.didset(char a1)
{
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;

  if (*((_BYTE *)v1
       + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo) != (a1 & 1))
  {
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationController);
    v11 = v1;
    v3 = Logger.logObject.getter();
    v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      v12 = v6;
      *(_DWORD *)v5 = 136315394;
      v7 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2080;
      v9 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v3, v4, "[%s] set isOneToOneCallCenterUpdateWaitingForNonSquareVideo = %s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v6, -1, -1);
      MEMORY[0x1C3B751B8](v5, -1, -1);

    }
    else
    {

    }
  }
}

void ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.setter(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1
                + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo) = a1;
  ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.didset(v2);
}

void ConversationController.isOneToOneModeEnabledByCallCenter.didset()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter) & 1) == 0)
    ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.setter(0);
}

Swift::Void __swiftcall ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_408_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_23_36();
  v24 = v7;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_58_5();
  type metadata accessor for DispatchTime();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_96_14();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_138_0();
  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags), sel_uPlusOneFullBleedHandoffEnabled))
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1
      && (ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
    {
      v22 = OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff;
      if ((*(_BYTE *)(v0
                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff) & 1) == 0
        && ((ConversationController.conversationHandoffInProgress.getter() & 1) != 0
         || ConversationController.conversationMergedRemoteMembersCount.getter() == 1
         && ConversationController.conversationActiveRemoteParticipantsCount.getter() == 2))
      {
        if (one-time initialization token for conversationController != -1)
          swift_once();
        v11 = OUTLINED_FUNCTION_17_2();
        __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationController);
        v21 = OUTLINED_FUNCTION_762();
        Logger.logObject.getter();
        v18 = OUTLINED_FUNCTION_12_0();
        if (os_log_type_enabled((os_log_t)v0, v18))
        {
          v19 = (uint8_t *)OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_105();
          *(_DWORD *)v19 = 136315138;
          v12 = String.init<A>(reflecting:)();
          OUTLINED_FUNCTION_314_2(v12, v13);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v18, "[%s] U+1 Handoff detected, enabling show last/paused frame", v19);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }

        *(_BYTE *)(v0 + v22) = 1;
        OUTLINED_FUNCTION_59(v14, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        v23 = (void *)OUTLINED_FUNCTION_7_22();
        static DispatchTime.now()();
        MEMORY[0x1C3B72C50](v4, 10.0);
        v20 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
        OUTLINED_FUNCTION_371(v4, v20);
        v15 = OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_475(v15);
        swift_unknownObjectWeakInit();
        v16 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
        swift_release();
        OUTLINED_FUNCTION_269();
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
        OUTLINED_FUNCTION_31_11();
        OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        OUTLINED_FUNCTION_332_4();
        MEMORY[0x1C3B735B0](v3, v2, v1, v16);
        _Block_release(v16);

        OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
        OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
        v17 = OUTLINED_FUNCTION_202_0();
        ((void (*)(uint64_t))v20)(v17);
      }
    }
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationController.isOneToOneModeInferred.getter()
{
  uint64_t v0;
  _BOOL4 v1;

  v1 = ConversationController.conversationMergedRemoteMembersCount.getter() == 1
    && !ConversationController.isLinkCall.getter();
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags), sel_uPlusOneFullBleedHandoffEnabled) & v1;
}

uint64_t ConversationController.conversationMergedRemoteMembersCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  ConversationController.lookupActiveConversation()();
  if (v6)
  {
    outlined init with take of Notice(&v5, (uint64_t)v7);
    v0 = v8;
    v1 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v0, v1);
    v3 = specialized Set.count.getter(v2);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v5, &demangling cache variable for type metadata for Conversation?);
    return 0;
  }
  return v3;
}

BOOL ConversationController.isLinkCall.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BOOL8 v3;
  __int128 v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  ConversationController.lookupActiveConversation()();
  if (v6)
  {
    outlined init with take of Notice(&v5, (uint64_t)v7);
    v0 = v8;
    v1 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v2 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 216))(v0, v1);
    v3 = v2 != 0;
    if (v2)

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v5, &demangling cache variable for type metadata for Conversation?);
    return 0;
  }
  return v3;
}

uint64_t ConversationController.isConnecting.getter()
{
  char v0;
  char v1;

  OUTLINED_FUNCTION_829();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_242_5();
  OUTLINED_FUNCTION_21_55();
  v0 = OUTLINED_FUNCTION_214_3();
  OUTLINED_FUNCTION_113();
  if ((v0 & 1) != 0)
    ConversationController.isWaitingOnFirstRemoteFrame.getter();
  else
    v1 = 1;
  return v1 & 1;
}

void ConversationController.momentsLocallyAvailable.getter()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_83_17();
  if (!v0)
    goto LABEL_15;
  OUTLINED_FUNCTION_311_5();
  if (v12)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    v4 = OUTLINED_FUNCTION_97();
    if ((v4 & 1) != 0)
    {
      if (OUTLINED_FUNCTION_123(v4, sel_state) != (id)3)
        goto LABEL_12;
      v5 = OUTLINED_FUNCTION_123(3, sel_mergedActiveRemoteParticipants);
      OUTLINED_FUNCTION_615_0();
      OUTLINED_FUNCTION_696(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
      OUTLINED_FUNCTION_239_2();
      v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      v7 = specialized Set.count.getter(v6);
      OUTLINED_FUNCTION_53();
      if (v7 >= 1)
      {
        v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD338]), sel_initWithConversation_, v11);
        v9 = ConversationController.momentsController.getter();
        v10 = objc_msgSend(v9, sel_capabilitiesForProvider_, v8);

        objc_msgSend(v10, sel_availability);
        OUTLINED_FUNCTION_26_2();

      }
      else
      {
LABEL_12:
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_255();

      }
      goto LABEL_15;
    }
  }
  else
  {
    OUTLINED_FUNCTION_305(v1, &demangling cache variable for type metadata for Conversation?, v2);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_55_0();
LABEL_15:
  OUTLINED_FUNCTION_10_10();
}

void ConversationController.shouldShowDeskViewCameras.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_311_5();
  if (v10)
  {
    v0 = (void *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    OUTLINED_FUNCTION_59((uint64_t)v0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    v3 = OUTLINED_FUNCTION_97();
    if ((v3 & 1) != 0)
    {
      v0 = v9;
      if (OUTLINED_FUNCTION_123(v3, sel_state) == (id)3)
        ConversationController.hasAvailableDeskViewCameras.getter();
      goto LABEL_10;
    }
  }
  else
  {
    OUTLINED_FUNCTION_305(v1, &demangling cache variable for type metadata for Conversation?, v2);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v4, (uint64_t)&static Logger.conversationKit);
  v5 = OUTLINED_FUNCTION_31_6();
  if (OUTLINED_FUNCTION_13_0(v5))
  {
    v6 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v6);
    OUTLINED_FUNCTION_14_14(&dword_1BD004000, v7, v8, "Could not find conversation to check desk view cameras");
    OUTLINED_FUNCTION_60();
  }
LABEL_10:

  OUTLINED_FUNCTION_14_1();
}

uint64_t ConversationController.broadcastingState.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_1();
  return *(_QWORD *)v1;
}

__n128 key path getter for ConversationController.broadcastingState : ConversationController@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
  swift_beginAccess();
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

void key path setter for ConversationController.broadcastingState : ConversationController()
{
  ConversationController.broadcastingState.setter();
}

void ConversationController.broadcastingState.didset(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  void (**v22)(uint64_t, unint64_t, unint64_t, uint64_t);
  void (*v23)(uint64_t, unint64_t, unint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  BOOL v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  unsigned __int8 v37;

  v7 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v7);
  v35 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (unint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
  swift_beginAccess();
  v10 = *v9;
  v11 = *((unsigned __int8 *)v9 + 16);
  if ((a3 & 0x80) != 0)
  {
    if ((v11 & 0x80) != 0)
    {
      v29 = v10 & 1;
      v30 = (unsigned __int16)(v10 ^ a1) & 0xFF00;
      v31 = ((a1 & 1) == 0) != v29 && v30 == 0;
      v32 = v31 && v9[1] == a2;
      if (v32 && ((((a3 & 1) == 0) ^ v11) & 1) != 0)
        return;
    }
  }
  else if ((v11 & 0x80) == 0
         && ((((a1 & 1) == 0) ^ v10) & 1) != 0
         && ((a1 & 0x100) == 0) != ((v10 >> 8) & 1))
  {
    return;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BD645380;
  *(_QWORD *)&v36 = a1;
  *((_QWORD *)&v36 + 1) = a2;
  v37 = a3;
  v13 = String.init<A>(reflecting:)();
  v15 = v14;
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v17 = lazy protocol witness table accessor for type String and conformance String();
  v34 = a1;
  v18 = v17;
  *(_QWORD *)(v12 + 64) = v17;
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  v19 = *((_BYTE *)v9 + 16);
  v36 = *(_OWORD *)v9;
  v37 = v19;
  v20 = String.init<A>(reflecting:)();
  *(_QWORD *)(v12 + 96) = v16;
  *(_QWORD *)(v12 + 104) = v18;
  *(_QWORD *)(v12 + 72) = v20;
  *(_QWORD *)(v12 + 80) = v21;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (((_BYTE)v9[2] & a3 & 0x80) != 0 && (((unsigned __int16)*v9 ^ (unsigned __int16)v34) & 0xFF00) != 0)
    *(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame) = 1;
  ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
  v22 = (void (**)(uint64_t, unint64_t, unint64_t, uint64_t))(v3
                                                                                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  swift_beginAccess();
  v23 = *v22;
  if (*v22)
  {
    v24 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    swift_beginAccess();
    v25 = v35;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v24, v35, type metadata accessor for Participant);
    v26 = *v9;
    v27 = v9[1];
    v28 = *((unsigned __int8 *)v9 + 16);
    swift_retain();
    v23(v25, v26, v27, v28);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v23);
    outlined destroy of AccountUpdateNotice(v25, type metadata accessor for Participant);
  }
}

void ConversationController.broadcastingState.modify(_QWORD *a1)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)malloc(0x38uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 6) = v1;
  v4 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  OUTLINED_FUNCTION_1();
  *(_OWORD *)(v3 + 24) = *(_OWORD *)v4;
  v3[40] = *(_BYTE *)(v4 + 16);
  OUTLINED_FUNCTION_18();
}

void ConversationController.broadcastingState.modify(void **a1)
{
  void *v1;

  v1 = *a1;
  ConversationController.broadcastingState.setter();
  OUTLINED_FUNCTION_11(v1);
}

id ConversationController.videoMessageController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
}

uint64_t ConversationController.isCameraMixedWithScreen.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;

  ConversationController.lookupActiveConversation()();
  v0 = v4;
  if (v4)
  {
    v1 = v5;
    __swift_project_boxed_opaque_existential_1(v3, v4);
    LOBYTE(v0) = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 328))(v0, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v3, &demangling cache variable for type metadata for Conversation?);
  }
  return v0 & 1;
}

void ConversationController.OneToOneModeChangeSource.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ConversationController.OneToOneModeChangeSource(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ConversationController.OneToOneModeChangeSource.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance ConversationController.OneToOneModeChangeSource()
{
  unsigned __int8 *v0;

  return ConversationController.OneToOneModeChangeSource.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ConversationController.OneToOneModeChangeSource(uint64_t a1)
{
  char *v1;

  ConversationController.OneToOneModeChangeSource.hash(into:)(a1, *v1);
}

void ConversationController.OneToOneModeChangeSource.hashValue.getter()
{
  char v0;

  OUTLINED_FUNCTION_7_65();
  Hasher._combine(_:)(v0 & 1);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t key path getter for ConversationController.didAddVisibleParticipant : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didAddVisibleParticipant : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didAddVisibleParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.didAddVisibleParticipant.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didAddVisibleParticipant.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didRemoveVisibleParticipant : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didRemoveVisibleParticipant : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didRemoveVisibleParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.didRemoveVisibleParticipant.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didRemoveVisibleParticipant.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didRemoveAllVisibleParticipants : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didRemoveAllVisibleParticipants : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didRemoveAllVisibleParticipants.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didRemoveAllVisibleParticipants.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didRemoveAllVisibleParticipants.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didFinishMigratingConversations : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didFinishMigratingConversations : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didFinishMigratingConversations.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didFinishMigratingConversations.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didFinishMigratingConversations.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateVisibleParticipant : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateVisibleParticipant : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateVisibleParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.didUpdateVisibleParticipant.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didUpdateVisibleParticipant.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.visibleParticipantDidBecomeActive : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.visibleParticipantDidBecomeActive : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.visibleParticipantDidBecomeActive.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.visibleParticipantDidBecomeActive.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.visibleParticipantDidBecomeActive.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.visibleParticipantDidBecomeInactive : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.visibleParticipantDidBecomeInactive : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.visibleParticipantDidBecomeInactive.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.visibleParticipantDidBecomeInactive.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.visibleParticipantDidBecomeInactive.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.visibleParticipantKickableStatusDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.visibleParticipantKickableStatusDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.visibleParticipantKickableStatusDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.visibleParticipantKickableStatusDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.visibleParticipantKickableStatusDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didStartVideoForVisibleParticipant : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didStartVideoForVisibleParticipant : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didStartVideoForVisibleParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.didStartVideoForVisibleParticipant.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didStartVideoForVisibleParticipant.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateVisibleParticipantScreenInfo : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateVisibleParticipantScreenInfo : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t key path getter for ConversationController.participantsMediaPrioritiesDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.participantsMediaPrioritiesDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.participantsMediaPrioritiesDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.participantsMediaPrioritiesDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.participantsMediaPrioritiesDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.participantDidReact : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @guaranteed Data?) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.participantDidReact : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Data?) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.participantDidReact.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.participantDidReact.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.participantDidReact.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.participantDidStopReacting : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.participantDidStopReacting : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.participantDidStopReacting.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.participantDidStopReacting.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.participantDidStopReacting.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.participantAudioPowerDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, void (**a2)(uint64_t a1, float *a2)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, float *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Float) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)(uint64_t, float *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.participantAudioPowerDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, float);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Float) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.participantAudioPowerDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.participantAudioPowerDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.participantAudioPowerDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.mutedTalkerDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.mutedTalkerDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.mutedTalkerDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.mutedTalkerDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.mutedTalkerDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.audioRouteDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.audioRouteDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.audioRouteDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.audioRouteDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.audioRouteDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.cameraBlurEnabledDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraBlurEnabledDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraBlurEnabledDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.cameraBlurEnabledDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.cameraBlurEnabledDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.cameraZoomAvailabiltyDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraZoomAvailabiltyDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraZoomAvailabiltyDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.cameraZoomAvailabiltyDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.cameraZoomAvailabiltyDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.localCameraUIDDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@guaranteed Call) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.localCameraUIDDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.localCameraUIDDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.localCameraUIDDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.localCameraUIDDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.cameraListDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraListDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraListDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.cameraListDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.cameraListDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.cameraOrientationUpdateDidGetSnapshot : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraOrientationUpdateDidGetSnapshot : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraOrientationUpdateDidGetSnapshot.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.cameraOrientationUpdateDidGetSnapshot.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.cameraOrientationUpdateDidGetSnapshot.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.cameraCinematicFramingAvailabilityDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraCinematicFramingAvailabilityDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraCinematicFramingAvailabilityDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.cameraCinematicFramingAvailabilityDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.cameraCinematicFramingAvailabilityDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.cameraCinematicFramingEnabledDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraCinematicFramingEnabledDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraCinematicFramingEnabledDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.cameraCinematicFramingEnabledDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.cameraCinematicFramingEnabledDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.cameraReactionEffectsEnabledDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraReactionEffectsEnabledDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraReactionEffectsEnabledDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.cameraReactionEffectsEnabledDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.cameraReactionEffectsEnabledDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.cameraStudioLightEnabledDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraStudioLightEnabledDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraStudioLightEnabledDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.cameraStudioLightEnabledDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.cameraStudioLightEnabledDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.carPlayConnectedDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.carPlayConnectedDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.carPlayConnectedDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.carPlayConnectedDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.carPlayConnectedDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.oneToOneModeDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, void (**a2)(unsigned __int8 *a1, unsigned __int8 *a2)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unsigned __int8 *, unsigned __int8 *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool, @unowned ConversationController.OneToOneModeChangeSource) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)(unsigned __int8 *, unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.oneToOneModeDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char, char);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed ConversationController.OneToOneModeChangeSource) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed ConversationController.OneToOneModeChangeSource) -> (@out ())(char a1, char a2, uint64_t (*a3)(char *, char *))
{
  char v4;
  char v5;

  v5 = a1;
  v4 = a2 & 1;
  return a3(&v5, &v4);
}

uint64_t ConversationController.oneToOneModeDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.oneToOneModeDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.oneToOneModeDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.isTrackingActiveConversationDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.isTrackingActiveConversationDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.isTrackingActiveConversationDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.isTrackingActiveConversationDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.isTrackingActiveConversationDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.avModeDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.avModeDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.avModeDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.avModeDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.avModeDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.resolvedAudioVideoModeDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.resolvedAudioVideoModeDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [UUID : IDSCapabilitiesChecker.Capabilities]) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.resolvedAudioVideoModeDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.resolvedAudioVideoModeDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.resolvedAudioVideoModeDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.isWaitingOnFirstRemoteFrameDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.isWaitingOnFirstRemoteFrameDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.isWaitingOnFirstRemoteFrameDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.isWaitingOnFirstRemoteFrameDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.isWaitingOnFirstRemoteFrameDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.activitiesDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.activitiesDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [UUID : IDSCapabilitiesChecker.Capabilities]) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.activitiesDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.activitiesDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.activitiesDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.collaborationNoticePosted : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed UITapGestureRecognizer) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.collaborationNoticePosted : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed UITapGestureRecognizer) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.collaborationNoticePosted.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.collaborationNoticePosted.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.collaborationNoticePosted.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.screenSharingRequestsChanged : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.screenSharingRequestsChanged : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.screenSharingRequestsChanged.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.screenSharingRequestsChanged.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.screenSharingRequestsChanged.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.audioPausedDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, void (**a2)(uint64_t a1, unsigned __int8 *a2)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, unsigned __int8 *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned CameraPosition) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)(uint64_t, unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.audioPausedDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed CameraPosition) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.audioPausedDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.audioPausedDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.audioPausedDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.bluetoothAudioFormatChanged : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.bluetoothAudioFormatChanged : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.bluetoothAudioFormatChanged.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.bluetoothAudioFormatChanged.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.bluetoothAudioFormatChanged.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateLocalParticipant : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned BroadcastingState) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateLocalParticipant : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed BroadcastingState) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateLocalParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.didUpdateLocalParticipant.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.didUpdateLocalParticipant.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateLocalMemberAuthorizedToChangeGroupMembership : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateLocalMemberAuthorizedToChangeGroupMembership : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateLocalMemberAuthorizedToChangeGroupMembership.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didUpdateLocalMemberAuthorizedToChangeGroupMembership.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didUpdateLocalMemberAuthorizedToChangeGroupMembership.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateLocalParticipantCameraPosition : ConversationController@<X0>(_QWORD *a1@<X0>, void (**a2)(unsigned __int8 *a1)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unsigned __int8 *);

  v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = _sSbIegy_SbytIegnr_TRTA_0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)(unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateLocalParticipantCameraPosition : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CameraPosition) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateLocalParticipantCameraPosition.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.didUpdateLocalParticipantCameraPosition.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.didUpdateLocalParticipantCameraPosition.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateRecordingLocalVideo : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateRecordingLocalVideo : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateRecordingLocalVideo.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didUpdateRecordingLocalVideo.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didUpdateRecordingLocalVideo.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didFinishWindowResize : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didFinishWindowResize : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didFinishWindowResize.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didFinishWindowResize.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didFinishWindowResize.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateLocalScreenSharing : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateLocalScreenSharing : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateLocalScreenSharing.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didUpdateLocalScreenSharing.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didUpdateLocalScreenSharing.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateHasRingingCalls : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateHasRingingCalls : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateHasRingingCalls.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didUpdateHasRingingCalls.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didUpdateHasRingingCalls.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateWantsHoldMusic : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateWantsHoldMusic : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateWantsHoldMusic.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didUpdateWantsHoldMusic.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didUpdateWantsHoldMusic.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didStartVideoForLocalParticipant : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned BroadcastingState) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didStartVideoForLocalParticipant : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed BroadcastingState) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didStartVideoForLocalParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.didStartVideoForLocalParticipant.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.didStartVideoForLocalParticipant.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.conversationStateDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD *, _QWORD *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned TUConversationState, @unowned TUConversationState) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.conversationStateDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUConversationState, @in_guaranteed TUConversationState) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.conversationStateDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.conversationStateDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.conversationStateDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.conversationLetMeInRequestStateDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.conversationLetMeInRequestStateDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.conversationLetMeInRequestStateDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.conversationLetMeInRequestStateDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.conversationLetMeInRequestStateDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.conversationIgnoreLetMeInRequestsDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.conversationIgnoreLetMeInRequestsDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.conversationIgnoreLetMeInRequestsDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.conversationIgnoreLetMeInRequestsDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.conversationIgnoreLetMeInRequestsDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.conversationRejectedParticipantsCountDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.conversationRejectedParticipantsCountDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [UUID : IDSCapabilitiesChecker.Capabilities]) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.conversationRejectedParticipantsCountDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.conversationRejectedParticipantsCountDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.conversationRejectedParticipantsCountDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didAddPendingParticipant : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didAddPendingParticipant : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didAddPendingParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didAddPendingParticipant.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didAddPendingParticipant.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didRemovePendingParticipant : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didRemovePendingParticipant : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didRemovePendingParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didRemovePendingParticipant.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didRemovePendingParticipant.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didApprovePendingParticipant : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didApprovePendingParticipant : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didApprovePendingParticipant.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didApprovePendingParticipant.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didApprovePendingParticipant.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateParticipantAVMode : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateParticipantAVMode : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateParticipantAVMode.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didUpdateParticipantAVMode.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didUpdateParticipantAVMode.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didInviteOtherParticipants : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Participant]) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didInviteOtherParticipants : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [Participant]) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didInviteOtherParticipants.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.didInviteOtherParticipants.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.didInviteOtherParticipants.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.cameraPositionDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, void (**a2)(uint64_t a1, unsigned __int8 *a2)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, unsigned __int8 *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned CameraPosition) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)(uint64_t, unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.cameraPositionDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, char, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed CameraPosition) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.cameraPositionDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.cameraPositionDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.cameraPositionDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.groupNameAndPhotoDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @guaranteed Data?) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.groupNameAndPhotoDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Data?) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.groupNameAndPhotoDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.groupNameAndPhotoDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.groupNameAndPhotoDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.sessionActionNoticePosted : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, _QWORD *, uint64_t);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @guaranteed TUConversationNotice, @unowned TUScreenShareDeviceFamily?) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.sessionActionNoticePosted : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @in_guaranteed TUConversationNotice, @in_guaranteed TUScreenShareDeviceFamily?) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @in_guaranteed TUConversationNotice, @in_guaranteed TUScreenShareDeviceFamily?) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t *, uint64_t *))
{
  uint64_t v7;
  char v8;
  uint64_t v9;

  v9 = a3;
  v7 = a4;
  v8 = a5 & 1;
  return a6(a1, a2, &v9, &v7);
}

uint64_t ConversationController.sessionActionNoticePosted.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.sessionActionNoticePosted.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.sessionActionNoticePosted.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.appLaunchStateChanged : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Activity, @unowned TUConversationActivitySessionApplicationState) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.appLaunchStateChanged : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Activity, @in_guaranteed TUConversationActivitySessionApplicationState) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.appLaunchStateChanged.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.appLaunchStateChanged.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.appLaunchStateChanged.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.willTakeMoment : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.willTakeMoment : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.willTakeMoment.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.willTakeMoment.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.willTakeMoment.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.shouldPauseOnFirstLocalVideoFrame : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> (@unowned Bool)partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.shouldPauseOnFirstLocalVideoFrame : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> (@out Bool)partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.shouldPauseOnFirstLocalVideoFrame.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.shouldPauseOnFirstLocalVideoFrame.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.shouldPauseOnFirstLocalVideoFrame.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.conversationLinkDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.conversationLinkDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.conversationLinkDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.conversationLinkDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.conversationLinkDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didFailToStartCamera : ConversationController@<X0>(_QWORD *a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didFailToStartCamera : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didFailToStartCamera.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didFailToStartCamera.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didFailToStartCamera.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.callStatusDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@guaranteed Call) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.callStatusDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.callStatusDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.callStatusDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.callStatusDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.greenTea3PCallStatusChanged : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@guaranteed Call) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.greenTea3PCallStatusChanged : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.greenTea3PCallStatusChanged.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.greenTea3PCallStatusChanged.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.greenTea3PCallStatusChanged.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.pttCallStatusDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@guaranteed Call) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.pttCallStatusDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.pttCallStatusDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.pttCallStatusDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.pttCallStatusDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.localParticipantRequestedVideoUpgrade : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [Float]?, @guaranteed [Float]?) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.localParticipantRequestedVideoUpgrade : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.localParticipantRequestedVideoUpgrade.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.localParticipantRequestedVideoUpgrade.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.localParticipantRequestedVideoUpgrade.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateCaptions : ConversationController@<X0>(_QWORD *a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateCaptions : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateCaptions.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didUpdateCaptions.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didUpdateCaptions.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didToggleCaptions : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didToggleCaptions : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didToggleCaptions.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.didToggleCaptions.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.didToggleCaptions.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.didUpdateIDSCapabilities : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed UITapGestureRecognizer) -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.didUpdateIDSCapabilities : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed [UUID : IDSCapabilitiesChecker.Capabilities]) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.didUpdateIDSCapabilities.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.didUpdateIDSCapabilities.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.didUpdateIDSCapabilities.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.videoMessageErrorOccured : ConversationController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.videoMessageErrorOccured : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.videoMessageErrorOccured.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

void ConversationController.videoMessageErrorOccured.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.videoMessageErrorOccured.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.screenSharingAvailabilityDidChange : ConversationController@<X0>(_QWORD *a1@<X0>, void (**a2)(unsigned __int8 *a1)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unsigned __int8 *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = _sSbIegy_SbytIegnr_TRTA_0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)(unsigned __int8 *))v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.screenSharingAvailabilityDidChange : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbytIegnr_SbIegy_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.screenSharingAvailabilityDidChange.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange, (void (*)(uint64_t))_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy);
}

void ConversationController.screenSharingAvailabilityDidChange.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
}

void ConversationController.screenSharingAvailabilityDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationController.isRemoteParticipantEligibleForVideoMessagingBlock : ConversationController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_BYTE *@<X8>);

  v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = _sSbIegd_SbIegr_TRTA_0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for ConversationController.isRemoteParticipantEligibleForVideoMessagingBlock : ConversationController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSbIegr_SbIegd_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t ConversationController.isRemoteParticipantEligibleForVideoMessagingBlock.getter()
{
  return ConversationController.didUpdateVisibleParticipantScreenInfo.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock, (void (*)(uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOy);
}

uint64_t ConversationController.didUpdateVisibleParticipantScreenInfo.getter(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  OUTLINED_FUNCTION_1();
  v3 = OUTLINED_FUNCTION_114();
  a2(v3);
  return OUTLINED_FUNCTION_114();
}

void ConversationController.isRemoteParticipantEligibleForVideoMessagingBlock.setter(uint64_t a1, uint64_t a2)
{
  ConversationController.didUpdateVisibleParticipantScreenInfo.setter(a1, a2, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
}

void ConversationController.didUpdateVisibleParticipantScreenInfo.setter(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_572();
  v9 = (uint64_t *)(v4 + *v8);
  OUTLINED_FUNCTION_2_0();
  v10 = *v9;
  v11 = v9[1];
  *v9 = v6;
  v9[1] = v5;
  a4(v10, v11);
  OUTLINED_FUNCTION_9_0();
}

void ConversationController.isRemoteParticipantEligibleForVideoMessagingBlock.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t closure #1 in ConversationController.updateLayoutStyle(_:)(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](a1 + 16);
  if (result)
  {
    v9 = (char *)result;
    v24 = a2;
    v25 = v4;
    v10 = result + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    swift_beginAccess();
    outlined init with copy of RadarReporting(v10, (uint64_t)v28);
    v11 = v29;
    v12 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    v13 = &v9[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    swift_beginAccess();
    v14 = *((_QWORD *)v13 + 1);
    v15 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 104);
    v16 = swift_unknownObjectRetain();
    v15(&v26, v16, v14, v11, v12);
    swift_unknownObjectRelease();
    if (v27)
    {
      v17 = v24 & 1;
      outlined init with take of Notice(&v26, (uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      outlined init with copy of RadarReporting(v10, (uint64_t)v28);
      v18 = v29;
      v19 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      v20 = v32;
      v21 = v33;
      __swift_project_boxed_opaque_existential_1(v31, v32);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v19 + 136))(v17, v7, v18, v19);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      v22 = v31;
    }
    else
    {

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v26, &demangling cache variable for type metadata for Conversation?);
      v22 = v28;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  return result;
}

void ConversationController.callCenter.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
  OUTLINED_FUNCTION_1();
  outlined init with copy of RadarReporting(v3, a1);
  OUTLINED_FUNCTION_32();
}

void ConversationController.call.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_6_6();
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  OUTLINED_FUNCTION_2_0();
  *v3 = v2;
  v3[1] = v0;
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void ConversationController.call.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationController.mode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode);
}

void ConversationController.defaults.getter()
{
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_0();
}

void ConversationController.isSplitView.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ConversationController.isSplitView : ConversationController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ConversationController.isSplitView.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView, (void (*)(uint64_t))ConversationController.isSplitView.didset);
}

void ConversationController.isSplitView.didset(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView);
  swift_beginAccess();
  if (*v3 == 1 && (a1 & 1) == 0)
    ConversationController.updateWaitingParticipantsAsDoneWaiting()();
}

void ConversationController.updateWaitingParticipantsAsDoneWaiting()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t (*v18)(uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v31 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v31);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Participant(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v30 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  v10 = type metadata accessor for DispatchPredicate();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v15 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v16 = *(_QWORD *)(*v15 + 16);
  if (v16)
  {
    v17 = 0;
    v18 = type metadata accessor for Participant.State;
    v29 = v5;
    while (v17 < *(_QWORD *)(*v15 + 16))
    {
      v19 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v20 = *(_QWORD *)(v5 + 72) * v17;
      outlined init with copy of ConversationControlsAppLaunchButtonType(*v15 + v19 + v20, (uint64_t)v9, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v9, (uint64_t)v3, v18);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v21 = v18;
        v22 = v16;
        v23 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v3, v23);
        Participant.asFullyWaited()();
        swift_beginAccess();
        v24 = *v15;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v15 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v24 = specialized _ArrayBuffer._consumeAndCreateNew()();
          *v15 = v24;
        }
        if (v17 >= *(_QWORD *)(v24 + 16))
          goto LABEL_14;
        v26 = v24 + v19 + v20;
        v27 = v30;
        outlined assign with copy of Participant.State(v30, v26, type metadata accessor for Participant);
        swift_endAccess();
        outlined destroy of AccountUpdateNotice(v27, type metadata accessor for Participant);
        v16 = v22;
        v18 = v21;
        v5 = v29;
      }
      else
      {
        outlined destroy of AccountUpdateNotice((uint64_t)v3, v18);
      }
      ++v17;
      outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
      if (v16 == v17)
        return;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
}

void ConversationController.isSplitView.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void ConversationController.isSplitView.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))ConversationController.isSplitView.setter);
}

void ConversationController.conversationUUID.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int EnumTagSinglePayload;
  int v20;
  int v21;
  uint64_t v22;
  void (**v23)(_QWORD);
  void (*v24)(_QWORD);
  char v25;
  uint64_t v26;
  char *v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v26 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v26 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v26 - v15;
  v26 = v1;
  v17 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v17, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v18 = type metadata accessor for UUID();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (EnumTagSinglePayload == 1)
  {
    v20 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v18);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of FeatureEligibility?(a1, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (v20 != 1)
      goto LABEL_7;
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of FeatureEligibility?(a1, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  outlined init with copy of FeatureEligibility?(v17, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v18);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v22 = (uint64_t)v11;
  v11 = v27;
  outlined init with take of Any?(v22, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (v21 == 1 || __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v18) != 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    return;
  }
LABEL_7:
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v23 = (void (**)(_QWORD))(v26
                                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  swift_beginAccess();
  v24 = *v23;
  if (*v23)
  {
    swift_retain();
    ConversationController.isTrackingActiveConversation.getter();
    v24(v25 & 1);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v24);
  }
}

void ConversationController.conversationUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v6, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  swift_beginAccess();
  outlined assign with copy of UUID?(a1, v6);
  swift_endAccess();
  ConversationController.conversationUUID.didset((uint64_t)v5);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
}

void ConversationController.videoMessageConversationUUID.getter(uint64_t a1@<X8>)
{
  ConversationController.videoMessageConversationUUID.getter(&OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageConversationUUID, (uint64_t)&demangling cache variable for type metadata for UUID?, (void (*)(uint64_t, uint64_t, uint64_t))outlined init with copy of FeatureEligibility?, a1);
}

void ConversationController.callWaitingUUIDs.getter()
{
  ParticipantsCollectionViewDataSource.onlineParticipants.getter();
}

void key path setter for ConversationController.mostRecentActiveConversation : ConversationController(uint64_t a1)
{
  _BYTE v1[40];

  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v1, &demangling cache variable for type metadata for Conversation?);
  ConversationController.mostRecentActiveConversation.setter((uint64_t)v1);
}

void ConversationController.mostRecentActiveConversation.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  _BYTE v5[40];

  v2 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  OUTLINED_FUNCTION_63_4(a1, (uint64_t)v5);
  (*(void (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x128))(v5);
  v3 = OUTLINED_FUNCTION_65_2();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, v4);
  OUTLINED_FUNCTION_289_0();
}

uint64_t ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (**v16)(_QWORD);
  void (*v17)(_QWORD);
  char v18;
  uint64_t inited;
  char *v20;
  uint64_t v21;
  uint64_t ObjectType;
  void (*v23)(uint64_t, uint64_t);
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v31;

  v2 = v1;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame];
  swift_bridgeObjectRetain();
  v5 = specialized Set.subtracting(_:)(a1, v4);
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = specialized Set.subtracting(_:)(v6, a1);
  swift_bridgeObjectRelease();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
  v31 = v5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<UUID>);
  v9 = String.init<A>(reflecting:)();
  v11 = v10;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v12 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v8 + 64) = v12;
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.error.getter();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  swift_bridgeObjectRetain();
  v14 = String.init<A>(reflecting:)();
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = v12;
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v15;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v16 = (void (**)(_QWORD))&v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange];
  swift_beginAccess();
  v17 = *v16;
  if (*v16)
  {
    swift_retain();
    ConversationController.isWaitingOnFirstRemoteFrame.getter();
    v17(v18 & 1);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v17);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  *(_QWORD *)(inited + 32) = 0xD000000000000025;
  *(_QWORD *)(inited + 40) = 0x80000001BD67F970;
  v20 = &v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  v21 = *((_QWORD *)v20 + 1);
  ObjectType = swift_getObjectType();
  v23 = *(void (**)(uint64_t, uint64_t))(v21 + 200);
  *(_QWORD *)(inited + 72) = type metadata accessor for UUID();
  __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(inited + 48));
  swift_unknownObjectRetain();
  v23(ObjectType, v21);
  swift_unknownObjectRelease();
  *(_QWORD *)(inited + 80) = 0xD000000000000021;
  *(_QWORD *)(inited + 88) = 0x80000001BD67F9A0;
  ConversationController.isWaitingOnFirstRemoteFrame.getter();
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 96) = v24 & 1;
  Dictionary.init(dictionaryLiteral:)();
  if (v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] == 1)
  {
    v25 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (one-time initialization token for DidChangeIsWaitingOnFirstFrameNotification != -1)
      swift_once();
    v26 = static ConversationController.DidChangeIsWaitingOnFirstFrameNotification;
    specialized _dictionaryUpCast<A, B, C, D>(_:)();
    v28 = v27;
    swift_bridgeObjectRelease();
    outlined bridged method (mnnbnn) of @objc NSNotificationCenter.post(name:object:userInfo:)(v26, 0, v28, v25);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v29 = v2;
  specialized Sequence.forEach(_:)(v7, v29);
  swift_bridgeObjectRelease();
  specialized Sequence.forEach(_:)(v31, v29);
  return swift_bridgeObjectRelease();
}

uint64_t specialized Set.subtracting(_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) > *(_QWORD *)(a2 + 16) >> 3)
    return specialized _NativeSet.subtracting<A>(_:)(a1, a2);
  specialized Set._subtract<A>(_:)(a1);
  return a2;
}

uint64_t closure #2 in ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  _QWORD v32[2];
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[8];

  v36 = a2;
  v40 = type metadata accessor for DispatchTime();
  v38 = *(_QWORD *)(v40 - 8);
  v3 = MEMORY[0x1E0C80A78](v40);
  v37 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)v32 - v5;
  v34 = type metadata accessor for DispatchWorkItemFlags();
  MEMORY[0x1E0C80A78](v34);
  v35 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v33 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v32[1] = static OS_os_log.conversationKit;
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v14(v12, a1, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v7);
  specialized >> prefix<A>(_:)((uint64_t)v12);
  v16 = v15;
  v41 = a1;
  v18 = v17;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v13 + 32) = v16;
  *(_QWORD *)(v13 + 40) = v18;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = v33;
  v14(v33, v41, v7);
  v21 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v22 + v21, v20, v7);
  *(_QWORD *)(v22 + ((v9 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) = v19;
  aBlock[4] = partial apply for closure #1 in closure #2 in ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_947;
  _Block_copy(aBlock);
  aBlock[7] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  v23 = DispatchWorkItem.init(flags:block:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  v24 = swift_retain();
  specialized Dictionary._Variant.setValue(_:forKey:)(v24, v41);
  swift_endAccess();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v25 = (void *)static OS_dispatch_queue.main.getter();
  v26 = v37;
  static DispatchTime.now()();
  v27 = v39;
  MEMORY[0x1C3B72C50](v26, 3.0);
  v28 = *(void (**)(char *, uint64_t))(v38 + 8);
  v29 = v26;
  v30 = v40;
  v28(v29, v40);
  MEMORY[0x1C3B735BC](v27, v23);
  swift_release();

  return ((uint64_t (*)(char *, uint64_t))v28)(v27, v30);
}

void closure #1 in closure #2 in ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  v10 = a2 + 16;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
  v12 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, a1, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v12);
  specialized >> prefix<A>(_:)((uint64_t)v9);
  v14 = v13;
  v16 = v15;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v11 + 32) = v14;
  *(_QWORD *)(v11 + 40) = v16;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v17 = MEMORY[0x1C3B752C0](v10);
  if (v17)
  {
    v18 = (void *)v17;
    v19 = *(_QWORD *)(v17
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame);
    swift_bridgeObjectRetain();
    specialized Set._Variant.remove(_:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.setter(v19);

  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v12);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
}

uint64_t ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame) = a1;
  ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset(v2);
  return swift_bridgeObjectRelease();
}

void ConversationController.localVideoRecordingTransactionID.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_32();
}

uint64_t ConversationController.description.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v31;
  _QWORD v32[11];
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_93();
  v33 = v2;
  v34 = v3;
  v31 = OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(name: String, value: Any?)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6503E0;
  *(_QWORD *)(inited + 32) = 1701080941;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_BYTE *)(inited + 48) = v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
  *(_QWORD *)(inited + 72) = &type metadata for ConversationController.ControlsMode;
  *(_QWORD *)(inited + 80) = 0xD000000000000011;
  OUTLINED_FUNCTION_663_0();
  *(_QWORD *)(v6 + 88) = v7;
  v8 = (uint64_t *)&v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
  OUTLINED_FUNCTION_1();
  v9 = *v8;
  OUTLINED_FUNCTION_616_0();
  *(_QWORD *)(inited + 96) = v9;
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 128) = 0xD000000000000010;
  OUTLINED_FUNCTION_663_0();
  *(_QWORD *)(inited + 136) = v11;
  v12 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  OUTLINED_FUNCTION_1();
  *(_QWORD *)(inited + 168) = OUTLINED_FUNCTION_14_2();
  __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(inited + 144));
  OUTLINED_FUNCTION_135(v12, v13);
  *(_QWORD *)(inited + 176) = 0xD000000000000012;
  *(_QWORD *)(inited + 184) = 0x80000001BD68F840;
  v14 = (uint64_t *)&v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  OUTLINED_FUNCTION_1();
  v15 = *v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  *(_QWORD *)(inited + 192) = v15;
  *(_QWORD *)(inited + 216) = v16;
  *(_QWORD *)(inited + 224) = 0xD000000000000011;
  OUTLINED_FUNCTION_663_0();
  *(_QWORD *)(inited + 232) = v17;
  v18 = &v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
  OUTLINED_FUNCTION_1();
  v19 = v18[16];
  *(_OWORD *)(inited + 240) = *(_OWORD *)v18;
  *(_BYTE *)(inited + 256) = v19;
  *(_QWORD *)(inited + 264) = &type metadata for BroadcastingState;
  *(_QWORD *)(inited + 272) = 1819042147;
  *(_QWORD *)(inited + 280) = 0xE400000000000000;
  v20 = (uint64_t *)&v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  OUTLINED_FUNCTION_1();
  v21 = *v20;
  ObjectType = swift_getObjectType();
  *(_QWORD *)(inited + 288) = v21;
  *(_QWORD *)(inited + 312) = ObjectType;
  *(_QWORD *)(inited + 320) = 0xD000000000000010;
  OUTLINED_FUNCTION_663_0();
  *(_QWORD *)(inited + 328) = v23;
  v24 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID];
  OUTLINED_FUNCTION_1();
  outlined init with copy of FeatureEligibility?(v24, v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v25 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_69_0(v1, 1, v25);
  if (v26)
  {
    OUTLINED_FUNCTION_26_22();
    v27 = OUTLINED_FUNCTION_491_0();
    OUTLINED_FUNCTION_219(v27, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(_OWORD *)(inited + 336) = 0u;
    *(_OWORD *)(inited + 352) = 0u;
  }
  else
  {
    *(_QWORD *)(inited + 360) = v25;
    __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)(inited + 336));
    OUTLINED_FUNCTION_139(v28, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32));
    OUTLINED_FUNCTION_26_22();
    OUTLINED_FUNCTION_491_0();
  }
  v32[3] = v31;
  v32[0] = v0;
  v29 = v0;
  return String.init(namedPropertyValues:for:)(inited, v32);
}

void ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void *v55;

  OUTLINED_FUNCTION_93();
  v54 = v25;
  v55 = v23;
  v27 = v26;
  v29 = v28;
  v52 = v30;
  v53 = v31;
  v32 = *(_QWORD *)(v28 + 24);
  v33 = *(_QWORD *)(v28 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v28, v32);
  OUTLINED_FUNCTION_10_37();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_8_7(v24, v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16));
  v38 = *(_QWORD *)(v27 + 24);
  v37 = *(_QWORD *)(v27 + 32);
  v39 = OUTLINED_FUNCTION_153_1();
  __swift_mutable_project_boxed_opaque_existential_1(v39, v40);
  OUTLINED_FUNCTION_10_37();
  MEMORY[0x1E0C80A78](v41);
  v43 = OUTLINED_FUNCTION_414_2(v42, a21);
  OUTLINED_FUNCTION_291((uint64_t)v43, v44, v45);
  ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_457(v52, v53, v54, v24, v47, v48, v49, v50, v51, a22, v55, v32, ObjectType, v38, v33, a23, v37);
  __swift_destroy_boxed_opaque_existential_1(v27);
  __swift_destroy_boxed_opaque_existential_1(v29);
  OUTLINED_FUNCTION_52_1();
}

void closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;

  OUTLINED_FUNCTION_35_9();
  OUTLINED_FUNCTION_485_0(v1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_353_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_146_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_304_4();
  OUTLINED_FUNCTION_386_0(v6);
  swift_storeEnumTagMultiPayload();
  UUID.init()();
  v25 = v0;
  v7 = OUTLINED_FUNCTION_795((__n128)xmmword_1BD6491B0);
  v8 = static Colors.ParticipantGradients.gradient(for:)(v7);
  v9 = OUTLINED_FUNCTION_687(v8);
  OUTLINED_FUNCTION_114_16(v9);
  if (v23)
  {
    OUTLINED_FUNCTION_292_3();
    OUTLINED_FUNCTION_625_0();
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for Conversation?);
  }
  type metadata accessor for ParticipantContactDetailsCache();
  OUTLINED_FUNCTION_764();
  OUTLINED_FUNCTION_472_0();
  v10 = OUTLINED_FUNCTION_291_6();
  OUTLINED_FUNCTION_483(v10, v12, v11 | 0x10000u, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22[0], v22[1], v22[2], v23, v24, v25, v26,
    v27,
    v28,
    v29);
  OUTLINED_FUNCTION_1_29();
}

void closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;

  OUTLINED_FUNCTION_35_9();
  OUTLINED_FUNCTION_485_0(v1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_353_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_146_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_304_4();
  OUTLINED_FUNCTION_386_0(v6);
  swift_storeEnumTagMultiPayload();
  UUID.init()();
  v25 = v0;
  v7 = OUTLINED_FUNCTION_795((__n128)xmmword_1BD6491B0);
  v8 = static Colors.ParticipantGradients.gradient(for:)(v7);
  v9 = OUTLINED_FUNCTION_687(v8);
  OUTLINED_FUNCTION_114_16(v9);
  if (v23)
  {
    OUTLINED_FUNCTION_292_3();
    OUTLINED_FUNCTION_625_0();
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for Conversation?);
  }
  type metadata accessor for ParticipantContactDetailsCache();
  OUTLINED_FUNCTION_764();
  OUTLINED_FUNCTION_472_0();
  v10 = OUTLINED_FUNCTION_291_6();
  OUTLINED_FUNCTION_483(v10, v12, v11 | 0x1010000u, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22[0], v22[1], v22[2], v23, v24, v25, v26,
    v27,
    v28,
    v29);
  OUTLINED_FUNCTION_1_29();
}

void ConversationController.updateIdentityClaimingAssociations(in:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  void *v25;
  id v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_253_1(v6, v62);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v70 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.State?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_507(v10, v62);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v73 = v12;
  v74 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_408_1();
  MEMORY[0x1E0C80A78](v13);
  v69 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_88_11();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_256_2();
  v17 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_1();
  v18 = *v17;
  if (!*(_QWORD *)(*v17 + 16))
  {
LABEL_35:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  v19 = 0;
  v20 = *(unsigned __int8 *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 72);
  v75 = (v20 + 32) & ~v20;
  v64 = v20 | 7;
  v65 = v75 + v21;
  v63 = &v77;
  v62 = xmmword_1BD6441D0;
  v72 = v2;
  while (1)
  {
    OUTLINED_FUNCTION_92_12(v18 + v75 + v21 * v19, v1);
    v22 = OUTLINED_FUNCTION_295_3();
    v24 = (void *)ConversationController.activeParticipant(correspondingTo:in:)(v22, v23);
    if (!v24)
    {
      OUTLINED_FUNCTION_798();
LABEL_12:
      ++v19;
      goto LABEL_34;
    }
    v25 = v24;
    v26 = ConversationController.identityClaimingAssociationRelationship(for:in:)(v24, v4);
    if (v27 == 255 || v27 == 1)
    {
      OUTLINED_FUNCTION_798();

      goto LABEL_12;
    }
    if (!v27)
    {
      v28 = v73;
      ConversationController.remoteParticipant(with:)((uint64_t)v26, v73);
      v29 = OUTLINED_FUNCTION_601_0();
      OUTLINED_FUNCTION_69_0(v29, v30, v74);
      if (v31)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v28, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        v32 = v72;
        outlined init with take of StagedCollaboration(v28, v72, type metadata accessor for Participant);
        v33 = ConversationController.indexOfRemoteParticipant(with:)();
        if ((v34 & 1) != 0)
        {
          v52 = v32;
        }
        else
        {
          v66 = v33;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
          v35 = swift_allocObject();
          *(_OWORD *)(v35 + 16) = v62;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v1, v35 + v75, type metadata accessor for Participant);
          specialized Set.init(_nonEmptyArrayLiteral:)();
          v68 = v36;
          v37 = OUTLINED_FUNCTION_238();
          __swift_storeEnumTagSinglePayload(v71, 1, 1, v37);
          v38 = OUTLINED_FUNCTION_33_0();
          v39 = v70;
          OUTLINED_FUNCTION_77_0(v70, v40, v41, v38);
          v76 = 1;
          v42 = (uint64_t)v63;
          *(_OWORD *)v63 = 0u;
          *(_OWORD *)(v42 + 16) = 0u;
          v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
          v44 = v67;
          OUTLINED_FUNCTION_77_0(v67, v45, v46, v43);
          LOBYTE(v60) = 2;
          Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v71, v39, 2, (uint64_t)&v76, 0, 0, 1, v44, v60, 0, v68, v61, v62, *((uint64_t *)&v62 + 1), (uint64_t)v63, v64, v65, v66, v67,
            v68,
            v69,
            v70,
            v71);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v44, &demangling cache variable for type metadata for Participant.CountdownInfo??);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v70, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v71, &demangling cache variable for type metadata for Participant.State?);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_2_0();
          v47 = *v17;
          v48 = OUTLINED_FUNCTION_83_8();
          *v17 = v47;
          if ((v48 & 1) == 0)
          {
            v47 = OUTLINED_FUNCTION_575_0();
            *v17 = v47;
          }
          v49 = v72;
          if ((v66 & 0x8000000000000000) != 0)
            goto LABEL_37;
          if (v66 >= *(_QWORD *)(v47 + 16))
            goto LABEL_38;
          v50 = v47 + v75 + v66 * v21;
          v51 = v69;
          outlined assign with copy of Participant.State(v69, v50, type metadata accessor for Participant);
          OUTLINED_FUNCTION_395_0();
          OUTLINED_FUNCTION_46(v51);
          v52 = v49;
        }
        outlined destroy of AccountUpdateNotice(v52, type metadata accessor for Participant);
      }
    }
    OUTLINED_FUNCTION_2_0();
    v53 = *v17;
    v54 = OUTLINED_FUNCTION_83_8();
    *v17 = v53;
    if ((v54 & 1) == 0)
    {
      v54 = OUTLINED_FUNCTION_575_0();
      v53 = v54;
      *v17 = v54;
    }
    v55 = *(_QWORD *)(v53 + 16);
    if (v19 >= v55)
      break;
    v56 = v4;
    v57 = v55 - 1;
    v58 = v53 + v75 + v21 * v19;
    OUTLINED_FUNCTION_162_5(v54, type metadata accessor for Participant);
    if ((uint64_t)(v57 - v19) < 0)
      goto LABEL_39;
    if (v21 > 0 || v58 >= v58 + v21 + (v57 - v19) * v21)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v21)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(v53 + 16) = v57;
    *v17 = v53;
    OUTLINED_FUNCTION_395_0();

    OUTLINED_FUNCTION_46(v1);
    v4 = v56;
LABEL_34:
    v18 = *v17;
    if (v19 >= *(_QWORD *)(*v17 + 16))
      goto LABEL_35;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  OUTLINED_FUNCTION_0_45();
  OUTLINED_FUNCTION_22_1();
  __break(1u);
}

void closure #4 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void sub_1BD548FCC(char *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  id v8;
  void (*v9)(id);

  if (a1)
  {
    v3 = (uint64_t *)&a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
    OUTLINED_FUNCTION_1();
    if (*(_QWORD *)(*v3 + 16) != 1)
      goto LABEL_9;
    specialized Collection.first.getter(*v3, v1);
    v4 = OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_69_0(v1, 1, v4);
    if (!v5)
    {
      v7 = *(void **)(v1 + *(int *)(v4 + 28));
      if (v7)
      {
        v8 = v7;
        outlined destroy of AccountUpdateNotice(v1, type metadata accessor for Participant);
        v9 = *(void (**)(id))(**(_QWORD **)&a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker]
                                       + 224);
        OUTLINED_FUNCTION_1_28();
        v9(v8);
        OUTLINED_FUNCTION_49_5();
        OUTLINED_FUNCTION_22();

        goto LABEL_10;
      }
      outlined destroy of AccountUpdateNotice(v1, type metadata accessor for Participant);
LABEL_9:

      goto LABEL_10;
    }

    OUTLINED_FUNCTION_225_3(v6, &demangling cache variable for type metadata for Participant?);
  }
LABEL_10:
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall ConversationController.updateIDSStatusForVideoMessaging()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_16_2();
  v7 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_1();
  v8 = *(_QWORD *)(v7 + 8);
  OUTLINED_FUNCTION_15_6();
  v9 = *(uint64_t (**)(uint64_t))(v8 + 184);
  OUTLINED_FUNCTION_72_9();
  v10 = OUTLINED_FUNCTION_348();
  LODWORD(v8) = v9(v10);
  OUTLINED_FUNCTION_10();
  if ((_DWORD)v8 == 3)
  {
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_72_9();
    v11 = OUTLINED_FUNCTION_739();
    OUTLINED_FUNCTION_10();
    if ((v11 & 1) != 0)
    {
      v12 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
      OUTLINED_FUNCTION_1();
      if (*(_QWORD *)(*v12 + 16) == 1)
      {
        specialized Collection.first.getter(*v12, (uint64_t)v4);
        v13 = OUTLINED_FUNCTION_69_0((uint64_t)v4, 1, v5);
        if (v14)
        {
          OUTLINED_FUNCTION_32_18(v13, &demangling cache variable for type metadata for Participant?);
        }
        else
        {
          v15 = OUTLINED_FUNCTION_38_21();
          outlined init with take of StagedCollaboration(v15, v16, type metadata accessor for Participant);
          ConversationController.updateVideoMessagingIDSStatusForParticipant(_:)(v1);
          OUTLINED_FUNCTION_40_58(v1);
        }
      }
    }
  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationController.setupScreenSharingSessionCallbacks()()
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_829();
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession;
  OUTLINED_FUNCTION_2_0();
  if (*(_QWORD *)(v2 + 24))
  {
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_136_5();
    OUTLINED_FUNCTION_174_5();
    OUTLINED_FUNCTION_116_8((uint64_t)partial apply for closure #5 in ConversationController.setupScreenSharingSessionCallbacks(), v1[2]);
    if (*(_QWORD *)(v2 + 24))
    {
      OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_136_5();
      OUTLINED_FUNCTION_174_5();
      OUTLINED_FUNCTION_116_8((uint64_t)partial apply for closure #2 in ConversationController.setupScreenSharingSessionCallbacks(), v1[5]);
      if (*(_QWORD *)(v2 + 24))
      {
        OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_136_5();
        OUTLINED_FUNCTION_174_5();
        OUTLINED_FUNCTION_116_8((uint64_t)partial apply for closure #6 in ConversationController.setupScreenSharingSessionCallbacks(), v1[8]);
        if (*(_QWORD *)(v2 + 24))
        {
          OUTLINED_FUNCTION_15();
          OUTLINED_FUNCTION_136_5();
          OUTLINED_FUNCTION_174_5();
          OUTLINED_FUNCTION_116_8((uint64_t)partial apply for closure #5 in ConversationController.setupScreenSharingSessionCallbacks(), v1[14]);
          if (*(_QWORD *)(v2 + 24))
          {
            OUTLINED_FUNCTION_15();
            OUTLINED_FUNCTION_136_5();
            OUTLINED_FUNCTION_174_5();
            OUTLINED_FUNCTION_116_8((uint64_t)partial apply for closure #5 in ConversationController.setupScreenSharingSessionCallbacks(), v1[11]);
            if (*(_QWORD *)(v2 + 24))
            {
              OUTLINED_FUNCTION_15();
              OUTLINED_FUNCTION_136_5();
              v3 = *(_QWORD *)(v2 + 32);
              v4 = OUTLINED_FUNCTION_65_2();
              __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
              OUTLINED_FUNCTION_31_38((uint64_t)partial apply for closure #6 in ConversationController.setupScreenSharingSessionCallbacks(), v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 136));
            }
          }
        }
      }
    }
  }
  swift_endAccess();
  OUTLINED_FUNCTION_2_3();
}

void ConversationController.updateScreenSharingSession(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[4];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  v8 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession;
  OUTLINED_FUNCTION_1();
  outlined init with copy of FeatureEligibility?(v8, (uint64_t)&v26, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
  if (v27)
  {
    v10 = outlined init with take of Notice(&v26, (uint64_t)v28);
    if (a1)
    {
      v11 = OUTLINED_FUNCTION_9(v10, sel_windowUUID);
      if (v11)
      {
        v12 = v11;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v13 = 0;
      }
      else
      {
        v13 = 1;
      }
      v17 = OUTLINED_FUNCTION_33_0();
      __swift_storeEnumTagSinglePayload(v2, v13, 1, v17);
      v18 = OUTLINED_FUNCTION_131();
      outlined init with take of Any?(v18, v19, v20);
    }
    else
    {
      v14 = OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_77_0((uint64_t)v7, v15, v16, v14);
    }
    __swift_project_boxed_opaque_existential_1(v28, v28[3]);
    v21 = OUTLINED_FUNCTION_65_2();
    v24 = OUTLINED_FUNCTION_93_4(v21, v22, v23);
    OUTLINED_FUNCTION_96_3(v24, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    OUTLINED_FUNCTION_396_2(v9, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
  }
}

void ConversationController.fetchExistingScreenSharingAttributes()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_378_3();
  v2 = *(_QWORD *)(v0 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&aBlock[-1] - v4;
  OUTLINED_FUNCTION_8_7((uint64_t)&aBlock[-1] - v4, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v7 = (void *)OUTLINED_FUNCTION_181_6(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 72));
  OUTLINED_FUNCTION_101((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v8 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_251();
  aBlock[4] = partial apply for closure #1 in ConversationController.fetchExistingScreenSharingAttributes();
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed TUScreenShareAttributes?) -> ();
  aBlock[3] = &block_descriptor_995;
  v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v7, sel_getLatestRemoteScreenShareAttributesWithCompletionHandler_, v9);
  OUTLINED_FUNCTION_813();

  OUTLINED_FUNCTION_91();
}

void ConversationController.__deallocating_deinit()
{
  void *v0;
  objc_class *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7[2];
  objc_super v8;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_83_17();
  if (v2)
  {
    v3 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_210_4(v3, (uint64_t)v7);
    v4 = OUTLINED_FUNCTION_15();
    outlined init with take of Notice(v7, v4 + 16);
    OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed () -> (), MEMORY[0x1E0C809B0], 1107296256, v5, v6);
    swift_release();
    TUDispatchMainIfNecessary();
    OUTLINED_FUNCTION_768();
  }
  ConversationController.unregisterForMoments()();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v8.receiver = v0;
  v8.super_class = v1;
  objc_msgSendSuper2(&v8, sel_dealloc);
  OUTLINED_FUNCTION_512_1();
}

void closure #1 in ConversationController.deinit(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  v3 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
  objc_msgSend(v3, sel_stopPreview);

}

Swift::Void __swiftcall ConversationController.unregisterForMoments()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_10_37();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_11_2();
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider);
  if (v3)
  {
    *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider) = 0;
    v4 = ConversationController.momentsController.getter();
    OUTLINED_FUNCTION_59((uint64_t)v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    OUTLINED_FUNCTION_7_22();
    v5 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v3;
    OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
    OUTLINED_FUNCTION_703();
    v6 = v4;
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_269();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    OUTLINED_FUNCTION_385_1();
    OUTLINED_FUNCTION_731();
    OUTLINED_FUNCTION_429();
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationController.indexOfRemoteParticipant(with:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_23_36();
  v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v6 = *(_QWORD *)(v4 + 72);
  OUTLINED_FUNCTION_124();
  v7 = 0;
  while ((OUTLINED_FUNCTION_233_4() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v3 == v7)
    {
      v7 = 0;
      break;
    }
  }
  OUTLINED_FUNCTION_13_3();
  return v7;
}

Swift::Int_optional __swiftcall ConversationController.indexOfRemoteIDSParticipant(with:)(Swift::UInt64 with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  Swift::Int v20;
  Swift::Bool v21;
  Swift::Int_optional result;

  OUTLINED_FUNCTION_93();
  v5 = v4;
  v6 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_16_2();
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_1();
  v9 = *v8;
  v10 = *(_QWORD *)(*v8 + 16);
  if (v10)
  {
    OUTLINED_FUNCTION_37_3();
    v12 = v9 + v11;
    v13 = *(_QWORD *)(v3 + 72);
    OUTLINED_FUNCTION_8_8();
    for (i = 0; i != v10; ++i)
    {
      v15 = OUTLINED_FUNCTION_291_4();
      OUTLINED_FUNCTION_122(v15, v16);
      v17 = v2 + *(int *)(v6 + 28);
      if (!*(_QWORD *)v17 || (*(_BYTE *)(v17 + 16) & 1) != 0)
      {
        OUTLINED_FUNCTION_488_0();
      }
      else
      {
        v18 = *(_QWORD *)(v17 + 8);
        OUTLINED_FUNCTION_488_0();
        if (v18 == v5)
        {
          v19 = 0;
          goto LABEL_11;
        }
      }
      v12 += v13;
    }
    i = 0;
    v19 = 1;
LABEL_11:
    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    i = 0;
    v19 = 1;
  }
  v20 = i;
  v21 = v19;
  result.value = v20;
  result.is_nil = v21;
  return result;
}

uint64_t ConversationController.participant(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  char v16;
  id v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;

  v5 = type metadata accessor for Participant(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  if (v11)
  {
    v20[1] = v10;
    v21 = a2;
    v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v13 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v12, (uint64_t)v8, type metadata accessor for Participant);
      v14 = &v8[*(int *)(v5 + 28)];
      if (*(_QWORD *)v14)
      {
        v15 = (id)*((_QWORD *)v14 + 1);
        v16 = v14[16] & 1;
      }
      else
      {
        v15 = 0;
        v16 = 1;
      }
      v17 = objc_msgSend(a1, sel_identifier);
      if ((v16 & 1) == 0 && v15 == v17)
        break;
      outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
      v12 += v13;
      if (!--v11)
      {
        v18 = 1;
        a2 = v21;
        goto LABEL_12;
      }
    }
    a2 = v21;
    outlined init with take of StagedCollaboration((uint64_t)v8, v21, type metadata accessor for Participant);
    v18 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    v18 = 1;
  }
LABEL_12:
  __swift_storeEnumTagSinglePayload(a2, v18, 1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t ConversationController.participant(fromMemberAssociation:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  char v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;

  v5 = type metadata accessor for Participant(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v10 = *v9;
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v22[1] = v10;
    v23 = a2;
    v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v13 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v12, (uint64_t)v8, type metadata accessor for Participant);
      v14 = *(void **)&v8[*(int *)(v5 + 28)];
      if (v14)
        v15 = v14;
      v16 = objc_msgSend(a1, sel_handle);
      v17 = v16;
      if (!v14)
        break;
      if (!v16)
      {
        v17 = v14;
LABEL_12:

        goto LABEL_13;
      }
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      v18 = v14;
      v19 = static NSObject.== infix(_:_:)();

      if ((v19 & 1) != 0)
        goto LABEL_16;
LABEL_13:
      outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
      v12 += v13;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v23;
        goto LABEL_17;
      }
    }
    if (!v16)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      a2 = v23;
      outlined init with take of StagedCollaboration((uint64_t)v8, v23, type metadata accessor for Participant);
      v20 = 0;
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v20 = 1;
LABEL_17:
  __swift_storeEnumTagSinglePayload(a2, v20, 1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t ConversationController.remoteParticipant(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v5 = type metadata accessor for Participant(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  if (v11)
  {
    v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v13 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v12, (uint64_t)v8, type metadata accessor for Participant);
      v14 = &v8[*(int *)(v5 + 28)];
      if (*(_QWORD *)v14)
      {
        if ((v14[16] & 1) == 0 && *((_QWORD *)v14 + 1) == a1)
          break;
      }
      outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
      v12 += v13;
      if (!--v11)
        goto LABEL_9;
    }
    outlined init with take of StagedCollaboration((uint64_t)v8, a2, type metadata accessor for Participant);
    v15 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    v15 = 1;
  }
  __swift_storeEnumTagSinglePayload(a2, v15, 1, v5);
  return swift_bridgeObjectRelease();
}

id ConversationController.identityClaimingAssociationRelationship(for:in:)(void *a1, _QWORD *a2)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;

  swift_getObjectType();
  v4 = objc_msgSend(a1, sel_handle);
  v5 = static ConversationController.member(correspondingTo:in:)(v4, a2);

  if (v5)
  {
    v6 = objc_msgSend(v5, sel_association);
    if (!v6)
    {
      v18 = 0;
      v7 = v5;
LABEL_31:

      return v18;
    }
    v7 = v6;
    if (objc_msgSend(v6, sel_type) == (id)2)
    {
      if ((objc_msgSend(v7, sel_isPrimary) & 1) == 0)
      {
        v19 = objc_msgSend(v7, sel_identifier);
        v20 = a2[3];
        v21 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v20);
        if (v19 == (id)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 232))(v20, v21))
          v18 = 0;
        else
          v18 = objc_msgSend(v7, sel_identifier);
        goto LABEL_30;
      }
      v8 = objc_msgSend(v7, sel_handle);
      v9 = static ConversationController.member(correspondingTo:in:)(v8, a2);

      if (v9)
      {
        v10 = objc_msgSend(v9, sel_association);
        if (!v10)
        {
          v11 = v5;

          v18 = 0;
          v5 = v7;
LABEL_29:
          v7 = v11;
          goto LABEL_30;
        }
        v11 = v10;
        v12 = a2[3];
        v13 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v12);
        v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 168))(v12, v13);
        if (v14)
        {
          v15 = (void *)v14;
          if (objc_msgSend(v9, sel_isEqualToMember_, v14))
          {
            v16 = objc_msgSend(a1, sel_identifier);
            v17 = objc_msgSend(v11, sel_identifier);

            if (v16 == v17)
              goto LABEL_21;
          }
          else
          {

          }
        }
        v23 = objc_msgSend(v11, sel_identifier);
        v24 = a2[3];
        v25 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v24);
        if ((id)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 232))(v24, v25) == v23)
        {
LABEL_21:

          v18 = 0;
LABEL_28:
          v5 = v9;
          goto LABEL_29;
        }
        if (objc_msgSend(a1, sel_identifier) == v23)
        {
          v26 = a2[3];
          v27 = a2[4];
          __swift_project_boxed_opaque_existential_1(a2, v26);
          v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 104))(v26, v27);
          v29 = v7;
          specialized Sequence.first(where:)(v28, v29, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant, 0x1E0DBD2B0, &lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
          v7 = v30;
          swift_bridgeObjectRelease();
          if (v7)
          {
            v18 = objc_msgSend(v7, sel_identifier);

            v5 = v11;
            goto LABEL_30;
          }

        }
        else
        {

        }
        v18 = 0;
        goto LABEL_28;
      }
      v18 = 0;
      v22 = v5;
      v5 = v7;
      v7 = v22;
    }
    else
    {
      v18 = 0;
    }
LABEL_30:

    goto LABEL_31;
  }
  return 0;
}

void *static ConversationController.member(correspondingTo:in:)(void *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;

  v4 = a2[3];
  v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 168))(v4, v5);
  if (!v6)
    goto LABEL_4;
  v7 = v6;
  v8 = objc_msgSend(v6, sel_handle);
  v9 = objc_msgSend(v8, sel_isEqualToHandle_, a1);

  if ((v9 & 1) == 0)
  {

LABEL_4:
    v10 = a2[3];
    v11 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v10);
    v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v10, v11);
    v13 = a2[3];
    v14 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v13);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 128))(v13, v14);
    specialized Set.union<A>(_:)(v15, v12);
    v17 = v16;
    v18 = a2[3];
    v19 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v18);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 144))(v18, v19);
    specialized Set.union<A>(_:)(v20, v17);
    specialized Sequence.first(where:)(v21, a1, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    v7 = v22;
    swift_bridgeObjectRelease();
  }
  return v7;
}

void closure #2 in ConversationController.update(presentationContexts:forceUpdate:)(void *__src@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id __dst[11];

  memcpy(__dst, __src, 0x41uLL);
  v5 = a2[3];
  v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  Conversation.displayableActiveParticipants.getter(v5, v6);
  specialized Sequence.first(where:)(v7, __dst);
  v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_beginAccess();
    specialized Dictionary._Variant.setValue(_:forKey:)();
    swift_endAccess();
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationParticipantPresentationContext);
    __dst[10] = v10;
    v11 = objc_msgSend(v9, sel_identifier);
    v12 = __dst[1];
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, __dst[2]);
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, __dst[3]);
    v15 = TUConversationParticipantPresentationContext.__allocating_init(participantIdentifier:videoQuality:visibility:prominence:spatialPosition:isInCanvas:)((uint64_t)v11, (uint64_t)v12, v13, v14, (char)__dst[8], *(double *)&__dst[4], *(double *)&__dst[5], *(double *)&__dst[6], *(double *)&__dst[7]);

  }
  else
  {
    v15 = 0;
  }
  *a3 = v15;
}

id TUConversationParticipantPresentationContext.__allocating_init(participantIdentifier:videoQuality:visibility:prominence:spatialPosition:isInCanvas:)(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, double a6, double a7, double a8, double a9)
{
  id v11;

  v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithParticipantIdentifier_videoQuality_visibility_prominence_spatialPosition_isInCanvas_, a1, a2, a3, a4, a5 & 1, a6, a7, a8, a9);

  return v11;
}

uint64_t ConversationController.postParticipantStateChangeCallbacks(for:updatedFrom:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char *v43;
  char v44;
  char v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(uint64_t, uint64_t);
  char v60;
  char v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(uint64_t, uint64_t);
  char v91;
  char v92;
  char v93;
  char v94;
  uint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  void (*v106)(uint64_t);
  char v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  void (*v111)(uint64_t);
  char v112;
  char v113;
  uint64_t v114;
  char v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  int v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  void (*v139)(uint64_t);
  char *v140;
  uint64_t result;
  void (*v142)(uint64_t, uint64_t);
  Swift::String v143;
  _QWORD v144[3];
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  __int128 v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD v159[12];
  _BYTE v160[216];
  _BYTE v161[216];
  _QWORD v162[27];
  _QWORD v163[27];
  _BYTE v164[216];
  _BYTE v165[232];

  v153 = a2;
  v4 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v4);
  v145 = (uint64_t)v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for Participant(0);
  v6 = MEMORY[0x1E0C80A78](v157);
  v8 = (char *)v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v149 = (uint64_t)v144 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v150 = (uint64_t)v144 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v148 = (uint64_t)v144 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v147 = (uint64_t)v144 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v146 = (uint64_t)v144 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v144 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v21);
  v156 = (uint64_t)v144 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = v2;
  v23 = ConversationController.visibleParticipants.getter();
  v159[2] = a1;
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #1 in ConversationController.didUpdateVisibleParticipant(_:), (uint64_t)v159, v23);
  v158 = v24;
  v26 = v25;
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v8, type metadata accessor for Participant);
    v162[0] = 0;
    v162[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(55);
    v143._object = (void *)0x80000001BD697840;
    v143._countAndFlagsBits = 0xD000000000000035;
    String.append(_:)(v143);
    _print_unlocked<A, B>(_:_:)();
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v144[1] = 0;
  v144[2] = v4;
  v27 = a1;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v154 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v28 = swift_allocObject();
  v152 = xmmword_1BD645380;
  *(_OWORD *)(v28 + 16) = xmmword_1BD645380;
  v162[0] = v158;
  v29 = String.init<A>(reflecting:)();
  v31 = v30;
  v32 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
  v33 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v28 + 64) = v33;
  *(_QWORD *)(v28 + 32) = v29;
  *(_QWORD *)(v28 + 40) = v31;
  v34 = v156;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v156, type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload(v34, 0, 1, v157);
  specialized >> prefix<A>(_:)(v34);
  v36 = v35;
  v38 = v37;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v34, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v28 + 96) = v32;
  *(_QWORD *)(v28 + 104) = v33;
  v155 = v33;
  *(_QWORD *)(v28 + 72) = v36;
  *(_QWORD *)(v28 + 80) = v38;
  v39 = v27;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v40 = v153;
  Participant.isActive.getter();
  v42 = v41;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v27, (uint64_t)v20, type metadata accessor for Participant);
  if ((v42 & 1) != 0)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v20, type metadata accessor for Participant);
    v43 = v151;
  }
  else
  {
    Participant.isActive.getter();
    v45 = v44;
    outlined destroy of AccountUpdateNotice((uint64_t)v20, type metadata accessor for Participant);
    v43 = v151;
    if ((v45 & 1) != 0)
    {
      Participant.isDestinationTemporary.getter();
      if ((v46 & 1) != 0)
      {
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        v47 = &v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants];
        swift_beginAccess();
        specialized Sequence.forEach(_:)(0, *(_QWORD *)(*(_QWORD *)v47 + 16), v43);
        ConversationController.scheduleKickabilityUpdate(for:)(v27);
      }
      v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = v152;
      v162[0] = v158;
      v49 = String.init<A>(reflecting:)();
      v50 = MEMORY[0x1E0DEA968];
      v51 = v155;
      v52 = v156;
      *(_QWORD *)(v48 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v48 + 64) = v51;
      *(_QWORD *)(v48 + 32) = v49;
      *(_QWORD *)(v48 + 40) = v53;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v52, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v52, 0, 1, v157);
      specialized >> prefix<A>(_:)(v52);
      v55 = v54;
      v57 = v56;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v48 + 96) = v50;
      *(_QWORD *)(v48 + 104) = v51;
      *(_QWORD *)(v48 + 72) = v55;
      *(_QWORD *)(v48 + 80) = v57;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v58 = &v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive];
      swift_beginAccess();
      v59 = *(void (**)(uint64_t, uint64_t))v58;
      v40 = v153;
      if (*(_QWORD *)v58)
      {
        swift_retain();
        v59(v39, v158);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v59);
      }
    }
  }
  Participant.isActive.getter();
  v61 = v60;
  v62 = v146;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v146, type metadata accessor for Participant);
  if ((v61 & 1) != 0)
  {
    Participant.isActive.getter();
    v64 = v63;
    outlined destroy of AccountUpdateNotice(v62, type metadata accessor for Participant);
    if ((v64 & 1) == 0)
    {
      v153 = static OS_os_log.conversationKit;
      v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = v152;
      v162[0] = v158;
      v66 = String.init<A>(reflecting:)();
      v67 = MEMORY[0x1E0DEA968];
      v68 = v43;
      v70 = v155;
      v69 = v156;
      *(_QWORD *)(v65 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v65 + 64) = v70;
      *(_QWORD *)(v65 + 32) = v66;
      *(_QWORD *)(v65 + 40) = v71;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v69, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v69, 0, 1, v157);
      specialized >> prefix<A>(_:)(v69);
      v73 = v72;
      v75 = v74;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v69, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v65 + 96) = v67;
      *(_QWORD *)(v65 + 104) = v70;
      v43 = v68;
      *(_QWORD *)(v65 + 72) = v73;
      *(_QWORD *)(v65 + 80) = v75;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v76 = &v68[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive];
      swift_beginAccess();
      v77 = *(void (**)(uint64_t, uint64_t))v76;
      if (*(_QWORD *)v76)
      {
        swift_retain();
        v77(v39, v158);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v77);
      }
    }
  }
  else
  {
    outlined destroy of AccountUpdateNotice(v62, type metadata accessor for Participant);
  }
  Participant.screenInfo.getter();
  Participant.screenInfo.getter();
  outlined init with copy of FeatureEligibility?((uint64_t)v165, (uint64_t)v162, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined init with copy of FeatureEligibility?((uint64_t)v164, (uint64_t)v163, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  if (v162[3] == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v164, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v165, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (v163[3] == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v162, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      goto LABEL_25;
    }
  }
  else
  {
    outlined init with copy of FeatureEligibility?((uint64_t)v162, (uint64_t)v161, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (v163[3] != 1)
    {
      memcpy(v160, v163, 0xD1uLL);
      static Participant.ScreenInfo.== infix(_:_:)();
      v92 = v91;
      outlined destroy of Participant.ScreenInfo((uint64_t)v160);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v164, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v165, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of Participant.ScreenInfo((uint64_t)v161);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v162, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      if ((v92 & 1) != 0)
        goto LABEL_25;
      goto LABEL_22;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v164, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v165, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of Participant.ScreenInfo((uint64_t)v161);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v162, &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?));
LABEL_22:
  v153 = static OS_os_log.conversationKit;
  v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = v152;
  v162[0] = v158;
  v79 = String.init<A>(reflecting:)();
  v80 = MEMORY[0x1E0DEA968];
  v81 = v43;
  v83 = v155;
  v82 = v156;
  *(_QWORD *)(v78 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v78 + 64) = v83;
  *(_QWORD *)(v78 + 32) = v79;
  *(_QWORD *)(v78 + 40) = v84;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v82, type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload(v82, 0, 1, v157);
  specialized >> prefix<A>(_:)(v82);
  v86 = v85;
  v88 = v87;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v82, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v78 + 96) = v80;
  *(_QWORD *)(v78 + 104) = v83;
  v43 = v81;
  *(_QWORD *)(v78 + 72) = v86;
  *(_QWORD *)(v78 + 80) = v88;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v89 = &v81[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo];
  swift_beginAccess();
  v90 = *(void (**)(uint64_t, uint64_t))v89;
  if (*(_QWORD *)v89)
  {
    swift_retain();
    v90(v39, v158);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v90);
  }
LABEL_25:
  Participant.isPendingAuthorization.getter();
  v94 = v93;
  v95 = v147;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v147, type metadata accessor for Participant);
  if ((v94 & 1) != 0)
  {
    outlined destroy of AccountUpdateNotice(v95, type metadata accessor for Participant);
  }
  else
  {
    Participant.isPendingAuthorization.getter();
    v97 = v96;
    outlined destroy of AccountUpdateNotice(v95, type metadata accessor for Participant);
    if ((v97 & 1) != 0)
    {
      v98 = swift_allocObject();
      *(_OWORD *)(v98 + 16) = xmmword_1BD6441D0;
      v99 = v156;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v156, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v99, 0, 1, v157);
      specialized >> prefix<A>(_:)(v99);
      v101 = v100;
      v103 = v102;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v99, &demangling cache variable for type metadata for Participant?);
      v104 = v155;
      *(_QWORD *)(v98 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v98 + 64) = v104;
      *(_QWORD *)(v98 + 32) = v101;
      *(_QWORD *)(v98 + 40) = v103;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v105 = &v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant];
      swift_beginAccess();
      v106 = *(void (**)(uint64_t))v105;
      if (*(_QWORD *)v105)
      {
        swift_retain();
        v106(v39);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v106);
      }
    }
  }
  Participant.isPendingAuthorization.getter();
  if ((v107 & 1) != 0)
  {
    v108 = v145;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v145, type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v109 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 8))(v108, v109);
      v110 = &v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant];
      swift_beginAccess();
      v111 = *(void (**)(uint64_t))v110;
      if (*(_QWORD *)v110)
      {
        swift_retain();
        v111(v39);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v111);
      }
    }
    else
    {
      outlined destroy of AccountUpdateNotice(v108, type metadata accessor for Participant.State);
    }
  }
  Participant.isActive.getter();
  v113 = v112;
  v114 = v148;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v148, type metadata accessor for Participant);
  if ((v113 & 1) != 0)
  {
    Participant.isActive.getter();
    v116 = v115;
    outlined destroy of AccountUpdateNotice(v114, type metadata accessor for Participant);
    v117 = v150;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v40, v150, type metadata accessor for Participant);
    v118 = v149;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v149, type metadata accessor for Participant);
    if ((v116 & 1) != 0)
    {
      Participant.isActiveWithAV.getter();
      v120 = v119;
      Participant.isActiveWithAV.getter();
      v122 = v121;
      outlined destroy of AccountUpdateNotice(v118, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice(v117, type metadata accessor for Participant);
      if (((v120 ^ v122) & 1) != 0)
      {
        v153 = static OS_os_log.conversationKit;
        v123 = swift_allocObject();
        *(_OWORD *)(v123 + 16) = v152;
        v124 = v156;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v156, type metadata accessor for Participant);
        v125 = v157;
        __swift_storeEnumTagSinglePayload(v124, 0, 1, v157);
        specialized >> prefix<A>(_:)(v124);
        v127 = v126;
        v128 = v40;
        v130 = v129;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v124, &demangling cache variable for type metadata for Participant?);
        v131 = v39;
        v132 = v43;
        v133 = v155;
        *(_QWORD *)(v123 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v123 + 64) = v133;
        *(_QWORD *)(v123 + 32) = v127;
        *(_QWORD *)(v123 + 40) = v130;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v128, v124, type metadata accessor for Participant);
        __swift_storeEnumTagSinglePayload(v124, 0, 1, v125);
        specialized >> prefix<A>(_:)(v124);
        v135 = v134;
        v137 = v136;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v124, &demangling cache variable for type metadata for Participant?);
        *(_QWORD *)(v123 + 96) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v123 + 104) = v133;
        v43 = v132;
        v39 = v131;
        *(_QWORD *)(v123 + 72) = v135;
        *(_QWORD *)(v123 + 80) = v137;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        v138 = &v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode];
        swift_beginAccess();
        v139 = *(void (**)(uint64_t))v138;
        if (*(_QWORD *)v138)
        {
          swift_retain();
          v139(v131);
          outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v139);
        }
      }
      goto LABEL_42;
    }
  }
  else
  {
    outlined destroy of AccountUpdateNotice(v114, type metadata accessor for Participant);
    v117 = v150;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v40, v150, type metadata accessor for Participant);
    v118 = v149;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v39, v149, type metadata accessor for Participant);
  }
  outlined destroy of AccountUpdateNotice(v118, type metadata accessor for Participant);
  outlined destroy of AccountUpdateNotice(v117, type metadata accessor for Participant);
LABEL_42:
  v140 = &v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant];
  result = swift_beginAccess();
  v142 = *(void (**)(uint64_t, uint64_t))v140;
  if (*(_QWORD *)v140)
  {
    swift_retain();
    v142(v39, v158);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v142);
  }
  return result;
}

double ConversationController.updateScreenShare(attributes:shouldUpdateCall:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  double result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  void *v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(void *, uint64_t, uint64_t);
  void (*v52)(uint64_t, void *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  char v63;
  _QWORD v64[2];
  unsigned __int8 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ScreenShareAttributes?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v58 - v8;
  v10 = type metadata accessor for ScreenShareAttributes(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v17 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ScreenShareAttributes?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ScreenShareAttributes?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_4:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1BD645380;
      specialized >> prefix<A>(_:)(a1);
      v20 = v19;
      v22 = v21;
      v23 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
      v24 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v18 + 64) = v24;
      *(_QWORD *)(v18 + 32) = v20;
      *(_QWORD *)(v18 + 40) = v22;
      v25 = v62 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      swift_beginAccess();
      v26 = *(_QWORD *)(v25 + 8);
      ObjectType = swift_getObjectType();
      v28 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 328);
      swift_unknownObjectRetain();
      LOBYTE(v26) = v28(ObjectType, v26);
      swift_unknownObjectRelease();
      v63 = v26 & 1;
      v29 = String.init<A>(reflecting:)();
      *(_QWORD *)(v18 + 96) = v23;
      *(_QWORD *)(v18 + 104) = v24;
      *(_QWORD *)(v18 + 72) = v29;
      *(_QWORD *)(v18 + 80) = v30;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      return result;
    }
LABEL_18:
    swift_once();
    goto LABEL_4;
  }
  outlined init with take of StagedCollaboration((uint64_t)v9, (uint64_t)v12, type metadata accessor for ScreenShareAttributes);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1BD6441D0;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v12, (uint64_t)v6, type metadata accessor for ScreenShareAttributes);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
  specialized >> prefix<A>(_:)((uint64_t)v6);
  v34 = v33;
  v36 = v35;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ScreenShareAttributes?);
  *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v32 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v32 + 32) = v34;
  *(_QWORD *)(v32 + 40) = v36;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0 || (v37 = ScreenShareAttributes.tuCallScreenShareAttributes.getter()) == 0)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for ScreenShareAttributes);
    return result;
  }
  v38 = v37;
  v39 = v62 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v40 = *(_QWORD *)(v39 + 8);
  v41 = swift_getObjectType();
  v42 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 328);
  swift_unknownObjectRetain();
  v43 = v42(v41, v40);
  swift_unknownObjectRelease();
  v44 = *(_QWORD *)(v39 + 8);
  v45 = swift_getObjectType();
  if ((v43 & 1) != 0)
  {
    v46 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 176);
    swift_unknownObjectRetain();
    v47 = (void *)v46(v45, v44);
    swift_unknownObjectRelease();
    if (v47)
    {
      v48 = objc_msgSend(v47, sel_isSignificantChangeFromAttributes_, v38);

      if (!v48)
        goto LABEL_16;
    }
    v49 = *(_QWORD *)(v39 + 8);
    v50 = swift_getObjectType();
    v51 = *(void (**)(void *, uint64_t, uint64_t))(v49 + 32);
    swift_unknownObjectRetain();
    v51(v38, v50, v49);
  }
  else
  {
    v52 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v44 + 40);
    swift_unknownObjectRetain();
    v52(1, v38, v45, v44);
  }
  swift_unknownObjectRelease();
LABEL_16:
  specialized Participant.ScreenShareAttributes.init(_:)(v38, (uint64_t)v64);
  v53 = v64[0];
  v54 = v64[1];
  v55 = v65;
  v60 = v67;
  v61 = v66;
  v59 = v68;
  v58 = v69;
  v56 = v70;
  outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for ScreenShareAttributes);
  v57 = v62 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes;
  *(_QWORD *)v57 = v53;
  *(_QWORD *)(v57 + 8) = v54;
  *(_QWORD *)(v57 + 16) = v55;
  *(_OWORD *)(v57 + 24) = v61;
  *(_OWORD *)(v57 + 40) = v60;
  *(_OWORD *)(v57 + 56) = v59;
  result = *(double *)&v58;
  *(_OWORD *)(v57 + 72) = v58;
  *(_QWORD *)(v57 + 88) = v56;
  *(_BYTE *)(v57 + 96) = 0;
  return result;
}

void closure #2 in ConversationController.setupScreenSharingSessionCallbacks()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    ConversationController.startScreenShare(attributes:)(a1);

  }
}

void ConversationController.startScreenShare(attributes:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, id, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  __int128 v31;
  unsigned __int8 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ScreenShareAttributes?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchPredicate();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ScreenShareAttributes?);
  v12 = type metadata accessor for ScreenShareAttributes(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v12) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ScreenShareAttributes?);
    goto LABEL_8;
  }
  v13 = ScreenShareAttributes.tuCallScreenShareAttributes.getter();
  outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for ScreenShareAttributes);
  if (!v13)
  {
LABEL_8:
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_9:
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      v26 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      swift_beginAccess();
      v27 = *(_QWORD *)(v26 + 8);
      ObjectType = swift_getObjectType();
      v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 336);
      swift_unknownObjectRetain();
      v29(1, ObjectType, v27);
      swift_unknownObjectRelease();
      return;
    }
LABEL_11:
    swift_once();
    goto LABEL_9;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
  specialized >> prefix<A>(_:)(a1);
  v16 = v15;
  v18 = v17;
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v14 + 32) = v16;
  *(_QWORD *)(v14 + 40) = v18;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v19 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v20 = *(_QWORD *)(v19 + 8);
  v21 = swift_getObjectType();
  v22 = *(void (**)(uint64_t, id, uint64_t, uint64_t))(v20 + 40);
  swift_unknownObjectRetain();
  v22(1, v13, v21, v20);
  swift_unknownObjectRelease();
  specialized Participant.ScreenShareAttributes.init(_:)(v13, (uint64_t)&v31);
  v23 = v32;
  v24 = v37;
  v25 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes;
  *(_OWORD *)v25 = v31;
  *(_QWORD *)(v25 + 16) = v23;
  *(_OWORD *)(v25 + 24) = v33;
  *(_OWORD *)(v25 + 40) = v34;
  *(_OWORD *)(v25 + 56) = v35;
  *(_OWORD *)(v25 + 72) = v36;
  *(_QWORD *)(v25 + 88) = v24;
  *(_BYTE *)(v25 + 96) = 0;
}

uint64_t ConversationController.stopScreenShare()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(_QWORD, uint64_t, uint64_t);
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (one-time initialization token for conversationKit != -1)
LABEL_5:
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v7 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 8);
  ObjectType = swift_getObjectType();
  v10 = *(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 336);
  swift_unknownObjectRetain();
  v10(0, ObjectType, v8);
  return swift_unknownObjectRelease();
}

void closure #1 in ConversationController.setupScreenSharingSessionCallbacks()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

void sub_1BD54C698(void *a1)
{
  uint64_t v1;

  if (a1)
  {
    ConversationController.updateScreenShare(attributes:shouldUpdateCall:)(v1, 1);

  }
  OUTLINED_FUNCTION_32();
}

void closure #3 in ConversationController.setupScreenSharingSessionCallbacks()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void sub_1BD54C6DC(void *a1)
{
  if (a1)
  {
    ConversationController.stopScreenShare()();

  }
  OUTLINED_FUNCTION_32();
}

void ConversationController.updateBuzzedMember(_:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t (*v45)(_QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD);
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  char v60;
  unint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  char *v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  _QWORD v95[4];
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t);
  uint64_t v109;
  char *v110;
  uint64_t *v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  unint64_t v115;
  _QWORD v116[10];

  OUTLINED_FUNCTION_93();
  v4 = v1;
  v115 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t)v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_285_0();
  v106 = *(_QWORD *)(v9 - 8);
  v107 = v9;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  v105 = (char *)v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = OUTLINED_FUNCTION_16_61();
  v103 = *(_QWORD *)(v104 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_41();
  v102 = v13;
  v101 = OUTLINED_FUNCTION_503_1();
  v99 = *(_QWORD *)(v101 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  v98 = (char *)v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_33_18(v17);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v18);
  v96 = (uint64_t)v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_62();
  v114 = v21;
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_23_36();
  v112 = v22;
  MEMORY[0x1E0C80A78](v23);
  v109 = (uint64_t)v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_62();
  v108 = v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v95 - v28;
  v97 = v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v95 - v32;
  v34 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_59(v36, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_571_0(v37);
  *(_QWORD *)v3 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v3, *MEMORY[0x1E0DEF740], v34);
  OUTLINED_FUNCTION_112_7();
  OUTLINED_FUNCTION_714();
  OUTLINED_FUNCTION_101(v3, v38);
  if ((v1 & 1) == 0)
  {
    __break(1u);
LABEL_31:
    swift_once();
    goto LABEL_14;
  }
  v39 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  OUTLINED_FUNCTION_1();
  v111 = v39;
  v40 = *v39;
  v41 = *(_QWORD *)(*v39 + 16);
  if (v41)
  {
    v95[2] = v8;
    v113 = v4;
    v110 = v33;
    OUTLINED_FUNCTION_597_0();
    v95[1] = v40;
    OUTLINED_FUNCTION_16_31();
    v3 = (uint64_t)type metadata accessor for Participant;
    while (1)
    {
      OUTLINED_FUNCTION_157_2(v34, (uint64_t)v29);
      v42 = *(void **)&v29[*(int *)(v2 + 28)];
      if (v42)
      {
        v43 = v42;
        v4 = objc_msgSend((id)v115, sel_handle);
        v33 = (char *)objc_msgSend(v43, sel_isEquivalentToHandle_, v4);

        if ((_DWORD)v33)
          break;
      }
      v44 = OUTLINED_FUNCTION_311_0();
      outlined destroy of AccountUpdateNotice(v44, v45);
      v34 += v8;
      if (!--v41)
      {
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_729();
        goto LABEL_9;
      }
    }
    OUTLINED_FUNCTION_27();
    v47 = v114;
    outlined init with take of StagedCollaboration((uint64_t)v29, v114, type metadata accessor for Participant);
    OUTLINED_FUNCTION_729();
  }
  else
  {
    OUTLINED_FUNCTION_5_0();
    v46 = 1;
LABEL_9:
    v47 = v114;
  }
  OUTLINED_FUNCTION_83_0(v47, v46);
  OUTLINED_FUNCTION_27();
  v48 = OUTLINED_FUNCTION_69_0(v47, 1, v2);
  if (!v49)
  {
    v55 = OUTLINED_FUNCTION_610_0();
    outlined init with take of StagedCollaboration(v55, v56, v57);
    v58 = (uint64_t (*)(uint64_t))&v33[*(int *)(v2 + 20)];
    v59 = ConversationController.indexOfRemoteParticipant(with:)();
    if ((v60 & 1) != 0)
    {
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_25:
        static os_log_type_t.error.getter();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        *(_OWORD *)(OUTLINED_FUNCTION_15() + 16) = xmmword_1BD6441D0;
        v92 = OUTLINED_FUNCTION_33_0();
        OUTLINED_FUNCTION_291(v8, (uint64_t)v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 16));
        OUTLINED_FUNCTION_77_16(v8);
        specialized >> prefix<A>(_:)(v8);
        OUTLINED_FUNCTION_423_0();
        OUTLINED_FUNCTION_109_0(v93, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v94 = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
        OUTLINED_FUNCTION_706(v94);
        OUTLINED_FUNCTION_112_0();
        OUTLINED_FUNCTION_53();
        v91 = (uint64_t)v33;
        goto LABEL_26;
      }
LABEL_38:
      swift_once();
      goto LABEL_25;
    }
    v61 = v59;
    v58 = v108;
    Participant.asRung()();
    v62 = v111;
    OUTLINED_FUNCTION_2_0();
    v63 = *v62;
    v64 = OUTLINED_FUNCTION_83_8();
    *v62 = v63;
    if ((v64 & 1) != 0)
    {
      if ((v61 & 0x8000000000000000) == 0)
        goto LABEL_19;
    }
    else
    {
      v63 = OUTLINED_FUNCTION_575_0();
      *v111 = v63;
      if ((v61 & 0x8000000000000000) == 0)
      {
LABEL_19:
        if (v61 < *(_QWORD *)(v63 + 16))
        {
          v113 = v4;
          v3 = *(unsigned __int8 *)(v112 + 80);
          v4 = (id)((v3 + 32) & ~v3);
          v8 = *(_QWORD *)(v112 + 72) * v61;
          outlined assign with take of Participant((uint64_t)v58, (uint64_t)v4 + v63 + v8);
          v65 = *v111;
          swift_endAccess();
          if (v61 < *(_QWORD *)(v65 + 16))
          {
            v58 = type metadata accessor for Participant;
            v66 = v109;
            OUTLINED_FUNCTION_467((uint64_t)v4 + v65 + v8, v109);
            ConversationController.postParticipantStateChangeCallbacks(for:updatedFrom:)(v66, (uint64_t)v33);
            OUTLINED_FUNCTION_94(v66);
            if (one-time initialization token for conversationKit == -1)
            {
LABEL_22:
              v67 = static OS_os_log.conversationKit;
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
              v68 = OUTLINED_FUNCTION_15();
              *(_OWORD *)(v68 + 16) = xmmword_1BD6441D0;
              v69 = *v111;
              if (v61 < *(_QWORD *)(*v111 + 16))
              {
                v70 = (_QWORD *)v68;
                v110 = v33;
                v115 = ~v3;
                v71 = v96;
                outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v4 + v69 + v8, v96, type metadata accessor for Participant);
                OUTLINED_FUNCTION_83_0(v71, 0);
                specialized >> prefix<A>(_:)(v71);
                v73 = v72;
                v75 = v74;
                OUTLINED_FUNCTION_96_3(v72, &demangling cache variable for type metadata for Participant?);
                v70[8] = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
                v70[4] = v73;
                v70[5] = v75;
                static os_log_type_t.default.getter();
                OUTLINED_FUNCTION_239_1();
                OUTLINED_FUNCTION_133();
                OUTLINED_FUNCTION_757();
                v76 = (void *)static OS_dispatch_queue.main.getter();
                v77 = v98;
                static DispatchTime.now()();
                v78 = v100;
                MEMORY[0x1C3B72C50](v77, 10.0);
                v79 = *(void (**)(char *, uint64_t))(v99 + 8);
                v80 = v77;
                v81 = v101;
                v79(v80, v101);
                v82 = OUTLINED_FUNCTION_15();
                OUTLINED_FUNCTION_475(v82);
                swift_unknownObjectWeakInit();
                v83 = v109;
                OUTLINED_FUNCTION_92_12((uint64_t)v33, v109);
                v84 = (v3 + 24) & v115;
                v85 = swift_allocObject();
                *(_QWORD *)(v85 + 16) = v67;
                outlined init with take of StagedCollaboration(v83, v85 + v84, type metadata accessor for Participant);
                v116[4] = partial apply for closure #2 in ConversationController.updateBuzzedMember(_:);
                v116[5] = v85;
                v116[0] = MEMORY[0x1E0C809B0];
                v116[1] = 1107296256;
                v116[2] = thunk for @escaping @callee_guaranteed () -> ();
                v116[3] = &block_descriptor_75_0;
                v86 = _Block_copy(v116);
                swift_release();
                v87 = v102;
                static DispatchQoS.unspecified.getter();
                v116[0] = MEMORY[0x1E0DEE9D8];
                lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
                OUTLINED_FUNCTION_31_11();
                OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
                v88 = (uint64_t)v105;
                dispatch thunk of SetAlgebra.init<A>(_:)();
                v89 = OUTLINED_FUNCTION_607_0();
                MEMORY[0x1C3B735B0](v89);
                _Block_release(v86);

                OUTLINED_FUNCTION_371(v88, *(uint64_t (**)(uint64_t, uint64_t))(v106 + 8));
                OUTLINED_FUNCTION_612_0();
                (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v87, v104);
                v79(v78, v81);
                v91 = (uint64_t)v110;
LABEL_26:
                outlined destroy of AccountUpdateNotice(v91, type metadata accessor for Participant);
                goto LABEL_29;
              }
              __break(1u);
              goto LABEL_38;
            }
LABEL_36:
            swift_once();
            goto LABEL_22;
          }
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
  OUTLINED_FUNCTION_96_3(v48, &demangling cache variable for type metadata for Participant?);
  if (one-time initialization token for conversationKit != -1)
    goto LABEL_31;
LABEL_14:
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v50 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v50 + 16) = xmmword_1BD6441D0;
  v51 = objc_msgSend((id)v115, sel_handle);
  if (v51)
  {
    v116[0] = v51;
    OUTLINED_FUNCTION_59((uint64_t)v51, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    v52 = OUTLINED_FUNCTION_205_5();
    v54 = v53;
  }
  else
  {
    v54 = 0xE300000000000000;
    v52 = 7104878;
  }
  *(_QWORD *)(v50 + 64) = OUTLINED_FUNCTION_331_4(MEMORY[0x1E0DEA968]);
  *(_QWORD *)(v50 + 32) = v52;
  *(_QWORD *)(v50 + 40) = v54;
  OUTLINED_FUNCTION_224_3();
  OUTLINED_FUNCTION_2_1();
LABEL_29:
  OUTLINED_FUNCTION_52_1();
}

void closure #2 in ConversationController.updateBuzzedMember(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  char v19;
  char v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v25[2];
  char *v26;
  char *v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v2);
  v27 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Participant(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v25 - v11;
  v13 = a1 + 16;
  swift_beginAccess();
  v14 = MEMORY[0x1C3B752C0](a1 + 16);
  if (v14)
  {
    v15 = (char *)v14;
    v26 = v6;
    swift_beginAccess();
    v16 = MEMORY[0x1C3B752C0](v13);
    if (v16)
    {
      v17 = (void *)v16;
      v18 = ConversationController.indexOfRemoteParticipant(with:)();
      v20 = v19;

      if ((v20 & 1) == 0)
      {
        v21 = &v15[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
        swift_beginAccess();
        if ((v18 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else
        {
          v25[1] = v21;
          v22 = *(_QWORD *)v21;
          v23 = (uint64_t)v26;
          if (v18 < *(_QWORD *)(*(_QWORD *)v21 + 16))
          {
            v25[0] = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
            outlined init with copy of ConversationControlsAppLaunchButtonType(v22 + v25[0] + *(_QWORD *)(v8 + 72) * v18, (uint64_t)v12, type metadata accessor for Participant);
            outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v12, v23, type metadata accessor for Participant.State);
            v24 = (char *)&loc_1BD54D2A0 + dword_1BD54D57C[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
        }
        __break(1u);
        JUMPOUT(0x1BD54D540);
      }
    }

  }
}

Swift::Void __swiftcall ConversationController.setDownlinkMuted(_:)(Swift::Bool a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v6 = OUTLINED_FUNCTION_7_22();
  *v1 = v6;
  OUTLINED_FUNCTION_17(v6, *MEMORY[0x1E0DEF740]);
  v7 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_357_2();
  if (!v11)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v10, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_5:
      static os_log_type_t.error.getter();
      OUTLINED_FUNCTION_55_0();
      goto LABEL_6;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  outlined init with take of Notice(&v10, (uint64_t)v13);
  v8 = OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_85_21(v8, (uint64_t)&v10);
  v9 = v12;
  __swift_project_boxed_opaque_existential_1(&v10, v11);
  OUTLINED_FUNCTION_31_38(a1, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 160));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  OUTLINED_FUNCTION_100_2();
LABEL_6:
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall ConversationController.setIgnoreLetMeInRequests(_:)(Swift::Bool a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[40];

  ConversationController.lookupActiveConversation()();
  if (v15)
  {
    OUTLINED_FUNCTION_326_5(v2, v3, v4, v5);
    v8 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_85_21(v8, (uint64_t)v14);
    v9 = v16;
    OUTLINED_FUNCTION_80_20(v14, v15);
    OUTLINED_FUNCTION_31_38(a1, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 192));
    v10 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    OUTLINED_FUNCTION_16_56(v10, v11, v12, v13);
  }
  else
  {
    OUTLINED_FUNCTION_85_13(v2, &demangling cache variable for type metadata for Conversation?, v4, v5, v6, v7);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    OUTLINED_FUNCTION_55_0();
  }
  OUTLINED_FUNCTION_322_3();
}

void closure #1 in ConversationController.shareableLink(completionHandler:)(void *a1, void *a2, void (*a3)(void *, void *), uint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BD6441D0;
    v40 = a2;
    v13 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v14 = String.init<A>(reflecting:)();
    v16 = v15;
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v12 + 32) = v14;
    *(_QWORD *)(v12 + 40) = v16;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
    v17 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    if (!a3)
      return;
    v18 = a2;
    goto LABEL_4;
  }
  if (a1)
  {
    v19 = one-time initialization token for conversationKit;
    v20 = a1;
    if (v19 != -1)
      swift_once();
    v39 = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BD645380;
    v40 = v20;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
    v38 = v20;
    v22 = String.init<A>(reflecting:)();
    v24 = v23;
    v25 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
    v26 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v21 + 64) = v26;
    *(_QWORD *)(v21 + 32) = v22;
    *(_QWORD *)(v21 + 40) = v24;
    v27 = a5[3];
    v28 = a5[4];
    __swift_project_boxed_opaque_existential_1(a5, v27);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
    v29 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v29);
    specialized >> prefix<A>(_:)((uint64_t)v11);
    v31 = v30;
    v33 = v32;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(_QWORD *)(v21 + 96) = v25;
    *(_QWORD *)(v21 + 104) = v26;
    *(_QWORD *)(v21 + 72) = v31;
    *(_QWORD *)(v21 + 80) = v33;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    if (a3)
    {
      v34 = v38;
      a3(a1, 0);

    }
    else
    {

    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v35 + 32) = 7104878;
    *(_QWORD *)(v35 + 40) = 0xE300000000000000;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
    v36 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    if (a3)
    {
      v18 = 0;
LABEL_4:
      a3(0, v18);
    }
  }
}

Swift::Void __swiftcall ConversationController.pauseLocalVideoIfStopped()()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_829();
  v1 = v0;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_242_5();
  OUTLINED_FUNCTION_21_55();
  v2 = OUTLINED_FUNCTION_214_3();
  OUTLINED_FUNCTION_113();
  if ((v2 & 1) == 0)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame) = 1;
    OUTLINED_FUNCTION_638_0();
  }
  OUTLINED_FUNCTION_2_3();
}

Swift::Void __swiftcall ConversationController.stopLocalVideo()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD, uint64_t, uint64_t);
  _QWORD v24[4];

  v3 = v0;
  v4 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v7 = OUTLINED_FUNCTION_7_22();
  *v1 = v7;
  OUTLINED_FUNCTION_4_57(v7, *MEMORY[0x1E0DEF740]);
  v8 = OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_101((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
LABEL_6:
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_255();
    OUTLINED_FUNCTION_379_2();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_378_3();
    v12 = *(_QWORD *)(v4 - 8);
    OUTLINED_FUNCTION_54_42();
    MEMORY[0x1E0C80A78](v13);
    v15 = (char *)v24 - v14 + 16;
    OUTLINED_FUNCTION_120_7(v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
    OUTLINED_FUNCTION_107_12();
    OUTLINED_FUNCTION_101((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    __swift_project_boxed_opaque_existential_1(v24, v24[3]);
    v17 = OUTLINED_FUNCTION_38_21();
    v18(v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    v19 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    OUTLINED_FUNCTION_1();
    v20 = *(_QWORD *)(v19 + 8);
    v21 = OUTLINED_FUNCTION_15_6();
    v22 = *(void (**)(_QWORD, uint64_t, uint64_t))(v20 + 312);
    OUTLINED_FUNCTION_72_9();
    v22(0, v21, v20);
    OUTLINED_FUNCTION_10();
    goto LABEL_7;
  }
  v9 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
  OUTLINED_FUNCTION_1();
  if ((char)v9[2] < 0)
  {
    v10 = *v9;
    if ((ConversationController.isCarPlayConnected.getter() & 1) != 0)
    {
      v11 = (_BYTE *)(v3
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable);
      OUTLINED_FUNCTION_2_0();
      *v11 = 1;
    }
    v4 = v10 & 1;
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_6;
    goto LABEL_9;
  }
LABEL_7:
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall ConversationController.registerForMoments()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  _QWORD *v21;
  id v22;
  char *v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;

  OUTLINED_FUNCTION_93();
  v3 = v0;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_83_17();
  if (!v6)
    goto LABEL_18;
  OUTLINED_FUNCTION_694();
  if (v27)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
    OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    v9 = OUTLINED_FUNCTION_97();
    if ((v9 & 1) != 0)
    {
      v10 = v28;
      if (OUTLINED_FUNCTION_25_1(v9, sel_state) != (id)3)
        goto LABEL_14;
      v11 = OUTLINED_FUNCTION_25_1(3, sel_mergedActiveRemoteParticipants);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      v13 = specialized Set.count.getter(v12);
      OUTLINED_FUNCTION_25();
      v14 = v13 < 1;
      v10 = v28;
      if (v14)
      {
LABEL_14:
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_55_0();

      }
      else
      {
        v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD338]), sel_initWithConversation_, v28);
        v16 = OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider;
        v17 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider];
        if (v17 && (objc_msgSend(v17, sel_isEqualToProvider_, v15) & 1) != 0)
        {

        }
        else
        {
          ConversationController.unregisterForMoments()();
          v18 = *(void **)&v3[v16];
          *(_QWORD *)&v3[v16] = v15;
          v19 = v15;

          v20 = ConversationController.momentsController.getter();
          OUTLINED_FUNCTION_59((uint64_t)v20, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
          v26 = (void *)OUTLINED_FUNCTION_7_22();
          v21 = (_QWORD *)OUTLINED_FUNCTION_15();
          v21[2] = v20;
          v21[3] = v19;
          v21[4] = v3;
          v24 = OUTLINED_FUNCTION_329_4((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
          v25 = v19;
          v22 = v20;
          v23 = v3;
          OUTLINED_FUNCTION_43();
          OUTLINED_FUNCTION_269();
          lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
          OUTLINED_FUNCTION_31_11();
          OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
          OUTLINED_FUNCTION_132_10();
          OUTLINED_FUNCTION_490_0();
          MEMORY[0x1C3B7361C]();
          _Block_release(v24);

          OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
          OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
        }
      }
      goto LABEL_18;
    }
  }
  else
  {
    OUTLINED_FUNCTION_396_2(v7, &demangling cache variable for type metadata for Conversation?);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_55_0();
LABEL_18:
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationController.registerForMoments()(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6[4] = partial apply for closure #1 in closure #1 in ConversationController.registerForMoments();
  v6[5] = v4;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  v6[3] = &block_descriptor_978;
  v5 = _Block_copy(v6);
  swift_release();
  objc_msgSend(a1, sel_registerProvider_completion_, a2, v5);
  _Block_release(v5);
}

void closure #1 in closure #1 in ConversationController.registerForMoments()(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
    if (a1)
    {
      v19[0] = a1;
      v7 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      v8 = String.init<A>(reflecting:)();
      v10 = v9;
    }
    else
    {
      v10 = 0xE300000000000000;
      v8 = 7104878;
    }
    *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v6 + 32) = v8;
    *(_QWORD *)(v6 + 40) = v10;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.lookupActiveConversation()();
    if (v18)
    {
      outlined init with take of Notice(&v17, (uint64_t)v19);
      v11 = v20;
      v12 = v21;
      __swift_project_boxed_opaque_existential_1(v19, v20);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 56))(v11, v12) == 3)
      {
        v13 = v20;
        v14 = v21;
        __swift_project_boxed_opaque_existential_1(v19, v20);
        v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 120))(v13, v14);
        v16 = specialized Set.count.getter(v15);
        swift_bridgeObjectRelease();
        if (v16 >= 1)
          ConversationController.updateParticipants(with:)(v19);
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    }
    else
    {

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v17, &demangling cache variable for type metadata for Conversation?);
    }
  }
}

uint64_t ConversationController.updateParticipants(with:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)&v34[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_10;
  }
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56))(v7, v8) == 4)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
    v10 = a1[3];
    v11 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v10);
    v34[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 56))(v10, v11);
    type metadata accessor for TUConversationState(0);
    v12 = String.init<A>(reflecting:)();
    v14 = v13;
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v9 + 32) = v12;
    *(_QWORD *)(v9 + 40) = v14;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BD6441D0;
    outlined init with copy of RadarReporting((uint64_t)a1, (uint64_t)v34);
    v16 = specialized >> prefix<A>(_:)((uint64_t)v34);
    v18 = v17;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v34, &demangling cache variable for type metadata for Conversation?);
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v15 + 32) = v16;
    *(_QWORD *)(v15 + 40) = v18;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.removeParticipants(notIn:)(a1);
    ConversationController.createNewParticipants(with:)(a1);
    ConversationController.updateRemoteParticipantsStates(with:)(a1);
    ConversationController.updateRemoteParticipantsNames(with:)(a1);
    ConversationController.updateLocalMemberAuthorizedToChangeGroupMembership(with:)(a1);
    ConversationController.updateParticipantsForcedToShowAsNeedingAuthorization()();
    ConversationController.updateOtherInvitedParticipants()();
    ConversationController.updateIdentityClaimingAssociations(in:)();
  }
  if (one-time initialization token for screenSharing != -1)
    goto LABEL_17;
LABEL_10:
  v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)&static Log.screenSharing);
  outlined init with copy of RadarReporting((uint64_t)a1, (uint64_t)v34);
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v22 = 134217984;
    v23 = v35;
    v24 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 120))(v23, v24);
    v26 = specialized Set.count.getter(v25);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    v34[0] = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v20, v21, "mergedActiveRemoteParticipants.count = %ld", v22, 0xCu);
    MEMORY[0x1C3B751B8](v22, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }

  if (one-time initialization token for shared != -1)
    swift_once();
  v27 = static ScreenSharingInteractionController.shared;
  v28 = a1[3];
  v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 120))(v28, v29);
  v31 = specialized Set.count.getter(v30);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(BOOL))((*MEMORY[0x1E0DEEDD8] & *v27) + 0x150))(v31 == 1);
}

void closure #1 in ConversationController.unregisterForMoments()(void *a1, uint64_t a2)
{
  void *v4;
  _QWORD v5[6];

  v5[4] = closure #1 in closure #1 in ConversationController.unregisterForMoments();
  v5[5] = 0;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  v5[3] = &block_descriptor_981;
  v4 = _Block_copy(v5);
  objc_msgSend(a1, sel_unregisterProvider_completion_, a2, v4);
  _Block_release(v4);
}

uint64_t closure #1 in closure #1 in ConversationController.unregisterForMoments()(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441D0;
  if (a1)
  {
    v3 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v4 = String.init<A>(reflecting:)();
    v6 = v5;
  }
  else
  {
    v6 = 0xE300000000000000;
    v4 = 7104878;
  }
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v6;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

void closure #1 in ConversationController.captureMoment(for:)(uint64_t a1, void *a2, id a3, uint64_t a4)
{
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;

  if (a3)
  {
    v5 = a3;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
    v7 = a3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v8 = String.init<A>(reflecting:)();
    v10 = v9;
    *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v6 + 32) = v8;
    *(_QWORD *)(v6 + 40) = v10;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

  }
  else if (a2)
  {
    v13 = a4 + 16;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
    swift_bridgeObjectRetain();
    v15 = MEMORY[0x1E0DEA968];
    v16 = String.init<A>(reflecting:)();
    v18 = v17;
    *(_QWORD *)(v14 + 56) = v15;
    *(_QWORD *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v14 + 32) = v16;
    *(_QWORD *)(v14 + 40) = v18;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v19 = MEMORY[0x1C3B752C0](v13);
    if (v19)
    {
      v20 = (void *)v19;
      v21._countAndFlagsBits = a1;
      v21._object = a2;
      ConversationController.endRequest(for:)(v21);

    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
}

Swift::Void __swiftcall ConversationController.endRequest(for:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_83_17();
  if (v3)
  {
    v4 = ConversationController.momentsController.getter();
    v5 = OUTLINED_FUNCTION_124_0();
    v6 = (void *)MEMORY[0x1C3B72E00](v5);
    v7 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v7 + 16) = v2;
    *(_QWORD *)(v7 + 24) = v1;
    v8 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> (), MEMORY[0x1E0C809B0], 1107296256, v12, v13);
    OUTLINED_FUNCTION_124();
    swift_release();
    objc_msgSend(v4, sel_endRequestWithTransactionID_completion_, v6, v8);
    OUTLINED_FUNCTION_768();

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v9 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
    OUTLINED_FUNCTION_124();
    v10 = MEMORY[0x1E0DEA968];
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_423_0();
    *(_QWORD *)(v9 + 56) = v10;
    v11 = lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_706(v11);
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_53();
  }
}

void closure #1 in ConversationController.startRecordingLocalVideo()(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(uint64_t);
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v7 = a4 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1C3B752C0](v7);
  if (!v8)
    return;
  v9 = (char *)v8;
  if (a3)
  {
    v10 = a3;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
    v28[0] = a3;
    v12 = a3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v13 = String.init<A>(reflecting:)();
    v15 = v14;
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v11 + 32) = v13;
    *(_QWORD *)(v11 + 40) = v15;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    return;
  }
  if (!a2)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    goto LABEL_20;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BD6441D0;
  v28[0] = a1;
  v28[1] = a2;
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x1E0DEA968];
  v18 = String.init<A>(reflecting:)();
  v20 = v19;
  *(_QWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v16 + 32) = v18;
  *(_QWORD *)(v16 + 40) = v20;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v21 = &v9[OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID];
  swift_beginAccess();
  *(_QWORD *)v21 = a1;
  *((_QWORD *)v21 + 1) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ConversationController.lookupActiveConversation()();
  if (!v27)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v26, &demangling cache variable for type metadata for Conversation?);
LABEL_19:
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    ConversationController.stopRecordingLocalVideo()();
LABEL_20:

    return;
  }
  outlined init with take of Notice(&v26, (uint64_t)v28);
  v22 = v29;
  v23 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23) != 3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    goto LABEL_19;
  }
  v24 = &v9[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo];
  swift_beginAccess();
  v25 = *(void (**)(uint64_t))v24;
  if (*(_QWORD *)v24)
  {
    swift_retain();
    v25(1);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v25);
  }

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

void closure #1 in ConversationController.endRequest(for:)(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1)
  {
    v2 = a1;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1BD6441D0;
    v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v5 = String.init<A>(reflecting:)();
    v7 = v6;
    *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v3 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v3 + 32) = v5;
    *(_QWORD *)(v3 + 40) = v7;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
    swift_bridgeObjectRetain();
    v9 = MEMORY[0x1E0DEA968];
    v10 = String.init<A>(reflecting:)();
    v12 = v11;
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v8 + 32) = v10;
    *(_QWORD *)(v8 + 40) = v12;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
}

uint64_t closure #1 in ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[6] = a8;
  v8[7] = v10;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  type metadata accessor for MainActor();
  v8[8] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_153_1();
  VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in ConversationController.startRecordingVideoMessage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a4;
  type metadata accessor for MainActor();
  v4[13] = static MainActor.shared.getter();
  v4[14] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[15] = v5;
  return swift_task_switch();
}

void closure #1 in ConversationController.startRecordingVideoMessage()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

uint64_t sub_1BD54F708(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  if (a1)
  {
    OUTLINED_FUNCTION_451_0(a1, OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    OUTLINED_FUNCTION_37_0();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 136) = v2;
    OUTLINED_FUNCTION_363_3(v2, (uint64_t)closure #1 in ConversationController.startRecordingVideoMessage());
    return VideoMessageController.start()();
  }
  else
  {
    OUTLINED_FUNCTION_450_0();
    return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t closure #1 in ConversationController.startRecordingVideoMessage()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_144_5();
  if (!v0)
    OUTLINED_FUNCTION_698();
  return OUTLINED_FUNCTION_2_8();
}

uint64_t closure #1 in ConversationController.pauseRecordingVideoMessage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  v4[4] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v5;
  return swift_task_switch();
}

uint64_t closure #1 in ConversationController.pauseRecordingVideoMessage()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = closure #1 in ConversationController.pauseRecordingVideoMessage();
  return VideoMessageController.pause()();
}

{
  OUTLINED_FUNCTION_325_3();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t closure #1 in ConversationController.stopRecordingVideoMessage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a4;
  type metadata accessor for MainActor();
  v4[13] = static MainActor.shared.getter();
  v4[14] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[15] = v5;
  return swift_task_switch();
}

void closure #1 in ConversationController.stopRecordingVideoMessage()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

uint64_t sub_1BD54F930(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  if (a1)
  {
    OUTLINED_FUNCTION_451_0(a1, OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    OUTLINED_FUNCTION_37_0();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 136) = v2;
    OUTLINED_FUNCTION_363_3(v2, (uint64_t)closure #1 in ConversationController.startRecordingVideoMessage());
    return VideoMessageController.stop()();
  }
  else
  {
    OUTLINED_FUNCTION_450_0();
    return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t closure #1 in ConversationController.saveRecordedVideoMessage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a4;
  type metadata accessor for MainActor();
  v4[13] = static MainActor.shared.getter();
  v4[14] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[15] = v5;
  return swift_task_switch();
}

void closure #1 in ConversationController.saveRecordedVideoMessage()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

uint64_t sub_1BD54FA24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  if (a1)
  {
    OUTLINED_FUNCTION_451_0(a1, OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    OUTLINED_FUNCTION_37_0();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 136) = v2;
    OUTLINED_FUNCTION_363_3(v2, (uint64_t)closure #1 in ConversationController.saveRecordedVideoMessage());
    return VideoMessageController.save()();
  }
  else
  {
    OUTLINED_FUNCTION_450_0();
    return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t closure #1 in ConversationController.saveRecordedVideoMessage()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_144_5();
  if (!v0)
    OUTLINED_FUNCTION_698();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_450_0();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (**v8)(uint64_t);
  void (*v9)(uint64_t);
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 144);
  v2 = *(void **)(v0 + 128);
  OUTLINED_FUNCTION_450_0();

  *(_QWORD *)(v0 + 88) = v1;
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  if ((OUTLINED_FUNCTION_97() & 1) != 0
    && (v4 = *(_QWORD *)(v0 + 96) + 16,
        v5 = *(unsigned __int8 *)(v0 + 152),
        OUTLINED_FUNCTION_1(),
        (v6 = MEMORY[0x1C3B752C0](v4)) != 0))
  {
    v7 = (void *)v6;
    v8 = (void (**)(uint64_t))(v6
                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
    OUTLINED_FUNCTION_1();
    v9 = *v8;
    v10 = *(void **)(v0 + 144);
    if (*v8)
    {
      v11 = OUTLINED_FUNCTION_416_0();
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v11);

      v9(v5);
      v12 = OUTLINED_FUNCTION_416_0();
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v12);
    }
    else
    {

    }
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in ConversationController.resetRecordingVideoMessage(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  type metadata accessor for MainActor();
  v6[15] = static MainActor.shared.getter();
  v6[16] = dispatch thunk of Actor.unownedExecutor.getter();
  v6[17] = v7;
  return swift_task_switch();
}

void closure #1 in ConversationController.resetRecordingVideoMessage(completion:)()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

uint64_t sub_1BD54FC9C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  if (a1)
  {
    v2 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    *(_QWORD *)(v1 + 144) = v2;
    v3 = v2;
    OUTLINED_FUNCTION_37_0();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 152) = v4;
    OUTLINED_FUNCTION_363_3(v4, (uint64_t)closure #1 in ConversationController.resetRecordingVideoMessage(completion:));
    return VideoMessageController.reset()();
  }
  else
  {
    OUTLINED_FUNCTION_692();
    v6 = *(uint64_t (**)(uint64_t))(v1 + 104);
    if (v6)
      OUTLINED_FUNCTION_691(v6);
    return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t closure #1 in ConversationController.resetRecordingVideoMessage(completion:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)

  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_692();
  v1 = *(uint64_t (**)(uint64_t))(v0 + 104);
  if (v1)
    OUTLINED_FUNCTION_691(v1);
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (**v8)(uint64_t);
  void (*v9)(uint64_t);
  void (*v10)(_QWORD);
  void *v11;

  v1 = *(void **)(v0 + 160);
  v2 = *(void **)(v0 + 144);
  OUTLINED_FUNCTION_692();

  *(_QWORD *)(v0 + 88) = v1;
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  if ((OUTLINED_FUNCTION_97() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 96) + 16;
    v5 = *(unsigned __int8 *)(v0 + 168);
    OUTLINED_FUNCTION_1();
    v6 = MEMORY[0x1C3B752C0](v4);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = (void (**)(uint64_t))(v6
                                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
      OUTLINED_FUNCTION_1();
      v9 = *v8;
      if (*v8)
      {
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v9);

        v9(v5);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v9);
      }
      else
      {

      }
    }
  }
  v10 = *(void (**)(_QWORD))(v0 + 104);
  v11 = *(void **)(v0 + 160);
  if (v10)
    v10(0);

  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in ConversationController.discardRecordedVideoMessage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  v4[4] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v5;
  return swift_task_switch();
}

uint64_t closure #1 in ConversationController.discardRecordedVideoMessage()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = closure #1 in ConversationController.discardRecordedVideoMessage();
  return VideoMessageController.discardRecording()();
}

{
  OUTLINED_FUNCTION_325_3();
  return OUTLINED_FUNCTION_4_4();
}

void ConversationController.checkScreenTimeRestricts(_:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 160))(v2, v3) & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BD6441D0;
    v5 = a1[3];
    v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Set<TUConversationParticipant>);
    v7 = String.init<A>(reflecting:)();
    v9 = v8;
    *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v4 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v4 + 32) = v7;
    *(_QWORD *)(v4 + 40) = v9;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.leaveConversation(reason:)();
  }
}

uint64_t closure #1 in ConversationController.fetchExistingScreenSharingAttributes()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v4 = type metadata accessor for DispatchWorkItemFlags();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS();
  v8 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v11 = (void *)static OS_dispatch_queue.main.getter();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = partial apply for closure #1 in closure #1 in ConversationController.fetchExistingScreenSharingAttributes();
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_1001;
  v13 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, v5);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v10, v7, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v15);
}

void closure #1 in closure #1 in ConversationController.fetchExistingScreenSharingAttributes()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    if (a2)
    {
      v6 = swift_unknownObjectRetain();
      ConversationController.updateRemoteScreenShareAttributesChanged(remoteAttributes:isLocallySharing:)(v6, 0);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void ConversationController.updateRemoteScreenShareAttributesChanged(remoteAttributes:isLocallySharing:)(uint64_t a1, int a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  uint64_t *v65;
  uint64_t v66;
  __int128 *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  objc_class *v71;
  os_log_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  objc_class *v83;
  NSObject *v84;
  os_log_type_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  id v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  os_log_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  void (*v126)(__int128 *, __int128 *, objc_class *, uint64_t, _QWORD);
  __int128 *v127;
  char *v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  char v137;
  _BOOL4 v138;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  const void *v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  int v174;
  int v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  void (*v200)(uint64_t *, unint64_t);
  uint64_t v201;
  _QWORD v202[2];
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  __int128 *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  os_log_t v221;
  uint64_t v222;
  uint64_t v223;
  objc_class *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  __int128 *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t *v234;
  char *v235;
  uint64_t *v236;
  __int128 *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _BYTE v243[216];
  _BYTE v244[216];
  __int128 v245[27];
  uint64_t v246[27];
  _QWORD v247[27];
  uint64_t v248[30];
  _QWORD v249[3];
  uint64_t v250;
  uint64_t v251;
  _QWORD v252[2];
  unsigned __int8 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  _QWORD v266[2];
  char v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  uint64_t v272;

  v242 = type metadata accessor for Participant.State(0);
  v5 = MEMORY[0x1E0C80A78](v242);
  v227 = (char *)v202 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v202 - v7;
  v210 = type metadata accessor for Participant(0);
  v205 = *(_QWORD *)(v210 - 8);
  v9 = MEMORY[0x1E0C80A78](v210);
  v11 = (char *)v202 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v204 = (uint64_t)v202 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v226 = (char *)v202 - v15;
  MEMORY[0x1E0C80A78](v14);
  v241 = (uint64_t)v202 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v17);
  v209 = (uint64_t)v202 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
  v20 = MEMORY[0x1E0C80A78](v19);
  v225 = (uint64_t)v202 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v231 = (__int128 *)((char *)v202 - v22);
  v236 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
  v23 = MEMORY[0x1E0C80A78](v236);
  v208 = (__int128 *)((char *)v202 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = MEMORY[0x1E0C80A78](v23);
  v229 = (uint64_t)v202 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v230 = (uint64_t)v202 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v224 = (objc_class *)((char *)v202 - v30);
  v31 = MEMORY[0x1E0C80A78](v29);
  v234 = (_QWORD *)((char *)v202 - v32);
  v33 = MEMORY[0x1E0C80A78](v31);
  v35 = (char *)v202 - v34;
  v36 = MEMORY[0x1E0C80A78](v33);
  v223 = (uint64_t)v202 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v232 = (uint64_t)v202 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v233 = (uint64_t)v202 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v221 = (os_log_t)((char *)v202 - v43);
  MEMORY[0x1E0C80A78](v42);
  v237 = (__int128 *)((char *)v202 - v44);
  v45 = type metadata accessor for DispatchPredicate();
  v239 = *(_QWORD *)(v45 - 8);
  v240 = v45;
  MEMORY[0x1E0C80A78](v45);
  v47 = (_QWORD *)((char *)v202 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (one-time initialization token for conversationController != -1)
    swift_once();
  v48 = type metadata accessor for Logger();
  v49 = __swift_project_value_buffer(v48, (uint64_t)&static Logger.conversationController);
  v50 = v2;
  v222 = v49;
  v51 = Logger.logObject.getter();
  v52 = static os_log_type_t.default.getter();
  v53 = os_log_type_enabled(v51, v52);
  v203 = (uint64_t *)v11;
  v238 = v8;
  v235 = v35;
  if (v53)
  {
    v54 = swift_slowAlloc();
    v220 = swift_slowAlloc();
    *(_QWORD *)&v245[0] = v220;
    *(_DWORD *)v54 = 136315394;
    v248[0] = (uint64_t)v50;
    v55 = String.init<A>(reflecting:)();
    v228 = a1;
    v248[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v56, (uint64_t *)v245);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2080;
    v248[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000004CLL, 0x80000001BD696420, (uint64_t *)v245);
    v8 = v238;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v51, v52, "ConversationController(%s recieved callback %s", (uint8_t *)v54, 0x16u);
    v57 = v220;
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v57, -1, -1);
    MEMORY[0x1C3B751B8](v54, -1, -1);

  }
  else
  {

  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v47 = static OS_dispatch_queue.main.getter();
  v59 = v239;
  v58 = v240;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v239 + 104))(v47, *MEMORY[0x1E0DEF740], v240);
  v60 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v59 + 8))(v47, v58);
  if ((v60 & 1) == 0)
  {
    __break(1u);
LABEL_91:
    outlined destroy of AccountUpdateNotice((uint64_t)v47, type metadata accessor for Participant);
    outlined destroy of Participant.ScreenInfo((uint64_t)v248);
    outlined destroy of AccountUpdateNotice(v59, type metadata accessor for Participant);
    swift_endAccess();
    goto LABEL_53;
  }
  swift_getObjectType();
  v61 = (void *)swift_unknownObjectRetain();
  specialized Participant.ScreenShareAttributes.init(_:)(v61, (uint64_t)v252);
  v219 = v252[1];
  v220 = v252[0];
  v62 = v253;
  v217 = *((_QWORD *)&v254 + 1);
  v218 = v254;
  v215 = *((_QWORD *)&v255 + 1);
  v216 = v255;
  v213 = *((_QWORD *)&v256 + 1);
  v214 = v256;
  v228 = v257;
  v63 = (uint64_t)&v50[OBJC_IVAR____TtC15ConversationKit22ConversationController_pendingNoticeWaitingForRemoteScreenShareAttributes];
  v211 = v259;
  v212 = v258;
  swift_beginAccess();
  v64 = v231;
  outlined init with copy of FeatureEligibility?(v63, (uint64_t)v231, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
  v65 = v236;
  if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, (uint64_t)v236) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
    if ((a2 & 1) != 0)
      return;
  }
  else
  {
    v206 = v50;
    v207 = v62;
    v240 = v63;
    LODWORD(v239) = a2;
    v66 = *((int *)v65 + 12);
    v67 = v237;
    v68 = (uint64_t)v237 + v66;
    v69 = *((int *)v65 + 16);
    v70 = (uint64_t)v64 + v66;
    outlined init with take of Notice(v64, (uint64_t)v237);
    outlined init with take of StagedCollaboration(v70, v68, type metadata accessor for Participant);
    v71 = *(objc_class **)((char *)v64 + v69);
    *(_QWORD *)((char *)v67 + v69) = v71;
    v72 = v221;
    v73 = (char *)v221 + *((int *)v65 + 12);
    v74 = *((int *)v65 + 16);
    outlined init with copy of RadarReporting((uint64_t)v67, (uint64_t)v221);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v68, (uint64_t)v73, type metadata accessor for Participant);
    *(Class *)((char *)&v72->isa + v74) = v71;
    outlined init with copy of FeatureEligibility?((uint64_t)v72, v233, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    outlined init with take of Any?((uint64_t)v72, v232, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    v75 = v223;
    v76 = v223 + *((int *)v65 + 12);
    v77 = *((int *)v65 + 16);
    outlined init with copy of RadarReporting((uint64_t)v67, v223);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v68, v76, type metadata accessor for Participant);
    *(_QWORD *)(v75 + v77) = v71;
    outlined init with copy of FeatureEligibility?(v75, (uint64_t)v235, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    outlined init with take of Any?(v75, (uint64_t)v234, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    v78 = (uint64_t)v224;
    v79 = (uint64_t)v224 + *((int *)v65 + 12);
    v80 = *((int *)v65 + 16);
    outlined init with copy of RadarReporting((uint64_t)v67, (uint64_t)v224);
    v231 = (__int128 *)v68;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v68, v79, type metadata accessor for Participant);
    *(_QWORD *)(v78 + v80) = v71;
    v81 = v230;
    outlined init with copy of FeatureEligibility?(v78, v230, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    v82 = v229;
    outlined init with take of Any?(v78, v229, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    v83 = v71;
    v84 = Logger.logObject.getter();
    v85 = static os_log_type_t.default.getter();
    v86 = v85;
    if (os_log_type_enabled(v84, v85))
    {
      v87 = swift_slowAlloc();
      LODWORD(v223) = v86;
      v88 = v87;
      v222 = swift_slowAlloc();
      v248[0] = v222;
      *(_DWORD *)v88 = 136315650;
      v224 = v83;
      v202[1] = v88 + 4;
      v89 = *((int *)v65 + 12);
      v221 = v84;
      v90 = v208;
      v91 = (uint64_t)v208 + v89;
      v92 = *((int *)v65 + 16);
      v93 = v233;
      v94 = v233 + v89;
      outlined init with copy of RadarReporting(v233, (uint64_t)v208);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v94, v91, type metadata accessor for Participant);
      *(_QWORD *)((char *)v90 + v92) = *(_QWORD *)(v93 + v92);
      outlined init with take of Notice(v90, (uint64_t)v245);
      v95 = specialized >> prefix<A>(_:)((uint64_t)v245);
      v97 = v96;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v245, &demangling cache variable for type metadata for Conversation?);
      outlined destroy of AccountUpdateNotice(v91, type metadata accessor for Participant);
      *(_QWORD *)&v245[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v95, v97, v248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v232, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v93, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      *(_WORD *)(v88 + 12) = 2080;
      v98 = *((int *)v65 + 12);
      v99 = (uint64_t)v90 + v98;
      v100 = *((int *)v65 + 16);
      v101 = v235;
      v102 = &v235[v98];
      outlined init with copy of RadarReporting((uint64_t)v235, (uint64_t)v90);
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v102, v99, type metadata accessor for Participant);
      *(_QWORD *)((char *)v90 + v100) = *(_QWORD *)&v101[v100];
      v103 = v209;
      outlined init with take of StagedCollaboration(v99, v209, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v103, 0, 1, v210);
      specialized >> prefix<A>(_:)(v103);
      v105 = v104;
      v107 = v106;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v103, &demangling cache variable for type metadata for Participant?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
      *(_QWORD *)&v245[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v105, v107, v248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v234, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v101, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      *(_WORD *)(v88 + 22) = 2080;
      v235 = (char *)(v88 + 24);
      v108 = *((int *)v65 + 12);
      v109 = (uint64_t)v90 + v108;
      v110 = *((int *)v65 + 16);
      v111 = v230;
      v112 = v230 + v108;
      outlined init with copy of RadarReporting(v230, (uint64_t)v90);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v112, v109, type metadata accessor for Participant);
      v113 = *(void **)(v111 + v110);
      *(_QWORD *)((char *)v90 + v110) = v113;
      *(_QWORD *)&v245[0] = v113;
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationNotice);
      v114 = v113;
      v115 = String.init<A>(reflecting:)();
      v117 = v116;
      outlined destroy of AccountUpdateNotice(v109, type metadata accessor for Participant);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
      v118 = v115;
      v62 = v207;
      *(_QWORD *)&v245[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v118, v117, v248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v50 = v206;
      swift_bridgeObjectRelease();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v229, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      v119 = v111;
      v83 = v224;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v119, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      v120 = v221;
      _os_log_impl(&dword_1BD004000, v221, (os_log_type_t)v223, "Calling sessionActionNoticePosted for %s, %s, %s", (uint8_t *)v88, 0x20u);
      v121 = v222;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v121, -1, -1);
      MEMORY[0x1C3B751B8](v88, -1, -1);

      v122 = v257;
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v232, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v233, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v234, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v235, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v82, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v81, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));

      v122 = v228;
      v50 = v206;
      v62 = v207;
    }
    v123 = v225;
    __swift_storeEnumTagSinglePayload(v225, 1, 1, (uint64_t)v65);
    v124 = v240;
    swift_beginAccess();
    outlined assign with take of Participant?(v123, v124, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
    swift_endAccess();
    v125 = &v50[OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted];
    swift_beginAccess();
    v126 = *(void (**)(__int128 *, __int128 *, objc_class *, uint64_t, _QWORD))v125;
    v8 = v238;
    if (*(_QWORD *)v125)
    {
      swift_endAccess();
      swift_retain();
      v127 = v237;
      v126(v237, v231, v83, v122, 0);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v126);

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v127, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v237, &demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
      swift_endAccess();

    }
    if ((v239 & 1) != 0)
      return;
  }
  v128 = &v50[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes];
  if ((v50[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96] & 1) == 0)
  {
    v129 = *((_QWORD *)v128 + 11);
    v130 = *((_DWORD *)v128 + 4);
    v131 = *((_QWORD *)v128 + 1);
    v266[0] = *(_QWORD *)v128;
    v266[1] = v131;
    v267 = v130 & 1;
    v268 = *(_OWORD *)(v128 + 24);
    v269 = *(_OWORD *)(v128 + 40);
    v270 = *(_OWORD *)(v128 + 56);
    v271 = *(_OWORD *)(v128 + 72);
    v272 = v129;
    if ((static Participant.ScreenShareAttributes.== infix(_:_:)((uint64_t)v266, (uint64_t)v252) & 1) != 0)
      return;
  }
  if ((v50[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes] & 1) != 0)
  {
    if ((v128[96] & 1) != 0)
    {
      v132 = 1;
    }
    else
    {
      v134 = *((_QWORD *)v128 + 10);
      v133 = *((_QWORD *)v128 + 11);
      v135 = *((_QWORD *)v128 + 9);
      v136 = *(_OWORD *)(v128 + 40);
      v263 = *(_OWORD *)(v128 + 24);
      v264 = v136;
      v265 = *(_OWORD *)(v128 + 56);
      v260 = v254;
      v261 = v255;
      v262 = v256;
      v137 = static CGAffineTransform.== infix(_:_:)();
      v138 = 0;
      if ((v137 & 1) != 0 && v135 == v257 && v134 == v258)
        v138 = v133 == v259;
      v132 = !v138;
    }
  }
  else
  {
    v132 = 1;
    v50[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes] = 1;
  }
  v140 = v219;
  *(_QWORD *)v128 = v220;
  *((_QWORD *)v128 + 1) = v140;
  v141 = v218;
  *((_QWORD *)v128 + 2) = v62;
  *((_QWORD *)v128 + 3) = v141;
  v142 = v216;
  *((_QWORD *)v128 + 4) = v217;
  *((_QWORD *)v128 + 5) = v142;
  v143 = v214;
  *((_QWORD *)v128 + 6) = v215;
  *((_QWORD *)v128 + 7) = v143;
  v144 = v228;
  *((_QWORD *)v128 + 8) = v213;
  *((_QWORD *)v128 + 9) = v144;
  v145 = v211;
  *((_QWORD *)v128 + 10) = v212;
  *((_QWORD *)v128 + 11) = v145;
  v128[96] = 0;
  ConversationController.lookupActiveConversation()();
  if (!*((_QWORD *)&v245[1] + 1))
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v245, &demangling cache variable for type metadata for Conversation?);
LABEL_56:
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    return;
  }
  outlined init with take of Notice(v245, (uint64_t)v249);
  v146 = v250;
  v147 = v251;
  __swift_project_boxed_opaque_existential_1(v249, v250);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v147 + 56))(v146, v147) != 3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
    goto LABEL_56;
  }
  v148 = (uint64_t *)&v50[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  swift_beginAccess();
  v240 = *v148;
  v149 = *(_QWORD *)(v240 + 16);
  if (!v149)
  {
LABEL_50:
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    goto LABEL_53;
  }
  LODWORD(v233) = v132;
  v206 = v50;
  v207 = v62;
  v150 = (*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80);
  v239 = *(_QWORD *)(v205 + 72);
  v236 = &v248[4];
  v237 = &v245[6];
  v234 = v148;
  v235 = (char *)&v247[4];
  swift_bridgeObjectRetain();
  v151 = 0;
  v153 = (uint64_t)v226;
  v152 = (uint64_t)v227;
  while (1)
  {
    v154 = v241;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v240 + v150, v241, type metadata accessor for Participant);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v154, (uint64_t)v8, type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      v155 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v156 = &v8[*(int *)(v155 + 48)];
      outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v8[*(int *)(v155 + 64)], *(_QWORD *)&v8[*(int *)(v155 + 64) + 8]);
      memcpy(v245, v156, 0x150uLL);
      v157 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v157 - 8) + 8))(v8, v157);
      outlined init with copy of FeatureEligibility?((uint64_t)v237, (uint64_t)v248, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of Participant.MediaInfo((uint64_t)v245);
      if (v248[3] != 1)
      {
        memcpy(v245, v248, 0xD1uLL);
        v158 = BYTE8(v245[2]);
        outlined destroy of Participant.ScreenInfo((uint64_t)v245);
        v153 = (uint64_t)v226;
        v152 = (uint64_t)v227;
        v154 = v241;
        goto LABEL_40;
      }
    }
    else
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant.State);
      memset(v248, 0, 24);
      v248[3] = 1;
      bzero(v236, 0xB1uLL);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v248, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v158 = 2;
LABEL_40:
    outlined init with copy of ConversationControlsAppLaunchButtonType(v154, v153, type metadata accessor for Participant);
    if (v158 == 2)
      goto LABEL_47;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v153, v152, type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      outlined destroy of AccountUpdateNotice(v152, type metadata accessor for Participant.State);
      memset(v247, 0, 24);
      v247[3] = 1;
      bzero(v235, 0xB1uLL);
LABEL_46:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v247, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
LABEL_47:
      outlined destroy of AccountUpdateNotice(v153, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice(v154, type metadata accessor for Participant);
      goto LABEL_48;
    }
    v159 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v160 = (const void *)(v152 + *(int *)(v159 + 48));
    outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v152 + *(int *)(v159 + 64)), *(_QWORD *)(v152 + *(int *)(v159 + 64) + 8));
    memcpy(v245, v160, 0x150uLL);
    v161 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 8))(v152, v161);
    outlined init with copy of FeatureEligibility?((uint64_t)v237, (uint64_t)v247, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of Participant.MediaInfo((uint64_t)v245);
    if (v247[3] == 1)
      goto LABEL_46;
    memcpy(v248, v247, 0xD1uLL);
    v162 = v154;
    v163 = v248[5];
    outlined destroy of Participant.ScreenInfo((uint64_t)v248);
    outlined destroy of AccountUpdateNotice(v153, type metadata accessor for Participant);
    outlined destroy of AccountUpdateNotice(v162, type metadata accessor for Participant);
    if ((v163 & 1) != 0)
      break;
LABEL_48:
    ++v151;
    v150 += v239;
    if (v149 == v151)
    {
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
  }
  swift_bridgeObjectRelease();
  if (v151 >= *(_QWORD *)(*v234 + 16))
  {
    __break(1u);
    goto LABEL_93;
  }
  v152 = v204;
  outlined init with copy of ConversationControlsAppLaunchButtonType(*v234 + v150, v204, type metadata accessor for Participant);
  Participant.avInfo.getter();
  v165 = v207;
  if (v164 == 2)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_66:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v166 = swift_allocObject();
      *(_OWORD *)(v166 + 16) = xmmword_1BD6441D0;
      v167 = v209;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v152, v209, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v167, 0, 1, v210);
      specialized >> prefix<A>(_:)(v167);
      v169 = v168;
      v171 = v170;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v167, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v166 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v166 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v166 + 32) = v169;
      *(_QWORD *)(v166 + 40) = v171;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v172 = v152;
      goto LABEL_89;
    }
LABEL_93:
    swift_once();
    goto LABEL_66;
  }
  Participant.screenInfo.getter();
  if (*((_QWORD *)&v245[1] + 1) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v245, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_66;
    goto LABEL_93;
  }
  memcpy(v248, v245, 0x70uLL);
  v248[14] = v220;
  v248[15] = v219;
  v248[16] = v165;
  v248[17] = v218;
  v248[18] = v217;
  v248[19] = v216;
  v248[20] = v215;
  v248[21] = v214;
  v248[22] = v213;
  v248[23] = v228;
  v248[24] = v212;
  v248[25] = v211;
  LOBYTE(v248[26]) = 0;
  outlined init with copy of Participant.ScreenInfo((uint64_t)v248, (uint64_t)v247);
  Participant.screenInfo.getter();
  outlined init with copy of FeatureEligibility?((uint64_t)v247, (uint64_t)v245, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined init with copy of FeatureEligibility?((uint64_t)v246, (uint64_t)&v245[13] + 8, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  if (*((_QWORD *)&v245[1] + 1) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v246, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v247, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (*(_QWORD *)&v245[15] == 1)
      v173 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
    else
      v173 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
    if (*(_QWORD *)&v245[15] == 1)
      v174 = -1;
    else
      v174 = 0;
    LODWORD(v242) = v174;
  }
  else
  {
    outlined init with copy of FeatureEligibility?((uint64_t)v245, (uint64_t)v244, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (*(_QWORD *)&v245[15] == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v246, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v247, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of Participant.ScreenInfo((uint64_t)v244);
      LODWORD(v242) = 0;
      v173 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
    }
    else
    {
      memcpy(v243, (char *)&v245[13] + 8, 0xD1uLL);
      static Participant.ScreenInfo.== infix(_:_:)();
      LODWORD(v242) = v175;
      outlined destroy of Participant.ScreenInfo((uint64_t)v243);
      v173 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v246, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v247, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of Participant.ScreenInfo((uint64_t)v244);
    }
  }
  v176 = v234;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v245, v173);
  Participant.videoInfo.getter();
  outlined init with copy of Participant.ScreenInfo((uint64_t)v248, (uint64_t)v245);
  v177 = Participant.captionInfo.getter();
  Participant.copresenceInfo.getter(v246);
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v246);
  outlined consume of Participant.CaptionInfo?(v177);
  outlined release of LinearGradient((uint64_t)v247);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v245, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  swift_beginAccess();
  v178 = *v176;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v176 = v178;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v178 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *v176 = v178;
  }
  v180 = (uint64_t)v203;
  if (v151 >= *(_QWORD *)(v178 + 16))
  {
    __break(1u);
  }
  else
  {
    outlined assign with copy of Participant.State((uint64_t)v203, v178 + v150, type metadata accessor for Participant);
    swift_endAccess();
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_82;
  }
  swift_once();
LABEL_82:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v181 = swift_allocObject();
  *(_OWORD *)(v181 + 16) = xmmword_1BD645380;
  outlined init with copy of Participant.ScreenInfo((uint64_t)v248, (uint64_t)v245);
  v189 = specialized >> prefix<A>(_:)((uint64_t)v245, v182, v183, v184, v185, v186, v187, v188);
  v191 = v190;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v245, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  v192 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v181 + 56) = MEMORY[0x1E0DEA968];
  v193 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v181 + 64) = v193;
  *(_QWORD *)(v181 + 32) = v189;
  *(_QWORD *)(v181 + 40) = v191;
  v194 = v209;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v180, v209, type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload(v194, 0, 1, v210);
  specialized >> prefix<A>(_:)(v194);
  v196 = v195;
  v198 = v197;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v194, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v181 + 96) = v192;
  *(_QWORD *)(v181 + 104) = v193;
  *(_QWORD *)(v181 + 72) = v196;
  *(_QWORD *)(v181 + 80) = v198;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if ((v242 & 1) != 0)
  {
    outlined destroy of AccountUpdateNotice(v180, type metadata accessor for Participant);
    outlined destroy of Participant.ScreenInfo((uint64_t)v248);
    v172 = v204;
    goto LABEL_89;
  }
  v59 = v204;
  if (!(_DWORD)v233)
  {
    v201 = (uint64_t)v203;
    goto LABEL_88;
  }
  v199 = &v206[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo];
  swift_beginAccess();
  v200 = *(void (**)(uint64_t *, unint64_t))v199;
  v47 = v203;
  if (!*(_QWORD *)v199)
    goto LABEL_91;
  swift_endAccess();
  swift_retain();
  v200(v47, v151);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v200);
  v201 = (uint64_t)v47;
LABEL_88:
  outlined destroy of AccountUpdateNotice(v201, type metadata accessor for Participant);
  outlined destroy of Participant.ScreenInfo((uint64_t)v248);
  v172 = v59;
LABEL_89:
  outlined destroy of AccountUpdateNotice(v172, type metadata accessor for Participant);
LABEL_53:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v249);
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed TUScreenShareAttributes?) -> ()(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

BOOL closure #1 in ConversationController.requestScreenSharingSession(for:)(id *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_identifier);
  v4 = a2 + *(int *)(type metadata accessor for Participant(0) + 28);
  if (!*(_QWORD *)v4)
    return 0;
  return (*(_BYTE *)(v4 + 16) & 1) == 0 && v3 == *(id *)(v4 + 8);
}

void ConversationController.pauseLocalVideoAndClearState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  void *v14;
  _BYTE v15[24];

  v1 = v0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame) = 0;
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 8);
  ObjectType = swift_getObjectType();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24);
  swift_unknownObjectRetain();
  v5(2, ObjectType, v3);
  swift_unknownObjectRelease();
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  swift_beginAccess();
  v7 = v6[3];
  v8 = v6[4];
  v9 = __swift_project_boxed_opaque_existential_1(v6, v7);
  v10 = *(_QWORD *)(v7 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v15[-v12];
  (*(void (**)(_BYTE *, __n128))(v10 + 16))(&v15[-v12], v11);
  v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 80))(v7, v8);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v7);
  objc_msgSend(v14, sel_pausePreview);

}

void ConversationController.update(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t HaveAudioFrequency;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t (*v44)(uint64_t);
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  Swift::String v54;
  uint64_t v55;
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[4];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[3];
  uint64_t v72;
  uint64_t v73;

  v2 = v1;
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v71, &demangling cache variable for type metadata for Conversation?);
  if (v72)
  {
    v5 = v73;
    OUTLINED_FUNCTION_4_0(v71);
    v6 = OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 56));
    OUTLINED_FUNCTION_316_4();
  }
  else
  {
    OUTLINED_FUNCTION_428(v4, &demangling cache variable for type metadata for Conversation?);
    v6 = 0;
  }
  ConversationController.conversationState.setter(v6);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v71, &demangling cache variable for type metadata for Conversation?);
  v8 = v72;
  if (v72)
  {
    v9 = v73;
    __swift_project_boxed_opaque_existential_1(v71, v72);
    v10 = OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64));
    OUTLINED_FUNCTION_316_4();
  }
  else
  {
    OUTLINED_FUNCTION_428(v7, &demangling cache variable for type metadata for Conversation?);
    v10 = 0;
  }
  ConversationController.conversationLetMeInRequestState.setter(v10);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)&v68, &demangling cache variable for type metadata for Conversation?);
  if (!v69)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v68, &demangling cache variable for type metadata for Conversation?);
    return;
  }
  outlined init with take of Notice(&v68, (uint64_t)v71);
  v11 = OUTLINED_FUNCTION_748() & 1;
  OUTLINED_FUNCTION_221_5();
  v12 = OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 200));
  if (v11 != (v12 & 1))
  {
    v20 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_85_21(v20, (uint64_t)&v68);
    ConversationController.callCenter(_:oneToOneModeChangedFor:)(v21, (uint64_t)v71, v22, v23, v24, v25, v26, v27, v57, v58, v59, v60, v61, v62, v63[0], v63[1], v63[2], v63[3], v64,
      v65,
      v66,
      v67);
    v12 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) != 1)
  {
    OUTLINED_FUNCTION_631(v12, v13, v14, v15, v16, v17, v18, v19, v57, v58, v59, v60, v61, v62);
    goto LABEL_20;
  }
  v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController);
  OUTLINED_FUNCTION_631(v12, v13, v14, v15, v16, v17, v18, v19, v57, v58, v59, v60, v61, v62);
  if (v28)
  {
LABEL_20:
    v47 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
    OUTLINED_FUNCTION_632(v47, v48, v49, v50, v51, v52);
    goto LABEL_21;
  }
  v8 = v70;
  __swift_project_boxed_opaque_existential_1(&v68, v69);
  v29 = OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56));
  HaveAudioFrequency = TUConversationState.shouldHaveAudioFrequencyController.getter(v29);
  v31 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
  OUTLINED_FUNCTION_632(v31, v32, v33, v34, v35, v36);
  if ((HaveAudioFrequency & 1) == 0)
  {
LABEL_21:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    goto LABEL_22;
  }
  v8 = v64;
  OUTLINED_FUNCTION_184(v63);
  v37 = OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 72));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  if (v37 != -1)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v8 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
    v38 = v72;
    v39 = v73;
    OUTLINED_FUNCTION_14_64(v71);
    OUTLINED_FUNCTION_64_25(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 72));
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_582_0();
    *(_QWORD *)(v8 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v8 + 32) = v37;
    *(_QWORD *)(v8 + 40) = v38;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_53();
    v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD1A8]), sel_initWithDelegate_queue_, v2, *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioCallbackQueue));
    v41 = OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController;
    v42 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController) = v40;

    v43 = *(void **)(v2 + v41);
    if (v43)
    {
      v8 = v73;
      OUTLINED_FUNCTION_80_20(v71, v72);
      v44 = *(uint64_t (**)(uint64_t))(v8 + 72);
      v45 = v43;
      v46 = OUTLINED_FUNCTION_38_21();
      objc_msgSend(v45, sel_registerParticipantPowerSpectrum_, v44(v46));

    }
  }
LABEL_22:
  OUTLINED_FUNCTION_221_5();
  v53 = OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56));
  if (v53 < 3)
  {
LABEL_29:
    ConversationController.updateParticipants(with:)(v71);
    OUTLINED_FUNCTION_316_4();
    return;
  }
  if (v53 == 4)
  {
    ConversationController.stopRecordingLocalVideo()();
    ConversationController.unregisterForMoments()();
    if (one-time initialization token for shared != -1)
      swift_once();
    (*(void (**)(void))(*(_QWORD *)static CollaborationImageFetcher.shared + 152))();
    goto LABEL_29;
  }
  if (v53 == 3)
  {
    ConversationController.registerForMoments()();
    goto LABEL_29;
  }
  _StringGuts.grow(_:)(61);
  v54._object = (void *)0x80000001BD697B20;
  v54._countAndFlagsBits = 0xD00000000000003BLL;
  String.append(_:)(v54);
  v55 = v73;
  __swift_project_boxed_opaque_existential_1(v71, v72);
  OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v55 + 56));
  v56._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v56);
  OUTLINED_FUNCTION_13_3();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void ConversationController.callCenter(_:oneToOneModeChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, _QWORD);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  int v55;
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 *v60;
  os_log_type_t v61;
  _BOOL4 v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void *v66;
  void (*v67)();
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  id v71;
  os_log_type_t v72;
  uint8_t *v73;
  _QWORD *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  void *v90;
  unsigned __int8 *v91;
  id v92;
  id v93;
  void *v94;
  double v95;
  double v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(uint64_t, uint64_t);
  unsigned __int8 *v101;
  uint64_t v102;
  unsigned __int8 *v103;
  unsigned __int8 *v104;
  unsigned __int8 *v105;
  NSObject *v106;
  os_log_type_t v107;
  int v108;
  _BOOL4 v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  void *v113;
  void (*v114)();
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  _QWORD v123[3];
  unsigned __int8 *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t, _QWORD);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t (*v139)(uint64_t);
  void *v140;
  void (*v141)();
  _QWORD *v142;
  _QWORD v143[5];
  __int128 v144;
  uint64_t v145;
  _BYTE v146[16];
  _QWORD v147[6];

  OUTLINED_FUNCTION_51_29();
  a21 = v26;
  a22 = v27;
  v28 = v22;
  v30 = v29;
  v31 = OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_96_2(v31, (uint64_t)&a12);
  v134 = v32;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_41();
  v133 = v34;
  v35 = OUTLINED_FUNCTION_16_61();
  OUTLINED_FUNCTION_96_2(v35, (uint64_t)&a9);
  v132 = v36;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_41();
  v131 = v38;
  v39 = OUTLINED_FUNCTION_503_1();
  OUTLINED_FUNCTION_96_2(v39, (uint64_t)&a13);
  v129 = v40;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_5_27();
  v128 = v42;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_62();
  v130 = v44;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)v123 - v47;
  v49 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v50);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v51, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v127 = v52;
  *v24 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v25 + 104))(v24, *MEMORY[0x1E0DEF740], v49);
  v53 = OUTLINED_FUNCTION_132_2();
  (*(void (**)(uint64_t *, uint64_t))(v25 + 8))(v24, v49);
  if ((v53 & 1) == 0)
  {
    __break(1u);
LABEL_38:
    swift_once();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_357_2();
  if (v140)
  {
    outlined init with take of Notice(&v138, (uint64_t)v147);
    __swift_project_boxed_opaque_existential_1(v147, v147[3]);
    OUTLINED_FUNCTION_576();
    __swift_project_boxed_opaque_existential_1((_QWORD *)v30, *(_QWORD *)(v30 + 24));
    OUTLINED_FUNCTION_576();
    v54 = OUTLINED_FUNCTION_197_3();
    OUTLINED_FUNCTION_67_0(v23);
    OUTLINED_FUNCTION_67_0((uint64_t)v48);
    if ((v54 & 1) == 0)
      goto LABEL_32;
    v55 = v28[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter];
    v56 = *(NSObject **)(v30 + 24);
    v57 = *(_QWORD *)(v30 + 32);
    OUTLINED_FUNCTION_4_0((_QWORD *)v30);
    if (v55 == (OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 200)) & 1))
      goto LABEL_32;
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v58 = OUTLINED_FUNCTION_17_2();
    v59 = __swift_project_value_buffer(v58, (uint64_t)&static Logger.conversationController);
    OUTLINED_FUNCTION_403_0(v59, (uint64_t)&v138);
    v60 = v28;
    Logger.logObject.getter();
    v61 = OUTLINED_FUNCTION_251_0();
    v62 = OUTLINED_FUNCTION_459_0(v56);
    v126 = v59;
    if (v62)
    {
      v63 = OUTLINED_FUNCTION_105();
      *(_QWORD *)&v144 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v63 = 136315394;
      LOBYTE(v143[0]) = v60[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
      v64 = OUTLINED_FUNCTION_670();
      v143[0] = OUTLINED_FUNCTION_667_0(v64, v65);
      OUTLINED_FUNCTION_137_0();

      OUTLINED_FUNCTION_21_0();
      *(_WORD *)(v63 + 12) = 2080;
      v66 = v140;
      v67 = v141;
      OUTLINED_FUNCTION_14_64(&v138);
      LOBYTE(v143[0]) = (*((uint64_t (**)(void *, void (*)()))v67 + 25))(v66, v67) & 1;
      v68 = OUTLINED_FUNCTION_670();
      v143[0] = OUTLINED_FUNCTION_667_0(v68, v69);
      OUTLINED_FUNCTION_82_8();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_528_0();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v56, v61, "[%s] Received CallCenter callback that one-to-one mode changed to %s", (uint8_t *)v63);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_528_0();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    v76 = swift_allocBox();
    v78 = v77;
    v79 = OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_77_0(v78, v80, v81, v79);
    v82 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v82 + 16) = 0;
    v83 = (_QWORD *)OUTLINED_FUNCTION_15();
    v83[2] = v76;
    v83[3] = v60;
    v83[4] = v82;
    v84 = v60;
    OUTLINED_FUNCTION_29_1();
    OUTLINED_FUNCTION_29_1();
    v85 = v84;
    closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(v76, (uint64_t)v85, v82);
    ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
    if (v85[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] == 1)
    {
      v87 = *(_QWORD *)(v30 + 24);
      v88 = *(_QWORD *)(v30 + 32);
      OUTLINED_FUNCTION_184((_QWORD *)v30);
      v86 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 200))(v87, v88);
      v85[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] = (v86 & 1) == 0;
    }
    OUTLINED_FUNCTION_403_0(v86, (uint64_t)&v144);
    outlined init with copy of RadarReporting((uint64_t)&v144, (uint64_t)v143);
    v89 = (_QWORD *)OUTLINED_FUNCTION_15();
    v89[2] = v85;
    outlined init with take of Notice(&v144, (uint64_t)(v89 + 3));
    v89[8] = partial apply for closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:);
    v89[9] = v83;
    v89[10] = v76;
    v89[11] = v82;
    OUTLINED_FUNCTION_1();
    v90 = *(void **)(v82 + 16);
    if (v90)
    {
      v91 = v85;
      OUTLINED_FUNCTION_1_28();
      OUTLINED_FUNCTION_4_76();
      swift_retain();
      v92 = v90;
      v93 = objc_msgSend(v92, sel_remoteVideoAttributes);
      if (v93)
      {
        v94 = v93;
        objc_msgSend(v93, sel_ratio);
        v96 = v95;
        objc_msgSend(v94, sel_ratio);
        if (v96 == v97)
        {
          v124 = v91;
          v125 = v92;
          v98 = *(_QWORD *)(v30 + 32);
          OUTLINED_FUNCTION_14_64((_QWORD *)v30);
          v99 = OUTLINED_FUNCTION_474();
          if ((v100(v99, v98) & 1) == 0)
          {
            OUTLINED_FUNCTION_121((uint64_t)v146);
            goto LABEL_28;
          }
          v92 = v125;
          v101 = v124;
          if (one-time initialization token for shared != -1)
            swift_once();
          if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 608))() & 1) != 0)
          {
            v102 = OUTLINED_FUNCTION_668_0();
            if ((v101[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo] & 1) != 0)
            {
              OUTLINED_FUNCTION_11_0();

              OUTLINED_FUNCTION_23_0();
              OUTLINED_FUNCTION_23_0();
LABEL_31:
              swift_release();
LABEL_32:
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v147);
              goto LABEL_33;
            }
            v123[1] = v94;
            OUTLINED_FUNCTION_403_0(v102, (uint64_t)&v138);
            v105 = v101;
            v106 = Logger.logObject.getter();
            v107 = static os_log_type_t.default.getter();
            v108 = v107;
            v109 = os_log_type_enabled(v106, v107);
            v123[2] = v83;
            if (v109)
            {
              v110 = OUTLINED_FUNCTION_105();
              v137 = OUTLINED_FUNCTION_105();
              *(_DWORD *)v110 = 136315394;
              LODWORD(v126) = v108;
              LOBYTE(v136) = v105[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
              v111 = OUTLINED_FUNCTION_661_0();
              v136 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v111, v112, &v137);
              OUTLINED_FUNCTION_137_0();

              OUTLINED_FUNCTION_21_0();
              *(_WORD *)(v110 + 12) = 1024;
              v113 = v140;
              v114 = v141;
              OUTLINED_FUNCTION_605_0(&v138);
              LODWORD(v113) = (*((uint64_t (**)(void *, void (*)()))v114 + 25))(v113, v114) & 1;
              OUTLINED_FUNCTION_528_0();
              LODWORD(v136) = (_DWORD)v113;
              OUTLINED_FUNCTION_137_0();
              _os_log_impl(&dword_1BD004000, v106, (os_log_type_t)v126, "[%s] One-to-one mode changed to %{BOOL}d, but we still havent received non-square remote video frames, delaying updating UI", (uint8_t *)v110, 0x12u);
              OUTLINED_FUNCTION_21();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_528_0();

            ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.setter(1);
            v115 = v127;
            v127 = static OS_dispatch_queue.main.getter();
            OUTLINED_FUNCTION_796();
            v124 = v105;
            v116 = v130;
            MEMORY[0x1C3B72C50](v115, 5.0);
            v129 = (uint64_t (*)(uint64_t, _QWORD))*((_QWORD *)v129 + 1);
            OUTLINED_FUNCTION_560_0(v115, v129);
            v117 = OUTLINED_FUNCTION_15();
            OUTLINED_FUNCTION_475(v117);
            swift_unknownObjectWeakInit();
            v118 = (_QWORD *)OUTLINED_FUNCTION_15();
            v118[2] = v115;
            v118[3] = partial apply for closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:);
            v118[4] = v89;
            v141 = partial apply for closure #3 in ConversationController.callCenter(_:oneToOneModeChangedFor:);
            v142 = v118;
            *(_QWORD *)&v138 = MEMORY[0x1E0C809B0];
            *((_QWORD *)&v138 + 1) = 1107296256;
            v139 = thunk for @escaping @callee_guaranteed () -> ();
            v140 = &block_descriptor_103;
            v119 = _Block_copy(&v138);
            OUTLINED_FUNCTION_11_1();
            OUTLINED_FUNCTION_43();
            v120 = v131;
            static DispatchQoS.unspecified.getter();
            *(_QWORD *)&v138 = MEMORY[0x1E0DEE9D8];
            lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
            OUTLINED_FUNCTION_31_11();
            OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
            dispatch thunk of SetAlgebra.init<A>(_:)();
            v121 = OUTLINED_FUNCTION_416_0();
            v122 = (void *)v127;
            MEMORY[0x1C3B735B0](v121);
            OUTLINED_FUNCTION_121((uint64_t)v146);
            _Block_release(v119);
            OUTLINED_FUNCTION_22();
            OUTLINED_FUNCTION_121((uint64_t)&v145);
            OUTLINED_FUNCTION_27_10();
            swift_release();
            OUTLINED_FUNCTION_11_0();
            OUTLINED_FUNCTION_121((uint64_t)&v144);

            OUTLINED_FUNCTION_147_7(*(uint64_t (**)(uint64_t, uint64_t))(v134 + 8));
            OUTLINED_FUNCTION_560_0(v120, *(uint64_t (**)(uint64_t, _QWORD))(v132 + 8));
            v129(v116, v135);
LABEL_30:
            OUTLINED_FUNCTION_27_10();
            goto LABEL_31;
          }
        }

LABEL_28:
        goto LABEL_29;
      }

    }
    else
    {
      v103 = v85;
      OUTLINED_FUNCTION_1_28();
      OUTLINED_FUNCTION_4_76();
      swift_retain();
    }
LABEL_29:
    v104 = v85;
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_4_76();
    specialized closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(v104, v143, v76, v82, v76, v104, v82);
    OUTLINED_FUNCTION_22();

    OUTLINED_FUNCTION_27_10();
    swift_release();
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_668_0();
    goto LABEL_30;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v138, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationController != -1)
    goto LABEL_38;
LABEL_10:
  v70 = OUTLINED_FUNCTION_17_2();
  v71 = OUTLINED_FUNCTION_79_16(v70, (uint64_t)&static Logger.conversationController);
  Logger.logObject.getter();
  v72 = OUTLINED_FUNCTION_37_4();
  if (os_log_type_enabled((os_log_t)v30, v72))
  {
    v73 = (uint8_t *)OUTLINED_FUNCTION_105();
    v74 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v73 = 138412290;
    *(_QWORD *)&v138 = v71;
    v75 = v71;
    OUTLINED_FUNCTION_31_3();
    *v74 = v71;

    OUTLINED_FUNCTION_48(&dword_1BD004000, v30, v72, "Unable to lookup active conversation in CallCenterProviderDelegate oneToOneModeChangedFor: callback - %@", v73);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

LABEL_33:
  OUTLINED_FUNCTION_7_7();
}

uint64_t TUConversationState.shouldHaveAudioFrequencyController.getter(unint64_t a1)
{
  uint64_t result;
  Swift::String v2;
  Swift::String v3;

  if (a1 < 5)
    return (a1 & 0x1F) == 3;
  _StringGuts.grow(_:)(72);
  v2._object = (void *)0x80000001BD696890;
  v2._countAndFlagsBits = 0xD000000000000046;
  String.append(_:)(v2);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void ConversationController.removeParticipants(notIn:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  os_log_t v85;
  uint8_t *v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  void *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  uint8_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint8_t *v132;
  uint64_t v133;
  void *v134;
  uint64_t *v135;
  uint64_t v136;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  os_log_t v142;
  uint8_t *v143;
  uint8_t *v144;
  uint8_t *v145;
  uint64_t v146;
  __int128 v147;
  uint8_t **v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  id v170;
  unint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint8_t *v176;
  uint64_t v177;
  uint64_t v178;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v5 = MEMORY[0x1E0C80A78](v4);
  v163 = (uint64_t)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v168 = (uint64_t)&v141 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v154 = (uint64_t)&v141 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v162 = (uint64_t)&v141 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v167 = (uint64_t)&v141 - v14;
  MEMORY[0x1E0C80A78](v13);
  v150 = (uint64_t)&v141 - v15;
  v174 = type metadata accessor for Participant(0);
  v16 = *(_QWORD *)(v174 - 8);
  v17 = MEMORY[0x1E0C80A78](v174);
  v157 = (uint64_t)&v141 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v160 = (uint64_t)&v141 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v149 = (uint64_t)&v141 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v165 = (uint64_t)&v141 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v158 = (uint64_t)&v141 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v152 = (uint64_t)&v141 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v153 = (uint64_t)&v141 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v155 = (uint64_t)&v141 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v164 = (uint64_t)&v141 - v34;
  MEMORY[0x1E0C80A78](v33);
  v36 = (char *)&v141 - v35;
  v37 = type metadata accessor for DispatchPredicate();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v40 = (uint64_t *)((char *)&v141 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v40 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v38 + 104))(v40, *MEMORY[0x1E0DEF740], v37);
  v41 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v38 + 8))(v40, v37);
  if ((v41 & 1) == 0)
    goto LABEL_73;
  v42 = a1[3];
  v43 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v42);
  v44 = default argument 0 of Conversation.allHandles(excludeOtherInvitedHandles:)(v42, v43);
  Conversation.allHandles(excludeOtherInvitedHandles:)(v44 & 1, v42, v43);
  v169 = v45;
  v46 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v172 = v46;
  v48 = *v46;
  v49 = *(_QWORD *)(*v46 + 16);
  v50 = v174;
  if (!v49)
  {
LABEL_69:
    swift_bridgeObjectRelease();
    return;
  }
  v51 = 0;
  v171 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v148 = &v176;
  v173 = *(_QWORD *)(v16 + 72);
  *(_QWORD *)&v47 = 136315138;
  v147 = v47;
  v146 = MEMORY[0x1E0DEE9B8] + 8;
  v161 = xmmword_1BD645380;
  v151 = xmmword_1BD6441D0;
  v166 = v2;
  while ((v51 & 0x8000000000000000) == 0)
  {
    v52 = v173 * v51;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v48 + v171 + v173 * v51, (uint64_t)v36, type metadata accessor for Participant);
    v53 = *(void **)&v36[*(int *)(v50 + 28)];
    if (v53)
    {
      v54 = v53;
      v55 = (void *)ConversationController.activeParticipant(correspondingTo:in:)((uint64_t)v36, a1);
      if (v55)
        goto LABEL_7;
      v61 = *(_QWORD *)&v36[*(int *)(v50 + 44)];
      v62 = *(_BYTE *)(v61 + 32);
      v63 = 1 << v62;
      v64 = *(_QWORD *)(v61 + 56);
      if (v64)
      {
        v65 = 0;
        goto LABEL_13;
      }
      v99 = v62 & 0x3F;
      if (v99 >= 7)
      {
        v64 = *(_QWORD *)(v61 + 64);
        if (v64)
        {
          v65 = 1;
          goto LABEL_13;
        }
        if (v99 >= 8)
        {
          v64 = *(_QWORD *)(v61 + 72);
          if (v64)
          {
            v65 = 2;
LABEL_13:
            v66 = __clz(__rbit64(v64));
            v67 = v66 + (v65 << 6);
            if (v67 != v63)
            {
              if (v67 < 0 || v67 >= v63)
                goto LABEL_71;
              if (((*(_QWORD *)(v61 + 56 + (((unint64_t)v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v66) & 1) == 0)
                goto LABEL_72;
              v68 = v155;
              outlined init with copy of ConversationControlsAppLaunchButtonType(*(_QWORD *)(v61 + 48) + v67 * v173, v155, type metadata accessor for Participant);
              v69 = v68;
              v70 = v164;
              outlined init with take of StagedCollaboration(v69, v164, type metadata accessor for Participant);
              v156 = (void *)ConversationController.activeParticipant(correspondingTo:in:)(v70, a1);
              if (v156)
              {
                if (one-time initialization token for conversationController != -1)
                  swift_once();
                v170 = v54;
                v71 = type metadata accessor for Logger();
                v159 = __swift_project_value_buffer(v71, (uint64_t)&static Logger.conversationController);
                v72 = Logger.logObject.getter();
                v73 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v72, v73))
                {
                  v74 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)v74 = 0;
                  _os_log_impl(&dword_1BD004000, v72, v73, "Active participant left but associate is still in the call.", v74, 2u);
                  MEMORY[0x1C3B751B8](v74, -1, -1);
                }

                v75 = v153;
                outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v36, v153, type metadata accessor for Participant);
                v76 = Logger.logObject.getter();
                v77 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v76, v77))
                {
                  v78 = (uint8_t *)swift_slowAlloc();
                  v145 = (uint8_t *)swift_slowAlloc();
                  v176 = v145;
                  v144 = v78;
                  *(_DWORD *)v78 = v147;
                  v143 = v78 + 4;
                  v79 = v75;
                  v80 = v150;
                  outlined init with copy of ConversationControlsAppLaunchButtonType(v79, v150, type metadata accessor for Participant);
                  __swift_storeEnumTagSinglePayload(v80, 0, 1, v174);
                  specialized >> prefix<A>(_:)(v80);
                  v142 = v76;
                  v82 = v81;
                  v84 = v83;
                  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v80, &demangling cache variable for type metadata for Participant?);
                  v175 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v82, v84, (uint64_t *)&v176);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  outlined destroy of AccountUpdateNotice(v153, type metadata accessor for Participant);
                  v85 = v142;
                  v86 = v144;
                  _os_log_impl(&dword_1BD004000, v142, v77, "Replacing old participant %s with...", v144, 0xCu);
                  v87 = v145;
                  swift_arrayDestroy();
                  MEMORY[0x1C3B751B8](v87, -1, -1);
                  MEMORY[0x1C3B751B8](v86, -1, -1);

                }
                else
                {
                  outlined destroy of AccountUpdateNotice(v75, type metadata accessor for Participant);

                }
                v122 = v152;
                outlined init with copy of ConversationControlsAppLaunchButtonType(v164, v152, type metadata accessor for Participant);
                v123 = Logger.logObject.getter();
                v124 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v123, v124))
                {
                  v125 = (uint8_t *)swift_slowAlloc();
                  v159 = swift_slowAlloc();
                  v176 = (uint8_t *)v159;
                  v145 = v125;
                  *(_DWORD *)v125 = v147;
                  v144 = v125 + 4;
                  v126 = v122;
                  v127 = v150;
                  outlined init with copy of ConversationControlsAppLaunchButtonType(v126, v150, type metadata accessor for Participant);
                  __swift_storeEnumTagSinglePayload(v127, 0, 1, v174);
                  specialized >> prefix<A>(_:)(v127);
                  v129 = v128;
                  v131 = v130;
                  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v127, &demangling cache variable for type metadata for Participant?);
                  v175 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v129, v131, (uint64_t *)&v176);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  outlined destroy of AccountUpdateNotice(v152, type metadata accessor for Participant);
                  v132 = v145;
                  _os_log_impl(&dword_1BD004000, v123, v124, "... associated participant %s", v145, 0xCu);
                  v133 = v159;
                  swift_arrayDestroy();
                  MEMORY[0x1C3B751B8](v133, -1, -1);
                  MEMORY[0x1C3B751B8](v132, -1, -1);
                }
                else
                {
                  outlined destroy of AccountUpdateNotice(v122, type metadata accessor for Participant);
                }

                v134 = v156;
                ConversationController.updateActiveParticipant(_:with:in:)(v156, v164, a1, v158);
                v135 = v172;
                swift_beginAccess();
                v136 = *v135;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *v135 = v136;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  v136 = specialized _ArrayBuffer._consumeAndCreateNew()();
                  *v172 = v136;
                }
                if (v51 >= *(_QWORD *)(v136 + 16))
                  goto LABEL_74;
                v138 = v136 + v171 + v52;
                v139 = v158;
                outlined assign with copy of Participant.State(v158, v138, type metadata accessor for Participant);
                swift_endAccess();
                ConversationController.postParticipantStateChangeCallbacks(for:updatedFrom:)(v139, (uint64_t)v36);

                outlined destroy of AccountUpdateNotice(v139, type metadata accessor for Participant);
                outlined destroy of AccountUpdateNotice(v164, type metadata accessor for Participant);
                v108 = (uint64_t)v36;
LABEL_42:
                outlined destroy of AccountUpdateNotice(v108, type metadata accessor for Participant);
                ++v51;
LABEL_50:
                v50 = v174;
                goto LABEL_51;
              }
              outlined destroy of AccountUpdateNotice(v70, type metadata accessor for Participant);
            }
          }
          else
          {
            v140 = 10;
            while (v140 - 7 < (unint64_t)(v63 + 63) >> 6)
            {
              v64 = *(_QWORD *)(v61 + 8 * v140++);
              if (v64)
              {
                v65 = v140 - 8;
                goto LABEL_13;
              }
            }
          }
        }
      }
LABEL_7:
      v56 = a1[3];
      v57 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v56);
      v58 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 176))(v56, v57);
      if (v58)
      {
        v59 = v58;
        v60 = v167;
        ConversationController.participant(from:)(v58, v167);
        if (__swift_getEnumTagSinglePayload(v60, 1, v174) == 1)
        {

          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v60, &demangling cache variable for type metadata for Participant?);
        }
        else
        {
          v170 = v54;
          v88 = v60;
          v89 = v165;
          outlined init with take of StagedCollaboration(v88, v165, type metadata accessor for Participant);
          ConversationController.indexOfRemoteParticipant(with:)();
          if ((v90 & 1) != 0)
          {
            outlined destroy of AccountUpdateNotice(v89, type metadata accessor for Participant);

          }
          else
          {
            ConversationController.removeParticipant(_:at:)(v89);
            if (one-time initialization token for conversationKit != -1)
              swift_once();
            v159 = static OS_os_log.conversationKit;
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
            v91 = swift_allocObject();
            *(_OWORD *)(v91 + 16) = v151;
            v92 = v89;
            v93 = v162;
            outlined init with copy of ConversationControlsAppLaunchButtonType(v92, v162, type metadata accessor for Participant);
            v94 = v174;
            __swift_storeEnumTagSinglePayload(v93, 0, 1, v174);
            v95 = v93;
            v96 = v154;
            outlined init with copy of FeatureEligibility?(v95, v154, &demangling cache variable for type metadata for Participant?);
            if (__swift_getEnumTagSinglePayload(v96, 1, v94) == 1)
            {
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v96, &demangling cache variable for type metadata for Participant?);
              v97 = 0xE300000000000000;
              v98 = 7104878;
            }
            else
            {
              v100 = v149;
              outlined init with take of StagedCollaboration(v96, v149, type metadata accessor for Participant);
              outlined init with copy of ConversationControlsAppLaunchButtonType(v100, v160, type metadata accessor for Participant);
              v98 = String.init<A>(reflecting:)();
              v97 = v101;
              outlined destroy of AccountUpdateNotice(v100, type metadata accessor for Participant);
            }
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v162, &demangling cache variable for type metadata for Participant?);
            *(_QWORD *)(v91 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v91 + 64) = lazy protocol witness table accessor for type String and conformance String();
            *(_QWORD *)(v91 + 32) = v98;
            *(_QWORD *)(v91 + 40) = v97;
            static os_log_type_t.default.getter();
            os_log(_:dso:log:type:_:)();
            swift_bridgeObjectRelease();

            outlined destroy of AccountUpdateNotice(v165, type metadata accessor for Participant);
          }
          v54 = v170;
        }
      }
      v102 = specialized Set.contains(_:)(v54, v169);
      outlined init with copy of RadarReporting((uint64_t)a1, (uint64_t)&v176);
      if ((v102 & 1) != 0)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v176);
LABEL_41:
        v108 = (uint64_t)v36;
        goto LABEL_42;
      }
      v103 = v177;
      v104 = v178;
      __swift_project_boxed_opaque_existential_1(&v176, v177);
      v105 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v104 + 168))(v103, v104);
      if (v105)
      {
        v106 = v105;
        v107 = objc_msgSend(v105, sel_handle);

        LOBYTE(v106) = objc_msgSend(v107, sel_isEqualToHandle_, v54);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v176);
        if ((v106 & 1) != 0)
        {

          goto LABEL_41;
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v176);
      }
      v170 = v54;
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v109 = swift_allocObject();
      *(_OWORD *)(v109 + 16) = v161;
      v110 = v168;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v36, v168, type metadata accessor for Participant);
      v111 = v174;
      __swift_storeEnumTagSinglePayload(v110, 0, 1, v174);
      v112 = v110;
      v113 = v163;
      outlined init with copy of FeatureEligibility?(v112, v163, &demangling cache variable for type metadata for Participant?);
      if (__swift_getEnumTagSinglePayload(v113, 1, v111) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v113, &demangling cache variable for type metadata for Participant?);
        v114 = 0xE300000000000000;
        v115 = 7104878;
      }
      else
      {
        v116 = v157;
        outlined init with take of StagedCollaboration(v113, v157, type metadata accessor for Participant);
        outlined init with copy of ConversationControlsAppLaunchButtonType(v116, v160, type metadata accessor for Participant);
        v115 = String.init<A>(reflecting:)();
        v114 = v117;
        outlined destroy of AccountUpdateNotice(v116, type metadata accessor for Participant);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v168, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v109 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v109 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v109 + 32) = v115;
      *(_QWORD *)(v109 + 40) = v114;
      v118 = a1[3];
      v119 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v118);
      v120 = (*(uint64_t (**)(uint64_t, uint64_t))(v119 + 88))(v118, v119);
      *(_QWORD *)(v109 + 96) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Set<TUConversationMember> and conformance Set<A>, &demangling cache variable for type metadata for Set<TUConversationMember>);
      *(_QWORD *)(v109 + 104) = v121;
      *(_QWORD *)(v109 + 72) = v120;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      ConversationController.removeParticipant(_:at:)((uint64_t)v36);

      outlined destroy of AccountUpdateNotice((uint64_t)v36, type metadata accessor for Participant);
      goto LABEL_50;
    }
    outlined destroy of AccountUpdateNotice((uint64_t)v36, type metadata accessor for Participant);
    ++v51;
LABEL_51:
    v48 = *v172;
    if (v51 >= *(_QWORD *)(*v172 + 16))
      goto LABEL_69;
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
}

void ConversationController.createNewParticipants(with:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  _QWORD *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  id v70;
  _QWORD *v71;
  unint64_t v72;
  Swift::Int v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char v79;
  unint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  id v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  id v98;
  int64_t v99;
  unint64_t v100;
  int64_t v101;
  id v102;
  id v103;
  id v104;
  id v105;
  void *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  void *v115;
  uint64_t v116;
  id v117;
  char v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  id v127;
  id v128;
  void *v129;
  id v130;
  id v131;
  char v132;
  id v133;
  uint64_t v134;
  _QWORD *v135;
  id v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  char v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v174;
  unint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char v203;
  unint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t *v208;
  uint64_t v209;
  char v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  id v229;
  id v230;
  id v231;
  id v232;
  uint64_t v233;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t *v242;
  uint64_t v243;
  char v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  int64_t v265;
  _QWORD *v266;
  uint64_t v267;
  uint64_t v268;
  void *v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  unint64_t v273;
  unint64_t v274;
  char *v275;
  int64_t v276;
  unint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unint64_t v283;
  int64_t v284;
  uint64_t v285;
  id v286;
  unint64_t v287;
  int64_t v288;
  id v289;
  void *v290;
  void *v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  char v301;
  uint64_t v302;
  uint64_t v303;
  char v304;
  unint64_t v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  void *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  void *v314;
  id v315;
  id v316;
  uint64_t v317;
  id v318;
  char v319;
  Swift::Int v320;
  uint64_t v321;
  unint64_t v322;
  id v323;
  char v324;
  uint64_t v325;
  id v326;
  char v327;
  id v328;
  unsigned __int8 v329;
  int64_t v330;
  id v331;
  _QWORD *v332;
  void *v333;
  uint64_t v334;
  uint64_t v335;
  void *v336;
  void *v337;
  id v338;
  id v339;
  int v340;
  uint64_t v341;
  id v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  unsigned int v346;
  uint64_t v347;
  void *v348;
  uint64_t v349;
  BOOL v350;
  uint64_t v351;
  uint64_t v352;
  id v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  id v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  id v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  unint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  unint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  unint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  __int128 v385;
  __int128 v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  __int128 v397;
  uint64_t v398;
  uint64_t v399;
  int64_t v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  char *v404;
  uint64_t v405;
  _QWORD *v406;
  id v407;
  uint64_t v408;
  int64_t v409;
  _QWORD *v410;
  uint64_t v411;
  id v412;
  uint64_t v413;
  char *v414;
  _QWORD *v415;
  id v416;
  id v417;
  uint64_t v418;
  uint64_t v419;
  id v420;
  id v421;
  uint64_t v422;
  uint64_t v423;
  id v424;
  uint64_t v425;
  uint64_t v426;
  id v427;
  char *v428;
  uint64_t v429;
  void *v430;
  unint64_t v431;
  id v432[5];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v5 = MEMORY[0x1E0C80A78](v4);
  v379 = (uint64_t)&v377 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v381 = (uint64_t)&v377 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v380 = (uint64_t)&v377 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v402 = (uint64_t)&v377 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v393 = (uint64_t)&v377 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v391 = (uint64_t)&v377 - v16;
  MEMORY[0x1E0C80A78](v15);
  v396 = (uint64_t)&v377 - v17;
  v18 = type metadata accessor for Participant(0);
  v408 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v388 = (uint64_t)&v377 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v378 = (uint64_t)&v377 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v382 = (uint64_t)&v377 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v411 = (uint64_t)&v377 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v389 = (uint64_t)&v377 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v403 = (uint64_t)&v377 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v387 = (uint64_t)&v377 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v390 = (uint64_t)&v377 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v384 = (uint64_t)&v377 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v394 = (uint64_t)&v377 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v41 = (char *)&v377 - v40;
  v42 = MEMORY[0x1E0C80A78](v39);
  v395 = (uint64_t)&v377 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v46 = (char *)&v377 - v45;
  MEMORY[0x1E0C80A78](v44);
  v418 = (uint64_t)&v377 - v47;
  v48 = type metadata accessor for DispatchPredicate();
  v49 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v51 = (uint64_t *)((char *)&v377 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  v392 = 0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v51 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v49 + 104))(v51, *MEMORY[0x1E0DEF740], v48);
  v52 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v49 + 8))(v51, v48);
  if ((v52 & 1) == 0)
  {
LABEL_242:
    __break(1u);
    goto LABEL_243;
  }
  v53 = a1[3];
  v54 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v53);
  v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 88))(v53, v54);
  v426 = v55;
  v56 = a1[3];
  v57 = a1[4];
  v406 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v56);
  v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 168))(v56, v57);
  if (v58)
  {
    specialized Set._Variant.insert(_:)((int)v432, v58, v59, v60, v61, v62, v63, v64, v377, v378, v379, v380, v381, v382, v383, v384, v385, *((uint64_t *)&v385 + 1), v386,
      *((uint64_t *)&v386 + 1),
      v387,
      v388);

    v55 = v426;
  }
  v413 = v2;
  v65 = v406;
  v422 = v18;
  v414 = v46;
  if ((v55 & 0xC000000000000001) == 0)
  {
    v83 = swift_bridgeObjectRetain();
    v84 = v392;
    v66 = (id)specialized _NativeSet.filter(_:)(v83);
    v392 = v84;
    v65 = v406;
    goto LABEL_25;
  }
  v66 = (id)MEMORY[0x1E0DEE9E8];
  v432[0] = (id)MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  __CocoaSet.makeIterator()();
  v67 = __CocoaSet.Iterator.next()();
  if (!v67)
    goto LABEL_23;
  v68 = v67;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  do
  {
    v425 = v68;
    swift_dynamicCast();
    v69 = objc_msgSend(v427, sel_isOtherInvitedHandle);
    v70 = v427;
    if ((v69 & 1) != 0)
    {

      goto LABEL_21;
    }
    v71 = v432[0];
    v72 = *((_QWORD *)v432[0] + 2);
    if (*((_QWORD *)v432[0] + 3) <= v72)
    {
      specialized _NativeSet.resize(capacity:)(v72 + 1);
      v71 = v432[0];
    }
    v73 = NSObject._rawHashValue(seed:)(v71[5]);
    v74 = (char *)(v71 + 7);
    v75 = -1 << *((_BYTE *)v71 + 32);
    v76 = v73 & ~v75;
    v77 = v76 >> 6;
    if (((-1 << v76) & ~v71[(v76 >> 6) + 7]) != 0)
    {
      v78 = __clz(__rbit64((-1 << v76) & ~v71[(v76 >> 6) + 7])) | v76 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_20;
    }
    v79 = 0;
    v80 = (unint64_t)(63 - v75) >> 6;
    do
    {
      if (++v77 == v80 && (v79 & 1) != 0)
      {
        __break(1u);
LABEL_238:
        __break(1u);
LABEL_239:
        __break(1u);
LABEL_240:
        __break(1u);
LABEL_241:
        __break(1u);
        goto LABEL_242;
      }
      v81 = v77 == v80;
      if (v77 == v80)
        v77 = 0;
      v79 |= v81;
      v82 = *(_QWORD *)&v74[8 * v77];
    }
    while (v82 == -1);
    v78 = __clz(__rbit64(~v82)) + (v77 << 6);
LABEL_20:
    *(_QWORD *)&v74[(v78 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v78;
    *(_QWORD *)(v71[6] + 8 * v78) = v70;
    ++v71[2];
LABEL_21:
    v68 = __CocoaSet.Iterator.next()();
  }
  while (v68);
  v66 = v432[0];
  v2 = v413;
  v65 = v406;
  v18 = v422;
  v46 = v414;
LABEL_23:
  swift_release();
LABEL_25:
  swift_bridgeObjectRelease();
  v426 = (uint64_t)v66;
  v85 = v65[3];
  v86 = v65[4];
  __swift_project_boxed_opaque_existential_1(v65, v85);
  Conversation.displayableActiveParticipants.getter(v85, v86);
  if ((v87 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    Set.Iterator.init(_cocoa:)();
    v87 = (unint64_t)v427;
    v401 = v428;
    v88 = v429;
    v89 = v430;
    v90 = v431;
  }
  else
  {
    v89 = 0;
    v91 = -1 << *(_BYTE *)(v87 + 32);
    v92 = *(_QWORD *)(v87 + 56);
    v401 = (char *)(v87 + 56);
    v93 = ~v91;
    v94 = -v91;
    if (v94 < 64)
      v95 = ~(-1 << v94);
    else
      v95 = -1;
    v90 = v95 & v92;
    v88 = v93;
  }
  v399 = v87 & 0x7FFFFFFFFFFFFFFFLL;
  v383 = v88;
  v400 = (unint64_t)(v88 + 64) >> 6;
  v386 = xmmword_1BD645380;
  v397 = xmmword_1BD6441D0;
  v385 = xmmword_1BD646740;
  v398 = MEMORY[0x1E0DEE9B0] + 8;
  v405 = v87;
  v404 = v41;
  if ((v87 & 0x8000000000000000) != 0)
    goto LABEL_34;
  while (2)
  {
    if (v90)
    {
      v409 = (v90 - 1) & v90;
      v96 = __clz(__rbit64(v90)) | ((_QWORD)v89 << 6);
      v410 = v89;
      goto LABEL_46;
    }
    v99 = (int64_t)v89 + 1;
    if (__OFADD__(v89, 1))
      goto LABEL_238;
    if (v99 >= v400)
      goto LABEL_139;
    v100 = *(_QWORD *)&v401[8 * v99];
    if (!v100)
    {
      v101 = (int64_t)v89 + 2;
      if ((uint64_t)v89 + 2 < v400)
      {
        v100 = *(_QWORD *)&v401[8 * v101];
        if (v100)
          goto LABEL_44;
        v101 = (int64_t)v89 + 3;
        if ((uint64_t)v89 + 3 < v400)
        {
          v100 = *(_QWORD *)&v401[8 * v101];
          if (v100)
          {
LABEL_44:
            v99 = v101;
            goto LABEL_45;
          }
          v99 = (int64_t)v89 + 4;
          if ((uint64_t)v89 + 4 < v400)
          {
            v100 = *(_QWORD *)&v401[8 * v99];
            if (!v100)
            {
              v265 = (int64_t)v89 + 5;
              do
              {
                if (v265 >= v400)
                  goto LABEL_139;
                v100 = *(_QWORD *)&v401[8 * v265++];
              }
              while (!v100);
              v99 = v265 - 1;
            }
            goto LABEL_45;
          }
        }
      }
LABEL_139:
      outlined consume of [String : Application].Iterator._Variant();
      v266 = v406;
      v267 = v406[3];
      v268 = v406[4];
      __swift_project_boxed_opaque_existential_1(v406, v267);
      v269 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v268 + 88))(v267, v268);
      v270 = v266[3];
      v271 = v266[4];
      __swift_project_boxed_opaque_existential_1(v266, v270);
      v272 = (*(uint64_t (**)(uint64_t, uint64_t))(v271 + 128))(v270, v271);
      specialized Set.union<A>(_:)(v272, v269);
      v274 = v273;
      if ((v273 & 0xC000000000000001) != 0)
      {
        __CocoaSet.makeIterator()();
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
        lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
        Set.Iterator.init(_cocoa:)();
        v274 = (unint64_t)v432[0];
        v410 = v432[1];
        v275 = (char *)v432[2];
        v276 = (int64_t)v432[3];
        v277 = (unint64_t)v432[4];
      }
      else
      {
        v276 = 0;
        v278 = -1 << *(_BYTE *)(v273 + 32);
        v279 = *(_QWORD *)(v273 + 56);
        v410 = (_QWORD *)(v273 + 56);
        v280 = ~v278;
        v281 = -v278;
        if (v281 < 64)
          v282 = ~(-1 << v281);
        else
          v282 = -1;
        v277 = v282 & v279;
        v275 = (char *)v280;
      }
      v407 = (id)(v274 & 0x7FFFFFFFFFFFFFFFLL);
      v404 = v275;
      v409 = (unint64_t)(v275 + 64) >> 6;
      v405 = MEMORY[0x1E0DEE9B0] + 8;
      v415 = (_QWORD *)v274;
      while (2)
      {
        while (2)
        {
          if ((v274 & 0x8000000000000000) != 0)
          {
            v285 = __CocoaSet.Iterator.next()();
            if (!v285)
              goto LABEL_236;
            v423 = v285;
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v286 = v424;
            swift_unknownObjectRelease();
            v284 = v276;
            v417 = (id)v277;
            if (!v286)
              goto LABEL_236;
          }
          else
          {
            if (v277)
            {
              v417 = (id)((v277 - 1) & v277);
              v283 = __clz(__rbit64(v277)) | (v276 << 6);
              v284 = v276;
            }
            else
            {
              v284 = v276 + 1;
              if (__OFADD__(v276, 1))
                goto LABEL_239;
              if (v284 >= v409)
              {
LABEL_236:
                outlined consume of [String : Application].Iterator._Variant();
                swift_bridgeObjectRelease();
                return;
              }
              v287 = v410[v284];
              if (!v287)
              {
                v288 = v276 + 2;
                if (v276 + 2 >= v409)
                  goto LABEL_236;
                v287 = v410[v288];
                if (v287)
                  goto LABEL_159;
                v288 = v276 + 3;
                if (v276 + 3 >= v409)
                  goto LABEL_236;
                v287 = v410[v288];
                if (v287)
                {
LABEL_159:
                  v284 = v288;
                }
                else
                {
                  v284 = v276 + 4;
                  if (v276 + 4 >= v409)
                    goto LABEL_236;
                  v287 = v410[v284];
                  if (!v287)
                  {
                    v362 = v276 + 5;
                    do
                    {
                      if (v362 >= v409)
                        goto LABEL_236;
                      v287 = v410[v362++];
                    }
                    while (!v287);
                    v284 = v362 - 1;
                  }
                }
              }
              v417 = (id)((v287 - 1) & v287);
              v283 = __clz(__rbit64(v287)) + (v284 << 6);
            }
            v286 = *(id *)(*(_QWORD *)(v274 + 48) + 8 * v283);
            if (!v286)
              goto LABEL_236;
          }
          v420 = v286;
          v289 = objc_msgSend(v286, sel_handles);
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
          v291 = v290;
          lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
          v421 = v291;
          v418 = v292;
          v293 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

          v294 = v293 & 0xC000000000000001;
          v416 = (id)v284;
          if ((v293 & 0xC000000000000001) != 0)
          {
            v295 = __CocoaSet.startIndex.getter();
            v297 = v296;
            v298 = __CocoaSet.endIndex.getter();
            v300 = v299;
            v301 = MEMORY[0x1C3B73BC8](v295, v297, v298, v299);
            outlined consume of Set<TUHandle>.Index._Variant(v298, v300, 1);
            v302 = v295;
            v303 = v411;
            if ((v301 & 1) != 0)
              goto LABEL_231;
          }
          else
          {
            v304 = *(_BYTE *)(v293 + 32);
            v295 = 1 << v304;
            v305 = *(_QWORD *)(v293 + 56);
            v303 = v411;
            if (v305)
            {
              v306 = 0;
            }
            else
            {
              v346 = v304 & 0x3F;
              if (v346 < 7)
                goto LABEL_230;
              v305 = *(_QWORD *)(v293 + 64);
              if (v305)
              {
                v306 = 1;
              }
              else
              {
                if (v346 < 8)
                {
LABEL_230:
                  v297 = *(unsigned int *)(v293 + 36);
LABEL_231:
                  outlined consume of Set<TUHandle>.Index._Variant(v295, v297, v294 != 0);

                  goto LABEL_232;
                }
                v305 = *(_QWORD *)(v293 + 72);
                if (v305)
                {
                  v306 = 2;
                }
                else
                {
                  v374 = 10;
                  do
                  {
                    if (v374 - 7 >= (unint64_t)(v295 + 63) >> 6)
                      goto LABEL_230;
                    v305 = *(_QWORD *)(v293 + 8 * v374++);
                  }
                  while (!v305);
                  v306 = v374 - 8;
                }
              }
            }
            v302 = __clz(__rbit64(v305)) + (v306 << 6);
            v297 = *(unsigned int *)(v293 + 36);
            if (v302 == v295)
              goto LABEL_231;
          }
          specialized Set.subscript.getter(v302, v297, v294 != 0, v293);
          v414 = v307;
          outlined consume of Set<TUHandle>.Index._Variant(v302, v297, v294 != 0);
          swift_bridgeObjectRelease();
          v308 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
          swift_beginAccess();
          v309 = *(void **)v308;
          v310 = *(_QWORD *)(*(_QWORD *)v308 + 16);
          if (!v310)
          {
LABEL_185:
            v328 = v420;
            v329 = objc_msgSend(v420, sel_isOtherInvitedHandle);
            v274 = (unint64_t)v415;
            v330 = (int64_t)v416;
            if ((v329 & 1) != 0)
            {

LABEL_201:
              v276 = v330;
              v277 = (unint64_t)v417;
              continue;
            }
            v331 = objc_msgSend(v328, sel_association);
            v332 = v406;
            if (v331)
            {
              v333 = v331;
              if (objc_msgSend(v331, sel_type) == (id)2)
              {
                v334 = v332[3];
                v335 = v332[4];
                __swift_project_boxed_opaque_existential_1(v332, v334);
                v336 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v335 + 168))(v334, v335);
                if (v336)
                {
                  v337 = v336;
                  v338 = objc_msgSend(v336, sel_handle);
                  v339 = objc_msgSend(v333, sel_handle);
                  v340 = TUHandlesAreCanonicallyEqual();

                  if (v340)
                  {
                    if (one-time initialization token for conversationKit != -1)
                      swift_once();
                    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                    v341 = swift_allocObject();
                    *(_OWORD *)(v341 + 16) = v397;
                    v424 = v328;
                    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
                    v342 = v328;
                    v343 = String.init<A>(reflecting:)();
                    v345 = v344;
                    *(_QWORD *)(v341 + 56) = MEMORY[0x1E0DEA968];
                    *(_QWORD *)(v341 + 64) = lazy protocol witness table accessor for type String and conformance String();
                    *(_QWORD *)(v341 + 32) = v343;
                    *(_QWORD *)(v341 + 40) = v345;
                    static os_log_type_t.default.getter();
                    os_log(_:dso:log:type:_:)();

LABEL_215:
                    swift_bridgeObjectRelease();
                    v276 = v330;
                    v277 = (unint64_t)v417;
                    v2 = v413;
                    continue;
                  }

                }
                if ((objc_msgSend(v333, sel_isPrimary) & 1) == 0)
                {
                  if (one-time initialization token for conversationKit != -1)
                    swift_once();
                  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                  v357 = swift_allocObject();
                  *(_OWORD *)(v357 + 16) = v397;
                  v424 = v328;
                  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
                  v358 = v328;
                  v359 = String.init<A>(reflecting:)();
                  v361 = v360;
                  *(_QWORD *)(v357 + 56) = MEMORY[0x1E0DEA968];
                  *(_QWORD *)(v357 + 64) = lazy protocol witness table accessor for type String and conformance String();
                  *(_QWORD *)(v357 + 32) = v359;
                  *(_QWORD *)(v357 + 40) = v361;
                  static os_log_type_t.default.getter();
                  os_log(_:dso:log:type:_:)();

                  goto LABEL_215;
                }
                v349 = v380;
                ConversationController.participant(fromMemberAssociation:)(v333, v380);
                v350 = __swift_getEnumTagSinglePayload(v349, 1, v18) == 1;
                v351 = v382;
                if (!v350)
                {
                  outlined init with take of StagedCollaboration(v349, v382, type metadata accessor for Participant);
                  if (one-time initialization token for conversationKit != -1)
                    swift_once();
                  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                  v363 = swift_allocObject();
                  *(_OWORD *)(v363 + 16) = v386;
                  v424 = v328;
                  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
                  v364 = v328;
                  v365 = String.init<A>(reflecting:)();
                  v367 = v366;
                  *(_QWORD *)(v363 + 56) = MEMORY[0x1E0DEA968];
                  v368 = lazy protocol witness table accessor for type String and conformance String();
                  *(_QWORD *)(v363 + 64) = v368;
                  *(_QWORD *)(v363 + 32) = v365;
                  *(_QWORD *)(v363 + 40) = v367;
                  v369 = v381;
                  outlined init with copy of ConversationControlsAppLaunchButtonType(v351, v381, type metadata accessor for Participant);
                  __swift_storeEnumTagSinglePayload(v369, 0, 1, v18);
                  v370 = v369;
                  v371 = v379;
                  outlined init with copy of FeatureEligibility?(v370, v379, &demangling cache variable for type metadata for Participant?);
                  if (__swift_getEnumTagSinglePayload(v371, 1, v18) == 1)
                  {
                    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v371, &demangling cache variable for type metadata for Participant?);
                    v372 = 0xE300000000000000;
                    v373 = 7104878;
                  }
                  else
                  {
                    v421 = v364;
                    v375 = v378;
                    outlined init with take of StagedCollaboration(v371, v378, type metadata accessor for Participant);
                    outlined init with copy of ConversationControlsAppLaunchButtonType(v375, v388, type metadata accessor for Participant);
                    v373 = String.init<A>(reflecting:)();
                    v372 = v376;
                    v364 = v421;
                    outlined destroy of AccountUpdateNotice(v375, type metadata accessor for Participant);
                  }
                  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v381, &demangling cache variable for type metadata for Participant?);
                  *(_QWORD *)(v363 + 96) = MEMORY[0x1E0DEA968];
                  *(_QWORD *)(v363 + 104) = v368;
                  *(_QWORD *)(v363 + 72) = v373;
                  *(_QWORD *)(v363 + 80) = v372;
                  static os_log_type_t.default.getter();
                  os_log(_:dso:log:type:_:)();

                  swift_bridgeObjectRelease();
                  outlined destroy of AccountUpdateNotice(v382, type metadata accessor for Participant);
                  v276 = (int64_t)v416;
                  v277 = (unint64_t)v417;
                  v2 = v413;
                  goto LABEL_233;
                }
                outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v349, &demangling cache variable for type metadata for Participant?);
                v274 = (unint64_t)v415;
                if (one-time initialization token for conversationKit != -1)
                  swift_once();
                static os_log_type_t.error.getter();
                __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                v352 = swift_allocObject();
                *(_OWORD *)(v352 + 16) = v397;
                v424 = v328;
                type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
                v353 = v328;
                v354 = String.init<A>(reflecting:)();
                v356 = v355;
                *(_QWORD *)(v352 + 56) = MEMORY[0x1E0DEA968];
                *(_QWORD *)(v352 + 64) = lazy protocol witness table accessor for type String and conformance String();
                *(_QWORD *)(v352 + 32) = v354;
                *(_QWORD *)(v352 + 40) = v356;
                os_log(_:dso:log:type:_:)();

                swift_bridgeObjectRelease();
                v332 = v406;
              }
              else
              {

              }
            }
            v347 = v388;
            v348 = v414;
            v2 = v413;
            ConversationController.createParticipant(for:conversation:)(v414, v332, v388);
            closure #1 in ConversationController.createNewParticipants(with:)(v347, v2);

            outlined destroy of AccountUpdateNotice(v347, type metadata accessor for Participant);
            goto LABEL_201;
          }
          break;
        }
        v311 = v408;
        v419 = (uint64_t)v309
             + ((*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80));
        v412 = v309;
        swift_bridgeObjectRetain();
        v312 = 0;
        v313 = *(_QWORD *)(v311 + 72);
LABEL_170:
        outlined init with copy of ConversationControlsAppLaunchButtonType(v419 + v313 * v312, v303, type metadata accessor for Participant);
        v314 = *(void **)(v303 + *(int *)(v18 + 28));
        if (v314)
        {
          v315 = v314;
          v316 = objc_msgSend(v420, sel_handles);
          v317 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

          if ((v317 & 0xC000000000000001) != 0)
          {
            v318 = v315;
            v319 = __CocoaSet.contains(_:)();
            swift_bridgeObjectRelease();

            outlined destroy of AccountUpdateNotice(v303, type metadata accessor for Participant);
            if ((v319 & 1) != 0)
              goto LABEL_198;
            goto LABEL_183;
          }
          if (*(_QWORD *)(v317 + 16))
          {
            v320 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v317 + 40));
            v321 = -1 << *(_BYTE *)(v317 + 32);
            v322 = v320 & ~v321;
            if (((*(_QWORD *)(v317 + 56 + ((v322 >> 3) & 0xFFFFFFFFFFFFF8)) >> v322) & 1) != 0)
            {
              v323 = *(id *)(*(_QWORD *)(v317 + 48) + 8 * v322);
              v324 = static NSObject.== infix(_:_:)();

              if ((v324 & 1) != 0)
              {
LABEL_197:

                swift_bridgeObjectRelease();
                outlined destroy of AccountUpdateNotice(v411, type metadata accessor for Participant);
                v2 = v413;
                v18 = v422;
LABEL_198:

LABEL_232:
                swift_bridgeObjectRelease();
                v276 = (int64_t)v416;
                v277 = (unint64_t)v417;
LABEL_233:
                v274 = (unint64_t)v415;
                continue;
              }
              v325 = ~v321;
              while (1)
              {
                v322 = (v322 + 1) & v325;
                if (((*(_QWORD *)(v317 + 56 + ((v322 >> 3) & 0xFFFFFFFFFFFFF8)) >> v322) & 1) == 0)
                  break;
                v326 = *(id *)(*(_QWORD *)(v317 + 48) + 8 * v322);
                v327 = static NSObject.== infix(_:_:)();

                if ((v327 & 1) != 0)
                  goto LABEL_197;
              }
            }
          }

          swift_bridgeObjectRelease();
          v2 = v413;
          v18 = v422;
          v303 = v411;
        }
        break;
      }
      outlined destroy of AccountUpdateNotice(v303, type metadata accessor for Participant);
LABEL_183:
      if (++v312 == v310)
      {
        swift_bridgeObjectRelease();
        goto LABEL_185;
      }
      goto LABEL_170;
    }
LABEL_45:
    v409 = (v100 - 1) & v100;
    v410 = (_QWORD *)v99;
    v96 = __clz(__rbit64(v100)) + (v99 << 6);
LABEL_46:
    v98 = *(id *)(*(_QWORD *)(v87 + 48) + 8 * v96);
    if (!v98)
      goto LABEL_139;
LABEL_47:
    v102 = objc_msgSend(v98, sel_handle);
    v416 = (id)TUNormalizedHandleForTUHandle();

    v103 = v98;
    v104 = objc_msgSend(v103, sel_handle);
    v417 = objc_msgSend(v103, sel_identifier);
    v105 = objc_msgSend(v103, sel_avcIdentifier);
    v415 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    v421 = v106;
    v420 = v104;

    v107 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
    swift_beginAccess();
    v108 = *(void **)v107;
    v109 = *(_QWORD *)(*(_QWORD *)v107 + 16);
    v412 = v103;
    if (!v109)
      goto LABEL_59;
    v110 = v408;
    v111 = (uint64_t)v108
         + ((*(unsigned __int8 *)(v408 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v408 + 80));
    v407 = v108;
    swift_bridgeObjectRetain_n();
    v419 = *(_QWORD *)(v110 + 72);
    v112 = v418;
    while (2)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v111, v112, type metadata accessor for Participant);
      v113 = v112 + *(int *)(v18 + 28);
      v115 = *(void **)v113;
      v114 = *(id *)(v113 + 8);
      v116 = *(_QWORD *)(v113 + 16);
      if (!*(_QWORD *)v113)
      {
        v119 = v420;
        v120 = v420;
        swift_bridgeObjectRetain();
        outlined consume of Participant.RemoteIdentifiers?(0);
        outlined consume of Participant.RemoteIdentifiers?(v119);
LABEL_56:
        outlined destroy of AccountUpdateNotice(v112, type metadata accessor for Participant);
        goto LABEL_57;
      }
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
      outlined copy of Participant.RemoteIdentifiers?(v115);
      outlined copy of Participant.RemoteIdentifiers?(v115);
      v117 = v420;
      swift_bridgeObjectRetain();
      v118 = static NSObject.== infix(_:_:)();
      swift_bridgeObjectRelease();

      if ((v118 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        outlined consume of Participant.RemoteIdentifiers?(v115);
        v112 = v418;
        goto LABEL_56;
      }
      swift_bridgeObjectRelease();
      outlined consume of Participant.RemoteIdentifiers?(v115);
      v112 = v418;
      outlined destroy of AccountUpdateNotice(v418, type metadata accessor for Participant);
      if ((v116 & 1) == 0 && v114 == v417)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v89 = v410;
        v90 = v409;
        v2 = v413;
        v18 = v422;
        goto LABEL_128;
      }
LABEL_57:
      v111 += v419;
      --v109;
      v18 = v422;
      if (v109)
        continue;
      break;
    }
    swift_bridgeObjectRelease_n();
    v2 = v413;
    v46 = v414;
    v103 = v412;
LABEL_59:
    v121 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    v122 = *(_QWORD *)(v121 + 16);
    if (!v122)
      goto LABEL_73;
    v123 = (*(unsigned __int8 *)(v408 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v408 + 80);
    v124 = *(_QWORD *)(v408 + 72);
    swift_bridgeObjectRetain();
    v125 = 0;
    while (2)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v121 + v123, (uint64_t)v46, type metadata accessor for Participant);
      v126 = &v46[*(int *)(v18 + 28)];
      if (!*(_QWORD *)v126 || (v126[16] & 1) == 0)
        goto LABEL_70;
      v127 = *(id *)v126;
      v128 = (id)TUNormalizedHandleForTUHandle();
      v129 = v128;
      if (!v416)
      {
        v133 = v128;

        if (v133)
        {

          v127 = v133;
LABEL_69:

LABEL_70:
          outlined destroy of AccountUpdateNotice((uint64_t)v46, type metadata accessor for Participant);
          goto LABEL_71;
        }
        outlined destroy of AccountUpdateNotice((uint64_t)v46, type metadata accessor for Participant);
LABEL_111:
        swift_bridgeObjectRelease();
        v225 = (uint64_t *)(v413 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
        if (v125 >= *(_QWORD *)(*(_QWORD *)(v413
                                           + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants)
                               + 16))
          goto LABEL_240;
        v226 = v395;
        outlined init with copy of ConversationControlsAppLaunchButtonType(*v225 + v123, v395, type metadata accessor for Participant);
        v227 = v226 + *(int *)(v18 + 28);
        v228 = *(void **)v227;
        v419 = *(_QWORD *)(v227 + 32);
        v229 = v420;
        v407 = v420;
        v230 = v421;
        swift_bridgeObjectRetain();
        outlined consume of Participant.RemoteIdentifiers?(v228);
        v231 = v417;
        *(_QWORD *)v227 = v229;
        *(_QWORD *)(v227 + 8) = v231;
        v232 = v415;
        *(_QWORD *)(v227 + 16) = 0;
        *(_QWORD *)(v227 + 24) = v232;
        *(_QWORD *)(v227 + 32) = v230;
        swift_beginAccess();
        v233 = *v225;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v225 = v233;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v233 = specialized _ArrayBuffer._consumeAndCreateNew()();
          *v225 = v233;
        }
        v18 = v422;
        v46 = v414;
        v2 = v413;
        if (v125 >= *(_QWORD *)(v233 + 16))
          goto LABEL_241;
        v235 = v395;
        outlined assign with copy of Participant.State(v395, v233 + v123, type metadata accessor for Participant);
        swift_endAccess();

        swift_bridgeObjectRelease();
        v236 = v235;
        goto LABEL_120;
      }
      if (!v128)
        goto LABEL_69;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      v130 = v129;
      v131 = v416;
      v132 = static NSObject.== infix(_:_:)();

      v46 = v414;
      v18 = v422;

      outlined destroy of AccountUpdateNotice((uint64_t)v46, type metadata accessor for Participant);
      if ((v132 & 1) != 0)
        goto LABEL_111;
LABEL_71:
      ++v125;
      v123 += v124;
      if (v122 != v125)
        continue;
      break;
    }
    swift_bridgeObjectRelease();
    v2 = v413;
    v103 = v412;
LABEL_73:
    v134 = (uint64_t)v404;
    v135 = v406;
    ConversationController.createParticipant(for:conversation:)(v103, v406, (uint64_t)v404);
    if (one-time initialization token for shared != -1)
      swift_once();
    if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 584))() & 1) == 0
      || (v136 = objc_msgSend(v103, sel_association)) == 0)
    {
LABEL_85:
      v163 = ConversationController.identityClaimingAssociationRelationship(for:in:)(v103, v135);
      if (v164)
      {
        v165 = v402;
        v166 = v403;
        if (v164 != 1)
        {
          if (v164 == 2)
          {
            if (one-time initialization token for conversationKit != -1)
              swift_once();
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
            v167 = swift_allocObject();
            *(_OWORD *)(v167 + 16) = v397;
            v432[0] = v103;
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
            v168 = v103;
            v169 = String.init<A>(reflecting:)();
            v171 = v170;
            *(_QWORD *)(v167 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v167 + 64) = lazy protocol witness table accessor for type String and conformance String();
            *(_QWORD *)(v167 + 32) = v169;
            *(_QWORD *)(v167 + 40) = v171;
            static os_log_type_t.default.getter();
            os_log(_:dso:log:type:_:)();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            goto LABEL_119;
          }
LABEL_118:
          closure #1 in ConversationController.createNewParticipants(with:)(v134, v2);

          swift_bridgeObjectRelease();
LABEL_119:
          v236 = v134;
LABEL_120:
          outlined destroy of AccountUpdateNotice(v236, type metadata accessor for Participant);
          v89 = v410;
          v90 = v409;
          goto LABEL_129;
        }
        ConversationController.remoteParticipant(with:)((uint64_t)v163, v402);
        if (__swift_getEnumTagSinglePayload(v165, 1, v18) == 1)
        {
LABEL_101:
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v165, &demangling cache variable for type metadata for Participant?);
          goto LABEL_118;
        }
        outlined init with take of StagedCollaboration(v165, v166, type metadata accessor for Participant);
        v202 = ConversationController.indexOfRemoteParticipant(with:)();
        if ((v203 & 1) != 0)
        {
          outlined destroy of AccountUpdateNotice(v166, type metadata accessor for Participant);
          v103 = v412;
          goto LABEL_118;
        }
        v204 = v202;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
        v205 = *(_QWORD *)(v408 + 72);
        v206 = (*(unsigned __int8 *)(v408 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v408 + 80);
        v207 = swift_allocObject();
        *(_OWORD *)(v207 + 16) = v397;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v166, v207 + v206, type metadata accessor for Participant);
        specialized Set.init(_nonEmptyArrayLiteral:)();
        Participant.withAssociatedParticipants(_:)();
        swift_bridgeObjectRelease();
        v208 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
        swift_beginAccess();
        v209 = *v208;
        v210 = swift_isUniquelyReferenced_nonNull_native();
        *v208 = v209;
        if ((v210 & 1) == 0)
        {
          v209 = specialized _ArrayBuffer._consumeAndCreateNew()();
          *v208 = v209;
        }
        v211 = v403;
        if ((v204 & 0x8000000000000000) == 0)
        {
          if (v204 < *(_QWORD *)(v209 + 16))
          {
            outlined assign with copy of Participant.State(v389, v209 + v206 + v205 * v204, type metadata accessor for Participant);
            swift_endAccess();
            if (one-time initialization token for conversationKit != -1)
              swift_once();
            v419 = static OS_os_log.conversationKit;
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
            v212 = swift_allocObject();
            *(_OWORD *)(v212 + 16) = v386;
            v213 = v391;
            outlined init with copy of ConversationControlsAppLaunchButtonType(v211, v391, type metadata accessor for Participant);
            __swift_storeEnumTagSinglePayload(v213, 0, 1, v18);
            specialized >> prefix<A>(_:)(v213);
            v215 = v214;
            v217 = v216;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v213, &demangling cache variable for type metadata for Participant?);
            v218 = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v212 + 56) = MEMORY[0x1E0DEA968];
            v219 = lazy protocol witness table accessor for type String and conformance String();
            *(_QWORD *)(v212 + 64) = v219;
            *(_QWORD *)(v212 + 32) = v215;
            *(_QWORD *)(v212 + 40) = v217;
            v220 = v389;
            outlined init with copy of ConversationControlsAppLaunchButtonType(v389, v213, type metadata accessor for Participant);
            __swift_storeEnumTagSinglePayload(v213, 0, 1, v18);
            specialized >> prefix<A>(_:)(v213);
            v222 = v221;
            v224 = v223;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v213, &demangling cache variable for type metadata for Participant?);
            *(_QWORD *)(v212 + 96) = v218;
            *(_QWORD *)(v212 + 104) = v219;
            *(_QWORD *)(v212 + 72) = v222;
            *(_QWORD *)(v212 + 80) = v224;
            static os_log_type_t.default.getter();
            os_log(_:dso:log:type:_:)();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            outlined destroy of AccountUpdateNotice(v220, type metadata accessor for Participant);
            outlined destroy of AccountUpdateNotice(v403, type metadata accessor for Participant);
            v162 = (uint64_t)v404;
            goto LABEL_127;
          }
          goto LABEL_246;
        }
LABEL_245:
        __break(1u);
LABEL_246:
        __break(1u);
LABEL_247:
        __break(1u);
        goto LABEL_248;
      }
      v165 = v393;
      ConversationController.remoteParticipant(with:)((uint64_t)v163, v393);
      if (__swift_getEnumTagSinglePayload(v165, 1, v18) == 1)
        goto LABEL_101;
      v172 = v390;
      outlined init with take of StagedCollaboration(v165, v390, type metadata accessor for Participant);
      v173 = ConversationController.indexOfRemoteParticipant(with:)();
      if ((v174 & 1) != 0)
      {
        outlined destroy of AccountUpdateNotice(v172, type metadata accessor for Participant);
        goto LABEL_118;
      }
      v175 = v173;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      v176 = *(_QWORD *)(v408 + 72);
      v177 = (*(unsigned __int8 *)(v408 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v408 + 80);
      v178 = swift_allocObject();
      *(_OWORD *)(v178 + 16) = v397;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v134, v178 + v177, type metadata accessor for Participant);
      specialized Set.init(_nonEmptyArrayLiteral:)();
      v179 = v387;
      Participant.withAssociatedParticipants(_:)();
      swift_bridgeObjectRelease();
      v180 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
      swift_beginAccess();
      v181 = *v180;
      v182 = swift_isUniquelyReferenced_nonNull_native();
      *v180 = v181;
      if ((v182 & 1) == 0)
      {
        v181 = specialized _ArrayBuffer._consumeAndCreateNew()();
        *v180 = v181;
      }
      if ((v175 & 0x8000000000000000) == 0)
      {
        if (v175 < *(_QWORD *)(v181 + 16))
        {
          outlined assign with copy of Participant.State(v179, v181 + v177 + v176 * v175, type metadata accessor for Participant);
          swift_endAccess();
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          v419 = static OS_os_log.conversationKit;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v183 = swift_allocObject();
          *(_OWORD *)(v183 + 16) = v385;
          v432[0] = v103;
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
          v417 = v103;
          v184 = String.init<A>(reflecting:)();
          v186 = v185;
          *(_QWORD *)(v183 + 56) = MEMORY[0x1E0DEA968];
          v187 = lazy protocol witness table accessor for type String and conformance String();
          *(_QWORD *)(v183 + 64) = v187;
          *(_QWORD *)(v183 + 32) = v184;
          *(_QWORD *)(v183 + 40) = v186;
          v188 = v134;
          v189 = v391;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v188, v391, type metadata accessor for Participant);
          v190 = v422;
          __swift_storeEnumTagSinglePayload(v189, 0, 1, v422);
          specialized >> prefix<A>(_:)(v189);
          v192 = v191;
          v194 = v193;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v189, &demangling cache variable for type metadata for Participant?);
          *(_QWORD *)(v183 + 96) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v183 + 104) = v187;
          *(_QWORD *)(v183 + 72) = v192;
          *(_QWORD *)(v183 + 80) = v194;
          v195 = v387;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v387, v189, type metadata accessor for Participant);
          __swift_storeEnumTagSinglePayload(v189, 0, 1, v190);
          specialized >> prefix<A>(_:)(v189);
          v197 = v196;
          v199 = v198;
          v200 = v189;
          v201 = (uint64_t)v404;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v200, &demangling cache variable for type metadata for Participant?);
          *(_QWORD *)(v183 + 136) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v183 + 144) = v187;
          v18 = v190;
          *(_QWORD *)(v183 + 112) = v197;
          *(_QWORD *)(v183 + 120) = v199;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          outlined destroy of AccountUpdateNotice(v195, type metadata accessor for Participant);
          outlined destroy of AccountUpdateNotice(v390, type metadata accessor for Participant);
          v162 = v201;
          goto LABEL_127;
        }
        goto LABEL_244;
      }
LABEL_243:
      __break(1u);
LABEL_244:
      __break(1u);
      goto LABEL_245;
    }
    v137 = v136;
    v138 = v396;
    ConversationController.participant(from:)(v136, v396);
    if (__swift_getEnumTagSinglePayload(v138, 1, v18) == 1)
    {

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v138, &demangling cache variable for type metadata for Participant?);
      goto LABEL_85;
    }
    v139 = v394;
    outlined init with take of StagedCollaboration(v138, v394, type metadata accessor for Participant);
    v140 = ConversationController.indexOfRemoteParticipant(with:)();
    if ((v141 & 1) != 0)
    {
      outlined destroy of AccountUpdateNotice(v139, type metadata accessor for Participant);

      v46 = v414;
      goto LABEL_85;
    }
    v142 = v140;
    v419 = (uint64_t)v137;
    v143 = *(int *)(v18 + 44);
    v144 = *(_QWORD *)(v139 + v143);
    MEMORY[0x1E0C80A78](v140);
    *(&v377 - 2) = v134;
    swift_bridgeObjectRetain();
    v145 = v392;
    specialized Sequence.contains(where:)((uint64_t (*)(char *))partial apply for closure #5 in ConversationController.createNewParticipants(with:), (uint64_t)(&v377 - 4), v144);
    v147 = v146;
    swift_bridgeObjectRelease();
    v392 = v145;
    if ((v147 & 1) != 0)
    {
      v2 = v413;
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v417 = (id)static OS_os_log.conversationKit;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v148 = swift_allocObject();
      *(_OWORD *)(v148 + 16) = v386;
      v432[0] = v103;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      v149 = v103;
      v150 = String.init<A>(reflecting:)();
      v152 = v151;
      v153 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v148 + 56) = MEMORY[0x1E0DEA968];
      v154 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v148 + 64) = v154;
      *(_QWORD *)(v148 + 32) = v150;
      *(_QWORD *)(v148 + 40) = v152;
      v155 = v394;
      v156 = v391;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v394, v391, type metadata accessor for Participant);
      v157 = v422;
      __swift_storeEnumTagSinglePayload(v156, 0, 1, v422);
      specialized >> prefix<A>(_:)(v156);
      v159 = v158;
      v161 = v160;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v156, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v148 + 96) = v153;
      *(_QWORD *)(v148 + 104) = v154;
      v18 = v157;
      *(_QWORD *)(v148 + 72) = v159;
      *(_QWORD *)(v148 + 80) = v161;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      outlined destroy of AccountUpdateNotice(v155, type metadata accessor for Participant);
      v162 = (uint64_t)v404;
      goto LABEL_127;
    }
    v237 = *(_QWORD *)(v139 + v143);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
    v238 = *(_QWORD *)(v408 + 72);
    v239 = (*(unsigned __int8 *)(v408 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v408 + 80);
    v240 = swift_allocObject();
    *(_OWORD *)(v240 + 16) = v397;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v134, v240 + v239, type metadata accessor for Participant);
    swift_bridgeObjectRetain();
    specialized Set.union<A>(_:)(v240, v237);
    v241 = v384;
    Participant.withAssociatedParticipants(_:)();
    swift_bridgeObjectRelease();
    v2 = v413;
    v242 = (uint64_t *)(v413 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    swift_beginAccess();
    v243 = *v242;
    v244 = swift_isUniquelyReferenced_nonNull_native();
    *v242 = v243;
    if ((v244 & 1) == 0)
    {
      v243 = specialized _ArrayBuffer._consumeAndCreateNew()();
      *v242 = v243;
      if ((v142 & 0x8000000000000000) != 0)
        goto LABEL_248;
LABEL_123:
      if (v142 >= *(_QWORD *)(v243 + 16))
        goto LABEL_247;
      outlined assign with copy of Participant.State(v241, v243 + v239 + v238 * v142, type metadata accessor for Participant);
      swift_endAccess();
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v417 = (id)static OS_os_log.conversationKit;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v245 = swift_allocObject();
      *(_OWORD *)(v245 + 16) = v385;
      v432[0] = v103;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      v415 = v103;
      v246 = String.init<A>(reflecting:)();
      v248 = v247;
      v249 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v245 + 56) = MEMORY[0x1E0DEA968];
      v250 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v245 + 64) = v250;
      *(_QWORD *)(v245 + 32) = v246;
      *(_QWORD *)(v245 + 40) = v248;
      v251 = v134;
      v252 = v391;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v251, v391, type metadata accessor for Participant);
      v253 = v422;
      __swift_storeEnumTagSinglePayload(v252, 0, 1, v422);
      specialized >> prefix<A>(_:)(v252);
      v255 = v254;
      v257 = v256;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v252, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v245 + 96) = v249;
      *(_QWORD *)(v245 + 104) = v250;
      *(_QWORD *)(v245 + 72) = v255;
      *(_QWORD *)(v245 + 80) = v257;
      v258 = v394;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v394, v252, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v252, 0, 1, v253);
      specialized >> prefix<A>(_:)(v252);
      v260 = v259;
      v262 = v261;
      v263 = v252;
      v264 = (uint64_t)v404;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v263, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v245 + 136) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v245 + 144) = v250;
      v18 = v253;
      *(_QWORD *)(v245 + 112) = v260;
      *(_QWORD *)(v245 + 120) = v262;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      outlined destroy of AccountUpdateNotice(v384, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice(v258, type metadata accessor for Participant);
      v162 = v264;
LABEL_127:
      outlined destroy of AccountUpdateNotice(v162, type metadata accessor for Participant);
      v89 = v410;
      v90 = v409;
LABEL_128:
      v46 = v414;
LABEL_129:
      v87 = v405;
      if ((v405 & 0x8000000000000000) == 0)
        continue;
LABEL_34:
      v97 = __CocoaSet.Iterator.next()();
      if (!v97)
        goto LABEL_139;
      v425 = v97;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v98 = v432[0];
      swift_unknownObjectRelease();
      v410 = v89;
      v409 = v90;
      if (!v98)
        goto LABEL_139;
      goto LABEL_47;
    }
    break;
  }
  if ((v142 & 0x8000000000000000) == 0)
    goto LABEL_123;
LABEL_248:
  __break(1u);
}

uint64_t ConversationController.updateRemoteParticipantsStates(with:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  _QWORD v69[18];
  __int128 v70;
  uint64_t *v71;
  char *v72;
  unint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  unint64_t *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;

  v2 = v1;
  v83 = a1;
  v3 = type metadata accessor for UUID();
  v69[14] = *(_QWORD *)(v3 - 8);
  v69[15] = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v69[8] = (char *)v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v69[13] = (char *)v69 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  MEMORY[0x1E0C80A78](v7);
  v69[6] = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v9);
  v69[10] = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.State?);
  MEMORY[0x1E0C80A78](v11);
  v69[5] = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for Participant.State(0);
  v13 = MEMORY[0x1E0C80A78](v92);
  v74 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v69[17] = (char *)v69 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v69[16] = (char *)v69 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v69[7] = (char *)v69 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v69[2] = (char *)v69 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v77 = (uint64_t)v69 - v24;
  MEMORY[0x1E0C80A78](v23);
  v80 = (uint64_t)v69 - v25;
  v26 = type metadata accessor for Participant(0);
  v81 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x1E0C80A78](v26);
  v69[3] = (char *)v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v79 = (char *)v69 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v72 = (char *)v69 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v82 = (uint64_t)v69 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v90 = (char *)v69 - v36;
  MEMORY[0x1E0C80A78](v35);
  v94 = (char *)v69 - v37;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant));
  MEMORY[0x1E0C80A78](v87);
  v75 = (char *)v69 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant)?);
  v40 = MEMORY[0x1E0C80A78](v39);
  v85 = (_QWORD *)((char *)v69 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v40);
  v43 = (char *)v69 - v42;
  v44 = type metadata accessor for DispatchPredicate();
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v47 = (_QWORD *)((char *)v69 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v47 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v45 + 104))(v47, *MEMORY[0x1E0DEF740], v44);
  v48 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v45 + 8))(v47, v44);
  if ((v48 & 1) == 0)
  {
    __break(1u);
    JUMPOUT(0x1BD558490);
  }
  v49 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v71 = v49;
  v50 = *v49;
  v86 = *(_QWORD *)(*v49 + 16);
  v51 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  v69[11] = OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame;
  v78 = v50;
  swift_bridgeObjectRetain();
  v69[12] = v51;
  swift_beginAccess();
  v52 = 0;
  v69[4] = &v95;
  v69[9] = 0x80000001BD696470;
  v69[0] = 0x80000001BD6964C0;
  v69[1] = 0x80000001BD696510;
  v70 = xmmword_1BD6441D0;
  v73 = 0x80000001BD696580;
  v76 = v26;
  v53 = (uint64_t)v94;
  v54 = v87;
  v84 = (uint64_t *)v43;
  while (1)
  {
    if (v52 == v86)
    {
      v55 = 1;
      v93 = v86;
      v56 = (uint64_t)v85;
    }
    else
    {
      if (v52 >= *(_QWORD *)(v78 + 16))
      {
        __break(1u);
        JUMPOUT(0x1BD558484);
      }
      v57 = (uint64_t)&v75[*(int *)(v54 + 48)];
      outlined init with copy of ConversationControlsAppLaunchButtonType(v78+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(_QWORD *)(v81 + 72) * v52, v57, type metadata accessor for Participant);
      v56 = (uint64_t)v85;
      v58 = (uint64_t)v85 + *(int *)(v54 + 48);
      *v85 = v52;
      v59 = v57;
      v53 = (uint64_t)v94;
      outlined init with take of StagedCollaboration(v59, v58, type metadata accessor for Participant);
      v55 = 0;
      v93 = v52 + 1;
    }
    __swift_storeEnumTagSinglePayload(v56, v55, 1, v54);
    v60 = v56;
    v61 = v84;
    outlined init with take of Any?(v60, (uint64_t)v84, &demangling cache variable for type metadata for (offset: Int, element: Participant)?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v54) == 1)
      break;
    v88 = *v61;
    outlined init with take of StagedCollaboration((uint64_t)v61 + *(int *)(v54 + 48), v53, type metadata accessor for Participant);
    if (*(_QWORD *)(v53 + *(int *)(v26 + 28)))
    {
      v62 = v83;
      v63 = v53;
      v89 = ConversationController.activeParticipant(correspondingTo:in:)(v53, v83);
      v64 = ConversationController.pendingMember(correspondingTo:in:)(v53, v62);
      v65 = v82;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v63, v82, type metadata accessor for Participant);
      v91 = v64;
      if (v64)
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v65, v80, type metadata accessor for Participant.State);
        v66 = (char *)&loc_1BD557670 + *((int *)qword_1BD558490 + swift_getEnumCaseMultiPayload());
        __asm { BR              X9 }
      }
      outlined destroy of AccountUpdateNotice(v65, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v63, v77, type metadata accessor for Participant.State);
      v67 = (char *)&loc_1BD55778C + dword_1BD5584AC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    outlined destroy of AccountUpdateNotice(v53, type metadata accessor for Participant);
    v52 = v93;
  }
  return swift_bridgeObjectRelease();
}

void ConversationController.updateRemoteParticipantsNames(with:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  BOOL v60;
  char v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  char v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  unint64_t *v114;
  uint64_t ObjectType;
  _QWORD *v116;
  unint64_t v117;
  unint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v2 = v1;
  v116 = a1;
  ObjectType = swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v112 = (uint64_t)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v124 = (uint64_t)&v100 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  MEMORY[0x1E0C80A78](v7);
  v111 = (uint64_t)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v9);
  v110 = (uint64_t)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.State?);
  MEMORY[0x1E0C80A78](v11);
  v109 = (uint64_t)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for Participant(0);
  v119 = *(_QWORD *)(v126 - 8);
  v13 = MEMORY[0x1E0C80A78](v126);
  v102 = (uint64_t)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v101 = (uint64_t)&v100 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v123 = (uint64_t)&v100 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v127 = (uint64_t)&v100 - v20;
  MEMORY[0x1E0C80A78](v19);
  v129 = (uint64_t)&v100 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant));
  MEMORY[0x1E0C80A78](v22);
  v103 = (uint64_t)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant)?);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (unint64_t *)((char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v25);
  v118 = (unint64_t *)((char *)&v100 - v28);
  v29 = type metadata accessor for DispatchPredicate();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (uint64_t *)((char *)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v32 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x1E0DEF740], v29);
  v33 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v30 + 8))(v32, v29);
  if ((v33 & 1) == 0)
    goto LABEL_57;
  v34 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v113 = v34;
  v35 = *v34;
  v117 = *(_QWORD *)(*v34 + 16);
  v100 = v129 + 8;
  v108 = &v131;
  v104 = v35;
  swift_bridgeObjectRetain();
  v36 = 0;
  v37 = MEMORY[0x1E0DEA968];
  v106 = xmmword_1BD645390;
  v38 = v118;
  v105 = v22;
  v114 = v27;
  while (1)
  {
    while (1)
    {
      if (v36 == v117)
      {
        v39 = 1;
        v40 = v117;
      }
      else
      {
        if (v36 >= *(_QWORD *)(v104 + 16))
          goto LABEL_56;
        v41 = v2;
        v42 = v36 + 1;
        v43 = v36;
        v44 = v103 + *(int *)(v22 + 48);
        outlined init with copy of ConversationControlsAppLaunchButtonType(v104+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(_QWORD *)(v119 + 72) * v36, v44, type metadata accessor for Participant);
        v45 = (uint64_t)v27 + *(int *)(v22 + 48);
        *v27 = v43;
        v37 = MEMORY[0x1E0DEA968];
        outlined init with take of StagedCollaboration(v44, v45, type metadata accessor for Participant);
        v39 = 0;
        v40 = v42;
        v2 = v41;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v27, v39, 1, v22);
      outlined init with take of Any?((uint64_t)v27, (uint64_t)v38, &demangling cache variable for type metadata for (offset: Int, element: Participant)?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v22) == 1)
      {
        swift_bridgeObjectRelease();
        return;
      }
      v125 = v40;
      v128 = *v38;
      v46 = v129;
      outlined init with take of StagedCollaboration((uint64_t)v38 + *(int *)(v22 + 48), v129, type metadata accessor for Participant);
      v47 = static ConversationController.member(correspondingTo:in:)(v46, v116);
      v48 = v47;
      if (!v47)
      {
        v55 = 0;
        v57 = 0;
        v51 = 0;
        v59 = *(_QWORD *)(v100 + *(int *)(v126 + 36));
LABEL_17:
        v53 = 0;
        v61 = v59 == 0;
        goto LABEL_18;
      }
      v49 = v47;
      outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v49, (SEL *)&selRef_nickname);
      v51 = v50;
      v53 = v52;
      outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(objc_msgSend(v49, sel_handle), (SEL *)&selRef_siriDisplayName);
      v55 = v54;
      v57 = v56;
      v58 = (_QWORD *)(v129 + *(int *)(v126 + 36));
      v59 = v58[1];
      if (!v53)
        goto LABEL_17;
      if (v59)
      {
        v60 = v51 == *v58 && v53 == v59;
        v61 = v60 ? 1 : _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      else
      {
        v61 = 0;
      }
LABEL_18:
      outlined init with copy of ConversationControlsAppLaunchButtonType(v129, v127, type metadata accessor for Participant);
      if ((v61 & 1) == 0)
        goto LABEL_29;
      v62 = *(void **)(v127 + *(int *)(v126 + 28));
      if (!v62)
      {
        if (v57)
        {
LABEL_29:
          v120 = v55;
          outlined destroy of AccountUpdateNotice(v127, type metadata accessor for Participant);
          break;
        }
        v65 = 0;
LABEL_49:
        outlined destroy of AccountUpdateNotice(v127, type metadata accessor for Participant);
        if (!v65)
          goto LABEL_52;
        v120 = v55;
        swift_bridgeObjectRelease();
        break;
      }
      outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v62, (SEL *)&selRef_siriDisplayName);
      v65 = v64;
      if (!v57)
        goto LABEL_49;
      if (!v64)
        goto LABEL_29;
      if (v55 == v63 && v57 == v64)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        outlined destroy of AccountUpdateNotice(v127, type metadata accessor for Participant);
        swift_bridgeObjectRelease_n();
        goto LABEL_52;
      }
      v120 = v55;
      v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice(v127, type metadata accessor for Participant);
      swift_bridgeObjectRelease_n();
      if ((v67 & 1) == 0)
        break;
LABEL_52:
      outlined destroy of AccountUpdateNotice(v129, type metadata accessor for Participant);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v27 = v114;
      v38 = v118;
      v36 = v125;
    }
    v121 = v48;
    v122 = v57;
    v68 = type metadata accessor for Participant.State(0);
    v69 = v109;
    __swift_storeEnumTagSinglePayload(v109, 1, 1, v68);
    v70 = type metadata accessor for UUID();
    v71 = v110;
    __swift_storeEnumTagSinglePayload(v110, 1, 1, v70);
    v130 = 1;
    v72 = (uint64_t)v108;
    *(_OWORD *)v108 = 0u;
    *(_OWORD *)(v72 + 16) = 0u;
    v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
    v74 = v111;
    __swift_storeEnumTagSinglePayload(v111, 1, 1, v73);
    LOBYTE(v98) = 2;
    Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v69, v71, 2, (uint64_t)&v130, 0, v51, v53, v74, v98, 0, 0, v99, v100, v101, v102, v103, v104, v105, v106,
      *((uint64_t *)&v106 + 1),
      v107,
      (uint64_t)v108,
      v109);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v74, &demangling cache variable for type metadata for Participant.CountdownInfo??);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v71, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v69, &demangling cache variable for type metadata for Participant.State?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v75 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = v106;
    v77 = v124;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v129, v124, type metadata accessor for Participant);
    v78 = v126;
    __swift_storeEnumTagSinglePayload(v77, 0, 1, v126);
    v79 = v77;
    v80 = v112;
    outlined init with copy of FeatureEligibility?(v79, v112, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v80, 1, v78) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v80, &demangling cache variable for type metadata for Participant?);
      v81 = 0xE300000000000000;
      v82 = 7104878;
    }
    else
    {
      v83 = v101;
      outlined init with take of StagedCollaboration(v80, v101, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v83, v102, type metadata accessor for Participant);
      v82 = String.init<A>(reflecting:)();
      v81 = v84;
      v85 = v83;
      v37 = MEMORY[0x1E0DEA968];
      outlined destroy of AccountUpdateNotice(v85, type metadata accessor for Participant);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v124, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v76 + 56) = v37;
    v86 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v76 + 64) = v86;
    *(_QWORD *)(v76 + 32) = v82;
    *(_QWORD *)(v76 + 40) = v81;
    v130 = v128;
    v87 = String.init<A>(reflecting:)();
    *(_QWORD *)(v76 + 96) = v37;
    *(_QWORD *)(v76 + 104) = v86;
    *(_QWORD *)(v76 + 72) = v87;
    *(_QWORD *)(v76 + 80) = v88;
    if (v53)
    {
      v130 = v51;
      v131 = v53;
      v89 = String.init<A>(reflecting:)();
    }
    else
    {
      v90 = 0xE300000000000000;
      v89 = 7104878;
    }
    v2 = v75;
    v27 = v114;
    v38 = v118;
    *(_QWORD *)(v76 + 136) = v37;
    *(_QWORD *)(v76 + 144) = v86;
    *(_QWORD *)(v76 + 112) = v89;
    *(_QWORD *)(v76 + 120) = v90;
    if (v122)
    {
      v130 = v120;
      v131 = v122;
      v91 = String.init<A>(reflecting:)();
    }
    else
    {
      v92 = 0xE300000000000000;
      v91 = 7104878;
    }
    *(_QWORD *)(v76 + 176) = v37;
    *(_QWORD *)(v76 + 184) = v86;
    *(_QWORD *)(v76 + 152) = v91;
    *(_QWORD *)(v76 + 160) = v92;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v93 = v113;
    swift_beginAccess();
    v94 = *v93;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v93 = v94;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v94 = specialized _ArrayBuffer._consumeAndCreateNew()();
      *v113 = v94;
    }
    v22 = v105;
    if ((v128 & 0x8000000000000000) != 0)
      break;
    if (v128 >= *(_QWORD *)(v94 + 16))
      goto LABEL_55;
    v96 = v123;
    outlined assign with copy of Participant.State(v123, v94+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(_QWORD *)(v119 + 72) * v128, type metadata accessor for Participant);
    swift_endAccess();
    ConversationController.didUpdateVisibleParticipant(_:)(v96);

    v97 = v96;
    v37 = MEMORY[0x1E0DEA968];
    outlined destroy of AccountUpdateNotice(v97, type metadata accessor for Participant);
    outlined destroy of AccountUpdateNotice(v129, type metadata accessor for Participant);
    v36 = v125;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

uint64_t ConversationController.updateLocalMemberAuthorizedToChangeGroupMembership(with:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void (**v17)(uint64_t);
  void (*v18)(uint64_t);
  _BYTE v19[24];

  v2 = v1;
  v4 = type metadata accessor for Participant(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v19[-v8];
  v10 = type metadata accessor for DispatchPredicate();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)&v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    swift_once();
    goto LABEL_4;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
  a1 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant);
  result = swift_beginAccess();
  if ((v14 & 1) == *((_BYTE *)a1 + *(int *)(v4 + 60)))
    return result;
  if (one-time initialization token for conversationKit != -1)
    goto LABEL_8;
LABEL_4:
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)a1, (uint64_t)v7, type metadata accessor for Participant);
  v16 = v14 & 1;
  Participant.asAuthorizedToChangeGroupMembership(_:)(v16);
  outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for Participant);
  swift_beginAccess();
  outlined assign with take of Participant((uint64_t)v9, (uint64_t)a1);
  swift_endAccess();
  v17 = (void (**)(uint64_t))(v2
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  result = swift_beginAccess();
  v18 = *v17;
  if (*v17)
  {
    swift_retain();
    v18(v16);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v18);
  }
  return result;
}

uint64_t ConversationController.updateParticipantsForcedToShowAsNeedingAuthorization()()
{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0;
  v40 = type metadata accessor for Participant(0);
  v35 = *(_QWORD *)(v40 - 8);
  v2 = MEMORY[0x1E0C80A78](v40);
  v31 = (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v30 - v5;
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v30 - v7;
  if (one-time initialization token for shared != -1)
    goto LABEL_25;
  while (1)
  {
    v9 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 688))();
    v10 = v9;
    v36 = *(_QWORD *)(v9 + 16);
    if (!v36)
      return swift_bridgeObjectRelease();
    v30 = v6;
    v11 = (uint64_t *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    v33 = v9 + 32;
    swift_beginAccess();
    v12 = 0;
    v1 = type metadata accessor for Participant;
    v32 = v10;
    v34 = v11;
    while (1)
    {
      if (v12 >= *(_QWORD *)(v10 + 16))
      {
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      v13 = *v11;
      v6 = *(char **)(*v11 + 16);
      if (v6)
        break;
LABEL_19:
      if (++v12 == v36)
        return swift_bridgeObjectRelease();
    }
    v37 = v12;
    v14 = (uint64_t *)(v33 + 16 * v12);
    v15 = v14[1];
    v38 = *v14;
    v39 = v15;
    v16 = v35;
    v17 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = 0;
    v19 = *(_QWORD *)(v16 + 72);
    while (1)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v13 + v17, (uint64_t)v8, type metadata accessor for Participant);
      v20 = *(void **)&v8[*(int *)(v40 + 28)];
      if (!v20)
      {
        outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
        goto LABEL_11;
      }
      v21 = objc_msgSend(v20, sel_value);
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v24 = v23;

      v41 = v22;
      v42 = v24;
      v43 = v38;
      v44 = v39;
      lazy protocol witness table accessor for type String and conformance String();
      v25 = StringProtocol.caseInsensitiveCompare<A>(_:)();
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
      if (!v25)
        break;
LABEL_11:
      ++v18;
      v17 += v19;
      if (v6 == v18)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v32;
        v11 = v34;
LABEL_18:
        v12 = v37;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = v34;
    if ((unint64_t)v18 >= *(_QWORD *)(*v34 + 16))
      goto LABEL_23;
    v26 = v31;
    outlined init with copy of ConversationControlsAppLaunchButtonType(*v34 + v17, v31, type metadata accessor for Participant);
    v6 = v30;
    Participant.asPendingAuthorization()();
    outlined destroy of AccountUpdateNotice(v26, type metadata accessor for Participant);
    swift_beginAccess();
    v27 = *v11;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v11 = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v27 = specialized _ArrayBuffer._consumeAndCreateNew()();
      *v11 = v27;
    }
    if ((unint64_t)v18 < *(_QWORD *)(v27 + 16))
    {
      outlined assign with take of Participant((uint64_t)v6, v27 + v17);
      swift_endAccess();
      v10 = v32;
      goto LABEL_18;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    swift_once();
  }
}

void ConversationController.updateOtherInvitedParticipants()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (**v26)(uint64_t);
  void (*v27)(uint64_t);
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for Participant(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (_QWORD *)((char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    ConversationController.lookupActiveConversation()();
    if (v32)
    {
      outlined init with take of Notice(&v31, (uint64_t)v33);
      v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants);
      swift_beginAccess();
      v12 = *v11;
      v13 = *(_QWORD *)(*v11 + 16);
      v14 = MEMORY[0x1E0DEE9D8];
      if (v13)
      {
        v28[1] = v11;
        v29 = v1;
        v30 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        specialized ContiguousArray.reserveCapacity(_:)();
        v15 = v12 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
        v16 = *(_QWORD *)(v3 + 72);
        do
        {
          outlined init with copy of ConversationControlsAppLaunchButtonType(v15, (uint64_t)v5, type metadata accessor for Participant);
          v17 = *(void **)&v5[*(int *)(v2 + 28)];
          if (v17)
            v18 = v17;
          outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for Participant);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v15 += v16;
          --v13;
        }
        while (v13);
        v14 = v30;
        swift_bridgeObjectRelease();
        v1 = v29;
      }
      v19 = v34;
      v20 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 152))(v19, v20);
      v22 = specialized Set._Variant.filter(_:)(v21, v14);
      v23 = specialized Set.isEmpty.getter(v22);
      if ((v23 & 1) != 0)
      {
        swift_release();
      }
      else
      {
        MEMORY[0x1E0C80A78](v23);
        v28[-2] = v33;
        _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFShySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5(partial apply for closure #3 in ConversationController.updateOtherInvitedParticipants(), (uint64_t)&v28[-4], v22);
        v25 = v24;
        swift_release();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        specialized Array.append<A>(contentsOf:)();
        swift_endAccess();
        v26 = (void (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
        swift_beginAccess();
        v27 = *v26;
        if (*v26)
        {
          swift_retain();
          v27(v25);
          outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v27);
        }
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v31, &demangling cache variable for type metadata for Conversation?);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t ConversationController.videoProviderForResizingLocal.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t *v8;
  __int128 *v9;
  char v10;
  char v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[80];
  uint64_t v29;
  char v30;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (__int128 *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  ConversationController.remoteOneToOneParticipant.getter();
  v7 = type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    v8 = &demangling cache variable for type metadata for Participant?;
    v9 = v6;
LABEL_3:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, v8);
    goto LABEL_11;
  }
  Participant.videoInfo.getter();
  outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for Participant);
  outlined init with take of Any?((uint64_t)v28, (uint64_t)&v29, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v29)
    goto LABEL_11;
  v10 = v30;
  specialized Dictionary.subscript.getter();
  if (!v24)
  {
    outlined release of LinearGradient((uint64_t)v28);
    v8 = (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?;
    v9 = &v23;
    goto LABEL_3;
  }
  outlined init with take of Notice(&v23, (uint64_t)&v25);
  v11 = ConversationController.isOneToOneModeEnabled.getter();
  outlined release of LinearGradient((uint64_t)v28);
  if ((v11 & 1) != 0 && (v10 & 1) == 0)
    return outlined init with take of Notice(&v25, (uint64_t)a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
LABEL_11:
  v13 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  swift_beginAccess();
  v14 = v13[3];
  v15 = v13[4];
  v16 = __swift_project_boxed_opaque_existential_1(v13, v14);
  v17 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v22 - v18;
  (*(void (**)(char *))(v17 + 16))((char *)&v22 - v18);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 32))(&v25, v14, v15);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v14);
  v20 = v26;
  v21 = v27;
  __swift_project_boxed_opaque_existential_1(&v25, v26);
  a1[3] = v20;
  a1[4] = v21;
  __swift_allocate_boxed_opaque_existential_0Tm(a1);
  (*(void (**)(void))(*(_QWORD *)(v20 - 8) + 16))();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
}

uint64_t ConversationController.activeParticipant(correspondingTo:in:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;

  v3 = a1 + *(int *)(type metadata accessor for Participant(0) + 28);
  v4 = *(void **)v3;
  if (!*(_QWORD *)v3)
    return 0;
  if ((*(_BYTE *)(v3 + 16) & 1) != 0)
  {
    v11 = a2[3];
    v12 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v11);
    v13 = v4;
    Conversation.displayableActiveParticipants.getter(v11, v12);
    v15 = v14;
    v16 = v13;
    specialized Sequence.first(where:)(v15, v16, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    v10 = v17;

  }
  else
  {
    v5 = *(void **)(v3 + 8);
    v6 = a2[3];
    v7 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v6);
    Conversation.displayableActiveParticipants.getter(v6, v7);
    specialized Sequence.first(where:)(v8, v5);
    v10 = v9;
  }
  swift_bridgeObjectRelease();
  return v10;
}

void ConversationController.scheduleResetVideoInfo(for:after:)()
{
  void (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  char v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(void);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[5];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  void (*v95)(uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)();
  uint64_t v102;

  OUTLINED_FUNCTION_51_29();
  v4 = v0;
  v6 = v5;
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_507(v10, v80[0]);
  v11 = OUTLINED_FUNCTION_285_0();
  v92 = *(_QWORD *)(v11 - 8);
  v93 = (void *)v11;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_253_1(v13, v80[0]);
  v14 = OUTLINED_FUNCTION_16_61();
  v88 = *(_QWORD *)(v14 - 8);
  v89 = v14;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_202_5(v16, v80[0]);
  v97 = type metadata accessor for DispatchTime();
  v82 = *(_QWORD *)(v97 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v17);
  v80[4] = (uint64_t)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  v81 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  v86 = (char *)v80 - v22;
  v98 = OUTLINED_FUNCTION_33_0();
  v84 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v83 = v23;
  v24 = (char *)v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_5_27();
  v91 = v26;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v27);
  v28 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_55_3();
  v31 = MEMORY[0x1E0C80A78](v30);
  v33 = (char *)v80 - v32;
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_256_2();
  Date.init()();
  Date.addingTimeInterval(_:)();
  v34 = *(void (**)(char *, uint64_t))(v3 + 8);
  v34(v33, v28);
  v85 = v4;
  v35 = (uint64_t)v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_scheduledVideoInfoResetDates;
  OUTLINED_FUNCTION_2_0();
  v96 = v35;
  specialized Dictionary.subscript.getter();
  v36 = OUTLINED_FUNCTION_392_1();
  v38 = OUTLINED_FUNCTION_69_0(v36, v37, v28);
  v95 = (void (*)(uint64_t))v34;
  if (v39)
  {
    OUTLINED_FUNCTION_275(v38, (uint64_t *)&demangling cache variable for type metadata for Date?);
    OUTLINED_FUNCTION_395_0();
  }
  else
  {
    v40 = OUTLINED_FUNCTION_311_0();
    OUTLINED_FUNCTION_533(v40, v41, v42);
    OUTLINED_FUNCTION_395_0();
    OUTLINED_FUNCTION_49_16();
    v43 = static Date.> infix(_:_:)();
    v34(v2, v28);
    if ((v43 & 1) != 0)
      goto LABEL_8;
  }
  v44 = (uint64_t)v24;
  v45 = v84;
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16);
  v47 = v98;
  v46(v44, v8, v98);
  v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v49 = v8;
  v50 = v91;
  v80[3] = v1;
  OUTLINED_FUNCTION_533(v91, v1, v48);
  OUTLINED_FUNCTION_80_0();
  v80[2] = v28;
  __swift_storeEnumTagSinglePayload(v51, v52, v53, v28);
  v54 = v96;
  OUTLINED_FUNCTION_2_0();
  v55 = OUTLINED_FUNCTION_348();
  specialized Dictionary.subscript.setter(v55, v56);
  v57 = OUTLINED_FUNCTION_395_0();
  OUTLINED_FUNCTION_59(v57, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v58 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_571_0(v58);
  OUTLINED_FUNCTION_796();
  v59 = v81;
  MEMORY[0x1C3B72C50](v54, v6);
  v60 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v60(v54, v97);
  v80[0] = (uint64_t)v60;
  v61 = v86;
  MEMORY[0x1C3B72C50](v59, 0.01);
  v62 = OUTLINED_FUNCTION_50();
  ((void (*)(uint64_t))v60)(v62);
  v63 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v82 = v49;
  v85 = v46;
  v46(v44, v49, v47);
  v64 = (*(unsigned __int8 *)(v45 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  v65 = swift_allocObject();
  *(_QWORD *)(v65 + 16) = v63;
  OUTLINED_FUNCTION_291(v65 + v64, v44, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 32));
  v101 = partial apply for closure #1 in ConversationController.scheduleResetVideoInfo(for:after:);
  v102 = v65;
  v99 = MEMORY[0x1E0C809B0];
  v100 = 1107296256;
  OUTLINED_FUNCTION_207((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  swift_release();
  v66 = v87;
  static DispatchQoS.unspecified.getter();
  v99 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  v67 = OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  v68 = v90;
  v69 = v93;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OUTLINED_FUNCTION_757();
  MEMORY[0x1C3B735B0]();
  OUTLINED_FUNCTION_813();

  OUTLINED_FUNCTION_6_9(v68, *(uint64_t (**)(uint64_t, uint64_t))(v92 + 8));
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v66, v89);
  ((void (*)(char *, uint64_t))v80[0])(v61, v97);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v70 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v70 + 16) = xmmword_1BD645380;
  v71 = v96;
  OUTLINED_FUNCTION_2_0();
  specialized Dictionary.subscript.getter();
  OUTLINED_FUNCTION_395_0();
  specialized >> prefix<A>(_:)(v50);
  OUTLINED_FUNCTION_423_0();
  OUTLINED_FUNCTION_92_1(v72, (uint64_t *)&demangling cache variable for type metadata for Date?);
  v73 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v70 + 56) = MEMORY[0x1E0DEA968];
  v74 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v70 + 64) = v74;
  *(_QWORD *)(v70 + 32) = v71;
  *(_QWORD *)(v70 + 40) = v67;
  v75 = v94;
  OUTLINED_FUNCTION_804();
  v76 = v98;
  OUTLINED_FUNCTION_612_0();
  v77();
  OUTLINED_FUNCTION_19_3(v75, 0);
  specialized >> prefix<A>(_:)(v75);
  OUTLINED_FUNCTION_423_0();
  OUTLINED_FUNCTION_92_1(v78, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(_QWORD *)(v70 + 96) = v73;
  *(_QWORD *)(v70 + 104) = v74;
  *(_QWORD *)(v70 + 72) = v76;
  *(_QWORD *)(v70 + 80) = v67;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_328_3();
  OUTLINED_FUNCTION_27();
LABEL_8:
  v79 = OUTLINED_FUNCTION_131();
  v95(v79);
  OUTLINED_FUNCTION_7_7();
}

void ConversationController.updateActiveParticipant(_:with:in:)(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unsigned int v14;
  unsigned int v15;
  _BOOL4 v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  int32x4_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 *v39;
  char v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  char v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  __int16 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  Swift::String v83;
  unsigned int v84;
  BOOL v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  Swift::String v89;
  Swift::String v90;
  Swift::String v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  double v99;
  double v100;
  char v101;
  double v102;
  double v103;
  int v104;
  __int16 v105;
  unsigned int v106;
  uint64_t v107;
  __int16 v108;
  char *v109;
  Swift::String v110;
  unsigned int v111;
  BOOL v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  Swift::String v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  BOOL v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  Swift::String v124;
  Swift::String v125;
  Swift::String v126;
  uint64_t v127;
  __int16 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int v136;
  __int16 v137;
  Swift::String v138;
  unsigned int v139;
  BOOL v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  Swift::String v144;
  Swift::String v145;
  Swift::String v146;
  id v147;
  unsigned int v148;
  char v149;
  id v150;
  id v151;
  unsigned int v152;
  int v153;
  id v154;
  unsigned int v155;
  id v156;
  uint64_t v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  Swift::String v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  int16x8_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  __int128 v197;
  _QWORD v198[10];
  char v199;
  double v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  char v207;
  id v208;
  uint64_t v209;
  unint64_t v210;
  _QWORD v211[5];
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  __int128 v216;
  __int128 v217;
  uint64_t v218;
  unsigned __int32 v219;
  int64x2_t v220;
  __int128 v221;
  __int128 v222;
  char v223;
  uint64_t v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  char v231;
  uint64_t v232[8];
  _QWORD v233[5];
  char v234[32];
  char v235;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v174 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v174 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a1, sel_isVideoEnabled);
  v191 = a4;
  if (v14 && objc_msgSend(a1, sel_streamToken))
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    LODWORD(v188) = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 152))();
  }
  else
  {
    LODWORD(v188) = 0;
  }
  v15 = objc_msgSend(a1, sel_isScreenEnabled);
  v190 = v10;
  if (v15)
    v16 = objc_msgSend(a1, sel_screenToken) != 0;
  else
    v16 = 0;
  v17 = a3;
  v18 = v196;
  ConversationController.copresenceInfo(for:in:)(a1, v17, v232);
  v19 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode);
  if (v19 == 1)
  {
    v20 = ConversationController.captionsProvider(for:token:)(a2, (uint64_t)objc_msgSend(a1, sel_captionsToken));
    v22 = MEMORY[0x1E0DEE9D8];
    if (v20)
      v23 = v20;
    else
      v23 = 0;
    if (v20)
      v24 = v21;
    else
      v24 = 0;
    v194 = v24;
    v195 = v23;
    if (!v20)
      v22 = 0;
    v193 = v22;
  }
  else
  {
    v194 = 0;
    v195 = 0;
    v193 = 0;
  }
  v25 = a1;
  LODWORD(v189) = Participant.AVInfo.init(for:)(v25);
  v27 = v26;
  v192 = a2;
  if (v16)
  {
    v187 = v26;
    if (v19 == 2)
    {
      ConversationController.remoteVideoClient(for:ofType:token:)(a2, 3, (uint64_t)objc_msgSend(v25, sel_screenToken), (uint64_t)&v212);
      Participant.screenState.getter();
      if (v28 == 2)
      {
        v29 = v214;
        v30 = v215;
        __swift_project_boxed_opaque_existential_1(&v212, v214);
        LODWORD(v181) = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
        LODWORD(v182) = 0;
        v184.i32[0] = 0;
        LODWORD(v183) = 0;
      }
      else
      {
        LODWORD(v183) = (v28 >> 8) & 1;
        v184.i32[0] = HIWORD(v28) & 1;
        v33 = v214;
        v34 = v215;
        LODWORD(v182) = HIBYTE(v28) & 1;
        __swift_project_boxed_opaque_existential_1(&v212, v214);
        LODWORD(v181) = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
      }
      v35 = v214;
      v36 = v215;
      __swift_project_boxed_opaque_existential_1(&v212, v214);
      v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 40))(v35, v36);
      if ((v37 & 0x100000000) != 0)
        LODWORD(v37) = 0;
      v38 = VideoAttributeOrientation.deviceOrientation.getter(v37);
      v39 = (__int128 *)(v196 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes);
      v40 = *(_BYTE *)(v196 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96);
      v185 = v11;
      v186 = v13;
      if ((v40 & 1) != 0)
        v41 = 0;
      else
        v41 = *((_QWORD *)v39 + 9);
      v47 = v214;
      v48 = v215;
      __swift_project_boxed_opaque_existential_1(&v212, v214);
      v49 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v48 + 80))(v47, v48));
      if ((v51 & 1) != 0)
        v52 = 0.0;
      else
        v52 = v50;
      if ((v51 & 1) != 0)
        v53 = 0.0;
      else
        v53 = v49;
      *(_QWORD *)&v180 = v38;
      *(_QWORD *)&v179 = ConversationController.remoteOrientationFor(aspectRatio:videoRotation:deviceFamily:)(v38, v41, v53, v52);
      v54 = v214;
      v55 = v215;
      __swift_project_boxed_opaque_existential_1(&v212, v214);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v55 + 64))(v233, v54, v55);
      v56 = *(double *)&v233[2];
      v57 = *(double *)&v233[3];
      outlined init with take of Any?((uint64_t)v233, (uint64_t)v234, &demangling cache variable for type metadata for CGRect?);
      if (v235)
        v58 = 0.0;
      else
        v58 = v57;
      if (v235)
        v59 = 0.0;
      else
        v59 = v56;
      if (v52 >= v53)
        v60 = v53;
      else
        v60 = v52;
      if (v53 > v52)
        v61 = v53;
      else
        v61 = v52;
      v62 = ceil(v60 * v59);
      v63 = ceil(v61 * v58);
      v64 = ceil(v61 * v59);
      v65 = ceil(v60 * v58);
      outlined init with copy of RadarReporting((uint64_t)&v212, (uint64_t)&v216);
      v66 = *v39;
      v177 = v39[1];
      v178 = v66;
      v67 = v39[2];
      v175 = v39[3];
      v176 = v67;
      v174 = v39[4];
      v69 = *((_QWORD *)v39 + 10);
      v68 = *((_QWORD *)v39 + 11);
      v70 = *((_BYTE *)v39 + 96);
      v71 = v214;
      v72 = v215;
      __swift_project_boxed_opaque_existential_1(&v212, v214);
      v73 = (*(double (**)(uint64_t, uint64_t))(v72 + 72))(v71, v72);
      v197 = 0u;
      memset(v198, 0, 24);
      v201 = 0u;
      v202 = 0u;
      v203 = 0u;
      v204 = 0u;
      v205 = 0u;
      v206 = 0u;
      v207 = 1;
      outlined assign with take of Participant?((uint64_t)&v216, (uint64_t)&v197, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      LOBYTE(v198[3]) = v181 & 1;
      BYTE1(v198[3]) = v183;
      BYTE2(v198[3]) = v184.i8[0];
      BYTE3(v198[3]) = v182;
      v201 = v178;
      v202 = v177;
      v203 = v176;
      v204 = v175;
      v205 = v174;
      *(_QWORD *)&v206 = v69;
      *((_QWORD *)&v206 + 1) = v68;
      v207 = v70;
      v198[4] = v179;
      v198[5] = v180;
      *(double *)&v198[6] = v62;
      *(double *)&v198[7] = v63;
      *(double *)&v198[8] = v64;
      *(double *)&v198[9] = v65;
      v199 = 0;
      v200 = v73;
      outlined init with take of Any?((uint64_t)&v197, (uint64_t)&v216, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v212);
      v11 = v185;
      v13 = v186;
    }
    else
    {
      Participant.screenState.getter();
      if (v31 == 2)
      {
        v32.i64[0] = 1;
      }
      else
      {
        v32 = vtstq_s32(vdupq_n_s32(v31), (int32x4_t)xmmword_1BD6659D0);
        *(int8x8_t *)v32.i8 = vand_s8((int8x8_t)vmovn_s32(v32), (int8x8_t)0x1000100010001);
      }
      v184 = (int16x8_t)v32;
      v197 = 0u;
      memset(v198, 0, 24);
      v42 = *(_OWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes);
      v182 = *(_OWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 16);
      v183 = v42;
      v43 = *(_OWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 32);
      v180 = *(_OWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 48);
      v181 = v43;
      v179 = *(_OWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 64);
      v44 = *(_QWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 80);
      v45 = *(_QWORD *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 88);
      v46 = *(_BYTE *)(v18 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96);
      v216 = 0u;
      v217 = 0u;
      v218 = 0;
      v225 = 0u;
      v226 = 0u;
      v227 = 0u;
      v228 = 0u;
      v229 = 0u;
      v230 = 0u;
      v231 = 1;
      outlined assign with take of Participant?((uint64_t)&v197, (uint64_t)&v216, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      v219 = vmovn_s16(v184).u32[0];
      v225 = v183;
      v226 = v182;
      v227 = v181;
      v228 = v180;
      v229 = v179;
      *(_QWORD *)&v230 = v44;
      *((_QWORD *)&v230 + 1) = v45;
      v231 = v46;
      v220 = vdupq_n_s64(1uLL);
      v221 = 0u;
      v222 = 0u;
      v223 = 1;
      v224 = 0x3FF0000000000000;
    }
    a2 = v192;
    v27 = v187;
  }
  else
  {
    v216 = 0uLL;
    *(_QWORD *)&v217 = 0;
    *((_QWORD *)&v217 + 1) = 1;
    bzero(&v218, 0xB1uLL);
  }
  if ((v188 & 1) == 0)
    goto LABEL_61;
  if (v19 != 1)
  {
    if (!v19)
    {
      v186 = v13;
      v187 = v27;
      v185 = v11;
      Participant.videoState.getter();
      if (v127 == 2)
      {
        v184.i64[0] = 0;
        *(_QWORD *)&v182 = 0;
        v129 = 0;
        v130 = 0;
        v131 = 0;
        v132 = 0;
        v133 = 0;
        v188 = 0;
        v134 = 0;
        *(_QWORD *)&v183 = 1;
      }
      else
      {
        *(_QWORD *)&v183 = v127 & 1;
        v188 = v128 & 1;
        v184.i64[0] = v127 & 0x100;
        *(_QWORD *)&v182 = v127 & 0x10000;
        v129 = v127 & 0xFF000000;
        v130 = v127 & 0x100000000;
        v131 = v127 & 0x10000000000;
        v132 = v127 & 0x1000000000000;
        v133 = v127 & 0x100000000000000;
        v134 = v128 & 0x100;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
      lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType();
      v135 = Dictionary.init(dictionaryLiteral:)();
      v136 = objc_msgSend(v25, sel_isCameraMixedWithScreen);
      *(_QWORD *)&v197 = v135;
      *((_QWORD *)&v197 + 1) = v184.i64[0] | v129 | v130 | v183 | v182 | v131 | v132 | v133;
      v198[0] = v134 | v188;
      *(_OWORD *)&v198[1] = xmmword_1BD6441D0;
      *(_OWORD *)&v198[3] = 0u;
      if (v136)
        v137 = 257;
      else
        v137 = 1;
      *(_OWORD *)&v198[5] = 0uLL;
      LOWORD(v198[7]) = v137;
      v13 = v186;
      Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
      outlined release of Participant.CopresenceInfo?(v232);
      swift_bridgeObjectRelease();
      v212 = 0;
      v213 = 0xE000000000000000;
      _StringGuts.grow(_:)(132);
      v138._object = (void *)0x80000001BD6965E0;
      v138._countAndFlagsBits = 0xD000000000000031;
      String.append(_:)(v138);
      v139 = objc_msgSend(v25, sel_isVideoEnabled);
      v140 = v139 == 0;
      if (v139)
        v141 = 1702195828;
      else
        v141 = 0x65736C6166;
      if (v140)
        v142 = 0xE500000000000000;
      else
        v142 = 0xE400000000000000;
      v143 = v142;
      String.append(_:)(*(Swift::String *)&v141);
      swift_bridgeObjectRelease();
      v144._countAndFlagsBits = 0x6D6165727473202CLL;
      v144._object = (void *)0xEE003D6E656B6F54;
      String.append(_:)(v144);
      v211[0] = objc_msgSend(v25, sel_streamToken);
      v145._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v145);
      swift_bridgeObjectRelease();
      v146._countAndFlagsBits = 0xD00000000000003FLL;
      v146._object = (void *)0x80000001BD6966D0;
      String.append(_:)(v146);
      v11 = v185;
      _print_unlocked<A, B>(_:_:)();
      v188 = v213;
      v189 = v212;
      goto LABEL_110;
    }
LABEL_61:
    v197 = 0u;
    memset(v198, 0, 58);
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v232);
    v212 = 0;
    v213 = 0xE000000000000000;
    _StringGuts.grow(_:)(131);
    v83._object = (void *)0x80000001BD6965E0;
    v83._countAndFlagsBits = 0xD000000000000031;
    String.append(_:)(v83);
    v84 = objc_msgSend(v25, sel_isVideoEnabled);
    v85 = v84 == 0;
    if (v84)
      v86 = 1702195828;
    else
      v86 = 0x65736C6166;
    if (v85)
      v87 = 0xE500000000000000;
    else
      v87 = 0xE400000000000000;
    v88 = v87;
    String.append(_:)(*(Swift::String *)&v86);
    swift_bridgeObjectRelease();
    v89._countAndFlagsBits = 0x6D6165727473202CLL;
    v89._object = (void *)0xEE003D6E656B6F54;
    String.append(_:)(v89);
    v211[0] = objc_msgSend(v25, sel_streamToken);
    v90._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v90);
    swift_bridgeObjectRelease();
    v91._countAndFlagsBits = 0xD00000000000003ELL;
    v91._object = (void *)0x80000001BD696620;
    String.append(_:)(v91);
    _print_unlocked<A, B>(_:_:)();
    v188 = v213;
    v189 = v212;
    goto LABEL_110;
  }
  v187 = v27;
  ConversationController.remoteVideoClient(for:ofType:token:)(a2, 0, (uint64_t)objc_msgSend(v25, sel_streamToken), (uint64_t)&v212);
  ConversationController.remoteVideoClient(for:ofType:token:)(a2, 1, (uint64_t)objc_msgSend(v25, sel_streamToken), (uint64_t)v211);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Participant.VideoProviderType, ParticipantVideoProvider)>);
  v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_1BD645380;
  *(_BYTE *)(v74 + 32) = 0;
  outlined init with copy of RadarReporting((uint64_t)&v212, v74 + 40);
  *(_BYTE *)(v74 + 80) = 1;
  outlined init with copy of RadarReporting((uint64_t)v211, v74 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType();
  v75 = Dictionary.init(dictionaryLiteral:)();
  Participant.videoState.getter();
  v185 = v11;
  if (v76 == 2)
  {
    v78 = v214;
    v79 = v215;
    __swift_project_boxed_opaque_existential_1(&v212, v214);
    v80 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 16))(v78, v79);
    v81 = v214;
    v82 = v215;
    __swift_project_boxed_opaque_existential_1(&v212, v214);
    v184.i64[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 24))(v81, v82);
    *(_QWORD *)&v183 = 0;
    *(_QWORD *)&v181 = 0;
    *(_QWORD *)&v180 = 0;
    *(_QWORD *)&v177 = 0;
    *(_QWORD *)&v179 = 0;
    *(_QWORD *)&v178 = 0;
    v188 = 0;
    *(_QWORD *)&v182 = 0;
  }
  else
  {
    v80 = v76 & 1;
    v184.i64[0] = (v76 >> 40) & 1;
    v188 = v77 & 1;
    *(_QWORD *)&v183 = v76 & 0x100;
    *(_QWORD *)&v181 = v76 & 0x10000;
    *(_QWORD *)&v180 = v76 & 0xFF000000;
    *(_QWORD *)&v177 = v76 & 0x100000000;
    *(_QWORD *)&v179 = v76 & 0x1000000000000;
    *(_QWORD *)&v178 = v76 & 0x100000000000000;
    *(_QWORD *)&v182 = v77 & 0x100;
  }
  v186 = v13;
  v92 = v214;
  v93 = v215;
  __swift_project_boxed_opaque_existential_1(&v212, v214);
  v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 40))(v92, v93);
  if ((v94 & 0x100000000) != 0)
    LODWORD(v94) = 0;
  *(_QWORD *)&v176 = VideoAttributeOrientation.deviceOrientation.getter(v94);
  v95 = v214;
  v96 = v215;
  __swift_project_boxed_opaque_existential_1(&v212, v214);
  v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 56))(v95, v96);
  if ((v97 & 0x100000000) != 0)
    LODWORD(v97) = 0;
  v98 = VideoAttributeCamera.cameraPosition.getter(v97);
  outlined init with copy of RadarReporting((uint64_t)&v212, (uint64_t)&v209);
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
  {
    *(_QWORD *)&v175 = v80;
    v80 = v75;
    static AspectRatio.remoteAspectRatios(with:contentsRect:)(&v209, (uint64_t)&v197, 1.0, 1.0);
    v100 = *((double *)&v197 + 1);
    v99 = *(double *)&v197;
    v101 = v198[0];
    v102 = *(double *)&v198[1];
    v103 = *(double *)&v198[2];
    v104 = LOBYTE(v198[3]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v209);
    if ((v101 & 1) != 0 || v99 == v100)
    {
      v99 = 0.0;
      v100 = 0.0;
      v102 = 0.0;
      v103 = 0.0;
      v105 = 1;
    }
    else
    {
      v105 = 0;
      if (v104)
      {
        v103 = v99;
        v102 = v100;
      }
    }
    v75 = v80;
    LOBYTE(v80) = v175;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v209);
    v99 = 0.0;
    v100 = 0.0;
    v102 = 0.0;
    v103 = 0.0;
    v105 = 1;
  }
  v106 = objc_msgSend(v25, sel_isCameraMixedWithScreen);
  v107 = 0x10000000000;
  if ((v184.i8[0] & 1) == 0)
    v107 = 0;
  *(_QWORD *)&v197 = v75;
  *((_QWORD *)&v197 + 1) = v183 | v181 | v80 & 1 | v180 | v177 | v107 | v179 | v178;
  v198[0] = v182 | v188;
  v198[1] = v176;
  v198[2] = v98;
  *(double *)&v198[3] = v99;
  *(double *)&v198[4] = v100;
  if (v106)
    v108 = 256;
  else
    v108 = 0;
  *(double *)&v198[5] = v102;
  *(double *)&v198[6] = v103;
  LOWORD(v198[7]) = v108 | v105;
  v109 = v186;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v232);
  swift_bridgeObjectRelease();
  v209 = 0;
  v210 = 0xE000000000000000;
  _StringGuts.grow(_:)(142);
  v110._object = (void *)0x80000001BD6965E0;
  v110._countAndFlagsBits = 0xD000000000000031;
  String.append(_:)(v110);
  v111 = objc_msgSend(v25, sel_isVideoEnabled);
  v112 = v111 == 0;
  if (v111)
    v113 = 1702195828;
  else
    v113 = 0x65736C6166;
  if (v112)
    v114 = 0xE500000000000000;
  else
    v114 = 0xE400000000000000;
  v115 = v114;
  String.append(_:)(*(Swift::String *)&v113);
  swift_bridgeObjectRelease();
  v116._countAndFlagsBits = 0xD00000000000001ALL;
  v116._object = (void *)0x80000001BD696710;
  String.append(_:)(v116);
  v117 = v214;
  v118 = v215;
  __swift_project_boxed_opaque_existential_1(&v212, v214);
  v119 = (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 16))(v117, v118);
  v120 = (v119 & 1) == 0;
  if ((v119 & 1) != 0)
    v121 = 1702195828;
  else
    v121 = 0x65736C6166;
  if (v120)
    v122 = 0xE500000000000000;
  else
    v122 = 0xE400000000000000;
  v13 = v109;
  v123 = v122;
  String.append(_:)(*(Swift::String *)&v121);
  swift_bridgeObjectRelease();
  v124._countAndFlagsBits = 0x6D61657274730A2CLL;
  v124._object = (void *)0xEE003D6E656B6F54;
  String.append(_:)(v124);
  v208 = objc_msgSend(v25, sel_streamToken);
  v125._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v125);
  swift_bridgeObjectRelease();
  v126._countAndFlagsBits = 0xD00000000000002DLL;
  v126._object = (void *)0x80000001BD696730;
  String.append(_:)(v126);
  v11 = v185;
  _print_unlocked<A, B>(_:_:)();
  v188 = v210;
  v189 = v209;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v211);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v212);
LABEL_110:
  v147 = objc_msgSend(v25, sel_capabilities);
  v148 = objc_msgSend(v147, sel_isMomentsAvailable);

  if (v148)
  {
    ConversationController.momentsLocallyAvailable.getter();
    v196 = v149 & 1;
  }
  else
  {
    v196 = 0;
  }
  v150 = objc_msgSend(v25, sel_capabilities);
  LODWORD(v187) = objc_msgSend(v150, sel_isScreenSharingAvailable);

  v151 = objc_msgSend(v25, sel_capabilities);
  v152 = objc_msgSend(v151, sel_isGondolaCallingAvailable);

  v153 = v13[*(int *)(v11 + 24) + 3];
  v154 = objc_msgSend(v25, sel_capabilities);
  v155 = objc_msgSend(v154, sel_supportsRequestToScreenShare);

  v156 = objc_msgSend(v25, sel_identifier);
  v157 = (uint64_t)v13;
  v158 = objc_msgSend(v25, sel_avcIdentifier);
  v159 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v160 = v11;
  v162 = v161;

  v163 = (uint64_t *)(v192 + *(int *)(v160 + 36));
  v164 = *v163;
  v165 = v163[1];
  v166 = 0x100000000;
  if (!v155)
    v166 = 0;
  v167 = 0x1000000;
  if (!v153)
    v167 = 0;
  v168 = 0x10000;
  if (!v152)
    v168 = 0;
  v169 = 256;
  if (!(_DWORD)v187)
    v169 = 0;
  v170 = (uint64_t)v190;
  Participant.with(idsIdentifier:avcIdentifier:capabilities:nickname:)(v156, v159, v162, v169 | v196 | v168 | v166 | v167, v164, v165);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v170, 1, v160) == 1)
  {
    outlined consume of Participant.CaptionInfo?(v195);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v170, &demangling cache variable for type metadata for Participant?);
    v212 = 0;
    v213 = 0xE000000000000000;
    _StringGuts.grow(_:)(54);
    v173._countAndFlagsBits = 0xD000000000000034;
    v173._object = (void *)0x80000001BD696690;
    String.append(_:)(v173);
    _print_unlocked<A, B>(_:_:)();
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    outlined init with take of StagedCollaboration(v170, v191, type metadata accessor for Participant);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v171 = swift_allocObject();
    *(_OWORD *)(v171 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v171 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v171 + 64) = lazy protocol witness table accessor for type String and conformance String();
    v172 = v188;
    *(_QWORD *)(v171 + 32) = v189;
    *(_QWORD *)(v171 + 40) = v172;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    outlined consume of Participant.CaptionInfo?(v195);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v216, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of AccountUpdateNotice(v157, type metadata accessor for Participant);
  }
}

void ConversationController.removeParticipant(_:at:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (**v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t, uint64_t);
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (**v34)(uint64_t);
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = ConversationController.visibleParticipants.getter();
  swift_beginAccess();
  specialized Array.remove(at:)();
  swift_endAccess();
  outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
  v39 = a1;
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #1 in ConversationController.removeParticipant(_:at:), (uint64_t)v38, v10);
  v12 = v11;
  v14 = v13;
  swift_bridgeObjectRelease();
  v15 = MEMORY[0x1E0DEA968];
  if ((v14 & 1) == 0)
  {
    v37 = v12;
    v16 = MEMORY[0x1E0DEA968];
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v36 = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BD645380;
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v6, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
    specialized >> prefix<A>(_:)((uint64_t)v6);
    v19 = v18;
    v21 = v20;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v17 + 56) = v16;
    v22 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v17 + 64) = v22;
    *(_QWORD *)(v17 + 32) = v19;
    *(_QWORD *)(v17 + 40) = v21;
    v15 = v16;
    v23 = v37;
    v40 = v37;
    v24 = String.init<A>(reflecting:)();
    *(_QWORD *)(v17 + 96) = v16;
    *(_QWORD *)(v17 + 104) = v22;
    *(_QWORD *)(v17 + 72) = v24;
    *(_QWORD *)(v17 + 80) = v25;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v26 = (void (**)(uint64_t, uint64_t))(v2
                                                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
    swift_beginAccess();
    v27 = *v26;
    if (*v26)
    {
      swift_retain();
      v27(a1, v23);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v27);
    }
  }
  Participant.isPendingAuthorization.getter();
  if ((v28 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1BD6441D0;
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v6, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
    specialized >> prefix<A>(_:)((uint64_t)v6);
    v31 = v30;
    v33 = v32;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v29 + 56) = v15;
    *(_QWORD *)(v29 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v29 + 32) = v31;
    *(_QWORD *)(v29 + 40) = v33;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v34 = (void (**)(uint64_t))(v2
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
    swift_beginAccess();
    v35 = *v34;
    if (*v34)
    {
      swift_retain();
      v35(a1);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v35);
    }
  }
}

void ConversationController.removeAllParticipants()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for Participant(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    swift_beginAccess();
    v12 = *v11;
    if (*(_QWORD *)(*v11 + 16))
    {
      v13 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      do
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v12 + v13, (uint64_t)v5, type metadata accessor for Participant);
        ConversationController.removeParticipant(_:at:)((uint64_t)v5);
        outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for Participant);
        v12 = *v11;
      }
      while (*(_QWORD *)(*v11 + 16));
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #1 in ConversationController.createNewParticipants(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (**v34)(uint64_t);
  uint64_t result;
  void (*v36)(uint64_t);
  void (**v37)(uint64_t);
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v4 = type metadata accessor for Participant(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v12 = *(_QWORD *)(*v11 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
  v13 = *v11;
  *(_QWORD *)(v13 + 16) = v12 + 1;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v12, type metadata accessor for Participant);
  swift_endAccess();
  ConversationController.visibleParticipants.getter();
  specialized Collection<>.firstIndex(of:)();
  v15 = v14;
  LOBYTE(v12) = v16;
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v7, type metadata accessor for Participant);
    v42 = 0;
    v43 = 0xE000000000000000;
    _StringGuts.grow(_:)(56);
    v38._object = (void *)0x80000001BD696EB0;
    v38._countAndFlagsBits = 0xD000000000000036;
    String.append(_:)(v38);
    _print_unlocked<A, B>(_:_:)();
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v41 = a2;
  v17 = v4;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BD645380;
  v40 = v15;
  v42 = v15;
  v19 = String.init<A>(reflecting:)();
  v21 = v20;
  v22 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
  v23 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v18 + 64) = v23;
  *(_QWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 40) = v21;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v10, type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v17);
  specialized >> prefix<A>(_:)((uint64_t)v10);
  v25 = v24;
  v27 = v26;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v18 + 96) = v22;
  *(_QWORD *)(v18 + 104) = v23;
  *(_QWORD *)(v18 + 72) = v25;
  *(_QWORD *)(v18 + 80) = v27;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  Participant.isPendingAuthorization.getter();
  if ((v28 & 1) != 0)
  {
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1BD6441D0;
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v10, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v17);
    specialized >> prefix<A>(_:)((uint64_t)v10);
    v31 = v30;
    v33 = v32;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v29 + 64) = v23;
    *(_QWORD *)(v29 + 32) = v31;
    *(_QWORD *)(v29 + 40) = v33;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v34 = (void (**)(uint64_t))(v41
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
    result = swift_beginAccess();
    v36 = *v34;
    if (!*v34)
      return result;
    swift_retain();
    v36(a1);
  }
  else
  {
    v37 = (void (**)(uint64_t))(v41
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
    result = swift_beginAccess();
    v36 = *v37;
    if (!*v37)
      return result;
    swift_retain();
    ((void (*)(uint64_t, uint64_t))v36)(a1, v40);
  }
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v36);
}

void ConversationController.createParticipant(for:conversation:)(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  double v24;
  id v25;
  uint64_t v26;
  id v27;
  unsigned int v28;
  id v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  char v35;
  id v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  _QWORD *v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  double v93;
  double v94;
  char v95;
  double v96;
  double v97;
  int v98;
  double v99;
  double v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  __int16 v104;
  uint64_t v105;
  unsigned int v106;
  char v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  __int16 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  double v139;
  double v140;
  double v141;
  double v142;
  char v143;
  double v144;
  double v145;
  int v146;
  double v147;
  uint64_t v148;
  uint64_t v149;
  double v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  BOOL v163;
  _BYTE v164[4];
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  __int128 v177;
  __int128 v178;
  _BYTE *v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  id v183;
  _BYTE *v184;
  __int128 v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  double v190;
  id v191;
  uint64_t v192;
  unint64_t v193;
  _BYTE v194[40];
  __int128 v195;
  __int128 v196;
  uint64_t v197;
  char v198;
  __int16 v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  double v203;
  double v204;
  double v205;
  double v206;
  char v207;
  double v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  char v215;
  _QWORD v216[3];
  uint64_t v217;
  uint64_t v218;
  __int128 v219;
  __int128 v220;
  double v221;
  int v222;
  int64x2_t v223;
  __int128 v224;
  __int128 v225;
  char v226;
  uint64_t v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  char v234;
  _QWORD v235[5];
  _BYTE v236[40];
  _QWORD v237[9];
  __int16 v238;

  v189 = a3;
  *(_QWORD *)&v182 = swift_getObjectType();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v184 = &v164[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v187 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v187);
  v179 = &v164[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v192 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v9 = swift_allocObject();
  v185 = xmmword_1BD645380;
  *(_OWORD *)(v9 + 16) = xmmword_1BD645380;
  *(_QWORD *)&v219 = a1;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  v11 = v10;
  v12 = a1;
  *(_QWORD *)&v181 = v11;
  v13 = String.init<A>(reflecting:)();
  v15 = v14;
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v17 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v9 + 64) = v17;
  *(_QWORD *)(v9 + 32) = v13;
  *(_QWORD *)(v9 + 40) = v15;
  outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)&v219);
  v18 = specialized >> prefix<A>(_:)((uint64_t)&v219);
  v20 = v19;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v219, &demangling cache variable for type metadata for Conversation?);
  *(_QWORD *)(v9 + 96) = v16;
  *(_QWORD *)(v9 + 104) = v17;
  v193 = v17;
  *(_QWORD *)(v9 + 72) = v18;
  *(_QWORD *)(v9 + 80) = v20;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v21 = v12;
  v22 = objc_msgSend(v21, sel_handle);
  v186 = objc_msgSend(v21, sel_identifier);
  v23 = objc_msgSend(v21, sel_avcIdentifier);
  v183 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
  v190 = v24;
  v191 = v22;

  v25 = objc_msgSend(v21, sel_capabilities);
  LODWORD(v22) = objc_msgSend(v25, sel_isMomentsAvailable);

  v188 = v3;
  if ((_DWORD)v22)
  {
    ConversationController.momentsLocallyAvailable.getter();
    *(_QWORD *)&v180 = v26;
  }
  else
  {
    *(_QWORD *)&v180 = 0;
  }
  v27 = objc_msgSend(v21, sel_capabilities);
  v28 = objc_msgSend(v27, sel_isScreenSharingAvailable);

  v29 = objc_msgSend(v21, sel_capabilities);
  v30 = objc_msgSend(v29, sel_isGondolaCallingAvailable);

  v31 = a2[3];
  v32 = a2[4];
  v33 = a2;
  __swift_project_boxed_opaque_existential_1(a2, v31);
  v34 = objc_msgSend(v21, sel_handle);
  v35 = Conversation.containsKickable(participantWithHandle:)(v34, v31, v32);

  v36 = objc_msgSend(v21, sel_capabilities);
  v37 = objc_msgSend(v36, sel_supportsRequestToScreenShare);

  *(_QWORD *)&v219 = v191;
  *((_QWORD *)&v219 + 1) = v186;
  LOBYTE(v220) = 0;
  *((_QWORD *)&v220 + 1) = v183;
  v221 = v190;
  v38 = 0x100000000;
  if (!v37)
    v38 = 0;
  v39 = 0x1000000;
  if ((v35 & 1) == 0)
    v39 = 0;
  v40 = 0x10000;
  if (!v30)
    v40 = 0;
  v41 = 256;
  if (!v28)
    v41 = 0;
  v43 = v188;
  v42 = v189;
  ConversationController.createParticipant(for:conversation:capabilities:)((uint64_t)&v219, v33, v41 & 0xFFFFFFFFFFFFFFFELL | v180 & 1 | v40 | v39 | v38, v189);
  v44 = v33[3];
  v45 = v33[4];
  v186 = v33;
  __swift_project_boxed_opaque_existential_1(v33, v44);
  v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 88))(v44, v45);
  v47 = v21;
  specialized Sequence.first(where:)(v46, v47, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember, 0x1E0DBD2A0, &lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
  v49 = v48;
  swift_bridgeObjectRelease();
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = v185;
  *(_QWORD *)&v219 = v47;
  v51 = v47;
  v52 = String.init<A>(reflecting:)();
  v53 = MEMORY[0x1E0DEA968];
  v54 = v193;
  *(_QWORD *)(v50 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v50 + 64) = v54;
  *(_QWORD *)(v50 + 32) = v52;
  *(_QWORD *)(v50 + 40) = v55;
  v183 = v49;
  if (v49)
  {
    *(_QWORD *)&v219 = v49;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    v56 = v49;
    v57 = String.init<A>(reflecting:)();
  }
  else
  {
    v58 = 0xE300000000000000;
    v57 = 7104878;
  }
  v59 = v187;
  v60 = v193;
  *(_QWORD *)(v50 + 96) = v53;
  *(_QWORD *)(v50 + 104) = v60;
  *(_QWORD *)(v50 + 72) = v57;
  *(_QWORD *)(v50 + 80) = v58;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v61 = objc_msgSend(v51, sel_handle);
  v62 = v186;
  v63 = static ConversationController.member(correspondingTo:in:)(v61, v186);

  v64 = objc_msgSend(v63, sel_lightweightPrimary);
  v65 = *(int *)(v59 + 48);

  *(_QWORD *)(v42 + v65) = v64;
  v66 = v62[3];
  v67 = v62[4];
  __swift_project_boxed_opaque_existential_1(v62, v66);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v67 + 56))(v66, v67) == 3)
  {
    v68 = objc_msgSend(v51, sel_streamToken);
    v69 = objc_msgSend(v51, sel_screenToken);
    v70 = objc_msgSend(v51, sel_isVideoEnabled);
    *(_QWORD *)&v182 = v69;
    if (v70 && *(_BYTE *)(v43 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
    {
      v71 = v43 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator;
      swift_beginAccess();
      outlined init with copy of RadarReporting(v71, (uint64_t)&v219);
      v72 = *((_QWORD *)&v220 + 1);
      v73 = v221;
      __swift_project_boxed_opaque_existential_1(&v219, *((uint64_t *)&v220 + 1));
      (*(void (**)(__int128 *__return_ptr, id, uint64_t, _UNKNOWN **, uint64_t, double))(*(_QWORD *)&v73 + 8))(&v195, v68, v43, &protocol witness table for ConversationController, v72, COERCE_DOUBLE(*(_QWORD *)&v73));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v219);
      outlined init with copy of RadarReporting(v71, (uint64_t)&v219);
      v74 = *((_QWORD *)&v220 + 1);
      v75 = v221;
      __swift_project_boxed_opaque_existential_1(&v219, *((uint64_t *)&v220 + 1));
      (*(void (**)(_QWORD *__return_ptr, id, uint64_t, _UNKNOWN **, uint64_t, double))(*(_QWORD *)&v75 + 8))(v237, v68, v43, &protocol witness table for ConversationController, v74, COERCE_DOUBLE(*(_QWORD *)&v75));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v219);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Participant.VideoProviderType, ParticipantVideoProvider)>);
      v76 = swift_allocObject();
      *(_OWORD *)(v76 + 16) = v185;
      *(_BYTE *)(v76 + 32) = 0;
      outlined init with copy of RadarReporting((uint64_t)&v195, v76 + 40);
      *(_BYTE *)(v76 + 80) = 1;
      outlined init with copy of RadarReporting((uint64_t)v237, v76 + 88);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
      lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType();
      *(_QWORD *)&v185 = Dictionary.init(dictionaryLiteral:)();
      v77 = *((_QWORD *)&v196 + 1);
      v78 = v197;
      __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
      v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 16))(v77, v78);
      v80 = *((_QWORD *)&v196 + 1);
      v81 = v197;
      __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
      LODWORD(v178) = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 32))(v80, v81);
      v82 = *((_QWORD *)&v196 + 1);
      v83 = v197;
      __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
      LODWORD(v181) = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 24))(v82, v83);
      v84 = *((_QWORD *)&v196 + 1);
      v85 = v197;
      __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
      v86 = (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 40))(v84, v85);
      if ((v86 & 0x100000000) != 0)
        v87 = 0;
      else
        v87 = v86;
      v88 = *((_QWORD *)&v196 + 1);
      v89 = v197;
      __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
      v90 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 56))(v88, v89);
      if ((v90 & 0x100000000) != 0)
        v91 = 0;
      else
        v91 = v90;
      v92 = VideoAttributeOrientation.deviceOrientation.getter(v87);
      *(_QWORD *)&v180 = VideoAttributeCamera.cameraPosition.getter(v91);
      outlined init with copy of RadarReporting((uint64_t)&v195, (uint64_t)v216);
      if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
      {
        v176 = v79;
        static AspectRatio.remoteAspectRatios(with:contentsRect:)(v216, (uint64_t)&v219, 1.0, 1.0);
        v94 = *((double *)&v219 + 1);
        v93 = *(double *)&v219;
        v95 = v220;
        v96 = *((double *)&v220 + 1);
        v97 = v221;
        v98 = v222;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
        if ((v95 & 1) != 0 || v93 == v94)
        {
          v93 = 0.0;
          v94 = 0.0;
          v99 = 0.0;
          v100 = 0.0;
          LODWORD(v177) = 1;
        }
        else
        {
          LODWORD(v177) = 0;
          v163 = v98 == 0;
          if (v98)
            v100 = v93;
          else
            v100 = v97;
          if (v163)
            v99 = v96;
          else
            v99 = v94;
        }
        LOBYTE(v79) = v176;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
        v93 = 0.0;
        v94 = 0.0;
        v99 = 0.0;
        v100 = 0.0;
        LODWORD(v177) = 1;
      }
      v107 = v178;
      v108 = objc_msgSend(v51, sel_isCameraMixedWithScreen);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v237);
      v109 = 0x10000000000;
      if ((v181 & 1) == 0)
        v109 = 0;
      v110 = 0x1000000000000;
      if ((v107 & 1) == 0)
        v110 = 0;
      v102 = v110 & 0xFFFFFFFFFFFFFFFELL | v79 & 1 | v109;
      v103 = v180;
      if (v108)
        v111 = 256;
      else
        v111 = 0;
      v104 = v111 | v177;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v195);
      v101 = v185;
    }
    else if (objc_msgSend(v51, sel_isVideoEnabled)
           && !*(_BYTE *)(v43 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode))
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
      lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType();
      v105 = Dictionary.init(dictionaryLiteral:)();
      v106 = objc_msgSend(v51, sel_isCameraMixedWithScreen);
      v93 = 0.0;
      v94 = 0.0;
      v99 = 0.0;
      v100 = 0.0;
      v101 = v105;
      if (v106)
        v104 = 257;
      else
        v104 = 1;
      v103 = 2;
      v102 = 1;
      v92 = 1;
    }
    else
    {
      v101 = 0;
      v102 = 0;
      v92 = 0;
      v103 = 0;
      v93 = 0.0;
      v94 = 0.0;
      v99 = 0.0;
      v100 = 0.0;
      v104 = 0;
    }
    *(_QWORD *)&v185 = v101;
    v237[0] = v101;
    v237[1] = v102;
    v237[2] = 0;
    v237[3] = v92;
    v237[4] = v103;
    *(double *)&v237[5] = v93;
    *(double *)&v237[6] = v94;
    *(double *)&v237[7] = v99;
    *(double *)&v237[8] = v100;
    v238 = v104;
    if (objc_msgSend(v51, sel_isScreenEnabled))
    {
      v112 = v188;
      v42 = v189;
      v53 = MEMORY[0x1E0DEA968];
      if (*(_BYTE *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) != 2)
      {
        v197 = 0;
        v195 = 0u;
        v196 = 0u;
        v123 = *(_OWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes);
        v181 = *(_OWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 16);
        v182 = v123;
        v180 = *(_OWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 32);
        v124 = *(_OWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 48);
        v177 = *(_OWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 64);
        v178 = v124;
        v125 = *(_QWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 80);
        v126 = *(_QWORD *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 88);
        v127 = *(_BYTE *)(v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96);
        v219 = 0u;
        v220 = 0u;
        v221 = 0.0;
        v228 = 0u;
        v229 = 0u;
        v230 = 0u;
        v231 = 0u;
        v232 = 0u;
        v233 = 0u;
        v234 = 1;
        outlined assign with take of Participant?((uint64_t)&v195, (uint64_t)&v219, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        v222 = 1;
        v228 = v182;
        v229 = v181;
        v230 = v180;
        v231 = v178;
        v232 = v177;
        *(_QWORD *)&v233 = v125;
        *((_QWORD *)&v233 + 1) = v126;
        v234 = v127;
        v223 = vdupq_n_s64(1uLL);
        v224 = 0u;
        v225 = 0u;
        v226 = 1;
        v227 = 0x3FF0000000000000;
LABEL_64:
        if (*(_BYTE *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
        {
          v151 = v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator;
          swift_beginAccess();
          outlined init with copy of RadarReporting(v151, (uint64_t)&v195);
          v152 = *((_QWORD *)&v196 + 1);
          v153 = v197;
          __swift_project_boxed_opaque_existential_1(&v195, *((uint64_t *)&v196 + 1));
          v154 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v153 + 8))(objc_msgSend(v51, sel_captionsToken), v152, v153);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v195);
        }
        else
        {
          v154 = 0;
        }
        ConversationController.copresenceInfo(for:in:)(v51, v186, (uint64_t *)&v195);
        Participant.AVInfo.init(for:)(v51);
        v155 = (uint64_t)v179;
        Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
        outlined release of Participant.CopresenceInfo?((uint64_t *)&v195);
        swift_bridgeObjectRelease();
        outlined consume of Participant.CaptionInfo?(v154);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v219, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        outlined assign with take of Participant(v155, v42);
        v59 = v187;
        goto LABEL_68;
      }
      v113 = v188 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator;
      swift_beginAccess();
      outlined init with copy of RadarReporting(v113, (uint64_t)&v219);
      v114 = *((_QWORD *)&v220 + 1);
      v115 = v221;
      __swift_project_boxed_opaque_existential_1(&v219, *((uint64_t *)&v220 + 1));
      (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t, _UNKNOWN **, uint64_t, double))(*(_QWORD *)&v115
                                                                                                  + 8))(v216, v182, v112, &protocol witness table for ConversationController, v114, COERCE_DOUBLE(*(_QWORD *)&v115));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v219);
      v116 = v217;
      v117 = v218;
      __swift_project_boxed_opaque_existential_1(v216, v217);
      v118 = (*(uint64_t (**)(uint64_t, uint64_t))(v117 + 40))(v116, v117);
      if ((v118 & 0x100000000) != 0)
        v119 = 0;
      else
        v119 = v118;
      v120 = v217;
      v121 = v218;
      __swift_project_boxed_opaque_existential_1(v216, v217);
      v122 = (*(uint64_t (**)(uint64_t, uint64_t))(v121 + 40))(v120, v121);
      if ((v122 & 0x100000000) != 0)
        v166 = 1;
      else
        v166 = VideoAttributeOrientation.deviceOrientation.getter(v122);
      v128 = v217;
      v129 = v218;
      __swift_project_boxed_opaque_existential_1(v216, v217);
      v130 = (*(uint64_t (**)(uint64_t, uint64_t))(v129 + 16))(v128, v129);
      outlined init with copy of RadarReporting((uint64_t)v216, (uint64_t)v194);
      v131 = *(_QWORD *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 8);
      v167 = *(_QWORD *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes);
      v132 = *(_QWORD *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 16);
      *(_QWORD *)&v178 = *(_QWORD *)(v112
                                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes
                                   + 24);
      v133 = *(_QWORD *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 32);
      v176 = *(_QWORD *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 40);
      *(_QWORD *)&v177 = v133;
      v134 = *(_QWORD *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 48);
      v174 = *(_QWORD *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 56);
      v175 = v134;
      v135 = *(_QWORD *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 64);
      v172 = *(_QWORD *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 72);
      v173 = v135;
      v136 = *(_QWORD *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 80);
      v170 = *(_QWORD *)(v112 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 88);
      v171 = v136;
      v169 = *(unsigned __int8 *)(v112
                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes
                                + 96);
      v168 = VideoAttributeOrientation.deviceOrientation.getter(v119);
      outlined init with copy of RadarReporting((uint64_t)v216, (uint64_t)&v195);
      v137 = v217;
      v138 = v218;
      __swift_project_boxed_opaque_existential_1(v216, v217);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v138 + 64))(v235, v137, v138);
      v139 = *(double *)&v235[2];
      v140 = *(double *)&v235[3];
      outlined init with take of Any?((uint64_t)v235, (uint64_t)v236, &demangling cache variable for type metadata for CGRect?);
      LODWORD(v182) = v130;
      *(_QWORD *)&v181 = v131;
      *(_QWORD *)&v180 = v132;
      if ((v236[32] & 1) != 0)
      {
        v139 = 1.0;
        v140 = 1.0;
      }
      static AspectRatio.remoteAspectRatios(with:contentsRect:)(&v195, (uint64_t)&v219, v139, v140);
      v142 = *((double *)&v219 + 1);
      v141 = *(double *)&v219;
      v143 = v220;
      v144 = *((double *)&v220 + 1);
      v145 = v221;
      v146 = v222;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v195);
      if ((v143 & 1) != 0 || v141 == v142)
      {
        v141 = 0.0;
        v142 = 0.0;
        v147 = 0.0;
        v145 = 0.0;
        v165 = 1;
      }
      else
      {
        v165 = 0;
        if (v146)
        {
          v145 = v141;
          v147 = v142;
        }
        else
        {
          v147 = v144;
        }
      }
      v148 = v217;
      v149 = v218;
      __swift_project_boxed_opaque_existential_1(v216, v217);
      v150 = (*(double (**)(uint64_t, uint64_t))(v149 + 72))(v148, v149);
      v195 = 0u;
      v196 = 0u;
      v197 = 0;
      v209 = 0u;
      v210 = 0u;
      v211 = 0u;
      v212 = 0u;
      v213 = 0u;
      v214 = 0u;
      v215 = 1;
      outlined assign with take of Participant?((uint64_t)v194, (uint64_t)&v195, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      v198 = v182 & 1;
      v199 = 0;
      v200 = 0;
      *(_QWORD *)&v209 = v167;
      *((_QWORD *)&v209 + 1) = v181;
      *(_QWORD *)&v210 = v180;
      *((_QWORD *)&v210 + 1) = v178;
      *(_QWORD *)&v211 = v177;
      *((_QWORD *)&v211 + 1) = v176;
      *(_QWORD *)&v212 = v175;
      *((_QWORD *)&v212 + 1) = v174;
      *(_QWORD *)&v213 = v173;
      *((_QWORD *)&v213 + 1) = v172;
      *(_QWORD *)&v214 = v171;
      *((_QWORD *)&v214 + 1) = v170;
      v215 = v169;
      v201 = v168;
      v202 = v166;
      v203 = v141;
      v204 = v142;
      v205 = v147;
      v206 = v145;
      v207 = v165;
      v208 = v150;
      outlined init with take of Any?((uint64_t)&v195, (uint64_t)&v219, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
    }
    else
    {
      v219 = 0uLL;
      *(_QWORD *)&v220 = 0;
      *((_QWORD *)&v220 + 1) = 1;
      bzero(&v221, 0xB1uLL);
    }
    v112 = v188;
    v42 = v189;
    v53 = MEMORY[0x1E0DEA968];
    goto LABEL_64;
  }
LABEL_68:
  v156 = swift_allocObject();
  *(_OWORD *)(v156 + 16) = xmmword_1BD6441D0;
  v157 = v184;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v42, (uint64_t)v184, type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload((uint64_t)v157, 0, 1, v59);
  specialized >> prefix<A>(_:)((uint64_t)v157);
  v159 = v158;
  v161 = v160;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v157, &demangling cache variable for type metadata for Participant?);
  v162 = v193;
  *(_QWORD *)(v156 + 56) = v53;
  *(_QWORD *)(v156 + 64) = v162;
  *(_QWORD *)(v156 + 32) = v159;
  *(_QWORD *)(v156 + 40) = v161;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD v10[2];
  char v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  v9 = a1;
  v10[0] = v9;
  v10[1] = 0;
  v11 = 1;
  if ((Conversation.containsKickable(participantWithHandle:)(v9, v6, v7) & 1) != 0)
    v8 = 16843008;
  else
    v8 = 65792;
  v12 = 0;
  v13 = 0;
  ConversationController.createParticipant(for:conversation:capabilities:)((uint64_t)v10, a2, v8, a3);
  swift_bridgeObjectRelease();

}

uint64_t closure #5 in ConversationController.createNewParticipants(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  char v9;

  v4 = *(int *)(type metadata accessor for Participant(0) + 28);
  v5 = *(void **)(a1 + v4);
  if (v5)
  {
    v6 = *(void **)(a2 + v4);
    v7 = v5;
    if (v6)
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      v8 = v7;
      v7 = v6;
      v9 = static NSObject.== infix(_:_:)();

    }
    else
    {
      v9 = 0;
    }

  }
  else
  {
    v9 = *(_QWORD *)(a2 + v4) == 0;
  }
  return v9 & 1;
}

uint64_t ConversationController.createParticipant(for:conversation:capabilities:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t ObjectType;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[5];
  _OWORD v86[2];
  uint64_t v87;

  v79 = a3;
  v83 = a4;
  ObjectType = swift_getObjectType();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v82 = (uint64_t)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  MEMORY[0x1E0C80A78](v8);
  v78 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for Participant.State(0);
  v10 = MEMORY[0x1E0C80A78](v68);
  v77 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v65 - v12;
  v81 = type metadata accessor for UUID();
  v84 = *(_QWORD *)(v81 - 8);
  v14 = MEMORY[0x1E0C80A78](v81);
  v76 = (uint64_t)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v65 - v16;
  v18 = *(_OWORD *)(a1 + 16);
  v86[0] = *(_OWORD *)a1;
  v86[1] = v18;
  v19 = *(_QWORD *)(a1 + 32);
  v72 = *(_QWORD *)(a1 + 24);
  v73 = v19;
  v87 = v19;
  v69 = *(_QWORD *)a1;
  v70 = *(_QWORD *)(a1 + 8);
  v71 = *(unsigned __int8 *)(a1 + 16);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BD645380;
  v21 = *(void **)&v86[0];
  v85[0] = *(_QWORD *)&v86[0];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  v22 = v21;
  v23 = String.init<A>(reflecting:)();
  v25 = v24;
  v26 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
  v27 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v20 + 64) = v27;
  *(_QWORD *)(v20 + 32) = v23;
  *(_QWORD *)(v20 + 40) = v25;
  outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v85);
  v28 = specialized >> prefix<A>(_:)((uint64_t)v85);
  v30 = v29;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v85, &demangling cache variable for type metadata for Conversation?);
  *(_QWORD *)(v20 + 96) = v26;
  *(_QWORD *)(v20 + 104) = v27;
  v74 = v27;
  *(_QWORD *)(v20 + 72) = v28;
  *(_QWORD *)(v20 + 80) = v30;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  UUID.init()();
  v67 = static Colors.ParticipantGradients.gradient(for:)(v22);
  v31 = a2[3];
  v32 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v31);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 128))(v31, v32);
  outlined retain of ParticipantMediaPriorities((void **)v86);
  specialized Sequence.contains(where:)(v33, (id *)v86);
  swift_bridgeObjectRelease();
  Date.init()();
  v34 = (uint64_t)v13;
  swift_storeEnumTagMultiPayload();
  v35 = static ConversationController.member(correspondingTo:in:)(v22, a2);
  v36 = v17;
  if (v35)
  {
    outlined bridged method (ob) of @objc TUConversationActivityMetadata.title.getter(v35, (SEL *)&selRef_nickname);
    ObjectType = v37;
    v68 = v38;
  }
  else
  {
    ObjectType = 0;
    v68 = 0;
  }
  v39 = a2[3];
  v40 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v39);
  Conversation.containsAuthorizedToChangeGroupMembership(participantWithHandle:)(v22, v39, v40);
  v42 = v41;
  v43 = v34;
  v66 = v34;
  v44 = v77;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v43, v77, type metadata accessor for Participant.State);
  v45 = v76;
  v46 = v17;
  v47 = v81;
  (*(void (**)(uint64_t, char *, uint64_t))(v84 + 16))(v76, v46, v81);
  v85[0] = v69;
  v85[1] = v70;
  v85[2] = v71;
  v85[3] = v72;
  v85[4] = v73;
  v48 = type metadata accessor for Participant.CountdownInfo(0);
  v49 = v78;
  __swift_storeEnumTagSinglePayload(v78, 1, 1, v48);
  v50 = type metadata accessor for ParticipantContactDetailsCache();
  v51 = a2[3];
  v52 = __swift_project_boxed_opaque_existential_1(a2, v51);
  outlined retain of ParticipantMediaPriorities((void **)v86);
  specialized static ParticipantContactDetailsCache.cache(for:)((uint64_t)v52, v50, v51);
  LOBYTE(v64) = v42 & 1;
  v53 = v83;
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(v44, v45, v79 & 0x101010101, (uint64_t)v85, v67, ObjectType, v68, v49, v64, v54, v65, v66, v67, v68, v69, v70, v71, v72, v73,
    v74,
    v75,
    v76);
  v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1BD6441D0;
  v56 = v82;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v53, v82, type metadata accessor for Participant);
  v57 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload(v56, 0, 1, v57);
  specialized >> prefix<A>(_:)(v56);
  v59 = v58;
  v61 = v60;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v56, &demangling cache variable for type metadata for Participant?);
  v62 = v74;
  *(_QWORD *)(v55 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v55 + 64) = v62;
  *(_QWORD *)(v55 + 32) = v59;
  *(_QWORD *)(v55 + 40) = v61;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  outlined destroy of AccountUpdateNotice(v66, type metadata accessor for Participant.State);
  return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v36, v47);
}

void ConversationController.copresenceInfo(for:in:)(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = a2[3];
  v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  Conversation.currentSharePlayActivity.getter(v5, v6);
  if (!v7)
  {
    v21 = 0;
    v22 = 0;
    v12 = 0;
    v11 = 0;
LABEL_10:
    v23 = 0;
    v20 = 0;
    v16 = 0;
    v15 = 0;
    goto LABEL_14;
  }
  v8 = v7;
  outlined bridged method (ob) of @objc TUConversationActivity.localizedApplicationName.getter(objc_msgSend(v7, sel_activity));
  v11 = v10;
  if (!v10)
  {

    v21 = 0;
    v22 = 0;
    v12 = 0;
    goto LABEL_10;
  }
  v12 = v9;
  TUConversationActivitySession.ongoingDescription.getter();
  v15 = v14;
  if (v14)
  {
    v16 = v13;
    v17 = ConversationController.isParticipant(_:activeIn:)(a1, v8);
    if ((v17 & 1) != 0)
    {
      v18 = TUConversationActivitySession.preferredBroadcastingAttributes.getter();
      if ((v19 & 1) != 0)
        v20 = 0;
      else
        v20 = (uint64_t)v18;
    }
    else
    {
      v20 = 0;
    }
    v21 = TUConversationActivitySession.uniqueIdentifier.getter();
    v22 = v24;

    v23 = v17 & 1;
  }
  else
  {

    swift_bridgeObjectRelease();
    v21 = 0;
    v22 = 0;
    v12 = 0;
    v11 = 0;
    v23 = 0;
    v20 = 0;
    v16 = 0;
  }
LABEL_14:
  *a3 = v21;
  a3[1] = v22;
  a3[2] = v12;
  a3[3] = v11;
  a3[4] = v23;
  a3[5] = v20;
  a3[6] = v16;
  a3[7] = v15;
}

void ConversationController.scheduleKickabilityUpdate(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  uint64_t v24;
  unsigned int v25;
  char *v26;
  _QWORD v27[8];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;

  v2 = type metadata accessor for DispatchWorkItemFlags();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v32 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS();
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchTime();
  v27[5] = *(_QWORD *)(v28 - 8);
  v7 = MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78](v7);
  v27[7] = (char *)v27 - v8;
  v9 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Participant(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v27 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v21 = (char *)v27 - v18;
  v22 = *(void **)(a1 + *(int *)(v17 + 28));
  if (v22)
  {
    v27[1] = v20;
    v27[2] = v19;
    v27[3] = v3;
    v27[4] = v2;
    v23 = objc_msgSend(v22, sel_value);
    if (!v23)
    {
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v23 = (id)MEMORY[0x1C3B72E00](v24);
      swift_bridgeObjectRelease();
    }
    v25 = objc_msgSend(v23, sel_destinationIdIsTemporary);

    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v21, type metadata accessor for Participant);
    if (v25)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v21, (uint64_t)v11, type metadata accessor for Participant.State);
      v26 = (char *)&loc_1BD55DD7C + dword_1BD55E0FC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
  }
  else
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v27 - v18, type metadata accessor for Participant);
  }
  outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for Participant);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v16, type metadata accessor for Participant);
  outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
}

void sub_1BD55DE14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  double v12;
  void *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
  v8 = v2 + *(int *)(v7 + 48);
  outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v2 + *(int *)(v7 + 64)), *(_QWORD *)(v2 + *(int *)(v7 + 64) + 8));
  outlined destroy of Participant.MediaInfo(v8);
  v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v2, v9);
  outlined destroy of AccountUpdateNotice(v0, type metadata accessor for Participant);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v4, v1, type metadata accessor for Participant);
  v10 = *(_BYTE *)(v1 + *(int *)(v5 + 24) + 3);
  outlined destroy of AccountUpdateNotice(v1, type metadata accessor for Participant);
  v11 = *(_QWORD *)(v6 - 224);
  if ((v10 & 1) != 0)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v12 = (double)(*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 696))() + 0.01;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v13 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    v14 = *(_QWORD *)(v6 - 200);
    MEMORY[0x1C3B72C50](v3, v12);
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 216) + 8);
    *(_QWORD *)(v6 - 216) = v15;
    v16 = *(_QWORD *)(v6 - 192);
    v15(v3, v16);
    v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v18 = *(_QWORD *)(v6 - 240);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v4, v18, type metadata accessor for Participant);
    v19 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 248) + 80);
    v20 = (v19 + 24) & ~v19;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v17;
    outlined init with take of StagedCollaboration(v18, v21 + v20, type metadata accessor for Participant);
    *(_QWORD *)(v6 - 120) = partial apply for closure #1 in ConversationController.scheduleKickabilityUpdate(for:);
    *(_QWORD *)(v6 - 112) = v21;
    *(_QWORD *)(v6 - 152) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v6 - 144) = 1107296256;
    *(_QWORD *)(v6 - 136) = thunk for @escaping @callee_guaranteed () -> ();
    *(_QWORD *)(v6 - 128) = &block_descriptor_1014;
    v22 = _Block_copy((const void *)(v6 - 152));
    swift_release();
    v23 = *(_QWORD *)(v6 - 184);
    static DispatchQoS.unspecified.getter();
    *(_QWORD *)(v6 - 152) = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    v24 = *(_QWORD *)(v6 - 160);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B735B0](v14, v23, v24, v22);
    _Block_release(v22);

    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 232) + 8))(v24, v11);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 176) + 8))(v23, *(_QWORD *)(v6 - 168));
    (*(void (**)(uint64_t, uint64_t))(v6 - 216))(v14, v16);
  }
  JUMPOUT(0x1BD55DDF0);
}

void closure #1 in ConversationController.scheduleKickabilityUpdate(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](a1 + 16);
  if (v7)
  {
    v8 = (char *)v7;
    v9 = ConversationController.visibleParticipants.getter();
    MEMORY[0x1E0C80A78](v9);
    *(&v22 - 2) = a2;
    specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #1 in ConversationController.didUpdateVisibleParticipant(_:), (uint64_t)(&v22 - 4), v9);
    v11 = v10;
    v13 = v12;
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1BD6441D0;
      outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v6, type metadata accessor for Participant);
      v17 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v17);
      specialized >> prefix<A>(_:)((uint64_t)v6);
      v19 = v18;
      v21 = v20;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v16 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v16 + 32) = v19;
      *(_QWORD *)(v16 + 40) = v21;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = &v8[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange];
      swift_beginAccess();
      v15 = *(void (**)(uint64_t, uint64_t))v14;
      if (*(_QWORD *)v14)
      {
        swift_retain();
        v15(a2, v11);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v15);
      }

    }
  }
}

uint64_t ConversationController.pendingMember(correspondingTo:in:)(uint64_t a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(void **)(a1 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (!v3)
    return 0;
  v4 = a2[3];
  v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 128);
  v7 = v3;
  v8 = v6(v4, v5);
  v9 = v7;
  specialized Sequence.first(where:)(v8, v9, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
  v11 = v10;

  swift_bridgeObjectRelease();
  return v11;
}

void ConversationController.updateAudioFrequencyController(with:from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id object;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[80];
  _QWORD v74[10];
  _QWORD v75[10];
  _QWORD v76[11];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
  {
    v9 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController);
    if (v9)
    {
      object = v9;
      Participant.audioToken.getter();
      if ((v12 & 1) == 0 && !v11)
      {
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        static os_log_type_t.error.getter();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
        outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v8, type metadata accessor for Participant);
        v14 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v14);
        specialized >> prefix<A>(_:)((uint64_t)v8);
        v16 = v15;
        v18 = v17;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
        *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v13 + 32) = v16;
        *(_QWORD *)(v13 + 40) = v18;
        os_log(_:dso:log:type:_:)();

LABEL_8:
        swift_bridgeObjectRelease();
        return;
      }
      Participant.audioToken.getter();
      v3 = v27;
      v29 = v28;
      Participant.videoInfo.getter();
      Participant.audioToken.getter();
      v2 = v30;
      v4 = v31;
      Participant.videoInfo.getter();
      if ((v29 & 1) != 0)
      {
        if ((v4 & 1) == 0)
        {
          outlined release of LinearGradient((uint64_t)v73);
          outlined init with take of Any?((uint64_t)v74, (uint64_t)v76, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
          if (!v76[0])
          {
LABEL_18:
            if (v2)
            {
              if (one-time initialization token for conversationKit != -1)
                swift_once();
              v71 = static OS_os_log.conversationKit;
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
              v33 = swift_allocObject();
              *(_OWORD *)(v33 + 16) = xmmword_1BD645380;
              v72 = v2;
              v34 = String.init<A>(reflecting:)();
              v36 = v35;
              v37 = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
              v38 = lazy protocol witness table accessor for type String and conformance String();
              *(_QWORD *)(v33 + 64) = v38;
              *(_QWORD *)(v33 + 32) = v34;
              *(_QWORD *)(v33 + 40) = v36;
              outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v8, type metadata accessor for Participant);
              v39 = type metadata accessor for Participant(0);
              __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v39);
              specialized >> prefix<A>(_:)((uint64_t)v8);
              v41 = v40;
              v43 = v42;
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
              *(_QWORD *)(v33 + 96) = v37;
              *(_QWORD *)(v33 + 104) = v38;
              *(_QWORD *)(v33 + 72) = v41;
              *(_QWORD *)(v33 + 80) = v43;
              static os_log_type_t.default.getter();
              os_log(_:dso:log:type:_:)();
              swift_bridgeObjectRelease();
              objc_msgSend(object, sel_unregisterParticipantPowerSpectrum_, v2);
            }
            goto LABEL_37;
          }
          goto LABEL_24;
        }
        outlined init with take of Any?((uint64_t)v73, (uint64_t)v76, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
        if (v76[0])
        {
LABEL_26:
          outlined release of LinearGradient((uint64_t)v73);
          outlined init with take of Any?((uint64_t)v74, (uint64_t)v75, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
          v44 = v75[0];

          if (!v44)
            return;
LABEL_27:
          outlined release of LinearGradient((uint64_t)v74);
          return;
        }
        outlined release of LinearGradient((uint64_t)v74);
        goto LABEL_37;
      }
      outlined init with take of Any?((uint64_t)v73, (uint64_t)v76, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v76[0])
      {
        if ((v4 & 1) == 0)
        {
          outlined init with take of Any?((uint64_t)v74, (uint64_t)v75, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
          v32 = v75[0];
          outlined release of LinearGradient((uint64_t)v73);
          if (!v32)
            goto LABEL_18;
LABEL_24:

          goto LABEL_27;
        }
        goto LABEL_26;
      }
LABEL_30:
      if ((v4 & 1) != 0
        || (outlined init with take of Any?((uint64_t)v74, (uint64_t)v75, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?), v75[0]))
      {
        outlined release of LinearGradient((uint64_t)v74);
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        v71 = static OS_os_log.conversationKit;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = xmmword_1BD645380;
        v72 = v3;
        v48 = String.init<A>(reflecting:)();
        v50 = v49;
        v51 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v47 + 56) = MEMORY[0x1E0DEA968];
        v52 = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v47 + 64) = v52;
        *(_QWORD *)(v47 + 32) = v48;
        *(_QWORD *)(v47 + 40) = v50;
        outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v8, type metadata accessor for Participant);
        v53 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v53);
        specialized >> prefix<A>(_:)((uint64_t)v8);
        v55 = v54;
        v57 = v56;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
        *(_QWORD *)(v47 + 96) = v51;
        *(_QWORD *)(v47 + 104) = v52;
        *(_QWORD *)(v47 + 72) = v55;
        *(_QWORD *)(v47 + 80) = v57;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v3 == v2)
          goto LABEL_37;
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        v71 = static OS_os_log.conversationKit;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v58 = swift_allocObject();
        *(_OWORD *)(v58 + 16) = xmmword_1BD646740;
        v72 = v2;
        v59 = String.init<A>(reflecting:)();
        v61 = v60;
        *(_QWORD *)(v58 + 56) = MEMORY[0x1E0DEA968];
        v62 = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v58 + 64) = v62;
        *(_QWORD *)(v58 + 32) = v59;
        *(_QWORD *)(v58 + 40) = v61;
        v72 = v3;
        v63 = String.init<A>(reflecting:)();
        *(_QWORD *)(v58 + 96) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v58 + 104) = v62;
        *(_QWORD *)(v58 + 72) = v63;
        *(_QWORD *)(v58 + 80) = v64;
        outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v8, type metadata accessor for Participant);
        v65 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v65);
        specialized >> prefix<A>(_:)((uint64_t)v8);
        v67 = v66;
        v69 = v68;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
        *(_QWORD *)(v58 + 136) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v58 + 144) = v62;
        *(_QWORD *)(v58 + 112) = v67;
        *(_QWORD *)(v58 + 120) = v69;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        objc_msgSend(object, sel_unregisterParticipantPowerSpectrum_, v2);
      }
      objc_msgSend(object, sel_registerParticipantPowerSpectrum_, v3);
LABEL_37:

      return;
    }
    v19 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
    swift_beginAccess();
    v20 = *v19;
    if ((unint64_t)*v19 >= 3)
    {
      if (*v19 == 3)
      {
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        static os_log_type_t.error.getter();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1BD6441D0;
        outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v8, type metadata accessor for Participant);
        v22 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v22);
        specialized >> prefix<A>(_:)((uint64_t)v8);
        v24 = v23;
        v26 = v25;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
        *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v21 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v21 + 32) = v24;
        *(_QWORD *)(v21 + 40) = v26;
        os_log(_:dso:log:type:_:)();
        goto LABEL_8;
      }
      if (v20 != 4)
      {
        v75[0] = 0;
        v75[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(72);
        v45._object = (void *)0x80000001BD696890;
        v45._countAndFlagsBits = 0xD000000000000046;
        String.append(_:)(v45);
        v74[0] = v20;
        v46._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        object = v46._object;
        String.append(_:)(v46);
        swift_bridgeObjectRelease();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        goto LABEL_30;
      }
    }
  }
}

uint64_t ConversationController.captionsProvider(for:token:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = ConversationController.existingCaptionsProvider(for:token:)(a1, a2);
  if (v8)
    return v8;
  v10 = v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator;
  swift_beginAccess();
  outlined init with copy of RadarReporting(v10, (uint64_t)v30);
  v11 = v31;
  v12 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(a2, v11, v12);
  v14 = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  if (v9)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v29[1] = static OS_os_log.conversationKit;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BD646740;
    v30[0] = v9;
    v30[1] = v14;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProvider);
    v16 = String.init<A>(reflecting:)();
    v18 = v17;
    v19 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    v20 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v15 + 64) = v20;
    *(_QWORD *)(v15 + 32) = v16;
    *(_QWORD *)(v15 + 40) = v18;
    v30[0] = a2;
    v21 = String.init<A>(reflecting:)();
    *(_QWORD *)(v15 + 96) = v19;
    *(_QWORD *)(v15 + 104) = v20;
    *(_QWORD *)(v15 + 72) = v21;
    *(_QWORD *)(v15 + 80) = v22;
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v7, type metadata accessor for Participant);
    v23 = type metadata accessor for Participant(0);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v23);
    specialized >> prefix<A>(_:)((uint64_t)v7);
    v25 = v24;
    v27 = v26;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v15 + 136) = v19;
    *(_QWORD *)(v15 + 144) = v20;
    *(_QWORD *)(v15 + 112) = v25;
    *(_QWORD *)(v15 + 120) = v27;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t ConversationController.remoteVideoClient(for:ofType:token:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ConversationController.existingVideoProvider(for:ofType:token:)(a2, a3, (uint64_t)&v32);
  if (v33)
    return outlined init with take of Notice(&v32, a4);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v32, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  v13 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator;
  swift_beginAccess();
  outlined init with copy of RadarReporting(v13, (uint64_t)&v32);
  v14 = v33;
  v15 = v34;
  __swift_project_boxed_opaque_existential_1(&v32, v33);
  (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v15 + 8))(a3, v4, &protocol witness table for ConversationController, v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BD645390;
  outlined init with copy of RadarReporting(a4, (uint64_t)&v32);
  v17 = specialized >> prefix<A>(_:)((uint64_t)&v32);
  v19 = v18;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v32, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  v20 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
  v21 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v16 + 64) = v21;
  *(_QWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v16 + 40) = v19;
  *(_QWORD *)&v32 = a3;
  v22 = String.init<A>(reflecting:)();
  *(_QWORD *)(v16 + 96) = v20;
  *(_QWORD *)(v16 + 104) = v21;
  *(_QWORD *)(v16 + 72) = v22;
  *(_QWORD *)(v16 + 80) = v23;
  LOBYTE(v32) = a2;
  v24 = String.init<A>(reflecting:)();
  *(_QWORD *)(v16 + 136) = v20;
  *(_QWORD *)(v16 + 144) = v21;
  *(_QWORD *)(v16 + 112) = v24;
  *(_QWORD *)(v16 + 120) = v25;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v11, type metadata accessor for Participant);
  v26 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v26);
  specialized >> prefix<A>(_:)((uint64_t)v11);
  v28 = v27;
  v30 = v29;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v16 + 176) = v20;
  *(_QWORD *)(v16 + 184) = v21;
  *(_QWORD *)(v16 + 152) = v28;
  *(_QWORD *)(v16 + 160) = v30;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

unint64_t ConversationController.remoteOrientationFor(aspectRatio:videoRotation:deviceFamily:)(unint64_t result, uint64_t a2, double a3, double a4)
{
  _QWORD *v4;

  if (a4 >= a3)
  {
    if (result <= 3)
    {
      v4 = &unk_1BD665D98;
      return v4[result];
    }
    return 1;
  }
  if (a2 != 3)
    return result;
  if (result >= 4)
    return 1;
  v4 = &unk_1BD665D78;
  return v4[result];
}

void *static ConversationController.member(correspondingTo:in:)(uint64_t a1, _QWORD *a2)
{
  void *v3;
  id v4;
  void *v5;

  v3 = *(void **)(a1 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (!v3)
    return 0;
  v4 = v3;
  v5 = static ConversationController.member(correspondingTo:in:)(v4, a2);

  return v5;
}

uint64_t ConversationController.didUpdateVisibleParticipant(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  void (**v11)(uint64_t, uint64_t);
  uint64_t result;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = ConversationController.visibleParticipants.getter();
  v21 = a1;
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #1 in ConversationController.didUpdateVisibleParticipant(_:), (uint64_t)v20, v6);
  v8 = v7;
  v10 = v9;
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v5, type metadata accessor for Participant);
    v15 = type metadata accessor for Participant(0);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v15);
    specialized >> prefix<A>(_:)((uint64_t)v5);
    v17 = v16;
    v19 = v18;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v14 + 32) = v17;
    *(_QWORD *)(v14 + 40) = v19;
    os_log(_:dso:log:type:_:)();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v11 = (void (**)(uint64_t, uint64_t))(v1
                                                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
    result = swift_beginAccess();
    v13 = *v11;
    if (*v11)
    {
      swift_retain();
      v13(a1, v8);
      return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v13);
    }
  }
  return result;
}

void ConversationController.updateRemoteParticipantsKickableAndAuthorizedToChangeGroupMembership(with:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  char isUniquelyReferenced_nonNull_native;
  void (**v108)(char *, unint64_t);
  unint64_t v109;
  void (*v110)(char *, unint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (**v115)(char *, unint64_t);
  __int128 v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t *v120;
  char *v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  unint64_t v135;
  unint64_t *v136;
  char *v137;
  unint64_t v138;
  int *v139;
  uint64_t v140;
  uint64_t v141;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v119 = (uint64_t)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v129 = (uint64_t)&v114 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo??);
  MEMORY[0x1E0C80A78](v8);
  v128 = (uint64_t)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v10);
  v127 = (uint64_t)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.State?);
  MEMORY[0x1E0C80A78](v12);
  v126 = (uint64_t)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = (int *)type metadata accessor for Participant(0);
  v132 = *((_QWORD *)v139 - 1);
  MEMORY[0x1E0C80A78](v139);
  v114 = (uint64_t)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v131 = (uint64_t)&v114 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v114 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v114 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant));
  MEMORY[0x1E0C80A78](v23);
  v121 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant)?);
  MEMORY[0x1E0C80A78](v25);
  v134 = (char *)&v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v136 = (unint64_t *)((char *)&v114 - v28);
  v29 = type metadata accessor for DispatchPredicate();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (uint64_t *)((char *)&v114 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v32 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x1E0DEF740], v29);
  v33 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v30 + 8))(v32, v29);
  if ((v33 & 1) == 0)
    goto LABEL_41;
  v34 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v120 = v34;
  v35 = *v34;
  v135 = *(_QWORD *)(*v34 + 16);
  v115 = (void (**)(char *, unint64_t))(v2
                                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  v125 = &v141;
  v122 = v35;
  swift_bridgeObjectRetain();
  v36 = 0;
  v116 = xmmword_1BD645390;
  v118 = a1;
  v130 = v23;
  v37 = (unint64_t *)v134;
  v38 = v136;
  v133 = v22;
  v137 = v19;
  while (v36 == v135)
  {
    v39 = 1;
    v36 = v135;
LABEL_7:
    __swift_storeEnumTagSinglePayload((uint64_t)v37, v39, 1, v23);
    outlined init with take of Any?((uint64_t)v37, (uint64_t)v38, &demangling cache variable for type metadata for (offset: Int, element: Participant)?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v23) == 1)
    {
      swift_bridgeObjectRelease();
      return;
    }
    v138 = *v38;
    outlined init with take of StagedCollaboration((uint64_t)v38 + *(int *)(v23 + 48), (uint64_t)v22, type metadata accessor for Participant);
    v42 = *(void **)&v22[v139[7]];
    if (v42)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v22, (uint64_t)v19, type metadata accessor for Participant);
      v43 = a1[3];
      v44 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v43);
      v45 = v42;
      v46 = Conversation.containsKickable(participantWithHandle:)(v45, v43, v44);
      v47 = &v19[v139[6]];
      if ((v46 & 1) != v47[3])
      {
        v48 = type metadata accessor for Participant.State(0);
        v49 = v126;
        __swift_storeEnumTagSinglePayload(v126, 1, 1, v48);
        v50 = type metadata accessor for UUID();
        v51 = a1;
        v52 = v36;
        v53 = v45;
        v54 = v127;
        __swift_storeEnumTagSinglePayload(v127, 1, 1, v50);
        v55 = 256;
        if (!v47[1])
          v55 = 0;
        v56 = 0x10000;
        if (!v47[2])
          v56 = 0;
        v57 = 0x1000000;
        if ((v46 & 1) == 0)
          v57 = 0;
        v58 = 0x100000000;
        if (!v47[4])
          v58 = 0;
        v59 = *v47 | (unint64_t)v55 | v56;
        v140 = 1;
        v60 = v57 | v59 | v58;
        v61 = v125;
        *(_OWORD *)v125 = 0u;
        *((_OWORD *)v61 + 1) = 0u;
        v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
        v63 = v128;
        __swift_storeEnumTagSinglePayload(v128, 1, 1, v62);
        LOBYTE(v112) = 2;
        v64 = v131;
        Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v49, v54, v60, (uint64_t)&v140, 0, 0, 1, v63, v112, 0, 0, v113, v114, (uint64_t)v115, v116, *((uint64_t *)&v116 + 1), v117, (uint64_t)v118, v119,
          (uint64_t)v120,
          (char)v121,
          v122,
          (uint64_t)v123);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v63, &demangling cache variable for type metadata for Participant.CountdownInfo??);
        v65 = v54;
        v45 = v53;
        v36 = v52;
        a1 = v51;
        v19 = v137;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v65, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v66 = v49;
        v22 = v133;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v66, &demangling cache variable for type metadata for Participant.State?);
        outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
        v67 = v64;
        v23 = v130;
        outlined init with take of StagedCollaboration(v67, (uint64_t)v19, type metadata accessor for Participant);
      }
      v68 = a1[3];
      v69 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v68);
      Conversation.containsAuthorizedToChangeGroupMembership(participantWithHandle:)(v45, v68, v69);
      v71 = v70;
      v72 = v70 & 1;
      if ((v70 & 1) != v19[v139[15]])
      {
        v73 = type metadata accessor for Participant.State(0);
        v74 = v126;
        __swift_storeEnumTagSinglePayload(v126, 1, 1, v73);
        v75 = type metadata accessor for UUID();
        v76 = a1;
        v77 = v36;
        v78 = v45;
        v79 = v127;
        __swift_storeEnumTagSinglePayload(v127, 1, 1, v75);
        v140 = 1;
        v80 = v125;
        *(_OWORD *)v125 = 0u;
        *((_OWORD *)v80 + 1) = 0u;
        v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
        v82 = v128;
        __swift_storeEnumTagSinglePayload(v128, 1, 1, v81);
        LOBYTE(v112) = v72;
        v83 = v131;
        Participant.with(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:associatedParticipants:)(v74, v79, 2, (uint64_t)&v140, 0, 0, 1, v82, v112, 0, 0, v113, v114, (uint64_t)v115, v116, *((uint64_t *)&v116 + 1), v117, (uint64_t)v118, v119,
          (uint64_t)v120,
          (char)v121,
          v122,
          (uint64_t)v123);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v82, &demangling cache variable for type metadata for Participant.CountdownInfo??);
        v84 = v79;
        v45 = v78;
        v36 = v77;
        a1 = v76;
        v19 = v137;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v84, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v85 = v74;
        v22 = v133;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v85, &demangling cache variable for type metadata for Participant.State?);
        outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
        v86 = v83;
        v23 = v130;
        outlined init with take of StagedCollaboration(v86, (uint64_t)v19, type metadata accessor for Participant);
      }
      static Participant.== infix(_:_:)();
      v37 = (unint64_t *)v134;
      if ((v87 & 1) != 0)
      {

        outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
        goto LABEL_23;
      }
      v123 = v45;
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v124 = static OS_os_log.conversationKit;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v88 = swift_allocObject();
      *(_OWORD *)(v88 + 16) = v116;
      v89 = v129;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v22, v129, type metadata accessor for Participant);
      v90 = v139;
      __swift_storeEnumTagSinglePayload(v89, 0, 1, (uint64_t)v139);
      v91 = v89;
      v92 = v119;
      outlined init with copy of FeatureEligibility?(v91, v119, &demangling cache variable for type metadata for Participant?);
      if (__swift_getEnumTagSinglePayload(v92, 1, (uint64_t)v90) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v92, &demangling cache variable for type metadata for Participant?);
        v93 = 0xE300000000000000;
        v94 = 7104878;
      }
      else
      {
        v95 = v114;
        outlined init with take of StagedCollaboration(v92, v114, type metadata accessor for Participant);
        outlined init with copy of ConversationControlsAppLaunchButtonType(v95, v131, type metadata accessor for Participant);
        v23 = v130;
        v94 = String.init<A>(reflecting:)();
        v93 = v96;
        outlined destroy of AccountUpdateNotice(v95, type metadata accessor for Participant);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v129, &demangling cache variable for type metadata for Participant?);
      v97 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v88 + 56) = MEMORY[0x1E0DEA968];
      v98 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v88 + 64) = v98;
      *(_QWORD *)(v88 + 32) = v94;
      *(_QWORD *)(v88 + 40) = v93;
      v140 = v138;
      v99 = String.init<A>(reflecting:)();
      *(_QWORD *)(v88 + 96) = v97;
      *(_QWORD *)(v88 + 104) = v98;
      *(_QWORD *)(v88 + 72) = v99;
      *(_QWORD *)(v88 + 80) = v100;
      LOBYTE(v140) = v46 & 1;
      v101 = String.init<A>(reflecting:)();
      *(_QWORD *)(v88 + 136) = v97;
      *(_QWORD *)(v88 + 144) = v98;
      *(_QWORD *)(v88 + 112) = v101;
      *(_QWORD *)(v88 + 120) = v102;
      LOBYTE(v140) = v71 & 1;
      v103 = String.init<A>(reflecting:)();
      *(_QWORD *)(v88 + 176) = v97;
      *(_QWORD *)(v88 + 184) = v98;
      *(_QWORD *)(v88 + 152) = v103;
      *(_QWORD *)(v88 + 160) = v104;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v105 = v120;
      swift_beginAccess();
      v106 = *v105;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v105 = v106;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v106 = specialized _ArrayBuffer._consumeAndCreateNew()();
        *v120 = v106;
      }
      v37 = (unint64_t *)v134;
      v38 = v136;
      v108 = v115;
      a1 = v118;
      v109 = v138;
      if ((v138 & 0x8000000000000000) != 0)
        goto LABEL_39;
      if (v138 >= *(_QWORD *)(v106 + 16))
        goto LABEL_40;
      outlined assign with copy of Participant.State((uint64_t)v19, v106+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(_QWORD *)(v132 + 72) * v138, type metadata accessor for Participant);
      swift_endAccess();
      swift_beginAccess();
      v110 = *v108;
      if (*v108)
      {
        swift_endAccess();
        swift_retain();
        v110(v19, v109);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v110);

        outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
        v111 = (uint64_t)v133;
        outlined destroy of AccountUpdateNotice((uint64_t)v133, type metadata accessor for Participant);
      }
      else
      {
        outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
        v111 = (uint64_t)v133;
        outlined destroy of AccountUpdateNotice((uint64_t)v133, type metadata accessor for Participant);
        swift_endAccess();

      }
      v22 = (char *)v111;
    }
    else
    {
LABEL_23:
      outlined destroy of AccountUpdateNotice((uint64_t)v22, type metadata accessor for Participant);
      v38 = v136;
    }
  }
  if (v36 < *(_QWORD *)(v122 + 16))
  {
    v40 = (uint64_t)&v121[*(int *)(v23 + 48)];
    outlined init with copy of ConversationControlsAppLaunchButtonType(v122+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(_QWORD *)(v132 + 72) * v36, v40, type metadata accessor for Participant);
    v41 = (uint64_t)v37 + *(int *)(v23 + 48);
    *v37 = v36;
    outlined init with take of StagedCollaboration(v40, v41, type metadata accessor for Participant);
    v39 = 0;
    ++v36;
    goto LABEL_7;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

void closure #3 in ConversationController.updateOtherInvitedParticipants()(void **a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  Date.init()();
  swift_storeEnumTagMultiPayload();
  UUID.init()();
  v22 = (uint64_t)v13;
  v23 = xmmword_1BD6491B0;
  v24 = 0;
  v25 = 0;
  v14 = static Colors.ParticipantGradients.gradient(for:)(v13);
  v15 = type metadata accessor for Participant.CountdownInfo(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v15);
  v16 = type metadata accessor for ParticipantContactDetailsCache();
  v17 = a2[3];
  v18 = __swift_project_boxed_opaque_existential_1(a2, v17);
  specialized static ParticipantContactDetailsCache.cache(for:)((uint64_t)v18, v16, v17);
  LOBYTE(v20) = 0;
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)((uint64_t)v12, (uint64_t)v9, 16843008, (uint64_t)&v22, v14, 0, 0, (uint64_t)v6, v20, v19, v21, v22, v23, *((uint64_t *)&v23 + 1), v24, v25, v26, v27, v28,
    v29,
    v30,
    v31);
}

uint64_t ConversationController.isParticipant(_:activeIn:)(void *a1, id a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = objc_msgSend(a2, sel_activeRemoteParticipants);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.contains(where:)(v4, a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t ConversationController.activeParticipant(from:in:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v5 = type metadata accessor for Participant(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  if (v11)
  {
    v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v13 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v12, (uint64_t)v8, type metadata accessor for Participant);
      v14 = objc_msgSend(a1, sel_identifier);
      v15 = &v8[*(int *)(v5 + 28)];
      if (*(_QWORD *)v15)
      {
        if ((v15[16] & 1) == 0 && v14 == *((id *)v15 + 1))
          break;
      }
      outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
      v12 += v13;
      if (!--v11)
        goto LABEL_9;
    }
    outlined init with take of StagedCollaboration((uint64_t)v8, a2, type metadata accessor for Participant);
    v16 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    v16 = 1;
  }
  __swift_storeEnumTagSinglePayload(a2, v16, 1, v5);
  return swift_bridgeObjectRelease();
}

void ConversationController.updateConversationUUIDIfNeeded()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  char *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[4];
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;

  OUTLINED_FUNCTION_93();
  v3 = v0;
  v5 = v4;
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_1();
  v8 = OUTLINED_FUNCTION_295_3();
  outlined init with copy of FeatureEligibility?(v8, v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v10 = OUTLINED_FUNCTION_33_0();
  v11 = OUTLINED_FUNCTION_48_4(v2);
  OUTLINED_FUNCTION_9_42(v2);
  if (v11 == 1)
  {
    v58 = v10;
    v12 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_85_21(v12, (uint64_t)&v62);
    v13 = v63;
    v14 = v64;
    OUTLINED_FUNCTION_80_20(&v62, v63);
    v15 = &v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    OUTLINED_FUNCTION_1();
    v16 = *((_QWORD *)v15 + 1);
    v17 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 104);
    v18 = OUTLINED_FUNCTION_755();
    v17(&v60, v18, v16, v13, v14);
    v19 = swift_unknownObjectRelease();
    if (v61)
    {
      outlined init with take of Notice(&v60, (uint64_t)v65);
      OUTLINED_FUNCTION_426_0();
      v20 = *((_QWORD *)v15 + 1);
      OUTLINED_FUNCTION_15_6();
      v21 = *(uint64_t (**)(uint64_t))(v20 + 184);
      OUTLINED_FUNCTION_72_9();
      v22 = OUTLINED_FUNCTION_348();
      LODWORD(v20) = v21(v22);
      OUTLINED_FUNCTION_10();
      if ((_DWORD)v20 != 6)
      {
        if (one-time initialization token for conversationController != -1)
          swift_once();
        v34 = OUTLINED_FUNCTION_17_2();
        v35 = __swift_project_value_buffer(v34, (uint64_t)&static Logger.conversationController);
        OUTLINED_FUNCTION_340_3();
        v36 = v3;
        OUTLINED_FUNCTION_621();
        v37 = OUTLINED_FUNCTION_12_0();
        if (OUTLINED_FUNCTION_51_3(v37))
        {
          v38 = OUTLINED_FUNCTION_105();
          v57 = OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_812(v57);
          *(_DWORD *)v38 = 136315650;
          v56 = v35;
          LOBYTE(v60) = v3[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
          v39 = OUTLINED_FUNCTION_651();
          *(_QWORD *)&v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, v59);
          OUTLINED_FUNCTION_137_0();

          OUTLINED_FUNCTION_54_1();
          *(_WORD *)(v38 + 12) = 2080;
          v41 = v63;
          OUTLINED_FUNCTION_605_0(&v62);
          OUTLINED_FUNCTION_192_4(v41);
          OUTLINED_FUNCTION_80_0();
          __swift_storeEnumTagSinglePayload(v42, v43, v44, v58);
          specialized >> prefix<A>(_:)(v1);
          v46 = v45;
          OUTLINED_FUNCTION_32_18(v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          *(_QWORD *)&v60 = OUTLINED_FUNCTION_191(v46, v47, v59);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_21_0();
          OUTLINED_FUNCTION_426_0();
          *(_WORD *)(v38 + 22) = 2080;
          v60 = *(_OWORD *)v15;
          OUTLINED_FUNCTION_836();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
          v48 = OUTLINED_FUNCTION_651();
          *(_QWORD *)&v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, v59);
          OUTLINED_FUNCTION_137_0();

          OUTLINED_FUNCTION_30_4();
          OUTLINED_FUNCTION_28_62(&dword_1BD004000, v56, (os_log_type_t)v21, "%s Update conversationUUID from nil to %s for call: %s", (uint8_t *)v38);
          OUTLINED_FUNCTION_23_31();
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_426_0();
        __swift_project_boxed_opaque_existential_1(v65, v66);
        OUTLINED_FUNCTION_182_6();
        OUTLINED_FUNCTION_265_7(v1, 0);
        OUTLINED_FUNCTION_771();
        OUTLINED_FUNCTION_340_3();
        ConversationController.mostRecentActiveConversation.setter((uint64_t)&v62);
        v50 = *(_QWORD **)&v3[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController];
        v51 = v67;
        __swift_project_boxed_opaque_existential_1(v65, v66);
        v52 = (void *)OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 168));
        if (v52)
          goto LABEL_22;
        goto LABEL_23;
      }
      v23 = (__int128 *)v65;
    }
    else
    {
      OUTLINED_FUNCTION_358_2(v19, &demangling cache variable for type metadata for Conversation?);
      v23 = &v62;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    ConversationController.joinedOrPreparingConversation()((uint64_t)&v62);
    if (v63)
    {
      outlined init with take of Notice(&v62, (uint64_t)v65);
      v24 = v67;
      __swift_project_boxed_opaque_existential_1(v65, v66);
      v25 = (void *)OUTLINED_FUNCTION_312_0(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 216));

      if (v25)
      {
        if (one-time initialization token for conversationController != -1)
          swift_once();
        v26 = OUTLINED_FUNCTION_17_2();
        v27 = __swift_project_value_buffer(v26, (uint64_t)&static Logger.conversationController);
        OUTLINED_FUNCTION_340_3();
        Logger.logObject.getter();
        v28 = OUTLINED_FUNCTION_12_0();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)OUTLINED_FUNCTION_105();
          v30 = OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_812(v30);
          *(_DWORD *)v29 = 136315138;
          outlined init with copy of RadarReporting((uint64_t)&v62, (uint64_t)&v60);
          v31 = specialized >> prefix<A>(_:)((uint64_t)&v60);
          v33 = v32;
          OUTLINED_FUNCTION_358_2(v31, &demangling cache variable for type metadata for Conversation?);
          *(_QWORD *)&v60 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, v59);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_25();
          OUTLINED_FUNCTION_426_0();
          OUTLINED_FUNCTION_48(&dword_1BD004000, v27, v28, "Update conversationUUID from nil to joinedOrPreparingConversation: %s", v29);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }
        OUTLINED_FUNCTION_426_0();

        __swift_project_boxed_opaque_existential_1(v65, v66);
        OUTLINED_FUNCTION_182_6();
        OUTLINED_FUNCTION_83_0(v1, 0);
        OUTLINED_FUNCTION_771();
        OUTLINED_FUNCTION_340_3();
        ConversationController.mostRecentActiveConversation.setter((uint64_t)&v62);
        v50 = *(_QWORD **)&v3[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController];
        v53 = v67;
        __swift_project_boxed_opaque_existential_1(v65, v66);
        v52 = (void *)OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v53 + 168));
        if (v52)
        {
LABEL_22:
          v54 = v52;
          v55 = objc_msgSend(v52, sel_handle);

LABEL_24:
          (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v50) + 0x140))(v55);
          outlined init with copy of RadarReporting((uint64_t)v65, v5);
          OUTLINED_FUNCTION_792();
          goto LABEL_25;
        }
LABEL_23:
        v55 = 0;
        goto LABEL_24;
      }
      OUTLINED_FUNCTION_792();
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v62, &demangling cache variable for type metadata for Conversation?);
    }
  }
  OUTLINED_FUNCTION_437();
LABEL_25:
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationController.conversationActiveRemoteParticipantsCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[5];

  OUTLINED_FUNCTION_303_4();
  if (v17)
  {
    outlined init with take of Notice(&v16, (uint64_t)v18);
    v7 = v18[4];
    OUTLINED_FUNCTION_565(v18);
    v8 = OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 120));
    v9 = specialized Set.count.getter(v8);
    v10 = OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_219_4(v10, v11, v12, v13, v14);
  }
  else
  {
    OUTLINED_FUNCTION_273_6(v0, &demangling cache variable for type metadata for Conversation?, v1, v2, v3, v4, v5, v6, v16);
    return 0;
  }
  return v9;
}

uint64_t ConversationController.conversationHandoffInProgress.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  ConversationController.lookupActiveConversation()();
  if (v9)
  {
    outlined init with take of Notice(&v8, (uint64_t)v11);
    v0 = v12;
    v1 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    Conversation.displayableActiveParticipants.getter(v0, v1);
    v3 = specialized Set.count.getter(v2);
    swift_bridgeObjectRelease();
    outlined init with copy of RadarReporting((uint64_t)v11, (uint64_t)&v8);
    if (v3 == 2)
    {
      v4 = v9;
      v5 = v10;
      __swift_project_boxed_opaque_existential_1(&v8, v9);
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 184))(v4, v5);
    }
    else
    {
      v6 = 0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v8, &demangling cache variable for type metadata for Conversation?);
    v6 = 0;
  }
  return v6 & 1;
}

double ConversationController.joinedOrPreparingConversation()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  double result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;

  v56 = a1;
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  swift_beginAccess();
  v3 = v2[3];
  v4 = v2[4];
  v5 = __swift_project_boxed_opaque_existential_1(v2, v3);
  v6 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v55 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v55 - v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v3);
  v10 = (uint64_t *)MEMORY[0x1E0DEE9D8];
  v63 = (uint64_t *)MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(v9 + 16);
  if (v11)
  {
    v12 = 0;
    v13 = v9 + 32;
    while (1)
    {
      if (v12 >= *(_QWORD *)(v9 + 16))
      {
        __break(1u);
        goto LABEL_36;
      }
      outlined init with copy of RadarReporting(v13, (uint64_t)&v60);
      v14 = v61;
      v15 = v62;
      __swift_project_boxed_opaque_existential_1(&v60, v61);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 56))(v14, v15);
      outlined init with copy of RadarReporting((uint64_t)&v60, (uint64_t)v57);
      if (v16 == 3)
        break;
      v17 = v58;
      v18 = v59;
      __swift_project_boxed_opaque_existential_1(v57, v58);
      v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 56))(v17, v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      if (v19 == 2)
        goto LABEL_7;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
LABEL_13:
      ++v12;
      v13 += 40;
      if (v11 == v12)
      {
        v13 = (uint64_t)v63;
        v10 = (uint64_t *)MEMORY[0x1E0DEE9D8];
        goto LABEL_16;
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
LABEL_7:
    outlined init with take of Notice(&v60, (uint64_t)v57);
    v20 = (uint64_t)v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v20 = (uint64_t)v63;
    }
    v21 = *(_QWORD *)(v20 + 16);
    if (v21 >= *(_QWORD *)(v20 + 24) >> 1)
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v22 = v58;
    v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v57, v58);
    v10 = &v55;
    MEMORY[0x1E0C80A78](v23);
    v25 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v26 + 16))(v25);
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, (uint64_t)v25, (uint64_t *)&v63, v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    goto LABEL_13;
  }
  v13 = MEMORY[0x1E0DEE9D8];
LABEL_16:
  swift_bridgeObjectRelease();
  v27 = v2[3];
  v28 = v2[4];
  v29 = __swift_project_boxed_opaque_existential_1(v2, v27);
  v30 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v55 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v30 + 16))(v32);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v27);
  v63 = v10;
  v34 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    v55 = (uint64_t)&v55;
    v35 = 0;
    v10 = (uint64_t *)(v33 + 32);
    while (v35 < *(_QWORD *)(v33 + 16))
    {
      outlined init with copy of RadarReporting((uint64_t)v10, (uint64_t)&v60);
      v36 = v61;
      v37 = v62;
      __swift_project_boxed_opaque_existential_1(&v60, v61);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v37 + 56))(v36, v37) == 1)
      {
        outlined init with take of Notice(&v60, (uint64_t)v57);
        v38 = (uint64_t)v63;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v38 = (uint64_t)v63;
        }
        v39 = *(_QWORD *)(v38 + 16);
        if (v39 >= *(_QWORD *)(v38 + 24) >> 1)
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v40 = v58;
        v41 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v57, v58);
        MEMORY[0x1E0C80A78](v41);
        v43 = (char *)&v55 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v44 + 16))(v43);
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, (uint64_t)v43, (uint64_t *)&v63, v40);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
      }
      ++v35;
      v10 += 5;
      if (v34 == v35)
      {
        v10 = v63;
        goto LABEL_28;
      }
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_28:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v13 + 16) == 1)
  {
    swift_release();
    specialized Collection.first.getter(v13, v56);
LABEL_32:
    swift_release();
    return result;
  }
  if (v10[2] == 1)
  {
    swift_release();
    specialized Collection.first.getter((uint64_t)v10, v56);
    goto LABEL_32;
  }
  if (one-time initialization token for conversationKit != -1)
LABEL_37:
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1BD645380;
  *(_QWORD *)&v60 = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [Conversation]);
  v47 = String.init<A>(reflecting:)();
  v49 = v48;
  v50 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEA968];
  v51 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v46 + 64) = v51;
  *(_QWORD *)(v46 + 32) = v47;
  *(_QWORD *)(v46 + 40) = v49;
  *(_QWORD *)&v60 = v10;
  v52 = String.init<A>(reflecting:)();
  *(_QWORD *)(v46 + 96) = v50;
  *(_QWORD *)(v46 + 104) = v51;
  *(_QWORD *)(v46 + 72) = v52;
  *(_QWORD *)(v46 + 80) = v53;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v54 = (_OWORD *)v56;
  *(_QWORD *)(v56 + 32) = 0;
  result = 0.0;
  *v54 = 0u;
  v54[1] = 0u;
  return result;
}

double ConversationController.existingVideoProvider(for:ofType:token:)@<D0>(char a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[40];

  if (a1 == 3)
    Participant.screenProvider.getter();
  else
    Participant.videoProvider(for:)((uint64_t)v23);
  outlined init with copy of FeatureEligibility?((uint64_t)v23, (uint64_t)&v18, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  if (v19)
  {
    outlined init with take of Notice(&v18, (uint64_t)v20);
    v5 = v21;
    v6 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    if ((v8 & 1) == 0 && v7 == a2)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      outlined init with copy of RadarReporting((uint64_t)v20, a3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return result;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v18, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BD645380;
  v11 = specialized >> prefix<A>(_:)((uint64_t)v23);
  v13 = v12;
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v15 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v10 + 64) = v15;
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v13;
  v20[0] = a2;
  v16 = String.init<A>(reflecting:)();
  *(_QWORD *)(v10 + 96) = v14;
  *(_QWORD *)(v10 + 104) = v15;
  *(_QWORD *)(v10 + 72) = v16;
  *(_QWORD *)(v10 + 80) = v17;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

uint64_t ConversationController.existingCaptionsProvider(for:token:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  Participant.captionsProvider.getter();
  v4 = v3;
  Participant.captionsProvider.getter();
  if (!v6
    || (v7 = v5,
        ObjectType = swift_getObjectType(),
        v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7),
        v11 = v10,
        swift_unknownObjectRelease(),
        (v11 & 1) != 0)
    || v9 != a2)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BD645380;
    if (v4)
    {
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProvider);
      v13 = String.init<A>(reflecting:)();
      v15 = v14;
    }
    else
    {
      v15 = 0xE300000000000000;
      v13 = 7104878;
    }
    v16 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    v17 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v12 + 64) = v17;
    *(_QWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 40) = v15;
    v18 = String.init<A>(reflecting:)();
    *(_QWORD *)(v12 + 96) = v16;
    *(_QWORD *)(v12 + 104) = v17;
    *(_QWORD *)(v12 + 72) = v18;
    *(_QWORD *)(v12 + 80) = v19;
    os_log(_:dso:log:type:_:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

void closure #1 in ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff;
    if (*(_BYTE *)(v2
                  + OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff) == 1)
    {
      if (one-time initialization token for conversationController != -1)
        swift_once();
      v5 = type metadata accessor for Logger();
      __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationController);
      v6 = v3;
      v7 = Logger.logObject.getter();
      v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        v10 = swift_slowAlloc();
        v13 = v10;
        *(_DWORD *)v9 = 136315138;
        v11 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v13);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v7, v8, "[%s] Reset shouldShowLastFrameDuringUPlusOneHandoff flag on timeout", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v10, -1, -1);
        MEMORY[0x1C3B751B8](v9, -1, -1);

      }
      else
      {

      }
      *((_BYTE *)v3 + v4) = 0;
    }

  }
}

id ConversationController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ConversationController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void ConversationController.callCenter(_:stateChangedFor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  __n128 *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  id v66;
  uint64_t v67;
  void (*v68)(__int128 *__return_ptr);
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[2];
  __int128 v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  _BYTE v102[40];
  _BYTE v103[40];
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[3];
  uint64_t v108;
  uint64_t v109;
  _QWORD v110[4];
  uint64_t v111;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v6 = v5;
  v8 = v7;
  v99 = OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v94 = (char *)v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OUTLINED_FUNCTION_33_0();
  v12 = *(_QWORD *)(v11 - 8);
  v97 = v11;
  v98 = v12;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_5_27();
  v93 = v14;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_183();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v87 - v17;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_83_4();
  OUTLINED_FUNCTION_59(v20, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *(_QWORD *)v3 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_175_3(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  v21 = OUTLINED_FUNCTION_333_4();
  OUTLINED_FUNCTION_147_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v21 & 1) == 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  OUTLINED_FUNCTION_649_0();
  v90 = v4;
  if (v108)
  {
    OUTLINED_FUNCTION_243_2();
    v3 = v111;
    __swift_project_boxed_opaque_existential_1(v110, v110[3]);
    OUTLINED_FUNCTION_180_2();
    OUTLINED_FUNCTION_516_1();
    OUTLINED_FUNCTION_180_2();
    v23 = OUTLINED_FUNCTION_443_1();
    v24 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
    v25 = v1;
    v26 = v97;
    v24(v25, v97);
    v27 = v18;
    v28 = v26;
    v24((uint64_t)v27, v26);
    if ((v23 & 1) != 0)
    {
      v29 = (_QWORD *)((char *)v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
      OUTLINED_FUNCTION_1();
      v30 = *v29;
      v31 = v29[1];
      v3 = OUTLINED_FUNCTION_650();
      v32 = *(void (**)(uint64_t))(v31 + 88);
      OUTLINED_FUNCTION_598();
      v21 = v30;
      v33 = OUTLINED_FUNCTION_263();
      v32(v33);
      OUTLINED_FUNCTION_717();
      if ((v30 & 1) != 0)
      {
        if (one-time initialization token for conversationKit == -1)
        {
LABEL_6:
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v34 = (__n128 *)OUTLINED_FUNCTION_15();
          OUTLINED_FUNCTION_170_2(v34, (__n128)xmmword_1BD645380);
          v107[0] = OUTLINED_FUNCTION_312_0((uint64_t (*)(uint64_t, uint64_t))v8[7]);
          OUTLINED_FUNCTION_616_0();
          OUTLINED_FUNCTION_444_0();
          OUTLINED_FUNCTION_286_4();
          v35 = MEMORY[0x1E0DEA968];
          v36 = OUTLINED_FUNCTION_637_0();
          v34[4].n128_u64[0] = v36;
          v34[2].n128_u64[0] = v21;
          v34[2].n128_u64[1] = (unint64_t)v4;
          v107[0] = v90;
          v90;
          v37 = String.init<A>(reflecting:)();
          v34[6].n128_u64[0] = v35;
          v34[6].n128_u64[1] = v36;
          v34[4].n128_u64[1] = v37;
          v34[5].n128_u64[0] = v38;
          static os_log_type_t.default.getter();
          OUTLINED_FUNCTION_239_1();
          v39 = OUTLINED_FUNCTION_133();
          OUTLINED_FUNCTION_210_4(v39, (uint64_t)v107);
          ConversationController.update(with:)((uint64_t)v107);
          OUTLINED_FUNCTION_159_8(v40, &demangling cache variable for type metadata for Conversation?);
          OUTLINED_FUNCTION_100_2();
          goto LABEL_39;
        }
LABEL_42:
        swift_once();
        goto LABEL_6;
      }
    }
    OUTLINED_FUNCTION_100_2();
  }
  else
  {
    OUTLINED_FUNCTION_159_8(v22, &demangling cache variable for type metadata for Conversation?);
    v28 = v97;
  }
  v41 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  v42 = OUTLINED_FUNCTION_422_1();
  OUTLINED_FUNCTION_210_4(v42, (uint64_t)v110);
  if (v42 == 2)
  {
    OUTLINED_FUNCTION_100_2();
  }
  else
  {
    v41 = v111;
    OUTLINED_FUNCTION_158_2();
    v43 = OUTLINED_FUNCTION_422_1();
    OUTLINED_FUNCTION_100_2();
    if (v43 != 3)
      goto LABEL_39;
  }
  v44 = *(_QWORD **)((char *)v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  OUTLINED_FUNCTION_516_1();
  v45 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 168))(v41, v3);
  if (v45)
  {
    v46 = v45;
    v47 = objc_msgSend(v45, sel_handle);

  }
  else
  {
    v47 = 0;
  }
  v48 = v98;
  (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v44) + 0x140))(v47);
  v49 = (char *)v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs;
  OUTLINED_FUNCTION_1();
  v89 = (uint64_t)v49;
  v50 = *(_QWORD *)(*(_QWORD *)v49 + 16);
  v87[1] = *(_QWORD *)v49;
  if (v50)
  {
    OUTLINED_FUNCTION_37_3();
    v53 = v51 + v52;
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16);
    v95 = *(_QWORD *)(v48 + 72);
    v96 = v54;
    swift_bridgeObjectRetain();
    v91 = 0;
    v88 = xmmword_1BD6441D0;
    v55 = (uint64_t)v94;
    v92 = v8;
    while (1)
    {
      v96(v55, v53, v28);
      __swift_storeEnumTagSinglePayload(v55, 0, 1, v28);
      v56 = OUTLINED_FUNCTION_392_1();
      OUTLINED_FUNCTION_69_0(v56, v57, v28);
      if (v58)
        goto LABEL_38;
      v99 = v50;
      v59 = OUTLINED_FUNCTION_261_2();
      OUTLINED_FUNCTION_374_1(v59, v60, v61);
      v62 = v8[4];
      __swift_project_boxed_opaque_existential_1(v8, v8[3]);
      v63 = (void *)OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 24));
      v64 = UUID.uuidString.getter();
      v65 = (void *)MEMORY[0x1C3B72E00](v64);
      OUTLINED_FUNCTION_27();
      v66 = objc_msgSend(v63, sel_callWithUniqueProxyIdentifier_, v65);

      OUTLINED_FUNCTION_113();
      if (v66)
      {
        v67 = v8[4];
        OUTLINED_FUNCTION_184(v8);
        lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
        v68 = *(void (**)(__int128 *__return_ptr))(v67 + 104);
        v69 = v66;
        v68(&v104);

        if (v105)
        {
          outlined init with take of Notice(&v104, (uint64_t)v107);
          v70 = v108;
          v71 = v109;
          __swift_project_boxed_opaque_existential_1(v107, v108);
          v72 = OUTLINED_FUNCTION_371(v70, *(uint64_t (**)(uint64_t, uint64_t))(v71 + 56));
          outlined init with copy of RadarReporting((uint64_t)v107, (uint64_t)&v104);
          v28 = v97;
          v73 = v98;
          if (v72 == 2)
          {
            OUTLINED_FUNCTION_518_1();
            v8 = v90;
          }
          else
          {
            v74 = v105;
            v75 = v106;
            __swift_project_boxed_opaque_existential_1(&v104, v105);
            v76 = OUTLINED_FUNCTION_371(v74, *(uint64_t (**)(uint64_t, uint64_t))(v75 + 56));
            OUTLINED_FUNCTION_518_1();
            v8 = v90;
            v55 = (uint64_t)v94;
            if (v76 != 3)
            {

              v48 = v73;
              OUTLINED_FUNCTION_343_4(*(uint64_t (**)(uint64_t, uint64_t))(v73 + 8));
              OUTLINED_FUNCTION_103();
              v8 = v92;
              goto LABEL_33;
            }
          }
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v77 = OUTLINED_FUNCTION_15();
          *(_OWORD *)(v77 + 16) = v88;
          outlined init with copy of RadarReporting((uint64_t)v107, (uint64_t)v103);
          outlined init with copy of FeatureEligibility?((uint64_t)v103, (uint64_t)&v100, &demangling cache variable for type metadata for Conversation?);
          if (v101)
          {
            outlined init with take of Notice(&v100, (uint64_t)v102);
            outlined init with copy of RadarReporting((uint64_t)v102, (uint64_t)&v100);
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
            v78 = String.init<A>(reflecting:)();
            v80 = v79;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
          }
          else
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v100, &demangling cache variable for type metadata for Conversation?);
            v80 = 0xE300000000000000;
            v78 = 7104878;
          }
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v103, &demangling cache variable for type metadata for Conversation?);
          *(_QWORD *)(v77 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v77 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(_QWORD *)(v77 + 32) = v78;
          *(_QWORD *)(v77 + 40) = v80;
          static os_log_type_t.default.getter();
          OUTLINED_FUNCTION_460();
          v81 = OUTLINED_FUNCTION_58_1();
          v4 = v87;
          MEMORY[0x1E0C80A78](v81);
          v87[-2] = v93;
          v21 = v89;
          OUTLINED_FUNCTION_2_0();
          v82 = v91;
          specialized MutableCollection._halfStablePartition(isSuffixElement:)((uint64_t (*)(unint64_t))partial apply for closure #1 in ConversationController.callCenter(_:stateChangedFor:));
          if (*(_QWORD *)(*(_QWORD *)v21 + 16) < v83)
          {
            __break(1u);
            goto LABEL_41;
          }
          v91 = v82;
          specialized Array.replaceSubrange<A>(_:with:)();
          swift_endAccess();
          v84 = v69;
          specialized ConversationController.migrate(to:with:isUpgrade:)(v107, (uint64_t)v84, 0, (char *)v8);

          v28 = v97;
          v48 = v98;
          OUTLINED_FUNCTION_343_4(*(uint64_t (**)(uint64_t, uint64_t))(v98 + 8));
          OUTLINED_FUNCTION_103();
        }
        else
        {

          v28 = v97;
          v48 = v98;
          OUTLINED_FUNCTION_343_4(*(uint64_t (**)(uint64_t, uint64_t))(v98 + 8));
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v104, &demangling cache variable for type metadata for Conversation?);
        }
        v8 = v92;
        v55 = (uint64_t)v94;
      }
      else
      {
        OUTLINED_FUNCTION_343_4(*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
      }
LABEL_33:
      v53 += v95;
      v50 = v99 - 1;
      if (v99 == 1)
        goto LABEL_37;
    }
  }
  swift_bridgeObjectRetain();
LABEL_37:
  v85 = OUTLINED_FUNCTION_392_1();
  __swift_storeEnumTagSinglePayload(v85, v86, 1, v28);
LABEL_38:
  swift_bridgeObjectRelease();
LABEL_39:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:localVideoToggledFor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  __n128 *v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t (**v25)(_QWORD, _QWORD);
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[21];
  _QWORD v32[11];

  OUTLINED_FUNCTION_93();
  v3 = v0;
  v5 = v4;
  OUTLINED_FUNCTION_571_0(v6);
  v31[2] = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v31 - v9;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_59(v12, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v13 = OUTLINED_FUNCTION_7_22();
  *v2 = v13;
  OUTLINED_FUNCTION_533_0(v13, *MEMORY[0x1E0DEF740]);
  _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_458_1();
  if ((v0 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_226_2();
  if (v32[3])
  {
    OUTLINED_FUNCTION_243_2();
    v15 = v32[8];
    OUTLINED_FUNCTION_158_2();
    OUTLINED_FUNCTION_192_4(v15);
    v16 = v5[3];
    __swift_project_boxed_opaque_existential_1(v5, v16);
    OUTLINED_FUNCTION_192_4(v16);
    v17 = OUTLINED_FUNCTION_197_3();
    OUTLINED_FUNCTION_399_3(v1);
    OUTLINED_FUNCTION_399_3((uint64_t)v10);
    if ((v17 & 1) == 0)
    {
LABEL_17:
      OUTLINED_FUNCTION_100_2();
      goto LABEL_18;
    }
    v18 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    OUTLINED_FUNCTION_1();
    if ((*(char *)(v18 + 16) & 0x80000000) == 0)
      goto LABEL_5;
    if ((ConversationController.isCarPlayConnected.getter() & 1) != 0
      || (OUTLINED_FUNCTION_1(),
          OUTLINED_FUNCTION_423_1(),
          OUTLINED_FUNCTION_349_2(),
          v23 = OUTLINED_FUNCTION_739(),
          OUTLINED_FUNCTION_45_34(),
          (v23 & 1) == 0))
    {
      ConversationController.stopLocalVideo()();
    }
    else if ((*(char *)(v18 + 16) & 0x80000000) == 0)
    {
LABEL_5:
      if ((ConversationController.isCarPlayConnected.getter() & 1) == 0)
      {
        v19 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
        OUTLINED_FUNCTION_1();
        v20 = *v19;
        OUTLINED_FUNCTION_650();
        OUTLINED_FUNCTION_598();
        OUTLINED_FUNCTION_781();
        OUTLINED_FUNCTION_717();
        if ((v20 & 1) != 0 && *(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
          ConversationController.startLocalVideo(allowVideoUpgrade:)(0);
      }
    }
    v24 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    OUTLINED_FUNCTION_1();
    v25 = *(uint64_t (***)(_QWORD, _QWORD))(v24 + 8);
    outlined init with copy of RadarReporting(v31[1], (uint64_t)v32);
    v26 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
    OUTLINED_FUNCTION_1();
    v27 = *v26;
    v28 = (_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
    OUTLINED_FUNCTION_1();
    LOBYTE(v28) = *v28 == 3;
    v29 = OUTLINED_FUNCTION_650();
    v30 = OUTLINED_FUNCTION_598();
    specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v30, v32, v27, (char)v28, v29, v25);
    OUTLINED_FUNCTION_379_2();
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_159_8(v14, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationKit != -1)
    goto LABEL_20;
LABEL_10:
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v21 = (__n128 *)OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_711(v21, (__n128)xmmword_1BD6441D0);
  String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_362_3();
  v22 = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
  OUTLINED_FUNCTION_407_1(v22);
  OUTLINED_FUNCTION_61_30();
  OUTLINED_FUNCTION_133();
LABEL_18:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:remoteMembersChangedFor:)()
{
  ConversationController.callCenter(_:remoteMembersChangedFor:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 *v19;
  uint64_t v20;
  __n128 *v21;
  unint64_t v22;
  _QWORD v23[6];
  __int128 v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;

  OUTLINED_FUNCTION_93();
  v23[3] = v2;
  v23[4] = v3;
  v23[1] = v4;
  v23[2] = v5;
  v7 = v6;
  v23[5] = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_42_32();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v23 - v10;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_59(v13, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v0 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_139((uint64_t)v0, *MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v14 = OUTLINED_FUNCTION_814();
  OUTLINED_FUNCTION_371((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_357_2();
  if (!v25)
  {
    OUTLINED_FUNCTION_69_25(v15, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_9:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v21 = (__n128 *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_456(v21, (__n128)xmmword_1BD6441D0);
      OUTLINED_FUNCTION_143_8();
      OUTLINED_FUNCTION_423_0();
      v22 = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_706(v22);
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
      goto LABEL_10;
    }
LABEL_12:
    swift_once();
    goto LABEL_9;
  }
  outlined init with take of Notice(&v24, (uint64_t)v26);
  v16 = v27;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  OUTLINED_FUNCTION_138_10(v16);
  v17 = v7[3];
  v18 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v17);
  OUTLINED_FUNCTION_138_10(v17);
  OUTLINED_FUNCTION_501_1();
  OUTLINED_FUNCTION_418_2();
  OUTLINED_FUNCTION_817();
  if ((v17 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v19 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_710(v19, (__n128)xmmword_1BD6441D0);
    OUTLINED_FUNCTION_657_0();
    OUTLINED_FUNCTION_56_33();
    v19[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v19[4].n128_u64[0] = lazy protocol witness table accessor for type String and conformance String();
    v19[2].n128_u64[0] = (unint64_t)v11;
    v19[2].n128_u64[1] = v18;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_328_3();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_655_0();
    ConversationController.update(with:)((uint64_t)&v24);
    OUTLINED_FUNCTION_69_25(v20, &demangling cache variable for type metadata for Conversation?);
  }
  OUTLINED_FUNCTION_12_6();
LABEL_10:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:activeRemoteParticipantsChangedFor:)()
{
  ConversationController.callCenter(_:activeRemoteParticipantsChangedFor:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 *v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_42_32();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v0 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_139((uint64_t)v0, *MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v8 = OUTLINED_FUNCTION_814();
  OUTLINED_FUNCTION_371((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_357_2();
  if (!v20)
  {
    OUTLINED_FUNCTION_69_25(v9, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_9:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v17 = (__n128 *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_456(v17, (__n128)xmmword_1BD6441D0);
      OUTLINED_FUNCTION_143_8();
      OUTLINED_FUNCTION_423_0();
      v18 = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_706(v18);
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
      goto LABEL_10;
    }
LABEL_12:
    swift_once();
    goto LABEL_9;
  }
  outlined init with take of Notice(&v19, (uint64_t)v21);
  v10 = v22;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  OUTLINED_FUNCTION_138_10(v10);
  v11 = v3[3];
  __swift_project_boxed_opaque_existential_1(v3, v11);
  OUTLINED_FUNCTION_138_10(v11);
  OUTLINED_FUNCTION_501_1();
  OUTLINED_FUNCTION_418_2();
  OUTLINED_FUNCTION_817();
  if ((v11 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v12 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_710(v12, (__n128)xmmword_1BD6441D0);
    v13 = OUTLINED_FUNCTION_657_0();
    v15 = v14;
    v12[4].n128_u64[0] = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
    v12[2].n128_u64[0] = v13;
    v12[2].n128_u64[1] = v15;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_239_1();
    OUTLINED_FUNCTION_133();
    ConversationController.checkScreenTimeRestricts(_:)(v3);
    OUTLINED_FUNCTION_655_0();
    ConversationController.update(with:)((uint64_t)&v19);
    OUTLINED_FUNCTION_69_25(v16, &demangling cache variable for type metadata for Conversation?);
  }
  OUTLINED_FUNCTION_12_6();
LABEL_10:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:pendingMembersChangedFor:)()
{
  ConversationController.callCenter(_:remoteMembersChangedFor:)();
}

void ConversationController.callCenter(_:otherInvitedHandlesChangedFor:)()
{
  ConversationController.callCenter(_:activeRemoteParticipantsChangedFor:)();
}

void closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _BYTE v22[80];
  _QWORD v23[10];

  v4 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v17 - v11;
  v13 = swift_projectBox();
  ConversationController.remoteOneToOneParticipant.getter();
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v12, v13, &demangling cache variable for type metadata for Participant?);
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v13, (uint64_t)v10, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
LABEL_11:
    v15 = 0;
    goto LABEL_12;
  }
  outlined init with take of StagedCollaboration((uint64_t)v10, (uint64_t)v6, type metadata accessor for Participant);
  Participant.videoInfo.getter();
  outlined init with take of Any?((uint64_t)v22, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v23[0])
  {
    v21 = 0;
    v19 = 0u;
    v20 = 0u;
    goto LABEL_9;
  }
  specialized Dictionary.subscript.getter();
  outlined release of LinearGradient((uint64_t)v22);
  if (!*((_QWORD *)&v20 + 1))
  {
LABEL_9:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v19, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  type metadata accessor for RemoteParticipantVideoProvider();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for Participant);
    goto LABEL_11;
  }
  v14 = v18;
  v15 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v18) + 0x130))();

  outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for Participant);
  if (!v15)
    goto LABEL_11;
LABEL_12:
  swift_beginAccess();
  v16 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = v15;

}

void specialized closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(_BYTE *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  char *v41;
  uint64_t v42;
  int v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint8_t *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  char v58;
  _BYTE *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  char v69;
  char v70;
  uint64_t v71;
  char v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int16 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id *v102;
  id v103;
  id v104;
  void *v105;
  uint64_t v106;
  _BYTE *v107;
  NSObject *v108;
  os_log_type_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  char *v115;
  void (*v116)(_QWORD, _QWORD);
  char v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  uint8_t *v126;
  int v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  id v144;
  uint64_t v145;
  _BYTE *v146;
  _QWORD v147[42];
  uint64_t v148;
  uint64_t v149[6];
  _QWORD v150[3];
  uint64_t v151;
  uint64_t v152;
  _QWORD v153[3];
  uint64_t v154;
  uint64_t v155;
  _QWORD v156[3];
  uint64_t v157;
  uint64_t v158;
  _QWORD v159[10];
  uint64_t v160;
  _QWORD v161[4];
  unsigned __int8 v162;
  uint64_t v163[8];
  uint64_t v164[10];
  _QWORD v165[10];
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unsigned __int8 v170;
  __int128 v171;
  __int128 v172;
  uint64_t v173;
  unsigned __int8 v174;
  unsigned __int8 v175;
  _BYTE v176[40];
  uint64_t v177[5];
  __int128 v178;
  __int128 v179;
  __int16 v180;
  char v181[16];
  double v182;
  double v183;
  char v184;
  double v185[4];
  char v186;

  v144 = a6;
  v145 = a5;
  v131 = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v10);
  v138 = (uint64_t)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for Participant(0);
  v12 = MEMORY[0x1E0C80A78](v137);
  v135 = (uint64_t)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v139 = (uint64_t)&v118 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v140 = (uint64_t)&v118 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v143 = (uint64_t)&v118 - v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v118 - v20;
  v136 = swift_projectBox();
  v22 = OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter;
  v23 = a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter];
  v24 = a2[3];
  v25 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v24);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 200))(v24, v25);
  v141 = v22;
  a1[v22] = v26 & 1;
  v146 = a1;
  ConversationController.isOneToOneModeEnabledByCallCenter.didset();
  outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v156);
  if (v23 != 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
    outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v153);
    goto LABEL_11;
  }
  v27 = v157;
  v28 = v158;
  __swift_project_boxed_opaque_existential_1(v156, v157);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 200))(v27, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
  outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v153);
  if ((v29 & 1) != 0)
  {
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
    outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v150);
    goto LABEL_12;
  }
  v30 = v154;
  v31 = v155;
  __swift_project_boxed_opaque_existential_1(v153, v154);
  Conversation.displayableActiveParticipants.getter(v30, v31);
  v33 = specialized Set.count.getter(v32);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
  outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v150);
  if (v33 != 2)
  {
LABEL_12:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v150);
    goto LABEL_13;
  }
  v34 = v151;
  v35 = v152;
  __swift_project_boxed_opaque_existential_1(v150, v151);
  v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 184))(v34, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v150);
  if ((v36 & 1) != 0)
  {
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v37 = type metadata accessor for Logger();
    __swift_project_value_buffer(v37, (uint64_t)&static Logger.conversationController);
    v38 = Logger.logObject.getter();
    v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_1BD004000, v38, v39, "Handoff is ongoing - we shouldn't switch to square tiles until a timeout", v40, 2u);
      MEMORY[0x1C3B751B8](v40, -1, -1);
    }

  }
LABEL_13:
  v41 = &v146[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  swift_beginAccess();
  v142 = v41;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v41, (uint64_t)v21, type metadata accessor for Participant);
  Participant.videoInfo.getter();
  v42 = v159[0];
  outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for Participant);
  outlined init with take of Any?((uint64_t)v159, (uint64_t)&v166, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v166)
  {
    v134 = a7;
    v43 = v167;
    v44 = BYTE1(v167);
    v165[2] = v168;
    v175 = v174;
    v130 = v166;
    v165[0] = v166;
    v165[1] = v167;
    v125 = BYTE1(v168);
    LODWORD(v126) = BYTE2(v167);
    v129 = BYTE3(v167);
    v123 = BYTE5(v167);
    v124 = BYTE4(v167);
    v121 = HIBYTE(v167);
    v122 = BYTE6(v167);
    v128 = v169;
    v165[3] = v169;
    v127 = v170;
    LOBYTE(v165[4]) = v170;
    *(_QWORD *)((char *)&v165[8] + 1) = v173;
    *(_OWORD *)((char *)&v165[6] + 1) = v172;
    *(_OWORD *)((char *)&v165[4] + 1) = v171;
    BYTE1(v165[9]) = v174;
    swift_bridgeObjectRetain();
    ConversationController.videoProviderForResizingLocal.getter(v164);
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v45 = type metadata accessor for Logger();
    v46 = __swift_project_value_buffer(v45, (uint64_t)&static Logger.conversationController);
    outlined init with copy of RadarReporting((uint64_t)v164, (uint64_t)v147);
    v132 = v46;
    v47 = Logger.logObject.getter();
    v48 = static os_log_type_t.default.getter();
    v49 = os_log_type_enabled(v47, v48);
    v133 = v42;
    if (v49)
    {
      v50 = (uint8_t *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v163[0] = v51;
      *(_DWORD *)v50 = 136315138;
      v120 = v43;
      outlined init with copy of RadarReporting((uint64_t)v147, (uint64_t)v177);
      v52 = v44;
      v53 = specialized >> prefix<A>(_:)((uint64_t)v177);
      v55 = v54;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v177, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      v56 = v53;
      v44 = v52;
      v177[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v55, v163);
      LOBYTE(v43) = v120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v147);
      _os_log_impl(&dword_1BD004000, v47, v48, "Resizing local preview with video provider: %s", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v51, -1, -1);
      MEMORY[0x1C3B751B8](v50, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v147);
    }

    outlined init with copy of RadarReporting((uint64_t)v164, (uint64_t)v147);
    v57 = v146;
    v58 = ConversationController.isOneToOneModeEnabled.getter();
    v59 = &v57[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
    swift_beginAccess();
    LOBYTE(v59) = *v59;
    v60 = (uint64_t *)&v57[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
    swift_beginAccess();
    v61 = *v60;
    v62 = v143;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v142, v143, type metadata accessor for Participant);
    Participant.aspectRatio.getter();
    outlined destroy of AccountUpdateNotice(v62, type metadata accessor for Participant);
    AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(v147, v58 & 1, 1, (char)v59, v61, (uint64_t)&v160, (uint64_t)v161, 1.0, 1.0);
    v63 = v161[0];
    v64 = v161[1];
    v65 = v161[2];
    v66 = v161[3];
    v120 = v162;
    outlined init with take of AspectRatio((uint64_t)v161, (uint64_t)&v165[5]);
    if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
    {
      v119 = 0;
      LOBYTE(v165[2]) = 0;
    }
    else
    {
      v119 = LOBYTE(v165[2]);
    }
    swift_bridgeObjectRetain();
    v67 = Logger.logObject.getter();
    v68 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v67, v68))
    {
      v132 = v66;
      v69 = v43 & 1;
      v70 = v44 & 1;
      v71 = v64;
      v72 = v126 & 1;
      v118 = v124 & 1;
      v122 &= 1u;
      v123 &= 1u;
      v121 &= 1u;
      v124 = v175;
      v125 &= 1u;
      v73 = (uint8_t *)swift_slowAlloc();
      v74 = swift_slowAlloc();
      v75 = v65;
      v76 = v74;
      v177[0] = v74;
      *(_DWORD *)v73 = 136315138;
      v126 = v73 + 4;
      v147[0] = v130;
      LOBYTE(v147[1]) = v69;
      BYTE1(v147[1]) = v70;
      BYTE2(v147[1]) = v72;
      BYTE3(v147[1]) = v129;
      BYTE4(v147[1]) = v118;
      BYTE5(v147[1]) = v123;
      BYTE6(v147[1]) = v122;
      HIBYTE(v147[1]) = v121;
      LOBYTE(v147[2]) = v119;
      BYTE1(v147[2]) = v125;
      v147[3] = v128;
      LOBYTE(v147[4]) = v127;
      v147[5] = v63;
      v147[6] = v71;
      v147[7] = v75;
      v147[8] = v132;
      LOBYTE(v147[9]) = v120;
      BYTE1(v147[9]) = v124;
      swift_bridgeObjectRetain();
      v77 = String.init<A>(reflecting:)();
      v147[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of LinearGradient((uint64_t)v159);
      outlined release of LinearGradient((uint64_t)v159);
      _os_log_impl(&dword_1BD004000, v67, v68, "Due to one-to-one change, updated local participant videoInfo to %s", v73, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v76, -1, -1);
      MEMORY[0x1C3B751B8](v73, -1, -1);
    }
    else
    {
      outlined release of LinearGradient((uint64_t)v159);
      outlined release of LinearGradient((uint64_t)v159);
    }

    v79 = (uint64_t)v142;
    v80 = v140;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v142, v140, type metadata accessor for Participant);
    ConversationController.conversationIsAVLess.getter();
    swift_beginAccess();
    if (BYTE1(v165[1]))
      v81 = 256;
    else
      v81 = 0;
    v82 = 0x10000;
    if (!BYTE2(v165[1]))
      v82 = 0;
    v83 = v81 | LOBYTE(v165[1]) | v82 | ((unint64_t)BYTE3(v165[1]) << 24);
    v84 = 0x100000000;
    if (!BYTE4(v165[1]))
      v84 = 0;
    v85 = 0x10000000000;
    if (!BYTE5(v165[1]))
      v85 = 0;
    v86 = v84 | v85;
    v87 = 0x1000000000000;
    if (!BYTE6(v165[1]))
      v87 = 0;
    v88 = v86 | v87;
    v89 = 0x100000000000000;
    if (!HIBYTE(v165[1]))
      v89 = 0;
    v90 = v83 | v88 | v89;
    if (BYTE1(v165[2]))
      v91 = 256;
    else
      v91 = 0;
    v92 = v91 | LOBYTE(v165[2]);
    if (BYTE1(v165[9]))
      v93 = 256;
    else
      v93 = 0;
    v177[0] = v165[0];
    v177[1] = v90;
    v177[2] = v92;
    v177[3] = v165[3];
    v177[4] = LOBYTE(v165[4]);
    v178 = *(_OWORD *)&v165[5];
    v179 = *(_OWORD *)&v165[7];
    v180 = v93 | LOBYTE(v165[9]);
    memset(v147, 0, 24);
    v147[3] = 1;
    bzero(&v147[4], 0xB1uLL);
    v94 = v139;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v79, v139, type metadata accessor for Participant);
    v95 = Participant.captionInfo.getter();
    outlined destroy of AccountUpdateNotice(v94, type metadata accessor for Participant);
    Participant.copresenceInfo.getter(v163);
    v96 = v143;
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v163);
    outlined consume of Participant.CaptionInfo?(v95);
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v147, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of AccountUpdateNotice(v80, type metadata accessor for Participant);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v164);
    swift_beginAccess();
    outlined assign with take of Participant(v96, v79);
    swift_endAccess();
    a7 = v134;
  }
  closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(v145, (uint64_t)v144, a7);
  if (v146[v141] == 1)
  {
    v97 = v136;
    swift_beginAccess();
    v98 = v97;
    v99 = v138;
    outlined init with copy of FeatureEligibility?(v98, v138, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v99, 1, v137) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v99, &demangling cache variable for type metadata for Participant?);
      goto LABEL_65;
    }
    outlined init with take of StagedCollaboration(v99, v135, type metadata accessor for Participant);
    Participant.videoInfo.getter();
    outlined init with take of Any?((uint64_t)v164, (uint64_t)v165, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (!v165[0])
      goto LABEL_64;
    memcpy(v147, v165, 0x4AuLL);
    outlined release of LinearGradient((uint64_t)v164);
    outlined init with take of AspectRatio((uint64_t)&v147[5], (uint64_t)v176);
    outlined init with take of AspectRatio((uint64_t)v176, (uint64_t)v185);
    if ((v186 & 1) == 0 && (v185[0] != 1.0 || v185[1] != 1.0))
      goto LABEL_64;
    outlined init with take of AspectRatio((uint64_t)v176, (uint64_t)v181);
    if ((v184 & 1) == 0 && (v182 != 1.0 || v183 != 1.0))
      goto LABEL_64;
    v102 = (id *)(v131 + 16);
    swift_beginAccess();
    if (!*v102)
      goto LABEL_64;
    v103 = *v102;
    v104 = objc_msgSend(v103, sel_remoteVideoAttributes);
    if (v104)
    {
      v105 = v104;
      ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)();

LABEL_64:
      outlined destroy of AccountUpdateNotice(v135, type metadata accessor for Participant);
      goto LABEL_65;
    }
    outlined destroy of AccountUpdateNotice(v135, type metadata accessor for Participant);

  }
LABEL_65:
  if (one-time initialization token for conversationController != -1)
    swift_once();
  v106 = type metadata accessor for Logger();
  __swift_project_value_buffer(v106, (uint64_t)&static Logger.conversationController);
  v107 = v146;
  v108 = Logger.logObject.getter();
  v109 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v108, v109))
  {
    v110 = swift_slowAlloc();
    v111 = swift_slowAlloc();
    v149[0] = v111;
    *(_DWORD *)v110 = 136315394;
    LOBYTE(v148) = v107[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    v112 = String.init<A>(reflecting:)();
    v148 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v112, v113, v149);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v110 + 12) = 1024;
    v114 = ConversationController.isOneToOneModeEnabled.getter();

    LODWORD(v148) = v114 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl(&dword_1BD004000, v108, v109, "[%s] Updated one-to-one mode to %{BOOL}d", (uint8_t *)v110, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v111, -1, -1);
    MEMORY[0x1C3B751B8](v110, -1, -1);

  }
  else
  {

  }
  v115 = &v107[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
  swift_beginAccess();
  v116 = *(void (**)(_QWORD, _QWORD))v115;
  if (*(_QWORD *)v115)
  {
    swift_retain();
    v117 = ConversationController.isOneToOneModeEnabled.getter();
    v116(v117 & 1, 0);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v116);
  }
  swift_release();
  swift_release();

}

uint64_t closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(_BYTE *a1, _QWORD *a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  char *v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint8_t *v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  char v59;
  char *v60;
  char v61;
  uint64_t *v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  NSObject *v68;
  os_log_type_t v69;
  char v70;
  char v71;
  uint8_t *v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int16 v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  BOOL v100;
  id *v101;
  id v102;
  id v103;
  void *v104;
  uint64_t v105;
  _BYTE *v106;
  NSObject *v107;
  os_log_type_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char *v114;
  uint64_t result;
  void (*v116)(_QWORD, _QWORD);
  char v117;
  _BYTE v118[12];
  int v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint8_t *v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  uint8_t *v129;
  int v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  _BYTE *v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(void);
  _BYTE *v147;
  _BYTE *v148;
  _QWORD v149[42];
  uint64_t v150;
  uint64_t v151[6];
  _QWORD v152[3];
  uint64_t v153;
  uint64_t v154;
  _QWORD v155[3];
  uint64_t v156;
  uint64_t v157;
  _QWORD v158[3];
  uint64_t v159;
  uint64_t v160;
  _QWORD v161[10];
  uint64_t v162;
  _QWORD v163[4];
  unsigned __int8 v164;
  uint64_t v165[8];
  uint64_t v166[10];
  _QWORD v167[10];
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unsigned __int8 v172;
  __int128 v173;
  __int128 v174;
  uint64_t v175;
  unsigned __int8 v176;
  unsigned __int8 v177;
  _BYTE v178[40];
  uint64_t v179[5];
  __int128 v180;
  __int128 v181;
  __int16 v182;
  char v183[16];
  double v184;
  double v185;
  char v186;
  double v187[4];
  char v188;

  v134 = a6;
  v145 = a4;
  v146 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v8);
  v142 = &v118[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v141 = type metadata accessor for Participant(0);
  v10 = MEMORY[0x1E0C80A78](v141);
  v139 = &v118[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = &v118[-v13];
  v15 = MEMORY[0x1E0C80A78](v12);
  v143 = &v118[-v16];
  v17 = MEMORY[0x1E0C80A78](v15);
  v147 = &v118[-v18];
  MEMORY[0x1E0C80A78](v17);
  v20 = &v118[-v19];
  v140 = swift_projectBox();
  v21 = OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter;
  v22 = a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter];
  v23 = a2[3];
  v24 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v23);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 200))(v23, v24);
  v144 = v21;
  a1[v21] = v25 & 1;
  v148 = a1;
  ConversationController.isOneToOneModeEnabledByCallCenter.didset();
  outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v158);
  if (v22 != 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
    outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v155);
    goto LABEL_11;
  }
  v26 = v159;
  v27 = v160;
  __swift_project_boxed_opaque_existential_1(v158, v159);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 200))(v26, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
  outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v155);
  if ((v28 & 1) != 0)
  {
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
    outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v152);
    goto LABEL_12;
  }
  v29 = v156;
  v30 = v157;
  __swift_project_boxed_opaque_existential_1(v155, v156);
  Conversation.displayableActiveParticipants.getter(v29, v30);
  v32 = specialized Set.count.getter(v31);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
  outlined init with copy of RadarReporting((uint64_t)a2, (uint64_t)v152);
  if (v32 != 2)
  {
LABEL_12:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v152);
    goto LABEL_13;
  }
  v33 = v153;
  v34 = v154;
  __swift_project_boxed_opaque_existential_1(v152, v153);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 184))(v33, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v152);
  if ((v35 & 1) != 0)
  {
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v36 = type metadata accessor for Logger();
    __swift_project_value_buffer(v36, (uint64_t)&static Logger.conversationController);
    v37 = Logger.logObject.getter();
    v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_1BD004000, v37, v38, "Handoff is ongoing - we shouldn't switch to square tiles until a timeout", v39, 2u);
      MEMORY[0x1C3B751B8](v39, -1, -1);
    }

  }
LABEL_13:
  v40 = &v148[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  swift_beginAccess();
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v40, (uint64_t)v20, type metadata accessor for Participant);
  Participant.videoInfo.getter();
  v41 = v161[0];
  outlined destroy of AccountUpdateNotice((uint64_t)v20, type metadata accessor for Participant);
  outlined init with take of Any?((uint64_t)v161, (uint64_t)&v168, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v168)
  {
    v138 = v14;
    v42 = v169;
    v43 = BYTE1(v169);
    v167[2] = v170;
    v177 = v176;
    v133 = v168;
    v167[0] = v168;
    v167[1] = v169;
    v128 = BYTE1(v170);
    LODWORD(v129) = BYTE2(v169);
    v132 = BYTE3(v169);
    v126 = BYTE5(v169);
    v127 = BYTE4(v169);
    v124 = HIBYTE(v169);
    v125 = BYTE6(v169);
    v131 = v171;
    v167[3] = v171;
    v130 = v172;
    LOBYTE(v167[4]) = v172;
    *(_QWORD *)((char *)&v167[8] + 1) = v175;
    *(_OWORD *)((char *)&v167[6] + 1) = v174;
    *(_OWORD *)((char *)&v167[4] + 1) = v173;
    BYTE1(v167[9]) = v176;
    swift_bridgeObjectRetain();
    ConversationController.videoProviderForResizingLocal.getter(v166);
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v44 = type metadata accessor for Logger();
    v45 = __swift_project_value_buffer(v44, (uint64_t)&static Logger.conversationController);
    outlined init with copy of RadarReporting((uint64_t)v166, (uint64_t)v149);
    v135 = v45;
    v46 = Logger.logObject.getter();
    v47 = static os_log_type_t.default.getter();
    v48 = os_log_type_enabled(v46, v47);
    v136 = v41;
    v137 = v40;
    if (v48)
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v165[0] = v50;
      *(_DWORD *)v49 = 136315138;
      v123 = v49 + 4;
      outlined init with copy of RadarReporting((uint64_t)v149, (uint64_t)v179);
      v51 = v43;
      v52 = v42;
      v53 = specialized >> prefix<A>(_:)((uint64_t)v179);
      v55 = v54;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v179, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
      v56 = v53;
      v42 = v52;
      v43 = v51;
      v179[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v55, v165);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
      _os_log_impl(&dword_1BD004000, v46, v47, "Resizing local preview with video provider: %s", v49, 0xCu);
      swift_arrayDestroy();
      v57 = v50;
      v40 = v137;
      MEMORY[0x1C3B751B8](v57, -1, -1);
      MEMORY[0x1C3B751B8](v49, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    }

    outlined init with copy of RadarReporting((uint64_t)v166, (uint64_t)v149);
    v58 = v148;
    v59 = ConversationController.isOneToOneModeEnabled.getter();
    v60 = &v58[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera];
    swift_beginAccess();
    v61 = *v60;
    v62 = (uint64_t *)&v58[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
    swift_beginAccess();
    v63 = *v62;
    v64 = v147;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v40, (uint64_t)v147, type metadata accessor for Participant);
    Participant.aspectRatio.getter();
    outlined destroy of AccountUpdateNotice((uint64_t)v64, type metadata accessor for Participant);
    AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(v149, v59 & 1, 1, v61, v63, (uint64_t)&v162, (uint64_t)v163, 1.0, 1.0);
    v65 = v163[0];
    v66 = v163[1];
    v122 = v163[3];
    v123 = (uint8_t *)v163[2];
    v121 = v164;
    outlined init with take of AspectRatio((uint64_t)v163, (uint64_t)&v167[5]);
    if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
    {
      v67 = 0;
      LOBYTE(v167[2]) = 0;
    }
    else
    {
      v67 = v167[2];
    }
    swift_bridgeObjectRetain();
    v68 = Logger.logObject.getter();
    v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      v135 = v66;
      v70 = v42 & 1;
      v120 = v65;
      v71 = v129 & 1;
      v119 = v127 & 1;
      v125 &= 1u;
      v126 &= 1u;
      v124 &= 1u;
      v127 = v177;
      v128 &= 1u;
      v72 = (uint8_t *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v74 = v67;
      v75 = v73;
      v179[0] = v73;
      *(_DWORD *)v72 = 136315138;
      v129 = v72 + 4;
      v149[0] = v133;
      LOBYTE(v149[1]) = v70;
      BYTE1(v149[1]) = v43 & 1;
      v40 = v137;
      BYTE2(v149[1]) = v71;
      BYTE3(v149[1]) = v132;
      BYTE4(v149[1]) = v119;
      BYTE5(v149[1]) = v126;
      BYTE6(v149[1]) = v125;
      HIBYTE(v149[1]) = v124;
      LOBYTE(v149[2]) = v74;
      BYTE1(v149[2]) = v128;
      v149[3] = v131;
      LOBYTE(v149[4]) = v130;
      v149[5] = v120;
      v149[6] = v135;
      v149[7] = v123;
      v149[8] = v122;
      LOBYTE(v149[9]) = v121;
      BYTE1(v149[9]) = v127;
      swift_bridgeObjectRetain();
      v76 = String.init<A>(reflecting:)();
      v149[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v77, v179);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of LinearGradient((uint64_t)v161);
      outlined release of LinearGradient((uint64_t)v161);
      _os_log_impl(&dword_1BD004000, v68, v69, "Due to one-to-one change, updated local participant videoInfo to %s", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v75, -1, -1);
      MEMORY[0x1C3B751B8](v72, -1, -1);
    }
    else
    {
      outlined release of LinearGradient((uint64_t)v161);
      outlined release of LinearGradient((uint64_t)v161);
    }

    v78 = v143;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v40, (uint64_t)v143, type metadata accessor for Participant);
    ConversationController.conversationIsAVLess.getter();
    swift_beginAccess();
    if (BYTE1(v167[1]))
      v79 = 256;
    else
      v79 = 0;
    v80 = 0x10000;
    if (!BYTE2(v167[1]))
      v80 = 0;
    v81 = v79 | LOBYTE(v167[1]) | v80 | ((unint64_t)BYTE3(v167[1]) << 24);
    v82 = 0x100000000;
    if (!BYTE4(v167[1]))
      v82 = 0;
    v83 = 0x10000000000;
    if (!BYTE5(v167[1]))
      v83 = 0;
    v84 = v82 | v83;
    v85 = 0x1000000000000;
    if (!BYTE6(v167[1]))
      v85 = 0;
    v86 = v84 | v85;
    v87 = 0x100000000000000;
    if (!HIBYTE(v167[1]))
      v87 = 0;
    v88 = v81 | v86 | v87;
    if (BYTE1(v167[2]))
      v89 = 256;
    else
      v89 = 0;
    v90 = v89 | LOBYTE(v167[2]);
    if (BYTE1(v167[9]))
      v91 = 256;
    else
      v91 = 0;
    v179[0] = v167[0];
    v179[1] = v88;
    v179[2] = v90;
    v179[3] = v167[3];
    v179[4] = LOBYTE(v167[4]);
    v180 = *(_OWORD *)&v167[5];
    v181 = *(_OWORD *)&v167[7];
    v182 = v91 | LOBYTE(v167[9]);
    memset(v149, 0, 24);
    v149[3] = 1;
    bzero(&v149[4], 0xB1uLL);
    v92 = (uint64_t)v138;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v40, (uint64_t)v138, type metadata accessor for Participant);
    v93 = Participant.captionInfo.getter();
    outlined destroy of AccountUpdateNotice(v92, type metadata accessor for Participant);
    Participant.copresenceInfo.getter(v165);
    v94 = v147;
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v165);
    outlined consume of Participant.CaptionInfo?(v93);
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v149, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of AccountUpdateNotice((uint64_t)v78, type metadata accessor for Participant);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v166);
    swift_beginAccess();
    outlined assign with take of Participant((uint64_t)v94, (uint64_t)v40);
    swift_endAccess();
  }
  v146();
  if (v148[v144] == 1)
  {
    v95 = v140;
    swift_beginAccess();
    v96 = v95;
    v97 = v142;
    outlined init with copy of FeatureEligibility?(v96, (uint64_t)v142, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v141) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v97, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      v98 = v139;
      outlined init with take of StagedCollaboration((uint64_t)v97, (uint64_t)v139, type metadata accessor for Participant);
      Participant.videoInfo.getter();
      outlined init with take of Any?((uint64_t)v166, (uint64_t)v167, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
      if (!v167[0])
        goto LABEL_64;
      memcpy(v149, v167, 0x4AuLL);
      outlined release of LinearGradient((uint64_t)v166);
      outlined init with take of AspectRatio((uint64_t)&v149[5], (uint64_t)v178);
      outlined init with take of AspectRatio((uint64_t)v178, (uint64_t)v187);
      if ((v188 & 1) == 0 && (v187[0] != 1.0 || v187[1] != 1.0))
        goto LABEL_64;
      if (((outlined init with take of AspectRatio((uint64_t)v178, (uint64_t)v183), (v186 & 1) != 0)
         || (v184 == 1.0 ? (v100 = v185 == 1.0) : (v100 = 0), v100))
        && (v101 = (id *)(v134 + 16), swift_beginAccess(), *v101))
      {
        v102 = *v101;
        v103 = objc_msgSend(v102, sel_remoteVideoAttributes);
        if (v103)
        {
          v104 = v103;
          ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)();

          outlined destroy of AccountUpdateNotice((uint64_t)v98, type metadata accessor for Participant);
        }
        else
        {
          outlined destroy of AccountUpdateNotice((uint64_t)v98, type metadata accessor for Participant);

        }
      }
      else
      {
LABEL_64:
        outlined destroy of AccountUpdateNotice((uint64_t)v98, type metadata accessor for Participant);
      }
    }
  }
  if (one-time initialization token for conversationController != -1)
    swift_once();
  v105 = type metadata accessor for Logger();
  __swift_project_value_buffer(v105, (uint64_t)&static Logger.conversationController);
  v106 = v148;
  v107 = Logger.logObject.getter();
  v108 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v107, v108))
  {
    v109 = swift_slowAlloc();
    v110 = swift_slowAlloc();
    v151[0] = v110;
    *(_DWORD *)v109 = 136315394;
    LOBYTE(v150) = v106[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    v111 = String.init<A>(reflecting:)();
    v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v111, v112, v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v109 + 12) = 1024;
    v113 = ConversationController.isOneToOneModeEnabled.getter();

    LODWORD(v150) = v113 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl(&dword_1BD004000, v107, v108, "[%s] Updated one-to-one mode to %{BOOL}d", (uint8_t *)v109, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v110, -1, -1);
    MEMORY[0x1C3B751B8](v109, -1, -1);

  }
  else
  {

  }
  v114 = &v106[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
  result = swift_beginAccess();
  v116 = *(void (**)(_QWORD, _QWORD))v114;
  if (*(_QWORD *)v114)
  {
    swift_retain();
    v117 = ConversationController.isOneToOneModeEnabled.getter();
    v116(v117 & 1, 0);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v116);
  }
  return result;
}

uint64_t ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)()
{
  void *v0;
  char v1;
  char v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  v9 = (_QWORD *)OUTLINED_FUNCTION_15();
  v10 = v9;
  v9[2] = v6;
  v9[3] = v4;
  v9[4] = v0;
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_59((uint64_t)v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v11 = v0;
    v12 = v4;
    v13 = v6;
    static OS_dispatch_queue.main.getter();
    v14 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v14 + 16) = partial apply for closure #1 in ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:);
    *(_QWORD *)(v14 + 24) = v10;
    OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
    OUTLINED_FUNCTION_14_11();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_269();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    OUTLINED_FUNCTION_385_1();
    OUTLINED_FUNCTION_332_4();
    OUTLINED_FUNCTION_215_4();
  }
  v15 = v0;
  v16 = v4;
  v17 = OUTLINED_FUNCTION_762();
  closure #1 in ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)(v17, v0, v15);
  return swift_release();
}

void closure #3 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = (void *)MEMORY[0x1C3B752C0](a1 + 16);
  if (v9)
  {
    v10 = v9;
    if (*((_BYTE *)v9
         + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo) == 1)
    {
      if (one-time initialization token for conversationController != -1)
        swift_once();
      v11 = type metadata accessor for Logger();
      v12 = __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationController);
      v13 = v10;
      v14 = Logger.logObject.getter();
      v15 = static os_log_type_t.default.getter();
      v16 = os_log_type_enabled(v14, v15);
      v37[1] = a3;
      v38 = a2;
      if (v16)
      {
        v17 = swift_slowAlloc();
        v37[0] = v12;
        v18 = (uint8_t *)v17;
        v19 = swift_slowAlloc();
        *(_DWORD *)v18 = 136315138;
        v44[0] = v19;
        LOBYTE(v41) = v13[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
        v20 = String.init<A>(reflecting:)();
        *(_QWORD *)&v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v14, v15, "[%s] Timed out waiting for first non-square remote video frame", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v19, -1, -1);
        MEMORY[0x1C3B751B8](v18, -1, -1);

      }
      else
      {

      }
      ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.setter(0);
      ConversationController.lookupActiveConversation()();
      if (v42)
      {
        outlined init with take of Notice(&v41, (uint64_t)v44);
        v22 = v45;
        v23 = v46;
        __swift_project_boxed_opaque_existential_1(v44, v45);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 200))(v22, v23) & 1) != 0)
        {
          outlined init with copy of RadarReporting((uint64_t)v44, (uint64_t)&v41);
          v13 = v13;
          v24 = Logger.logObject.getter();
          v25 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v24, v25))
          {
            v26 = swift_slowAlloc();
            v37[0] = swift_slowAlloc();
            v40 = v37[0];
            *(_DWORD *)v26 = 136315394;
            LOBYTE(v39) = v13[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
            v27 = String.init<A>(reflecting:)();
            v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, &v40);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v26 + 12) = 2080;
            v29 = v42;
            v30 = v43;
            __swift_project_boxed_opaque_existential_1(&v41, v42);
            (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
            v31 = type metadata accessor for UUID();
            __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v31);
            specialized >> prefix<A>(_:)((uint64_t)v8);
            v33 = v32;
            v35 = v34;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v35, &v40);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
            _os_log_impl(&dword_1BD004000, v24, v25, "[%s] Triggering delayed one-to-one update for conversation: %s", (uint8_t *)v26, 0x16u);
            v36 = v37[0];
            swift_arrayDestroy();
            MEMORY[0x1C3B751B8](v36, -1, -1);
            MEMORY[0x1C3B751B8](v26, -1, -1);
          }
          else
          {

            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
          }

          v38();
        }

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      }
      else
      {

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v41, &demangling cache variable for type metadata for Conversation?);
      }
    }
    else
    {

    }
  }
}

void ConversationController.callCenter(_:avModeChangedFor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (**v21)(uint64_t);
  void (*v22)(uint64_t);
  uint64_t v23;
  __n128 *v24;
  unint64_t v25;
  _QWORD v26[7];
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v6 = v5;
  v26[1] = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_55_3();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v26 - v9;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_83_4();
  OUTLINED_FUNCTION_59(v12, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v3 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_175_3(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  v13 = OUTLINED_FUNCTION_333_4();
  OUTLINED_FUNCTION_147_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
LABEL_4:
    if ((OUTLINED_FUNCTION_110_2() & 1) != 0)
    {
      v15 = v28;
      __swift_project_boxed_opaque_existential_1(&v27, v28);
      OUTLINED_FUNCTION_76_22(v15);
      v16 = v6[3];
      __swift_project_boxed_opaque_existential_1(v6, v16);
      OUTLINED_FUNCTION_76_22(v16);
      v17 = OUTLINED_FUNCTION_233_4();
      OUTLINED_FUNCTION_67_0(v1);
      OUTLINED_FUNCTION_67_0((uint64_t)v10);
      if ((v17 & 1) != 0)
      {
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        *(_OWORD *)(OUTLINED_FUNCTION_15() + 16) = xmmword_1BD6441D0;
        v18 = v6[4];
        __swift_project_boxed_opaque_existential_1(v6, v6[3]);
        v19 = OUTLINED_FUNCTION_312_0(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 264));
        OUTLINED_FUNCTION_624_0(v19);
        OUTLINED_FUNCTION_205_5();
        OUTLINED_FUNCTION_286_4();
        v20 = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
        OUTLINED_FUNCTION_825(v20);
        OUTLINED_FUNCTION_239_1();
        OUTLINED_FUNCTION_133();
        v21 = (void (**)(uint64_t))(v4
                                            + OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
        OUTLINED_FUNCTION_1();
        v22 = *v21;
        if (*v21)
        {
          OUTLINED_FUNCTION_80_20(v6, v6[3]);
          OUTLINED_FUNCTION_1_28();
          v23 = OUTLINED_FUNCTION_822();
          v22(v23);
          OUTLINED_FUNCTION_14_60((uint64_t)v22);
        }
      }
    }
    OUTLINED_FUNCTION_12_6();
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_161_9();
  if (v26[5])
  {
    OUTLINED_FUNCTION_54_38();
    if (one-time initialization token for shared == -1)
      goto LABEL_4;
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_69_25(v14, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v24 = (__n128 *)OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_82_13(v24, (__n128)xmmword_1BD6441D0);
  OUTLINED_FUNCTION_143_8();
  OUTLINED_FUNCTION_439_0();
  v25 = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
  OUTLINED_FUNCTION_552_0(v25);
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_53();
LABEL_14:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:resolvedAudioVideoModeChangedFor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (**v19)(uint64_t);
  void (*v20)(uint64_t);
  uint64_t v21;
  __n128 *v22;
  unint64_t v23;
  _QWORD v24[12];

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v6 = v5;
  v24[1] = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v24 - v9;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_83_4();
  OUTLINED_FUNCTION_59(v12, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v3 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_175_3(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v13 = OUTLINED_FUNCTION_333_4();
  OUTLINED_FUNCTION_147_7(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_161_9();
  if (!v24[5])
  {
    OUTLINED_FUNCTION_69_25(v14, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_10:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v22 = (__n128 *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_82_13(v22, (__n128)xmmword_1BD6441D0);
      OUTLINED_FUNCTION_143_8();
      OUTLINED_FUNCTION_362_3();
      v23 = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_407_1(v23);
      OUTLINED_FUNCTION_61_30();
      OUTLINED_FUNCTION_133();
      goto LABEL_11;
    }
LABEL_13:
    swift_once();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_22_86();
  OUTLINED_FUNCTION_33_67(v6);
  v15 = OUTLINED_FUNCTION_146_6();
  OUTLINED_FUNCTION_194_3(v2);
  OUTLINED_FUNCTION_194_3((uint64_t)v10);
  if ((v15 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    *(_OWORD *)(OUTLINED_FUNCTION_15() + 16) = xmmword_1BD6441D0;
    v16 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    v17 = OUTLINED_FUNCTION_312_0(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 264));
    OUTLINED_FUNCTION_624_0(v17);
    OUTLINED_FUNCTION_205_5();
    OUTLINED_FUNCTION_286_4();
    v18 = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_825(v18);
    OUTLINED_FUNCTION_239_1();
    OUTLINED_FUNCTION_133();
    v19 = (void (**)(uint64_t))(v4
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
    OUTLINED_FUNCTION_1();
    v20 = *v19;
    if (*v19)
    {
      OUTLINED_FUNCTION_80_20(v6, v6[3]);
      OUTLINED_FUNCTION_1_28();
      v21 = OUTLINED_FUNCTION_822();
      v20(v21);
      OUTLINED_FUNCTION_14_60((uint64_t)v20);
    }
  }
  OUTLINED_FUNCTION_12_6();
LABEL_11:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:removedActiveConversation:)()
{
  void *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  NSObject *v28;
  _BYTE *v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (**v49)(uint64_t, uint64_t);
  void *v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t, uint64_t, uint64_t);
  char v100;
  _BYTE *v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD v115[3];
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  NSObject *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128[5];
  _QWORD v129[6];

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v6 = v5;
  v120 = OUTLINED_FUNCTION_15_6();
  v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_5_27();
  v124 = (char *)v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_62();
  v125 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_5_27();
  v116 = v16;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v17);
  v119 = (uint64_t)v115 - v18;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  v123 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v115 - v22;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v25, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_533((uint64_t)v2, *MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v26 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_39_0((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v26 & 1) != 0)
  {
    if (one-time initialization token for conversationController == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v27 = OUTLINED_FUNCTION_17_2();
  v28 = __swift_project_value_buffer(v27, (uint64_t)&static Logger.conversationController);
  outlined init with copy of RadarReporting((uint64_t)v6, (uint64_t)v129);
  v29 = v4;
  v30 = Logger.logObject.getter();
  v31 = static os_log_type_t.error.getter();
  v121 = v31;
  v32 = os_log_type_enabled(v30, v31);
  v126 = v10;
  v117 = v9;
  if (v32)
  {
    v33 = OUTLINED_FUNCTION_105();
    v122 = v28;
    v115[2] = v6;
    v34 = v33;
    v35 = OUTLINED_FUNCTION_105();
    v128[0] = OUTLINED_FUNCTION_812(v35);
    *(_DWORD *)v34 = 136315394;
    LOBYTE(v127) = v29[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    v36 = OUTLINED_FUNCTION_837();
    v127 = OUTLINED_FUNCTION_623(v36, v37);
    v115[1] = v3;
    OUTLINED_FUNCTION_137_0();

    OUTLINED_FUNCTION_21_0();
    *(_WORD *)(v34 + 12) = 2080;
    OUTLINED_FUNCTION_33_67(v129);
    v38 = OUTLINED_FUNCTION_782();
    __swift_storeEnumTagSinglePayload(v38, v39, v40, v41);
    specialized >> prefix<A>(_:)((uint64_t)v23);
    OUTLINED_FUNCTION_257_1();
    OUTLINED_FUNCTION_275(v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v43 = OUTLINED_FUNCTION_157();
    v127 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, v45);
    OUTLINED_FUNCTION_82_8();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_100_2();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v30, (os_log_type_t)v121, "%s Received removedActiveConversation: %s", (uint8_t *)v34);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_100_2();
  v46 = v29;
  OUTLINED_FUNCTION_226_2();
  if (v128[3])
  {
    OUTLINED_FUNCTION_191_1();
    v48 = v125;
    OUTLINED_FUNCTION_73_24();
    v49 = (uint64_t (**)(uint64_t, uint64_t))v6[4];
    OUTLINED_FUNCTION_195_5(v6);
    v50 = v124;
    OUTLINED_FUNCTION_73_24();
    v51 = OUTLINED_FUNCTION_233_4();
    OUTLINED_FUNCTION_592((uint64_t)v50);
    OUTLINED_FUNCTION_592(v48);
    if ((v51 & 1) != 0)
    {
      OUTLINED_FUNCTION_310_3();
      if (OUTLINED_FUNCTION_36_4(v49[8]) == 2)
      {
        OUTLINED_FUNCTION_513_0();
        if (OUTLINED_FUNCTION_36_4(v49[8]) == 3)
        {
          OUTLINED_FUNCTION_310_3();
          if (OUTLINED_FUNCTION_36_4(v49[7]) == 1)
          {
            OUTLINED_FUNCTION_310_3();
            v52 = OUTLINED_FUNCTION_36_4(v49[27]);
            if (v52)
            {
              v50 = (void *)v52;
              OUTLINED_FUNCTION_513_0();
              v53 = OUTLINED_FUNCTION_36_4(v49[27]);
              if (v53)
              {
                v54 = (void *)v53;
                if (OUTLINED_FUNCTION_53_0(v50, sel_isEquivalentToConversationLink_))
                {
                  if (one-time initialization token for conversationKit != -1)
                    swift_once();
                  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                  v55 = OUTLINED_FUNCTION_15();
                  *(_OWORD *)(v55 + 16) = xmmword_1BD645380;
                  v56 = v6[3];
                  v57 = v6[4];
                  OUTLINED_FUNCTION_4_0(v6);
                  v58 = OUTLINED_FUNCTION_577();
                  v59(v58, v57);
                  OUTLINED_FUNCTION_208_4();
                  OUTLINED_FUNCTION_257_1();
                  OUTLINED_FUNCTION_109_0(v60, (uint64_t *)&demangling cache variable for type metadata for UUID?);
                  v61 = MEMORY[0x1E0DEA968];
                  *(_QWORD *)(v55 + 56) = MEMORY[0x1E0DEA968];
                  v62 = lazy protocol witness table accessor for type String and conformance String();
                  *(_QWORD *)(v55 + 64) = v62;
                  *(_QWORD *)(v55 + 32) = v6;
                  *(_QWORD *)(v55 + 40) = v56;
                  v128[0] = (uint64_t)v50;
                  OUTLINED_FUNCTION_59(v62, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
                  v63 = v50;
                  v64 = OUTLINED_FUNCTION_680();
                  *(_QWORD *)(v55 + 96) = v61;
                  *(_QWORD *)(v55 + 104) = v62;
                  *(_QWORD *)(v55 + 72) = v64;
                  *(_QWORD *)(v55 + 80) = v65;
                  static os_log_type_t.default.getter();
                  OUTLINED_FUNCTION_127_5();
                  OUTLINED_FUNCTION_527_0();

                  OUTLINED_FUNCTION_30_4();
                  goto LABEL_36;
                }

                v50 = v54;
              }

            }
          }
        }
      }
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v113 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v113 + 16) = xmmword_1BD6441D0;
      v128[0] = (uint64_t)v46;
      v46;
      OUTLINED_FUNCTION_648_0();
      OUTLINED_FUNCTION_790();
      *(_QWORD *)(v113 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v113 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v113 + 32) = v48;
      *(_QWORD *)(v113 + 40) = v50;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_328_3();
      OUTLINED_FUNCTION_27();
      outlined init with copy of RadarReporting((uint64_t)v6, (uint64_t)v128);
      ConversationController.update(with:)((uint64_t)v128);
      OUTLINED_FUNCTION_159_8(v114, &demangling cache variable for type metadata for Conversation?);
    }
LABEL_36:
    OUTLINED_FUNCTION_100_2();
    goto LABEL_37;
  }
  v124 = v23;
  OUTLINED_FUNCTION_159_8(v47, &demangling cache variable for type metadata for Conversation?);
  v66 = v29;
  v122 = v28;
  Logger.logObject.getter();
  v67 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_5_3(v67))
  {
    v68 = OUTLINED_FUNCTION_105();
    v129[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v68 = 136315394;
    LOBYTE(v128[0]) = v66[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    v69 = String.init<A>(reflecting:)();
    v128[0] = OUTLINED_FUNCTION_314_2(v69, v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    OUTLINED_FUNCTION_21_0();
    *(_WORD *)(v68 + 12) = 2080;
    v128[0] = (uint64_t)v66;
    v71 = v66;
    v72 = OUTLINED_FUNCTION_648_0();
    v74 = OUTLINED_FUNCTION_314_2(v72, v73);
    OUTLINED_FUNCTION_370_3(v74);

    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v28, (os_log_type_t)v30, "%s Unable to lookup active conversation in CallCenterProviderDelegate removedActiveConversation: callback - %s", (uint8_t *)v68);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  v75 = v126;
  v76 = (uint64_t)v117;
  v77 = (uint64_t)&v66[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID];
  OUTLINED_FUNCTION_1();
  v78 = &demangling cache variable for type metadata for UUID?;
  v79 = v123;
  OUTLINED_FUNCTION_63_4(v77, v123);
  v80 = v6[3];
  v81 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v80);
  v82 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
  v83 = v81;
  v84 = v119;
  v82(v80, v83);
  OUTLINED_FUNCTION_3_68(v84, 0);
  v85 = v76 + *(int *)(v118 + 48);
  OUTLINED_FUNCTION_490_0();
  outlined init with copy of FeatureEligibility?(v86, v87, v88);
  v89 = OUTLINED_FUNCTION_131();
  OUTLINED_FUNCTION_63_4(v89, v90);
  v91 = OUTLINED_FUNCTION_312();
  OUTLINED_FUNCTION_69_0(v91, v92, v75);
  if (!v95)
  {
    v94 = v116;
    outlined init with copy of FeatureEligibility?(v76, v116, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_69_0(v85, 1, v75);
    if (!v95)
    {
      v96 = v125;
      v97 = OUTLINED_FUNCTION_131();
      OUTLINED_FUNCTION_107_0(v97, v98, v99);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      v100 = dispatch thunk of static Equatable.== infix(_:_:)();
      v78 = *(void **)(v3 + 8);
      OUTLINED_FUNCTION_603(v96);
      OUTLINED_FUNCTION_9_42(v119);
      OUTLINED_FUNCTION_9_42(v123);
      OUTLINED_FUNCTION_603(v94);
      OUTLINED_FUNCTION_9_42(v76);
      if ((v100 & 1) == 0)
        goto LABEL_37;
      goto LABEL_28;
    }
    OUTLINED_FUNCTION_25_0(v84);
    OUTLINED_FUNCTION_25_0(v123);
    v93 = OUTLINED_FUNCTION_584(v94, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
LABEL_26:
    OUTLINED_FUNCTION_219(v93, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_37;
  }
  OUTLINED_FUNCTION_9_42(v84);
  OUTLINED_FUNCTION_9_42(v79);
  v93 = OUTLINED_FUNCTION_69_0(v85, 1, v75);
  if (!v95)
    goto LABEL_26;
  OUTLINED_FUNCTION_219(v93, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_28:
  v101 = v66;
  v102 = v122;
  Logger.logObject.getter();
  v103 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_5_3(v103))
  {
    v104 = OUTLINED_FUNCTION_105();
    v125 = OUTLINED_FUNCTION_105();
    v128[0] = v125;
    *(_DWORD *)v104 = 136315394;
    LOBYTE(v127) = v101[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    v105 = OUTLINED_FUNCTION_837();
    v127 = OUTLINED_FUNCTION_623(v105, v106);
    OUTLINED_FUNCTION_7_53();

    OUTLINED_FUNCTION_21_0();
    *(_WORD *)(v104 + 12) = 2080;
    v107 = (uint64_t)v124;
    outlined init with copy of FeatureEligibility?(v77, (uint64_t)v124, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_818();
    v109 = v108;
    v111 = v110;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v107, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v127 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v109, v111, v128);
    OUTLINED_FUNCTION_7_53();

    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v102, (os_log_type_t)v78, "%s Removed conversation has the same UUID as the conversation we are tracking %s, clearing our UUID", (uint8_t *)v104);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  v112 = (uint64_t)v124;
  OUTLINED_FUNCTION_3_68((uint64_t)v124, 1);
  ConversationController.conversationUUID.setter(v112);
LABEL_37:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:addedActiveConversation:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[10];

  OUTLINED_FUNCTION_96();
  v5 = v4;
  v6 = OUTLINED_FUNCTION_15_6();
  v7 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_138_0();
  ConversationController.lookupActiveConversation()();
  if (v14[3])
  {
    OUTLINED_FUNCTION_672_0();
    OUTLINED_FUNCTION_221_5();
    OUTLINED_FUNCTION_107_12();
    OUTLINED_FUNCTION_820();
    OUTLINED_FUNCTION_107_12();
    OUTLINED_FUNCTION_146_6();
    v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v10(v1, v7);
    v10(v2, v7);
    OUTLINED_FUNCTION_316_4();
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v11 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
    v14[5] = v0;
    v0;
    OUTLINED_FUNCTION_204_5();
    OUTLINED_FUNCTION_257_1();
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v11 + 32) = v0;
    *(_QWORD *)(v11 + 40) = v6;
    OUTLINED_FUNCTION_168_3();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_80_20(v5, v5[3]);
    v12 = objc_msgSend((id)OUTLINED_FUNCTION_801(), sel_currentVideoCallCount);
    OUTLINED_FUNCTION_113();
    if (v12 == (id)1)
    {
      v13 = objc_msgSend((id)OUTLINED_FUNCTION_801(), sel_currentVideoCall);
      OUTLINED_FUNCTION_10();
      if (v13)
      {
        if (objc_msgSend(v13, sel_isActive))
        {
          static os_log_type_t.default.getter();
          OUTLINED_FUNCTION_255();
          ConversationController.processCurrentCall(_:)(v13);
        }

      }
    }
  }
  OUTLINED_FUNCTION_65_1();
}

void ConversationController.processCurrentCall(_:)(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __n128 v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char **v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(_BYTE *, uint64_t);
  uint64_t *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(__int128 *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v44;
  char v45;
  uint64_t *v46;
  const char *v47;
  id v48;
  id v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(_QWORD);
  char v59;
  __int128 *v60;
  uint64_t v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t ObjectType;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _BYTE v74[4];
  int v75;
  uint64_t v76;
  id v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;

  v2 = v1;
  v77 = a1;
  v3 = type metadata accessor for UUID();
  v76 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v74[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v74[-v7];
  v9 = type metadata accessor for DispatchPredicate();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)&v74[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  v14 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
  swift_beginAccess();
  outlined init with copy of RadarReporting(v14, (uint64_t)v86);
  v15 = v88;
  v16 = __swift_project_boxed_opaque_existential_1(v86, v87);
  v17 = MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)&v74[-16] = v2;
  v18 = (_QWORD *)(*(uint64_t (**)(BOOL (*)(uint64_t, uint64_t), __n128))(v15 + 208))(partial apply for closure #1 in ConversationController.processCurrentCall(_:), v17);
  if (v18[2])
  {
    v19 = v18[4];
    v20 = v18[5];
    swift_unknownObjectRetain();
  }
  else
  {
    v19 = 0;
    v20 = 0;
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  ConversationController.lookupActiveConversation()();
  if (v84)
  {
    outlined init with take of Notice(&v83, (uint64_t)v86);
    if (!v19
      || (v21 = swift_getObjectType(),
          (*(unsigned int (**)(uint64_t, unint64_t))(v20 + 184))(v21, v20) == 4))
    {
      ConversationController.hasRingingCalls.getter();
      v75 = v22;
      outlined init with copy of RadarReporting(v14, (uint64_t)&v80);
      v24 = v81;
      v23 = v82;
      __swift_project_boxed_opaque_existential_1(&v80, v81);
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
      (*(void (**)(__int128 *__return_ptr, id, uint64_t, uint64_t, uint64_t))(v23 + 104))(&v78, v77, v25, v24, v23);
      v26 = &metadata instantiation cache for protocol conformance descriptor for ImageNames.Roster;
      v27 = &selRef_inputDevices;
      if (v79)
      {
        outlined init with take of Notice(&v78, (uint64_t)&v83);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
        v28 = v84;
        v29 = v85;
        __swift_project_boxed_opaque_existential_1(&v83, v84);
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
        v30 = v87;
        v31 = v88;
        __swift_project_boxed_opaque_existential_1(v86, v87);
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v32 = dispatch thunk of static Equatable.== infix(_:_:)();
        v33 = *(void (**)(_BYTE *, uint64_t))(v76 + 8);
        v33(v5, v3);
        v33(v8, v3);
        if ((v32 & 1) != 0 || objc_msgSend(v77, sel_status) != 4)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
          v34 = (uint64_t *)&v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs];
          swift_beginAccess();
          v35 = *v34;
          swift_bridgeObjectRetain();
          v36 = objc_msgSend(v77, sel_uniqueProxyIdentifierUUID);
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          MEMORY[0x1E0C80A78](v37);
          *(_QWORD *)&v74[-16] = v8;
          LOBYTE(v36) = specialized Sequence.contains(where:)((uint64_t (*)(char *))closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)&v74[-32], v35);
          v33(v8, v3);
          swift_bridgeObjectRelease();
          if ((v36 & 1) == 0)
          {
            v38 = objc_msgSend(v77, sel_uniqueProxyIdentifierUUID);
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            swift_beginAccess();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            v39 = *(_QWORD *)(*v34 + 16);
            specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v39);
            v40 = *v34;
            *(_QWORD *)(v40 + 16) = v39 + 1;
            (*(void (**)(unint64_t, _BYTE *, uint64_t))(v76 + 32))(v40+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(_QWORD *)(v76 + 72) * v39, v8, v3);
LABEL_27:
            swift_endAccess();
            goto LABEL_28;
          }
        }
        v27 = &selRef_inputDevices;
        v26 = (_QWORD *)&metadata instantiation cache for protocol conformance descriptor for ImageNames.Roster;
      }
      else
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v78, &demangling cache variable for type metadata for Conversation?);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
      }
      v46 = (uint64_t *)&v2[v26[441]];
      swift_beginAccess();
      v20 = *v46;
      swift_bridgeObjectRetain();
      v47 = v27[181];
      v48 = v77;
      v49 = objc_msgSend(v77, v47);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      MEMORY[0x1E0C80A78](v50);
      *(_QWORD *)&v74[-16] = v8;
      LOBYTE(v49) = specialized Sequence.contains(where:)((uint64_t (*)(char *))_sSTsSQ7ElementRpzrlE8containsySbABFSbABXEfU_Say10Foundation4UUIDVG_Tg5TA_0, (uint64_t)&v74[-32], v20);
      (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v8, v3);
      swift_bridgeObjectRelease();
      if ((v49 & 1) == 0
        || objc_msgSend(v48, sel_status) != 6 && objc_msgSend(v48, sel_status) != 5)
      {
LABEL_28:
        ConversationController.hasRingingCalls.getter();
        if ((v75 & 1) == (v51 & 1))
          goto LABEL_32;
        if (one-time initialization token for conversationKit == -1)
        {
LABEL_30:
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v52 = swift_allocObject();
          *(_OWORD *)(v52 + 16) = xmmword_1BD6441D0;
          ConversationController.hasRingingCalls.getter();
          LOBYTE(v80) = v53 & 1;
          v54 = String.init<A>(reflecting:)();
          v56 = v55;
          *(_QWORD *)(v52 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v52 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(_QWORD *)(v52 + 32) = v54;
          *(_QWORD *)(v52 + 40) = v56;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();
          swift_bridgeObjectRelease();
          v57 = &v2[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls];
          swift_beginAccess();
          v58 = *(void (**)(_QWORD))v57;
          if (*(_QWORD *)v57)
          {
            swift_retain();
            ConversationController.hasRingingCalls.getter();
            v58(v59 & 1);
            swift_unknownObjectRelease();
            outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v58);
LABEL_39:
            v60 = (__int128 *)v86;
            goto LABEL_40;
          }
LABEL_32:
          swift_unknownObjectRelease();
          goto LABEL_39;
        }
LABEL_42:
        swift_once();
        goto LABEL_30;
      }
      swift_beginAccess();
      if (*(_QWORD *)(*v46 + 16) >= specialized MutableCollection._halfStablePartition(isSuffixElement:)(v46, v48))
      {
        specialized Array.replaceSubrange<A>(_:with:)();
        goto LABEL_27;
      }
      __break(1u);
LABEL_44:
      swift_once();
LABEL_35:
      v61 = type metadata accessor for Logger();
      __swift_project_value_buffer(v61, (uint64_t)&static Logger.conversationController);
      swift_unknownObjectRetain_n();
      v62 = v2;
      v63 = Logger.logObject.getter();
      v64 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = swift_slowAlloc();
        v66 = swift_slowAlloc();
        *(_QWORD *)&v80 = v66;
        *(_DWORD *)v65 = 136315394;
        LOBYTE(v83) = v62[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
        v67 = String.init<A>(reflecting:)();
        *(_QWORD *)&v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v68, (uint64_t *)&v80);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v65 + 12) = 2080;
        ObjectType = swift_getObjectType();
        *(_QWORD *)&v83 = (*(uint64_t (**)(uint64_t, unint64_t))(v20 + 192))(ObjectType, v20);
        *((_QWORD *)&v83 + 1) = v70;
        v71 = String.init<A>(reflecting:)();
        *(_QWORD *)&v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, (uint64_t *)&v80);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v63, v64, "%s Migrating to track new call with UPI %s", (uint8_t *)v65, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v66, -1, -1);
        MEMORY[0x1C3B751B8](v65, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      v73 = swift_getObjectType();
      specialized ConversationController.migrate(to:with:isUpgrade:)(v86, v19, 0, v62, v73, v20);
      swift_unknownObjectRelease_n();
      goto LABEL_39;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
LABEL_18:
    outlined init with copy of RadarReporting(v14, (uint64_t)&v83);
    v41 = v84;
    v42 = v85;
    __swift_project_boxed_opaque_existential_1(&v83, v84);
    v43 = *(void (**)(__int128 *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v42 + 104);
    v44 = swift_unknownObjectRetain();
    v43(&v80, v44, v20, v41, v42);
    if (!v81)
    {
      swift_unknownObjectRelease_n();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v80, &demangling cache variable for type metadata for Conversation?);
      v60 = &v83;
LABEL_40:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
      return;
    }
    outlined init with take of Notice(&v80, (uint64_t)v86);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
    ConversationController.hasRingingCalls.getter();
    if ((v45 & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
      swift_unknownObjectRelease_n();
      return;
    }
    if (one-time initialization token for conversationController == -1)
      goto LABEL_35;
    goto LABEL_44;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v83, &demangling cache variable for type metadata for Conversation?);
  if (v19)
    goto LABEL_18;
}

void ConversationController.callCenter(_:letMeInRequestStateChangedFor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_187_4();
  if (v14)
  {
    OUTLINED_FUNCTION_22_86();
    OUTLINED_FUNCTION_33_67(v4);
    OUTLINED_FUNCTION_146_6();
    OUTLINED_FUNCTION_172_4();
    OUTLINED_FUNCTION_194_3(v2);
    if ((v0 & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v8 = OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_170_2((__n128 *)v8, (__n128)xmmword_1BD645380);
      OUTLINED_FUNCTION_312_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64));
      type metadata accessor for TUConversationLetMeInRequestState(0);
      OUTLINED_FUNCTION_205_5();
      OUTLINED_FUNCTION_286_4();
      *(_QWORD *)(v8 + 64) = OUTLINED_FUNCTION_637_0();
      *(_QWORD *)(v8 + 32) = v0;
      *(_QWORD *)(v8 + 40) = v1;
      OUTLINED_FUNCTION_142_3();
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_286_4();
      OUTLINED_FUNCTION_69_25(v9, &demangling cache variable for type metadata for Conversation?);
      OUTLINED_FUNCTION_635();
      OUTLINED_FUNCTION_239_1();
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_237_6();
      v10 = OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 64));
      ConversationController.conversationLetMeInRequestState.setter(v10);
    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      *(_OWORD *)(OUTLINED_FUNCTION_15() + 16) = xmmword_1BD645380;
      OUTLINED_FUNCTION_142_3();
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_423_0();
      OUTLINED_FUNCTION_99_13();
      v13 = OUTLINED_FUNCTION_406_0();
      OUTLINED_FUNCTION_140_10(v13);
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_99_13();
      OUTLINED_FUNCTION_824();
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
    }
    OUTLINED_FUNCTION_12_6();
  }
  else
  {
    OUTLINED_FUNCTION_69_25(v7, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v11 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_82_13(v11, (__n128)xmmword_1BD6441D0);
    OUTLINED_FUNCTION_204_5();
    OUTLINED_FUNCTION_362_3();
    v12 = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_407_1(v12);
    OUTLINED_FUNCTION_61_30();
    OUTLINED_FUNCTION_133();
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:ignoreLetMeInRequestsChangedFor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __n128 *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_187_4();
  if (v16)
  {
    OUTLINED_FUNCTION_22_86();
    OUTLINED_FUNCTION_33_67(v4);
    OUTLINED_FUNCTION_146_6();
    OUTLINED_FUNCTION_172_4();
    OUTLINED_FUNCTION_194_3(v2);
    if ((v0 & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v8 = OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_170_2((__n128 *)v8, (__n128)xmmword_1BD645380);
      v9 = OUTLINED_FUNCTION_312_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 240));
      v10 = MEMORY[0x1E0DEAFD8];
      *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEAFA0];
      *(_QWORD *)(v8 + 64) = v10;
      *(_BYTE *)(v8 + 32) = v9 & 1;
      OUTLINED_FUNCTION_142_3();
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_286_4();
      OUTLINED_FUNCTION_69_25(v11, &demangling cache variable for type metadata for Conversation?);
      *(_QWORD *)(v8 + 96) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v8 + 104) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v8 + 72) = v0;
      *(_QWORD *)(v8 + 80) = v1;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_239_1();
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_237_6();
      v12 = OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 240));
      ConversationController.ignoreLetMeInRequests.setter(v12 & 1);
    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      *(_OWORD *)(OUTLINED_FUNCTION_15() + 16) = xmmword_1BD645380;
      OUTLINED_FUNCTION_142_3();
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_423_0();
      OUTLINED_FUNCTION_99_13();
      v15 = OUTLINED_FUNCTION_406_0();
      OUTLINED_FUNCTION_140_10(v15);
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_99_13();
      OUTLINED_FUNCTION_824();
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
    }
    OUTLINED_FUNCTION_12_6();
  }
  else
  {
    OUTLINED_FUNCTION_69_25(v7, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v13 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_82_13(v13, (__n128)xmmword_1BD6441D0);
    OUTLINED_FUNCTION_204_5();
    OUTLINED_FUNCTION_362_3();
    v14 = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_407_1(v14);
    OUTLINED_FUNCTION_61_30();
    OUTLINED_FUNCTION_133();
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:rejectedMembersChangedFor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_187_4();
  if (v15)
  {
    OUTLINED_FUNCTION_22_86();
    OUTLINED_FUNCTION_33_67(v4);
    OUTLINED_FUNCTION_146_6();
    OUTLINED_FUNCTION_172_4();
    OUTLINED_FUNCTION_194_3(v2);
    if ((v0 & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v8 = OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_170_2((__n128 *)v8, (__n128)xmmword_1BD645380);
      OUTLINED_FUNCTION_312_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136));
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>);
      OUTLINED_FUNCTION_205_5();
      OUTLINED_FUNCTION_286_4();
      *(_QWORD *)(v8 + 64) = OUTLINED_FUNCTION_637_0();
      *(_QWORD *)(v8 + 32) = v0;
      *(_QWORD *)(v8 + 40) = v1;
      OUTLINED_FUNCTION_142_3();
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_286_4();
      OUTLINED_FUNCTION_69_25(v9, &demangling cache variable for type metadata for Conversation?);
      OUTLINED_FUNCTION_635();
      OUTLINED_FUNCTION_239_1();
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_237_6();
      v10 = OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 136));
      v11 = specialized Set.count.getter(v10);
      OUTLINED_FUNCTION_27();
      ConversationController.rejectedParticipantsCount.setter(v11);
    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      *(_OWORD *)(OUTLINED_FUNCTION_15() + 16) = xmmword_1BD645380;
      OUTLINED_FUNCTION_142_3();
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_423_0();
      OUTLINED_FUNCTION_99_13();
      v14 = OUTLINED_FUNCTION_406_0();
      OUTLINED_FUNCTION_140_10(v14);
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_99_13();
      OUTLINED_FUNCTION_824();
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
    }
    OUTLINED_FUNCTION_12_6();
  }
  else
  {
    OUTLINED_FUNCTION_69_25(v7, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v12 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_82_13(v12, (__n128)xmmword_1BD6441D0);
    OUTLINED_FUNCTION_204_5();
    OUTLINED_FUNCTION_362_3();
    v13 = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_407_1(v13);
    OUTLINED_FUNCTION_61_30();
    OUTLINED_FUNCTION_133();
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:linkChangedFor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (**v15)(_QWORD *);
  void (*v16)(_QWORD *);
  __n128 *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[5];
  uint64_t v25;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v6 = v5;
  OUTLINED_FUNCTION_15_6();
  v7 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_138_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77_1();
  v11 = v6[4];
  OUTLINED_FUNCTION_435_0(v6);
  if ((OUTLINED_FUNCTION_21_16(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 208)) & 1) != 0)
  {
    OUTLINED_FUNCTION_435_0(v6);
    OUTLINED_FUNCTION_464_1();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_438_0(v3, v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    swift_endAccess();
  }
  OUTLINED_FUNCTION_357_2();
  if (v24[3])
  {
    OUTLINED_FUNCTION_22_86();
    OUTLINED_FUNCTION_33_67(v6);
    v14 = OUTLINED_FUNCTION_146_6();
    OUTLINED_FUNCTION_194_3(v1);
    OUTLINED_FUNCTION_194_3(v2);
    if ((v14 & 1) != 0)
    {
      v15 = (void (**)(_QWORD *))(v4
                                           + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
      OUTLINED_FUNCTION_1();
      v16 = *v15;
      if (*v15)
      {
        partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
        v16(v6);
        OUTLINED_FUNCTION_11_14((uint64_t)v16);
      }
    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v21 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v21 + 16) = xmmword_1BD645380;
      OUTLINED_FUNCTION_403_0(v21, (uint64_t)v24);
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_439_0();
      OUTLINED_FUNCTION_99_13();
      v22 = MEMORY[0x1E0DEA968];
      v23 = OUTLINED_FUNCTION_406_0();
      OUTLINED_FUNCTION_552_0(v23);
      outlined init with copy of RadarReporting((uint64_t)&v25, (uint64_t)v24);
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_439_0();
      OUTLINED_FUNCTION_99_13();
      *(_QWORD *)(v21 + 96) = v22;
      *(_QWORD *)(v21 + 104) = v23;
      *(_QWORD *)(v21 + 72) = v6;
      *(_QWORD *)(v21 + 80) = v7;
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
    }
    OUTLINED_FUNCTION_12_6();
  }
  else
  {
    OUTLINED_FUNCTION_69_25(v13, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v17 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_456(v17, (__n128)xmmword_1BD6441D0);
    v18 = OUTLINED_FUNCTION_204_5();
    v20 = v19;
    v17[4].n128_u64[0] = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
    v17[2].n128_u64[0] = v18;
    v17[2].n128_u64[1] = v20;
    OUTLINED_FUNCTION_239_1();
    OUTLINED_FUNCTION_133();
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:linkInvitedMemberHandlesChangedFor:)()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[5];

  OUTLINED_FUNCTION_93();
  v3 = v2;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_187_4();
  if (v10)
  {
    OUTLINED_FUNCTION_22_86();
    OUTLINED_FUNCTION_33_67(v3);
    OUTLINED_FUNCTION_146_6();
    OUTLINED_FUNCTION_172_4();
    OUTLINED_FUNCTION_194_3(v1);
    if ((v0 & 1) != 0)
    {
      ConversationController.updateRemoteParticipantsKickableAndAuthorizedToChangeGroupMembership(with:)(v11);
      ConversationController.updateLocalMemberAuthorizedToChangeGroupMembership(with:)(v11);
    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      *(_OWORD *)(OUTLINED_FUNCTION_15() + 16) = xmmword_1BD645380;
      OUTLINED_FUNCTION_142_3();
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_423_0();
      OUTLINED_FUNCTION_99_13();
      v9 = OUTLINED_FUNCTION_406_0();
      OUTLINED_FUNCTION_140_10(v9);
      OUTLINED_FUNCTION_160_3();
      OUTLINED_FUNCTION_99_13();
      OUTLINED_FUNCTION_824();
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
    }
    OUTLINED_FUNCTION_12_6();
  }
  else
  {
    OUTLINED_FUNCTION_69_25(v6, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v7 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_82_13(v7, (__n128)xmmword_1BD6441D0);
    OUTLINED_FUNCTION_204_5();
    OUTLINED_FUNCTION_362_3();
    v8 = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
    OUTLINED_FUNCTION_407_1(v8);
    OUTLINED_FUNCTION_61_30();
    OUTLINED_FUNCTION_133();
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:participantMediaPrioritiesChangedFor:)()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  void (*v58)(_QWORD *, _QWORD);
  void (**v59)(uint64_t);
  void (*v60)(uint64_t);
  _QWORD v61[2];
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v70;
  _QWORD v71[11];

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v6 = v5;
  v66 = OUTLINED_FUNCTION_15_6();
  v7 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v61 - v10;
  v12 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_59(v14, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_533((uint64_t)v1, *MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  v15 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_39_0((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  ConversationController.lookupActiveConversation()();
  if (!v71[3])
  {
    OUTLINED_FUNCTION_159_8(v16, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_8:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v27 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v27 + 16) = xmmword_1BD6441D0;
      v71[5] = v4;
      v28 = v4;
      OUTLINED_FUNCTION_643_0();
      OUTLINED_FUNCTION_790();
      *(_QWORD *)(v27 + 64) = OUTLINED_FUNCTION_331_4(MEMORY[0x1E0DEA968]);
      *(_QWORD *)(v27 + 32) = v4;
      *(_QWORD *)(v27 + 40) = v7;
      OUTLINED_FUNCTION_119_7();
      OUTLINED_FUNCTION_2_1();
LABEL_32:
      OUTLINED_FUNCTION_52_1();
      return;
    }
LABEL_34:
    swift_once();
    goto LABEL_8;
  }
  v61[0] = v4;
  OUTLINED_FUNCTION_425_1();
  OUTLINED_FUNCTION_152_7(v12);
  v17 = *(_QWORD *)(v6 + 24);
  OUTLINED_FUNCTION_24_41();
  OUTLINED_FUNCTION_152_7(v17);
  LOBYTE(v17) = OUTLINED_FUNCTION_146_6();
  v18 = *(void (**)(uint64_t))(v2 + 8);
  v19 = OUTLINED_FUNCTION_153_1();
  v18(v19);
  ((void (*)(char *, uint64_t))v18)(v11, v7);
  if ((v17 & 1) == 0)
  {
LABEL_31:
    OUTLINED_FUNCTION_100_2();
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_24_41();
  OUTLINED_FUNCTION_471();
  v21 = v20;
  v22 = specialized Set.count.getter(v20);
  if (!v22)
  {
    OUTLINED_FUNCTION_133();
    v29 = MEMORY[0x1E0DEE9D8];
LABEL_28:
    v59 = (void (**)(uint64_t))(v61[0]
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
    OUTLINED_FUNCTION_1();
    v60 = *v59;
    if (*v59)
    {
      partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v60(v29);
      OUTLINED_FUNCTION_11_14((uint64_t)v60);
    }
    OUTLINED_FUNCTION_13_3();
    goto LABEL_31;
  }
  v23 = v22;
  v70 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v22 & ~(v22 >> 63), 0);
  v63 = v21 & 0xC000000000000001;
  if ((v21 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_730();
    v24 = __CocoaSet.startIndex.getter();
    v26 = 1;
  }
  else
  {
    v24 = specialized _NativeSet.startIndex.getter(v21);
    v26 = v30 & 1;
  }
  v67 = v24;
  v68 = v25;
  v69 = v26;
  if ((v23 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_730();
    if (v32 != v33)
      v31 = v21;
    v61[1] = v31;
    v62 = v21;
    do
    {
      v34 = v69;
      v64 = v67;
      v65 = v68;
      specialized Set.subscript.getter(v67, v68, v69, v21);
      v36 = objc_msgSend(v35, sel_handle);
      v37 = OUTLINED_FUNCTION_25_1((uint64_t)v36, sel_identifier);
      v38 = OUTLINED_FUNCTION_25_1((uint64_t)v37, sel_avcIdentifier);
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v66 = v40;

      v42 = OUTLINED_FUNCTION_25_1(v41, sel_audioPriority);
      OUTLINED_FUNCTION_25_1((uint64_t)v42, sel_videoPriority);
      OUTLINED_FUNCTION_37_0();
      v43 = v70;
      if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
      {
        v44 = OUTLINED_FUNCTION_595_0();
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44, v45, v46);
        v43 = v70;
      }
      v48 = *(_QWORD *)(v43 + 16);
      v47 = *(_QWORD *)(v43 + 24);
      if (v48 >= v47 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
        v43 = v70;
      }
      *(_QWORD *)(v43 + 16) = v48 + 1;
      v49 = v43 + 48 * v48;
      *(_QWORD *)(v49 + 32) = v36;
      *(_QWORD *)(v49 + 40) = v37;
      *(_BYTE *)(v49 + 48) = 0;
      v50 = v66;
      *(_QWORD *)(v49 + 56) = v39;
      *(_QWORD *)(v49 + 64) = v50;
      *(float *)(v49 + 72) = (float)(uint64_t)v42;
      *(float *)(v49 + 76) = (float)(uint64_t)v38;
      if (v63)
      {
        v21 = v62;
        if ((v34 & 1) == 0)
          goto LABEL_36;
        if (__CocoaSet.Index.handleBitPattern.getter())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Set<TUConversationParticipant>.Index);
        v58 = (void (*)(_QWORD *, _QWORD))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v58(v71, 0);
      }
      else
      {
        v52 = v64;
        v51 = v65;
        v21 = v62;
        v53 = specialized _NativeSet.index(after:)(v64, v65, v34, v62);
        v55 = v54;
        v57 = v56;
        outlined consume of Set<TUHandle>.Index._Variant(v52, v51, v34);
        v67 = v53;
        v68 = v55;
        v69 = v57 & 1;
      }
      --v23;
    }
    while (v23);
    outlined consume of Set<TUHandle>.Index._Variant(v67, v68, v69);
    OUTLINED_FUNCTION_133();
    v29 = v70;
    goto LABEL_28;
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

void ConversationController.callCenter(_:conversation:participant:didReact:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 *v37;
  unint64_t v38;
  char *v39;
  void (**v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v45 = v5;
  v46 = v6;
  v48 = v7;
  v9 = v8;
  v51 = OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v49 = v11;
  v47 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  v50 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v44 - v17;
  v19 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v21, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DEF740], v19);
  v22 = OUTLINED_FUNCTION_83_12();
  (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v19);
  if ((v22 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_226_2();
  if (!v52)
  {
    OUTLINED_FUNCTION_159_8(v23, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_8:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v37 = (__n128 *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_711(v37, (__n128)xmmword_1BD6441D0);
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_439_0();
      v38 = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_552_0(v38);
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
      goto LABEL_13;
    }
LABEL_15:
    swift_once();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_243_2();
  v24 = v53;
  OUTLINED_FUNCTION_644_0();
  OUTLINED_FUNCTION_76_22(v24);
  v25 = v9[3];
  __swift_project_boxed_opaque_existential_1(v9, v25);
  OUTLINED_FUNCTION_76_22(v25);
  v26 = OUTLINED_FUNCTION_443_1();
  v27 = *(void (**)(uint64_t))(v3 + 8);
  v28 = OUTLINED_FUNCTION_315_0();
  v27(v28);
  ((void (*)(char *, uint64_t))v27)(v18, v14);
  if ((v26 & 1) != 0)
  {
    v29 = v49;
    OUTLINED_FUNCTION_641_0(v48);
    v30 = OUTLINED_FUNCTION_99_5();
    OUTLINED_FUNCTION_69_0(v30, v31, v47);
    if (v33)
    {
      v34 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      OUTLINED_FUNCTION_1();
      v39 = v50;
      OUTLINED_FUNCTION_71_1(v34, v35, type metadata accessor for Participant);
      OUTLINED_FUNCTION_30_7(v36, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      v39 = v50;
      OUTLINED_FUNCTION_74_1(v29, v32, type metadata accessor for Participant);
    }
    v40 = (void (**)(char *, uint64_t, uint64_t))(v4
                                                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
    v41 = OUTLINED_FUNCTION_2_0();
    v42 = *v40;
    if (*v40)
    {
      OUTLINED_FUNCTION_539_0();
      partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v42(v39, v45, v46);
      v43 = OUTLINED_FUNCTION_11_14((uint64_t)v42);
      OUTLINED_FUNCTION_315(v43, type metadata accessor for Participant);
    }
    else
    {
      OUTLINED_FUNCTION_315(v41, type metadata accessor for Participant);
      OUTLINED_FUNCTION_539_0();
    }
  }
  OUTLINED_FUNCTION_100_2();
LABEL_13:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:conversation:participantDidStopReacting:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 *v32;
  unint64_t v33;
  char *v34;
  void (**v35)(char *);
  uint64_t v36;
  void (*v37)(char *);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v40 = v5;
  v7 = v6;
  v43 = OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  v41 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  v42 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_42_32();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - v15;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_59(v18, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_139((uint64_t)v1, *MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  v19 = OUTLINED_FUNCTION_770();
  OUTLINED_FUNCTION_371((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_161_9();
  if (!v44)
  {
    OUTLINED_FUNCTION_69_25(v20, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_8:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v32 = (__n128 *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_82_13(v32, (__n128)xmmword_1BD6441D0);
      String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_439_0();
      v33 = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_552_0(v33);
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
      goto LABEL_13;
    }
LABEL_15:
    swift_once();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_428_1();
  OUTLINED_FUNCTION_134_9();
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  OUTLINED_FUNCTION_134_9();
  v21 = OUTLINED_FUNCTION_501_1();
  v22 = *(void (**)(uint64_t))(v3 + 8);
  v23 = OUTLINED_FUNCTION_607_0();
  v22(v23);
  ((void (*)(char *, uint64_t))v22)(v16, v12);
  if ((v21 & 1) != 0)
  {
    v24 = (uint64_t)v41;
    OUTLINED_FUNCTION_641_0(v40);
    v25 = OUTLINED_FUNCTION_99_5();
    OUTLINED_FUNCTION_69_0(v25, v26, v39);
    if (v28)
    {
      v29 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      OUTLINED_FUNCTION_1();
      v34 = v42;
      OUTLINED_FUNCTION_71_1(v29, v30, type metadata accessor for Participant);
      OUTLINED_FUNCTION_30_7(v31, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      v34 = v42;
      OUTLINED_FUNCTION_74_1(v24, v27, type metadata accessor for Participant);
    }
    v35 = (void (**)(char *))(v4
                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
    v36 = OUTLINED_FUNCTION_2_0();
    v37 = *v35;
    if (*v35)
    {
      swift_endAccess();
      partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v37(v34);
      v38 = OUTLINED_FUNCTION_11_14((uint64_t)v37);
      OUTLINED_FUNCTION_315(v38, type metadata accessor for Participant);
    }
    else
    {
      OUTLINED_FUNCTION_315(v36, type metadata accessor for Participant);
      swift_endAccess();
    }
  }
  OUTLINED_FUNCTION_12_6();
LABEL_13:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:migratingFrom:to:)()
{
  uint64_t v0;
  NSObject *v1;
  NSObject *v2;
  uint64_t v3;
  NSObject *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  char *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  int v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  NSObject *v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[5];
  uint64_t v99[3];
  uint64_t v100;

  OUTLINED_FUNCTION_93();
  v5 = (char *)v1;
  v94 = v6;
  v95 = v7;
  v8 = (_QWORD *)OUTLINED_FUNCTION_33_0();
  v87 = *(v8 - 1);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_33_18(v10);
  v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_5_27();
  v86 = v13;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v84 - v15;
  MEMORY[0x1E0C80A78](v17);
  v92 = (uint64_t)&v84 - v18;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  v88 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_88_11();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v84 - v23;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v26, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v2->isa = (Class)OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_148_2(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_714();
  OUTLINED_FUNCTION_101((uint64_t)v2, v27);
  if ((v1 & 1) == 0)
  {
    __break(1u);
LABEL_32:
    swift_once();
    goto LABEL_4;
  }
  v90 = v4;
  v2 = ((char *)v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID);
  OUTLINED_FUNCTION_1();
  v1 = &demangling cache variable for type metadata for UUID?;
  outlined init with copy of FeatureEligibility?((uint64_t)v2, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v28 = OUTLINED_FUNCTION_46_7((uint64_t)v24);
  OUTLINED_FUNCTION_9_42((uint64_t)v24);
  v93 = v2;
  if (v28 != 1)
    goto LABEL_7;
  if (one-time initialization token for conversationController != -1)
    goto LABEL_32;
LABEL_4:
  v29 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_182_3(v29, (uint64_t)&static Logger.conversationController);
  v30 = v5;
  Logger.logObject.getter();
  v31 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_51_3(v31))
  {
    v84 = v8;
    v32 = (uint8_t *)OUTLINED_FUNCTION_105();
    v33 = OUTLINED_FUNCTION_105();
    v89 = v5;
    *(_DWORD *)v32 = 136315138;
    v99[0] = v33;
    LOBYTE(v98[0]) = v30[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    v34 = String.init<A>(reflecting:)();
    v98[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v1, (os_log_type_t)v2, "%s Migration requested while conversationUUID == nil so attempting to lookup active conversation.", v32);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v2 = v93;
  ConversationController.updateConversationUUIDIfNeeded()();
  OUTLINED_FUNCTION_484_0(v36, &demangling cache variable for type metadata for Conversation?);
LABEL_7:
  v37 = &demangling cache variable for type metadata for UUID?;
  OUTLINED_FUNCTION_61_10((uint64_t)v2, v3);
  v38 = OUTLINED_FUNCTION_46_7(v3);
  OUTLINED_FUNCTION_25_0(v3);
  v39 = (_QWORD *)v94;
  if (v38 == 1)
  {
    v40 = (_QWORD *)v95;
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v41 = OUTLINED_FUNCTION_17_2();
    v42 = __swift_project_value_buffer(v41, (uint64_t)&static Logger.conversationController);
    OUTLINED_FUNCTION_374_2(v42, (uint64_t)v99);
    outlined init with copy of RadarReporting((uint64_t)v39, (uint64_t)v98);
    v89 = v5;
    v43 = v5;
    Logger.logObject.getter();
    v44 = OUTLINED_FUNCTION_789();
    if (OUTLINED_FUNCTION_11_84(v44))
    {
      v45 = (uint64_t)v8;
      v46 = OUTLINED_FUNCTION_105();
      v94 = OUTLINED_FUNCTION_105();
      v97 = v94;
      *(_DWORD *)v46 = 136315650;
      LOBYTE(v96) = v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
      v47 = OUTLINED_FUNCTION_708();
      v96 = OUTLINED_FUNCTION_794(v47, v48);
      OUTLINED_FUNCTION_56_39();

      OUTLINED_FUNCTION_27();
      *(_WORD *)(v46 + 12) = 2080;
      v49 = v100;
      OUTLINED_FUNCTION_184(v99);
      v50 = v88;
      OUTLINED_FUNCTION_192_4(v49);
      OUTLINED_FUNCTION_80_0();
      __swift_storeEnumTagSinglePayload(v51, v52, v53, v45);
      specialized >> prefix<A>(_:)(v50);
      v55 = v54;
      OUTLINED_FUNCTION_96_6(v54, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v96 = OUTLINED_FUNCTION_9_57(v55, v56, &v97);
      OUTLINED_FUNCTION_56_39();
      OUTLINED_FUNCTION_54_1();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      *(_WORD *)(v46 + 22) = 2080;
      OUTLINED_FUNCTION_435_0(v98);
      OUTLINED_FUNCTION_464_1();
      OUTLINED_FUNCTION_19_3(v50, 0);
      specialized >> prefix<A>(_:)(v50);
      v58 = v57;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v50, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v96 = OUTLINED_FUNCTION_9_57(v58, v59, &v97);
      OUTLINED_FUNCTION_56_39();
      OUTLINED_FUNCTION_54_1();
      OUTLINED_FUNCTION_442_0();
      OUTLINED_FUNCTION_28_62(&dword_1BD004000, v2, (os_log_type_t)v5, "%s Speculatively migrate active conversation UUID to %s since conversationUUID=nil (expected: %s even after an attempted lookup", (uint8_t *)v46);
      OUTLINED_FUNCTION_23_31();
      OUTLINED_FUNCTION_60();
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
    OUTLINED_FUNCTION_442_0();

    v5 = v89;
    goto LABEL_18;
  }
  v60 = v92;
  OUTLINED_FUNCTION_61_10((uint64_t)v2, v92);
  __swift_project_boxed_opaque_existential_1(v39, v39[3]);
  OUTLINED_FUNCTION_107_12();
  OUTLINED_FUNCTION_77_16((uint64_t)v16);
  v61 = v90;
  v62 = (uint64_t)v90 + *(int *)(v91 + 48);
  v63 = OUTLINED_FUNCTION_804();
  OUTLINED_FUNCTION_61_10(v63, v64);
  OUTLINED_FUNCTION_61_10((uint64_t)v16, v62);
  OUTLINED_FUNCTION_69_0((uint64_t)v61, 1, (uint64_t)v8);
  v40 = (_QWORD *)v95;
  if (v71)
  {
    OUTLINED_FUNCTION_25_0((uint64_t)v16);
    OUTLINED_FUNCTION_25_0(v60);
    v65 = OUTLINED_FUNCTION_69_0(v62, 1, (uint64_t)v8);
    if (v71)
    {
      OUTLINED_FUNCTION_30_7(v65, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      goto LABEL_18;
    }
  }
  else
  {
    v70 = v86;
    outlined init with copy of FeatureEligibility?((uint64_t)v61, v86, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_69_0(v62, 1, (uint64_t)v8);
    if (!v71)
    {
      LODWORD(v37) = v70;
      v83 = v85;
      OUTLINED_FUNCTION_291(v85, v62, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 32));
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      OUTLINED_FUNCTION_610_0();
      LODWORD(v91) = dispatch thunk of static Equatable.== infix(_:_:)();
      OUTLINED_FUNCTION_399_3(v83);
      OUTLINED_FUNCTION_9_42((uint64_t)v16);
      OUTLINED_FUNCTION_9_42(v92);
      OUTLINED_FUNCTION_399_3(v70);
      OUTLINED_FUNCTION_9_42((uint64_t)v61);
      if ((v91 & 1) == 0)
        goto LABEL_24;
LABEL_18:
      v66 = (uint64_t *)&v5[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
      OUTLINED_FUNCTION_1();
      v68 = *v66;
      v67 = v66[1];
      v69 = OUTLINED_FUNCTION_15_6();
      OUTLINED_FUNCTION_72_9();
      specialized ConversationController.migrate(to:with:isUpgrade:)(v40, v68, 1, v5, v69, v67);
      OUTLINED_FUNCTION_10();
      goto LABEL_19;
    }
    OUTLINED_FUNCTION_25_0((uint64_t)v16);
    OUTLINED_FUNCTION_25_0(v60);
    v72 = OUTLINED_FUNCTION_345_1();
    v65 = v73(v72);
  }
  OUTLINED_FUNCTION_30_7(v65, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
LABEL_24:
  if (one-time initialization token for conversationController != -1)
    swift_once();
  v74 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v74, (uint64_t)&static Logger.conversationController);
  outlined init with copy of RadarReporting((uint64_t)v39, (uint64_t)v99);
  OUTLINED_FUNCTION_374_2(v75, (uint64_t)v98);
  v76 = v5;
  OUTLINED_FUNCTION_621();
  v77 = OUTLINED_FUNCTION_789();
  if (OUTLINED_FUNCTION_570_0(v77))
  {
    v78 = OUTLINED_FUNCTION_105();
    v95 = OUTLINED_FUNCTION_105();
    v97 = v95;
    *(_DWORD *)v78 = 136315906;
    LODWORD(v94) = (_DWORD)v37;
    LOBYTE(v96) = *((_BYTE *)v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode);
    v79 = OUTLINED_FUNCTION_708();
    v96 = OUTLINED_FUNCTION_794(v79, v80);
    OUTLINED_FUNCTION_223_2();

    OUTLINED_FUNCTION_27();
    *(_WORD *)(v78 + 12) = 2080;
    __swift_project_boxed_opaque_existential_1(v99, v100);
    v81 = v88;
    OUTLINED_FUNCTION_134_9();
    OUTLINED_FUNCTION_208_4();
    OUTLINED_FUNCTION_109_0(v82, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v96 = OUTLINED_FUNCTION_334_4();
    OUTLINED_FUNCTION_223_2();
    OUTLINED_FUNCTION_2_1();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
    *(_WORD *)(v78 + 22) = 2080;
    __swift_project_boxed_opaque_existential_1(v98, v98[3]);
    OUTLINED_FUNCTION_134_9();
    OUTLINED_FUNCTION_208_4();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v81, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v96 = OUTLINED_FUNCTION_334_4();
    OUTLINED_FUNCTION_223_2();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_442_0();
    *(_WORD *)(v78 + 32) = 2080;
    outlined init with copy of FeatureEligibility?((uint64_t)v93, v81, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    specialized >> prefix<A>(_:)(v81);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v81, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v96 = OUTLINED_FUNCTION_334_4();
    OUTLINED_FUNCTION_223_2();

    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_749(&dword_1BD004000, v61, (os_log_type_t)v94, "%s Unable to migrate active conversation UUID from %s to %s since currently tracking conversation with UUID %s", (uint8_t *)v78);
    OUTLINED_FUNCTION_747();
    OUTLINED_FUNCTION_60();
  }

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
  OUTLINED_FUNCTION_442_0();

LABEL_19:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:mutedTalkingChanged:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  if (*v1)
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    OUTLINED_FUNCTION_519_1();
    OUTLINED_FUNCTION_11_14(v2);
  }
  OUTLINED_FUNCTION_9_0();
}

void ConversationController.callCenterAudioRoutesDidChange(_:)()
{
  char *v0;
  char *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_829();
  v1 = v0;
  v3 = v2;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v4 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v4 + 16) = xmmword_1BD6441D0;
  v5 = v3[4];
  OUTLINED_FUNCTION_14_64(v3);
  v6 = OUTLINED_FUNCTION_64_25(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 40));
  if (v6)
  {
    OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for TURoute);
    v7 = String.init<A>(reflecting:)();
    v9 = v8;
  }
  else
  {
    v9 = 0xE300000000000000;
    v7 = 7104878;
  }
  *(_QWORD *)(v4 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
  *(_QWORD *)(v4 + 32) = v7;
  *(_QWORD *)(v4 + 40) = v9;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_53();
  v10 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange];
  OUTLINED_FUNCTION_1();
  v11 = *v10;
  if (*v10)
  {
    OUTLINED_FUNCTION_1_28();
    ConversationController.audioRoute.getter();
    OUTLINED_FUNCTION_688();
    OUTLINED_FUNCTION_14_60(v11);

  }
  OUTLINED_FUNCTION_2_3();
}

void ConversationController.callCenter(_:activitySessionsChangedFor:fromOldConversation:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t (**v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (**v34)(uint64_t, uint64_t);
  uint64_t v35;
  id v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  unsigned int v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  int v61;
  BOOL v62;
  char v63;
  char v64;
  int v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  char *v73;
  id v74;
  void *v75;
  uint64_t v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  void (*v84)(_QWORD, uint64_t);
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  char *v92;
  id v93;
  unint64_t v94;
  void (**v95)(unint64_t);
  void (*v96)(unint64_t);
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint8_t *v100;
  _QWORD *v101;
  uint64_t v102;
  char *v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  _QWORD *v107;
  unint64_t v108;
  _QWORD v109[5];
  _QWORD v110[5];
  _QWORD v111[5];
  _QWORD v112[5];
  _QWORD v113[3];
  uint64_t v114;
  uint64_t (**v115)(uint64_t, uint64_t);
  _QWORD v116[10];
  __int128 v117;
  uint64_t v118;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v101 = v5;
  v103 = v6;
  v102 = OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v100 = v8;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_96_14();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v100 - v11;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v14, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v3 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_139((uint64_t)v3, *MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v15 = OUTLINED_FUNCTION_132_2();
  OUTLINED_FUNCTION_371((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_63:
    swift_once();
    goto LABEL_8;
  }
  v15 = v4;
  ConversationController.lookupActiveConversation()();
  v17 = v4;
  if (v118)
  {
    outlined init with take of Notice(&v117, (uint64_t)v113);
    v18 = v114;
    __swift_project_boxed_opaque_existential_1(v113, v114);
    OUTLINED_FUNCTION_138_10(v18);
    v19 = v103;
    OUTLINED_FUNCTION_566();
    OUTLINED_FUNCTION_138_10(v18);
    LODWORD(v102) = OUTLINED_FUNCTION_494_1();
    v20 = *(void (**)(uint64_t))(v2 + 8);
    v21 = OUTLINED_FUNCTION_263();
    v20(v21);
    OUTLINED_FUNCTION_592((uint64_t)v12);
    v22 = v115;
    OUTLINED_FUNCTION_14_64(v113);
    LOBYTE(v20) = OUTLINED_FUNCTION_64_25(v22[25]);
    outlined init with copy of RadarReporting((uint64_t)v113, (uint64_t)v112);
    if ((v20 & 1) != 0)
    {
      v22 = (uint64_t (**)(uint64_t, uint64_t))v112[4];
      __swift_project_boxed_opaque_existential_1(v112, v112[3]);
      v23 = OUTLINED_FUNCTION_64_25(v22[11]);
      v24 = specialized Set.count.getter(v23);
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_734();
      OUTLINED_FUNCTION_374_2(v25, (uint64_t)v110);
      if (v24 == 1)
      {
        v26 = v111[4];
        __swift_project_boxed_opaque_existential_1(v111, v111[3]);
        OUTLINED_FUNCTION_64_25(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 88));
        v27 = v110[3];
        v28 = v110[4];
        v29 = OUTLINED_FUNCTION_76_11(v110);
        v30 = *(void (**)(uint64_t, uint64_t))(v28 + 88);
        v31 = (uint64_t)v29;
        v32 = v28;
        v19 = v103;
        v30(v27, v32);
        v33 = OUTLINED_FUNCTION_474();
        specialized static Set.== infix(_:_:)(v33, v31);
        v22 = v34;
        OUTLINED_FUNCTION_133();
        OUTLINED_FUNCTION_27();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
        if (((v102 | v22) & 1) == 0)
          goto LABEL_58;
        goto LABEL_12;
      }
    }
    else
    {
      OUTLINED_FUNCTION_734();
      OUTLINED_FUNCTION_374_2(v42, (uint64_t)v110);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
    if ((v102 & 1) == 0)
    {
LABEL_58:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
      goto LABEL_59;
    }
LABEL_12:
    v43 = *(_QWORD *)(v17 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults + 8);
    v44 = OUTLINED_FUNCTION_15_6();
    v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 568))(v44, v43);
    OUTLINED_FUNCTION_566();
    v46 = OUTLINED_FUNCTION_64_25(v22[15]);
    v47 = specialized Set.count.getter(v46);
    v48 = OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_374_2(v48, (uint64_t)v109);
    if (v47 == 1
      && (v49 = v109[4],
          __swift_project_boxed_opaque_existential_1(v109, v109[3]),
          OUTLINED_FUNCTION_64_25(*(uint64_t (**)(uint64_t, uint64_t))(v49 + 120)),
          specialized Collection.first.getter(),
          v51 = v50,
          v52 = OUTLINED_FUNCTION_133(),
          v51))
    {
      v53 = OUTLINED_FUNCTION_25_1(v52, sel_capabilities);

      v54 = objc_msgSend(v53, sel_isUPlusOneScreenShareAvailable);
    }
    else
    {
      v54 = 0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
    v55 = OUTLINED_FUNCTION_640_0();
    v56 = OUTLINED_FUNCTION_682(v113);
    Conversation.currentSharePlayActivity.getter(v56, v57);
    if (!v58)
      goto LABEL_25;
    v59 = v58;
    if (TUConversationActivitySession.generateType.getter() == 4)
    {

      if ((v45 & v54 & 1) != 0)
      {
LABEL_25:
        v63 = 0;
LABEL_26:
        *(_BYTE *)(v17 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity) = v63;
        v64 = OUTLINED_FUNCTION_640_0();
        v65 = v55 & 1;
        v66 = v101;
        if (v65 == (v64 & 1))
          goto LABEL_45;
        if ((OUTLINED_FUNCTION_640_0() & 1) == 0)
        {
LABEL_39:
          if (one-time initialization token for conversationController != -1)
            swift_once();
          v76 = OUTLINED_FUNCTION_17_2();
          v77 = OUTLINED_FUNCTION_79_16(v76, (uint64_t)&static Logger.conversationController);
          v78 = OUTLINED_FUNCTION_613_0();
          v79 = static os_log_type_t.default.getter();
          if (OUTLINED_FUNCTION_459_0(v78))
          {
            v80 = (uint8_t *)OUTLINED_FUNCTION_105();
            *(_QWORD *)&v104 = OUTLINED_FUNCTION_105();
            *(_DWORD *)v80 = 136315138;
            v100 = v80 + 4;
            LOBYTE(v107) = OUTLINED_FUNCTION_695() & 1;
            v81 = String.init<A>(reflecting:)();
            v107 = (_QWORD *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v81, v82, (uint64_t *)&v104);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            OUTLINED_FUNCTION_27();
            OUTLINED_FUNCTION_48(&dword_1BD004000, v78, v79, "One-to-one mode changed to %s due to activity sessions change", v80);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_60();
          }

          v83 = &v19[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
          OUTLINED_FUNCTION_1();
          v84 = *(void (**)(_QWORD, uint64_t))v83;
          if (*(_QWORD *)v83)
          {
            OUTLINED_FUNCTION_14_11();
            v85 = OUTLINED_FUNCTION_695();
            v84(v85 & 1, 1);
            v86 = OUTLINED_FUNCTION_311_0();
            outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v86);
          }
LABEL_45:
          v108 = MEMORY[0x1E0DEE9D8];
          OUTLINED_FUNCTION_80_20(v66, v66[3]);
          v87 = OUTLINED_FUNCTION_821();
          v88 = specialized Set.count.getter(v87);
          OUTLINED_FUNCTION_30_4();
          if (v88)
          {
            v89 = OUTLINED_FUNCTION_821();
            specialized Array.append<A>(contentsOf:)(v89);
          }
          v90 = v66[4];
          OUTLINED_FUNCTION_14_64(v66);
          v91 = (void *)OUTLINED_FUNCTION_64_25(*(uint64_t (**)(uint64_t, uint64_t))(v90 + 288));
          v92 = v103;
          if (v91)
          {
            v93 = v91;
            MEMORY[0x1C3B7301C]();
            v94 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (*(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v94 >> 1)
            {
              OUTLINED_FUNCTION_138_4(v94);
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            OUTLINED_FUNCTION_153_1();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

          }
          v95 = (void (**)(unint64_t))(v17
                                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
          OUTLINED_FUNCTION_1();
          v96 = *v95;
          v97 = v108;
          if (!*v95)
            goto LABEL_56;
          if (v108 >> 62)
          {
            OUTLINED_FUNCTION_730();
            _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v96);
            OUTLINED_FUNCTION_35_0();
            v99 = _CocoaArrayWrapper.endIndex.getter();
            OUTLINED_FUNCTION_133();
            if (v99)
              goto LABEL_55;
          }
          else
          {
            v98 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFF8) + 0x10);
            partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
            if (v98)
            {
LABEL_55:
              v96(v97);
              OUTLINED_FUNCTION_11_14((uint64_t)v96);
              v92 = v103;
LABEL_56:
              OUTLINED_FUNCTION_133();
              if ((v102 & 1) != 0)
                ConversationController.updateRemoteParticipantsStates(with:)(v92);
              goto LABEL_58;
            }
          }
          OUTLINED_FUNCTION_133();
          v97 = 0;
          goto LABEL_55;
        }
        ConversationController.remoteOneToOneParticipant.getter();
        OUTLINED_FUNCTION_14_2();
        v67 = OUTLINED_FUNCTION_99_5();
        v70 = OUTLINED_FUNCTION_69_0(v67, v68, v69);
        if (v62)
        {
          OUTLINED_FUNCTION_30_7(v70, &demangling cache variable for type metadata for Participant?);
        }
        else
        {
          Participant.videoInfo.getter();
          OUTLINED_FUNCTION_22_29(v71, type metadata accessor for Participant);
          outlined init with take of Any?((uint64_t)v116, (uint64_t)&v117, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
          if ((_QWORD)v117)
          {
            specialized Dictionary.subscript.getter();
            outlined release of LinearGradient((uint64_t)v116);
            if (*((_QWORD *)&v105 + 1))
            {
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
              type metadata accessor for RemoteParticipantVideoProvider();
              if ((OUTLINED_FUNCTION_97() & 1) != 0)
              {
                v72 = v107;
                v73 = (char *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v107) + 0x130))();
                if (v73)
                {
                  v19 = v73;
                  v74 = objc_msgSend(v73, sel_remoteVideoAttributes);
                  if (v74)
                  {
                    v75 = v74;
                    ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)();

                  }
                  else
                  {

                  }
                }
                else
                {

                }
              }
              goto LABEL_39;
            }
            goto LABEL_38;
          }
        }
        v106 = 0;
        v104 = 0u;
        v105 = 0u;
LABEL_38:
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v104, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        goto LABEL_39;
      }
    }
    else
    {
      v60 = v17;
      v61 = TUConversationActivitySession.generateType.getter();

      v62 = v61 == 5;
      v17 = v60;
      if (!v62 || (v45 & v54) != 0)
        goto LABEL_25;
    }
    v63 = 1;
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_159_8(v16, &demangling cache variable for type metadata for Conversation?);
  if (one-time initialization token for conversationController != -1)
    goto LABEL_63;
LABEL_8:
  v35 = OUTLINED_FUNCTION_17_2();
  v36 = OUTLINED_FUNCTION_79_16(v35, (uint64_t)&static Logger.conversationController);
  OUTLINED_FUNCTION_613_0();
  v37 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_51_3(v37))
  {
    v38 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_QWORD *)&v117 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v38 = 136315138;
    v116[0] = v3;
    v39 = v3;
    v40 = String.init<A>(reflecting:)();
    v116[0] = OUTLINED_FUNCTION_623(v40, v41);
    OUTLINED_FUNCTION_13_2();

    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v15, (os_log_type_t)v2, "Unable to lookup active conversation in CallCenterProviderDelegate stateChangedFor: callback - %s", v38);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

LABEL_59:
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:)()
{
  return ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)();
}

void ConversationController.callCenter(_:noticePosted:in:fromParticipant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char *v61;
  os_log_type_t v62;
  void *v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  NSObject *v69;
  NSObject *v70;
  char v71;
  void (*v72)(NSObject *, char *);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  os_log_type_t v80;
  _WORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  os_log_type_t v94;
  _WORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  unsigned int v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  id v107;
  os_log_type_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  NSObject *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  id v125;
  os_log_type_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  uint64_t v144;
  char *v145;
  void (*v146)(_QWORD *, uint64_t, id, _QWORD, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  NSObject *v152;
  uint64_t v153;
  void *v154;
  os_log_type_t v155;
  const char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  _QWORD v166[3];
  char *v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;
  uint64_t v176;
  NSObject *v177;
  NSObject *v178;
  char *v179;
  char *v180;
  char *v181;
  _BYTE v182[64];
  _QWORD v183[5];
  __int128 v184;
  uint64_t v185;

  OUTLINED_FUNCTION_93();
  a19 = v25;
  a20 = v26;
  v27 = v20;
  v174 = v28;
  v30 = v29;
  v171 = v31;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_5_27();
  v169 = v36;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_18_0();
  v172 = v38;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_231();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_33_18(v41);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_5_27();
  v168 = v43;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_108_0();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_18_0();
  v173 = v46;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)v166 - v48;
  v50 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_96_2(v50, (uint64_t)&a11);
  v179 = v51;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_5_27();
  v178 = v53;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v54);
  v177 = ((char *)v166 - v55);
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v56);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_59(v57, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v21 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_533((uint64_t)v21, *MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 104));
  v58 = OUTLINED_FUNCTION_770();
  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  if ((v58 & 1) != 0)
  {
    if (one-time initialization token for conversationController == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v59 = OUTLINED_FUNCTION_17_2();
  v60 = __swift_project_value_buffer(v59, (uint64_t)&static Logger.conversationController);
  v61 = v27;
  OUTLINED_FUNCTION_643();
  v62 = OUTLINED_FUNCTION_12_0();
  v63 = (void *)v62;
  v64 = os_log_type_enabled((os_log_t)v58, v62);
  v176 = v24;
  v167 = v34;
  if (v64)
  {
    v65 = OUTLINED_FUNCTION_105();
    *(_QWORD *)&v184 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v65 = 136315394;
    v166[2] = v30;
    v166[1] = v23;
    v183[0] = v61;
    v66 = OUTLINED_FUNCTION_670();
    v183[0] = OUTLINED_FUNCTION_667_0(v66, v67);
    OUTLINED_FUNCTION_669_0();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    OUTLINED_FUNCTION_30_4();
    *(_WORD *)(v65 + 12) = 2080;
    v183[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002ELL, 0x80000001BD693E10, (uint64_t *)&v184);
    OUTLINED_FUNCTION_669_0();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v58, (os_log_type_t)v63, "ConversationController(%s recieved callback %s", (uint8_t *)v65);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_694();
  if (v185)
  {
    outlined init with take of Notice(&v184, (uint64_t)v183);
    OUTLINED_FUNCTION_195_5(v183);
    v69 = v177;
    OUTLINED_FUNCTION_73_24();
    OUTLINED_FUNCTION_195_5(v30);
    v70 = v178;
    OUTLINED_FUNCTION_73_24();
    v71 = OUTLINED_FUNCTION_197_3();
    v72 = (void (*)(NSObject *, char *))*((_QWORD *)v179 + 1);
    v73 = v180;
    v72(v70, v180);
    v72(v69, v73);
    if ((v71 & 1) != 0)
    {
      v74 = v175;
      __swift_storeEnumTagSinglePayload((uint64_t)v49, 1, 1, v175);
      v75 = v173;
      v76 = v61;
      v77 = ConversationController.activeParticipant(from:in:)(v174, v173);
      OUTLINED_FUNCTION_109_0(v77, &demangling cache variable for type metadata for Participant?);
      v78 = OUTLINED_FUNCTION_69_0(v75, 1, v74);
      if (v79)
      {
        OUTLINED_FUNCTION_32_18(v78, &demangling cache variable for type metadata for Participant?);
        v84 = (uint64_t (*)(uint64_t))&v61[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
        OUTLINED_FUNCTION_1();
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v84, (uint64_t)v49, type metadata accessor for Participant);
      }
      else
      {
        v84 = type metadata accessor for Participant;
        v76 = v170;
        OUTLINED_FUNCTION_64_5(v75, (uint64_t)v170);
        OUTLINED_FUNCTION_64_5((uint64_t)v76, (uint64_t)v49);
      }
      v85 = v172;
      v86 = v171;
      v87 = v176;
      OUTLINED_FUNCTION_77_16((uint64_t)v49);
      v88 = OUTLINED_FUNCTION_263();
      outlined init with copy of FeatureEligibility?(v88, v89, v90);
      v91 = OUTLINED_FUNCTION_601_0();
      v93 = OUTLINED_FUNCTION_69_0(v91, v92, v74);
      if (v79)
      {
        OUTLINED_FUNCTION_92_1(v93, &demangling cache variable for type metadata for Participant?);
        OUTLINED_FUNCTION_643();
        v94 = OUTLINED_FUNCTION_31_6();
        if (OUTLINED_FUNCTION_13_0(v94))
        {
          v95 = (_WORD *)OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_124_3(v95);
          OUTLINED_FUNCTION_14_14(&dword_1BD004000, v96, v97, "Unable to obtain participant associated with posted notice");
          OUTLINED_FUNCTION_60();
        }

      }
      else
      {
        outlined init with take of StagedCollaboration(v23, v87, type metadata accessor for Participant);
        v100 = objc_msgSend(OUTLINED_FUNCTION_9(v99, sel_session), sel_activity);
        OUTLINED_FUNCTION_49_5();
        v102 = OUTLINED_FUNCTION_25_1(v101, sel_isScreenSharingActivity);

        if (v102 && OUTLINED_FUNCTION_9(v103, sel_sessionEventType) == (id)12)
        {
          OUTLINED_FUNCTION_671_0();
          outlined init with copy of ConversationControlsAppLaunchButtonType(v87, v85, type metadata accessor for Participant);
          v104 = v61;
          v105 = v86;
          v106 = v104;
          v107 = OUTLINED_FUNCTION_44_18();
          OUTLINED_FUNCTION_643();
          v108 = OUTLINED_FUNCTION_12_0();
          if (OUTLINED_FUNCTION_561_0(v108))
          {
            LODWORD(v178) = v60;
            v179 = v105;
            v180 = v49;
            v109 = OUTLINED_FUNCTION_105();
            v177 = OUTLINED_FUNCTION_105();
            v181 = (char *)v177;
            OUTLINED_FUNCTION_360_1(4.8153e-34);
            specialized >> prefix<A>(_:)((uint64_t)&v184);
            OUTLINED_FUNCTION_704();
            OUTLINED_FUNCTION_553(v110, &demangling cache variable for type metadata for Conversation?);
            *(_QWORD *)&v184 = OUTLINED_FUNCTION_9_57(v23, v111, (uint64_t *)&v181);
            OUTLINED_FUNCTION_137_0();
            OUTLINED_FUNCTION_54_1();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v182);
            *(_WORD *)(v109 + 12) = 2080;
            OUTLINED_FUNCTION_135(v85, v168);
            OUTLINED_FUNCTION_482();
            v113 = v112;
            OUTLINED_FUNCTION_275(v112, &demangling cache variable for type metadata for Participant?);
            *(_QWORD *)&v184 = OUTLINED_FUNCTION_191(v113, v114, (uint64_t *)&v181);
            OUTLINED_FUNCTION_137_0();
            OUTLINED_FUNCTION_21_0();
            OUTLINED_FUNCTION_137_1(v85);
            OUTLINED_FUNCTION_650_0();
            OUTLINED_FUNCTION_59(v115, &lazy cache variable for type metadata for TUConversationNotice);
            v116 = v107;
            v117 = OUTLINED_FUNCTION_453();
            *(_QWORD *)&v184 = OUTLINED_FUNCTION_705(v117, v118);
            OUTLINED_FUNCTION_137_0();

            OUTLINED_FUNCTION_21_0();
            *(_WORD *)(v109 + 32) = v85;
            if ((v86[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96] & 1) != 0)
            {
              v119 = 7104878;
              v120 = 0xE300000000000000;
            }
            else
            {
              v150 = OUTLINED_FUNCTION_89_24((uint64_t)&v86[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes]);
              OUTLINED_FUNCTION_823(v150, v151);
              v119 = OUTLINED_FUNCTION_661_0();
              v120 = v152;
            }
            v153 = OUTLINED_FUNCTION_551_0(v119);
            OUTLINED_FUNCTION_275_4(v153);

            OUTLINED_FUNCTION_27();
            OUTLINED_FUNCTION_757();
            OUTLINED_FUNCTION_749(v154, v120, v155, v156, (uint8_t *)v109);
            OUTLINED_FUNCTION_747();
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_43_19(v148, type metadata accessor for Participant);
          v149 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v182);
          OUTLINED_FUNCTION_109_0(v149, &demangling cache variable for type metadata for Participant?);
          v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
          v158 = (uint64_t)v167;
          v159 = (uint64_t)&v167[*(int *)(v157 + 48)];
          v160 = *(int *)(v157 + 64);
          outlined init with copy of RadarReporting((uint64_t)v183, (uint64_t)v167);
          outlined init with take of StagedCollaboration(v87, v159, type metadata accessor for Participant);
          *(_QWORD *)(v158 + v160) = v107;
          OUTLINED_FUNCTION_80_0();
          __swift_storeEnumTagSinglePayload(v161, v162, v163, v157);
          OUTLINED_FUNCTION_2_0();
          v164 = v107;
          OUTLINED_FUNCTION_438_0(v158, v165, (uint64_t *)&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
          goto LABEL_36;
        }
        OUTLINED_FUNCTION_671_0();
        v121 = v169;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v87, v169, type metadata accessor for Participant);
        v122 = v61;
        v123 = v86;
        v124 = v122;
        v125 = OUTLINED_FUNCTION_44_18();
        OUTLINED_FUNCTION_643();
        v126 = OUTLINED_FUNCTION_12_0();
        if (OUTLINED_FUNCTION_561_0(v126))
        {
          LODWORD(v177) = v60;
          v178 = v123;
          v180 = v49;
          v127 = OUTLINED_FUNCTION_105();
          v128 = OUTLINED_FUNCTION_105();
          v181 = (char *)OUTLINED_FUNCTION_571_0(v128);
          OUTLINED_FUNCTION_360_1(4.8153e-34);
          specialized >> prefix<A>(_:)((uint64_t)&v184);
          OUTLINED_FUNCTION_704();
          OUTLINED_FUNCTION_553(v129, &demangling cache variable for type metadata for Conversation?);
          *(_QWORD *)&v184 = OUTLINED_FUNCTION_9_57(v23, v130, (uint64_t *)&v181);
          OUTLINED_FUNCTION_137_0();
          OUTLINED_FUNCTION_54_1();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v182);
          *(_WORD *)(v127 + 12) = 2080;
          OUTLINED_FUNCTION_135(v121, v168);
          OUTLINED_FUNCTION_482();
          v132 = v131;
          OUTLINED_FUNCTION_275(v131, &demangling cache variable for type metadata for Participant?);
          *(_QWORD *)&v184 = OUTLINED_FUNCTION_191(v132, v133, (uint64_t *)&v181);
          OUTLINED_FUNCTION_137_0();
          OUTLINED_FUNCTION_21_0();
          OUTLINED_FUNCTION_137_1(v121);
          OUTLINED_FUNCTION_650_0();
          OUTLINED_FUNCTION_59(v134, &lazy cache variable for type metadata for TUConversationNotice);
          v135 = v125;
          v136 = OUTLINED_FUNCTION_453();
          *(_QWORD *)&v184 = OUTLINED_FUNCTION_705(v136, v137);
          OUTLINED_FUNCTION_137_0();

          OUTLINED_FUNCTION_21_0();
          *(_WORD *)(v127 + 32) = (_WORD)v125;
          if ((v86[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96] & 1) != 0)
          {
            v138 = 7104878;
          }
          else
          {
            v140 = OUTLINED_FUNCTION_89_24((uint64_t)&v86[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes]);
            OUTLINED_FUNCTION_823(v140, v141);
            v138 = OUTLINED_FUNCTION_661_0();
          }
          v142 = v178;
          v143 = v177;
          v144 = OUTLINED_FUNCTION_551_0(v138);
          OUTLINED_FUNCTION_275_4(v144);

          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_749(&dword_1BD004000, v142, v143, "Calling sessionActionNoticePosted for %s, %s, %s, deviceFamily: %s", (uint8_t *)v127);
          OUTLINED_FUNCTION_757();
          OUTLINED_FUNCTION_747();
          OUTLINED_FUNCTION_60();
        }
        v139 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v182);
        OUTLINED_FUNCTION_43_19(v139, type metadata accessor for Participant);

        v145 = &v86[OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted];
        OUTLINED_FUNCTION_2_0();
        v146 = *(void (**)(_QWORD *, uint64_t, id, _QWORD, uint64_t))v145;
        if (!*(_QWORD *)v145)
        {
          outlined destroy of AccountUpdateNotice(v87, type metadata accessor for Participant);
          OUTLINED_FUNCTION_109_0(v147, &demangling cache variable for type metadata for Participant?);
LABEL_36:
          swift_endAccess();
          goto LABEL_37;
        }
        swift_endAccess();
        partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
        v146(v183, v87, v125, 0, 1);
        OUTLINED_FUNCTION_11_14((uint64_t)v146);
        outlined destroy of AccountUpdateNotice(v87, type metadata accessor for Participant);
      }
      OUTLINED_FUNCTION_109_0(v98, &demangling cache variable for type metadata for Participant?);
    }
LABEL_37:
    OUTLINED_FUNCTION_668_0();
    goto LABEL_38;
  }
  OUTLINED_FUNCTION_553(v68, &demangling cache variable for type metadata for Conversation?);
  OUTLINED_FUNCTION_643();
  v80 = OUTLINED_FUNCTION_31_6();
  if (OUTLINED_FUNCTION_13_0(v80))
  {
    v81 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v81);
    OUTLINED_FUNCTION_14_14(&dword_1BD004000, v82, v83, "Unable to lookup active conversation in CallCenterProviderDelegate noticePosted");
    OUTLINED_FUNCTION_60();
  }

LABEL_38:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:launchStateChanged:activitySession:conversation:)()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  int v35;
  void (*v36)(uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  void (*v39)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  os_log_type_t v44;
  _WORD *v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  void (*v60)(_QWORD, _QWORD, _QWORD);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD v66[2];
  char *v67;
  NSObject *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[3];
  uint64_t v77;
  _UNKNOWN **v78;
  uint64_t v79;

  OUTLINED_FUNCTION_93();
  v69 = v5;
  v70 = v6;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_88_11();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v66 - v12;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_83_4();
  OUTLINED_FUNCTION_59(v15, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v4 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_175_3(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
  OUTLINED_FUNCTION_333_4();
  OUTLINED_FUNCTION_714();
  OUTLINED_FUNCTION_147_7(v16);
  if ((v1 & 1) == 0)
  {
    __break(1u);
LABEL_25:
    swift_once();
    goto LABEL_4;
  }
  if (*((_BYTE *)&v1->isa + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode))
    goto LABEL_17;
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_25;
LABEL_4:
  v17 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_182_3(v17, (uint64_t)&static Logger.conversationControls);
  v18 = v8;
  v68 = v1;
  Logger.logObject.getter();
  v19 = OUTLINED_FUNCTION_12_0();
  v20 = OUTLINED_FUNCTION_78_0(v1);
  v67 = v13;
  v66[1] = v18;
  if (v20)
  {
    v21 = OUTLINED_FUNCTION_105();
    v66[0] = v9;
    v22 = v21;
    v79 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v22 = 136315394;
    v76[0] = v69;
    type metadata accessor for TUConversationActivitySessionApplicationState(0);
    v23 = OUTLINED_FUNCTION_444_0();
    v76[0] = OUTLINED_FUNCTION_314_2(v23, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v25 = OUTLINED_FUNCTION_53();
    *(_WORD *)(v22 + 12) = 2080;
    v76[0] = v18;
    OUTLINED_FUNCTION_59(v25, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
    v26 = v18;
    v27 = String.init<A>(reflecting:)();
    v29 = OUTLINED_FUNCTION_314_2(v27, v28);
    OUTLINED_FUNCTION_370_3(v29);

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v1, v19, "Handling launchStateChanged notice with state:%s for session:%s", (uint8_t *)v22);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  v30 = (_QWORD *)v70;
  OUTLINED_FUNCTION_649_0();
  if (v77)
  {
    OUTLINED_FUNCTION_425_1();
    v32 = v67;
    OUTLINED_FUNCTION_152_7((uint64_t)v18);
    v33 = v30[3];
    v34 = v30[4];
    __swift_project_boxed_opaque_existential_1(v30, v33);
    OUTLINED_FUNCTION_152_7(v33);
    v35 = static UUID.== infix(_:_:)();
    v36 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v36(v3, v9);
    v36((uint64_t)v32, v9);
    if ((v35 & 1) != 0)
    {
      v37 = (char *)v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged;
      v38 = OUTLINED_FUNCTION_1();
      v39 = *(void (**)(_QWORD *, _QWORD *, uint64_t))v37;
      if (*(_QWORD *)v37)
      {
        OUTLINED_FUNCTION_59(v38, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
        v77 = v40;
        v78 = &protocol witness table for TUConversationActivitySession;
        OUTLINED_FUNCTION_612_0();
        v76[0] = v41;
        v42 = v41;
        v43 = OUTLINED_FUNCTION_50();
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v43);
        v39(v30, v76, v69);
        OUTLINED_FUNCTION_11_14((uint64_t)v39);
        OUTLINED_FUNCTION_103();
      }
      else
      {
        v57 = v1;
        OUTLINED_FUNCTION_746();
        v58 = OUTLINED_FUNCTION_37_4();
        if (os_log_type_enabled(0, v58))
        {
          v59 = (uint8_t *)OUTLINED_FUNCTION_105();
          v72 = OUTLINED_FUNCTION_105();
          *(_DWORD *)v59 = 136315138;
          v60 = *(void (**)(_QWORD, _QWORD, _QWORD))v37;
          if (*(_QWORD *)v37)
          {
            v61 = *((_QWORD *)v37 + 1);
            v62 = OUTLINED_FUNCTION_15();
            *(_QWORD *)(v62 + 16) = v60;
            *(_QWORD *)(v62 + 24) = v61;
            v76[0] = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Activity, @unowned TUConversationActivitySessionApplicationState) -> ();
            v76[1] = v62;
            OUTLINED_FUNCTION_14_11();
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_:_:_:));
            v63 = OUTLINED_FUNCTION_444_0();
            v65 = v64;
          }
          else
          {
            v65 = 0xE300000000000000;
            v63 = 7104878;
          }
          v76[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v65, &v72);
          OUTLINED_FUNCTION_82_8();

          OUTLINED_FUNCTION_30_4();
          OUTLINED_FUNCTION_48(&dword_1BD004000, 0, v58, "Unable to call appLaunchStateChanged handler: %s", v59);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }

      }
    }
    else
    {
      outlined init with copy of RadarReporting((uint64_t)&v79, (uint64_t)v76);
      outlined init with copy of RadarReporting((uint64_t)v30, (uint64_t)v73);
      OUTLINED_FUNCTION_746();
      v48 = OUTLINED_FUNCTION_789();
      if (OUTLINED_FUNCTION_570_0(v48))
      {
        v49 = OUTLINED_FUNCTION_105();
        v70 = OUTLINED_FUNCTION_105();
        v72 = v70;
        *(_DWORD *)v49 = 136315394;
        __swift_project_boxed_opaque_existential_1(v76, v77);
        LODWORD(v69) = v35;
        OUTLINED_FUNCTION_180_2();
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v50 = dispatch thunk of CustomStringConvertible.description.getter();
        v52 = v51;
        OUTLINED_FUNCTION_816();
        v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v52, &v72);
        OUTLINED_FUNCTION_669_0();
        OUTLINED_FUNCTION_82_8();
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_103();
        *(_WORD *)(v49 + 12) = 2080;
        v68 = (v49 + 14);
        v54 = v74;
        v53 = v75;
        __swift_project_boxed_opaque_existential_1(v73, v74);
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v53);
        OUTLINED_FUNCTION_481_1();
        v55 = dispatch thunk of CustomStringConvertible.description.getter();
        OUTLINED_FUNCTION_816();
        v71 = OUTLINED_FUNCTION_191(v55, v56, &v72);
        OUTLINED_FUNCTION_669_0();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_21_0();
        OUTLINED_FUNCTION_707();
        OUTLINED_FUNCTION_26_6(&dword_1BD004000, v34, (os_log_type_t)v69, "activeConversationUUID:%s doesn't match conversationUUID:%s", (uint8_t *)v49);
        OUTLINED_FUNCTION_25_6();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_103();
      OUTLINED_FUNCTION_707();

    }
    OUTLINED_FUNCTION_100_2();
  }
  else
  {
    OUTLINED_FUNCTION_159_8(v31, &demangling cache variable for type metadata for Conversation?);
    OUTLINED_FUNCTION_746();
    v44 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v44))
    {
      v45 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v45);
      OUTLINED_FUNCTION_14_14(&dword_1BD004000, v46, v47, "Unable to lookup active conversation in CallCenterProviderDelegate launchStateChanged");
      OUTLINED_FUNCTION_60();
    }

  }
LABEL_17:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:audioPausedChangedFor:remoteParticipantWithIdentifier:updatedAudioPaused:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (**v51)(uint64_t, _QWORD);
  uint64_t v52;
  void (*v53)(uint64_t, _QWORD);
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  OUTLINED_FUNCTION_93();
  v59 = v0;
  v6 = v5;
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_37_18();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_827(v15, v16, v17, v18, v19, v20, v21, v22, v55);
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v24, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_533((uint64_t)v2, *MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v25 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_39_0((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v25 & 1) != 0)
  {
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v26 = OUTLINED_FUNCTION_15();
  v57 = xmmword_1BD6441D0;
  *(_OWORD *)(v26 + 16) = xmmword_1BD6441D0;
  HIDWORD(v55) = v6;
  v61 = v6 & 1;
  v27 = String.init<A>(reflecting:)();
  v29 = v28;
  v56 = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
  *(_QWORD *)(v26 + 64) = v56;
  *(_QWORD *)(v26 + 32) = v27;
  *(_QWORD *)(v26 + 40) = v29;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_239_1();
  OUTLINED_FUNCTION_133();
  v30 = (uint64_t *)(v59 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_1();
  v31 = *v30;
  v32 = *(_QWORD *)(*v30 + 16);
  if (v32)
  {
    OUTLINED_FUNCTION_37_3();
    v34 = v31 + v33;
    v35 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v36 = OUTLINED_FUNCTION_610_0();
      OUTLINED_FUNCTION_111(v36, v37);
      v38 = v3 + *(int *)(v12 + 28);
      if (*(_QWORD *)v38)
      {
        if ((*(_BYTE *)(v38 + 16) & 1) == 0 && *(_QWORD *)(v38 + 8) == v8)
          break;
      }
      OUTLINED_FUNCTION_40_58(v3);
      v34 += v35;
      if (!--v32)
        goto LABEL_11;
    }
    v40 = OUTLINED_FUNCTION_261_2();
    outlined init with take of StagedCollaboration(v40, v41, v42);
    v39 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    v39 = 1;
  }
  OUTLINED_FUNCTION_3_68((uint64_t)v11, v39);
  OUTLINED_FUNCTION_58_1();
  v43 = OUTLINED_FUNCTION_69_0((uint64_t)v11, 1, v12);
  if (v45)
  {
    OUTLINED_FUNCTION_275(v43, &demangling cache variable for type metadata for Participant?);
    static os_log_type_t.error.getter();
    v46 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v46 + 16) = v57;
    v60 = v8;
    v47 = OUTLINED_FUNCTION_176_3();
    v48 = v56;
    *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v46 + 64) = v48;
    *(_QWORD *)(v46 + 32) = v47;
    *(_QWORD *)(v46 + 40) = v49;
    OUTLINED_FUNCTION_127_5();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v50 = v58;
    OUTLINED_FUNCTION_74_1((uint64_t)v11, v44, type metadata accessor for Participant);
    v51 = (void (**)(uint64_t, _QWORD))(v59
                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
    v52 = OUTLINED_FUNCTION_2_0();
    v53 = *v51;
    if (*v51)
    {
      OUTLINED_FUNCTION_69_11();
      partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v53(v50, BYTE4(v55) & 1);
      v54 = OUTLINED_FUNCTION_11_14((uint64_t)v53);
      OUTLINED_FUNCTION_315(v54, type metadata accessor for Participant);
    }
    else
    {
      OUTLINED_FUNCTION_315(v52, type metadata accessor for Participant);
      OUTLINED_FUNCTION_69_11();
    }
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:updatedGroupNameForConversation:withGroupPhotoData:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  void (**v21)(uint64_t, uint64_t, uint64_t);
  void (*v22)(uint64_t, uint64_t, uint64_t);
  __n128 *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v26 = v5;
  v27 = v6;
  v8 = v7;
  v28 = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_37_18();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - v11;
  v13 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_59(v15, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x1E0DEF740], v13);
  v16 = OUTLINED_FUNCTION_770();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v1, v13);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_161_9();
  if (!v29)
  {
    OUTLINED_FUNCTION_69_25(v17, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_8:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v23 = (__n128 *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_82_13(v23, (__n128)xmmword_1BD6441D0);
      OUTLINED_FUNCTION_143_8();
      OUTLINED_FUNCTION_439_0();
      v24 = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_552_0(v24);
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_53();
      goto LABEL_9;
    }
LABEL_11:
    swift_once();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_428_1();
  OUTLINED_FUNCTION_134_9();
  OUTLINED_FUNCTION_820();
  OUTLINED_FUNCTION_134_9();
  OUTLINED_FUNCTION_263();
  v18 = static UUID.== infix(_:_:)();
  v19 = *(void (**)(uint64_t))(v2 + 8);
  v20 = OUTLINED_FUNCTION_348();
  v19(v20);
  OUTLINED_FUNCTION_603((uint64_t)v12);
  if ((v18 & 1) != 0)
  {
    v21 = (void (**)(uint64_t, uint64_t, uint64_t))(v4
                                                          + OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
    OUTLINED_FUNCTION_1();
    v22 = *v21;
    if (*v21)
    {
      partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v22(v8, v26, v27);
      OUTLINED_FUNCTION_11_14((uint64_t)v22);
    }
  }
  OUTLINED_FUNCTION_12_6();
LABEL_9:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:remoteScreenShareAttributesChanged:isLocallySharing:)(uint64_t a1, uint64_t a2, int a3)
{
  ConversationController.updateRemoteScreenShareAttributesChanged(remoteAttributes:isLocallySharing:)(a2, a3);
}

void ConversationController.callCenter(_:buzzedMemberFor:member:)()
{
  char v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __n128 *v17;
  unint64_t v18;
  _QWORD v19[7];
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_93();
  v19[0] = v3;
  v5 = v4;
  v19[1] = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v19 - v8;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_59(v11, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v12 = OUTLINED_FUNCTION_7_22();
  *v2 = v12;
  OUTLINED_FUNCTION_533_0(v12, *MEMORY[0x1E0DEF740]);
  _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_458_1();
  if ((v0 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_161_9();
  if (!v19[5])
  {
    OUTLINED_FUNCTION_69_25(v13, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_7:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v17 = (__n128 *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_82_13(v17, (__n128)xmmword_1BD6441D0);
      OUTLINED_FUNCTION_143_8();
      OUTLINED_FUNCTION_362_3();
      v18 = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
      OUTLINED_FUNCTION_407_1(v18);
      OUTLINED_FUNCTION_61_30();
      OUTLINED_FUNCTION_133();
      goto LABEL_8;
    }
LABEL_10:
    swift_once();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_54_38();
  v14 = v21;
  __swift_project_boxed_opaque_existential_1(&v20, v21);
  OUTLINED_FUNCTION_192_4(v14);
  v15 = v5[3];
  __swift_project_boxed_opaque_existential_1(v5, v15);
  OUTLINED_FUNCTION_192_4(v15);
  v16 = OUTLINED_FUNCTION_197_3();
  OUTLINED_FUNCTION_399_3(v1);
  OUTLINED_FUNCTION_399_3((uint64_t)v9);
  if ((v16 & 1) != 0)
    ConversationController.updateBuzzedMember(_:)();
  OUTLINED_FUNCTION_12_6();
LABEL_8:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:collaborationsChangedFor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD *, void (*)(), uint64_t);
  void (**v18)(_QWORD);
  void (*v19)(_QWORD);
  __n128 *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;

  OUTLINED_FUNCTION_93();
  v3 = v0;
  v5 = v4;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_55_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_83_4();
  OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_175_3(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v10 = OUTLINED_FUNCTION_333_4();
  OUTLINED_FUNCTION_147_7(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_161_9();
  if (!v25)
  {
    OUTLINED_FUNCTION_69_25(v11, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_10:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v20 = (__n128 *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_82_13(v20, (__n128)xmmword_1BD6441D0);
      v21 = OUTLINED_FUNCTION_143_8();
      v23 = v22;
      v20[4].n128_u64[0] = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
      v20[2].n128_u64[0] = v21;
      v20[2].n128_u64[1] = v23;
      OUTLINED_FUNCTION_239_1();
      OUTLINED_FUNCTION_133();
      goto LABEL_11;
    }
LABEL_13:
    swift_once();
    goto LABEL_10;
  }
  outlined init with take of Notice(&v24, (uint64_t)v26);
  v12 = v27;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  OUTLINED_FUNCTION_76_22(v12);
  v13 = v5[3];
  v14 = __swift_project_boxed_opaque_existential_1(v5, v13);
  OUTLINED_FUNCTION_76_22(v13);
  OUTLINED_FUNCTION_233_4();
  OUTLINED_FUNCTION_255_3();
  OUTLINED_FUNCTION_736();
  if ((v14 & 1) != 0)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v15 = static CollaborationImageFetcher.shared;
    v16 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_251();
    v17 = *(void (**)(_QWORD *, void (*)(), uint64_t))(*(_QWORD *)v15 + 144);
    OUTLINED_FUNCTION_11_1();
    v17(v26, partial apply for closure #1 in ConversationController.callCenter(_:collaborationsChangedFor:), v16);
    OUTLINED_FUNCTION_23_0();
    v18 = (void (**)(_QWORD))(v3
                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
    OUTLINED_FUNCTION_1();
    v19 = *v18;
    if (*v18)
    {
      partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v19(0);
      OUTLINED_FUNCTION_11_14((uint64_t)v19);
    }
  }
  OUTLINED_FUNCTION_12_6();
LABEL_11:
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationController.callCenter(_:collaborationsChangedFor:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void (**v4)(_QWORD);
  void (*v5)(_QWORD);

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void (**)(_QWORD))(v2
                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
    swift_beginAccess();
    v5 = *v4;
    if (*v4)
    {
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v5);

      v5(0);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v5);
    }
    else
    {

    }
  }
}

void ConversationController.callCenter(_:addedCollaborationNotice:forParticipant:in:)()
{
  uint64_t *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD);
  char *v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, _QWORD *);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t ObjectType;
  _QWORD *v73;
  uint64_t v74;
  char *v75;

  OUTLINED_FUNCTION_93();
  v73 = v6;
  v67 = v7;
  v65 = v8;
  v9 = v1;
  ObjectType = swift_getObjectType();
  v69 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_5_27();
  v70 = v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  v66 = (uint64_t)&v64 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_5_27();
  v68 = v15;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_112();
  MEMORY[0x1E0C80A78](v17);
  v71 = (char *)&v64 - v18;
  v19 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v64 - v22;
  v24 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_59(v26, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v0 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v0, *MEMORY[0x1E0DEF740], v24);
  v27 = OUTLINED_FUNCTION_814();
  OUTLINED_FUNCTION_101((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if ((v27 & 1) != 0)
  {
    if (one-time initialization token for shared == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 272))() & 1) != 0)
  {
    v28 = v9;
    ConversationController.lookupActiveConversation()();
    if (v74)
    {
      OUTLINED_FUNCTION_191_1();
      OUTLINED_FUNCTION_73_24();
      v30 = v73;
      OUTLINED_FUNCTION_195_5(v73);
      OUTLINED_FUNCTION_73_24();
      v31 = OUTLINED_FUNCTION_443_1();
      v32 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v32(v2, v19);
      v32((uint64_t)v23, v19);
      if ((v31 & 1) != 0)
      {
        v33 = (uint64_t)v71;
        v34 = OUTLINED_FUNCTION_193_2();
        v35 = v69;
        __swift_storeEnumTagSinglePayload(v34, v36, 1, v69);
        v37 = ConversationController.activeParticipant(from:in:)(v67, v3);
        OUTLINED_FUNCTION_32_18(v37, &demangling cache variable for type metadata for Participant?);
        v38 = OUTLINED_FUNCTION_69_0(v3, 1, v35);
        if (v39)
        {
          OUTLINED_FUNCTION_219(v38, &demangling cache variable for type metadata for Participant?);
          OUTLINED_FUNCTION_1();
          v40 = OUTLINED_FUNCTION_65_2();
          outlined init with copy of ConversationControlsAppLaunchButtonType(v40, v41, v42);
        }
        else
        {
          v45 = v66;
          OUTLINED_FUNCTION_64_5(v3, v66);
          OUTLINED_FUNCTION_64_5(v45, v33);
        }
        v46 = v70;
        v47 = v68;
        __swift_storeEnumTagSinglePayload(v33, 0, 1, v35);
        v48 = OUTLINED_FUNCTION_114();
        outlined init with copy of FeatureEligibility?(v48, v49, v50);
        OUTLINED_FUNCTION_69_0(v47, 1, v35);
        if (v39)
        {
          OUTLINED_FUNCTION_25_0(v47);
          OUTLINED_FUNCTION_59(v51, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
          v53 = v52;
          static OS_os_log.default.getter();
          OUTLINED_FUNCTION_12_0();
          OUTLINED_FUNCTION_255();

          v54 = OUTLINED_FUNCTION_124_0();
        }
        else
        {
          v56 = OUTLINED_FUNCTION_157();
          outlined init with take of StagedCollaboration(v56, v57, v58);
          v59 = &v28[OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted];
          v60 = OUTLINED_FUNCTION_2_0();
          v61 = *(void (**)(uint64_t, uint64_t, _QWORD *))v59;
          if (!*(_QWORD *)v59)
          {
            OUTLINED_FUNCTION_22_29(v60, type metadata accessor for Participant);
            OUTLINED_FUNCTION_32_18(v63, &demangling cache variable for type metadata for Participant?);
            OUTLINED_FUNCTION_539_0();
            goto LABEL_18;
          }
          OUTLINED_FUNCTION_539_0();
          partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
          v61(v65, v46, v30);
          v62 = OUTLINED_FUNCTION_11_14((uint64_t)v61);
          OUTLINED_FUNCTION_22_29(v62, type metadata accessor for Participant);
          v55 = &demangling cache variable for type metadata for Participant?;
          v54 = v33;
        }
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v54, v55);
      }
LABEL_18:
      OUTLINED_FUNCTION_100_2();
      goto LABEL_19;
    }
    OUTLINED_FUNCTION_159_8(v29, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v43 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v43 + 16) = xmmword_1BD6441D0;
    v75 = v9;
    v44 = v9;
    OUTLINED_FUNCTION_643_0();
    OUTLINED_FUNCTION_790();
    *(_QWORD *)(v43 + 64) = OUTLINED_FUNCTION_331_4(MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v43 + 32) = v2;
    *(_QWORD *)(v43 + 40) = v3;
    OUTLINED_FUNCTION_119_7();
    OUTLINED_FUNCTION_2_1();
  }
LABEL_19:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:cameraMixedWithScreenDidChangeFor:)()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  __n128 *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_55_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_83_4();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_175_3(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
  v8 = OUTLINED_FUNCTION_333_4();
  OUTLINED_FUNCTION_147_7(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_161_9();
  if (!v18)
  {
    OUTLINED_FUNCTION_69_25(v9, &demangling cache variable for type metadata for Conversation?);
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_7:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v13 = (__n128 *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_82_13(v13, (__n128)xmmword_1BD6441D0);
      v14 = OUTLINED_FUNCTION_143_8();
      v16 = v15;
      v13[4].n128_u64[0] = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
      v13[2].n128_u64[0] = v14;
      v13[2].n128_u64[1] = v16;
      OUTLINED_FUNCTION_239_1();
      OUTLINED_FUNCTION_133();
      goto LABEL_8;
    }
LABEL_10:
    swift_once();
    goto LABEL_7;
  }
  outlined init with take of Notice(&v17, (uint64_t)v19);
  v10 = v20;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  OUTLINED_FUNCTION_76_22(v10);
  v11 = v3[3];
  v12 = __swift_project_boxed_opaque_existential_1(v3, v11);
  OUTLINED_FUNCTION_76_22(v11);
  OUTLINED_FUNCTION_233_4();
  OUTLINED_FUNCTION_255_3();
  OUTLINED_FUNCTION_736();
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_1();
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
  }
  OUTLINED_FUNCTION_12_6();
LABEL_8:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.callCenter(_:screenSharingAvailablilityChanged:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;

  v3 = v0;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v6 = OUTLINED_FUNCTION_7_22();
  *v1 = v6;
  OUTLINED_FUNCTION_17(v6, *MEMORY[0x1E0DEF740]);
  v7 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v7 & 1) != 0)
  {
    v8 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
    OUTLINED_FUNCTION_1();
    v9 = *v8;
    if (*v8)
    {
      partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      OUTLINED_FUNCTION_519_1();
      OUTLINED_FUNCTION_11_14(v9);
    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

void ConversationController.callCenter(_:screenSharingRequestsChangedFor:fromOldConversation:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (**v29)(void);
  void (*v30)(void);
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD v43[3];
  char *v44;
  char *v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_15_6();
  v6 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v7);
  v45 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  v44 = (char *)v43 - v10;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v12, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_533((uint64_t)v1, *MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
  v13 = OUTLINED_FUNCTION_132_2();
  OUTLINED_FUNCTION_39_0((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  if ((v13 & 1) != 0)
  {
    if (one-time initialization token for conversationController == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v14 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationController);
  v15 = (char *)OUTLINED_FUNCTION_762();
  v46 = v13;
  Logger.logObject.getter();
  v16 = OUTLINED_FUNCTION_12_0();
  v17 = OUTLINED_FUNCTION_459_0(v13);
  v43[2] = v5;
  if (v17)
  {
    v43[1] = v6;
    v18 = (uint8_t *)OUTLINED_FUNCTION_105();
    v50 = OUTLINED_FUNCTION_105();
    v43[0] = v2;
    *(_DWORD *)v18 = 136315138;
    v48 = (uint64_t)v15;
    v19 = v15;
    v20 = OUTLINED_FUNCTION_489_1();
    v48 = OUTLINED_FUNCTION_314_2(v20, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v13, v16, "callCenterProviderDelegate screenSharingRequestsChangedFor: callback - %s", v18);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  ConversationController.lookupActiveConversation()();
  if (v49)
  {
    OUTLINED_FUNCTION_191_1();
    v23 = v44;
    OUTLINED_FUNCTION_73_24();
    OUTLINED_FUNCTION_195_5(v4);
    OUTLINED_FUNCTION_73_24();
    v24 = OUTLINED_FUNCTION_233_4();
    v25 = *(void (**)(uint64_t))(v2 + 8);
    v26 = OUTLINED_FUNCTION_49_16();
    v25(v26);
    ((void (*)(char *, uint64_t))v25)(v23, v6);
    if ((v24 & 1) != 0)
    {
      v27 = &v15[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
      OUTLINED_FUNCTION_1();
      v28 = *((_QWORD *)v27 + 1);
      OUTLINED_FUNCTION_15_6();
      v6 = *(_QWORD *)(v28 + 88);
      OUTLINED_FUNCTION_72_9();
      LOBYTE(v28) = OUTLINED_FUNCTION_5_80();
      OUTLINED_FUNCTION_10();
      if ((v28 & 1) != 0)
      {
        v29 = (void (**)(void))&v15[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged];
        OUTLINED_FUNCTION_1();
        v30 = *v29;
        if (*v29)
        {
          v31 = v4[4];
          v32 = (_QWORD *)OUTLINED_FUNCTION_291_4();
          OUTLINED_FUNCTION_80_20(v32, v33);
          v34 = *(void (**)(uint64_t))(v31 + 352);
          OUTLINED_FUNCTION_11_1();
          v35 = OUTLINED_FUNCTION_318();
          v34(v35);
          v30();
          OUTLINED_FUNCTION_496_0();
          OUTLINED_FUNCTION_53();
        }
        OUTLINED_FUNCTION_100_2();
        goto LABEL_16;
      }
    }
    OUTLINED_FUNCTION_100_2();
  }
  else
  {
    OUTLINED_FUNCTION_159_8(v22, &demangling cache variable for type metadata for Conversation?);
  }
  v36 = v15;
  v37 = v46;
  Logger.logObject.getter();
  v38 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v38))
  {
    v39 = (uint8_t *)OUTLINED_FUNCTION_105();
    v50 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v39 = 136315138;
    v47 = (uint64_t)v36;
    v40 = v36;
    v41 = String.init<A>(reflecting:)();
    v47 = OUTLINED_FUNCTION_314_2(v41, v42);
    OUTLINED_FUNCTION_31_3();

    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v37, (os_log_type_t)v6, "screenSharingRequestsChangedFor conversation does not match conversation we are currently tracking- %s", v39);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

LABEL_16:
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.frequencyController(_:audioPowerChanged:forParticipantWithStreamToken:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD v10[6];

  OUTLINED_FUNCTION_51_29();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_7_22();
  v8 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v8 + 16) = v0;
  *(_QWORD *)(v8 + 24) = v2;
  *(_DWORD *)(v8 + 32) = v4;
  v10[4] = partial apply for closure #1 in ConversationController.frequencyController(_:audioPowerChanged:forParticipantWithStreamToken:);
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed () -> ();
  v10[3] = &block_descriptor_130;
  _Block_copy(v10);
  v9 = v0;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  v10[0] = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_585(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_132_10();
  OUTLINED_FUNCTION_429();
}

void sub_1BD56C970()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_465_0();

  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8));
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_7_7();
}

void closure #1 in ConversationController.frequencyController(_:audioPowerChanged:forParticipantWithStreamToken:)(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (**v30)(char *, float);
  void (*v31)(char *, float);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)(uint64_t, float);
  void (*v36)(uint64_t, float);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[42];

  v43 = a2;
  v5 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v8);
  v42 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for Participant(0);
  v10 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v37 - v14;
  MEMORY[0x1E0C80A78](v16);
  v40 = (uint64_t)&v37 - v17;
  v18 = (uint64_t *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v19 = *v18;
  v20 = *(_QWORD *)(*v18 + 16);
  if (v20)
  {
    v38 = v12;
    v39 = a1;
    v21 = v19 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v22 = *(_QWORD *)(v10 + 72);
    v37 = v19;
    swift_bridgeObjectRetain();
    do
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v21, (uint64_t)v15, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v15, (uint64_t)v7, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v24 = &v7[*(int *)(v23 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v7[*(int *)(v23 + 64)], *(_QWORD *)&v7[*(int *)(v23 + 64) + 8]);
        memcpy(v44, v24, sizeof(v44));
        v25 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v7, v25);
        v26 = v44[1];
        outlined destroy of Participant.MediaInfo((uint64_t)v44);
        if (v26 == v43)
        {
          v28 = v42;
          outlined init with take of StagedCollaboration((uint64_t)v15, v42, type metadata accessor for Participant);
          v29 = 0;
          v12 = v38;
          a1 = v39;
          goto LABEL_10;
        }
      }
      else
      {
        outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for Participant.State);
      }
      outlined destroy of AccountUpdateNotice((uint64_t)v15, type metadata accessor for Participant);
      v21 += v22;
      --v20;
    }
    while (v20);
    v29 = 1;
    v12 = v38;
    a1 = v39;
    v28 = v42;
LABEL_10:
    v27 = v41;
  }
  else
  {
    swift_bridgeObjectRetain();
    v29 = 1;
    v27 = v41;
    v28 = v42;
  }
  __swift_storeEnumTagSinglePayload(v28, v29, 1, v27);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v28, 1, v27) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v28, &demangling cache variable for type metadata for Participant?);
    v30 = (void (**)(char *, float))(a1
                                              + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
    swift_beginAccess();
    v31 = *v30;
    if (!*v30)
      return;
    v32 = a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    swift_beginAccess();
    outlined init with copy of ConversationControlsAppLaunchButtonType(v32, (uint64_t)v12, type metadata accessor for Participant);
    swift_retain();
    v31(v12, a3);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v31);
    v33 = (uint64_t)v12;
    goto LABEL_16;
  }
  v34 = v40;
  outlined init with take of StagedCollaboration(v28, v40, type metadata accessor for Participant);
  v35 = (void (**)(uint64_t, float))(a1
                                             + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  swift_beginAccess();
  v36 = *v35;
  if (*v35)
  {
    swift_endAccess();
    swift_retain();
    v36(v34, a3);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v36);
    v33 = v34;
LABEL_16:
    outlined destroy of AccountUpdateNotice(v33, type metadata accessor for Participant);
    return;
  }
  outlined destroy of AccountUpdateNotice(v34, type metadata accessor for Participant);
  swift_endAccess();
}

void sub_1BD56CDFC()
{
  void *v0;
  void *v1;

}

void ConversationController.momentsController(_:didUpdate:for:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode) == 1)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v6 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v6 + 16) = xmmword_1BD645380;
    OUTLINED_FUNCTION_59(v6, &lazy cache variable for type metadata for TUMomentsCapabilities);
    v8 = v7;
    v9 = a2;
    String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_56_33();
    v10 = MEMORY[0x1E0DEA968];
    v11 = OUTLINED_FUNCTION_406_0();
    *(_QWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 32) = a2;
    *(_QWORD *)(v6 + 40) = v8;
    v17 = a3;
    OUTLINED_FUNCTION_59(v11, &lazy cache variable for type metadata for TUMomentsProvider);
    v12 = a3;
    v13 = OUTLINED_FUNCTION_489_1();
    *(_QWORD *)(v6 + 96) = v10;
    *(_QWORD *)(v6 + 104) = v11;
    OUTLINED_FUNCTION_702(v13, v14);
    OUTLINED_FUNCTION_127_5();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_311_5();
    ConversationController.update(with:)((uint64_t)&v17);
    OUTLINED_FUNCTION_305(v15, &demangling cache variable for type metadata for Conversation?, v16);
    OUTLINED_FUNCTION_40_7();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_127_5();
    OUTLINED_FUNCTION_429_0();
  }
}

void ConversationController.momentsController(_:willCaptureRemoteRequestFromIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (**v15)(uint64_t);
  void (*v16)(uint64_t);
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];

  OUTLINED_FUNCTION_303_4();
  if (v20)
  {
    OUTLINED_FUNCTION_251_4(v1, v2, v3, v4, v5, v6, v7, v8, v18, v19, v20, v21, v22[0]);
    v9 = v22[4];
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    v10 = OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 200));
    if ((v10 & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_255();
      v15 = (void (**)(uint64_t))(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
      v10 = OUTLINED_FUNCTION_1();
      v16 = *v15;
      if (*v15)
      {
        v17 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
        v16(v17);
        v10 = OUTLINED_FUNCTION_11_14((uint64_t)v16);
      }
    }
    OUTLINED_FUNCTION_219_4(v10, v11, v12, v13, v14);
  }
  else
  {
    OUTLINED_FUNCTION_273_6(v1, &demangling cache variable for type metadata for Conversation?, v3, v4, v5, v6, v7, v8, v18);
  }
  OUTLINED_FUNCTION_40_7();
}

void ConversationController.remoteVideoClientDidReceiveFirstFrame(_:)()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_7_22();
  v6 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v0;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v7 = v2;
  v8 = v0;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  OUTLINED_FUNCTION_585(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_132_10();
  OUTLINED_FUNCTION_429();
}

void sub_1BD56D30C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  const void *v21;
  uint64_t v22;

  _Block_release(v21);

  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 136) + 8));
  OUTLINED_FUNCTION_268_0();
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationController.remoteVideoClientDidReceiveFirstFrame(_:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint8_t *v61;
  uint8_t *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int16 v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  void *v94;
  unsigned __int8 v95;
  id v96;
  void *v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  char v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  id v106;
  void *v107;
  int v108;
  id v109;
  void *v110;
  unsigned int v111;
  id v112;
  void *v113;
  double v114;
  double v115;
  double v116;
  char v117;
  double v118;
  double v119;
  int v120;
  double v121;
  double v122;
  char v123;
  id v124;
  void *v125;
  double v126;
  double v127;
  double v128;
  double v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  int v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t ObjectType;
  void (*v164)(uint64_t, uint64_t);
  char *v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t);
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t);
  char *v171;
  void (**v172)(uint64_t, uint64_t);
  void (*v173)(uint64_t, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (**v177)(uint64_t, uint64_t);
  void (*v178)(uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  __int128 v207;
  unint64_t v208;
  _QWORD *v209;
  _BYTE v210[216];
  uint64_t v211[31];
  __int128 v212;
  __int128 v213;
  double v214;
  unsigned __int8 v215;
  _QWORD v216[27];
  uint64_t v217[27];
  _BYTE v218[24];
  uint64_t v219;
  _BYTE v220[16];
  unint64_t v221;
  unint64_t v222;
  double v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  char v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  _QWORD v234[4];
  _BYTE v235[80];
  _QWORD v236[9];
  __int16 v237;

  v195 = type metadata accessor for UUID();
  v192 = *(_QWORD *)(v195 - 8);
  MEMORY[0x1E0C80A78](v195);
  v189 = (char *)&v185 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v194 = (char *)&v185 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v7);
  v191 = (char *)&v185 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = (_QWORD *)type metadata accessor for Participant(0);
  v205 = *(v209 - 1);
  MEMORY[0x1E0C80A78](v209);
  v10 = (char *)&v185 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v11);
  v193 = (uint64_t)&v185 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v197 = (uint64_t)&v185 - v14;
  MEMORY[0x1E0C80A78](v15);
  v196 = (uint64_t)&v185 - v16;
  MEMORY[0x1E0C80A78](v17);
  v199 = (uint64_t)&v185 - v18;
  MEMORY[0x1E0C80A78](v19);
  v200 = (uint64_t)&v185 - v20;
  MEMORY[0x1E0C80A78](v21);
  v198 = (char *)&v185 - v22;
  MEMORY[0x1E0C80A78](v23);
  v201 = (uint64_t)&v185 - v24;
  MEMORY[0x1E0C80A78](v25);
  *(_QWORD *)&v207 = (char *)&v185 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v185 - v28;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v204 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BD645380;
  *(_QWORD *)&v212 = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  v31 = a1;
  v32 = String.init<A>(reflecting:)();
  v34 = v33;
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
  v208 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v30 + 64) = v208;
  *(_QWORD *)(v30 + 32) = v32;
  *(_QWORD *)(v30 + 40) = v34;
  v35 = objc_msgSend(v31, sel_remoteVideoAttributes);
  if (v35)
  {
    *(_QWORD *)&v212 = v35;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for VideoAttributes);
    v36 = String.init<A>(reflecting:)();
  }
  else
  {
    v37 = 0xE300000000000000;
    v36 = 7104878;
  }
  v38 = v208;
  *(_QWORD *)(v30 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v30 + 104) = v38;
  *(_QWORD *)(v30 + 72) = v36;
  *(_QWORD *)(v30 + 80) = v37;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v206 = v29;
  __swift_storeEnumTagSinglePayload((uint64_t)v29, 1, 1, (uint64_t)v209);
  v233 = 0u;
  memset(v234, 0, 26);
  v231 = 0u;
  v232 = 0u;
  memset(v218, 0, sizeof(v218));
  v219 = 1;
  bzero(v220, 0xB1uLL);
  v39 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v31, 0);
  v40 = &metadata instantiation cache for protocol conformance descriptor for ImageNames.Roster;
  if ((v41 & 1) == 0)
  {
    v42 = v39;
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v43 = type metadata accessor for Logger();
    __swift_project_value_buffer(v43, (uint64_t)&static Logger.conversationController);
    v44 = Logger.logObject.getter();
    v45 = static os_log_type_t.default.getter();
    v46 = os_log_type_enabled(v44, v45);
    v47 = (uint64_t)v206;
    if (v46)
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_1BD004000, v44, v45, "Found participant matching remote video first frame notification", v48, 2u);
      MEMORY[0x1C3B751B8](v48, -1, -1);
    }

    v49 = a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
    swift_beginAccess();
    v40 = v209;
    if ((v42 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v42 < *(_QWORD *)(*(_QWORD *)v49 + 16))
    {
      v50 = *(_QWORD *)v49
          + ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80));
      v51 = *(_QWORD *)(v205 + 72);
      v186 = *(unsigned __int8 *)(v205 + 80);
      v187 = v51;
      v52 = v207;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v50 + v51 * v42, v207, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v52, 0, 1, (uint64_t)v40);
      outlined assign with take of Participant?(v52, v47, &demangling cache variable for type metadata for Participant?);
      if (__swift_getEnumTagSinglePayload(v47, 1, (uint64_t)v40))
      {
        v212 = 0uLL;
        *(_QWORD *)&v213 = 0;
        *((_QWORD *)&v213 + 1) = 1;
        bzero(&v214, 0xB1uLL);
      }
      else
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v47, (uint64_t)v10, type metadata accessor for Participant);
        Participant.screenInfo.getter();
        v40 = v209;
        outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
      }
      outlined assign with take of Participant?((uint64_t)&v212, (uint64_t)v218, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      if (__swift_getEnumTagSinglePayload(v47, 1, (uint64_t)v40))
      {
        v202 = 0;
        v203 = 0;
        v205 = 0;
      }
      else
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v47, (uint64_t)v10, type metadata accessor for Participant);
        v202 = Participant.captionInfo.getter();
        v203 = v91;
        v205 = v92;
        v40 = v209;
        outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
      }
      if (__swift_getEnumTagSinglePayload(v47, 1, (uint64_t)v40))
      {
        swift_bridgeObjectRelease();
        v233 = 0u;
        memset(v234, 0, 26);
        v231 = 0u;
        v232 = 0u;
        v60 = v207;
      }
      else
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v47, (uint64_t)v10, type metadata accessor for Participant);
        Participant.videoInfo.getter();
        v40 = v209;
        outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
        outlined assign with take of Participant?((uint64_t)v235, (uint64_t)&v231, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
        outlined init with take of Any?((uint64_t)v235, (uint64_t)v236, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
        v60 = v207;
        if (v236[0])
          BYTE8(v231) = 1;
      }
      if ((_QWORD)v231)
      {
        v93 = objc_msgSend(v31, sel_remoteVideoAttributes);
        if (v93)
        {
          v94 = v93;
          v95 = objc_msgSend(v93, sel_videoMirrored);

        }
        else
        {
          v95 = 0;
        }
        BYTE13(v231) = v95;
        v40 = v209;
        if ((_QWORD)v231)
        {
          v96 = objc_msgSend(v31, sel_remoteVideoAttributes);
          if (v96)
          {
            v97 = v96;
            v98 = objc_msgSend(v96, sel_orientation);

          }
          else
          {
            v98 = 0;
          }
          *((_QWORD *)&v232 + 1) = VideoAttributeOrientation.deviceOrientation.getter(v98);
          if ((_QWORD)v231)
          {
            v109 = objc_msgSend(v31, sel_remoteVideoAttributes);
            v40 = v209;
            if (v109)
            {
              v110 = v109;
              v111 = objc_msgSend(v109, sel_camera);

            }
            else
            {
              v111 = 0;
            }
            LOBYTE(v233) = VideoAttributeCamera.cameraPosition.getter(v111);
            if ((_QWORD)v231)
            {
              specialized Dictionary.subscript.getter();
              if (*((_QWORD *)&v213 + 1))
              {
                outlined init with take of Notice(&v212, (uint64_t)v217);
                if ((_QWORD)v231)
                {
                  v185 = v42;
                  outlined init with copy of RadarReporting((uint64_t)v217, (uint64_t)v211);
                  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
                  {
                    v190 = a2;
                    static AspectRatio.remoteAspectRatios(with:contentsRect:)(v211, (uint64_t)&v212, 1.0, 1.0);
                    v116 = *((double *)&v212 + 1);
                    v115 = *(double *)&v212;
                    v117 = v213;
                    v118 = *((double *)&v213 + 1);
                    v119 = v214;
                    v120 = v215;
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)v211);
                    if ((v117 & 1) != 0 || v115 == v116)
                    {
                      v115 = 0.0;
                      v116 = 0.0;
                      v121 = 0.0;
                      v122 = 0.0;
                      v123 = 1;
                    }
                    else
                    {
                      v123 = 0;
                      if (v120)
                        v122 = v115;
                      else
                        v122 = v119;
                      if (v120)
                        v121 = v116;
                      else
                        v121 = v118;
                    }
                    v47 = (uint64_t)v206;
                    a2 = v190;
                  }
                  else
                  {
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)v211);
                    v115 = 0.0;
                    v116 = 0.0;
                    v121 = 0.0;
                    v122 = 0.0;
                    v123 = 1;
                  }
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)v217);
                  *((double *)&v233 + 1) = v115;
                  *(double *)v234 = v116;
                  *(double *)&v234[1] = v121;
                  *(double *)&v234[2] = v122;
                  LOBYTE(v234[3]) = v123;
                  v40 = v209;
                  v60 = v207;
                  v42 = v185;
                }
                else
                {
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)v217);
                }
                goto LABEL_89;
              }
LABEL_79:
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v212, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
              goto LABEL_89;
            }
          }
          else
          {
            v40 = v209;
          }
        }
      }
      v214 = 0.0;
      v212 = 0u;
      v213 = 0u;
      goto LABEL_79;
    }
    __break(1u);
LABEL_137:
    swift_once();
    goto LABEL_17;
  }
  v53 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v31, 1);
  v190 = a2;
  v188 = v31;
  if ((v54 & 1) != 0)
  {
    v47 = (uint64_t)v206;
    if (one-time initialization token for conversationController == -1)
      goto LABEL_24;
    goto LABEL_139;
  }
  v42 = v53;
  v47 = (uint64_t)v206;
  if (one-time initialization token for conversationController != -1)
    goto LABEL_137;
LABEL_17:
  v55 = type metadata accessor for Logger();
  __swift_project_value_buffer(v55, (uint64_t)&static Logger.conversationController);
  v56 = Logger.logObject.getter();
  v57 = static os_log_type_t.default.getter();
  v58 = v57;
  v59 = os_log_type_enabled(v56, v57);
  v60 = v207;
  if (v59)
  {
    v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v61 = 0;
    _os_log_impl(&dword_1BD004000, v56, (os_log_type_t)v58, "Found participant with screen matching remote video first frame notification", v61, 2u);
    v62 = v61;
    v40 = &metadata instantiation cache for protocol conformance descriptor for ImageNames.Roster;
    MEMORY[0x1C3B751B8](v62, -1, -1);
  }

  v63 = (uint64_t *)(a2 + v40[338]);
  swift_beginAccess();
  if ((v42 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_139:
    swift_once();
LABEL_24:
    v74 = type metadata accessor for Logger();
    v75 = __swift_project_value_buffer(v74, (uint64_t)&static Logger.conversationController);
    v76 = Logger.logObject.getter();
    v77 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v78 = 0;
      _os_log_impl(&dword_1BD004000, v76, v77, "Failed to find any participant matching remote video client", v78, 2u);
      MEMORY[0x1C3B751B8](v78, -1, -1);
    }

    v79 = (uint64_t *)(a2 + v40[338]);
    swift_beginAccess();
    v80 = *v79;
    v81 = MEMORY[0x1E0DEE9D8];
    v217[0] = MEMORY[0x1E0DEE9D8];
    v82 = *(_QWORD *)(v80 + 16);
    if (v82)
    {
      v208 = v75;
      v83 = v80 + ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80));
      v84 = *(_QWORD *)(v205 + 72);
      swift_bridgeObjectRetain_n();
      do
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v83, (uint64_t)v10, type metadata accessor for Participant);
        swift_bridgeObjectRetain();
        outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
        specialized Array.append<A>(contentsOf:)();
        v83 += v84;
        --v82;
      }
      while (v82);
      swift_bridgeObjectRelease_n();
      v81 = v217[0];
      v47 = (uint64_t)v206;
      v31 = v188;
    }
    if (*(_QWORD *)(v81 + 16))
    {
      swift_bridgeObjectRetain();
      v85 = Logger.logObject.getter();
      v86 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v85, v86))
      {
        v87 = (uint8_t *)swift_slowAlloc();
        v88 = swift_slowAlloc();
        v217[0] = v88;
        *(_DWORD *)v87 = 136315138;
        v211[0] = v81;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
        v89 = String.init<A>(reflecting:)();
        v211[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v89, v90, v217);
        v47 = (uint64_t)v206;
        v31 = v188;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v85, v86, "Found associated participants that may match remote video client %s", v87, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v88, -1, -1);
        MEMORY[0x1C3B751B8](v87, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      ConversationController.updateMatchingAssociatedParticipant(for:)(v31);
      goto LABEL_94;
    }
    goto LABEL_93;
  }
  v64 = *v63;
  if (v42 < *(_QWORD *)(*v63 + 16))
  {
    v65 = *(unsigned __int8 *)(v205 + 80);
    v185 = v42;
    v186 = v65;
    v187 = *(_QWORD *)(v205 + 72);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v64 + ((v65 + 32) & ~v65) + v187 * v42, v60, type metadata accessor for Participant);
    v66 = (uint64_t)v209;
    __swift_storeEnumTagSinglePayload(v60, 0, 1, (uint64_t)v209);
    outlined assign with take of Participant?(v60, v47, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v47, 1, v66))
    {
      v205 = 0;
      v202 = 0;
      v203 = 0;
      v67 = 0;
      v68 = 0;
      v69 = 0;
      v70 = 0;
      v71 = 0;
      v72 = 0;
      v73 = 0;
    }
    else
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v47, (uint64_t)v10, type metadata accessor for Participant);
      Participant.videoInfo.getter();
      v205 = v236[0];
      v67 = v236[3];
      v202 = v236[2];
      v203 = v236[1];
      v68 = v236[4];
      v69 = v236[5];
      v70 = v236[6];
      v71 = v236[7];
      v72 = v236[8];
      v73 = v237;
      outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)&v231 = v205;
    *((_QWORD *)&v231 + 1) = v203;
    *(_QWORD *)&v232 = v202;
    *((_QWORD *)&v232 + 1) = v67;
    *(_QWORD *)&v233 = v68;
    *((_QWORD *)&v233 + 1) = v69;
    v234[0] = v70;
    v234[1] = v71;
    v234[2] = v72;
    LOWORD(v234[3]) = v73;
    v40 = v209;
    if (__swift_getEnumTagSinglePayload(v47, 1, (uint64_t)v209))
    {
      v202 = 0;
      v203 = 0;
      v205 = 0;
    }
    else
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v47, (uint64_t)v10, type metadata accessor for Participant);
      v202 = Participant.captionInfo.getter();
      v203 = v99;
      v205 = v100;
      outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
    }
    a2 = v190;
    v60 = v207;
    v42 = v185;
    v101 = v188;
    if (__swift_getEnumTagSinglePayload(v47, 1, (uint64_t)v40))
    {
      v212 = 0uLL;
      *(_QWORD *)&v213 = 0;
      *((_QWORD *)&v213 + 1) = 1;
      bzero(&v214, 0xB1uLL);
    }
    else
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v47, (uint64_t)v10, type metadata accessor for Participant);
      Participant.screenInfo.getter();
      outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
    }
    outlined assign with take of Participant?((uint64_t)&v212, (uint64_t)v218, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (v219 != 1)
    {
      v102 = *(_BYTE *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96);
      v103 = *(_OWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 16);
      v224 = *(_OWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes);
      v225 = v103;
      v104 = *(_OWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 48);
      v226 = *(_OWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 32);
      v227 = v104;
      v105 = *(_OWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 80);
      v228 = *(_OWORD *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 64);
      v229 = v105;
      v230 = v102;
      v220[8] = 1;
      v106 = objc_msgSend(v101, sel_remoteVideoAttributes);
      if (v106)
      {
        v107 = v106;
        v108 = objc_msgSend(v106, sel_orientation);

      }
      else
      {
        v108 = 0;
      }
      v222 = VideoAttributeOrientation.deviceOrientation.getter(v108);
      if (v219 != 1)
      {
        v112 = objc_msgSend(v101, sel_remoteVideoAttributes);
        if (v112)
        {
          v113 = v112;
          v114 = VideoAttributes.scaleFactor.getter();

        }
        else
        {
          v114 = 1.0;
        }
        v223 = v114;
      }
    }
    v124 = objc_msgSend(v101, sel_remoteVideoAttributes);
    if (v124)
    {
      v125 = v124;
      objc_msgSend(v124, sel_ratio);
      v127 = v126;
      v129 = v128;

      if (v219 != 1)
      {
        v130 = v230 ? 0 : *((_QWORD *)&v228 + 1);
        v131 = ConversationController.remoteOrientationFor(aspectRatio:videoRotation:deviceFamily:)(v222, v130, v127, v129);
        if (v219 != 1)
          v221 = v131;
      }
    }
LABEL_89:
    if (__swift_getEnumTagSinglePayload(v47, 1, (uint64_t)v40)
      || (outlined init with copy of ConversationControlsAppLaunchButtonType(v47, (uint64_t)v10, type metadata accessor for Participant), Participant.avInfo.getter(), v133 = v132, v135 = v134, outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant), v133 == 2))
    {
      static os_log_type_t.error.getter();
      v136 = swift_allocObject();
      *(_OWORD *)(v136 + 16) = xmmword_1BD6441D0;
      outlined init with copy of FeatureEligibility?(v47, v60, &demangling cache variable for type metadata for Participant?);
      specialized >> prefix<A>(_:)(v60);
      v138 = v137;
      v140 = v139;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v60, &demangling cache variable for type metadata for Participant?);
      v141 = v208;
      *(_QWORD *)(v136 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v136 + 64) = v141;
      *(_QWORD *)(v136 + 32) = v138;
      *(_QWORD *)(v136 + 40) = v140;
LABEL_92:
      os_log(_:dso:log:type:_:)();
      outlined consume of Participant.CaptionInfo?(v202);
LABEL_93:
      swift_bridgeObjectRelease();
LABEL_94:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v218, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      swift_bridgeObjectRelease();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v47, &demangling cache variable for type metadata for Participant?);
      return;
    }
    *(_QWORD *)&v207 = v135;
    v142 = v201;
    outlined init with copy of FeatureEligibility?(v47, v201, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v142, 1, (uint64_t)v40) == 1)
      goto LABEL_143;
    Participant.screenInfo.getter();
    outlined destroy of AccountUpdateNotice(v142, type metadata accessor for Participant);
    outlined init with copy of FeatureEligibility?((uint64_t)v217, (uint64_t)&v212, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined init with copy of FeatureEligibility?((uint64_t)v218, (uint64_t)v216, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    if (*((_QWORD *)&v213 + 1) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v217, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      if (v216[3] == 1)
        v143 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
      else
        v143 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
      if (v216[3] == 1)
        v144 = -1;
      else
        v144 = 0;
      LODWORD(v201) = v144;
    }
    else
    {
      outlined init with copy of FeatureEligibility?((uint64_t)&v212, (uint64_t)v211, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      if (v216[3] == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v217, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        outlined destroy of Participant.ScreenInfo((uint64_t)v211);
        LODWORD(v201) = 0;
        v143 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
      }
      else
      {
        memcpy(v210, v216, 0xD1uLL);
        static Participant.ScreenInfo.== infix(_:_:)();
        LODWORD(v201) = v145;
        outlined destroy of Participant.ScreenInfo((uint64_t)v210);
        v143 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v217, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        outlined destroy of Participant.ScreenInfo((uint64_t)v211);
      }
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v212, v143);
    v146 = v200;
    outlined init with copy of FeatureEligibility?(v47, v200, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v146, 1, (uint64_t)v40) == 1)
      goto LABEL_144;
    v185 = v42;
    outlined init with take of Any?((uint64_t)&v231, (uint64_t)v217, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    outlined init with copy of FeatureEligibility?((uint64_t)v218, (uint64_t)&v212, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined retain of [Participant]((uint64_t)v217);
    Participant.copresenceInfo.getter(v211);
    v147 = (uint64_t)v198;
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v211);
    outlined release of LinearGradient((uint64_t)v217);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v212, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    outlined destroy of AccountUpdateNotice(v146, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v147, 0, 1, (uint64_t)v40);
    outlined assign with take of Participant?(v147, v47, &demangling cache variable for type metadata for Participant?);
    v58 = v199;
    outlined init with copy of FeatureEligibility?(v47, v199, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v58, 1, (uint64_t)v40) == 1)
    {
LABEL_145:
      outlined consume of Participant.CaptionInfo?(v202);
      __break(1u);
      goto LABEL_146;
    }
    v31 = (uint64_t *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    swift_beginAccess();
    v148 = *v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v31 = v148;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_110;
    goto LABEL_141;
  }
  __break(1u);
LABEL_141:
  v148 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *v31 = v148;
LABEL_110:
  if (v185 >= *(_QWORD *)(v148 + 16))
  {
    __break(1u);
LABEL_143:
    outlined consume of Participant.CaptionInfo?(v202);
    __break(1u);
LABEL_144:
    outlined consume of Participant.CaptionInfo?(v202);
    __break(1u);
    goto LABEL_145;
  }
  v150 = a2;
  outlined assign with take of Participant(v58, v148 + ((v186 + 32) & ~(unint64_t)v186) + v187 * v185);
  swift_endAccess();
  v151 = swift_allocObject();
  v207 = xmmword_1BD6441D0;
  *(_OWORD *)(v151 + 16) = xmmword_1BD6441D0;
  outlined init with copy of FeatureEligibility?(v47, v60, &demangling cache variable for type metadata for Participant?);
  specialized >> prefix<A>(_:)(v60);
  v153 = v152;
  v155 = v154;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v60, &demangling cache variable for type metadata for Participant?);
  v156 = v208;
  *(_QWORD *)(v151 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v151 + 64) = v156;
  *(_QWORD *)(v151 + 32) = v153;
  *(_QWORD *)(v151 + 40) = v155;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v157 = ConversationController.visibleParticipants.getter();
  v158 = specialized Collection.firstIndex(where:)(v157, v47);
  v160 = v159;
  swift_bridgeObjectRelease();
  if ((v160 & 1) != 0)
  {
    static os_log_type_t.error.getter();
    v180 = swift_allocObject();
    *(_OWORD *)(v180 + 16) = v207;
    outlined init with copy of FeatureEligibility?(v47, v60, &demangling cache variable for type metadata for Participant?);
    specialized >> prefix<A>(_:)(v60);
    v182 = v181;
    v184 = v183;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v60, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v180 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v180 + 64) = v156;
    *(_QWORD *)(v180 + 32) = v182;
    *(_QWORD *)(v180 + 40) = v184;
    goto LABEL_92;
  }
  if ((_QWORD)v231)
  {
    if ((BYTE8(v231) & 1) != 0)
    {
      v161 = v150 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      swift_beginAccess();
      v162 = *(_QWORD *)(v161 + 8);
      ObjectType = swift_getObjectType();
      v164 = *(void (**)(uint64_t, uint64_t))(v162 + 200);
      swift_unknownObjectRetain();
      v165 = v194;
      v164(ObjectType, v162);
      v47 = (uint64_t)v206;
      swift_unknownObjectRelease();
      *(_QWORD *)&v212 = *(_QWORD *)(v150
                                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame);
      swift_bridgeObjectRetain();
      v166 = (uint64_t)v191;
      specialized Set._Variant.remove(_:)();
      v167 = *(void (**)(char *, uint64_t))(v192 + 8);
      v167(v165, v195);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v166, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.setter(v212);
      if (objc_msgSend(*(id *)(v150 + OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags), sel_uPlusOneFullBleedHandoffEnabled))
      {
        v168 = *(_QWORD *)(v161 + 8);
        v169 = swift_getObjectType();
        v170 = *(void (**)(uint64_t, uint64_t))(v168 + 200);
        swift_unknownObjectRetain();
        v170(v169, v168);
        v47 = (uint64_t)v206;
        swift_unknownObjectRelease();
        swift_beginAccess();
        v171 = v194;
        specialized Set._Variant.insert(_:)();
        swift_endAccess();
        v167(v171, v195);
      }
    }
  }
  v172 = (void (**)(uint64_t, uint64_t))(v150
                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  swift_beginAccess();
  v173 = *v172;
  v174 = (uint64_t)v209;
  if (*v172)
  {
    v175 = v196;
    outlined init with copy of FeatureEligibility?(v47, v196, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v175, 1, v174) == 1)
    {
LABEL_147:
      swift_retain();
      outlined consume of Participant.CaptionInfo?(v202);
      __break(1u);
      goto LABEL_148;
    }
    swift_retain();
    v173(v175, v158);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v173);
    outlined destroy of AccountUpdateNotice(v175, type metadata accessor for Participant);
  }
  v176 = v197;
  outlined init with copy of FeatureEligibility?(v47, v197, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v176, 1, v174) == 1)
  {
LABEL_146:
    outlined consume of Participant.CaptionInfo?(v202);
    __break(1u);
    goto LABEL_147;
  }
  ConversationController.didUpdateVisibleParticipant(_:)(v176);
  outlined destroy of AccountUpdateNotice(v176, type metadata accessor for Participant);
  if ((v201 & 1) != 0
    || (v177 = (void (**)(uint64_t, uint64_t))(v150
                                                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo),
        swift_beginAccess(),
        (v178 = *v177) == 0))
  {
    outlined consume of Participant.CaptionInfo?(v202);
    goto LABEL_94;
  }
  v179 = v193;
  outlined init with copy of FeatureEligibility?(v47, v193, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v179, 1, v174) != 1)
  {
    swift_retain();
    v178(v179, v158);
    outlined consume of Participant.CaptionInfo?(v202);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v178);
    outlined destroy of AccountUpdateNotice(v179, type metadata accessor for Participant);
    goto LABEL_94;
  }
LABEL_148:
  swift_retain();
  outlined consume of Participant.CaptionInfo?(v202);
  __break(1u);
}

uint64_t ConversationController.remoteParticipantIndex(for:useScreenProviders:)(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  char *v36;
  id v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[42];

  v39 = a2;
  v37 = a1;
  v38 = type metadata accessor for Participant.State(0);
  v3 = MEMORY[0x1E0C80A78](v38);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v33 - v6;
  v42 = type metadata accessor for Participant(0);
  v8 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v12 = *v11;
  v41 = *(_QWORD *)(*v11 + 16);
  if (!v41)
    return 0;
  v36 = v5;
  v13 = v12 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v40 = *(_QWORD *)(v8 + 72);
  v34 = &v46[12];
  v35 = &v45;
  v33 = v12;
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = type metadata accessor for Participant;
  do
  {
    v16 = v15;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v13, (uint64_t)v10, v15);
    if (!*(_QWORD *)&v10[*(int *)(v42 + 28)])
      goto LABEL_20;
    if ((v39 & 1) != 0)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v10, (uint64_t)v7, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v18 = &v7[*(int *)(v17 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v7[*(int *)(v17 + 64)], *(_QWORD *)&v7[*(int *)(v17 + 64) + 8]);
        memcpy(v46, v18, sizeof(v46));
        v19 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v7, v19);
        outlined init with copy of FeatureEligibility?((uint64_t)v34, (uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        outlined destroy of Participant.MediaInfo((uint64_t)v46);
        if (v44 != 1)
        {
          outlined init with copy of FeatureEligibility?((uint64_t)v43, (uint64_t)v46, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
          outlined destroy of Participant.ScreenInfo((uint64_t)v43);
          v20 = v46[3];
          if (v46[3])
          {
            v21 = v46[4];
            __swift_project_boxed_opaque_existential_1(v46, v46[3]);
            v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
            v24 = v23 & 1;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
LABEL_15:
            v31 = objc_msgSend(v37, sel_streamToken);
            if ((v24 & 1) != 0)
              goto LABEL_20;
            v30 = v22 == (_QWORD)v31;
            goto LABEL_17;
          }
LABEL_14:
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v46, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
          v22 = 0;
          v24 = 1;
          goto LABEL_15;
        }
      }
      else
      {
        outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for Participant.State);
        memset(v43, 0, sizeof(v43));
        v44 = 1;
        bzero(v35, 0xB1uLL);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      memset(v46, 0, 40);
      goto LABEL_14;
    }
    v25 = (uint64_t)v36;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v10, (uint64_t)v36, type metadata accessor for Participant.State);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      outlined destroy of AccountUpdateNotice(v25, type metadata accessor for Participant.State);
LABEL_20:
      v15 = v16;
      outlined destroy of AccountUpdateNotice((uint64_t)v10, v16);
      goto LABEL_21;
    }
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v27 = (const void *)(v25 + *(int *)(v26 + 48));
    outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v25 + *(int *)(v26 + 64)), *(_QWORD *)(v25 + *(int *)(v26 + 64) + 8));
    memcpy(v46, v27, sizeof(v46));
    v28 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v25, v28);
    v29 = v46[2];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.MediaInfo((uint64_t)v46);
    if (!v29)
      goto LABEL_20;
    v30 = specialized Sequence.contains(where:)(v29, v37);
    swift_bridgeObjectRelease();
LABEL_17:
    v15 = v16;
    outlined destroy of AccountUpdateNotice((uint64_t)v10, v16);
    if ((v30 & 1) != 0)
      goto LABEL_24;
LABEL_21:
    ++v14;
    v13 += v40;
  }
  while (v41 != v14);
  v14 = 0;
LABEL_24:
  swift_bridgeObjectRelease();
  return v14;
}

void ConversationController.updateMatchingAssociatedParticipant(for:)(void *a1)
{
  uint64_t v1;
  char **v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char ***v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  char **v41;
  char ***v42;
  char **v43;
  uint64_t (*v44)(uint64_t);
  __int128 v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  int64_t v60;
  unint64_t v61;
  unint64_t v62;
  int64_t v63;
  unint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  int v74;
  _BOOL4 v75;
  uint64_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char **v81;
  uint8_t *v82;
  unint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  unint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t *v92;
  uint64_t v93;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v95;
  id v96;
  void *v97;
  unsigned __int8 v98;
  id v99;
  void *v100;
  int v101;
  id v102;
  void *v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  double v125;
  double v126;
  char v127;
  double v128;
  double v129;
  int v130;
  char v131;
  double v132;
  _QWORD v133[2];
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  id v138;
  uint64_t (*v139)(uint64_t);
  char *v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  __int128 v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint8_t *v150;
  uint8_t *v151;
  unint64_t v152;
  int v153;
  uint64_t v154;
  char *v155;
  char **v156;
  char ***v157;
  uint64_t v158;
  _QWORD *v159;
  unint64_t v160;
  uint64_t v161;
  char **v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168[3];
  __int128 v169;
  __int128 v170;
  double v171;
  unsigned __int8 v172;
  uint64_t v173;
  char v174;
  unsigned __int8 v175;
  uint64_t v176;
  char v177;
  double v178;
  double v179;
  double v180;
  double v181;
  char v182;
  _BYTE v183[80];
  uint64_t v184[8];
  uint64_t v185[10];
  uint64_t v186;
  uint64_t v187;

  v3 = v1;
  v138 = a1;
  v164 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v164);
  v5 = (char *)v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Participant(0);
  v165 = *(uint64_t **)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v135 = (uint64_t)v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v137 = (char *)v133 - v9;
  MEMORY[0x1E0C80A78](v10);
  v134 = (char *)v133 - v11;
  MEMORY[0x1E0C80A78](v12);
  v139 = (uint64_t (*)(uint64_t))((char *)v133 - v13);
  MEMORY[0x1E0C80A78](v14);
  v140 = (char *)v133 - v15;
  MEMORY[0x1E0C80A78](v16);
  v143 = (uint64_t)v133 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v133 - v19;
  MEMORY[0x1E0C80A78](v21);
  v163 = (unint64_t)v133 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant));
  MEMORY[0x1E0C80A78](v23);
  v147 = (char *)v133 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Participant)?);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char ***)((char *)v133 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v28);
  v30 = (_QWORD *)((char *)v133 - v29);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v31);
  v136 = (char *)v133 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v142 = (uint64_t)v133 - v34;
  MEMORY[0x1E0C80A78](v35);
  v154 = (uint64_t)v133 - v36;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)v133 - v38;
  v161 = v6;
  __swift_storeEnumTagSinglePayload((uint64_t)v133 - v38, 1, 1, v6);
  v133[1] = v3;
  v40 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v141 = v40;
  v41 = *(char ***)(*v40 + 16);
  v148 = *v40;
  swift_bridgeObjectRetain();
  v155 = v39;
  v42 = v27;
  swift_beginAccess();
  v152 = 0;
  v43 = 0;
  v44 = type metadata accessor for Participant;
  v145 = &v187;
  *(_QWORD *)&v45 = 136315138;
  v146 = v45;
  v144 = MEMORY[0x1E0DEE9B8] + 8;
  v153 = 1;
  v158 = v23;
  v159 = v30;
  v156 = v41;
  v157 = v42;
LABEL_2:
  if (v43 == v41)
  {
    v46 = 1;
    v162 = v41;
    goto LABEL_7;
  }
  if (((unint64_t)v43 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_64;
  }
  if ((unint64_t)v43 >= *(_QWORD *)(v148 + 16))
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  v47 = (char **)((char *)v43 + 1);
  v2 = v43;
  v48 = (uint64_t)&v147[*(int *)(v23 + 48)];
  outlined init with copy of ConversationControlsAppLaunchButtonType(v148+ ((*((unsigned __int8 *)v165 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v165 + 80))+ v165[9] * (_QWORD)v43, v48, v44);
  v49 = (uint64_t)v42 + *(int *)(v23 + 48);
  *v42 = v2;
  v50 = v48;
  v30 = v159;
  outlined init with take of StagedCollaboration(v50, v49, v44);
  v46 = 0;
  v162 = v47;
LABEL_7:
  __swift_storeEnumTagSinglePayload((uint64_t)v42, v46, 1, v23);
  outlined init with take of Any?((uint64_t)v42, (uint64_t)v30, &demangling cache variable for type metadata for (offset: Int, element: Participant)?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v23) != 1)
  {
    v160 = *v30;
    v51 = (uint64_t)v30 + *(int *)(v23 + 48);
    v52 = *(_QWORD *)(v51 + *(int *)(v161 + 44));
    swift_bridgeObjectRetain();
    v53 = v44;
    outlined destroy of AccountUpdateNotice(v51, v44);
    v54 = 0;
    v56 = v52 + 56;
    v55 = *(_QWORD *)(v52 + 56);
    v166 = v52;
    v57 = 1 << *(_BYTE *)(v52 + 32);
    if (v57 < 64)
      v58 = ~(-1 << v57);
    else
      v58 = -1;
    v59 = v58 & v55;
    v60 = (unint64_t)(v57 + 63) >> 6;
    if ((v58 & v55) != 0)
    {
LABEL_12:
      v61 = __clz(__rbit64(v59));
      v59 &= v59 - 1;
      v62 = v61 | (v54 << 6);
      v44 = v53;
      goto LABEL_27;
    }
    while (1)
    {
      v63 = v54 + 1;
      if (__OFADD__(v54, 1))
      {
        __break(1u);
        goto LABEL_49;
      }
      v44 = v53;
      if (v63 >= v60)
        goto LABEL_35;
      v64 = *(_QWORD *)(v56 + 8 * v63);
      ++v54;
      if (!v64)
      {
        v54 = v63 + 1;
        if (v63 + 1 >= v60)
          goto LABEL_35;
        v64 = *(_QWORD *)(v56 + 8 * v54);
        if (!v64)
        {
          v54 = v63 + 2;
          if (v63 + 2 >= v60)
            goto LABEL_35;
          v64 = *(_QWORD *)(v56 + 8 * v54);
          if (!v64)
          {
            v65 = v63 + 3;
            if (v65 >= v60)
            {
LABEL_35:
              swift_release();
              v42 = v157;
              v23 = v158;
LABEL_36:
              v30 = v159;
              v41 = v156;
              v43 = v162;
              goto LABEL_2;
            }
            v64 = *(_QWORD *)(v56 + 8 * v65);
            if (!v64)
            {
              while (1)
              {
                v54 = v65 + 1;
                if (__OFADD__(v65, 1))
                  break;
                if (v54 >= v60)
                  goto LABEL_35;
                v64 = *(_QWORD *)(v56 + 8 * v54);
                ++v65;
                if (v64)
                  goto LABEL_26;
              }
              __break(1u);
LABEL_59:
              v98 = 0;
              goto LABEL_60;
            }
            v54 = v65;
          }
        }
      }
LABEL_26:
      v59 = (v64 - 1) & v64;
      v62 = __clz(__rbit64(v64)) + (v54 << 6);
LABEL_27:
      v66 = v163;
      outlined init with copy of ConversationControlsAppLaunchButtonType(*(_QWORD *)(v166 + 48) + v165[9] * v62, v163, v44);
      outlined init with take of StagedCollaboration(v66, (uint64_t)v20, v44);
      v2 = (char **)v44;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v20, (uint64_t)v5, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v68 = (uint64_t)&v5[*(int *)(v67 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v5[*(int *)(v67 + 64)], *(_QWORD *)&v5[*(int *)(v67 + 64) + 8]);
        outlined destroy of Participant.MediaInfo(v68);
        v69 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v5, v69);
        v70 = v154;
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v20, v154, v44);
        __swift_storeEnumTagSinglePayload(v70, 0, 1, v161);
        outlined assign with take of Participant?(v70, (uint64_t)v155, &demangling cache variable for type metadata for Participant?);
        if (one-time initialization token for conversationController != -1)
          swift_once();
        v71 = type metadata accessor for Logger();
        __swift_project_value_buffer(v71, (uint64_t)&static Logger.conversationController);
        v72 = Logger.logObject.getter();
        v73 = static os_log_type_t.default.getter();
        v74 = v73;
        v75 = os_log_type_enabled(v72, v73);
        v42 = v157;
        if (v75)
        {
          v76 = swift_slowAlloc();
          v153 = v74;
          v77 = (uint8_t *)v76;
          v78 = swift_slowAlloc();
          *(_QWORD *)&v169 = v78;
          v150 = v77;
          *(_DWORD *)v77 = v146;
          v151 = v77 + 4;
          v152 = v78;
          v79 = v154;
          outlined init with copy of FeatureEligibility?((uint64_t)v155, v154, &demangling cache variable for type metadata for Participant?);
          specialized >> prefix<A>(_:)(v79);
          v149 = v80;
          v2 = v81;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v79, &demangling cache variable for type metadata for Participant?);
          v186 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v149, (unint64_t)v2, (uint64_t *)&v169);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v82 = v150;
          _os_log_impl(&dword_1BD004000, v72, (os_log_type_t)v153, "Found associated participant that matches remote video client %s", v150, 0xCu);
          v83 = v152;
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v83, -1, -1);
          MEMORY[0x1C3B751B8](v82, -1, -1);
        }

        outlined destroy of AccountUpdateNotice((uint64_t)v20, v44);
        swift_release();
        v153 = 0;
        v152 = v160;
        v23 = v158;
        goto LABEL_36;
      }
      outlined destroy of AccountUpdateNotice((uint64_t)v20, v44);
      outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for Participant.State);
      if (v59)
        goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v155, 1, v161))
    goto LABEL_42;
  v84 = v143;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v155, v143, type metadata accessor for Participant);
  Participant.avInfo.getter();
  v86 = v85;
  v59 = v87;
  outlined destroy of AccountUpdateNotice(v84, type metadata accessor for Participant);
  if (v86 == 2 || (v153 & 1) != 0)
    goto LABEL_42;
  v56 = v142;
  outlined init with copy of FeatureEligibility?((uint64_t)v155, v142, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v56, 1, v161) != 1)
  {
LABEL_49:
    v20 = v140;
    outlined init with take of StagedCollaboration(v56, (uint64_t)v140, type metadata accessor for Participant);
    v92 = v141;
    swift_beginAccess();
    v93 = *v92;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v92 = v93;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v93 = specialized _ArrayBuffer._consumeAndCreateNew()();
      *v92 = v93;
    }
    v44 = v139;
    if ((v152 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v152 < *(_QWORD *)(v93 + 16))
    {
      v163 = (*((unsigned __int8 *)v165 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v165 + 80);
      v165 = (uint64_t *)(v165[9] * v152);
      v95 = (uint64_t)v136;
      specialized Set._Variant.remove(_:)();
      swift_endAccess();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v95, &demangling cache variable for type metadata for Participant?);
      Participant.videoInfo.getter();
      outlined init with take of Any?((uint64_t)v183, (uint64_t)&v173, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
      outlined init with take of Any?((uint64_t)v183, (uint64_t)v185, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v185[0])
        v174 = 1;
      if (!v173)
        goto LABEL_69;
      v2 = &selRef_associatedAppBundleIdentifier;
      v96 = objc_msgSend(v138, sel_remoteVideoAttributes);
      if (!v96)
        goto LABEL_59;
      v97 = v96;
      v98 = objc_msgSend(v96, sel_videoMirrored);

LABEL_60:
      v175 = v98;
      if (!v173)
        goto LABEL_69;
      v99 = objc_msgSend(v138, v2[421]);
      if (v99)
      {
        v100 = v99;
        v101 = objc_msgSend(v99, sel_orientation);

        goto LABEL_66;
      }
LABEL_65:
      v101 = 0;
LABEL_66:
      v176 = VideoAttributeOrientation.deviceOrientation.getter(v101);
      if (v173)
      {
        v102 = objc_msgSend(v138, v2[421]);
        if (v102)
        {
          v103 = v102;
          v104 = objc_msgSend(v102, sel_camera);

        }
        else
        {
          v104 = 0;
        }
        v105 = (uint64_t)v137;
        v177 = VideoAttributeCamera.cameraPosition.getter(v104);
        if (v173)
        {
          specialized Dictionary.subscript.getter();
          if (*((_QWORD *)&v170 + 1))
          {
            outlined init with take of Notice(&v169, (uint64_t)&v186);
            if (!v173)
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v186);
              goto LABEL_72;
            }
            outlined init with copy of RadarReporting((uint64_t)&v186, (uint64_t)v184);
            if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
            {
              static AspectRatio.remoteAspectRatios(with:contentsRect:)(v184, (uint64_t)&v169, 1.0, 1.0);
              v126 = *((double *)&v169 + 1);
              v125 = *(double *)&v169;
              v127 = v170;
              v128 = *((double *)&v170 + 1);
              v129 = v171;
              v130 = v172;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v184);
              if ((v127 & 1) == 0 && v125 != v126)
              {
                v131 = 0;
                if (v130)
                {
                  v129 = v125;
                  v132 = v126;
                }
                else
                {
                  v132 = v128;
                }
                goto LABEL_92;
              }
            }
            else
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v184);
            }
            v125 = 0.0;
            v126 = 0.0;
            v132 = 0.0;
            v129 = 0.0;
            v131 = 1;
LABEL_92:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v186);
            v178 = v125;
            v179 = v126;
            v180 = v132;
            v181 = v129;
            v182 = v131;
            v44 = v139;
            v20 = v140;
            v105 = (uint64_t)v137;
LABEL_72:
            Participant.screenInfo.getter();
            v106 = Participant.captionInfo.getter();
            v108 = v107;
            v92 = v109;
            outlined init with take of Any?((uint64_t)&v173, (uint64_t)&v186, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
            outlined retain of [Participant]((uint64_t)&v186);
            Participant.copresenceInfo.getter(v184);
            v164 = v106;
            v166 = v108;
            Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
            outlined release of Participant.CopresenceInfo?(v184);
            outlined release of LinearGradient((uint64_t)&v186);
            outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v44, v105, type metadata accessor for Participant);
            v59 = (unint64_t)v141;
            swift_beginAccess();
            v110 = *(_QWORD *)v59;
            v111 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)v59 = v110;
            if ((v111 & 1) != 0)
              goto LABEL_73;
            goto LABEL_95;
          }
LABEL_71:
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v169, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
          goto LABEL_72;
        }
LABEL_70:
        v171 = 0.0;
        v169 = 0u;
        v170 = 0u;
        goto LABEL_71;
      }
LABEL_69:
      v105 = (uint64_t)v137;
      goto LABEL_70;
    }
    __break(1u);
LABEL_95:
    v110 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *(_QWORD *)v59 = v110;
LABEL_73:
    if (v152 >= *(_QWORD *)(v110 + 16))
    {
      __break(1u);
    }
    else
    {
      v112 = (uint64_t)v134;
      specialized Set._Variant.insert(_:)();
      swift_endAccess();
      outlined destroy of AccountUpdateNotice(v112, type metadata accessor for Participant);
      if (one-time initialization token for conversationController == -1)
      {
LABEL_75:
        v113 = type metadata accessor for Logger();
        __swift_project_value_buffer(v113, (uint64_t)&static Logger.conversationController);
        v114 = v135;
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v44, v135, type metadata accessor for Participant);
        v115 = Logger.logObject.getter();
        v116 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v115, v116))
        {
          v117 = (uint8_t *)swift_slowAlloc();
          v118 = swift_slowAlloc();
          v168[0] = v118;
          *(_DWORD *)v117 = v146;
          v163 = (unint64_t)(v117 + 4);
          v119 = v154;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v114, v154, type metadata accessor for Participant);
          __swift_storeEnumTagSinglePayload(v119, 0, 1, v161);
          specialized >> prefix<A>(_:)(v119);
          v121 = v120;
          v165 = v92;
          v123 = v122;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v119, &demangling cache variable for type metadata for Participant?);
          v167 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v121, v123, v168);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of AccountUpdateNotice(v114, type metadata accessor for Participant);
          _os_log_impl(&dword_1BD004000, v115, v116, "Updated associate participant's isReceivingVideoFrames property to true. %s", v117, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v118, -1, -1);
          MEMORY[0x1C3B751B8](v117, -1, -1);
          outlined consume of Participant.CaptionInfo?(v164);

          outlined destroy of AccountUpdateNotice((uint64_t)v139, type metadata accessor for Participant);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v169, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
          v124 = (uint64_t)v140;
        }
        else
        {
          outlined consume of Participant.CaptionInfo?(v164);

          outlined destroy of AccountUpdateNotice(v114, type metadata accessor for Participant);
          outlined destroy of AccountUpdateNotice((uint64_t)v44, type metadata accessor for Participant);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v169, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
          v124 = (uint64_t)v20;
        }
        outlined destroy of AccountUpdateNotice(v124, type metadata accessor for Participant);
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
    }
    swift_once();
    goto LABEL_75;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v56, &demangling cache variable for type metadata for Participant?);
LABEL_42:
  if (one-time initialization token for conversationController != -1)
    swift_once();
  v88 = type metadata accessor for Logger();
  __swift_project_value_buffer(v88, (uint64_t)&static Logger.conversationController);
  v89 = Logger.logObject.getter();
  v90 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v89, v90))
  {
    v91 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v91 = 0;
    _os_log_impl(&dword_1BD004000, v89, v90, "No associated participants match remote video client", v91, 2u);
    MEMORY[0x1C3B751B8](v91, -1, -1);
  }

LABEL_47:
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v155, &demangling cache variable for type metadata for Participant?);
}

void sub_1BD57013C()
{
  void *v0;
  void *v1;

}

void ConversationController.remoteVideoClient(_:videoDidSuspend:)()
{
  ConversationController.remoteVideoClient(_:videoDidSuspend:)();
}

{
  void *v0;
  char v1;
  char v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_7_22();
  v8 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v8 + 16) = v4;
  *(_BYTE *)(v8 + 24) = v2;
  *(_QWORD *)(v8 + 32) = v0;
  OUTLINED_FUNCTION_53_4();
  v9 = v4;
  v10 = v0;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_227_3();
  OUTLINED_FUNCTION_490_0();
  OUTLINED_FUNCTION_429();
}

void closure #1 in ConversationController.remoteVideoClient(_:videoDidSuspend:)(void *a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _DWORD v56[4];
  unint64_t v57;
  unint64_t v58;
  __int128 v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  id v67[27];
  _BYTE v68[104];
  _BYTE v69[80];
  uint64_t v70[8];
  uint64_t v71[10];
  _BYTE v72[88];

  v66 = a3;
  v64 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v62 = (uint64_t)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for Participant(0);
  v63 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v60 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v65 = (uint64_t)v56 - v8;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v10 = swift_allocObject();
  v59 = xmmword_1BD645380;
  *(_OWORD *)(v10 + 16) = xmmword_1BD645380;
  v67[0] = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  v11 = a1;
  v12 = String.init<A>(reflecting:)();
  v14 = v13;
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v16 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v10 + 64) = v16;
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v14;
  v64 &= 1u;
  LOBYTE(v67[0]) = v64;
  v17 = String.init<A>(reflecting:)();
  *(_QWORD *)(v10 + 96) = v15;
  *(_QWORD *)(v10 + 104) = v16;
  *(_QWORD *)(v10 + 72) = v17;
  *(_QWORD *)(v10 + 80) = v18;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v19 = v66;
  v20 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v11, 0);
  if ((v21 & 1) != 0)
  {
    static os_log_type_t.error.getter();
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1BD6441D0;
    v67[0] = v11;
    v35 = v11;
    v36 = String.init<A>(reflecting:)();
    *(_QWORD *)(v34 + 56) = v15;
    *(_QWORD *)(v34 + 64) = v16;
    *(_QWORD *)(v34 + 32) = v36;
    *(_QWORD *)(v34 + 40) = v37;
    os_log(_:dso:log:type:_:)();
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  v22 = v20;
  v57 = v9;
  v58 = v16;
  v23 = (uint64_t *)(v19 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v22 >= *(_QWORD *)(*v23 + 16))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    v42 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *v23 = v42;
    goto LABEL_12;
  }
  v9 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v16 = *(_QWORD *)(v63 + 72) * v22;
  v24 = v65;
  outlined init with copy of ConversationControlsAppLaunchButtonType(*v23 + v9 + v16, v65, type metadata accessor for Participant);
  Participant.avInfo.getter();
  if (v25 == 2)
  {
    static os_log_type_t.error.getter();
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1BD6441D0;
    v28 = v62;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v24, v62, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v28, 0, 1, v61);
    specialized >> prefix<A>(_:)(v28);
    v30 = v29;
    v32 = v31;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v28, &demangling cache variable for type metadata for Participant?);
    v33 = v58;
    *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v27 + 64) = v33;
    *(_QWORD *)(v27 + 32) = v30;
    *(_QWORD *)(v27 + 40) = v32;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    outlined destroy of AccountUpdateNotice(v24, type metadata accessor for Participant);
    return;
  }
  v38 = v25;
  v63 = v26;
  Participant.videoInfo.getter();
  outlined init with take of Any?((uint64_t)v69, (uint64_t)v68, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined init with take of Any?((uint64_t)v69, (uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v71[0])
    v68[9] = v64;
  v56[3] = v38 & 1;
  outlined init with take of Any?((uint64_t)v68, (uint64_t)v72, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined retain of [Participant]((uint64_t)v72);
  Participant.screenInfo.getter();
  v39 = Participant.captionInfo.getter();
  Participant.copresenceInfo.getter(v70);
  v40 = (uint64_t)v60;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v70);
  v41 = v39;
  v12 = v65;
  outlined consume of Participant.CaptionInfo?(v41);
  outlined release of LinearGradient((uint64_t)v72);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined destroy of AccountUpdateNotice(v12, type metadata accessor for Participant);
  outlined init with take of StagedCollaboration(v40, v12, type metadata accessor for Participant);
  swift_beginAccess();
  v42 = *v23;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v23 = v42;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_17;
LABEL_12:
  v44 = MEMORY[0x1E0DEA968];
  v45 = v58;
  if (v22 < *(_QWORD *)(v42 + 16))
  {
    outlined assign with copy of Participant.State(v12, v42 + v9 + v16, type metadata accessor for Participant);
    swift_endAccess();
    v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v59;
    LOBYTE(v67[0]) = v64;
    v47 = String.init<A>(reflecting:)();
    *(_QWORD *)(v46 + 56) = v44;
    *(_QWORD *)(v46 + 64) = v45;
    *(_QWORD *)(v46 + 32) = v47;
    *(_QWORD *)(v46 + 40) = v48;
    v49 = v45;
    v50 = v62;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v12, v62, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v50, 0, 1, v61);
    specialized >> prefix<A>(_:)(v50);
    v52 = v51;
    v53 = v12;
    v55 = v54;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v50, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v46 + 96) = v44;
    *(_QWORD *)(v46 + 104) = v49;
    *(_QWORD *)(v46 + 72) = v52;
    *(_QWORD *)(v46 + 80) = v55;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.didUpdateVisibleParticipant(_:)(v53);
    outlined destroy of AccountUpdateNotice(v53, type metadata accessor for Participant);
    goto LABEL_14;
  }
  __break(1u);
}

void sub_1BD570834()
{
  void *v0;
  void *v1;

}

void ConversationController.remoteVideoClient(_:remoteVideoDidPause:)()
{
  ConversationController.remoteVideoClient(_:videoDidSuspend:)();
}

void closure #1 in ConversationController.remoteVideoClient(_:remoteVideoDidPause:)(void *a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int v62;
  uint64_t v63;
  __int128 v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71[27];
  _BYTE v72[104];
  _BYTE v73[80];
  uint64_t v74[8];
  uint64_t v75[10];
  _BYTE v76[88];

  LODWORD(v69) = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v67 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for Participant(0);
  v68 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v65 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v70 = (uint64_t)&v60 - v9;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v11 = swift_allocObject();
  v64 = xmmword_1BD645380;
  *(_OWORD *)(v11 + 16) = xmmword_1BD645380;
  v71[0] = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  v12 = a1;
  v13 = String.init<A>(reflecting:)();
  v15 = v14;
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v17 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v11 + 64) = v17;
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v15;
  v18 = v16;
  v19 = v17;
  v20 = v69 & 1;
  LOBYTE(v71[0]) = v69 & 1;
  v21 = String.init<A>(reflecting:)();
  *(_QWORD *)(v11 + 96) = v18;
  *(_QWORD *)(v11 + 104) = v19;
  *(_QWORD *)(v11 + 72) = v21;
  *(_QWORD *)(v11 + 80) = v22;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v23 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v12, 0);
  if ((v24 & 1) != 0)
  {
    static os_log_type_t.error.getter();
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1BD6441D0;
    v71[0] = v12;
    v41 = v12;
    v42 = String.init<A>(reflecting:)();
    *(_QWORD *)(v40 + 56) = v18;
    *(_QWORD *)(v40 + 64) = v19;
    *(_QWORD *)(v40 + 32) = v42;
    *(_QWORD *)(v40 + 40) = v43;
    os_log(_:dso:log:type:_:)();
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  v25 = v23;
  v69 = v10;
  v26 = (uint64_t *)(a3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v27 = *v26;
  if (v25 >= *(_QWORD *)(*v26 + 16))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    v48 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *v26 = v48;
    goto LABEL_12;
  }
  v63 = a3;
  v28 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  v29 = *(_QWORD *)(v68 + 72) * v25;
  v30 = v70;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v27 + v28 + v29, v70, type metadata accessor for Participant);
  Participant.avInfo.getter();
  if (v31 == 2)
  {
    static os_log_type_t.error.getter();
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BD6441D0;
    v34 = v67;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v30, v67, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v34, 0, 1, v66);
    specialized >> prefix<A>(_:)(v34);
    v35 = v18;
    v37 = v36;
    v39 = v38;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v34, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v33 + 56) = v35;
    *(_QWORD *)(v33 + 64) = v19;
    *(_QWORD *)(v33 + 32) = v37;
    *(_QWORD *)(v33 + 40) = v39;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    outlined destroy of AccountUpdateNotice(v30, type metadata accessor for Participant);
    return;
  }
  v44 = v31;
  v68 = v32;
  v60 = v29;
  v61 = v28;
  Participant.videoInfo.getter();
  outlined init with take of Any?((uint64_t)v73, (uint64_t)v72, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined init with take of Any?((uint64_t)v73, (uint64_t)v75, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v75[0])
    v72[10] = v20;
  v62 = v44 & 1;
  outlined init with take of Any?((uint64_t)v72, (uint64_t)v76, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined retain of [Participant]((uint64_t)v76);
  Participant.screenInfo.getter();
  v45 = Participant.captionInfo.getter();
  Participant.copresenceInfo.getter(v74);
  v46 = (uint64_t)v65;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v74);
  v47 = v45;
  v18 = v70;
  outlined consume of Participant.CaptionInfo?(v47);
  outlined release of LinearGradient((uint64_t)v76);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined destroy of AccountUpdateNotice(v18, type metadata accessor for Participant);
  outlined init with take of StagedCollaboration(v46, v18, type metadata accessor for Participant);
  swift_beginAccess();
  v48 = *v26;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v26 = v48;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_19;
LABEL_12:
  if (v25 < *(_QWORD *)(v48 + 16))
  {
    outlined assign with copy of Participant.State(v18, v48 + v61 + v60, type metadata accessor for Participant);
    swift_endAccess();
    v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = v64;
    LOBYTE(v71[0]) = v20;
    v51 = String.init<A>(reflecting:)();
    v52 = v19;
    v53 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v50 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v50 + 64) = v52;
    *(_QWORD *)(v50 + 32) = v51;
    *(_QWORD *)(v50 + 40) = v54;
    v55 = v67;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v18, v67, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v55, 0, 1, v66);
    specialized >> prefix<A>(_:)(v55);
    v57 = v56;
    v59 = v58;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v50 + 96) = v53;
    *(_QWORD *)(v50 + 104) = v52;
    *(_QWORD *)(v50 + 72) = v57;
    *(_QWORD *)(v50 + 80) = v59;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.didUpdateVisibleParticipant(_:)(v18);
    if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
    {
      swift_beginAccess();
      ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
    }
    outlined destroy of AccountUpdateNotice(v18, type metadata accessor for Participant);
    goto LABEL_16;
  }
  __break(1u);
}

void sub_1BD570F60()
{
  void *v0;
  void *v1;

}

void ConversationController.remoteVideoClient(_:networkQualityDidDegrade:info:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  if (one-time initialization token for shared != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_677();
  if ((v9 & 1) != 0)
  {
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    if (v2)
    {
      OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      OUTLINED_FUNCTION_7_22();
      v10 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v10 + 16) = v6;
      *(_BYTE *)(v10 + 24) = v4 & 1;
      *(_QWORD *)(v10 + 32) = v2;
      *(_QWORD *)(v10 + 40) = v0;
      OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
      swift_bridgeObjectRetain();
      v11 = v0;
      v12 = v6;
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_269();
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
      OUTLINED_FUNCTION_31_11();
      OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
      OUTLINED_FUNCTION_104_13();
      OUTLINED_FUNCTION_411_2();
    }
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_30_48();
  }
}

void closure #1 in ConversationController.remoteVideoClient(_:networkQualityDidDegrade:info:)(void *a1, char a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  __int128 v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  _QWORD v92[27];
  uint64_t v93;
  char v94;
  char v95;
  _BYTE v96[80];
  uint64_t v97[8];
  uint64_t v98[10];
  _QWORD v99[11];

  v89 = a3;
  v90 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v85 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for Participant(0);
  v86 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v83 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v87 = (uint64_t)&v78 - v10;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v11 = swift_allocObject();
  v82 = xmmword_1BD646740;
  *(_OWORD *)(v11 + 16) = xmmword_1BD646740;
  v92[0] = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  v12 = a1;
  v13 = String.init<A>(reflecting:)();
  v15 = v14;
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v17 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v11 + 64) = v17;
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v15;
  v81 = a2 & 1;
  LOBYTE(v92[0]) = a2 & 1;
  v18 = String.init<A>(reflecting:)();
  *(_QWORD *)(v11 + 96) = v16;
  *(_QWORD *)(v11 + 104) = v17;
  v91 = v17;
  *(_QWORD *)(v11 + 72) = v18;
  *(_QWORD *)(v11 + 80) = v19;
  v20 = v89;
  v21 = a2;
  if (v89)
  {
    v92[0] = v89;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyHashable : Any]);
    v22 = String.init<A>(reflecting:)();
  }
  else
  {
    v23 = 0xE300000000000000;
    v22 = 7104878;
  }
  *(_QWORD *)(v11 + 136) = v16;
  v24 = v16;
  v25 = v90;
  v26 = v91;
  *(_QWORD *)(v11 + 144) = v91;
  *(_QWORD *)(v11 + 112) = v22;
  *(_QWORD *)(v11 + 120) = v23;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v27 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v12, 0);
  if ((v28 & 1) != 0)
  {
    static os_log_type_t.error.getter();
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1BD6441D0;
    v92[0] = v12;
    v44 = v12;
    v45 = String.init<A>(reflecting:)();
    *(_QWORD *)(v43 + 56) = v24;
    *(_QWORD *)(v43 + 64) = v26;
    *(_QWORD *)(v43 + 32) = v45;
    *(_QWORD *)(v43 + 40) = v46;
    os_log(_:dso:log:type:_:)();
LABEL_42:
    swift_bridgeObjectRelease();
    return;
  }
  v29 = v27;
  v30 = (uint64_t *)(v25 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  if ((v29 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v29 >= *(_QWORD *)(*v30 + 16))
  {
LABEL_44:
    __break(1u);
LABEL_45:
    v64 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *v30 = v64;
    goto LABEL_36;
  }
  v31 = v87;
  v32 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  v33 = *(_QWORD *)(v86 + 72) * v29;
  outlined init with copy of ConversationControlsAppLaunchButtonType(*v30 + v32 + v33, v87, type metadata accessor for Participant);
  Participant.avInfo.getter();
  if (v34 == 2)
  {
    static os_log_type_t.error.getter();
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1BD6441D0;
    v37 = v85;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v31, v85, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v37, 0, 1, v84);
    specialized >> prefix<A>(_:)(v37);
    v39 = v38;
    v41 = v40;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v37, &demangling cache variable for type metadata for Participant?);
    v42 = v91;
    *(_QWORD *)(v36 + 56) = v24;
    *(_QWORD *)(v36 + 64) = v42;
    *(_QWORD *)(v36 + 32) = v39;
    *(_QWORD *)(v36 + 40) = v41;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    outlined destroy of AccountUpdateNotice(v31, type metadata accessor for Participant);
    return;
  }
  v47 = v35;
  v86 = v34;
  Participant.videoInfo.getter();
  outlined init with take of Any?((uint64_t)v96, (uint64_t)&v93, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined init with take of Any?((uint64_t)v96, (uint64_t)v98, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v98[0] || v95 != 1)
  {
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    v56 = v31;
LABEL_41:
    outlined destroy of AccountUpdateNotice(v56, type metadata accessor for Participant);
    goto LABEL_42;
  }
  if (v93)
    v94 = 1;
  v80 = v47;
  if ((v21 & 1) != 0)
  {
    v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v50 = v49;
    if (v20)
    {
      v51 = v48;
      v99[0] = v48;
      v99[1] = v49;
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)();
      if (*(_QWORD *)(v20 + 16))
      {
        specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v92);
        v53 = v52;
        outlined destroy of AnyHashable((uint64_t)v92);
        if ((v53 & 1) != 0)
        {
          v97[0] = v51;
          v97[1] = v50;
          v54 = MEMORY[0x1E0DEA968];
          AnyHashable.init<A>(_:)();
          specialized Dictionary.subscript.getter();
          outlined destroy of AnyHashable((uint64_t)v92);
          if (v99[3])
          {
            if ((swift_dynamicCast() & 1) != 0 && v93)
            {
              if (LOBYTE(v92[0]))
                v55 = 3;
              else
                v55 = 2;
              v94 = v55;
            }
          }
          else
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v99, &demangling cache variable for type metadata for Any?);
          }
          v57 = swift_allocObject();
          *(_OWORD *)(v57 + 16) = xmmword_1BD6441D0;
          if (v93)
          {
            LOBYTE(v92[0]) = v94;
            v58 = String.init<A>(reflecting:)();
          }
          else
          {
            v59 = 0xE300000000000000;
            v58 = 7104878;
          }
          v60 = v91;
          *(_QWORD *)(v57 + 56) = v54;
          *(_QWORD *)(v57 + 64) = v60;
          *(_QWORD *)(v57 + 32) = v58;
          *(_QWORD *)(v57 + 40) = v59;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();
        }
      }
      else
      {
        outlined destroy of AnyHashable((uint64_t)v92);
      }
    }
    swift_bridgeObjectRelease();
  }
  v79 = v33;
  v89 = v32;
  outlined init with take of Any?((uint64_t)&v93, (uint64_t)v99, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined retain of [Participant]((uint64_t)v99);
  v61 = v87;
  Participant.screenInfo.getter();
  v62 = Participant.captionInfo.getter();
  Participant.copresenceInfo.getter(v97);
  v63 = (uint64_t)v83;
  v24 = v61;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v97);
  outlined consume of Participant.CaptionInfo?(v62);
  outlined release of LinearGradient((uint64_t)v99);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v92, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined destroy of AccountUpdateNotice(v61, type metadata accessor for Participant);
  outlined init with take of StagedCollaboration(v63, v61, type metadata accessor for Participant);
  swift_beginAccess();
  v64 = *v30;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v30 = v64;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_45;
LABEL_36:
  v66 = MEMORY[0x1E0DEA968];
  if (v29 < *(_QWORD *)(v64 + 16))
  {
    outlined assign with copy of Participant.State(v24, v64 + v89 + v79, type metadata accessor for Participant);
    swift_endAccess();
    v90 = static OS_os_log.conversationKit;
    v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = v82;
    LOBYTE(v92[0]) = v81;
    v68 = String.init<A>(reflecting:)();
    v69 = v91;
    *(_QWORD *)(v67 + 56) = v66;
    *(_QWORD *)(v67 + 64) = v69;
    *(_QWORD *)(v67 + 32) = v68;
    *(_QWORD *)(v67 + 40) = v70;
    if (v93)
    {
      LOBYTE(v92[0]) = v94;
      v71 = String.init<A>(reflecting:)();
    }
    else
    {
      v72 = 0xE300000000000000;
      v71 = 7104878;
    }
    *(_QWORD *)(v67 + 96) = v66;
    *(_QWORD *)(v67 + 104) = v69;
    *(_QWORD *)(v67 + 72) = v71;
    *(_QWORD *)(v67 + 80) = v72;
    v73 = v85;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v24, v85, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v73, 0, 1, v84);
    specialized >> prefix<A>(_:)(v73);
    v75 = v74;
    v77 = v76;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v73, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v67 + 136) = v66;
    *(_QWORD *)(v67 + 144) = v69;
    *(_QWORD *)(v67 + 112) = v75;
    *(_QWORD *)(v67 + 120) = v77;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.didUpdateVisibleParticipant(_:)(v24);
    v56 = v24;
    goto LABEL_41;
  }
  __break(1u);
}

void ConversationController.remoteVideoClient(_:videoDidDegrade:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  if (one-time initialization token for shared != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_677();
  if ((v9 & 1) == 0)
  {
    OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v14 = (void *)OUTLINED_FUNCTION_7_22();
    v10 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v10 + 16) = v6;
    *(_BYTE *)(v10 + 24) = v4 & 1;
    *(_QWORD *)(v10 + 32) = v0;
    OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
    v11 = v6;
    v12 = v0;
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_269();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    OUTLINED_FUNCTION_104_13();
    v13 = OUTLINED_FUNCTION_673();
    MEMORY[0x1C3B7361C](v13);
    OUTLINED_FUNCTION_465_0();

    OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationController.remoteVideoClient(_:videoDidDegrade:)(void *a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  __int128 v56;
  int v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65[27];
  uint64_t v66;
  char v67;
  char v68;
  _BYTE v69[80];
  uint64_t v70[8];
  uint64_t v71[10];
  _BYTE v72[88];

  v64 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v60 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for Participant(0);
  v61 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v58 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v62 = (uint64_t)&v54 - v9;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v63 = static OS_os_log.conversationKit;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v11 = swift_allocObject();
  v56 = xmmword_1BD645380;
  *(_OWORD *)(v11 + 16) = xmmword_1BD645380;
  v65[0] = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  v12 = a1;
  v13 = String.init<A>(reflecting:)();
  v15 = v14;
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v17 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v11 + 64) = v17;
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v15;
  v57 = a2;
  LOBYTE(v65[0]) = a2 & 1;
  v18 = String.init<A>(reflecting:)();
  *(_QWORD *)(v11 + 96) = v16;
  *(_QWORD *)(v11 + 104) = v17;
  *(_QWORD *)(v11 + 72) = v18;
  *(_QWORD *)(v11 + 80) = v19;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v20 = v64;
  v21 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v12, 0);
  if ((v22 & 1) != 0)
  {
    static os_log_type_t.error.getter();
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BD6441D0;
    v65[0] = v12;
    v36 = v12;
    v37 = String.init<A>(reflecting:)();
    *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 64) = v17;
    *(_QWORD *)(v35 + 32) = v37;
    *(_QWORD *)(v35 + 40) = v38;
    os_log(_:dso:log:type:_:)();
LABEL_28:
    swift_bridgeObjectRelease();
    return;
  }
  v23 = v21;
  v63 = v10;
  v55 = v17;
  v24 = (uint64_t *)(v20 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v23 < *(_QWORD *)(*v24 + 16))
  {
    v20 = v62;
    v25 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    v17 = *(_QWORD *)(v61 + 72) * v23;
    outlined init with copy of ConversationControlsAppLaunchButtonType(*v24 + v25 + v17, v62, type metadata accessor for Participant);
    Participant.avInfo.getter();
    if (v27 == 2)
    {
      static os_log_type_t.error.getter();
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1BD6441D0;
      v29 = v60;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v20, v60, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v29, 0, 1, v59);
      specialized >> prefix<A>(_:)(v29);
      v31 = v30;
      v33 = v32;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for Participant?);
      v34 = v55;
      *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v28 + 64) = v34;
      *(_QWORD *)(v28 + 32) = v31;
      *(_QWORD *)(v28 + 40) = v33;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice(v20, type metadata accessor for Participant);
      return;
    }
    v61 = v26;
    v54 = v25;
    Participant.videoInfo.getter();
    outlined init with take of Any?((uint64_t)v69, (uint64_t)&v66, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    outlined init with take of Any?((uint64_t)v69, (uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v71[0])
      v68 = a2 & 1;
    if ((v57 & 1) != 0)
    {
      if (v66)
        v67 = 1;
      if (!objc_msgSend(v12, sel_isNetworkDegraded) || !v66)
      {
LABEL_22:
        outlined init with take of Any?((uint64_t)&v66, (uint64_t)v72, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
        outlined retain of [Participant]((uint64_t)v72);
        Participant.screenInfo.getter();
        v40 = Participant.captionInfo.getter();
        Participant.copresenceInfo.getter(v70);
        v41 = (uint64_t)v58;
        Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
        outlined release of Participant.CopresenceInfo?(v70);
        outlined consume of Participant.CaptionInfo?(v40);
        outlined release of LinearGradient((uint64_t)v72);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v65, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
        outlined destroy of AccountUpdateNotice(v20, type metadata accessor for Participant);
        outlined init with take of StagedCollaboration(v41, v20, type metadata accessor for Participant);
        swift_beginAccess();
        v42 = *v24;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v24 = v42;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          goto LABEL_23;
        goto LABEL_31;
      }
      if (objc_msgSend(v12, sel_isNetworkDegradedLocal))
        v39 = 3;
      else
        v39 = 2;
    }
    else
    {
      if (!v66)
        goto LABEL_22;
      v39 = 0;
    }
    v67 = v39;
    goto LABEL_22;
  }
  __break(1u);
LABEL_31:
  v42 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *v24 = v42;
LABEL_23:
  if (v23 < *(_QWORD *)(v42 + 16))
  {
    outlined assign with copy of Participant.State(v20, v42 + v54 + v17, type metadata accessor for Participant);
    swift_endAccess();
    v63 = static OS_os_log.conversationKit;
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = v56;
    if (v66)
    {
      LOBYTE(v65[0]) = v67;
      v45 = String.init<A>(reflecting:)();
    }
    else
    {
      v46 = 0xE300000000000000;
      v45 = 7104878;
    }
    v47 = MEMORY[0x1E0DEA968];
    v48 = v55;
    *(_QWORD *)(v44 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v44 + 64) = v48;
    *(_QWORD *)(v44 + 32) = v45;
    *(_QWORD *)(v44 + 40) = v46;
    v49 = v60;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v20, v60, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v49, 0, 1, v59);
    specialized >> prefix<A>(_:)(v49);
    v51 = v50;
    v53 = v52;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v49, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v44 + 96) = v47;
    *(_QWORD *)(v44 + 104) = v48;
    *(_QWORD *)(v44 + 72) = v51;
    *(_QWORD *)(v44 + 80) = v53;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.didUpdateVisibleParticipant(_:)(v20);
    outlined destroy of AccountUpdateNotice(v20, type metadata accessor for Participant);
    goto LABEL_28;
  }
  __break(1u);
}

void ConversationController.remoteVideoClient(_:remoteMediaDidStall:)()
{
  ConversationController.remoteVideoClient(_:videoDidSuspend:)();
}

void sub_1BD5725E4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  const void *v21;
  uint64_t v22;

  _Block_release(v21);

  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 136) + 8));
  OUTLINED_FUNCTION_96_1(*(_QWORD *)(v22 - 152));
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationController.remoteVideoClient(_:remoteMediaDidStall:)(void *a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[3];
  int v57;
  int v58;
  __int128 v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66[27];
  _BYTE v67[104];
  _BYTE v68[80];
  uint64_t v69[8];
  uint64_t v70[10];
  _BYTE v71[88];

  v65 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v62 = (uint64_t)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for Participant(0);
  v63 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v60 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v64 = (uint64_t)v56 - v9;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v11 = swift_allocObject();
  v59 = xmmword_1BD645380;
  *(_OWORD *)(v11 + 16) = xmmword_1BD645380;
  v66[0] = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  v12 = a1;
  v13 = String.init<A>(reflecting:)();
  v15 = v14;
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v17 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v11 + 64) = v17;
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v15;
  v18 = v17;
  v57 = a2;
  v58 = a2 & 1;
  LOBYTE(v66[0]) = a2 & 1;
  v19 = String.init<A>(reflecting:)();
  *(_QWORD *)(v11 + 96) = v16;
  *(_QWORD *)(v11 + 104) = v18;
  *(_QWORD *)(v11 + 72) = v19;
  *(_QWORD *)(v11 + 80) = v20;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v21 = v65;
  v22 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v12, 0);
  if ((v23 & 1) != 0)
  {
    static os_log_type_t.error.getter();
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1BD6441D0;
    v66[0] = v12;
    v38 = v12;
    v39 = String.init<A>(reflecting:)();
    *(_QWORD *)(v37 + 56) = v16;
    *(_QWORD *)(v37 + 64) = v18;
    *(_QWORD *)(v37 + 32) = v39;
    *(_QWORD *)(v37 + 40) = v40;
    os_log(_:dso:log:type:_:)();
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  v24 = v22;
  v56[2] = v10;
  v25 = (uint64_t *)(v21 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  if ((v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v24 >= *(_QWORD *)(*v25 + 16))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    v44 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *v25 = v44;
    goto LABEL_12;
  }
  v26 = v64;
  v27 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v28 = *(_QWORD *)(v63 + 72) * v24;
  outlined init with copy of ConversationControlsAppLaunchButtonType(*v25 + v27 + v28, v64, type metadata accessor for Participant);
  Participant.avInfo.getter();
  if (v29 == 2)
  {
    static os_log_type_t.error.getter();
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BD6441D0;
    v32 = v62;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v26, v62, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v32, 0, 1, v61);
    specialized >> prefix<A>(_:)(v32);
    v34 = v33;
    v36 = v35;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v32, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v31 + 64) = v18;
    *(_QWORD *)(v31 + 32) = v34;
    *(_QWORD *)(v31 + 40) = v36;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    outlined destroy of AccountUpdateNotice(v26, type metadata accessor for Participant);
    return;
  }
  v41 = v29;
  v56[0] = v27;
  v56[1] = v30;
  v63 = v28;
  v10 = v18;
  Participant.videoInfo.getter();
  outlined init with take of Any?((uint64_t)v68, (uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined init with take of Any?((uint64_t)v68, (uint64_t)v70, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v70[0])
    v67[14] = ConversationController.isOneToOneModeEnabled.getter() & v57 & 1;
  v57 = v41 & 1;
  outlined init with take of Any?((uint64_t)v67, (uint64_t)v71, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  outlined retain of [Participant]((uint64_t)v71);
  Participant.screenInfo.getter();
  v42 = Participant.captionInfo.getter();
  Participant.copresenceInfo.getter(v69);
  v43 = (uint64_t)v60;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v69);
  outlined consume of Participant.CaptionInfo?(v42);
  outlined release of LinearGradient((uint64_t)v71);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v66, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  outlined destroy of AccountUpdateNotice(v26, type metadata accessor for Participant);
  outlined init with take of StagedCollaboration(v43, v26, type metadata accessor for Participant);
  swift_beginAccess();
  v44 = *v25;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v25 = v44;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_17;
LABEL_12:
  v46 = MEMORY[0x1E0DEA968];
  if (v24 < *(_QWORD *)(v44 + 16))
  {
    v47 = v64;
    outlined assign with copy of Participant.State(v64, v44 + v56[0] + v63, type metadata accessor for Participant);
    swift_endAccess();
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v59;
    LOBYTE(v66[0]) = v58;
    v49 = String.init<A>(reflecting:)();
    *(_QWORD *)(v48 + 56) = v46;
    *(_QWORD *)(v48 + 64) = v10;
    *(_QWORD *)(v48 + 32) = v49;
    *(_QWORD *)(v48 + 40) = v50;
    v51 = v62;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v47, v62, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v51, 0, 1, v61);
    specialized >> prefix<A>(_:)(v51);
    v53 = v52;
    v55 = v54;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v51, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v48 + 96) = v46;
    *(_QWORD *)(v48 + 104) = v10;
    *(_QWORD *)(v48 + 72) = v53;
    *(_QWORD *)(v48 + 80) = v55;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ConversationController.didUpdateVisibleParticipant(_:)(v47);
    outlined destroy of AccountUpdateNotice(v47, type metadata accessor for Participant);
    goto LABEL_14;
  }
  __break(1u);
}

void sub_1BD572CE8()
{
  void *v0;
  void *v1;

}

void closure #1 in ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)(void *a1, void *a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _OWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int16 v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int16 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int EnumTagSinglePayload;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  double v89;
  double v90;
  char v91;
  double v92;
  double v93;
  int v94;
  char v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  double v108;
  char v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  double v120;
  double v121;
  void (*v122)(char *, unint64_t);
  unint64_t v123;
  uint64_t v124;
  double v125;
  double v126;
  double v127;
  unint64_t v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  unsigned __int8 v143;
  uint64_t v144;
  int v145;
  BOOL v146;
  int v147;
  uint64_t v148;
  uint64_t *v149;
  int v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v160;
  __int16 v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  __int16 v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64x2_t v169;
  int16x8_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _BYTE *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _BYTE *v195;
  _BYTE *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  void (*v204)(uint64_t, unint64_t);
  uint64_t v205;
  char v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _BYTE *v210;
  uint64_t v211;
  char *v212;
  void (*v213)(uint64_t, uint64_t);
  double v214;
  double v215;
  char *v216;
  double v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  NSObject *v221;
  os_log_type_t v222;
  uint8_t *v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  double v228;
  double v229;
  double v230;
  uint64_t v231;
  char *v232;
  NSObject *v233;
  os_log_type_t v234;
  uint8_t *v235;
  uint64_t v236;
  _OWORD *v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  __int128 v252;
  char *v253;
  char *v254;
  __int128 v255;
  char *v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  _BYTE *v264;
  _QWORD *v265;
  uint64_t v266;
  uint8_t *v267;
  char *v268;
  uint64_t v269;
  _BYTE v270[216];
  uint64_t v271[33];
  _BYTE v272[209];
  _QWORD v273[27];
  _QWORD v274[27];
  __int128 v275[15];
  _QWORD v276[3];
  unint64_t v277;
  _QWORD v278[3];
  uint64_t v279;
  double v280;
  double v281;
  double v282;
  double v283;
  char v284;
  double v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  char v292;
  __int128 v293;
  __int128 v294;
  _QWORD v295[6];
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  __int16 v305;
  _QWORD v306[5];
  _BYTE v307[80];
  uint64_t v308[4];
  unsigned __int8 v309;
  char v310[32];
  char v311;

  v268 = a3;
  v5 = type metadata accessor for UUID();
  v250 = *(_QWORD *)(v5 - 8);
  v251 = v5;
  MEMORY[0x1E0C80A78](v5);
  v249 = (char *)&v242 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Participant(0);
  v262 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v259 = (uint64_t)&v242 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v10 = MEMORY[0x1E0C80A78](v9);
  v258 = (char *)&v242 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v244 = (uint64_t)&v242 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v248 = (uint64_t)&v242 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v254 = (char *)&v242 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)&v255 = (char *)&v242 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v253 = (char *)&v242 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v256 = (char *)&v242 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v257 = (uint64_t)&v242 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v260 = (uint64_t)&v242 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v261 = (uint64_t)&v242 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v267 = (uint8_t *)&v242 - v31;
  MEMORY[0x1E0C80A78](v30);
  v269 = (uint64_t)&v242 - v32;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v33 = (char *)static OS_os_log.conversationKit;
  v263 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v34 = (_OWORD *)swift_allocObject();
  v252 = xmmword_1BD645380;
  v34[1] = xmmword_1BD645380;
  *(_QWORD *)v272 = a1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for AVCRemoteVideoClient);
  v35 = a1;
  v36 = String.init<A>(reflecting:)();
  v38 = v37;
  v39 = MEMORY[0x1E0DEA968];
  *((_QWORD *)v34 + 7) = MEMORY[0x1E0DEA968];
  v40 = (_BYTE *)lazy protocol witness table accessor for type String and conformance String();
  *((_QWORD *)v34 + 8) = v40;
  *((_QWORD *)v34 + 4) = v36;
  *((_QWORD *)v34 + 5) = v38;
  *(_QWORD *)v272 = a2;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for VideoAttributes);
  v265 = a2;
  v41 = String.init<A>(reflecting:)();
  *((_QWORD *)v34 + 12) = v39;
  *((_QWORD *)v34 + 13) = v40;
  v264 = v40;
  *((_QWORD *)v34 + 9) = v41;
  *((_QWORD *)v34 + 10) = v42;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  __swift_storeEnumTagSinglePayload(v269, 1, 1, v7);
  memset(v295, 0, 42);
  v294 = 0u;
  v293 = 0u;
  memset(v276, 0, sizeof(v276));
  v277 = 1;
  bzero(v278, 0xB1uLL);
  v43 = v268;
  v44 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v35, 0);
  v45 = (unint64_t)&metadata instantiation cache for protocol conformance descriptor for ImageNames.Roster;
  v266 = v7;
  if ((v46 & 1) != 0)
  {
    v64 = ConversationController.remoteParticipantIndex(for:useScreenProviders:)(v35, 1);
    if ((v65 & 1) != 0)
    {
LABEL_151:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v276, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      swift_bridgeObjectRelease();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v269, &demangling cache variable for type metadata for Participant?);
      return;
    }
    v66 = v64;
    v48 = &v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
    swift_beginAccess();
    if ((v66 & 0x8000000000000000) != 0)
      goto LABEL_166;
    v67 = *(_QWORD *)v48;
    if (v66 >= *(_QWORD *)(*(_QWORD *)v48 + 16))
    {
LABEL_167:
      __break(1u);
      goto LABEL_168;
    }
    v68 = *(unsigned __int8 *)(v262 + 80);
    v246 = *(_QWORD *)(v262 + 72);
    v247 = v66;
    v69 = (uint64_t)v267;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v67 + ((v68 + 32) & ~v68) + v246 * v66, (uint64_t)v267, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v69, 0, 1, v7);
    v70 = v69;
    v71 = v269;
    outlined assign with take of Participant?(v70, v269, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v71, 1, v7))
    {
      v261 = 0;
      v262 = 0;
      v251 = 0;
      v72 = 0;
      v73 = 0;
      v74 = 0;
      v75 = 0;
      v76 = v269;
      v77 = 0;
      v78 = 0;
      v79 = 0;
    }
    else
    {
      v76 = v269;
      v250 = v68;
      v101 = v259;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v269, v259, type metadata accessor for Participant);
      Participant.videoInfo.getter();
      v261 = v297;
      v262 = v296;
      v251 = v298;
      v72 = v299;
      v73 = v300;
      v74 = v301;
      v75 = v302;
      v77 = v303;
      v78 = v304;
      v79 = v305;
      v102 = v101;
      v68 = v250;
      outlined destroy of AccountUpdateNotice(v102, type metadata accessor for Participant);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)&v293 = v262;
    *((_QWORD *)&v293 + 1) = v261;
    *(_QWORD *)&v294 = v251;
    *((_QWORD *)&v294 + 1) = v72;
    v295[0] = v73;
    v295[1] = v74;
    v295[2] = v75;
    v295[3] = v77;
    v295[4] = v78;
    LOWORD(v295[5]) = v79;
    v47 = v266;
    if (__swift_getEnumTagSinglePayload(v76, 1, v266))
    {
      v261 = 0;
      v262 = 0;
      v7 = 0;
    }
    else
    {
      v103 = v259;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v269, v259, type metadata accessor for Participant);
      v261 = Participant.captionInfo.getter();
      v262 = v104;
      v7 = v105;
      outlined destroy of AccountUpdateNotice(v103, type metadata accessor for Participant);
    }
    v40 = v268;
    v33 = (char *)v265;
    v97 = v260;
    if (__swift_getEnumTagSinglePayload(v269, 1, v47))
    {
      memset(v272, 0, 24);
      *(_QWORD *)&v272[24] = 1;
      bzero(&v272[32], 0xB1uLL);
    }
    else
    {
      v106 = v259;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v269, v259, type metadata accessor for Participant);
      Participant.screenInfo.getter();
      outlined destroy of AccountUpdateNotice(v106, type metadata accessor for Participant);
    }
    outlined assign with take of Participant?((uint64_t)v272, (uint64_t)v276, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v107 = 1.0;
    if (v277 == 1)
    {
      v108 = 1.0;
    }
    else
    {
      v109 = v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 96];
      v110 = *(_OWORD *)&v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 16];
      v286 = *(_OWORD *)&v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes];
      v287 = v110;
      v111 = *(_OWORD *)&v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 48];
      v288 = *(_OWORD *)&v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 32];
      v289 = v111;
      v112 = *(_OWORD *)&v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 80];
      v290 = *(_OWORD *)&v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes + 64];
      v291 = v112;
      v292 = v109;
      v279 = VideoAttributeOrientation.deviceOrientation.getter((int)objc_msgSend(v33, sel_orientation));
      v108 = 1.0;
      if (v277 != 1)
      {
        v113 = v68;
        v285 = VideoAttributes.scaleFactor.getter();
        v114 = v277;
        if (v277 >= 2)
        {
          v115 = v278[0];
          v116 = __swift_project_boxed_opaque_existential_1(v276, v277);
          v117 = *(_QWORD *)(v114 - 8);
          MEMORY[0x1E0C80A78](v116);
          v119 = (char *)&v242 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v117 + 16))(v119);
          (*(void (**)(_QWORD *__return_ptr, unint64_t, uint64_t))(v115 + 64))(v306, v114, v115);
          v120 = *(double *)&v306[2];
          v121 = *(double *)&v306[3];
          v122 = *(void (**)(char *, unint64_t))(v117 + 8);
          v47 = v266;
          v122(v119, v114);
          v97 = v260;
          outlined init with take of Any?((uint64_t)v306, (uint64_t)v310, &demangling cache variable for type metadata for CGRect?);
          if (v311)
            v108 = 1.0;
          else
            v108 = v121;
          if (v311)
            v107 = 1.0;
          else
            v107 = v120;
          v114 = v277;
        }
        if (v114 == 1)
        {
          v68 = v113;
        }
        else
        {
          v123 = v279;
          if (v292)
            v124 = 0;
          else
            v124 = *((_QWORD *)&v290 + 1);
          objc_msgSend(v33, sel_ratio);
          v126 = v125;
          objc_msgSend(v33, sel_ratio);
          v128 = ConversationController.remoteOrientationFor(aspectRatio:videoRotation:deviceFamily:)(v123, v124, v126, v127);
          v68 = v113;
          if (v277 != 1)
            v278[2] = v128;
          v97 = v260;
        }
      }
    }
    objc_msgSend(v33, sel_ratio);
    if (v277 != 1)
    {
      if (v130 >= v129)
        v131 = v129;
      else
        v131 = v130;
      if (v129 > v130)
        v130 = v129;
      if (v131 == v129)
        v132 = v107;
      else
        v132 = v108;
      if (v132 == v107)
        v133 = v108;
      else
        v133 = v107;
      if (v130 == v129)
        v134 = v107;
      else
        v134 = v108;
      if (v131 == v130)
        v134 = v133;
      v280 = ceil(v131 * v132);
      v281 = ceil(v130 * v134);
      v282 = v281;
      v283 = v280;
      v284 = 0;
    }
    v245 = v68;
    goto LABEL_90;
  }
  v47 = v44;
  v48 = &v43[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  swift_beginAccess();
  if ((v47 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v49 = *(_QWORD *)v48;
    if (v47 < *(_QWORD *)(*(_QWORD *)v48 + 16))
    {
      v50 = *(unsigned __int8 *)(v262 + 80);
      v51 = *(_QWORD *)(v262 + 72);
      v247 = v47;
      v245 = v50;
      v246 = v51;
      v52 = (uint64_t)v267;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v49 + ((v50 + 32) & ~v50) + v51 * v47, (uint64_t)v267, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v52, 0, 1, v7);
      v53 = v52;
      v54 = v269;
      outlined assign with take of Participant?(v53, v269, &demangling cache variable for type metadata for Participant?);
      if (__swift_getEnumTagSinglePayload(v54, 1, v7))
      {
        v55 = 0;
        v262 = 0;
        v243 = 0;
        v56 = 0;
        v57 = 0;
        v58 = 0;
        v59 = 0;
        v60 = v269;
        v61 = 0;
        v62 = 0;
        v63 = 0;
      }
      else
      {
        v60 = v269;
        v80 = v259;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v269, v259, type metadata accessor for Participant);
        Participant.videoInfo.getter();
        v262 = v297;
        v243 = v298;
        v56 = v299;
        v57 = v300;
        v58 = v301;
        v59 = v302;
        v61 = v303;
        v62 = v304;
        v63 = v305;
        v81 = v80;
        v55 = v296;
        outlined destroy of AccountUpdateNotice(v81, type metadata accessor for Participant);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)&v293 = v55;
      *((_QWORD *)&v293 + 1) = v262;
      *(_QWORD *)&v294 = v243;
      *((_QWORD *)&v294 + 1) = v56;
      v295[0] = v57;
      v295[1] = v58;
      v295[2] = v59;
      v295[3] = v61;
      v295[4] = v62;
      LOWORD(v295[5]) = v63;
      v82 = v261;
      outlined init with copy of FeatureEligibility?(v60, v261, &demangling cache variable for type metadata for Participant?);
      v47 = v266;
      if (__swift_getEnumTagSinglePayload(v82, 1, v266) == 1)
        goto LABEL_170;
      Participant.screenInfo.getter();
      outlined destroy of AccountUpdateNotice(v82, type metadata accessor for Participant);
      outlined assign with take of Participant?((uint64_t)v272, (uint64_t)v276, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v269, 1, v47);
      v40 = v268;
      v33 = (char *)v265;
      if (EnumTagSinglePayload)
      {
        v261 = 0;
        v262 = 0;
        v7 = 0;
      }
      else
      {
        v84 = v259;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v269, v259, type metadata accessor for Participant);
        v261 = Participant.captionInfo.getter();
        v262 = v85;
        v7 = v86;
        outlined destroy of AccountUpdateNotice(v84, type metadata accessor for Participant);
      }
      if ((_QWORD)v293)
      {
        v87 = BYTE13(v293);
        v88 = v87 ^ objc_msgSend(v33, sel_videoMirrored);
        if ((v88 & 1) != 0)
        {
          if (!(_QWORD)v293)
            goto LABEL_34;
          goto LABEL_23;
        }
        if ((_QWORD)v293)
        {
LABEL_23:
          BYTE13(v293) = objc_msgSend(v33, sel_videoMirrored);
          if ((_QWORD)v293)
          {
            *((_QWORD *)&v294 + 1) = VideoAttributeOrientation.deviceOrientation.getter((int)objc_msgSend(v33, sel_orientation));
            if ((_QWORD)v293)
            {
              LOBYTE(v295[0]) = VideoAttributeCamera.cameraPosition.getter(objc_msgSend(v33, sel_camera));
              if ((_QWORD)v293)
              {
                specialized Dictionary.subscript.getter();
                if (*(_QWORD *)&v272[24])
                {
                  outlined init with take of Notice((__int128 *)v272, (uint64_t)v275);
                  if ((_QWORD)v293)
                  {
                    outlined init with copy of RadarReporting((uint64_t)v275, (uint64_t)v274);
                    if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
                    {
                      static AspectRatio.remoteAspectRatios(with:contentsRect:)(v274, (uint64_t)v272, 1.0, 1.0);
                      v89 = *(double *)v272;
                      v90 = *(double *)&v272[8];
                      v91 = v272[16];
                      v92 = *(double *)&v272[24];
                      v93 = *(double *)&v272[32];
                      v94 = v272[40];
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)v274);
                      if ((v91 & 1) != 0 || v89 == v90)
                      {
                        v89 = 0.0;
                        v90 = 0.0;
                        v92 = 0.0;
                        v93 = 0.0;
                        v95 = 1;
                      }
                      else
                      {
                        v95 = 0;
                        if (v94)
                        {
                          v93 = v89;
                          v92 = v90;
                        }
                      }
                      v33 = (char *)v265;
                    }
                    else
                    {
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)v274);
                      v89 = 0.0;
                      v90 = 0.0;
                      v92 = 0.0;
                      v93 = 0.0;
                      v95 = 1;
                    }
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)v275);
                    *(double *)&v295[1] = v89;
                    *(double *)&v295[2] = v90;
                    *(double *)&v295[3] = v92;
                    *(double *)&v295[4] = v93;
                    LOBYTE(v295[5]) = v95;
                    v47 = v266;
                    if ((v88 & 1) != 0)
                      goto LABEL_36;
                  }
                  else
                  {
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)v275);
                    if ((v88 & 1) != 0)
                      goto LABEL_36;
                  }
LABEL_89:
                  v97 = v260;
LABEL_90:
                  outlined init with copy of FeatureEligibility?(v269, v97, &demangling cache variable for type metadata for Participant?);
                  if (__swift_getEnumTagSinglePayload(v97, 1, v47) != 1)
                  {
                    Participant.avInfo.getter();
                    if (v135 == 2)
                    {
                      outlined destroy of AccountUpdateNotice(v97, type metadata accessor for Participant);
                      static os_log_type_t.error.getter();
                      v136 = swift_allocObject();
                      *(_OWORD *)(v136 + 16) = xmmword_1BD6441D0;
                      v137 = (uint64_t)v267;
                      outlined init with copy of FeatureEligibility?(v269, (uint64_t)v267, &demangling cache variable for type metadata for Participant?);
                      specialized >> prefix<A>(_:)(v137);
                      v139 = v138;
                      v141 = v140;
                      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v137, &demangling cache variable for type metadata for Participant?);
                      v142 = v264;
                      *(_QWORD *)(v136 + 56) = MEMORY[0x1E0DEA968];
                      *(_QWORD *)(v136 + 64) = v142;
                      *(_QWORD *)(v136 + 32) = v139;
                      *(_QWORD *)(v136 + 40) = v141;
                      os_log(_:dso:log:type:_:)();
                      outlined consume of Participant.CaptionInfo?(v261);
                      swift_bridgeObjectRelease();
                      goto LABEL_151;
                    }
                    outlined destroy of AccountUpdateNotice(v97, type metadata accessor for Participant);
                    if ((_QWORD)v293)
                      v143 = v295[0];
                    else
                      v143 = 3;
                    v144 = v257;
                    outlined init with copy of FeatureEligibility?(v269, v257, &demangling cache variable for type metadata for Participant?);
                    if (__swift_getEnumTagSinglePayload(v144, 1, v47) != 1)
                    {
                      Participant.videoInfo.getter();
                      outlined destroy of AccountUpdateNotice(v144, type metadata accessor for Participant);
                      outlined init with take of Any?((uint64_t)v307, (uint64_t)v308, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
                      if (v308[0])
                      {
                        v145 = v309;
                        outlined release of LinearGradient((uint64_t)v307);
                      }
                      else
                      {
                        v145 = 3;
                      }
                      if (v143 == 3)
                        v146 = v145 == 3;
                      else
                        v146 = v145 != 3 && v145 == v143;
                      v147 = v146;
                      v148 = (uint64_t)v256;
                      outlined init with copy of FeatureEligibility?((uint64_t)v276, (uint64_t)v275, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                      outlined init with copy of FeatureEligibility?(v269, v148, &demangling cache variable for type metadata for Participant?);
                      if (__swift_getEnumTagSinglePayload(v148, 1, v47) != 1)
                      {
                        Participant.screenInfo.getter();
                        outlined destroy of AccountUpdateNotice(v148, type metadata accessor for Participant);
                        outlined init with copy of FeatureEligibility?((uint64_t)v275, (uint64_t)v272, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                        outlined init with copy of FeatureEligibility?((uint64_t)v274, (uint64_t)v273, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                        LODWORD(v259) = v147;
                        if (*(_QWORD *)&v272[24] == 1)
                        {
                          v149 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
                          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v274, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v275, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                          if (v273[3] == 1)
                          {
                            v149 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
                            v150 = -1;
                          }
                          else
                          {
                            v150 = 0;
                          }
                          LODWORD(v260) = v150;
                        }
                        else
                        {
                          outlined init with copy of FeatureEligibility?((uint64_t)v272, (uint64_t)v271, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                          if (v273[3] == 1)
                          {
                            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v274, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v275, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                            outlined destroy of Participant.ScreenInfo((uint64_t)v271);
                            LODWORD(v260) = 0;
                            v149 = &demangling cache variable for type metadata for (Participant.ScreenInfo?, Participant.ScreenInfo?);
                          }
                          else
                          {
                            memcpy(v270, v273, 0xD1uLL);
                            static Participant.ScreenInfo.== infix(_:_:)();
                            LODWORD(v260) = v151;
                            outlined destroy of Participant.ScreenInfo((uint64_t)v270);
                            v149 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
                            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v274, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v275, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                            outlined destroy of Participant.ScreenInfo((uint64_t)v271);
                          }
                        }
                        v152 = v255;
                        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v272, v149);
                        outlined init with copy of FeatureEligibility?(v269, v152, &demangling cache variable for type metadata for Participant?);
                        if (__swift_getEnumTagSinglePayload(v152, 1, v47) != 1)
                        {
                          outlined init with take of Any?((uint64_t)&v293, (uint64_t)v274, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
                          v34 = &demangling cache variable for type metadata for Participant.ScreenInfo?;
                          outlined init with copy of FeatureEligibility?((uint64_t)v276, (uint64_t)v272, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                          outlined retain of [Participant]((uint64_t)v274);
                          v153 = v152;
                          Participant.copresenceInfo.getter(v271);
                          v154 = (uint64_t)v253;
                          Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
                          outlined release of Participant.CopresenceInfo?(v271);
                          outlined release of LinearGradient((uint64_t)v274);
                          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v272, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
                          outlined destroy of AccountUpdateNotice(v153, type metadata accessor for Participant);
                          __swift_storeEnumTagSinglePayload(v154, 0, 1, v47);
                          v155 = v154;
                          v156 = v269;
                          outlined assign with take of Participant?(v155, v269, &demangling cache variable for type metadata for Participant?);
                          v157 = v156;
                          v48 = v254;
                          outlined init with copy of FeatureEligibility?(v157, (uint64_t)v254, &demangling cache variable for type metadata for Participant?);
                          if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v47) != 1)
                          {
                            v35 = (uint64_t *)&v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
                            swift_beginAccess();
                            v158 = *v35;
                            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                            *v35 = v158;
                            v45 = v247;
                            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                              goto LABEL_120;
                            goto LABEL_164;
                          }
                          goto LABEL_174;
                        }
LABEL_173:
                        outlined consume of Participant.CaptionInfo?(v261);
                        __break(1u);
LABEL_174:
                        outlined consume of Participant.CaptionInfo?(v261);
                        __break(1u);
LABEL_175:
                        outlined consume of Participant.CaptionInfo?(v261);
                        __break(1u);
                        goto LABEL_176;
                      }
LABEL_172:
                      outlined consume of Participant.CaptionInfo?(v261);
                      __break(1u);
                      goto LABEL_173;
                    }
LABEL_171:
                    outlined consume of Participant.CaptionInfo?(v261);
                    __break(1u);
                    goto LABEL_172;
                  }
                  outlined consume of Participant.CaptionInfo?(v261);
                  __break(1u);
LABEL_170:
                  __break(1u);
                  goto LABEL_171;
                }
LABEL_35:
                outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v272, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
                if ((v88 & 1) != 0)
                {
LABEL_36:
                  if ((_QWORD)v293)
                    HIBYTE(v293) = 1;
                  v96 = __swift_getEnumTagSinglePayload(v269, 1, v47);
                  v97 = v260;
                  if (v96 == 1)
                    goto LABEL_175;
                  v99 = v249;
                  v98 = v250;
                  v100 = v251;
                  (*(void (**)(char *, uint64_t, uint64_t))(v250 + 16))(v249, v269 + *(int *)(v47 + 20), v251);
                  ConversationController.scheduleResetVideoInfo(for:after:)();
                  (*(void (**)(char *, uint64_t))(v98 + 8))(v99, v100);
                  goto LABEL_90;
                }
                goto LABEL_89;
              }
            }
          }
LABEL_34:
          memset(v272, 0, 40);
          goto LABEL_35;
        }
      }
      v88 = 0;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_164:
  v158 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *v35 = v158;
LABEL_120:
  if (v45 >= *(_QWORD *)(v158 + 16))
  {
    __break(1u);
LABEL_166:
    __break(1u);
    goto LABEL_167;
  }
  outlined assign with take of Participant((uint64_t)v48, v158 + ((v245 + 32) & ~(unint64_t)v245) + v246 * v45);
  swift_endAccess();
  v160 = v293;
  v251 = v7;
  if (!(_QWORD)v293)
    goto LABEL_124;
  v161 = v295[5];
  v162 = v295[4];
  v256 = (char *)v295[3];
  v255 = *(_OWORD *)&v295[1];
  v163 = v295[0];
  v164 = *((_QWORD *)&v294 + 1);
  v165 = v294;
  v166 = *((_QWORD *)&v293 + 1);
  v167 = *((_QWORD *)&v293 + 1) >> 24;
  v257 = static OS_os_log.conversationKit;
  v168 = swift_allocObject();
  *(_OWORD *)(v168 + 16) = v252;
  *(_QWORD *)v272 = v160;
  *(_WORD *)&v272[8] = v166 & 0x101;
  v272[10] = BYTE2(v166) & 1;
  v272[11] = v167;
  v169 = (uint64x2_t)vdupq_n_s64(v166);
  v170 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v169, (uint64x2_t)xmmword_1BD64A110), (int32x4_t)vshlq_u64(v169, (uint64x2_t)xmmword_1BD64A100));
  *(int8x8_t *)v170.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v170), (int8x8_t)0x1000100010001);
  *(_DWORD *)&v272[12] = vmovn_s16(v170).u32[0];
  *(_WORD *)&v272[16] = v165 & 0x101;
  *(_QWORD *)&v272[24] = v164;
  v272[32] = v163;
  v171 = v269;
  *(_OWORD *)&v272[40] = v255;
  *(_QWORD *)&v272[56] = v256;
  *(_QWORD *)&v272[64] = v162;
  *(_WORD *)&v272[72] = v161 & 0x101;
  swift_bridgeObjectRetain();
  v172 = String.init<A>(reflecting:)();
  v173 = MEMORY[0x1E0DEA968];
  v174 = v264;
  *(_QWORD *)(v168 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v168 + 64) = v174;
  *(_QWORD *)(v168 + 32) = v172;
  *(_QWORD *)(v168 + 40) = v175;
  v176 = (uint64_t)v267;
  outlined init with copy of FeatureEligibility?(v171, (uint64_t)v267, &demangling cache variable for type metadata for Participant?);
  specialized >> prefix<A>(_:)(v176);
  v178 = v177;
  v180 = v179;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v176, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v168 + 96) = v173;
  *(_QWORD *)(v168 + 104) = v174;
  *(_QWORD *)(v168 + 72) = v178;
  *(_QWORD *)(v168 + 80) = v180;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v181 = v248;
  v47 = v266;
  outlined init with copy of FeatureEligibility?(v171, v248, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v181, 1, v47) == 1)
  {
LABEL_176:
    outlined consume of Participant.CaptionInfo?(v261);
    __break(1u);
LABEL_177:
    swift_retain();
    outlined consume of Participant.CaptionInfo?(v261);
    __break(1u);
    goto LABEL_178;
  }
  v40 = v268;
  ConversationController.didUpdateVisibleParticipant(_:)(v181);
  outlined destroy of AccountUpdateNotice(v181, type metadata accessor for Participant);
  v33 = (char *)v265;
LABEL_124:
  v182 = (uint64_t)v258;
  if ((v260 & 1) != 0)
  {
LABEL_132:
    if ((_QWORD)v293)
      v206 = v259;
    else
      v206 = 1;
    if ((v206 & 1) != 0)
      goto LABEL_139;
    v207 = LOBYTE(v295[0]);
    v208 = swift_allocObject();
    *(_OWORD *)(v208 + 16) = xmmword_1BD6441D0;
    v272[0] = v207;
    v209 = String.init<A>(reflecting:)();
    v210 = v264;
    *(_QWORD *)(v208 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v208 + 64) = v210;
    *(_QWORD *)(v208 + 32) = v209;
    *(_QWORD *)(v208 + 40) = v211;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v212 = &v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange];
    swift_beginAccess();
    v213 = *(void (**)(uint64_t, uint64_t))v212;
    if (!*(_QWORD *)v212)
    {
LABEL_139:
      objc_msgSend(v33, sel_ratio);
      v215 = v214;
      objc_msgSend(v33, sel_ratio);
      v216 = "ConversationControlsViewControllerDelegate" + 16;
      v34 = &metadata instantiation cache for protocol conformance descriptor for ImageNames.Roster;
      v48 = v40;
      if (v215 != v217
        && (v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] & 1) == 0)
      {
        v218 = OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff;
        if (v48[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] == 1)
        {
          if (one-time initialization token for conversationController != -1)
            swift_once();
          v219 = type metadata accessor for Logger();
          __swift_project_value_buffer(v219, (uint64_t)&static Logger.conversationController);
          v220 = v268;
          v221 = Logger.logObject.getter();
          v222 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v221, v222))
          {
            v223 = (uint8_t *)swift_slowAlloc();
            v224 = swift_slowAlloc();
            *(_DWORD *)v223 = 136315138;
            *(_QWORD *)v272 = v224;
            v267 = v223 + 4;
            LOBYTE(v275[0]) = v220[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
            v225 = String.init<A>(reflecting:)();
            *(_QWORD *)&v275[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v225, v226, (uint64_t *)v272);
            v33 = (char *)v265;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BD004000, v221, v222, "[%s] Resetting shouldShowLastFrameDuringUPlusOneHandoff on attributes change to non square", v223, 0xCu);
            swift_arrayDestroy();
            v227 = v224;
            v34 = (_OWORD *)&metadata instantiation cache for protocol conformance descriptor for ImageNames.Roster;
            MEMORY[0x1C3B751B8](v227, -1, -1);
            MEMORY[0x1C3B751B8](v223, -1, -1);

          }
          else
          {

          }
          v48 = v268;
          v268[v218] = 0;
          v216 = "rolsViewControllerDelegate";
        }
      }
      if (v48[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo] != 1
        || (objc_msgSend(v33, sel_ratio), v229 = v228, objc_msgSend(v33, sel_ratio), v229 == v230))
      {
        outlined consume of Participant.CaptionInfo?(v261);
        goto LABEL_151;
      }
      v33 = v216;
      if (one-time initialization token for conversationController == -1)
      {
LABEL_153:
        v231 = type metadata accessor for Logger();
        __swift_project_value_buffer(v231, (uint64_t)&static Logger.conversationController);
        v232 = v48;
        v233 = Logger.logObject.getter();
        v234 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v233, v234))
        {
          v235 = (uint8_t *)swift_slowAlloc();
          v236 = swift_slowAlloc();
          v237 = v34;
          v238 = v236;
          *(_DWORD *)v235 = *((_QWORD *)v33 + 34);
          *(_QWORD *)v272 = v236;
          LOBYTE(v275[0]) = v232[*((_QWORD *)v237 + 398)];
          v239 = String.init<A>(reflecting:)();
          *(_QWORD *)&v275[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v239, v240, (uint64_t *)v272);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v233, v234, "[%s] Got non-square remote video frame, and was waiting before updating UI that oneToOne=1, updating now", v235, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v238, -1, -1);
          MEMORY[0x1C3B751B8](v235, -1, -1);

        }
        else
        {

        }
        ConversationController.isOneToOneCallCenterUpdateWaitingForNonSquareVideo.setter(0);
        ConversationController.lookupActiveConversation()();
        if (*((_QWORD *)&v275[1] + 1))
        {
          outlined init with take of Notice(v275, (uint64_t)v272);
          v241 = (uint64_t)&v232[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
          swift_beginAccess();
          outlined init with copy of RadarReporting(v241, (uint64_t)v275);
          ConversationController.callCenter(_:oneToOneModeChangedFor:)();
          outlined consume of Participant.CaptionInfo?(v261);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v275);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v272);
        }
        else
        {
          outlined consume of Participant.CaptionInfo?(v261);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v275, &demangling cache variable for type metadata for Conversation?);
        }
        goto LABEL_151;
      }
LABEL_168:
      swift_once();
      goto LABEL_153;
    }
    outlined init with copy of FeatureEligibility?(v269, v182, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v182, 1, v47) != 1)
    {
      swift_retain();
      v213(v182, v207);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v213);
      outlined destroy of AccountUpdateNotice(v182, type metadata accessor for Participant);
      goto LABEL_139;
    }
    goto LABEL_177;
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v276, (uint64_t)v275, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  if (*((_QWORD *)&v275[1] + 1) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v275, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    goto LABEL_132;
  }
  memcpy(v272, v275, sizeof(v272));
  v260 = static OS_os_log.conversationKit;
  v183 = swift_allocObject();
  *(_OWORD *)(v183 + 16) = v252;
  outlined init with copy of Participant.ScreenInfo((uint64_t)v272, (uint64_t)v275);
  v191 = specialized >> prefix<A>(_:)((uint64_t)v275, v184, v185, v186, v187, v188, v189, v190);
  v193 = v192;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v275, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  v194 = MEMORY[0x1E0DEA968];
  v195 = v264;
  *(_QWORD *)(v183 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v183 + 64) = v195;
  *(_QWORD *)(v183 + 32) = v191;
  *(_QWORD *)(v183 + 40) = v193;
  v196 = v40;
  v197 = (uint64_t)v267;
  outlined init with copy of FeatureEligibility?(v269, (uint64_t)v267, &demangling cache variable for type metadata for Participant?);
  specialized >> prefix<A>(_:)(v197);
  v199 = v198;
  v201 = v200;
  v202 = v197;
  v40 = v196;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v202, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v183 + 96) = v194;
  *(_QWORD *)(v183 + 104) = v195;
  *(_QWORD *)(v183 + 72) = v199;
  *(_QWORD *)(v183 + 80) = v201;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v203 = &v196[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo];
  swift_beginAccess();
  v204 = *(void (**)(uint64_t, unint64_t))v203;
  if (!*(_QWORD *)v203)
  {
    outlined destroy of Participant.ScreenInfo((uint64_t)v272);
    v47 = v266;
    goto LABEL_131;
  }
  v205 = v244;
  outlined init with copy of FeatureEligibility?(v269, v244, &demangling cache variable for type metadata for Participant?);
  v47 = v266;
  if (__swift_getEnumTagSinglePayload(v205, 1, v266) != 1)
  {
    swift_retain();
    v204(v205, v247);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v204);
    outlined destroy of Participant.ScreenInfo((uint64_t)v272);
    outlined destroy of AccountUpdateNotice(v205, type metadata accessor for Participant);
LABEL_131:
    v182 = (uint64_t)v258;
    goto LABEL_132;
  }
LABEL_178:
  swift_retain();
  outlined consume of Participant.CaptionInfo?(v261);
  __break(1u);
}

void ConversationController.remoteVideoClient(_:remoteScreenAttributesDidChange:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_93();
  v20 = v0;
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v7 = 7104878;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v8 = OUTLINED_FUNCTION_15();
  v9 = (_QWORD *)v8;
  *(_OWORD *)(v8 + 16) = xmmword_1BD645380;
  if (v4)
  {
    OUTLINED_FUNCTION_59(v8, &lazy cache variable for type metadata for AVCRemoteVideoClient);
    v10 = v4;
    v11 = OUTLINED_FUNCTION_204_5();
    v13 = v12;
  }
  else
  {
    v13 = 0xE300000000000000;
    v11 = 7104878;
  }
  v14 = MEMORY[0x1E0DEA968];
  v9[7] = MEMORY[0x1E0DEA968];
  v15 = lazy protocol witness table accessor for type String and conformance String();
  v16 = v15;
  v9[8] = v15;
  v9[4] = v11;
  v9[5] = v13;
  if (v2)
  {
    OUTLINED_FUNCTION_59(v15, (unint64_t *)&lazy cache variable for type metadata for VideoAttributes);
    v17 = v2;
    v7 = OUTLINED_FUNCTION_204_5();
  }
  else
  {
    v18 = 0xE300000000000000;
  }
  v9[12] = v14;
  v9[13] = v16;
  v9[9] = v7;
  v9[10] = v18;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_673_0();
  v19 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_59(v19, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_7_22();
  *(_QWORD *)(OUTLINED_FUNCTION_15() + 16) = v20;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  OUTLINED_FUNCTION_703();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_385_1();
  OUTLINED_FUNCTION_227_3();
  OUTLINED_FUNCTION_5_91();
}

uint64_t closure #1 in ConversationController.remoteVideoClient(_:remoteScreenAttributesDidChange:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unsigned __int8 *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  uint64_t v50;
  uint64_t v51;
  void (**v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  int v61;
  char *v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  _QWORD v66[29];
  _BYTE v67[64];
  _QWORD v68[10];
  uint64_t v69;
  _BYTE v70[80];
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76[8];
  _QWORD v77[10];
  _QWORD __src[15];
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  __int16 v82;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.State?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v58 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v58 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v58 - v18;
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
  {
    v62 = v16;
    v20 = a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    swift_beginAccess();
    v63 = v20;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v20, (uint64_t)v19, type metadata accessor for Participant);
    Participant.videoInfo.getter();
    outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
    outlined init with take of Any?((uint64_t)&v69, (uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (__src[0])
    {
      memcpy(v68, __src, 0x4AuLL);
      ConversationController.remoteOneToOneParticipant.getter();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
LABEL_34:
        v66[0] = 0;
        v64 = 0u;
        v65 = 0u;
        goto LABEL_35;
      }
      Participant.videoInfo.getter();
      outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for Participant);
      outlined init with take of Any?((uint64_t)v70, (uint64_t)v77, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
      if (!v77[0])
        goto LABEL_34;
      specialized Dictionary.subscript.getter();
      outlined release of LinearGradient((uint64_t)v70);
      if (!*((_QWORD *)&v65 + 1))
      {
LABEL_35:
        swift_bridgeObjectRelease();
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v64, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        static os_log_type_t.error.getter();
        return os_log(_:dso:log:type:_:)();
      }
      outlined init with take of Notice(&v64, (uint64_t)v67);
      outlined init with copy of RadarReporting((uint64_t)v67, (uint64_t)&v64);
      v28 = ConversationController.isOneToOneModeEnabled.getter();
      v29 = (unsigned __int8 *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera);
      swift_beginAccess();
      v61 = *v29;
      v30 = (uint64_t *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
      swift_beginAccess();
      v31 = *v30;
      v33 = (uint64_t)v62;
      v32 = v63;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v63, (uint64_t)v62, type metadata accessor for Participant);
      Participant.aspectRatio.getter();
      outlined destroy of AccountUpdateNotice(v33, type metadata accessor for Participant);
      AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(&v64, v28 & 1, 1, v61, v31, (uint64_t)&v71, (uint64_t)&v72, 1.0, 1.0);
      v60 = v72;
      v59 = v73;
      v34 = v74;
      v35 = v75;
      outlined init with take of AspectRatio((uint64_t)&v72, (uint64_t)&v68[5]);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v32, (uint64_t)v13, type metadata accessor for Participant);
      ConversationController.conversationIsAVLess.getter();
      v61 = v36;
      v58 = v68[0];
      if (BYTE1(v68[1]))
        v37 = 256;
      else
        v37 = 0;
      v38 = 0x10000;
      if (!BYTE2(v68[1]))
        v38 = 0;
      v39 = v37 | LOBYTE(v68[1]) | v38 | ((unint64_t)BYTE3(v68[1]) << 24);
      v40 = 0x100000000;
      if (!BYTE4(v68[1]))
        v40 = 0;
      v41 = 0x10000000000;
      if (!BYTE5(v68[1]))
        v41 = 0;
      v42 = v40 | v41;
      v43 = 0x1000000000000;
      if (!BYTE6(v68[1]))
        v43 = 0;
      v44 = v42 | v43;
      v45 = 0x100000000000000;
      if (!HIBYTE(v68[1]))
        v45 = 0;
      v46 = v39 | v44 | v45;
      if (BYTE1(v68[2]))
        v47 = 256;
      else
        v47 = 0;
      v48 = v47 | LOBYTE(v68[2]);
      __src[10] = v68[0];
      __src[11] = v46;
      if (BYTE1(v68[9]))
        v49 = 256;
      else
        v49 = 0;
      __src[12] = v48;
      __src[13] = v68[3];
      __src[14] = LOBYTE(v68[4]);
      v79 = v60;
      v80 = v59;
      v81 = v34;
      v82 = v49 | v35;
      v64 = 0uLL;
      *(_QWORD *)&v65 = 0;
      *((_QWORD *)&v65 + 1) = 1;
      bzero(v66, 0xB1uLL);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v32, (uint64_t)v10, type metadata accessor for Participant);
      v50 = Participant.captionInfo.getter();
      outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
      Participant.copresenceInfo.getter(v76);
      Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
      outlined release of Participant.CopresenceInfo?(v76);
      v51 = v63;
      outlined consume of Participant.CaptionInfo?(v50);
      swift_bridgeObjectRelease();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v64, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
      outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Participant);
      swift_beginAccess();
      outlined assign with take of Participant(v33, v51);
      swift_endAccess();
      v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1
                                                                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
      swift_beginAccess();
      v53 = *v52;
      if (*v52)
      {
        swift_endAccess();
        outlined init with copy of ConversationControlsAppLaunchButtonType(v51, v33, type metadata accessor for Participant);
        v54 = (uint64_t *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
        swift_beginAccess();
        v55 = *v54;
        v56 = v54[1];
        v57 = *((unsigned __int8 *)v54 + 16);
        swift_retain();
        v53(v33, v55, v56, v57);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v53);
        outlined destroy of AccountUpdateNotice(v33, type metadata accessor for Participant);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
        return swift_endAccess();
      }
    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1BD6441D0;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v63, (uint64_t)v4, type metadata accessor for Participant.State);
      v23 = type metadata accessor for Participant.State(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v23);
      specialized >> prefix<A>(_:)((uint64_t)v4);
      v25 = v24;
      v27 = v26;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Participant.State?);
      *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v22 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v22 + 32) = v25;
      *(_QWORD *)(v22 + 40) = v27;
      os_log(_:dso:log:type:_:)();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    return os_log(_:dso:log:type:_:)();
  }
}

void sub_1BD5754D4()
{
  void *v0;
  void *v1;
  void *v2;

}

uint64_t closure #1 in ConversationController.removeParticipant(_:at:)()
{
  OUTLINED_FUNCTION_14_2();
  return static UUID.== infix(_:_:)() & 1;
}

void closure #1 in ConversationController.scheduleResetVideoInfo(for:after:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _BYTE *v26;
  char v27;
  _QWORD *v28;
  void (*v29)(_BYTE *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  unint64_t v32;
  int v33;
  char *v34;
  _BYTE *v35;
  void *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  int v57;
  _BYTE *v58;
  char *v59;
  int v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  int v71;
  BOOL v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  __int16 v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  char isUniquelyReferenced_nonNull_native;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  _BYTE *v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  void (*v116)(_BYTE *, uint64_t, uint64_t, uint64_t);
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE v122[4];
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int v130;
  uint64_t v131;
  int v132;
  int v133;
  int v134;
  uint64_t v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  unint64_t v142;
  int v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  char *v150;
  uint64_t v151;
  _BYTE *v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE *v157;
  _QWORD *v158;
  _BYTE *v159;
  uint64_t v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  char v167;
  char v168;
  char v169;
  char v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  char v178;
  char v179;
  char v180;
  char v181;
  char v182;
  char v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  _BYTE v190[80];
  uint64_t v191[8];
  _QWORD v192[10];
  _QWORD __dst[10];
  _QWORD v194[3];
  uint64_t v195;
  uint64_t v196;
  __int128 v197;
  __int128 v198;
  __int16 v199;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v152 = &v122[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Participant(0);
  v154 = *(_QWORD *)(v6 - 8);
  v155 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v153 = &v122[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v157 = &v122[-v9];
  v156 = type metadata accessor for UUID();
  v158 = *(_QWORD **)(v156 - 8);
  MEMORY[0x1E0C80A78](v156);
  v11 = &v122[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = &v122[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v17 = &v122[-v16];
  v18 = type metadata accessor for Date();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = &v122[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v20);
  v159 = &v122[-v23];
  swift_beginAccess();
  v24 = MEMORY[0x1C3B752C0](a1 + 16);
  if (v24)
  {
    v25 = (char *)v24;
    swift_beginAccess();
    v151 = a2;
    specialized Dictionary.subscript.getter();
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for Date?);
      swift_endAccess();

      return;
    }
    v150 = v25;
    v26 = v159;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 32))(v159, v17, v18);
    swift_endAccess();
    Date.init()();
    v27 = static Date.< infix(_:_:)();
    v28 = *(_QWORD **)(v19 + 8);
    ((void (*)(_BYTE *, uint64_t))v28)(v22, v18);
    if ((v27 & 1) == 0)
    {
      ((void (*)(_BYTE *, uint64_t))v28)(v26, v18);

      return;
    }
    v29 = (void (*)(_BYTE *, uint64_t, uint64_t))v158[2];
    v30 = v156;
    v29(v11, v151, v156);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v18);
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)v15, (uint64_t)v11);
    swift_endAccess();
    v31 = v150;
    v32 = ConversationController.indexOfRemoteParticipant(with:)();
    v149 = v33;
    if ((v33 & 1) == 0)
    {
      v34 = &v31[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
      swift_beginAccess();
      if ((v32 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v35 = v157;
        if (v32 < *(_QWORD *)(*(_QWORD *)v34 + 16))
        {
          v36 = v31;
          v37 = *(_QWORD *)v34
              + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80))
              + *(_QWORD *)(v154 + 72) * v32;
          goto LABEL_11;
        }
      }
      __break(1u);
      goto LABEL_60;
    }
    v37 = (uint64_t)&v31[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
    swift_beginAccess();
    v29(v11, v37 + *(int *)(v155 + 20), v30);
    v38 = static UUID.== infix(_:_:)();
    ((void (*)(_BYTE *, uint64_t))v158[1])(v11, v30);
    v35 = v157;
    v36 = v31;
    if ((v38 & 1) == 0)
    {
      ((void (*)(_BYTE *, uint64_t))v28)(v159, v18);

      return;
    }
LABEL_11:
    outlined init with copy of ConversationControlsAppLaunchButtonType(v37, (uint64_t)v35, type metadata accessor for Participant);
    Participant.videoInfo.getter();
    outlined init with take of Any?((uint64_t)v190, (uint64_t)v192, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (!v192[0])
    {

      goto LABEL_15;
    }
    v142 = v32;
    v158 = v28;
    v148 = v18;
    memcpy(__dst, v192, 0x4AuLL);
    v39 = __dst[0];
    v40 = __dst[1];
    v189 = __dst[1];
    v140 = BYTE1(__dst[1]);
    v188 = BYTE1(__dst[1]);
    v139 = BYTE2(__dst[1]);
    v187 = BYTE2(__dst[1]);
    v143 = BYTE3(__dst[1]);
    v138 = BYTE4(__dst[1]);
    v186 = BYTE4(__dst[1]);
    v137 = BYTE5(__dst[1]);
    v185 = BYTE5(__dst[1]);
    v136 = BYTE6(__dst[1]);
    v184 = BYTE6(__dst[1]);
    v41 = HIBYTE(__dst[1]);
    v183 = HIBYTE(__dst[1]);
    v42 = __dst[2];
    v182 = __dst[2];
    v43 = BYTE1(__dst[2]);
    v181 = BYTE1(__dst[2]);
    v144 = __dst[3];
    v145 = LOBYTE(__dst[4]);
    v146 = __dst[5];
    v147 = __dst[6];
    v151 = __dst[7];
    v156 = __dst[8];
    v141 = LOBYTE(__dst[9]);
    v180 = __dst[9];
    v44 = BYTE1(__dst[9]);
    v179 = BYTE1(__dst[9]);
    outlined retain of [Participant]((uint64_t)__dst);
    Participant.avInfo.getter();
    if (v46 == 2)
    {
      outlined release of LinearGradient((uint64_t)v190);

      outlined release of LinearGradient((uint64_t)v190);
      v18 = v148;
      v28 = v158;
LABEL_15:
      outlined destroy of AccountUpdateNotice((uint64_t)v35, type metadata accessor for Participant);
      ((void (*)(_BYTE *, uint64_t))v28)(v159, v18);
      return;
    }
    v131 = v45;
    v47 = v40 & 1;
    v48 = v42 & 1;
    v49 = v43 & 1;
    v50 = __dst[1];
    v51 = BYTE1(__dst[1]);
    v52 = BYTE2(__dst[1]);
    v53 = BYTE3(__dst[1]);
    v54 = BYTE4(__dst[1]);
    v55 = BYTE5(__dst[1]);
    v56 = BYTE6(__dst[1]);
    v135 = v39;
    if ((__dst[1] & 0x100000000000000) != 0)
    {
      v57 = 0;
      v183 = 0;
      v59 = v150;
      if ((__dst[2] & 0x100) == 0)
        goto LABEL_25;
    }
    else
    {
      v57 = v41 & 1;
      v58 = v159;
      if ((__dst[2] & 0x100) == 0)
      {
        v59 = v150;
        if (*(_QWORD *)&v35[*(int *)(v155 + 28)])
          goto LABEL_54;
        v123 = LOBYTE(__dst[2]);
        v124 = BYTE6(__dst[1]);
        v125 = BYTE5(__dst[1]);
        v126 = BYTE4(__dst[1]);
        v127 = BYTE2(__dst[1]);
        v128 = BYTE1(__dst[1]);
        v129 = BYTE3(__dst[1]);
        v132 = v41 & 1;
        v133 = v43 & 1;
        v134 = v47;
        v130 = v48;
        v60 = 0;
LABEL_27:
        v61 = &v59[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
        swift_beginAccess();
        v62 = *((_QWORD *)v61 + 3);
        v63 = *((_QWORD *)v61 + 4);
        v64 = __swift_project_boxed_opaque_existential_1(v61, v62);
        v65 = *(_QWORD *)(v62 - 8);
        MEMORY[0x1E0C80A78](v64);
        v67 = &v122[-v66];
        (*(void (**)(_BYTE *))(v65 + 16))(&v122[-v66]);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v63 + 32))(&v160, v62, v63);
        (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v67, v62);
        outlined init with copy of RecentCallProviding & RecentsControllable((uint64_t)&v160, (uint64_t)v194);
        if ((v50 & 1) != 0)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v194);
        }
        else
        {
          v68 = v195;
          v69 = v196;
          __swift_project_boxed_opaque_existential_1(v194, v195);
          v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 24))(v68, v69);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v194);
          if ((v70 & 1) != 0)
          {
            v134 = 1;
            v189 = 1;
            v60 = 1;
          }
        }
        v71 = v60;
        v59 = v150;
        v72 = closure #1 in closure #1 in ConversationController.scheduleResetVideoInfo(for:after:)(&v160);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v160);
        v35 = v157;
        v58 = v159;
        if ((v123 & 1) != 0 && !v72)
        {
          v48 = 0;
          v182 = 0;
          v49 = v133;
          v47 = v134;
          v57 = v132;
          v51 = v128;
          v53 = v129;
          v54 = v126;
          v52 = v127;
          v56 = v124;
          v55 = v125;
          goto LABEL_35;
        }
        v48 = v130;
        v49 = v133;
        v47 = v134;
        v57 = v132;
        v51 = v128;
        v53 = v129;
        v54 = v126;
        v52 = v127;
        v56 = v124;
        v55 = v125;
        if (v71)
        {
LABEL_35:
          v133 = v49;
          v134 = v47;
          v73 = (v53 << 24) | ((unint64_t)(v51 & 1) << 8) | ((unint64_t)(v52 & 1) << 16) | ((unint64_t)(v54 & 1) << 32) | ((unint64_t)(v55 & 1) << 40) | ((unint64_t)(v56 & 1) << 48);
          v132 = v57;
          v74 = 0x100000000000000;
          if (!v57)
            v74 = 0;
          v75 = v73 | v47 | (unint64_t)v74;
          v130 = v48;
          if (v49)
            v76 = 256;
          else
            v76 = 0;
          if (BYTE1(__dst[9]))
            v77 = 256;
          else
            v77 = 0;
          v194[0] = __dst[0];
          v194[1] = v75;
          v194[2] = v76 | v48;
          v195 = __dst[3];
          v196 = LOBYTE(__dst[4]);
          v197 = *(_OWORD *)&__dst[5];
          v198 = *(_OWORD *)&__dst[7];
          v199 = v77 | LOBYTE(__dst[9]);
          Participant.screenInfo.getter();
          v78 = Participant.captionInfo.getter();
          Participant.copresenceInfo.getter(v191);
          v79 = v153;
          Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
          outlined release of Participant.CopresenceInfo?(v191);
          outlined consume of Participant.CaptionInfo?(v78);
          outlined release of LinearGradient((uint64_t)v190);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v160, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
          if ((v149 & 1) != 0)
          {
            LODWORD(v154) = v140 & 1;
            v97 = v139 & 1;
            v98 = v138 & 1;
            v99 = v137 & 1;
            v100 = v136 & 1;
            v101 = v44 & 1;
            v102 = v150;
            v103 = &v150[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
            swift_beginAccess();
            outlined assign with copy of Participant.State((uint64_t)v79, (uint64_t)v103, type metadata accessor for Participant);
            swift_endAccess();
            if (one-time initialization token for conversationKit != -1)
              swift_once();
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
            v104 = swift_allocObject();
            *(_OWORD *)(v104 + 16) = xmmword_1BD645380;
            v160 = v135;
            v161 = v134;
            v162 = v154;
            v163 = v97;
            v164 = v143;
            v165 = v98;
            v166 = v99;
            v167 = v100;
            v168 = v132;
            v169 = v130;
            v170 = v133;
            v171 = v144;
            v172 = v145;
            v173 = v146;
            v174 = v147;
            v175 = v151;
            v176 = v156;
            v177 = v141 & 1;
            v178 = v101;
            v105 = String.init<A>(reflecting:)();
            v107 = v106;
            v108 = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v104 + 56) = MEMORY[0x1E0DEA968];
            v109 = lazy protocol witness table accessor for type String and conformance String();
            *(_QWORD *)(v104 + 64) = v109;
            *(_QWORD *)(v104 + 32) = v105;
            *(_QWORD *)(v104 + 40) = v107;
            v110 = v152;
            outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v79, (uint64_t)v152, type metadata accessor for Participant);
            __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v155);
            specialized >> prefix<A>(_:)((uint64_t)v110);
            v112 = v111;
            v114 = v113;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v110, &demangling cache variable for type metadata for Participant?);
            *(_QWORD *)(v104 + 96) = v108;
            *(_QWORD *)(v104 + 104) = v109;
            *(_QWORD *)(v104 + 72) = v112;
            *(_QWORD *)(v104 + 80) = v114;
            static os_log_type_t.default.getter();
            os_log(_:dso:log:type:_:)();
            swift_bridgeObjectRelease();
            v115 = &v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
            swift_beginAccess();
            v116 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))v115;
            if (!*(_QWORD *)v115)
            {
              outlined destroy of AccountUpdateNotice((uint64_t)v79, type metadata accessor for Participant);
              outlined destroy of AccountUpdateNotice((uint64_t)v157, type metadata accessor for Participant);
              ((void (*)(_BYTE *, uint64_t))v158)(v159, v148);
              swift_endAccess();

              return;
            }
            swift_endAccess();
            v117 = &v102[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
            swift_beginAccess();
            v118 = *(_QWORD *)v117;
            v119 = *((_QWORD *)v117 + 1);
            v120 = v117[16];
            swift_retain();
            v116(v79, v118, v119, v120);
            outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v116);

            outlined destroy of AccountUpdateNotice((uint64_t)v79, type metadata accessor for Participant);
            v96 = v157;
            goto LABEL_53;
          }
          v34 = &v150[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
          swift_beginAccess();
          v80 = *(_QWORD *)v34;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v34 = v80;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
LABEL_45:
            v82 = v153;
            v83 = v135;
            if ((v142 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v142 < *(_QWORD *)(v80 + 16))
            {
              outlined assign with copy of Participant.State((uint64_t)v153, v80+ ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80))+ *(_QWORD *)(v154 + 72) * v142, type metadata accessor for Participant);
              swift_endAccess();
              if (one-time initialization token for conversationKit == -1)
              {
LABEL_48:
                __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                v84 = swift_allocObject();
                *(_OWORD *)(v84 + 16) = xmmword_1BD645380;
                v160 = v83;
                v161 = v189;
                v162 = v188;
                v163 = v187;
                v164 = v143;
                v165 = v186;
                v166 = v185;
                v167 = v184;
                v168 = v183;
                v169 = v182;
                v170 = v181;
                v171 = v144;
                v172 = v145;
                v173 = v146;
                v174 = v147;
                v175 = v151;
                v176 = v156;
                v177 = v180;
                v178 = v179;
                v85 = String.init<A>(reflecting:)();
                v87 = v86;
                v88 = MEMORY[0x1E0DEA968];
                *(_QWORD *)(v84 + 56) = MEMORY[0x1E0DEA968];
                v89 = lazy protocol witness table accessor for type String and conformance String();
                *(_QWORD *)(v84 + 64) = v89;
                *(_QWORD *)(v84 + 32) = v85;
                *(_QWORD *)(v84 + 40) = v87;
                v90 = v152;
                outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v82, (uint64_t)v152, type metadata accessor for Participant);
                __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v155);
                specialized >> prefix<A>(_:)((uint64_t)v90);
                v92 = v91;
                v94 = v93;
                outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v90, &demangling cache variable for type metadata for Participant?);
                *(_QWORD *)(v84 + 96) = v88;
                *(_QWORD *)(v84 + 104) = v89;
                *(_QWORD *)(v84 + 72) = v92;
                *(_QWORD *)(v84 + 80) = v94;
                static os_log_type_t.default.getter();
                os_log(_:dso:log:type:_:)();
                swift_bridgeObjectRelease();
                v95 = v150;
                ConversationController.didUpdateVisibleParticipant(_:)((uint64_t)v82);

                outlined destroy of AccountUpdateNotice((uint64_t)v82, type metadata accessor for Participant);
                v96 = v157;
LABEL_53:
                outlined destroy of AccountUpdateNotice((uint64_t)v96, type metadata accessor for Participant);
                v121 = v159;
LABEL_55:
                ((void (*)(_BYTE *, uint64_t))v158)(v121, v148);
                return;
              }
LABEL_63:
              swift_once();
              goto LABEL_48;
            }
            __break(1u);
            goto LABEL_63;
          }
LABEL_60:
          v80 = specialized _ArrayBuffer._consumeAndCreateNew()();
          *(_QWORD *)v34 = v80;
          goto LABEL_45;
        }
LABEL_54:
        outlined release of LinearGradient((uint64_t)v190);
        swift_bridgeObjectRelease();

        outlined destroy of AccountUpdateNotice((uint64_t)v35, type metadata accessor for Participant);
        v121 = v58;
        goto LABEL_55;
      }
      v59 = v150;
    }
    v49 = 0;
    v181 = 0;
LABEL_25:
    if (*(_QWORD *)&v35[*(int *)(v155 + 28)])
      goto LABEL_35;
    v123 = LOBYTE(__dst[2]);
    v124 = BYTE6(__dst[1]);
    v125 = BYTE5(__dst[1]);
    v126 = BYTE4(__dst[1]);
    v127 = BYTE2(__dst[1]);
    v128 = BYTE1(__dst[1]);
    v129 = BYTE3(__dst[1]);
    v132 = v57;
    v133 = v49;
    v134 = v47;
    v130 = v48;
    v60 = 1;
    goto LABEL_27;
  }
}

BOOL closure #1 in closure #1 in ConversationController.scheduleResetVideoInfo(for:after:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  char v5;
  double v6;
  double v7;

  v1 = a1[3];
  v2 = a1[5];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  *(double *)&v3 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2));
  if ((v5 & 1) != 0)
    return 0;
  v6 = *(double *)&v3;
  v7 = v4;
  return (ConversationController.isOneToOneModeEnabled.getter() & 1) == 0 && v6 != v7;
}

void ConversationController.participantCaptionsProvider(_:didEnableCaptions:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  if (*v1)
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    OUTLINED_FUNCTION_519_1();
    OUTLINED_FUNCTION_11_14(v2);
  }
  OUTLINED_FUNCTION_9_0();
}

void ConversationController.participantCaptionsProvider(_:didUpdateCaptions:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __n128 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (**v61)(uint64_t);
  void (*v62)(uint64_t);
  __n128 *v63;
  uint64_t (*v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;
  void (**v67)(uint64_t);
  void (*v68)(uint64_t);
  uint64_t v69;
  __n128 *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91[9];

  OUTLINED_FUNCTION_93();
  v83 = v5;
  v84 = v6;
  v82 = v7;
  v86 = v8;
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v72 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationController.ParticipantInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v19);
  v20 = OUTLINED_FUNCTION_58_5();
  v87 = type metadata accessor for ConversationController.ParticipantInfo(v20);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_508_0();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_183();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_83_17();
  if (!v26)
    goto LABEL_23;
  v72 = v4;
  v73 = v1;
  v85 = v0;
  v74 = v25;
  v75 = v14;
  v77 = v13;
  v78 = v24;
  v79 = v18;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v81 = static OS_os_log.conversationKit;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v28 = OUTLINED_FUNCTION_15();
  v80 = xmmword_1BD6441D0;
  *(_OWORD *)(v28 + 16) = xmmword_1BD6441D0;
  v29 = v86;
  v88 = v10;
  v89 = v86;
  OUTLINED_FUNCTION_491_0();
  v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantCaptionsProvider);
  v30 = String.init<A>(reflecting:)();
  v32 = v31;
  v33 = OUTLINED_FUNCTION_331_4(MEMORY[0x1E0DEA968]);
  *(_QWORD *)(v28 + 64) = v33;
  *(_QWORD *)(v28 + 32) = v30;
  *(_QWORD *)(v28 + 40) = v32;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_224_3();
  v34 = v29;
  swift_bridgeObjectRelease();
  ConversationController.participantInfo(for:)(v10, v29, v3);
  v35 = OUTLINED_FUNCTION_312();
  v37 = OUTLINED_FUNCTION_69_0(v35, v36, v87);
  if (v26)
  {
    OUTLINED_FUNCTION_219(v37, &demangling cache variable for type metadata for ConversationController.ParticipantInfo?);
    static os_log_type_t.error.getter();
    v38 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_666_0(v38);
    v88 = v10;
    v89 = v29;
    OUTLINED_FUNCTION_491_0();
    v39 = String.init<A>(reflecting:)();
    v38[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v38[4].n128_u64[0] = v33;
    v38[2].n128_u64[0] = v39;
    v38[2].n128_u64[1] = v40;
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_53();
LABEL_23:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  v86 = v27;
  v81 = v33;
  v41 = v78;
  OUTLINED_FUNCTION_153_0(v3, v78);
  OUTLINED_FUNCTION_95_1(v41, v2);
  v42 = (uint64_t)v79;
  OUTLINED_FUNCTION_655(v2, v43, type metadata accessor for Participant);
  Participant.avInfo.getter();
  if (v44 == 2)
  {
    static os_log_type_t.error.getter();
    v45 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_666_0(v45);
    OUTLINED_FUNCTION_111(v42, (uint64_t)v77);
    OUTLINED_FUNCTION_466_0();
    OUTLINED_FUNCTION_637();
    OUTLINED_FUNCTION_109_0(v46, &demangling cache variable for type metadata for Participant?);
    v47 = v81;
    v45[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v45[4].n128_u64[0] = v47;
    v45[2].n128_u64[0] = v27;
    v45[2].n128_u64[1] = v32;
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_40_58(v42);
    v48 = type metadata accessor for ConversationController.ParticipantInfo;
    v49 = v41;
LABEL_22:
    outlined destroy of AccountUpdateNotice(v49, v48);
    goto LABEL_23;
  }
  Participant.videoInfo.getter();
  Participant.screenInfo.getter();
  Participant.captionInfo.getter();
  OUTLINED_FUNCTION_423_0();
  Participant.CaptionInfo.with(history:)();
  outlined consume of Participant.CaptionInfo?(v34);
  Participant.copresenceInfo.getter(v91);
  v50 = v73;
  Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
  outlined release of Participant.CopresenceInfo?(v91);
  v51 = v78;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_372_3();
  outlined release of LinearGradient((uint64_t)&v90);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v88, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
  v52 = v74;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v51, v74, type metadata accessor for ConversationController.ParticipantInfo);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v65 = v85;
    v66 = v85 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    OUTLINED_FUNCTION_2_0();
    outlined assign with copy of Participant.State(v50, v66, type metadata accessor for Participant);
    swift_endAccess();
    v67 = (void (**)(uint64_t))(v65
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
    OUTLINED_FUNCTION_1();
    v68 = *v67;
    v69 = (uint64_t)v77;
    if (*v67)
    {
      partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v68(v50);
      OUTLINED_FUNCTION_11_14((uint64_t)v68);
    }
    v70 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_666_0(v70);
    OUTLINED_FUNCTION_95_1(v50, v69);
    OUTLINED_FUNCTION_466_0();
    OUTLINED_FUNCTION_109_0(v71, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_515_0();
    OUTLINED_FUNCTION_224_3();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_46(v50);
    OUTLINED_FUNCTION_46((uint64_t)v79);
    v64 = type metadata accessor for ConversationController.ParticipantInfo;
    OUTLINED_FUNCTION_46(v51);
    v49 = v52;
    goto LABEL_21;
  }
  v53 = *(_QWORD *)(v52
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int))
                           + 48));
  v54 = (uint64_t *)(v85 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_2_0();
  v55 = *v54;
  v56 = OUTLINED_FUNCTION_83_8();
  *v54 = v55;
  v57 = (uint64_t)v77;
  if ((v56 & 1) == 0)
  {
    v55 = OUTLINED_FUNCTION_575_0();
    *v54 = v55;
  }
  v58 = (uint64_t)v79;
  if ((v53 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v53 < *(_QWORD *)(v55 + 16))
  {
    OUTLINED_FUNCTION_30_36();
    outlined assign with copy of Participant.State(v50, v55 + v59 + *(_QWORD *)(v60 + 72) * v53, type metadata accessor for Participant);
    swift_endAccess();
    v61 = (void (**)(uint64_t))(v85
                                        + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
    OUTLINED_FUNCTION_1();
    v62 = *v61;
    if (*v61)
    {
      partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v62(v50);
      OUTLINED_FUNCTION_11_14((uint64_t)v62);
    }
    v63 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_666_0(v63);
    v64 = type metadata accessor for Participant;
    OUTLINED_FUNCTION_95_1(v50, v57);
    __swift_storeEnumTagSinglePayload(v57, 0, 1, v75);
    specialized >> prefix<A>(_:)(v57);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v57, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_515_0();
    OUTLINED_FUNCTION_224_3();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_46(v50);
    OUTLINED_FUNCTION_46(v58);
    outlined destroy of AccountUpdateNotice(v51, type metadata accessor for ConversationController.ParticipantInfo);
    v49 = v74;
LABEL_21:
    v48 = v64;
    goto LABEL_22;
  }
  __break(1u);
}

uint64_t ConversationController.participantInfo(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjectType;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = v3;
  v8 = type metadata accessor for Participant(0);
  v33 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v32 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  v13 = v12;
  v14 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  swift_beginAccess();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v14, (uint64_t)v10, type metadata accessor for Participant);
  Participant.captionsProvider.getter();
  v16 = v15;
  v18 = v17;
  outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
  if (!v16
    || (v19 = swift_getObjectType(),
        v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v19, v18),
        v22 = v21,
        swift_unknownObjectRelease(),
        (v22 & 1) != 0))
  {
    if ((v13 & 1) != 0)
    {
LABEL_5:
      outlined init with copy of ConversationControlsAppLaunchButtonType(v14, a3, type metadata accessor for Participant);
      v23 = type metadata accessor for ConversationController.ParticipantInfo(0);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      v29 = a3;
      v30 = 0;
      v31 = v23;
      return __swift_storeEnumTagSinglePayload(v29, v30, 1, v31);
    }
  }
  else if ((v13 & 1) == 0 && v20 == v32)
  {
    goto LABEL_5;
  }
  v24 = ConversationController.remoteParticipantIndex(for:)(a1, a2);
  if ((v25 & 1) != 0)
  {
    v31 = type metadata accessor for ConversationController.ParticipantInfo(0);
    v29 = a3;
    v30 = 1;
    return __swift_storeEnumTagSinglePayload(v29, v30, 1, v31);
  }
  v26 = v24;
  v27 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  result = swift_beginAccess();
  if ((v26 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v26 < *(_QWORD *)(*(_QWORD *)v27 + 16))
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(*(_QWORD *)v27+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v26, a3, type metadata accessor for Participant);
    *(_QWORD *)(a3
              + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int))
                       + 48)) = v26;
    v23 = type metadata accessor for ConversationController.ParticipantInfo(0);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t ConversationController.remoteParticipantIndex(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[42];

  v30 = a1;
  v31 = a2;
  v3 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v7 = *v6;
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
    return 0;
  v9 = type metadata accessor for Participant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = v7 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v32 = *(_QWORD *)(v10 + 72);
  v33 = v9;
  v28 = v7;
  swift_bridgeObjectRetain();
  v12 = 0;
  v29 = v8;
  do
  {
    if (*(_QWORD *)(v11 + *(int *)(v33 + 28)))
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v11, (uint64_t)v5, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v14 = &v5[*(int *)(v13 + 48)];
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v5[*(int *)(v13 + 64)], *(_QWORD *)&v5[*(int *)(v13 + 64) + 8]);
        memcpy(v34, v14, sizeof(v34));
        v15 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v5, v15);
        v16 = v34[39];
        v17 = v34[40];
        outlined copy of Participant.CaptionInfo?(v34[39]);
        outlined destroy of Participant.MediaInfo((uint64_t)v34);
        if (v16)
        {
          v18 = v3;
          swift_bridgeObjectRelease();
          ObjectType = swift_getObjectType();
          v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(ObjectType, v17);
          v22 = v21;
          v23 = swift_getObjectType();
          v24 = (*(uint64_t (**)(uint64_t))(v31 + 8))(v23);
          v26 = v25;
          swift_unknownObjectRelease();
          if ((v22 & 1) != 0)
          {
            v3 = v18;
            v8 = v29;
            if ((v26 & 1) != 0)
              goto LABEL_14;
          }
          else
          {
            v3 = v18;
            v8 = v29;
            if ((v26 & 1) == 0 && v20 == v24)
              goto LABEL_14;
          }
        }
      }
      else
      {
        outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for Participant.State);
      }
    }
    ++v12;
    v11 += v32;
  }
  while (v8 != v12);
  v12 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v12;
}

void ConversationController.idsCapabilitiesChecker(_:didUpdate:)(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16[3];

  if (one-time initialization token for conversationController != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_182_3(v5, (uint64_t)&static Logger.conversationController);
  OUTLINED_FUNCTION_29_1();
  Logger.logObject.getter();
  v6 = OUTLINED_FUNCTION_251_0();
  if (OUTLINED_FUNCTION_11_84(v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    v16[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136315138;
    (*(void (**)(void))(*(_QWORD *)a1 + 120))();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UUID : IDSCapabilitiesChecker.Capabilities]);
    v8 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v16);
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v2, v3, "Received IDS participant capabilities: %s", v7);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_23_0();
  v10 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  ConversationController.isRemoteParticipantEligibleForVideoMessaging.getter();
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x1C0))(v11 & 1);
  v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  OUTLINED_FUNCTION_1();
  v13 = *v12;
  if (*v12)
  {
    v14 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 120);
    v15 = OUTLINED_FUNCTION_1_28();
    v14(v15);
    OUTLINED_FUNCTION_688();
    OUTLINED_FUNCTION_14_60(v13);
    OUTLINED_FUNCTION_13_3();
  }
  OUTLINED_FUNCTION_40_7();
}

void ConversationController.updateVideoMessagingIDSStatusForParticipant(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  os_log_type_t v20;
  _WORD *v21;
  void *v22;
  NSObject *v23;
  os_log_type_t v24;
  const char *v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;

  v2 = v1;
  v4 = OUTLINED_FUNCTION_14_2();
  v5 = *(void **)(a1 + *(int *)(v4 + 28));
  if (!v5)
    goto LABEL_18;
  v6 = v4;
  v7 = one-time initialization token for videoMessaging;
  v8 = v5;
  if (v7 != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_17_2();
  v10 = __swift_project_value_buffer(v9, (uint64_t)&static Logger.videoMessaging);
  v11 = v8;
  Logger.logObject.getter();
  v12 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)OUTLINED_FUNCTION_105();
    v14 = OUTLINED_FUNCTION_105();
    v34 = v14;
    *(_DWORD *)v13 = 136315138;
    OUTLINED_FUNCTION_59(v14, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    v15 = v11;
    v16 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v10, v12, "Checking IDS capabilities for %s for video messaging", v13);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker);
  v19 = (*(uint64_t (**)(id))(*(_QWORD *)v18 + 224))(v11);
  if (v19 == 2)
  {
    Logger.logObject.getter();
    v30 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v30))
    {
      v31 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v31 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v10, (os_log_type_t)v10, "Already have a pending IDS query for video messaging", v31);
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_17;
  }
  if (v19 != 3)
  {
    Logger.logObject.getter();
    v32 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v32))
    {
      v33 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v33 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v10, (os_log_type_t)v10, "Already have a completed IDS query for video messaging, using cached result", v33);
      OUTLINED_FUNCTION_60();
    }

    (*(void (**)(unint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v2
                                                                                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController))
                                             + 0x1C0))((v19 >> 40) & 1);
LABEL_17:

    goto LABEL_18;
  }
  Logger.logObject.getter();
  v20 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v20))
  {
    v21 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v21);
    OUTLINED_FUNCTION_534();
    OUTLINED_FUNCTION_130(v22, v23, v24, v25, v26);
    OUTLINED_FUNCTION_60();
  }

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  v27 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v28 = (v27 + 32) & ~v27;
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1BD6441D0;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v29 + v28, type metadata accessor for Participant);
  (*(void (**)(uint64_t))(*(_QWORD *)v18 + 232))(v29);

  OUTLINED_FUNCTION_2_1();
LABEL_18:
  OUTLINED_FUNCTION_80_10();
}

void ConversationController.handleCameraZoomBecameAvailable(_:)()
{
  ConversationController.handleCameraZoomBecameAvailable(_:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_829();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_315_0();
  os_log(_:dso:log:type:_:)();
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  if (*v1)
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    OUTLINED_FUNCTION_519_1();
    OUTLINED_FUNCTION_11_14(v2);
  }
  OUTLINED_FUNCTION_2_3();
}

void ConversationController.handleCameraZoomBecameUnavailable(_:)()
{
  ConversationController.handleCameraZoomBecameAvailable(_:)();
}

void @objc ConversationController.handleCameraZoomBecameAvailable(_:)()
{
  void (*v0)(void);
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  OUTLINED_FUNCTION_511_1();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_307_3();
  v4 = v1;
  v0();

  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_91();
}

void ConversationController.handlelocalCameraUIDDidChange(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  Swift::Bool IsUsingIPadExternal;
  _BYTE v14[24];
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;

  v2 = v0;
  if (!Notification.userInfo.getter())
  {
    v20 = 0u;
    v21 = 0u;
    goto LABEL_10;
  }
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v16 = v3;
  AnyHashable.init<A>(_:)();
  specialized Dictionary.subscript.getter();
  OUTLINED_FUNCTION_27();
  outlined destroy of AnyHashable((uint64_t)v17);
  if (!*((_QWORD *)&v21 + 1))
  {
LABEL_10:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v20, &demangling cache variable for type metadata for Any?);
    goto LABEL_11;
  }
  if ((OUTLINED_FUNCTION_97() & 1) != 0)
  {
    v1 = v17[1];
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
    OUTLINED_FUNCTION_1();
    if (*v4)
    {
      swift_retain();
      OUTLINED_FUNCTION_803();
      OUTLINED_FUNCTION_2_125();
    }
    OUTLINED_FUNCTION_2_1();
  }
LABEL_11:
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_378_3();
  v5 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v14[-v7];
  OUTLINED_FUNCTION_120_7(v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  OUTLINED_FUNCTION_107_12();
  OUTLINED_FUNCTION_101((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  v10 = v18;
  v11 = v19;
  OUTLINED_FUNCTION_80_20(v17, v18);
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_93_4(*v12, v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48));
  OUTLINED_FUNCTION_100_2();
  IsUsingIPadExternal = ConversationController.updateIsUsingIPadExternalCamera()();
  ConversationController.isUsingIPadExternalCamera.setter(IsUsingIPadExternal);
  OUTLINED_FUNCTION_91();
}

uint64_t ConversationController.handleCameraListDidChange(_:)()
{
  uint64_t v0;
  Swift::Bool IsUsingIPadExternal;
  void (**v2)(uint64_t);
  uint64_t result;
  void (*v4)(uint64_t);
  uint64_t v5;

  IsUsingIPadExternal = ConversationController.updateIsUsingIPadExternalCamera()();
  ConversationController.isUsingIPadExternalCamera.setter(IsUsingIPadExternal);
  v2 = (void (**)(uint64_t))(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  result = swift_beginAccess();
  v4 = *v2;
  if (*v2)
  {
    v5 = swift_retain();
    v4(v5);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v4);
  }
  return result;
}

void @objc ConversationController.handlelocalCameraUIDDidChange(_:)()
{
  void (*v0)(uint64_t);
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;

  OUTLINED_FUNCTION_511_1();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_307_3();
  v5 = v2;
  v6 = OUTLINED_FUNCTION_474();
  v0(v6);

  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_91();
}

void ConversationController.handleSystemPreferredCameraChanged(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _BYTE v28[24];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction);
  swift_beginAccess();
  if (*v2 != 1)
  {
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationController);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v6, v7))
      goto LABEL_17;
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = "Ignoring change to systemPreferredCamera because there's no pending start camera action";
    goto LABEL_16;
  }
  v3 = objc_msgSend((id)objc_opt_self(), sel_systemPreferredCamera);

  if (!v3)
  {
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationController);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v6, v7))
      goto LABEL_17;
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = "Ignoring change to systemPreferredCamera because it's nil";
    goto LABEL_16;
  }
  ConversationController.didDeferStartCameraAction.setter(0);
  v4 = v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  swift_beginAccess();
  if ((*(char *)(v4 + 16) & 0x80000000) == 0)
  {
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationController);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v6, v7))
      goto LABEL_17;
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = "Ignoring change to systemPreferredCamera due to broadcastingState";
LABEL_16:
    _os_log_impl(&dword_1BD004000, v6, v7, v9, v8, 2u);
    MEMORY[0x1C3B751B8](v8, -1, -1);
LABEL_17:

    return;
  }
  v12 = *(unsigned __int8 *)(v4 + 1);
  if (one-time initialization token for conversationController != -1)
    swift_once();
  v13 = type metadata accessor for Logger();
  __swift_project_value_buffer(v13, (uint64_t)&static Logger.conversationController);
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1BD004000, v14, v15, "Starting camera that was deferred due to systemPreferredCamera initialization", v16, 2u);
    MEMORY[0x1C3B751B8](v16, -1, -1);
  }

  v17 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
  swift_beginAccess();
  v18 = v17[3];
  v19 = v17[4];
  v20 = __swift_project_boxed_opaque_existential_1(v17, v18);
  v21 = *(_QWORD *)(v18 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = &v28[-v23];
  (*(void (**)(_BYTE *, __n128))(v21 + 16))(&v28[-v23], v22);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v19 + 32))(v29, v18, v19);
  (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v24, v18);
  v25 = v30;
  v26 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  v27 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
  swift_beginAccess();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v26 + 32))(v12, *v27, 1, v25, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

void ConversationController.handleAudioUplinkChange(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  v4 = Notification.object.getter();
  if (v15)
  {
    OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if ((OUTLINED_FUNCTION_97() & 1) != 0)
    {
      OUTLINED_FUNCTION_1();
      v5 = v16;
      OUTLINED_FUNCTION_462();
      v6 = (void *)OUTLINED_FUNCTION_348();
      v8 = specialized == infix(_:_:)(v6, v7);

      v9 = OUTLINED_FUNCTION_372_3();
      if ((v8 & 1) != 0)
      {
        OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        v14 = (void *)OUTLINED_FUNCTION_7_22();
        v10 = OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_475(v10);
        swift_unknownObjectWeakInit();
        v11 = OUTLINED_FUNCTION_15();
        *(_QWORD *)(v11 + 16) = v8;
        *(_QWORD *)(v11 + 24) = v5;
        OUTLINED_FUNCTION_207((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
        v13 = v5;
        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_269();
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
        OUTLINED_FUNCTION_31_11();
        OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        OUTLINED_FUNCTION_132_10();
        v12 = OUTLINED_FUNCTION_412_2();
        MEMORY[0x1C3B7361C](v12);
        OUTLINED_FUNCTION_480_0();

        OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
        OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
      }
      else
      {

      }
    }
  }
  else
  {
    OUTLINED_FUNCTION_484_0(v4, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationController.handleAudioUplinkChange(_:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    swift_beginAccess();
    objc_msgSend(a2, sel_isUplinkMuted);
    ConversationController.broadcastingState.setter();

  }
}

void ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(uint64_t a1)
{
  ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(a1, MEMORY[0x1E0DBD7D8], &OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
}

void ConversationController.handleCameraCinematicFramingEnabledChanged(_:)(uint64_t a1)
{
  ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(a1, MEMORY[0x1E0DBD7E0], &OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
}

void ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(uint64_t);
  void (*v8)(uint64_t);
  _BYTE v9[40];
  __int128 v10;
  __int128 v11;

  v5 = v3;
  if (!Notification.userInfo.getter())
  {
    v10 = 0u;
    v11 = 0u;
    goto LABEL_7;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  specialized Dictionary.subscript.getter();
  OUTLINED_FUNCTION_27();
  outlined destroy of AnyHashable((uint64_t)v9);
  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_7:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v10, &demangling cache variable for type metadata for Any?);
    goto LABEL_8;
  }
  if ((OUTLINED_FUNCTION_97() & 1) != 0)
  {
    v6 = v9[0];
    v7 = (void (**)(uint64_t))(v5 + *a3);
    OUTLINED_FUNCTION_1();
    v8 = *v7;
    if (*v7)
    {
      OUTLINED_FUNCTION_11_1();
      v8(v6);
      OUTLINED_FUNCTION_496_0();
    }
  }
LABEL_8:
  OUTLINED_FUNCTION_80_10();
}

void ConversationController.handleCameraReactionEffectsEnabledChanged(_:)(uint64_t a1)
{
  ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(a1, MEMORY[0x1E0DBD778], &OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
}

void ConversationController.handleCameraStudioLightEnabledChanged(_:)(uint64_t a1)
{
  ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(a1, MEMORY[0x1E0DBD7E8], &OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
}

void ConversationController.handleCameraBlurEnabledChanged(_:)(uint64_t a1)
{
  ConversationController.handleCameraCinematicFramingAvailabilityChanged(_:)(a1, MEMORY[0x1E0DBD7D0], &OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
}

void ConversationController.handleLocalPreviewChanged(_:)()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *);
  void (*v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD v20[4];
  void (*v21)();
  uint64_t v22;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v19 = static OS_os_log.conversationKit;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v4 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v4 + 16) = xmmword_1BD6441D0;
  v5 = &v0[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
  OUTLINED_FUNCTION_1();
  v6 = *((_QWORD *)v5 + 3);
  OUTLINED_FUNCTION_435_0(v5);
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_54_42();
  MEMORY[0x1E0C80A78](v8);
  v10 = OUTLINED_FUNCTION_200_4(v9, v19);
  v11(v10);
  OUTLINED_FUNCTION_464_1();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v12 = v21;
  OUTLINED_FUNCTION_435_0(v20);
  OUTLINED_FUNCTION_21_16(*((uint64_t (**)(uint64_t, uint64_t))v12 + 3));
  v13 = String.init<A>(reflecting:)();
  v15 = v14;
  OUTLINED_FUNCTION_792();
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v4 + 32) = v13;
  *(_QWORD *)(v4 + 40) = v15;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_673_0();
  v16 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_59(v16, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_7_22();
  v17 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v17 + 16) = v1;
  v21 = partial apply for closure #1 in ConversationController.handleLocalPreviewChanged(_:);
  v22 = v17;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 1107296256;
  OUTLINED_FUNCTION_207((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v18 = v1;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  v20[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_104_13();
  OUTLINED_FUNCTION_5_91();
}

void closure #1 in ConversationController.handleLocalPreviewChanged(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 8);
  ObjectType = swift_getObjectType();
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 184);
  swift_unknownObjectRetain();
  LODWORD(v2) = v4(ObjectType, v2);
  swift_unknownObjectRelease();
  if ((_DWORD)v2 == 5
    || (v5 = *(_QWORD *)(v1 + 8),
        v6 = swift_getObjectType(),
        v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 184),
        swift_unknownObjectRetain(),
        LODWORD(v5) = v7(v6, v5),
        swift_unknownObjectRelease(),
        (_DWORD)v5 == 6))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v9 = String.init<A>(reflecting:)();
    v11 = v10;
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v8 + 32) = v9;
    *(_QWORD *)(v8 + 40) = v11;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
  }
}

void ConversationController.handleLocalVideoPreviewFirstFrameArrived(_:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_93();
  v8 = *(_QWORD *)(OUTLINED_FUNCTION_285_0() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_132_3();
  v4 = OUTLINED_FUNCTION_673_0();
  OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v5 = (void *)OUTLINED_FUNCTION_7_22();
  *(_QWORD *)(OUTLINED_FUNCTION_15() + 16) = v0;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v6 = v0;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_104_13();
  v7 = OUTLINED_FUNCTION_673();
  MEMORY[0x1C3B7361C](v7);
  OUTLINED_FUNCTION_465_0();

  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationController.handleLocalVideoPreviewFirstFrameArrived(_:)(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t (*v28)(void);
  unsigned __int8 v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  _BOOL4 v44;
  char *v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int16 v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  char *v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char v113;
  _QWORD *v114;
  void (**v115)(char *, uint64_t);
  void (*v116)(char *, uint64_t);
  void (**v117)(char *, uint64_t);
  void (*v118)(char *, uint64_t);
  char *v119;
  void (*v120)(uint64_t);
  char *v121;
  void (*v122)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  void (*v128)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  _QWORD *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161[35];
  _BYTE v162[80];
  uint64_t v163[8];
  uint64_t v164;
  unsigned __int8 v165;
  unsigned __int8 v166;
  unsigned __int8 v167;
  unsigned __int8 v168;
  unsigned __int8 v169;
  unsigned __int8 v170;
  unsigned __int8 v171;
  unsigned __int8 v172;
  unsigned __int8 v173;
  unsigned __int8 v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unsigned __int8 v180;
  unsigned __int8 v181;
  unsigned __int8 v182;
  unsigned __int8 v183;
  unsigned __int8 v184;
  unsigned __int8 v185;
  unsigned __int8 v186;
  unsigned __int8 v187;
  unsigned __int8 v188;
  unsigned __int8 v189;
  unsigned __int8 v190;
  unsigned __int8 v191;
  unsigned __int8 v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  __int16 v202;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.State?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v132 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v157 - 8);
  MEMORY[0x1E0C80A78](v157);
  v156 = (char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for Participant(0);
  v152 = *(_QWORD **)(v155 - 8);
  MEMORY[0x1E0C80A78](v155);
  v8 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v154 = (uint64_t)&v132 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v132 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v132 - v15;
  v17 = (uint64_t)&a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
  swift_beginAccess();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v17, (uint64_t)v16, type metadata accessor for Participant);
  Participant.isActive.getter();
  v19 = v18;
  outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
  if ((v19 & 1) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_22;
    goto LABEL_73;
  }
  outlined init with copy of ConversationControlsAppLaunchButtonType(v17, (uint64_t)v13, type metadata accessor for Participant);
  Participant.videoInfo.getter();
  outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Participant);
  outlined init with take of Any?((uint64_t)v162, (uint64_t)&v164, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v164)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_22:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1BD6441D0;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v17, (uint64_t)v4, type metadata accessor for Participant.State);
      v50 = type metadata accessor for Participant.State(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v50);
      specialized >> prefix<A>(_:)((uint64_t)v4);
      v52 = v51;
      v54 = v53;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Participant.State?);
      *(_QWORD *)(v49 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v49 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v49 + 32) = v52;
      *(_QWORD *)(v49 + 40) = v54;
      goto LABEL_27;
    }
LABEL_73:
    swift_once();
    goto LABEL_22;
  }
  v151 = v164;
  v192 = v165;
  v191 = v166;
  v190 = v167;
  v145 = v168;
  v189 = v169;
  v188 = v170;
  v187 = v171;
  v186 = v172;
  v185 = v173;
  v184 = v174;
  v149 = (char *)v177;
  v150 = v176;
  v147 = v175;
  v148 = v178;
  v183 = v180;
  v182 = v181;
  v153 = a1;
  v20 = &a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  v146 = v179;
  swift_beginAccess();
  v21 = *((_QWORD *)v20 + 1);
  ObjectType = swift_getObjectType();
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 184);
  outlined retain of [Participant]((uint64_t)v162);
  swift_unknownObjectRetain();
  LODWORD(v21) = v23(ObjectType, v21);
  v24 = swift_unknownObjectRelease();
  if ((_DWORD)v21 == 5
    || (v25 = *((_QWORD *)v20 + 1),
        v26 = swift_getObjectType(),
        v27 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 184),
        swift_unknownObjectRetain(),
        LODWORD(v25) = v27(v26, v25),
        v24 = swift_unknownObjectRelease(),
        (_DWORD)v25 == 6))
  {
    v28 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)&v153[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController])
                              + 0xF0);
    v29 = ((uint64_t (*)(uint64_t))v28)(v24);
    if (VideoMessageController.State.rawValue.getter(v29) == 0x7964616552746F6ELL && v30 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
        goto LABEL_10;
    }
    outlined release of LinearGradient((uint64_t)v162);
    outlined release of LinearGradient((uint64_t)v162);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1BD645380;
    v158 = *(_OWORD *)v20;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v56 = String.init<A>(reflecting:)();
    v58 = v57;
    v59 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v55 + 56) = MEMORY[0x1E0DEA968];
    v60 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v55 + 64) = v60;
    *(_QWORD *)(v55 + 32) = v56;
    *(_QWORD *)(v55 + 40) = v58;
    LOBYTE(v158) = v28();
    v61 = String.init<A>(reflecting:)();
    *(_QWORD *)(v55 + 96) = v59;
    *(_QWORD *)(v55 + 104) = v60;
    *(_QWORD *)(v55 + 72) = v61;
    *(_QWORD *)(v55 + 80) = v62;
LABEL_27:
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_10:
  v33 = OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame;
  if ((v153[OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame] & 1) != 0
    || (v34 = &v153[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame],
        swift_beginAccess(),
        (v35 = *(uint64_t (**)(uint64_t))v34) != 0)
    && (v36 = swift_retain(),
        v37 = v35(v36),
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v35),
        (v37 & 1) != 0))
  {
    outlined release of LinearGradient((uint64_t)v162);
    outlined release of LinearGradient((uint64_t)v162);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v38 = type metadata accessor for Logger();
    __swift_project_value_buffer(v38, (uint64_t)&static Logger.conversationKit);
    v39 = v153;
    v40 = v153;
    v41 = Logger.logObject.getter();
    v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      *(_DWORD *)v43 = 67109376;
      v44 = 1;
      LODWORD(v158) = (v39[v33] & 1) == 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v43 + 8) = 1024;
      v45 = &v40[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame];
      swift_beginAccess();
      v46 = *(uint64_t (**)(uint64_t))v45;
      if (*(_QWORD *)v45)
      {
        v47 = swift_retain();
        v48 = v46(v47);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v46);
        v44 = (v48 & 1) == 0;
      }
      LODWORD(v193) = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl(&dword_1BD004000, v41, v42, "Pausing on local video and clearing state,\n!self.pauseOnFirstFrame: %{BOOL}d &&\n!(self.shouldPauseOnFirstLocalVideoFrame?() ?? false : %{BOOL}d", (uint8_t *)v43, 0xEu);
      MEMORY[0x1C3B751B8](v43, -1, -1);
    }
    else
    {

      v41 = v40;
    }

    ConversationController.pauseLocalVideoAndClearState()();
  }
  else
  {
    v134 = v191;
    v135 = v190;
    v136 = v189;
    v138 = v188;
    v140 = v187;
    v141 = v186;
    v143 = v185;
    v144 = v192;
    v142 = v184;
    v63 = v153;
    if ((v192 & 1) == 0)
    {
      v64 = v156;
      v65 = v157;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v156, v17 + *(int *)(v155 + 20), v157);
      ConversationController.scheduleResetVideoInfo(for:after:)();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v64, v65);
    }
    v139 = v183;
    v137 = v182;
    v66 = &v63[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    swift_beginAccess();
    v67 = *((_QWORD *)v66 + 3);
    v68 = *((_QWORD *)v66 + 4);
    v132 = v66;
    v69 = __swift_project_boxed_opaque_existential_1(v66, v67);
    v70 = *(_QWORD *)(v67 - 8);
    v71 = MEMORY[0x1E0C80A78](v69);
    v73 = (char *)&v132 - v72;
    (*(void (**)(char *, __n128))(v70 + 16))((char *)&v132 - v72, v71);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v68 + 32))(&v158, v67, v68);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v73, v67);
    v74 = v160;
    v75 = v161[0];
    __swift_project_boxed_opaque_existential_1(&v158, v160);
    v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 8))(v74, v75);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v158);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v17, v154, type metadata accessor for Participant);
    ConversationController.conversationIsAVLess.getter();
    v133 = v77;
    if (v134)
      v78 = 256;
    else
      v78 = 0;
    v79 = 0x10000;
    if (!v135)
      v79 = 0;
    v80 = 0x100000000;
    if (!v136)
      v80 = 0;
    v81 = 0x10000000000;
    if (!v138)
      v81 = 0;
    v82 = 0x1000000000000;
    if (!v140)
      v82 = 0;
    v83 = (v144 | (v145 << 24) | v78 | v79 | v80 | v81) + v82;
    v84 = 0x100000000000000;
    if (!v141)
      v84 = 0;
    v193 = v151;
    v194 = v83 | v84;
    if (v142)
      v85 = 256;
    else
      v85 = 0;
    v195 = v85 | v143;
    v86 = v147;
    v147 = v76;
    v196 = v86;
    v197 = v76;
    v198 = v150;
    v199 = (uint64_t)v149;
    v200 = v148;
    v201 = v146;
    if (v137)
      v87 = 256;
    else
      v87 = 0;
    v202 = v87 | v139;
    v158 = 0uLL;
    v159 = 0;
    v160 = 1;
    bzero(v161, 0xB1uLL);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v17, (uint64_t)v8, type metadata accessor for Participant);
    v88 = Participant.captionInfo.getter();
    outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
    v89 = v154;
    Participant.copresenceInfo.getter(v163);
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v163);
    outlined consume of Participant.CaptionInfo?(v88);
    outlined release of LinearGradient((uint64_t)v162);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v158, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    v90 = v153;
    outlined destroy of AccountUpdateNotice(v89, type metadata accessor for Participant);
    swift_beginAccess();
    outlined assign with take of Participant((uint64_t)v16, v17);
    swift_endAccess();
    v91 = &v90[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    swift_beginAccess();
    v92 = v91[16];
    v150 = v91;
    if (v92 < 0)
    {
      v154 = *((_QWORD *)v91 + 1);
      v93 = *((_QWORD *)v132 + 3);
      v94 = *((_QWORD *)v132 + 4);
      v95 = __swift_project_boxed_opaque_existential_1(v132, v93);
      v149 = (char *)&v132;
      v96 = *(_QWORD *)(v93 - 8);
      v97 = MEMORY[0x1E0C80A78](v95);
      v99 = (char *)&v132 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v96 + 16))(v99, v97);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v94 + 32))(&v158, v93, v94);
      v100 = *(void (**)(char *, uint64_t))(v96 + 8);
      v91 = v150;
      v100(v99, v93);
      v101 = v160;
      v102 = v161[0];
      __swift_project_boxed_opaque_existential_1(&v158, v160);
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v101, v102);
      v90 = v153;
      ConversationController.broadcastingState.setter();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v158);
    }
    v103 = ConversationController.visibleParticipants.getter();
    v104 = *(_QWORD *)(v103 + 16);
    if (v104)
    {
      v148 = v103;
      v149 = v16;
      v154 = v17;
      v105 = v90;
      v106 = v103 + ((*((unsigned __int8 *)v152 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v152 + 80));
      v107 = v152[9];
      v108 = v5;
      v109 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v152 = v105;
      v110 = 0;
      v111 = v156;
      v112 = v157;
      while (1)
      {
        v109(v111, v154 + *(int *)(v155 + 20), v112);
        v113 = static UUID.== infix(_:_:)();
        (*(void (**)(char *, uint64_t))(v108 + 8))(v111, v112);
        if ((v113 & 1) != 0)
          break;
        ++v110;
        v106 += v107;
        if (v104 == v110)
        {
          swift_bridgeObjectRelease();

          v90 = v153;
          v17 = v154;
          v16 = v149;
          v91 = v150;
          goto LABEL_60;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v114 = v152;

      v115 = (void (**)(char *, uint64_t))((char *)v114
                                                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
      swift_beginAccess();
      v116 = *v115;
      v17 = v154;
      v16 = v149;
      if (*v115)
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v154, (uint64_t)v149, type metadata accessor for Participant);
        swift_retain();
        v116(v16, v110);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v116);
        outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
      }
      v117 = (void (**)(char *, uint64_t))((char *)v114
                                                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
      swift_beginAccess();
      v118 = *v117;
      v90 = v153;
      v91 = v150;
      if (*v117)
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v17, (uint64_t)v16, type metadata accessor for Participant);
        swift_retain();
        v118(v16, v110);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v118);
        outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_60:
      swift_bridgeObjectRelease();
    }
    if (v144)
    {
      if (v90[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] == 1)
      {
        v90[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] = 0;
        v119 = &v90[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition];
        swift_beginAccess();
        v120 = *(void (**)(uint64_t))v119;
        if (*(_QWORD *)v119)
        {
          swift_retain();
          v120(v147);
          outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v120);
        }
      }
    }
    v121 = &v90[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
    swift_beginAccess();
    v122 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v121;
    if (*(_QWORD *)v121)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v17, (uint64_t)v16, type metadata accessor for Participant);
      v123 = *(_QWORD *)v91;
      v124 = *((_QWORD *)v91 + 1);
      v125 = v91[16];
      swift_retain();
      v126 = v125;
      v90 = v153;
      v122(v16, v123, v124, v126);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v122);
      outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
    }
    v127 = &v90[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant];
    swift_beginAccess();
    v128 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v127;
    if (*(_QWORD *)v127)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v17, (uint64_t)v16, type metadata accessor for Participant);
      v129 = *(_QWORD *)v91;
      v130 = *((_QWORD *)v91 + 1);
      v131 = v91[16];
      swift_retain();
      v128(v16, v129, v130, v131);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v128);
      outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
    }
  }
}

void ConversationController.handleLocalVideoAttributesChanged(_:)()
{
  ConversationController.handleLocalVideoAttributesChanged(_:)();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_7_22();
  *(_QWORD *)(OUTLINED_FUNCTION_15() + 16) = v0;
  OUTLINED_FUNCTION_53_4();
  v4 = v0;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_132_10();
  OUTLINED_FUNCTION_429();
}

void closure #1 in ConversationController.handleLocalVideoAttributesChanged(_:)(uint64_t a1)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v2 = (__int128 *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
  swift_beginAccess();
  v3 = *((_QWORD *)v2 + 1);
  ObjectType = swift_getObjectType();
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 184);
  swift_unknownObjectRetain();
  LODWORD(v3) = v5(ObjectType, v3);
  swift_unknownObjectRelease();
  if ((_DWORD)v3 == 5
    || (v6 = *((_QWORD *)v2 + 1),
        v7 = swift_getObjectType(),
        v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 184),
        swift_unknownObjectRetain(),
        LODWORD(v6) = v8(v7, v6),
        swift_unknownObjectRelease(),
        (_DWORD)v6 == 6))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
    v33 = *v2;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v10 = String.init<A>(reflecting:)();
    v12 = v11;
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v9 + 32) = v10;
    *(_QWORD *)(v9 + 40) = v12;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  else if (!*(_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_mode))
  {
    v13 = (_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    swift_beginAccess();
    v14 = v13[3];
    v15 = v13[4];
    v16 = __swift_project_boxed_opaque_existential_1(v13, v14);
    v17 = *(_QWORD *)(v14 - 8);
    v18 = MEMORY[0x1E0C80A78](v16);
    v20 = (char *)&v33 - v19;
    (*(void (**)(char *, __n128))(v17 + 16))((char *)&v33 - v19, v18);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 32))(&v33, v14, v15);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v14);
    v21 = v34;
    v22 = v35;
    __swift_project_boxed_opaque_existential_1(&v33, v34);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 40))(v21, v22);
    if ((v23 & 0x100000000) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
    }
    else
    {
      v24 = VideoAttributeOrientation.deviceOrientation.getter(v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1BD645380;
      *(_QWORD *)&v33 = v24;
      type metadata accessor for CNKDeviceOrientation(0);
      v26 = String.init<A>(reflecting:)();
      v28 = v27;
      v29 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
      v30 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v25 + 64) = v30;
      *(_QWORD *)(v25 + 32) = v26;
      *(_QWORD *)(v25 + 40) = v28;
      *(_QWORD *)&v33 = v24;
      v31 = String.init<A>(reflecting:)();
      *(_QWORD *)(v25 + 96) = v29;
      *(_QWORD *)(v25 + 104) = v30;
      *(_QWORD *)(v25 + 72) = v31;
      *(_QWORD *)(v25 + 80) = v32;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      ConversationController.deviceOrientation.setter(v24);
    }
  }
}

void ConversationController.handleSendingVideoChanged(_:)()
{
  ConversationController.handleSendingVideoChanged(_:)();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD v20[2];
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_93();
  v22 = v1;
  v23 = v2;
  v20[1] = v3;
  v21 = v0;
  v5 = v4;
  v26 = *(_QWORD *)(OUTLINED_FUNCTION_285_0() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_20_3();
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_58_5();
  v9 = type metadata accessor for Notification();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_59(v12, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v13 = (void *)OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_93_4((uint64_t)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  OUTLINED_FUNCTION_93_4(v15 + v14, (uint64_t)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
  v17 = v21;
  v16 = v22;
  *(_QWORD *)(v15 + ((v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
  v31 = v16;
  v32 = v15;
  v27 = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = thunk for @escaping @callee_guaranteed () -> ();
  v30 = v23;
  OUTLINED_FUNCTION_53_4();
  v18 = v17;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  v27 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_227_3();
  v19 = OUTLINED_FUNCTION_412_2();
  MEMORY[0x1C3B7361C](v19);
  OUTLINED_FUNCTION_480_0();

  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  OUTLINED_FUNCTION_96_1(v24);
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationController.handleSendingVideoChanged(_:)(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(__int128 *__return_ptr);
  id v7;
  _BYTE *v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[5];
  _BYTE v12[24];
  uint64_t v13;

  Notification.object.getter();
  if (v13)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = (void *)v11[0];
      v4 = a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
      swift_beginAccess();
      outlined init with copy of RadarReporting(v4, (uint64_t)v11);
      v5 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v11[3]);
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
      v6 = *(void (**)(__int128 *__return_ptr))(v5 + 104);
      v7 = v3;
      v6(&v9);

      if (v10)
      {
        outlined init with take of Notice(&v9, (uint64_t)v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
        outlined init with copy of RadarReporting(v4, (uint64_t)v11);
        ConversationController.callCenter(_:localVideoToggledFor:)();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
        v8 = v12;
      }
      else
      {

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v9, &demangling cache variable for type metadata for Conversation?);
        v8 = v11;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    }
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for Any?);
  }
}

void ConversationController.handleWindowDidFinishResize(_:)()
{
  ConversationController.handleLocalVideoAttributesChanged(_:)();
}

void sub_1BD57A110()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_465_0();

  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8));
  OUTLINED_FUNCTION_268_0();
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationController.migrate(to:with:isUpgrade:)(uint64_t a1, _QWORD *a2)
{
  void (**v2)(uint64_t);
  void (*v3)(uint64_t);
  uint64_t v4;

  v2 = (void (**)(uint64_t))(a1 + *a2);
  OUTLINED_FUNCTION_1();
  v3 = *v2;
  if (*v2)
  {
    v4 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v3(v4);
    OUTLINED_FUNCTION_11_14((uint64_t)v3);
  }
  OUTLINED_FUNCTION_9_0();
}

void ConversationController.handleScreenConnectionDidUpdate(_:)()
{
  uint64_t v0;
  void (**v1)(_QWORD);
  void (*v2)(_QWORD);
  char v3;

  v1 = (void (**)(_QWORD))(v0
                                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  if (*v1)
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v3 = ConversationController.isCarPlayConnected.getter();
    v2(v3 & 1);
    OUTLINED_FUNCTION_11_14((uint64_t)v2);
  }
  OUTLINED_FUNCTION_32();
}

void ConversationController.handleScreenSharingDidChange(_:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id (*v45)();
  uint64_t v46;
  void *v47;

  OUTLINED_FUNCTION_93();
  v41 = v0;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_16_61();
  v40 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_96_14();
  MEMORY[0x1E0C80A78](v15);
  v16 = OUTLINED_FUNCTION_504_0();
  if (v44)
  {
    OUTLINED_FUNCTION_59(v16, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v17 = OUTLINED_FUNCTION_97();
    if ((v17 & 1) != 0)
    {
      v35 = v13;
      v36 = v10;
      v37 = v9;
      v38 = v1;
      v39 = v6;
      v18 = v47;
      v19 = OUTLINED_FUNCTION_2_11(v17, sel_uniqueProxyIdentifierUUID);
      OUTLINED_FUNCTION_766();

      v20 = &v41[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
      OUTLINED_FUNCTION_1();
      v22 = *(_QWORD *)v20;
      v21 = *((_QWORD *)v20 + 1);
      OUTLINED_FUNCTION_565_0();
      v23 = *(void (**)(uint64_t))(v21 + 200);
      OUTLINED_FUNCTION_462();
      v24 = OUTLINED_FUNCTION_295_3();
      v23(v24);
      OUTLINED_FUNCTION_372_3();
      LOBYTE(v20) = OUTLINED_FUNCTION_494_1();
      OUTLINED_FUNCTION_47_32(v2);
      OUTLINED_FUNCTION_47_32(v3);
      if ((v20 & 1) != 0)
      {
        v25 = objc_msgSend(v18, sel_isSharingScreen);
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v26 = OUTLINED_FUNCTION_15();
        *(_OWORD *)(v26 + 16) = xmmword_1BD6441D0;
        LOBYTE(v42) = v25;
        String.init<A>(reflecting:)();
        OUTLINED_FUNCTION_637();
        *(_QWORD *)(v26 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
        *(_QWORD *)(v26 + 32) = v21;
        *(_QWORD *)(v26 + 40) = v22;
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_112_0();
        v27 = OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_59(v27, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        v28 = (void *)OUTLINED_FUNCTION_7_22();
        v29 = OUTLINED_FUNCTION_15();
        v30 = v41;
        *(_QWORD *)(v29 + 16) = v41;
        *(_BYTE *)(v29 + 24) = v25;
        v45 = partial apply for closure #1 in ConversationController.handleScreenSharingDidChange(_:);
        v46 = v29;
        v42 = MEMORY[0x1E0C809B0];
        v43 = 1107296256;
        v31 = OUTLINED_FUNCTION_207((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
        v32 = v30;
        OUTLINED_FUNCTION_43();
        v33 = v35;
        static DispatchQoS.unspecified.getter();
        v42 = MEMORY[0x1E0DEE9D8];
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
        OUTLINED_FUNCTION_31_11();
        OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        v34 = v37;
        OUTLINED_FUNCTION_227_3();
        MEMORY[0x1C3B7361C](0, v33, v34, v31);
        OUTLINED_FUNCTION_50_3();

        OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
        (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v36);
      }
      else
      {

      }
    }
  }
  else
  {
    OUTLINED_FUNCTION_484_0(v16, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_1();
}

id closure #1 in ConversationController.handleScreenSharingDidChange(_:)(uint64_t a1, char a2)
{
  char v4;
  id result;
  void *v6;
  unsigned __int8 v7;
  unsigned __int8 *v8;
  void (**v9)(_QWORD);
  void (*v10)(_QWORD);

  ConversationController.cameraStartPolicy.getter();
  if (!v4)
  {
    result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v6 = result;
    v7 = objc_msgSend(result, sel_isGreenTea);

    v8 = (unsigned __int8 *)(a1
                           + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable);
    swift_beginAccess();
    *v8 = v7;
  }
  v9 = (void (**)(_QWORD))(a1
                                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  result = (id)swift_beginAccess();
  v10 = *v9;
  if (*v9)
  {
    swift_retain();
    v10(a2 & 1);
    return (id)outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v10);
  }
  return result;
}

void ConversationController.handleScreenSharingAttributesChanged(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  _QWORD v22[4];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_55_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_33_2();
  v4 = Notification.object.getter();
  if (v22[3])
  {
    OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v5 = OUTLINED_FUNCTION_97();
    if ((v5 & 1) != 0)
    {
      v6 = OUTLINED_FUNCTION_123(v5, sel_uniqueProxyIdentifierUUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
      OUTLINED_FUNCTION_1();
      v8 = *v7;
      v9 = v7[1];
      OUTLINED_FUNCTION_565_0();
      v10 = *(void (**)(uint64_t))(v9 + 200);
      OUTLINED_FUNCTION_462();
      v11 = OUTLINED_FUNCTION_263();
      v10(v11);
      OUTLINED_FUNCTION_372_3();
      OUTLINED_FUNCTION_233_4();
      OUTLINED_FUNCTION_255_3();
      v12 = OUTLINED_FUNCTION_291_4();
      v13 = ((uint64_t (*)(uint64_t))v10)(v12);
      if ((v8 & 1) != 0)
      {
        v14 = OUTLINED_FUNCTION_123(v13, sel_screenShareAttributes);
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v15 = OUTLINED_FUNCTION_15();
        v16 = (_QWORD *)v15;
        *(_OWORD *)(v15 + 16) = xmmword_1BD6441D0;
        if (v14)
        {
          OUTLINED_FUNCTION_59(v15, &lazy cache variable for type metadata for TUCallScreenShareAttributes);
          v17 = v14;
          v18 = String.init<A>(reflecting:)();
          v20 = v19;
        }
        else
        {
          v20 = 0xE300000000000000;
          v18 = 7104878;
        }
        v16[8] = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
        v16[4] = v18;
        v16[5] = v20;
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_239_1();
        OUTLINED_FUNCTION_133();
        ConversationController.updateScreenSharingSession(with:)((uint64_t)v14);

      }
      else
      {

      }
    }
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.handleCallStartedConnecting(_:)()
{
  ConversationController.handleCallStartedConnecting(_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v17 = v4;
  v6 = v5;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v8);
  v9 = OUTLINED_FUNCTION_110_15();
  if (v20)
  {
    OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v10 = OUTLINED_FUNCTION_97();
    if ((v10 & 1) != 0)
    {
      v15 = v3;
      v11 = v23;
      OUTLINED_FUNCTION_59(v10, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      v16 = (void *)OUTLINED_FUNCTION_7_22();
      v12 = OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_475(v12);
      swift_unknownObjectWeakInit();
      v13 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v13 + 16) = v6;
      *(_QWORD *)(v13 + 24) = v11;
      v21 = v17;
      v22 = v13;
      v19[0] = MEMORY[0x1E0C809B0];
      v19[1] = 1107296256;
      v19[2] = thunk for @escaping @callee_guaranteed () -> ();
      v20 = v15;
      _Block_copy(v19);
      v18 = v11;
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_269();
      v19[0] = MEMORY[0x1E0DEE9D8];
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
      OUTLINED_FUNCTION_31_11();
      OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      v14 = OUTLINED_FUNCTION_412_2();
      MEMORY[0x1C3B7361C](v14);
      OUTLINED_FUNCTION_480_0();

      OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    }
  }
  else
  {
    OUTLINED_FUNCTION_396_2(v9, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationController.handleCallConnected(_:)()
{
  ConversationController.handleCallStartedConnecting(_:)();
}

void closure #1 in ConversationController.handleCallStartedConnecting(_:)()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void sub_1BD57AB38(uint64_t a1)
{
  void *v1;
  void *v2;

  if (a1)
  {
    v2 = (void *)OUTLINED_FUNCTION_577();
    ConversationController.processCurrentCall(_:)(v2);

  }
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1BD57AB58(uint64_t result)
{
  void *v1;
  void *v2;
  void *v3;

  if (result)
  {
    v1 = (void *)result;
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_21_55();

    v2 = (void *)OUTLINED_FUNCTION_315_0();
    if ((specialized == infix(_:_:)(v2, v3) & 1) != 0)
    {
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_26();
    }
    return OUTLINED_FUNCTION_113();
  }
  return result;
}

void ConversationController.handleVideoCallStatusDidChange(_:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v2);
  v3 = OUTLINED_FUNCTION_110_15();
  if (v8)
  {
    OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v4 = OUTLINED_FUNCTION_97();
    if ((v4 & 1) != 0)
    {
      OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      OUTLINED_FUNCTION_7_22();
      v5 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v5 + 16) = v0;
      *(_QWORD *)(v5 + 24) = v9;
      OUTLINED_FUNCTION_329_4((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
      v6 = v0;
      v7 = v9;
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_269();
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
      OUTLINED_FUNCTION_31_11();
      OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
      OUTLINED_FUNCTION_332_4();
      OUTLINED_FUNCTION_215_4();
    }
  }
  else
  {
    OUTLINED_FUNCTION_396_2(v3, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationController.handleVideoCallStatusDidChange(_:)(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  void *v5;
  void (**v6)(uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v2 = a2;
  ConversationController.processCurrentCall(_:)(a2);
  v4 = a1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v5 = *(void **)v4;
  swift_unknownObjectRetain();
  LOBYTE(v2) = specialized == infix(_:_:)(v2, v5);
  swift_unknownObjectRelease();
  if ((v2 & 1) != 0)
  {
    v6 = (void (**)(uint64_t, uint64_t))(a1
                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
    swift_beginAccess();
    v7 = *v6;
    if (*v6)
    {
      v8 = *(_QWORD *)(v4 + 8);
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v7);
      v9 = swift_unknownObjectRetain();
      v7(v9, v8);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v7);
      swift_unknownObjectRelease();
    }
    ConversationController.updateIDSStatusForVideoMessaging()();
  }
}

void ConversationController.handleCallStatusDidChange(_:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v2);
  v3 = OUTLINED_FUNCTION_110_15();
  if (v7)
  {
    OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v4 = OUTLINED_FUNCTION_97();
    if ((v4 & 1) != 0)
    {
      OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      OUTLINED_FUNCTION_7_22();
      v5 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v5 + 16) = v8;
      *(_QWORD *)(v5 + 24) = v0;
      OUTLINED_FUNCTION_329_4((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
      v8;
      v6 = v0;
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_269();
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
      OUTLINED_FUNCTION_31_11();
      OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
      OUTLINED_FUNCTION_104_13();
      OUTLINED_FUNCTION_215_4();
    }
  }
  else
  {
    OUTLINED_FUNCTION_396_2(v3, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationController.handleCallStatusDidChange(_:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  void *v9;
  unsigned int v10;
  id v11;
  unsigned int v12;
  void (**v13)(uint64_t, uint64_t);
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v4 = a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v5 = *(void **)v4;
  swift_unknownObjectRetain();
  LOBYTE(a1) = specialized == infix(_:_:)(a1, v5);
  swift_unknownObjectRelease();
  if ((a1 & 1) != 0)
  {
    v6 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType();
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 160);
    swift_unknownObjectRetain();
    v9 = (void *)v8(ObjectType, v6);
    swift_unknownObjectRelease();
    v10 = objc_msgSend(v9, sel_supportsDynamicSystemUI);

    if (v10)
    {
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
      v12 = objc_msgSend(v11, sel_groupConversations);

      if (v12)
      {
        if (TUDeviceHasChinaSKU())
        {
          v13 = (void (**)(uint64_t, uint64_t))(a2
                                                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
          swift_beginAccess();
          v14 = *v13;
          if (*v13)
          {
            v15 = *(_QWORD *)(v4 + 8);
            _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v14);
            v16 = swift_unknownObjectRetain();
            v14(v16, v15);
            outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v14);
            swift_unknownObjectRelease();
          }
        }
      }
    }
  }
}

void ConversationController.handleHoldMusicDidChange(_:)()
{
  ConversationController.handleSendingVideoChanged(_:)();
}

void closure #1 in ConversationController.handleHoldMusicDidChange(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(uint64_t, uint64_t);
  void *v15;
  id v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void (**v19)(id);
  void (*v20)(id);
  _QWORD v21[4];
  _BYTE v22[24];
  uint64_t v23;

  v3 = type metadata accessor for UUID();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v21 - v8;
  Notification.object.getter();
  if (v23)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v10 = (void *)v21[1];
      v11 = a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
      swift_beginAccess();
      v12 = *(_QWORD *)(v11 + 8);
      ObjectType = swift_getObjectType();
      v21[0] = a2;
      v14 = *(void (**)(uint64_t, uint64_t))(v12 + 200);
      swift_unknownObjectRetain();
      v14(ObjectType, v12);
      v15 = v10;
      swift_unknownObjectRelease();
      v16 = objc_msgSend(v10, sel_uniqueProxyIdentifierUUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v16) = static UUID.== infix(_:_:)();
      v17 = *(void (**)(char *, uint64_t))(v4 + 8);
      v17(v6, v3);
      v17(v9, v3);
      if ((v16 & 1) != 0)
      {
        v18 = v21[0];
        if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
        {
          v19 = (void (**)(id))(v18
                                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
          swift_beginAccess();
          v20 = *v19;
          if (*v19)
          {
            swift_retain();
            v20(objc_msgSend(v15, sel_wantsHoldMusic));
            outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v20);
          }
        }
      }

    }
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for Any?);
  }
}

void ConversationController.handleBluetoothAudioFormatChanged(_:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  void *v45;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v38 = v9;
  v10 = OUTLINED_FUNCTION_16_61();
  v39 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_96_14();
  MEMORY[0x1E0C80A78](v15);
  v16 = OUTLINED_FUNCTION_504_0();
  if (v42)
  {
    OUTLINED_FUNCTION_59(v16, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v17 = OUTLINED_FUNCTION_97();
    if ((v17 & 1) != 0)
    {
      v34 = v13;
      v35 = v10;
      v36 = v1;
      v37 = v7;
      v18 = v45;
      v19 = OUTLINED_FUNCTION_2_11(v17, sel_uniqueProxyIdentifierUUID);
      OUTLINED_FUNCTION_766();

      v20 = &v4[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
      OUTLINED_FUNCTION_1();
      v21 = *((_QWORD *)v20 + 1);
      OUTLINED_FUNCTION_15_6();
      v22 = *(void (**)(uint64_t))(v21 + 200);
      OUTLINED_FUNCTION_72_9();
      v23 = OUTLINED_FUNCTION_202_0();
      v22(v23);
      OUTLINED_FUNCTION_10();
      v24 = OUTLINED_FUNCTION_494_1();
      OUTLINED_FUNCTION_47_32(v2);
      v25 = OUTLINED_FUNCTION_47_32(v3);
      if ((v24 & 1) != 0)
      {
        OUTLINED_FUNCTION_59(v25, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        v26 = (void *)OUTLINED_FUNCTION_7_22();
        v27 = OUTLINED_FUNCTION_15();
        *(_QWORD *)(v27 + 16) = v18;
        *(_QWORD *)(v27 + 24) = v4;
        v43 = partial apply for closure #1 in ConversationController.handleBluetoothAudioFormatChanged(_:);
        v44 = v27;
        v40 = MEMORY[0x1E0C809B0];
        v41 = 1107296256;
        v28 = OUTLINED_FUNCTION_207((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
        v29 = v18;
        v30 = v4;
        OUTLINED_FUNCTION_43();
        v31 = v34;
        static DispatchQoS.unspecified.getter();
        v40 = MEMORY[0x1E0DEE9D8];
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
        OUTLINED_FUNCTION_31_11();
        OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        v32 = v38;
        OUTLINED_FUNCTION_104_13();
        MEMORY[0x1C3B7361C](0, v31, v32, v28);
        OUTLINED_FUNCTION_465_0();

        OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
        (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v35);
      }
      else
      {

      }
    }
  }
  else
  {
    OUTLINED_FUNCTION_484_0(v16, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in ConversationController.handleBluetoothAudioFormatChanged(_:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(id);
  uint64_t result;
  void (*v10)(id);

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BD6441D0;
  objc_msgSend(a1, sel_bluetoothAudioFormat);
  type metadata accessor for TUCallBluetoothAudioFormat(0);
  v5 = String.init<A>(reflecting:)();
  v7 = v6;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v8 = (void (**)(id))(a2
                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  result = swift_beginAccess();
  v10 = *v8;
  if (*v8)
  {
    swift_retain();
    v10(objc_msgSend(a1, sel_bluetoothAudioFormat));
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v10);
  }
  return result;
}

void ConversationController.handlePTTCallStatusDidChange(_:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v2);
  v3 = OUTLINED_FUNCTION_110_15();
  if (v8)
  {
    OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if ((OUTLINED_FUNCTION_97() & 1) != 0)
    {
      v4 = objc_msgSend(v9, sel_isPTT);
      if ((_DWORD)v4)
      {
        OUTLINED_FUNCTION_59((uint64_t)v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        OUTLINED_FUNCTION_7_22();
        v5 = OUTLINED_FUNCTION_15();
        *(_QWORD *)(v5 + 16) = v9;
        *(_QWORD *)(v5 + 24) = v0;
        OUTLINED_FUNCTION_329_4((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
        v6 = v9;
        v7 = v0;
        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_269();
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
        OUTLINED_FUNCTION_31_11();
        OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        OUTLINED_FUNCTION_104_13();
        OUTLINED_FUNCTION_411_2();
      }

    }
  }
  else
  {
    OUTLINED_FUNCTION_396_2(v3, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in ConversationController.handlePTTCallStatusDidChange(_:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t result;
  void (**v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v4 = a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v5 = *(void **)v4;
  swift_unknownObjectRetain();
  LOBYTE(a1) = specialized == infix(_:_:)(a1, v5);
  result = swift_unknownObjectRelease();
  if ((a1 & 1) != 0)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit) == 1)
      ConversationController.pttStopTransmit()();
    v7 = (void (**)(uint64_t, uint64_t))(a2
                                                + OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
    result = swift_beginAccess();
    v8 = *v7;
    if (*v7)
    {
      v9 = *(_QWORD *)(v4 + 8);
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v8);
      v10 = swift_unknownObjectRetain();
      v8(v10, v9);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v8);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

BOOL closure #1 in ConversationController.processCurrentCall(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _BOOL8 result;
  unsigned int (*v19)(uint64_t, uint64_t);

  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 128))(ObjectType, a2) & 1) != 0)
  {
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 192))(ObjectType, a2);
    v8 = v7;
    v9 = a3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    v10 = *(_QWORD *)(v9 + 8);
    v11 = swift_getObjectType();
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 192);
    swift_unknownObjectRetain();
    v13 = v12(v11, v10);
    v15 = v14;
    swift_unknownObjectRelease();
    if (v6 == v13 && v8 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v17 & 1) != 0)
        return result;
      v19 = *(unsigned int (**)(uint64_t, uint64_t))(a2 + 184);
      if (v19(ObjectType, a2) != 6)
        return v19(ObjectType, a2) != 5;
    }
  }
  return 0;
}

Swift::Int specialized Set._Variant.filter(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  Swift::Int result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;

  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_bridgeObjectRetain();
    v4 = specialized _NativeSet.filter(_:)(a1, a2);
    swift_bridgeObjectRelease();
    return v4;
  }
  v4 = MEMORY[0x1E0DEE9E8];
  v26 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    swift_release();
    return v4;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  while (1)
  {
    swift_dynamicCast();
    v5 = v25;
    v6 = *(_QWORD *)(a2 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      v7 = v25;
      v8 = 0;
      while (1)
      {
        v9 = *(void **)(a2 + 8 * v8 + 32);
        if (v9)
        {
          v10 = v7;
          v11 = v9;
          v12 = static NSObject.== infix(_:_:)();

          if ((v12 & 1) != 0)
            break;
        }
        if (v6 == ++v8)
        {

          swift_bridgeObjectRelease();
          v5 = v25;
          goto LABEL_10;
        }
      }

      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
LABEL_10:
    v13 = v26;
    v14 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v14)
    {
      specialized _NativeSet.resize(capacity:)(v14 + 1);
      v13 = v26;
    }
    result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v13 + 40));
    v16 = v13 + 56;
    v17 = -1 << *(_BYTE *)(v13 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v13 + 56 + 8 * (v18 >> 6))) == 0)
      break;
    v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v13 + 56 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
LABEL_21:
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v20) = v5;
    ++*(_QWORD *)(v13 + 16);
LABEL_23:
    if (!__CocoaSet.Iterator.next()())
    {
      v4 = v26;
      goto LABEL_25;
    }
  }
  v21 = 0;
  v22 = (unint64_t)(63 - v17) >> 6;
  while (++v19 != v22 || (v21 & 1) == 0)
  {
    v23 = v19 == v22;
    if (v19 == v22)
      v19 = 0;
    v21 |= v23;
    v24 = *(_QWORD *)(v16 + 8 * v19);
    if (v24 != -1)
    {
      v20 = __clz(__rbit64(~v24)) + (v19 << 6);
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t specialized closure #1 in _NativeSet.filter(_:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;

  v29 = 0;
  v5 = 0;
  v25 = (uint64_t *)result;
  v26 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v27 = (unint64_t)(v6 + 63) >> 6;
  do
  {
    while (1)
    {
      if (v8)
      {
        v9 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v10 = v9 | (v5 << 6);
      }
      else
      {
        v11 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_31;
        if (v11 >= v27)
        {
LABEL_30:
          swift_retain();
          specialized _NativeSet.extractSubset(using:count:)(v25, a2, v29, a3);
          v23 = v22;
          swift_bridgeObjectRelease();
          return v23;
        }
        v12 = *(_QWORD *)(v26 + 8 * v11);
        ++v5;
        if (!v12)
        {
          v5 = v11 + 1;
          if (v11 + 1 >= v27)
            goto LABEL_30;
          v12 = *(_QWORD *)(v26 + 8 * v5);
          if (!v12)
          {
            v5 = v11 + 2;
            if (v11 + 2 >= v27)
              goto LABEL_30;
            v12 = *(_QWORD *)(v26 + 8 * v5);
            if (!v12)
            {
              v13 = v11 + 3;
              if (v13 >= v27)
                goto LABEL_30;
              v12 = *(_QWORD *)(v26 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  v5 = v13 + 1;
                  if (__OFADD__(v13, 1))
                    goto LABEL_32;
                  if (v5 >= v27)
                    goto LABEL_30;
                  v12 = *(_QWORD *)(v26 + 8 * v5);
                  ++v13;
                  if (v12)
                    goto LABEL_19;
                }
              }
              v5 = v13;
            }
          }
        }
LABEL_19:
        v8 = (v12 - 1) & v12;
        v10 = __clz(__rbit64(v12)) + (v5 << 6);
      }
      v14 = *(_QWORD *)(a4 + 16);
      if (!v14)
        break;
      v30 = v8;
      v31 = v5;
      v15 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v10);
      swift_bridgeObjectRetain();
      v16 = 0;
      while (1)
      {
        v17 = *(void **)(a4 + 8 * v16 + 32);
        if (v17)
        {
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
          v18 = v15;
          v19 = v17;
          v20 = static NSObject.== infix(_:_:)();

          if ((v20 & 1) != 0)
            break;
        }
        if (v14 == ++v16)
        {

          result = swift_bridgeObjectRelease();
          v5 = v31;
          v8 = v30;
          goto LABEL_26;
        }
      }

      result = swift_bridgeObjectRelease();
      v5 = v31;
      v8 = v30;
    }
LABEL_26:
    *(uint64_t *)((char *)v25 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
  }
  while (!__OFADD__(v29++, 1));
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

void specialized _merge<A>(low:mid:high:buffer:by:)(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  BOOL v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char v76;
  void (*v77)(char *, uint64_t);
  char *v78;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(unint64_t, char *, uint64_t);
  int EnumTagSinglePayload;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char v95;
  void (*v96)(char *, uint64_t);
  char *v97;
  unint64_t v98;
  unint64_t v100;
  BOOL v102;
  int64_t v103;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;

  v112 = a4;
  v126 = type metadata accessor for Participant.State(0);
  v7 = MEMORY[0x1E0C80A78](v126);
  v9 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v116 = (uint64_t)&v105 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v105 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v105 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v18 = MEMORY[0x1E0C80A78](v17);
  v111 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v105 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v110 = (unint64_t)&v105 - v24;
  MEMORY[0x1E0C80A78](v23);
  v119 = (unint64_t)&v105 - v25;
  v26 = type metadata accessor for Date();
  v120 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x1E0C80A78](v26);
  v107 = (char *)&v105 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v114 = (char *)&v105 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v106 = (char *)&v105 - v32;
  MEMORY[0x1E0C80A78](v31);
  v118 = (char *)&v105 - v33;
  v121 = type metadata accessor for Participant(0);
  v34 = MEMORY[0x1E0C80A78](v121);
  v117 = (uint64_t)&v105 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x1E0C80A78](v34);
  v124 = (unint64_t)&v105 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v40 = (char *)&v105 - v39;
  MEMORY[0x1E0C80A78](v38);
  v123 = (uint64_t)&v105 - v41;
  v43 = *(_QWORD *)(v42 + 72);
  if (!v43)
  {
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  v44 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v43 == -1)
    goto LABEL_98;
  v46 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v43 == -1)
    goto LABEL_99;
  v115 = v22;
  v108 = v14;
  v109 = v9;
  v125 = v26;
  v48 = v44 / v43;
  v49 = v43;
  v50 = v46 / v43;
  if (v44 / v43 < v46 / v43)
  {
    v51 = v112;
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, v44 / v43, v112);
    v52 = v48 * v49;
    v53 = v51 + v48 * v49;
    v54 = v52 < 1 || a2 >= a3;
    v55 = v49;
    if (v54)
    {
      a2 = a1;
      goto LABEL_92;
    }
    v124 = a3;
    v122 = v49;
    v82 = v125;
    v127 = v53;
    v113 = v40;
    while (1)
    {
      v83 = v123;
      outlined init with copy of ConversationControlsAppLaunchButtonType(a2, v123, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v51, (uint64_t)v40, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAppLaunchButtonType(v83, (uint64_t)v16, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() != 4)
        break;
      v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v85 = (uint64_t)&v16[*(int *)(v84 + 48)];
      outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v16[*(int *)(v84 + 64)], *(_QWORD *)&v16[*(int *)(v84 + 64) + 8]);
      v86 = v119;
      v87 = *(void (**)(unint64_t, char *, uint64_t))(v120 + 32);
      v87(v119, v16, v82);
      outlined destroy of Participant.MediaInfo(v85);
      __swift_storeEnumTagSinglePayload(v86, 0, 1, v82);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v86, 1, v82);
      v89 = v86;
      v40 = v113;
      if (EnumTagSinglePayload == 1)
        goto LABEL_72;
      v90 = v125;
      v87((unint64_t)v118, (char *)v119, v125);
      v91 = (uint64_t)v108;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v40, (uint64_t)v108, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        outlined destroy of AccountUpdateNotice(v91, type metadata accessor for Participant.State);
        v92 = v110;
        __swift_storeEnumTagSinglePayload(v110, 1, 1, v90);
        v82 = v90;
LABEL_70:
        (*(void (**)(char *, uint64_t))(v120 + 8))(v118, v82);
        goto LABEL_71;
      }
      v117 = v91 + *(int *)(v84 + 48);
      outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v91 + *(int *)(v84 + 64)), *(_QWORD *)(v91 + *(int *)(v84 + 64) + 8));
      v92 = v110;
      v87(v110, (char *)v91, v90);
      outlined destroy of Participant.MediaInfo(v117);
      __swift_storeEnumTagSinglePayload(v92, 0, 1, v90);
      v82 = v90;
      if (__swift_getEnumTagSinglePayload(v92, 1, v90) == 1)
        goto LABEL_70;
      v93 = v106;
      v87((unint64_t)v106, (char *)v92, v90);
      v94 = v118;
      v95 = static Date.< infix(_:_:)();
      v96 = *(void (**)(char *, uint64_t))(v120 + 8);
      v97 = v93;
      v40 = v113;
      v96(v97, v82);
      v96(v94, v82);
      outlined destroy of AccountUpdateNotice((uint64_t)v40, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice(v123, type metadata accessor for Participant);
      if ((v95 & 1) == 0)
        goto LABEL_73;
      v98 = a2 + v122;
      if (a1 >= a2 && a1 < v98)
      {
        v53 = v127;
        if (a1 != a2)
          swift_arrayInitWithTakeBackToFront();
        goto LABEL_83;
      }
      swift_arrayInitWithTakeFrontToBack();
LABEL_82:
      v53 = v127;
LABEL_83:
      a1 += v122;
      v102 = v51 >= v53 || v98 >= v124;
      a2 = v98;
      if (v102)
      {
        a2 = a1;
        goto LABEL_91;
      }
    }
    outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant.State);
    v92 = v119;
    __swift_storeEnumTagSinglePayload(v119, 1, 1, v82);
LABEL_71:
    v89 = v92;
LABEL_72:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v89, (uint64_t *)&demangling cache variable for type metadata for Date?);
    outlined destroy of AccountUpdateNotice((uint64_t)v40, type metadata accessor for Participant);
    outlined destroy of AccountUpdateNotice(v123, type metadata accessor for Participant);
    v82 = v125;
LABEL_73:
    v100 = v51 + v122;
    if (a1 < v51 || a1 >= v100)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a1 != v51)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v98 = a2;
    v51 = v100;
    goto LABEL_82;
  }
  v51 = v112;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, v46 / v43, v112);
  v53 = v51 + v50 * v49;
  v56 = v50 * v49 < 1 || a1 >= a2;
  v55 = v49;
  if (!v56)
  {
    v122 = v49;
    v123 = -v49;
    v57 = v125;
    v58 = v117;
    while (1)
    {
      v59 = a3;
      v127 = v53;
      v60 = v123;
      v61 = v124;
      v119 = v53 + v123;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v53 + v123, v124, type metadata accessor for Participant);
      v118 = (char *)(a2 + v60);
      outlined init with copy of ConversationControlsAppLaunchButtonType(a2 + v60, v58, type metadata accessor for Participant);
      v62 = v61;
      v63 = v116;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v62, v116, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v65 = v63 + *(int *)(v64 + 48);
        outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v63 + *(int *)(v64 + 64)), *(_QWORD *)(v63 + *(int *)(v64 + 64) + 8));
        v66 = v63;
        v67 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 32);
        v68 = (uint64_t)v115;
        v67(v115, v66, v125);
        v69 = v65;
        v57 = v125;
        outlined destroy of Participant.MediaInfo(v69);
        __swift_storeEnumTagSinglePayload(v68, 0, 1, v57);
        if (__swift_getEnumTagSinglePayload(v68, 1, v57) != 1)
        {
          v67(v114, v68, v57);
          v58 = v117;
          v70 = (uint64_t)v109;
          outlined init with copy of ConversationControlsAppLaunchButtonType(v117, (uint64_t)v109, type metadata accessor for Participant.State);
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            v71 = v70 + *(int *)(v64 + 48);
            outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v70 + *(int *)(v64 + 64)), *(_QWORD *)(v70 + *(int *)(v64 + 64) + 8));
            v72 = (uint64_t)v111;
            v67(v111, v70, v125);
            v73 = v71;
            v57 = v125;
            outlined destroy of Participant.MediaInfo(v73);
            __swift_storeEnumTagSinglePayload(v72, 0, 1, v57);
            if (__swift_getEnumTagSinglePayload(v72, 1, v57) != 1)
            {
              v74 = v107;
              v67(v107, v72, v57);
              v75 = v114;
              v76 = static Date.< infix(_:_:)();
              v77 = *(void (**)(char *, uint64_t))(v120 + 8);
              v77(v74, v57);
              v78 = v75;
              v58 = v117;
              v77(v78, v57);
LABEL_31:
              v51 = v112;
              goto LABEL_32;
            }
          }
          else
          {
            outlined destroy of AccountUpdateNotice(v70, type metadata accessor for Participant.State);
            v72 = (uint64_t)v111;
            __swift_storeEnumTagSinglePayload((uint64_t)v111, 1, 1, v57);
          }
          (*(void (**)(char *, uint64_t))(v120 + 8))(v114, v57);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v72, (uint64_t *)&demangling cache variable for type metadata for Date?);
          v76 = 0;
          goto LABEL_31;
        }
      }
      else
      {
        outlined destroy of AccountUpdateNotice(v63, type metadata accessor for Participant.State);
        v68 = (uint64_t)v115;
        __swift_storeEnumTagSinglePayload((uint64_t)v115, 1, 1, v57);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v68, (uint64_t *)&demangling cache variable for type metadata for Date?);
      v76 = 0;
      v58 = v117;
LABEL_32:
      a3 = v59 + v123;
      outlined destroy of AccountUpdateNotice(v58, type metadata accessor for Participant);
      outlined destroy of AccountUpdateNotice(v124, type metadata accessor for Participant);
      if ((v76 & 1) != 0)
      {
        if (v59 < a2 || a3 >= a2)
        {
          a2 = (unint64_t)v118;
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v59 == a2)
        {
          a2 = (unint64_t)v118;
        }
        else
        {
          a2 = (unint64_t)v118;
          swift_arrayInitWithTakeBackToFront();
        }
        v53 = v127;
      }
      else if (v59 < v127 || a3 >= v127)
      {
        v53 = v119;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        v53 = v119;
        if (v59 != v127)
          swift_arrayInitWithTakeBackToFront();
      }
      if (v53 <= v51 || a2 <= a1)
      {
LABEL_91:
        v55 = v122;
        break;
      }
    }
  }
LABEL_92:
  v103 = v53 - v51;
  if (v55 != -1 || v103 != 0x8000000000000000)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v51, v103 / v55, a2);
    return;
  }
LABEL_100:
  __break(1u);
}

uint64_t specialized MutableCollection._halfStablePartition(isSuffixElement:)(uint64_t *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  id v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(unint64_t, char *, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;

  v43 = a2;
  v3 = type metadata accessor for UUID();
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v38 = (char *)&v34 - v6;
  MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v34 - v8;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v34 - v11;
  v40 = a1;
  v13 = *a1;
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
    v16 = 0;
LABEL_9:

    return v16;
  }
  v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v41 = *(_QWORD *)(v10 + 72);
  v42 = (_QWORD *)v10;
  swift_bridgeObjectRetain();
  v16 = 0;
  v17 = v15;
  while (1)
  {
    v18 = objc_msgSend(v43, sel_uniqueProxyIdentifierUUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v19 = static UUID.== infix(_:_:)();
    v20 = (void (*)(char *, uint64_t))v42[1];
    v20(v12, v3);
    if ((v19 & 1) != 0)
      break;
    ++v16;
    v15 += v41;
    if (v14 == v16)
    {
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v13 + 16);
      goto LABEL_9;
    }
  }
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    v22 = *(_QWORD *)(v13 + 16);
    if (v16 + 1 == v22)
      goto LABEL_9;
    v23 = v41 + v15;
    v24 = v16 + 1;
    v36 = v17;
    while (v24 < v22)
    {
      v25 = (void (*)(char *, uint64_t, uint64_t))v42[2];
      v25(v12, v13 + v23, v3);
      v26 = objc_msgSend(v43, sel_uniqueProxyIdentifierUUID);
      v27 = v39;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v26) = static UUID.== infix(_:_:)();
      v20(v27, v3);
      result = ((uint64_t (*)(char *, uint64_t))v20)(v12, v3);
      if ((v26 & 1) == 0)
      {
        if (v24 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_29;
          v28 = *v40;
          v29 = *(_QWORD *)(*v40 + 16);
          if (v16 >= v29)
            goto LABEL_30;
          v35 = v16 * v41;
          result = ((uint64_t (*)(char *, unint64_t, uint64_t))v25)(v38, v28 + v36 + v16 * v41, v3);
          if (v24 >= v29)
            goto LABEL_31;
          v25(v37, v28 + v23, v3);
          result = swift_isUniquelyReferenced_nonNull_native();
          *v40 = v28;
          if ((result & 1) == 0)
          {
            result = specialized _ArrayBuffer._consumeAndCreateNew()();
            v28 = result;
            *v40 = result;
          }
          if (v16 >= *(_QWORD *)(v28 + 16))
            goto LABEL_32;
          v30 = v28 + v36 + v35;
          v31 = (uint64_t (*)(unint64_t, char *, uint64_t))v42[5];
          result = v31(v30, v37, v3);
          if (v24 >= *(_QWORD *)(*v40 + 16))
            goto LABEL_33;
          result = v31(*v40 + v23, v38, v3);
        }
        if (__OFADD__(v16++, 1))
          goto LABEL_28;
      }
      v33 = v24 + 1;
      if (__OFADD__(v24, 1))
        goto LABEL_27;
      v13 = *v40;
      v22 = *(_QWORD *)(*v40 + 16);
      ++v24;
      v23 += v41;
      if (v33 == v22)
        goto LABEL_9;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t specialized _NativeSet.subtracting<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  unint64_t v62;
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v51 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v58 = a1;
  v59 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v60 = v15;
  v61 = 0;
  v62 = v17 & v14;
  v56 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v52 = v6;
  v55 = a2;
  while (1)
  {
    v53 = v20;
    v54 = v23;
    if (v20)
    {
      v24 = (v20 - 1) & v20;
      v25 = __clz(__rbit64(v20)) | (v23 << 6);
      v26 = v23;
      v27 = v19;
LABEL_8:
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
      v28 = 0;
      goto LABEL_28;
    }
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
    {
LABEL_27:
      v24 = 0;
      v28 = 1;
      v26 = v23;
      goto LABEL_28;
    }
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_12;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_15;
    if (v26 + 2 >= v29)
      goto LABEL_27;
    v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
    if (v30)
    {
      v26 += 2;
      goto LABEL_12;
    }
    v23 = v26 + 3;
    if (v26 + 3 < v29)
    {
      v30 = *(_QWORD *)(v19 + 8 * v23);
      if (v30)
      {
LABEL_15:
        v26 = v23;
LABEL_12:
        v24 = (v30 - 1) & v30;
        v25 = __clz(__rbit64(v30)) + (v26 << 6);
        goto LABEL_8;
      }
      v26 += 4;
      if (v26 >= v29)
        goto LABEL_27;
      v30 = *(_QWORD *)(v19 + 8 * v26);
      if (v30)
        goto LABEL_12;
      v26 = v29 - 1;
      v31 = v54 + 6;
      while (v31 < v29)
      {
        v30 = *(_QWORD *)(v19 + 8 * v31++);
        if (v30)
        {
          v26 = v31 - 1;
          goto LABEL_12;
        }
      }
LABEL_36:
      v24 = 0;
      v28 = 1;
      goto LABEL_28;
    }
    v24 = 0;
    v28 = 1;
    v26 += 2;
LABEL_28:
    __swift_storeEnumTagSinglePayload((uint64_t)v6, v28, 1, v7);
    v58 = v22;
    v59 = v27;
    v60 = v21;
    v61 = v26;
    v62 = v24;
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
    {
      outlined consume of [String : Application].Iterator._Variant();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      return v55;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v6, v7);
    v32 = v55;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v33 = dispatch thunk of Hashable._rawHashValue(seed:)();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v56[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_35:
    v41(v57, v7);
    v23 = v61;
    v20 = v62;
    v22 = v58;
    v19 = v59;
    v21 = v60;
    v6 = v52;
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v11, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v40 = dispatch thunk of static Equatable.== infix(_:_:)();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v11, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v56[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_35;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v57, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v51 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v56, v45);
    specialized closure #1 in _NativeSet.subtracting<A>(_:)((uint64_t *)((char *)&v51 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v58);
    v47 = v46;
    swift_release();
    outlined consume of [String : Application].Iterator._Variant();
  }
  else
  {
    v49 = (void *)swift_slowAlloc();
    memcpy(v49, v56, v45);
    specialized closure #1 in _NativeSet.subtracting<A>(_:)((uint64_t *)v49, v44, v36, v35, &v58);
    v47 = v50;
    swift_release();
    outlined consume of [String : Application].Iterator._Variant();
    MEMORY[0x1C3B751B8](v49, -1, -1);
  }
  return v47;
}

void specialized closure #1 in _NativeSet.subtracting<A>(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  char v37;
  void (*v38)(char *, uint64_t);
  int64_t v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v48 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v56 = (char *)&v47 - v17;
  v18 = *(_QWORD *)(a3 + 16);
  v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v20 = *(uint64_t *)((char *)a1 + v19) & ((-1 << a4) - 1);
  v50 = a1;
  v51 = v11;
  *(uint64_t *)((char *)a1 + v19) = v20;
  v21 = v18 - 1;
  v54 = a3 + 56;
  v55 = a3;
  v52 = a5;
  while (2)
  {
    v49 = v21;
    do
    {
      while (1)
      {
        v22 = *a5;
        v23 = a5[1];
        v25 = a5[2];
        v24 = a5[3];
        v26 = a5[4];
        v53 = v25;
        if (v26)
        {
          v27 = (v26 - 1) & v26;
          v28 = __clz(__rbit64(v26)) | (v24 << 6);
LABEL_5:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v13 + 72) * v28, v12);
          v29 = 0;
          goto LABEL_6;
        }
        v39 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
          __break(1u);
          goto LABEL_43;
        }
        v40 = (unint64_t)(v25 + 64) >> 6;
        if (v39 >= v40)
        {
          v27 = 0;
          v29 = 1;
          goto LABEL_6;
        }
        v41 = *(_QWORD *)(v23 + 8 * v39);
        if (v41)
          goto LABEL_15;
        v44 = v24 + 2;
        if (v24 + 2 >= v40)
          goto LABEL_35;
        v41 = *(_QWORD *)(v23 + 8 * v44);
        if (v41)
          goto LABEL_23;
        if (v24 + 3 >= v40)
          goto LABEL_36;
        v41 = *(_QWORD *)(v23 + 8 * (v24 + 3));
        if (v41)
        {
          v39 = v24 + 3;
          goto LABEL_15;
        }
        v44 = v24 + 4;
        if (v24 + 4 < v40)
        {
          v41 = *(_QWORD *)(v23 + 8 * v44);
          if (v41)
          {
LABEL_23:
            v39 = v44;
LABEL_15:
            v27 = (v41 - 1) & v41;
            v28 = __clz(__rbit64(v41)) + (v39 << 6);
            v24 = v39;
            goto LABEL_5;
          }
          v39 = v24 + 5;
          if (v24 + 5 < v40)
          {
            v41 = *(_QWORD *)(v23 + 8 * v39);
            if (v41)
              goto LABEL_15;
            v39 = v40 - 1;
            v45 = v24 + 6;
            while (v45 < v40)
            {
              v41 = *(_QWORD *)(v23 + 8 * v45++);
              if (v41)
              {
                v39 = v45 - 1;
                goto LABEL_15;
              }
            }
LABEL_35:
            v27 = 0;
            v29 = 1;
            v24 = v39;
            goto LABEL_6;
          }
LABEL_36:
          v27 = 0;
          v29 = 1;
          v24 = v44;
          goto LABEL_6;
        }
        v27 = 0;
        v29 = 1;
        v24 += 3;
LABEL_6:
        __swift_storeEnumTagSinglePayload((uint64_t)v11, v29, 1, v12);
        *a5 = v22;
        a5[1] = v23;
        a5[2] = v53;
        a5[3] = v24;
        a5[4] = v27;
        if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          v46 = v55;
          swift_retain();
          specialized _NativeSet.extractSubset(using:count:)(v50, v48, v49, v46);
          return;
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v56, v11, v12);
        v30 = v55;
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v31 = dispatch thunk of Hashable._rawHashValue(seed:)();
        v32 = -1 << *(_BYTE *)(v30 + 32);
        v33 = v31 & ~v32;
        if (((*(_QWORD *)(v54 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0)
          break;
        v38 = *(void (**)(char *, uint64_t))(v13 + 8);
LABEL_17:
        v38(v56, v12);
        v11 = v51;
        a5 = v52;
      }
      v34 = ~v32;
      v35 = *(_QWORD *)(v13 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v36(v16, *(_QWORD *)(v55 + 48) + v35 * v33, v12);
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v37 = dispatch thunk of static Equatable.== infix(_:_:)();
        v38 = *(void (**)(char *, uint64_t))(v13 + 8);
        v38(v16, v12);
        if ((v37 & 1) != 0)
          break;
        v33 = (v33 + 1) & v34;
        if (((*(_QWORD *)(v54 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
          goto LABEL_17;
      }
      v38(v56, v12);
      v42 = (v33 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v51;
      v43 = *(uint64_t *)((char *)v50 + v42);
      *(uint64_t *)((char *)v50 + v42) = v43 & ~(1 << v33);
      a5 = v52;
    }
    while ((v43 & (1 << v33)) == 0);
    v21 = v49 - 1;
    if (__OFSUB__(v49, 1))
    {
LABEL_43:
      __break(1u);
      return;
    }
    if (v49 != 1)
      continue;
    break;
  }
}

void outlined bridged method (mnnbnn) of @objc NSNotificationCenter.post(name:object:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Class isa;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_postNotificationName_object_userInfo_, a1, a2, isa);

}

void specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_572();
  v13 = v8;
  v14 = v9;
  __swift_allocate_boxed_opaque_existential_0Tm((uint64_t *)&v12);
  OUTLINED_FUNCTION_533(v10, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32));
  v11 = *a3;
  *(_QWORD *)(v11 + 16) = v5 + 1;
  outlined init with take of Notice(&v12, v11 + 40 * v5 + 32);
  OUTLINED_FUNCTION_289_0();
}

id specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD *v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD *v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  _QWORD *v111;
  _QWORD *v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t (*v121)(void);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  char **v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  unsigned __int8 v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  __int128 v152;
  uint64_t v153;
  void *v154;
  void *v155;
  id result;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  char v161;
  void (*v162)(__int128 *, _QWORD);
  _QWORD *v163;
  uint64_t v164;
  uint64_t (**v165)(_QWORD, _QWORD);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _UNKNOWN **v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  _QWORD *v184;
  uint64_t v185;
  void *v186;
  id v187;
  id v188;
  _OWORD *v189;
  int v190;
  uint64_t v191;
  unsigned __int8 v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  void *v196;
  void *v197;
  id v198;
  uint64_t v199;
  uint64_t v200;
  void (*v201)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v202;
  int v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void (*v213)(char *, _UNKNOWN **, uint64_t, uint64_t);
  char *v214;
  void (*v215)(char *, _UNKNOWN **);
  void *v216;
  _BYTE *v217;
  int v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  _QWORD *v248;
  uint64_t v249;
  uint64_t v250;
  void *v251;
  char *v252;
  uint64_t v253;
  uint64_t (**v254)(_QWORD, _QWORD);
  uint64_t v255;
  uint64_t v256;
  objc_class *ObjectType;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  char *v272;
  _QWORD *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  __int128 v277;
  uint64_t v278;
  uint64_t v279;
  __int128 v280;
  char v281;
  _QWORD v282[3];
  __int128 v283;
  uint64_t v284;
  char v285;
  objc_super v286;
  uint64_t v287;
  __int128 v288;
  unsigned __int8 v289;
  uint64_t v290;
  __int128 v291;
  __int128 v292;
  _UNKNOWN **v293;
  uint64_t v294[5];
  uint64_t v295[6];

  v267 = a8;
  v266 = a7;
  HIDWORD(v256) = a6;
  v271 = (char *)a5;
  v273 = a3;
  v275 = a2;
  v276 = a1;
  v262 = (uint64_t *)a17;
  ObjectType = (objc_class *)swift_getObjectType();
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v17);
  v258 = (uint64_t)&v255 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  MEMORY[0x1E0C80A78](v19);
  v265 = (uint64_t)&v255 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = type metadata accessor for UUID();
  MEMORY[0x1E0C80A78](v274);
  *(_QWORD *)&v277 = (char *)&v255 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v263);
  v270 = (uint64_t)&v255 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Participant(0);
  v259 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v264 = (uint64_t)&v255 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Date();
  v268 = *(_QWORD *)(v25 - 8);
  v269 = v25;
  MEMORY[0x1E0C80A78](v25);
  v272 = (char *)&v255 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  v260 = *(_QWORD *)(v27 - 8);
  v261 = v27;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v255 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for OS_dispatch_queue.Attributes();
  MEMORY[0x1E0C80A78](v30);
  v31 = type metadata accessor for DispatchQoS();
  MEMORY[0x1E0C80A78](v31);
  v295[3] = a12;
  v295[4] = a15;
  __swift_allocate_boxed_opaque_existential_0Tm(v295);
  (*(void (**)(void))(*(_QWORD *)(a12 - 8) + 32))();
  v294[3] = a14;
  v294[4] = (uint64_t)v262;
  __swift_allocate_boxed_opaque_existential_0Tm(v294);
  (*(void (**)(void))(*(_QWORD *)(a14 - 8) + 32))();
  *((_BYTE *)a11 + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable) = 0;
  *((_BYTE *)a11 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable) = 0;
  *((_BYTE *)a11 + OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable) = 0;
  *(_QWORD *)((char *)a11 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController) = 0;
  v271 = (char *)OBJC_IVAR____TtC15ConversationKit22ConversationController_audioCallbackQueue;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v262 = (uint64_t *)v32;
  v33 = a11;
  static DispatchQoS.unspecified.getter();
  *(_QWORD *)&v291 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))MEMORY[0x1E0DEF810]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v260 + 104))(v29, *MEMORY[0x1E0DEF8D0], v261);
  *(_QWORD *)&v271[(_QWORD)a11] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes] = 0;
  v34 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes];
  *((_OWORD *)v34 + 4) = 0u;
  *((_OWORD *)v34 + 5) = 0u;
  *((_OWORD *)v34 + 2) = 0u;
  *((_OWORD *)v34 + 3) = 0u;
  *(_OWORD *)v34 = 0u;
  *((_OWORD *)v34 + 1) = 0u;
  v34[96] = 1;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider] = 0;
  v35 = OBJC_IVAR____TtC15ConversationKit22ConversationController_recentPresentationContexts;
  v36 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v33[v35] = Dictionary.init(dictionaryLiteral:)();
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit] = 0;
  v37 = (uint64_t)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_pendingNoticeWaitingForRemoteScreenShareAttributes];
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
  __swift_storeEnumTagSinglePayload(v37, 1, 1, v38);
  v39 = OBJC_IVAR____TtC15ConversationKit22ConversationController_scheduledVideoInfoResetDates;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v40 = v274;
  v41 = v269;
  *(_QWORD *)&v33[v39] = Dictionary.init(dictionaryLiteral:)();
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount] = 0;
  v262 = (uint64_t *)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation] = 1;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity] = 0;
  v42 = OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags;
  *(_QWORD *)&v33[v42] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] = 0;
  v43 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant];
  *v43 = 0;
  v43[1] = 0;
  v44 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant];
  *v44 = 0;
  v44[1] = 0;
  v45 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants];
  *v45 = 0;
  v45[1] = 0;
  v46 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations];
  *v46 = 0;
  v46[1] = 0;
  v47 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant];
  *v47 = 0;
  v47[1] = 0;
  v48 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive];
  *v48 = 0;
  v48[1] = 0;
  v49 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive];
  *v49 = 0;
  v49[1] = 0;
  v50 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange];
  *v50 = 0;
  v50[1] = 0;
  v51 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant];
  *v51 = 0;
  v51[1] = 0;
  v52 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo];
  *v52 = 0;
  v52[1] = 0;
  v53 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange];
  *v53 = 0;
  v53[1] = 0;
  v54 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact];
  *v54 = 0;
  v54[1] = 0;
  v55 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting];
  *v55 = 0;
  v55[1] = 0;
  v56 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange];
  *v56 = 0;
  v56[1] = 0;
  v57 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange];
  *v57 = 0;
  v57[1] = 0;
  v58 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange];
  *v58 = 0;
  v58[1] = 0;
  v59 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange];
  *v59 = 0;
  v59[1] = 0;
  v60 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange];
  *v60 = 0;
  v60[1] = 0;
  v61 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange];
  *v61 = 0;
  v61[1] = 0;
  v62 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange];
  *v62 = 0;
  v62[1] = 0;
  v63 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot];
  *v63 = 0;
  v63[1] = 0;
  v64 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange];
  *v64 = 0;
  v64[1] = 0;
  v65 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange];
  *v65 = 0;
  v65[1] = 0;
  v66 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange];
  *v66 = 0;
  v66[1] = 0;
  v67 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange];
  *v67 = 0;
  v67[1] = 0;
  v68 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange];
  *v68 = 0;
  v68[1] = 0;
  v69 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange];
  *v69 = 0;
  v69[1] = 0;
  v70 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange];
  *v70 = 0;
  v70[1] = 0;
  v71 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange];
  *v71 = 0;
  v71[1] = 0;
  v72 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange];
  *v72 = 0;
  v72[1] = 0;
  v73 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange];
  *v73 = 0;
  v73[1] = 0;
  v74 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange];
  *v74 = 0;
  v74[1] = 0;
  v75 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted];
  *v75 = 0;
  v75[1] = 0;
  v76 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged];
  *v76 = 0;
  v76[1] = 0;
  v77 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange];
  *v77 = 0;
  v77[1] = 0;
  v78 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged];
  *v78 = 0;
  v78[1] = 0;
  v79 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant];
  *v79 = 0;
  v79[1] = 0;
  v80 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership];
  *v80 = 0;
  v80[1] = 0;
  v81 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition];
  *v81 = 0;
  v81[1] = 0;
  v82 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo];
  *v82 = 0;
  v82[1] = 0;
  v83 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize];
  *v83 = 0;
  v83[1] = 0;
  v84 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing];
  *v84 = 0;
  v84[1] = 0;
  v85 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls];
  *v85 = 0;
  v85[1] = 0;
  v86 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic];
  *v86 = 0;
  v86[1] = 0;
  v87 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant];
  *v87 = 0;
  v87[1] = 0;
  v88 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange];
  *v88 = 0;
  v88[1] = 0;
  v89 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange];
  *v89 = 0;
  v89[1] = 0;
  v90 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange];
  *v90 = 0;
  v90[1] = 0;
  v91 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange];
  *v91 = 0;
  v91[1] = 0;
  v92 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant];
  *v92 = 0;
  v92[1] = 0;
  v93 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant];
  *v93 = 0;
  v93[1] = 0;
  v94 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant];
  *v94 = 0;
  v94[1] = 0;
  v95 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode];
  *v95 = 0;
  v95[1] = 0;
  v96 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants];
  *v96 = 0;
  v96[1] = 0;
  v97 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange];
  *v97 = 0;
  v97[1] = 0;
  v98 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange];
  *v98 = 0;
  v98[1] = 0;
  v99 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted];
  *v99 = 0;
  v99[1] = 0;
  v100 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged];
  *v100 = 0;
  v100[1] = 0;
  v101 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment];
  *v101 = 0;
  v101[1] = 0;
  v102 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame];
  *v102 = 0;
  v102[1] = 0;
  v103 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange];
  *v103 = 0;
  v103[1] = 0;
  v104 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera];
  *v104 = 0;
  v104[1] = 0;
  v105 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange];
  *v105 = 0;
  v105[1] = 0;
  v106 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged];
  *v106 = 0;
  v106[1] = 0;
  v107 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange];
  *v107 = 0;
  v107[1] = 0;
  v108 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade];
  *v108 = 0;
  v108[1] = 0;
  v109 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions];
  *v109 = 0;
  v109[1] = 0;
  v110 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions];
  *v110 = 0;
  v110[1] = 0;
  v111 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities];
  *v111 = 0;
  v111[1] = 0;
  v112 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured];
  *v112 = 0;
  v112[1] = 0;
  v113 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange];
  *v113 = 0;
  v113[1] = 0;
  v114 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock];
  *v114 = 0;
  v114[1] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_enableVideoOnJoin] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView] = 0;
  __swift_storeEnumTagSinglePayload((uint64_t)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID], 1, 1, v40);
  __swift_storeEnumTagSinglePayload((uint64_t)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageConversationUUID], 1, 1, v40);
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs] = v36;
  v115 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsThatHaveReceivedFirstVideoFrame] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame] = v115;
  v116 = OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrameTasks;
  type metadata accessor for DispatchWorkItem();
  *(_QWORD *)&v33[v116] = Dictionary.init(dictionaryLiteral:)();
  __swift_storeEnumTagSinglePayload((uint64_t)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDResolvingCroppedAspectRatio], 1, 1, v40);
  v117 = &v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID];
  *v117 = 0;
  v117[1] = 0;
  v118 = (uint64_t)&v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession];
  *(_OWORD *)v118 = 0u;
  *(_OWORD *)(v118 + 16) = 0u;
  v261 = v118;
  *(_QWORD *)(v118 + 32) = 0;
  v119 = v272;
  Date.init()();
  v120 = swift_getObjectType();
  v121 = *(uint64_t (**)(void))(v275 + 168);
  v271 = (char *)v120;
  v122 = v121();
  v123 = specialized Set.count.getter(v122);
  swift_bridgeObjectRelease();
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter] = v123 == 1;
  v274 = (uint64_t)v33;
  v33[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] = v267;
  (*(void (**)(uint64_t, char *, uint64_t))(v268 + 16))(v270, v119, v41);
  swift_storeEnumTagMultiPayload();
  UUID.init()();
  if (one-time initialization token for shared != -1)
    swift_once();
  v124 = static Defaults.shared;
  v125 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 568))();
  v126 = (char **)(*(uint64_t (**)(void))(*(_QWORD *)v124 + 168))();
  v293 = 0;
  v291 = 0u;
  v292 = 0u;
  if (one-time initialization token for default != -1)
    swift_once();
  swift_beginAccess();
  v127 = static Colors.ParticipantGradients.default;
  v128 = type metadata accessor for Participant.CountdownInfo(0);
  v129 = v265;
  __swift_storeEnumTagSinglePayload(v265, 1, 1, v128);
  v130 = v273[3];
  v131 = v273[4];
  __swift_project_boxed_opaque_existential_1(v273, v130);
  v132 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 104);
  swift_bridgeObjectRetain();
  v132(&v288, v276, v275, v130, v131);
  v133 = v290;
  if (v290)
  {
    __swift_project_boxed_opaque_existential_1(&v288, v290);
    v133 = Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v288);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v288, &demangling cache variable for type metadata for Conversation?);
  }
  v134 = type metadata accessor for ParticipantContactDetailsCache();
  v135 = v275;
  v136 = v276;
  v263 = v134;
  v137 = v271;
  specialized static ParticipantContactDetailsCache.cache(for:)();
  if ((v126 & 1) != 0)
    v139 = 0x100010100;
  else
    v139 = 65792;
  LOBYTE(v253) = v133 & 1;
  v140 = v264;
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(v270, v277, v139 & 0xFFFFFFFFFFFFFFFELL | v125 & 1, (uint64_t)&v291, v127, 0, 0, v129, v253, v138, v255, v256, (uint64_t)ObjectType, v258, v259, v260, v261, (uint64_t)v262, v263,
    v264,
    v265,
    v266);
  outlined init with take of StagedCollaboration(v140, v274 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant, type metadata accessor for Participant);
  v141 = ((uint64_t (*)(char *, uint64_t))v121)(v137, v135);
  v142 = specialized Set.count.getter(v141);
  if (!v142)
  {
    v148 = swift_bridgeObjectRelease();
    v149 = MEMORY[0x1E0DEE9D8];
LABEL_29:
    *(_QWORD *)&v277 = a16;
    v270 = a10;
    v265 = a9;
    MEMORY[0x1E0C80A78](v148);
    v164 = (uint64_t)v272;
    v163 = v273;
    *(&v255 - 4) = (uint64_t)v272;
    *(&v255 - 3) = (uint64_t)v163;
    v165 = (uint64_t (**)(_QWORD, _QWORD))v275;
    v253 = v136;
    v254 = (uint64_t (**)(_QWORD, _QWORD))v275;
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((uint64_t)partial apply for closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:), (uint64_t)(&v255 - 6), v149);
    v167 = v166;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v274 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants) = v167;
    v168 = v163[3];
    v169 = v163[4];
    __swift_project_boxed_opaque_existential_1(v163, v168);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t (**)(_QWORD, _QWORD), uint64_t, uint64_t))(v169 + 104))(&v291, v136, v165, v168, v169);
    v170 = *((_QWORD *)&v292 + 1);
    if (*((_QWORD *)&v292 + 1))
    {
      v171 = v293;
      __swift_project_boxed_opaque_existential_1(&v291, *((uint64_t *)&v292 + 1));
      v172 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v171[19])(v170, v171);
      MEMORY[0x1E0C80A78](v172);
      *(&v255 - 4) = v164;
      *(&v255 - 3) = (uint64_t)v163;
      v253 = v136;
      v254 = v165;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFShySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((void (*)(void **))partial apply for closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:), (uint64_t)(&v255 - 6), v172);
      v174 = v173;
      v264 = 0;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v291);
    }
    else
    {
      v264 = 0;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v291, &demangling cache variable for type metadata for Conversation?);
      v174 = MEMORY[0x1E0DEE9D8];
    }
    v175 = v274;
    *(_QWORD *)(v274 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants) = v174;
    outlined init with copy of RadarReporting((uint64_t)v163, v175 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    v176 = (uint64_t *)(v175 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
    *v176 = v136;
    v176[1] = (uint64_t)v165;
    outlined init with copy of RadarReporting((uint64_t)v295, v175 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator);
    outlined init with copy of RadarReporting((uint64_t)v294, v175 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator);
    *(_BYTE *)(v175
             + OBJC_IVAR____TtC15ConversationKit22ConversationController_includeLocalParticipantInVisibleParticipants) = BYTE4(v256) & 1;
    outlined init with copy of RadarReporting((uint64_t)v163, (uint64_t)&v291);
    v177 = v262;
    swift_beginAccess();
    v178 = *v177;
    v179 = swift_unknownObjectRetain_n();
    v180 = specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v179, &v291, v178, 0, (uint64_t)v271, v165);
    v181 = v175 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    *(_QWORD *)v181 = v180;
    *(_QWORD *)(v181 + 8) = v182;
    *(_BYTE *)(v181 + 16) = v183;
    *(_QWORD *)(v175 + OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker) = v265;
    v184 = (_QWORD *)(v175 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults);
    v185 = v277;
    *v184 = v270;
    v184[1] = v185;
    outlined init with copy of RadarReporting((uint64_t)v163, (uint64_t)&v291);
    v186 = (void *)objc_opt_self();
    swift_retain();
    swift_unknownObjectRetain();
    v187 = objc_msgSend(v186, sel_defaultCenter);
    v188 = objc_allocWithZone((Class)type metadata accessor for VideoMessageController());
    *(_QWORD *)(v175 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController) = VideoMessageController.init(callCenter:notificationCenter:)();
    outlined init with copy of FeatureEligibility?(v266, (uint64_t)&v288, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    if (v290)
    {
      outlined init with take of Notice(&v288, (uint64_t)&v291);
    }
    else
    {
      *((_QWORD *)&v292 + 1) = &type metadata for SingleDisplaySharingSession;
      v293 = &protocol witness table for SingleDisplaySharingSession;
      v189 = (_OWORD *)swift_allocObject();
      *(_QWORD *)&v291 = v189;
      v189[1] = 0u;
      v189[2] = 0u;
      v189[3] = 0u;
      v189[4] = 0u;
      v189[5] = 0u;
      v189[6] = 0u;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v288, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    }
    v190 = v267;
    v191 = v261;
    swift_beginAccess();
    outlined assign with take of Participant?((uint64_t)&v291, v191, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    swift_endAccess();
    swift_beginAccess();
    v192 = 0;
    v193 = *(char *)(v181 + 16);
    LODWORD(v277) = v190;
    if (v193 < 0 && v190 == 1)
    {
      v194 = v163[3];
      v195 = v163[4];
      __swift_project_boxed_opaque_existential_1(v163, v194);
      v196 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v195 + 80))(v194, v195);
      v192 = objc_msgSend(v196, sel_isPreviewRunning);

    }
    v197 = (void *)v274;
    *(_BYTE *)(v274 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) = v192;

    v286.receiver = v197;
    v286.super_class = ObjectType;
    v198 = objc_msgSendSuper2(&v286, sel_init);
    v199 = v163[3];
    v200 = v163[4];
    __swift_project_boxed_opaque_existential_1(v163, v199);
    v201 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v200 + 104);
    v202 = (char *)v198;
    v201(&v288, v276, v275, v199, v200);
    if (v290)
    {
      outlined init with take of Notice(&v288, (uint64_t)&v291);
      ConversationController.updateIdentityClaimingAssociations(in:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v291);
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v288, &demangling cache variable for type metadata for Conversation?);
    }
    v203 = v277;
    v204 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v205 = (uint64_t *)&v202[OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock];
    swift_beginAccess();
    v206 = *v205;
    *v205 = (uint64_t)_s15ConversationKit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalParticipantInVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSbycfU2_TA_0;
    v205[1] = v204;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v206);
    if ((v203 - 1) <= 1)
    {
      v207 = (uint64_t)&v202[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator];
      swift_beginAccess();
      outlined init with copy of RadarReporting(v207, (uint64_t)&v291);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantMediaProviderCreator);
      if (swift_dynamicCast())
      {
        v285 = 0;
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v284, (uint64_t)&v283);
        swift_unknownObjectWeakAssign();
        *((_QWORD *)&v292 + 1) = &type metadata for DefaultParticipantMediaProviderCreator;
        v293 = &protocol witness table for DefaultParticipantMediaProviderCreator;
        *(_QWORD *)&v291 = swift_allocObject();
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v283, v291 + 16);
        swift_beginAccess();
        __swift_destroy_boxed_opaque_existential_1(v207);
        outlined init with take of Notice(&v291, v207);
        swift_endAccess();
      }
      else
      {
        v284 = 0;
        v285 = 1;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v284, &demangling cache variable for type metadata for DefaultParticipantMediaProviderCreator?);
      }
    }
    v208 = (uint64_t)&v202[OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator];
    swift_beginAccess();
    outlined init with copy of RadarReporting(v208, (uint64_t)&v291);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantCaptionsProviderCreator);
    if (swift_dynamicCast())
    {
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v283, (uint64_t)v282);
      v282[1] = &protocol witness table for ConversationController;
      swift_unknownObjectWeakAssign();
      *((_QWORD *)&v292 + 1) = &type metadata for DefaultParticipantCaptionsProviderCreator;
      v293 = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
      *(_QWORD *)&v291 = swift_allocObject();
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)v282, v291 + 16);
      swift_beginAccess();
      __swift_destroy_boxed_opaque_existential_1(v208);
      outlined init with take of Notice(&v291, v208);
      swift_endAccess();
    }
    else
    {
      v283 = xmmword_1BD6491B0;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v283, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantCaptionsProviderCreator?);
    }
    static ParticipantContactDetailsCache.resetAll()();
    v209 = &v202[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    swift_beginAccess();
    v274 = (uint64_t)v209;
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
    ConversationController.lookupActiveConversation()();
    ConversationController.update(with:)((uint64_t)&v291);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v291, &demangling cache variable for type metadata for Conversation?);
    v210 = (uint64_t)&v202[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    swift_beginAccess();
    v211 = *(_QWORD *)(v210 + 24);
    v212 = *(_QWORD *)(v210 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v210, v211);
    v213 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v212 + 56);
    v214 = v202;
    v213(v202, &protocol witness table for ConversationController, v211, v212);
    swift_endAccess();
    v215 = *(void (**)(char *, _UNKNOWN **))(**(_QWORD **)&v214[OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker]
                                                      + 176);
    v143 = v214;
    swift_retain();
    v215(v202, &protocol witness table for ConversationController);
    swift_release();
    ConversationController.updateIDSStatusForVideoMessaging()();
    ConversationController.setupScreenSharingSessionCallbacks()();
    v216 = (void *)(*(uint64_t (**)(char *))(v275 + 176))(v271);
    ConversationController.updateScreenSharingSession(with:)((uint64_t)v216);

    LOBYTE(v210) = ConversationController.updateIsUsingIPadExternalCamera()();
    v217 = (_BYTE *)(v143 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera);
    swift_beginAccess();
    *v217 = v210 & 1;
    v137 = (char *)objc_msgSend(v186, sel_defaultCenter);
    v126 = &selRef_associatedAppBundleIdentifier;
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleLocalVideoPreviewFirstFrameArrived_, *MEMORY[0x1E0DBD800], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleLocalVideoAttributesChanged_, *MEMORY[0x1E0DBD7F0], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleSendingVideoChanged_, *MEMORY[0x1E0DBD510], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleAudioUplinkChange_, *MEMORY[0x1E0DBD520], 0);
    v218 = v277;
    if ((_DWORD)v277 == 1)
    {
      objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleCameraZoomBecameAvailable_, *MEMORY[0x1E0DBD818], 0);
      objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleCameraZoomBecameUnavailable_, *MEMORY[0x1E0DBD820], 0);
      objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handlelocalCameraUIDDidChange_, *MEMORY[0x1E0DBD7A8], 0);
      objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleCameraCinematicFramingAvailabilityChanged_, *MEMORY[0x1E0DBD788], 0);
      objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleCameraCinematicFramingEnabledChanged_, *MEMORY[0x1E0DBD790], 0);
      objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleCameraReactionEffectsEnabledChanged_, *MEMORY[0x1E0DBD7F8], 0);
      objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleCameraStudioLightEnabledChanged_, *MEMORY[0x1E0DBD808], 0);
      objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleCameraBlurEnabledChanged_, *MEMORY[0x1E0DBD780], 0);
      objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleCameraListDidChange_, *MEMORY[0x1E0DBD7C8], 0);
      objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleSystemPreferredCameraChanged_, *MEMORY[0x1E0DBD810], 0);
    }
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleScreenSharingDidChange_, *MEMORY[0x1E0DBD518], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleVideoCallStatusDidChange_, *MEMORY[0x1E0DBD4F0], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleCallStatusDidChange_, *MEMORY[0x1E0DBD4A0], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleCallConnected_, *MEMORY[0x1E0DBD488], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleCallStartedConnecting_, *MEMORY[0x1E0DBD498], 0);
    if (!v218)
      objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleBluetoothAudioFormatChanged_, *MEMORY[0x1E0DBD478], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleLocalPreviewChanged_, *MEMORY[0x1E0DBD7B8], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleLocalPreviewChanged_, *MEMORY[0x1E0DBD7B0], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleLocalPreviewChanged_, *MEMORY[0x1E0DBD7C0], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleHoldMusicDidChange_, *MEMORY[0x1E0DBD4B0], 0);
    objc_msgSend(v137, sel_addObserver_selector_name_object_, v143, sel_handleScreenSharingAttributesChanged_, *MEMORY[0x1E0DBD540], 0);
    if (static Platform.current.getter() != 3)
      goto LABEL_55;
    v144 = sel_handleWindowDidFinishResize_;
    v219 = one-time initialization token for didEndWindowLiveResizeNotification;
    v141 = (uint64_t)(id)v143;
    if (v219 == -1)
    {
LABEL_54:
      objc_msgSend(v137, v126[107], v141, v144, static Strings.Notifications.didEndWindowLiveResizeNotification, 0);

LABEL_55:
      objc_msgSend(v137, v126[107], v143, sel_handleScreenConnectionDidUpdate_, *MEMORY[0x1E0DC5348], 0);
      objc_msgSend(v137, v126[107], v143, sel_handleScreenConnectionDidUpdate_, *MEMORY[0x1E0DC5350], 0);
      objc_msgSend(v137, v126[107], v143, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD408], 0);
      objc_msgSend(v137, v126[107], v143, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD400], 0);
      objc_msgSend(v137, v126[107], v143, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD410], 0);
      objc_msgSend(v137, v126[107], v143, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD418], 0);
      objc_msgSend(v137, v126[107], v143, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3E0], 0);
      objc_msgSend(v137, v126[107], v143, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3E8], 0);
      objc_msgSend(v137, v126[107], v143, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3F0], 0);
      objc_msgSend(v137, v126[107], v143, sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3F8], 0);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v220 = swift_allocObject();
      *(_OWORD *)(v220 + 16) = xmmword_1BD645390;
      v221 = v143 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID;
      swift_beginAccess();
      v222 = v258;
      outlined init with copy of FeatureEligibility?(v221, v258, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      specialized >> prefix<A>(_:)(v222);
      v224 = v223;
      v226 = v225;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v222, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v227 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v220 + 56) = MEMORY[0x1E0DEA968];
      v228 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v220 + 64) = v228;
      *(_QWORD *)(v220 + 32) = v224;
      *(_QWORD *)(v220 + 40) = v226;
      v229 = (_QWORD *)(v143 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
      swift_beginAccess();
      *(_QWORD *)&v280 = *v229;
      type metadata accessor for TUConversationState(0);
      v230 = String.init<A>(reflecting:)();
      *(_QWORD *)(v220 + 96) = v227;
      *(_QWORD *)(v220 + 104) = v228;
      *(_QWORD *)(v220 + 72) = v230;
      *(_QWORD *)(v220 + 80) = v231;
      v232 = *(_BYTE *)(v274 + 16);
      v280 = *(_OWORD *)v274;
      v281 = v232;
      v233 = String.init<A>(reflecting:)();
      *(_QWORD *)(v220 + 136) = v227;
      *(_QWORD *)(v220 + 144) = v228;
      *(_QWORD *)(v220 + 112) = v233;
      *(_QWORD *)(v220 + 120) = v234;
      LOBYTE(v280) = v277;
      v235 = String.init<A>(reflecting:)();
      *(_QWORD *)(v220 + 176) = v227;
      *(_QWORD *)(v220 + 184) = v228;
      *(_QWORD *)(v220 + 152) = v235;
      *(_QWORD *)(v220 + 160) = v236;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v237 = swift_allocObject();
      v277 = xmmword_1BD6441D0;
      *(_OWORD *)(v237 + 16) = xmmword_1BD6441D0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      v238 = (*(unsigned __int8 *)(v259 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v259 + 80);
      v239 = swift_allocObject();
      *(_OWORD *)(v239 + 16) = v277;
      v240 = v143 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      swift_beginAccess();
      outlined init with copy of ConversationControlsAppLaunchButtonType(v240, v239 + v238, type metadata accessor for Participant);
      swift_beginAccess();
      v278 = v239;
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit11ParticipantVGG_SSs5NeverOTg506_sSi15f5Kit11h34VSSIgyno_Si6offset_AC7elementtSSs5I355OIegnrzr_TR04_s15a103Kit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalC217InVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSSSi_AA0O0VtXEfU3_Tf3nnnpf_nTf1cn_n();
      v242 = v241;
      swift_bridgeObjectRelease();
      v278 = v242;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [String] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [String]);
      v243 = BidirectionalCollection<>.joined(separator:)();
      v245 = v244;
      swift_bridgeObjectRelease();
      v278 = v243;
      v279 = v245;
      v246 = String.init<A>(reflecting:)();
      *(_QWORD *)(v237 + 56) = v227;
      *(_QWORD *)(v237 + 64) = v228;
      *(_QWORD *)(v237 + 32) = v246;
      *(_QWORD *)(v237 + 40) = v247;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      ConversationController.fetchExistingScreenSharingAttributes()();
      if (*(_BYTE *)(v143 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) == 1)
      {
        v248 = v273;
        v249 = v273[3];
        v250 = v273[4];
        __swift_project_boxed_opaque_existential_1(v273, v249);
        v251 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v250 + 80))(v249, v250);
        objc_msgSend(v251, sel_startPreview);
        swift_unknownObjectRelease();

        v137 = (char *)v251;
      }
      else
      {
        swift_unknownObjectRelease();
        v248 = v273;
      }
      v252 = v272;

      swift_unknownObjectRelease();
      swift_release();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v266, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v294);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v295);
      (*(void (**)(char *, uint64_t))(v268 + 8))(v252, v269);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v248);
      return (id)v143;
    }
LABEL_62:
    swift_once();
    goto LABEL_54;
  }
  v143 = v142;
  v287 = MEMORY[0x1E0DEE9D8];
  v144 = (char *)&v287;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v141 & 0xC000000000000001) != 0)
  {
    v145 = __CocoaSet.startIndex.getter();
    v147 = 1;
  }
  else
  {
    v145 = specialized _NativeSet.startIndex.getter(v141);
    v147 = v150 & 1;
  }
  *(_QWORD *)&v288 = v145;
  *((_QWORD *)&v288 + 1) = v146;
  v289 = v147;
  if (v143 < 0)
  {
    __break(1u);
    goto LABEL_62;
  }
  v151 = v141 & 0xFFFFFFFFFFFFFF8;
  if (v141 < 0)
    v151 = v141;
  *(_QWORD *)&v277 = v151;
  while (1)
  {
    v152 = v288;
    v153 = v289;
    specialized Set.subscript.getter(v288, SDWORD2(v288), v289, v141);
    v155 = v154;
    result = (id)TUNormalizedHandleForTUHandle();
    if (!result)
      break;

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    result = (id)specialized ContiguousArray._endMutation()();
    if ((v141 & 0xC000000000000001) != 0)
    {
      if ((v153 & 1) == 0)
        goto LABEL_64;
      if (__CocoaSet.Index.handleBitPattern.getter())
        swift_isUniquelyReferenced_nonNull_native();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
      v162 = (void (*)(__int128 *, _QWORD))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v162(&v291, 0);
    }
    else
    {
      v157 = specialized _NativeSet.index(after:)(v152, *((_QWORD *)&v152 + 1), v153, v141);
      v159 = v158;
      v161 = v160;
      outlined consume of Set<TUHandle>.Index._Variant(v152, *((uint64_t *)&v152 + 1), v153);
      *(_QWORD *)&v288 = v157;
      *((_QWORD *)&v288 + 1) = v159;
      v289 = v161 & 1;
    }
    if (!--v143)
    {
      outlined consume of Set<TUHandle>.Index._Variant(v288, *((uint64_t *)&v288 + 1), v289);
      v149 = v287;
      v148 = swift_bridgeObjectRelease();
      v136 = v276;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

void specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,_BYTE *a23,uint64_t a24,uint64_t a25)
{
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *(*v80)(_QWORD **__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  int v105;
  char v106;
  uint64_t v107;
  void *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  objc_class *v119;
  uint64_t v120;
  uint64_t v121;
  _UNKNOWN **v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  _QWORD *v135;
  void *v136;
  id v137;
  id v138;
  _OWORD *v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  void *v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *(*v150)(_QWORD **__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, _UNKNOWN **, uint64_t, uint64_t);
  char *v168;
  void (*v169)(char *, _UNKNOWN **);
  void *v170;
  _BYTE *v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  int v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  id v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  uint64_t v222;
  uint64_t v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  uint64_t v228;
  uint64_t v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  char v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  __n128 *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t (*v257)(_QWORD);
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  void *v264;
  uint64_t v265;
  objc_class *ObjectType;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  _BYTE *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  _QWORD *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  __int128 v285;
  _QWORD v286[6];
  __int128 v287;
  char v288;
  _QWORD v289[3];
  __int128 v290;
  uint64_t v291;
  char v292;
  objc_super v293;
  _QWORD v294[5];
  _QWORD *v295;
  uint64_t v296;
  char v297;
  uint64_t v298;
  __int128 v299;
  __int128 v300;
  _UNKNOWN **v301;
  _QWORD v302[5];
  _QWORD v303[5];
  uint64_t v304[3];
  uint64_t v305;
  uint64_t v306;

  OUTLINED_FUNCTION_93();
  HIDWORD(v276) = v25;
  v275 = v26;
  HIDWORD(v265) = v27;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v283 = v35;
  v284 = v34;
  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_506(v37, v265);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v38);
  v274 = (uint64_t)&v265 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v282 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_41();
  *(_QWORD *)&v285 = v41;
  v272 = OUTLINED_FUNCTION_238();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_41();
  v279 = v43;
  v268 = *(_QWORD *)(OUTLINED_FUNCTION_14_2() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_41();
  v273 = v45;
  v46 = OUTLINED_FUNCTION_33();
  v277 = *(_QWORD *)(v46 - 8);
  v278 = v46;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v47);
  v281 = (char *)&v265 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v280 = (_QWORD *)OUTLINED_FUNCTION_826();
  v271 = (_BYTE *)*(v280 - 1);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_308_3(v50, v265);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_16_61();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_16_2();
  v305 = a24;
  v306 = a25;
  __swift_allocate_boxed_opaque_existential_0Tm(v304);
  OUTLINED_FUNCTION_374_1(v53, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a24 - 8) + 32));
  v303[3] = &type metadata for DefaultParticipantMediaProviderCreator;
  v303[4] = &protocol witness table for DefaultParticipantMediaProviderCreator;
  v303[0] = OUTLINED_FUNCTION_15();
  outlined init with take of DefaultParticipantMediaProviderCreator(v31, v303[0] + 16);
  v302[3] = &type metadata for DefaultParticipantCaptionsProviderCreator;
  v302[4] = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
  v302[0] = OUTLINED_FUNCTION_15();
  v54 = outlined init with take of DefaultParticipantCaptionsProviderCreator(v29, v302[0] + 16);
  a23[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable] = 0;
  a23[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable] = 0;
  a23[OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable] = 0;
  *(_QWORD *)&a23[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController] = 0;
  v269 = OBJC_IVAR____TtC15ConversationKit22ConversationController_audioCallbackQueue;
  OUTLINED_FUNCTION_59(v54, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v55 = a23;
  static DispatchQoS.unspecified.getter();
  *(_QWORD *)&v299 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))MEMORY[0x1E0DEF810]);
  v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  v57 = (uint64_t)v281;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  OUTLINED_FUNCTION_731();
  (*((void (**)(uint64_t, _QWORD, _QWORD *))v271 + 13))(v270, *MEMORY[0x1E0DEF8D0], v280);
  OUTLINED_FUNCTION_393();
  *(_QWORD *)&a23[v269] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes] = 0;
  OUTLINED_FUNCTION_427_1((uint64_t)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes]);
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController] = 0;
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider] = 0;
  v58 = OBJC_IVAR____TtC15ConversationKit22ConversationController_recentPresentationContexts;
  v59 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v55[v58] = Dictionary.init(dictionaryLiteral:)();
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit] = 0;
  v60 = (uint64_t)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_pendingNoticeWaitingForRemoteScreenShareAttributes];
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
  OUTLINED_FUNCTION_77_0(v60, v62, v63, v61);
  v64 = OBJC_IVAR____TtC15ConversationKit22ConversationController_scheduledVideoInfoResetDates;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  *(_QWORD *)&v55[v64] = Dictionary.init(dictionaryLiteral:)();
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState] = 0;
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests] = 0;
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount] = 0;
  v271 = &v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation] = v56;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity] = 0;
  v65 = OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags;
  *(_QWORD *)&v55[v65] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] = 0;
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_enableVideoOnJoin] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView] = 0;
  OUTLINED_FUNCTION_240_1(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID);
  OUTLINED_FUNCTION_240_1(OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageConversationUUID);
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs] = v59;
  v66 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsThatHaveReceivedFirstVideoFrame] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame] = v66;
  v67 = OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrameTasks;
  type metadata accessor for DispatchWorkItem();
  OUTLINED_FUNCTION_607_0();
  *(_QWORD *)&v55[v67] = Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_240_1(OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDResolvingCroppedAspectRatio);
  OUTLINED_FUNCTION_17_82(OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID);
  v68 = (uint64_t)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession];
  *(_OWORD *)v68 = 0u;
  *(_OWORD *)(v68 + 16) = 0u;
  v270 = v68;
  *(_QWORD *)(v68 + 32) = 0;
  Date.init()();
  v69 = swift_getObjectType();
  v70 = *(uint64_t (**)(void))(v283 + 168);
  v280 = (_QWORD *)v69;
  v71 = v70();
  v72 = specialized Set.count.getter(v71);
  OUTLINED_FUNCTION_27();
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter] = v72 == 1;
  v282 = (uint64_t)v55;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] = BYTE4(v276);
  OUTLINED_FUNCTION_139(v279, v57, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v277 + 16));
  swift_storeEnumTagMultiPayload();
  UUID.init()();
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_22_6();
  v73 = (id)OUTLINED_FUNCTION_514_1();
  v301 = 0;
  v299 = 0u;
  v300 = 0u;
  if (one-time initialization token for default != -1)
    swift_once();
  OUTLINED_FUNCTION_1();
  v74 = static Colors.ParticipantGradients.default;
  v75 = OUTLINED_FUNCTION_830();
  OUTLINED_FUNCTION_77_0(v274, v76, v77, v75);
  v78 = v305;
  v79 = v306;
  OUTLINED_FUNCTION_80_20(v304, v305);
  v80 = *(_QWORD *(**)(_QWORD **__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 104);
  OUTLINED_FUNCTION_26_22();
  v81 = v80(&v295, v284, v283, v78, v79);
  if (v298)
  {
    __swift_project_boxed_opaque_existential_1(&v295, v298);
    OUTLINED_FUNCTION_157();
    Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v295);
  }
  else
  {
    OUTLINED_FUNCTION_627_0((uint64_t)v81, &demangling cache variable for type metadata for Conversation?);
  }
  v82 = type metadata accessor for ParticipantContactDetailsCache();
  v83 = v284;
  v272 = v82;
  v84 = v280;
  specialized static ParticipantContactDetailsCache.cache(for:)();
  OUTLINED_FUNCTION_417_2();
  v85 = v273;
  OUTLINED_FUNCTION_536(v279, v285, v86, v87, v74, v88, v89, v90, v265, (uint64_t)ObjectType, v267, v268, v269, v270, (uint64_t)v271, v272, v273, v274, v275,
    v276,
    v277,
    v278);
  outlined init with take of StagedCollaboration(v85, v282 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant, type metadata accessor for Participant);
  v91 = OUTLINED_FUNCTION_291_4();
  v92 = ((uint64_t (*)(uint64_t))v70)(v91);
  v93 = specialized Set.count.getter(v92);
  if (!v93)
  {
    v99 = OUTLINED_FUNCTION_2_1();
LABEL_26:
    v279 = a22;
    v274 = a21;
    MEMORY[0x1E0C80A78](v99);
    OUTLINED_FUNCTION_828();
    v117 = (uint64_t)v281;
    *(_QWORD *)(v118 - 32) = v281;
    *(_QWORD *)(v118 - 24) = v84;
    v119 = (objc_class *)v283;
    *(_QWORD *)(v118 - 16) = v83;
    *(_QWORD *)(v118 - 8) = v119;
    OUTLINED_FUNCTION_753((uint64_t)closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply, v120);
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_509_0(OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    v121 = OUTLINED_FUNCTION_530_0(v83);
    if (*((_QWORD *)&v300 + 1))
    {
      v122 = v301;
      __swift_project_boxed_opaque_existential_1(&v299, *((uint64_t *)&v300 + 1));
      v123 = OUTLINED_FUNCTION_7_16((uint64_t (*)(uint64_t, uint64_t))v122[19]);
      MEMORY[0x1E0C80A78](v123);
      *(&v267 - 4) = v117;
      *(&v267 - 3) = (uint64_t)v84;
      v265 = v83;
      ObjectType = v119;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFShySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((void (*)(void **))closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply, (uint64_t)(&v267 - 6), v123);
      v125 = v124;
      v273 = v92;
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_520_1();
    }
    else
    {
      v273 = v92;
      OUTLINED_FUNCTION_358_2(v121, &demangling cache variable for type metadata for Conversation?);
      v125 = MEMORY[0x1E0DEE9D8];
    }
    v126 = v282;
    *(_QWORD *)(v282 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants) = v125;
    outlined init with copy of RadarReporting((uint64_t)v304, v126 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    v127 = (uint64_t *)(v126 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
    *v127 = v83;
    v127[1] = (uint64_t)v119;
    outlined init with copy of RadarReporting((uint64_t)v303, v126 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator);
    outlined init with copy of RadarReporting((uint64_t)v302, v126 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator);
    *(_BYTE *)(v126
             + OBJC_IVAR____TtC15ConversationKit22ConversationController_includeLocalParticipantInVisibleParticipants) = BYTE4(v265) & 1;
    OUTLINED_FUNCTION_414_1();
    v128 = (uint64_t *)v271;
    OUTLINED_FUNCTION_1();
    v129 = *v128;
    v130 = swift_unknownObjectRetain_n();
    v131 = specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v130, &v299, v129, 0, (uint64_t)v280, (uint64_t (**)(_QWORD, _QWORD))v119);
    v132 = v126 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    *(_QWORD *)v132 = v131;
    *(_QWORD *)(v132 + 8) = v133;
    *(_BYTE *)(v132 + 16) = v134;
    *(_QWORD *)(v126 + OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker) = v274;
    v135 = (_QWORD *)(v126 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults);
    *v135 = v279;
    v135[1] = &protocol witness table for Defaults;
    OUTLINED_FUNCTION_414_1();
    v136 = (void *)objc_opt_self();
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    OUTLINED_FUNCTION_1_28();
    v137 = objc_msgSend(v136, sel_defaultCenter);
    v138 = objc_allocWithZone((Class)OUTLINED_FUNCTION_765());
    *(_QWORD *)(v126 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController) = OUTLINED_FUNCTION_473_1();
    outlined init with copy of FeatureEligibility?(v275, (uint64_t)&v295, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    if (v298)
    {
      OUTLINED_FUNCTION_628_0();
    }
    else
    {
      *((_QWORD *)&v300 + 1) = &type metadata for SingleDisplaySharingSession;
      v301 = &protocol witness table for SingleDisplaySharingSession;
      v139 = (_OWORD *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_559(v139);
      OUTLINED_FUNCTION_627_0(v140, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    }
    v141 = BYTE4(v276);
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_438_0((uint64_t)&v299, v142, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    swift_endAccess();
    OUTLINED_FUNCTION_1();
    v143 = *(char *)(v132 + 16);
    LODWORD(v285) = v141;
    if (v143 < 0 && v141 == 1)
    {
      v144 = v306;
      OUTLINED_FUNCTION_158_2();
      objc_msgSend((id)OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v144 + 80)), sel_isPreviewRunning);
      OUTLINED_FUNCTION_26_2();
    }
    v145 = (void *)v282;
    *(_BYTE *)(v282 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) = 0;

    v293.receiver = v145;
    v293.super_class = ObjectType;
    v146 = objc_msgSendSuper2(&v293, sel_init);
    v147 = v305;
    v148 = v306;
    v149 = OUTLINED_FUNCTION_158_2();
    v150 = *(_QWORD *(**)(_QWORD **__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v148 + 104);
    v151 = (char *)v146;
    v152 = v149;
    v153 = v150(&v295, v284, v283, v147, v148);
    if (v298)
    {
      OUTLINED_FUNCTION_628_0();
      v152 = v151;
      ConversationController.updateIdentityClaimingAssociations(in:)();
      OUTLINED_FUNCTION_520_1();
    }
    else
    {
      OUTLINED_FUNCTION_627_0((uint64_t)v153, &demangling cache variable for type metadata for Conversation?);
    }
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_584_0();
    v154 = (uint64_t *)&v151[OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock];
    OUTLINED_FUNCTION_2_0();
    v155 = *v154;
    *v154 = (uint64_t)_s15ConversationKit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalParticipantInVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSbycfU2_TA_0;
    v154[1] = (uint64_t)v152;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v155);
    if ((v285 - 1) <= 1)
    {
      v156 = OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_85_21(v156, (uint64_t)&v299);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantMediaProviderCreator);
      if (OUTLINED_FUNCTION_97())
      {
        v292 = 0;
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v291, (uint64_t)&v290);
        swift_unknownObjectWeakAssign();
        *((_QWORD *)&v300 + 1) = &type metadata for DefaultParticipantMediaProviderCreator;
        v301 = &protocol witness table for DefaultParticipantMediaProviderCreator;
        v157 = OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_742(v157);
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v290, v158);
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_209_3();
        swift_endAccess();
      }
      else
      {
        v291 = 0;
        v292 = 1;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v291, &demangling cache variable for type metadata for DefaultParticipantMediaProviderCreator?);
      }
    }
    v159 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_85_21(v159, (uint64_t)&v299);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantCaptionsProviderCreator);
    if (OUTLINED_FUNCTION_97())
    {
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v290, (uint64_t)v289);
      v289[1] = &protocol witness table for ConversationController;
      swift_unknownObjectWeakAssign();
      *((_QWORD *)&v300 + 1) = &type metadata for DefaultParticipantCaptionsProviderCreator;
      v301 = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
      v160 = OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_742(v160);
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)v289, v161);
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_209_3();
      swift_endAccess();
    }
    else
    {
      v290 = xmmword_1BD6491B0;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v290, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantCaptionsProviderCreator?);
    }
    static ParticipantContactDetailsCache.resetAll()();
    v162 = &v151[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    OUTLINED_FUNCTION_1();
    v282 = (uint64_t)v162;
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
    ConversationController.lookupActiveConversation()();
    ConversationController.update(with:)((uint64_t)&v299);
    OUTLINED_FUNCTION_358_2(v163, &demangling cache variable for type metadata for Conversation?);
    v164 = (uint64_t)&v151[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    OUTLINED_FUNCTION_2_0();
    v165 = *(_QWORD *)(v164 + 24);
    v166 = *(_QWORD *)(v164 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v164, v165);
    v167 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v166 + 56);
    v168 = v151;
    v167(v151, &protocol witness table for ConversationController, v165, v166);
    swift_endAccess();
    v169 = *(void (**)(char *, _UNKNOWN **))(**(_QWORD **)&v168[OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker]
                                                      + 176);
    v94 = v168;
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v169(v151, &protocol witness table for ConversationController);
    OUTLINED_FUNCTION_43();
    ConversationController.updateIDSStatusForVideoMessaging()();
    ConversationController.setupScreenSharingSessionCallbacks()();
    v170 = (void *)(*(uint64_t (**)(_QWORD *))(v283 + 176))(v280);
    ConversationController.updateScreenSharingSession(with:)((uint64_t)v170);

    LOBYTE(v164) = ConversationController.updateIsUsingIPadExternalCamera()();
    v171 = (_BYTE *)(v94 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera);
    OUTLINED_FUNCTION_2_0();
    *v171 = v164 & 1;
    v84 = objc_msgSend(v136, sel_defaultCenter);
    v92 = (uint64_t)&selRef_associatedAppBundleIdentifier;
    v172 = OUTLINED_FUNCTION_16_93(v84, sel_addObserver_selector_name_object_, v94, (uint64_t)sel_handleLocalVideoPreviewFirstFrameArrived_, *MEMORY[0x1E0DBD800]);
    v175 = OUTLINED_FUNCTION_13_113((uint64_t)v172, v173, v174, (uint64_t)sel_handleLocalVideoAttributesChanged_, *MEMORY[0x1E0DBD7F0]);
    v178 = OUTLINED_FUNCTION_13_113((uint64_t)v175, v176, v177, (uint64_t)sel_handleSendingVideoChanged_, *MEMORY[0x1E0DBD510]);
    v181 = OUTLINED_FUNCTION_13_113((uint64_t)v178, v179, v180, (uint64_t)sel_handleAudioUplinkChange_, *MEMORY[0x1E0DBD520]);
    v184 = v285;
    if ((_DWORD)v285 == 1)
    {
      v185 = OUTLINED_FUNCTION_13_113((uint64_t)v181, v182, v183, (uint64_t)sel_handleCameraZoomBecameAvailable_, *MEMORY[0x1E0DBD818]);
      v188 = OUTLINED_FUNCTION_13_113((uint64_t)v185, v186, v187, (uint64_t)sel_handleCameraZoomBecameUnavailable_, *MEMORY[0x1E0DBD820]);
      v191 = OUTLINED_FUNCTION_13_113((uint64_t)v188, v189, v190, (uint64_t)sel_handlelocalCameraUIDDidChange_, *MEMORY[0x1E0DBD7A8]);
      v194 = OUTLINED_FUNCTION_13_113((uint64_t)v191, v192, v193, (uint64_t)sel_handleCameraCinematicFramingAvailabilityChanged_, *MEMORY[0x1E0DBD788]);
      v197 = OUTLINED_FUNCTION_13_113((uint64_t)v194, v195, v196, (uint64_t)sel_handleCameraCinematicFramingEnabledChanged_, *MEMORY[0x1E0DBD790]);
      v200 = OUTLINED_FUNCTION_13_113((uint64_t)v197, v198, v199, (uint64_t)sel_handleCameraReactionEffectsEnabledChanged_, *MEMORY[0x1E0DBD7F8]);
      v203 = OUTLINED_FUNCTION_13_113((uint64_t)v200, v201, v202, (uint64_t)sel_handleCameraStudioLightEnabledChanged_, *MEMORY[0x1E0DBD808]);
      v206 = OUTLINED_FUNCTION_13_113((uint64_t)v203, v204, v205, (uint64_t)sel_handleCameraBlurEnabledChanged_, *MEMORY[0x1E0DBD780]);
      v209 = OUTLINED_FUNCTION_13_113((uint64_t)v206, v207, v208, (uint64_t)sel_handleCameraListDidChange_, *MEMORY[0x1E0DBD7C8]);
      v181 = OUTLINED_FUNCTION_13_113((uint64_t)v209, v210, v211, (uint64_t)sel_handleSystemPreferredCameraChanged_, *MEMORY[0x1E0DBD810]);
    }
    v212 = OUTLINED_FUNCTION_13_113((uint64_t)v181, v182, v183, (uint64_t)sel_handleScreenSharingDidChange_, *MEMORY[0x1E0DBD518]);
    v215 = OUTLINED_FUNCTION_13_113((uint64_t)v212, v213, v214, (uint64_t)sel_handleVideoCallStatusDidChange_, *MEMORY[0x1E0DBD4F0]);
    v218 = OUTLINED_FUNCTION_13_113((uint64_t)v215, v216, v217, (uint64_t)sel_handleCallStatusDidChange_, *MEMORY[0x1E0DBD4A0]);
    v221 = OUTLINED_FUNCTION_13_113((uint64_t)v218, v219, v220, (uint64_t)sel_handleCallConnected_, *MEMORY[0x1E0DBD488]);
    v224 = OUTLINED_FUNCTION_13_113((uint64_t)v221, v222, v223, (uint64_t)sel_handleCallStartedConnecting_, *MEMORY[0x1E0DBD498]);
    if (!v184)
      OUTLINED_FUNCTION_13_113((uint64_t)v224, v225, v226, (uint64_t)sel_handleBluetoothAudioFormatChanged_, *MEMORY[0x1E0DBD478]);
    OUTLINED_FUNCTION_16_93(v84, sel_addObserver_selector_name_object_, v94, (uint64_t)sel_handleLocalPreviewChanged_, *MEMORY[0x1E0DBD7B8]);
    OUTLINED_FUNCTION_16_93(v84, sel_addObserver_selector_name_object_, v94, (uint64_t)sel_handleLocalPreviewChanged_, *MEMORY[0x1E0DBD7B0]);
    v227 = OUTLINED_FUNCTION_16_93(v84, sel_addObserver_selector_name_object_, v94, (uint64_t)sel_handleLocalPreviewChanged_, *MEMORY[0x1E0DBD7C0]);
    v230 = OUTLINED_FUNCTION_13_113((uint64_t)v227, v228, v229, (uint64_t)sel_handleHoldMusicDidChange_, *MEMORY[0x1E0DBD4B0]);
    OUTLINED_FUNCTION_13_113((uint64_t)v230, v231, v232, (uint64_t)sel_handleScreenSharingAttributesChanged_, *MEMORY[0x1E0DBD540]);
    if (static Platform.current.getter() != 3)
      goto LABEL_52;
    v95 = sel_handleWindowDidFinishResize_;
    v233 = one-time initialization token for didEndWindowLiveResizeNotification;
    v73 = (id)v94;
    if (v233 == -1)
    {
LABEL_51:
      OUTLINED_FUNCTION_16_93(v84, *(SEL *)(v92 + 856), (uint64_t)v73, (uint64_t)v95, static Strings.Notifications.didEndWindowLiveResizeNotification);

LABEL_52:
      OUTLINED_FUNCTION_16_93(v84, *(SEL *)(v92 + 856), v94, (uint64_t)sel_handleScreenConnectionDidUpdate_, *MEMORY[0x1E0DC5348]);
      OUTLINED_FUNCTION_16_93(v84, *(SEL *)(v92 + 856), v94, (uint64_t)sel_handleScreenConnectionDidUpdate_, *MEMORY[0x1E0DC5350]);
      OUTLINED_FUNCTION_16_93(v84, *(SEL *)(v92 + 856), v94, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD408]);
      OUTLINED_FUNCTION_16_93(v84, *(SEL *)(v92 + 856), v94, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD400]);
      OUTLINED_FUNCTION_16_93(v84, *(SEL *)(v92 + 856), v94, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD410]);
      OUTLINED_FUNCTION_16_93(v84, *(SEL *)(v92 + 856), v94, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD418]);
      OUTLINED_FUNCTION_16_93(v84, *(SEL *)(v92 + 856), v94, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3E0]);
      OUTLINED_FUNCTION_16_93(v84, *(SEL *)(v92 + 856), v94, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3E8]);
      OUTLINED_FUNCTION_16_93(v84, *(SEL *)(v92 + 856), v94, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3F0]);
      OUTLINED_FUNCTION_16_93(v84, *(SEL *)(v92 + 856), v94, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3F8]);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v234 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v235 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v235 + 16) = xmmword_1BD645390;
      v236 = v94 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID;
      OUTLINED_FUNCTION_1();
      v237 = v236;
      v238 = v267;
      outlined init with copy of FeatureEligibility?(v237, v267, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      specialized >> prefix<A>(_:)(v238);
      v240 = v239;
      v242 = v241;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v238, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v243 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v235 + 56) = MEMORY[0x1E0DEA968];
      v244 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v235 + 64) = v244;
      *(_QWORD *)(v235 + 32) = v240;
      *(_QWORD *)(v235 + 40) = v242;
      v245 = (_QWORD *)(v94 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
      OUTLINED_FUNCTION_1();
      *(_QWORD *)&v287 = *v245;
      OUTLINED_FUNCTION_616_0();
      v246 = OUTLINED_FUNCTION_793();
      *(_QWORD *)(v235 + 96) = v243;
      *(_QWORD *)(v235 + 104) = v244;
      *(_QWORD *)(v235 + 72) = v246;
      *(_QWORD *)(v235 + 80) = v247;
      v248 = *(_BYTE *)(v282 + 16);
      v287 = *(_OWORD *)v282;
      v288 = v248;
      v249 = OUTLINED_FUNCTION_793();
      *(_QWORD *)(v235 + 136) = v243;
      *(_QWORD *)(v235 + 144) = v244;
      *(_QWORD *)(v235 + 112) = v249;
      *(_QWORD *)(v235 + 120) = v250;
      LOBYTE(v287) = v285;
      v251 = OUTLINED_FUNCTION_793();
      *(_QWORD *)(v235 + 176) = v243;
      *(_QWORD *)(v235 + 184) = v244;
      *(_QWORD *)(v235 + 152) = v251;
      *(_QWORD *)(v235 + 160) = v252;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_460();
      OUTLINED_FUNCTION_58_1();
      v253 = OUTLINED_FUNCTION_15();
      v285 = xmmword_1BD6441D0;
      *(_OWORD *)(v253 + 16) = xmmword_1BD6441D0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      v254 = (__n128 *)OUTLINED_FUNCTION_290_5();
      OUTLINED_FUNCTION_763(v254);
      OUTLINED_FUNCTION_1();
      v255 = OUTLINED_FUNCTION_315_0();
      outlined init with copy of ConversationControlsAppLaunchButtonType(v255, v256, v257);
      OUTLINED_FUNCTION_1();
      v286[0] = v234;
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit11ParticipantVGG_SSs5NeverOTg506_sSi15f5Kit11h34VSSIgyno_Si6offset_AC7elementtSSs5I355OIegnrzr_TR04_s15a103Kit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalC217InVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSSSi_AA0O0VtXEfU3_Tf3nnnpf_nTf1cn_n();
      v259 = v258;
      OUTLINED_FUNCTION_27();
      v286[0] = v259;
      v260 = OUTLINED_FUNCTION_31_11();
      OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [String] and conformance [A]);
      BidirectionalCollection<>.joined(separator:)();
      OUTLINED_FUNCTION_257_1();
      OUTLINED_FUNCTION_2_1();
      v286[0] = v286;
      v286[1] = v260;
      v261 = String.init<A>(reflecting:)();
      *(_QWORD *)(v253 + 56) = v243;
      *(_QWORD *)(v253 + 64) = v244;
      *(_QWORD *)(v253 + 32) = v261;
      *(_QWORD *)(v253 + 40) = v262;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_460();
      OUTLINED_FUNCTION_58_1();
      ConversationController.fetchExistingScreenSharingAttributes()();
      if (*(_BYTE *)(v94 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) == 1)
      {
        v263 = v306;
        OUTLINED_FUNCTION_184(v304);
        v264 = (void *)OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(v263 + 80));
        objc_msgSend(v264, sel_startPreview);
        swift_release();

        v84 = v264;
      }
      else
      {
        swift_release();
      }

      OUTLINED_FUNCTION_10();
      swift_release();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v275, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v302);
      OUTLINED_FUNCTION_103();
      (*(void (**)(char *, uint64_t))(v277 + 8))(v281, v278);
      OUTLINED_FUNCTION_100_2();
      OUTLINED_FUNCTION_52_1();
      return;
    }
LABEL_59:
    swift_once();
    goto LABEL_51;
  }
  v94 = v93;
  v294[0] = MEMORY[0x1E0DEE9D8];
  v95 = (char *)v294;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v92 & 0xC000000000000001) != 0)
  {
    v96 = OUTLINED_FUNCTION_596();
    v98 = 1;
  }
  else
  {
    v96 = specialized _NativeSet.startIndex.getter(v92);
    v98 = v100 & 1;
  }
  v295 = (_QWORD *)v96;
  v296 = v97;
  v297 = v98;
  if (v94 < 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  v101 = v92 & 0xFFFFFFFFFFFFFF8;
  if (v92 < 0)
    v101 = v92;
  *(_QWORD *)&v285 = v101;
  while (1)
  {
    v84 = v295;
    v102 = v296;
    v103 = v297;
    v104 = OUTLINED_FUNCTION_778();
    specialized Set.subscript.getter(v104, v105, v106, v107);
    v109 = v108;
    if (!(id)TUNormalizedHandleForTUHandle())
      break;

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    v110 = *(_QWORD *)(v294[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if ((v92 & 0xC000000000000001) != 0)
    {
      if ((v103 & 1) == 0)
        goto LABEL_61;
      if (__CocoaSet.Index.handleBitPattern.getter())
        swift_isUniquelyReferenced_nonNull_native();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
      Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      OUTLINED_FUNCTION_653_0();
    }
    else
    {
      v111 = OUTLINED_FUNCTION_778();
      specialized _NativeSet.index(after:)(v111, v112, v113, v114);
      OUTLINED_FUNCTION_582_0();
      v116 = v115;
      outlined consume of Set<TUHandle>.Index._Variant((uint64_t)v84, v102, v103);
      v295 = v294;
      v296 = v110;
      v297 = v116 & 1;
    }
    if (!--v94)
    {
      outlined consume of Set<TUHandle>.Index._Variant((uint64_t)v295, v296, v297);
      v99 = OUTLINED_FUNCTION_2_1();
      v83 = v284;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_61:
  __break(1u);
}

void specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,objc_class *a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;

  OUTLINED_FUNCTION_93();
  v55 = v26;
  v56 = v27;
  v29 = v28;
  v31 = v30;
  v54 = v32;
  v33 = objc_allocWithZone(a23);
  v34 = *(_QWORD *)(v31 + 24);
  v35 = *(_QWORD *)(v31 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v31, v34);
  OUTLINED_FUNCTION_10_37();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_93_4(v25, v38, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 16));
  v39 = *(_QWORD *)(v29 + 24);
  v40 = *(_QWORD *)(v29 + 32);
  v41 = OUTLINED_FUNCTION_758();
  __swift_mutable_project_boxed_opaque_existential_1(v41, v42);
  OUTLINED_FUNCTION_10_37();
  MEMORY[0x1E0C80A78](v43);
  v45 = OUTLINED_FUNCTION_414_2(v44, a22);
  OUTLINED_FUNCTION_139((uint64_t)v45, v46, v47);
  ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_457(v54, a25, v55, v25, v49, v50, v51, v52, v56, a21, v33, v34, ObjectType, v39, v35, v53, v40);
  __swift_destroy_boxed_opaque_existential_1(v29);
  __swift_destroy_boxed_opaque_existential_1(v31);
  OUTLINED_FUNCTION_52_1();
}

void specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_BYTE *a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t, uint64_t);
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _UNKNOWN **v86;
  _QWORD *(*v87)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD *v88;
  id v89;
  uint64_t isUniquelyReferenced_nonNull_native;
  objc_class *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  int v112;
  char v113;
  uint64_t v114;
  void *v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _UNKNOWN **v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  _QWORD *v140;
  uint64_t v141;
  id v142;
  id v143;
  _OWORD *v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  uint64_t (*v150)(uint64_t, uint64_t);
  void *v151;
  id v152;
  uint64_t v153;
  _UNKNOWN **v154;
  _QWORD *v155;
  _QWORD *(*v156)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD);
  char *v157;
  _QWORD *v158;
  _QWORD *v159;
  int v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(char *, _UNKNOWN **, uint64_t, uint64_t);
  char *v178;
  void (*v179)(char *, _UNKNOWN **);
  void *v180;
  _BYTE *v181;
  uint64_t v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  id v192;
  uint64_t v193;
  uint64_t v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  id v198;
  uint64_t v199;
  uint64_t v200;
  id v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  uint64_t v205;
  uint64_t v206;
  id v207;
  uint64_t v208;
  uint64_t v209;
  id v210;
  uint64_t v211;
  uint64_t v212;
  id v213;
  uint64_t v214;
  uint64_t v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  id v219;
  uint64_t v220;
  uint64_t v221;
  id v222;
  uint64_t v223;
  uint64_t v224;
  id v225;
  uint64_t v226;
  uint64_t v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  id v231;
  uint64_t v232;
  uint64_t v233;
  id v234;
  uint64_t v235;
  uint64_t v236;
  id v237;
  uint64_t v238;
  uint64_t v239;
  id v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  char v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  __n128 *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  _UNKNOWN **v273;
  void *v274;
  uint64_t v275;
  uint64_t v276;
  objc_class *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  __int128 v296;
  void *v297;
  uint64_t v298;
  _QWORD v299[6];
  __int128 v300;
  char v301;
  _QWORD v302[3];
  __int128 v303;
  uint64_t v304;
  char v305;
  objc_super v306;
  _QWORD v307[5];
  _QWORD *v308;
  uint64_t v309;
  char v310;
  uint64_t v311;
  __int128 v312;
  __int128 v313;
  _UNKNOWN **v314;
  _QWORD v315[5];
  _QWORD v316[5];
  _QWORD v317[3];
  uint64_t v318;
  _UNKNOWN **v319;

  OUTLINED_FUNCTION_93();
  v287 = v25;
  v288 = v24;
  HIDWORD(v289) = v26;
  HIDWORD(v276) = v27;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v297 = v34;
  *(_QWORD *)&v296 = a24;
  v295 = a23;
  v277 = (objc_class *)OUTLINED_FUNCTION_287_3();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_506(v36, v276);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v37);
  v286 = (uint64_t)&v276 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v294 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_41();
  v298 = v40;
  v284 = OUTLINED_FUNCTION_238();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v41);
  v292 = (uint64_t)&v276 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v279 = *(_QWORD *)(OUTLINED_FUNCTION_14_2() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v43);
  v285 = (uint64_t)&v276 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = OUTLINED_FUNCTION_33();
  v290 = *(_QWORD *)(v45 - 8);
  v291 = v45;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_41();
  v293 = v47;
  v48 = OUTLINED_FUNCTION_826();
  v282 = *(_QWORD *)(v48 - 8);
  v283 = (uint64_t *)v48;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_308_3(v50, v276);
  v51 = (void (*)(uint64_t))MEMORY[0x1E0DEF810];
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_16_61();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v53);
  v318 = type metadata accessor for CallCenter();
  v319 = &protocol witness table for CallCenter;
  v317[0] = v33;
  v316[3] = &type metadata for DefaultParticipantMediaProviderCreator;
  v316[4] = &protocol witness table for DefaultParticipantMediaProviderCreator;
  v316[0] = OUTLINED_FUNCTION_15();
  outlined init with take of DefaultParticipantMediaProviderCreator(v31, v316[0] + 16);
  v315[3] = &type metadata for DefaultParticipantCaptionsProviderCreator;
  v315[4] = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
  v315[0] = OUTLINED_FUNCTION_15();
  v54 = outlined init with take of DefaultParticipantCaptionsProviderCreator(v29, v315[0] + 16);
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayDisconnectRequiresLocalVideoEnable] = 0;
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingEndingRequiresLocalVideoEnable] = 0;
  a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_showingInMiniWindowRequiresLocalVideoEnable] = 0;
  *(_QWORD *)&a22[OBJC_IVAR____TtC15ConversationKit22ConversationController_audioFrequencyController] = 0;
  v280 = OBJC_IVAR____TtC15ConversationKit22ConversationController_audioCallbackQueue;
  OUTLINED_FUNCTION_59(v54, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v55 = a22;
  static DispatchQoS.unspecified.getter();
  *(_QWORD *)&v312 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, v51);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  OUTLINED_FUNCTION_731();
  (*(void (**)(uint64_t, _QWORD, uint64_t *))(v282 + 104))(v281, *MEMORY[0x1E0DEF8D0], v283);
  OUTLINED_FUNCTION_393();
  *(_QWORD *)&a22[v280] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v56 = v296;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_didReceiveLatestRemoteAttributes] = 0;
  OUTLINED_FUNCTION_427_1((uint64_t)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_latestRemoteAttributes]);
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController____lazy_storage___momentsController] = 0;
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_lastRegisteredMomentsProvider] = 0;
  v57 = OBJC_IVAR____TtC15ConversationKit22ConversationController_recentPresentationContexts;
  *(_QWORD *)&v55[v57] = Dictionary.init(dictionaryLiteral:)();
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_pauseOnFirstFrame] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_hasPendingStopTransmit] = 0;
  v58 = (uint64_t)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_pendingNoticeWaitingForRemoteScreenShareAttributes];
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
  OUTLINED_FUNCTION_77_0(v58, v60, v61, v59);
  v62 = OBJC_IVAR____TtC15ConversationKit22ConversationController_scheduledVideoInfoResetDates;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  *(_QWORD *)&v55[v62] = Dictionary.init(dictionaryLiteral:)();
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState] = 0;
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_ignoreLetMeInRequests] = 0;
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_rejectedParticipantsCount] = 0;
  v283 = (uint64_t *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation];
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation] = a22;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_didDeferStartCameraAction] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneCallCenterUpdateWaitingForNonSquareVideo] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeDisabledByActivity] = 0;
  v63 = OBJC_IVAR____TtC15ConversationKit22ConversationController_featureFlags;
  *(_QWORD *)&v55[v63] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_waitForModeSwitchDuringUPlusOneHandoff] = 0;
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantsMediaPrioritiesDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidStopReacting);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_participantAudioPowerDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_mutedTalkerDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraZoomAvailabiltyDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_localCameraUIDDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraListDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraOrientationUpdateDidGetSnapshot);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipantCameraPosition);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateRecordingLocalVideo);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateHasRingingCalls);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationRejectedParticipantsCountDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraPositionDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_willTakeMoment);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldPauseOnFirstLocalVideoFrame);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLinkDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateIDSCapabilities);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageErrorOccured);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock);
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_enableVideoOnJoin] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_expectingNewLocalCameraPositionFirstFrame] = 0;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_isSplitView] = 0;
  v64 = OUTLINED_FUNCTION_751(OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID);
  __swift_storeEnumTagSinglePayload(v64, v65, v66, v67);
  v68 = OUTLINED_FUNCTION_751(OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageConversationUUID);
  __swift_storeEnumTagSinglePayload(v68, v69, v70, v71);
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs] = MEMORY[0x1E0DEE9D8];
  v72 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsThatHaveReceivedFirstVideoFrame] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrame] = v72;
  v73 = OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDsAwaitingFirstRemoteVideoFrameTasks;
  type metadata accessor for DispatchWorkItem();
  OUTLINED_FUNCTION_804();
  *(_QWORD *)&v55[v73] = Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_83_0((uint64_t)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_callUUIDResolvingCroppedAspectRatio], 1);
  OUTLINED_FUNCTION_18_90(OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID);
  v74 = (uint64_t)&v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingSession];
  *(_OWORD *)v74 = 0u;
  *(_OWORD *)(v74 + 16) = 0u;
  v282 = v74;
  *(_QWORD *)(v74 + 32) = 0;
  OUTLINED_FUNCTION_455();
  v75 = *(uint64_t (**)(uint64_t, uint64_t))(v56 + 168);
  v76 = v75(v295, v56);
  v77 = specialized Set.count.getter(v76);
  OUTLINED_FUNCTION_53();
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter] = v77 == 1;
  v294 = (uint64_t)v55;
  v55[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode] = BYTE4(v289);
  v78 = OUTLINED_FUNCTION_239_2();
  OUTLINED_FUNCTION_374_1(v78, v79, v80);
  swift_storeEnumTagMultiPayload();
  UUID.init()();
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_22_6();
  OUTLINED_FUNCTION_514_1();
  v314 = 0;
  v312 = 0u;
  v313 = 0u;
  if (one-time initialization token for default != -1)
    swift_once();
  OUTLINED_FUNCTION_1();
  v81 = (id)static Colors.ParticipantGradients.default;
  v82 = OUTLINED_FUNCTION_830();
  OUTLINED_FUNCTION_77_0(v286, v83, v84, v82);
  v85 = v318;
  v86 = v319;
  OUTLINED_FUNCTION_80_20(v317, v318);
  v87 = (_QWORD *(*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD))v86[13];
  OUTLINED_FUNCTION_35_0();
  v88 = v87(&v308, v297, v296, v85, v86);
  if (v311)
  {
    OUTLINED_FUNCTION_682(&v308);
    Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v308);
  }
  else
  {
    OUTLINED_FUNCTION_411_1((uint64_t)v88, &demangling cache variable for type metadata for Conversation?);
  }
  v89 = v297;
  isUniquelyReferenced_nonNull_native = OUTLINED_FUNCTION_565_0();
  v284 = type metadata accessor for ParticipantContactDetailsCache();
  v91 = (objc_class *)v296;
  specialized static ParticipantContactDetailsCache.cache(for:)();
  OUTLINED_FUNCTION_417_2();
  v92 = v285;
  OUTLINED_FUNCTION_536(v292, v298, v93, v94, (uint64_t)v81, v95, v96, v97, v276, (uint64_t)v277, v278, v279, v280, v281, v282, (uint64_t)v283, v284, v285, v286,
    v287,
    v288,
    v289);
  outlined init with take of StagedCollaboration(v92, v294 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant, type metadata accessor for Participant);
  v98 = v75(isUniquelyReferenced_nonNull_native, (uint64_t)v91);
  v99 = specialized Set.count.getter(v98);
  if (!v99)
  {
    v105 = OUTLINED_FUNCTION_2_1();
LABEL_27:
    v298 = a21;
    MEMORY[0x1E0C80A78](v105);
    OUTLINED_FUNCTION_828();
    v123 = v293;
    *(_QWORD *)(v124 - 32) = v293;
    *(_QWORD *)(v124 - 24) = isUniquelyReferenced_nonNull_native;
    *(_QWORD *)(v124 - 16) = v89;
    *(_QWORD *)(v124 - 8) = v91;
    OUTLINED_FUNCTION_753((uint64_t)closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply, v125);
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_509_0(OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    v126 = OUTLINED_FUNCTION_530_0((uint64_t)v89);
    if (*((_QWORD *)&v313 + 1))
    {
      v127 = v314;
      __swift_project_boxed_opaque_existential_1(&v312, *((uint64_t *)&v313 + 1));
      v128 = OUTLINED_FUNCTION_7_16((uint64_t (*)(uint64_t, uint64_t))v127[19]);
      MEMORY[0x1E0C80A78](v128);
      *(&v278 - 4) = v123;
      *(&v278 - 3) = isUniquelyReferenced_nonNull_native;
      v276 = (uint64_t)v89;
      v277 = v91;
      _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFShySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5((void (*)(void **))closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply, (uint64_t)(&v278 - 6), v128);
      v130 = v129;
      v286 = v98;
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_520_1();
    }
    else
    {
      v286 = v98;
      OUTLINED_FUNCTION_358_2(v126, &demangling cache variable for type metadata for Conversation?);
      v130 = MEMORY[0x1E0DEE9D8];
    }
    v131 = v294;
    *(_QWORD *)(v294 + OBJC_IVAR____TtC15ConversationKit22ConversationController_otherInvitedParticipants) = v130;
    outlined init with copy of RadarReporting((uint64_t)v317, v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter);
    v132 = (_QWORD *)(v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call);
    *v132 = v89;
    v132[1] = v91;
    outlined init with copy of RadarReporting((uint64_t)v316, v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantMediaProviderCreator);
    outlined init with copy of RadarReporting((uint64_t)v315, v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantCaptionsProviderCreator);
    *(_BYTE *)(v131
             + OBJC_IVAR____TtC15ConversationKit22ConversationController_includeLocalParticipantInVisibleParticipants) = BYTE4(v276) & 1;
    OUTLINED_FUNCTION_414_1();
    v133 = v283;
    OUTLINED_FUNCTION_1();
    v134 = *v133;
    v135 = swift_unknownObjectRetain_n();
    v136 = specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v135, &v312, v134, 0, v295, (uint64_t (**)(_QWORD, _QWORD))v91);
    v137 = v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    *(_QWORD *)v137 = v136;
    *(_QWORD *)(v137 + 8) = v138;
    *(_BYTE *)(v137 + 16) = v139;
    *(_QWORD *)(v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker) = v287;
    v140 = (_QWORD *)(v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_defaults);
    *v140 = v298;
    v140[1] = &protocol witness table for Defaults;
    OUTLINED_FUNCTION_414_1();
    objc_opt_self();
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v141 = OUTLINED_FUNCTION_14_11();
    v142 = OUTLINED_FUNCTION_2_11(v141, sel_defaultCenter);
    v143 = objc_allocWithZone((Class)OUTLINED_FUNCTION_765());
    *(_QWORD *)(v131 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController) = OUTLINED_FUNCTION_473_1();
    outlined init with copy of FeatureEligibility?(v288, (uint64_t)&v308, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    if (v311)
    {
      OUTLINED_FUNCTION_410_1();
    }
    else
    {
      *((_QWORD *)&v313 + 1) = &type metadata for SingleDisplaySharingSession;
      v314 = &protocol witness table for SingleDisplaySharingSession;
      v144 = (_OWORD *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_559(v144);
      OUTLINED_FUNCTION_411_1(v145, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    }
    v146 = BYTE4(v289);
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_438_0((uint64_t)&v312, v147, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
    swift_endAccess();
    OUTLINED_FUNCTION_1();
    v148 = *(char *)(v137 + 16);
    LODWORD(v292) = v146;
    if (v148 < 0 && v146 == 1)
    {
      OUTLINED_FUNCTION_158_2();
      v149 = OUTLINED_FUNCTION_577();
      objc_msgSend((id)OUTLINED_FUNCTION_371(v149, v150), sel_isPreviewRunning);
      OUTLINED_FUNCTION_26_2();
    }
    v151 = (void *)v294;
    *(_BYTE *)(v294 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) = 0;

    v306.receiver = v151;
    v306.super_class = v277;
    v152 = objc_msgSendSuper2(&v306, sel_init);
    v153 = v318;
    v154 = v319;
    v155 = OUTLINED_FUNCTION_158_2();
    v156 = (_QWORD *(*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD))v154[13];
    v157 = (char *)v152;
    v158 = v155;
    v159 = v156(&v308, v297, v296, v153, v154);
    if (v311)
    {
      OUTLINED_FUNCTION_410_1();
      v158 = v157;
      ConversationController.updateIdentityClaimingAssociations(in:)();
      OUTLINED_FUNCTION_520_1();
    }
    else
    {
      OUTLINED_FUNCTION_411_1((uint64_t)v159, &demangling cache variable for type metadata for Conversation?);
    }
    v160 = v292;
    v161 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_475(v161);
    swift_unknownObjectWeakInit();
    v162 = (uint64_t *)&v157[OBJC_IVAR____TtC15ConversationKit22ConversationController_isRemoteParticipantEligibleForVideoMessagingBlock];
    OUTLINED_FUNCTION_2_0();
    v163 = *v162;
    *v162 = (uint64_t)_s15ConversationKit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalParticipantInVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSbycfU2_TA_0;
    v162[1] = (uint64_t)v158;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v163);
    if ((v160 - 1) <= 1)
    {
      v164 = OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_85_21(v164, (uint64_t)&v312);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantMediaProviderCreator);
      if (OUTLINED_FUNCTION_97())
      {
        v305 = 0;
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v304, (uint64_t)&v303);
        swift_unknownObjectWeakAssign();
        *((_QWORD *)&v313 + 1) = &type metadata for DefaultParticipantMediaProviderCreator;
        v314 = &protocol witness table for DefaultParticipantMediaProviderCreator;
        v165 = OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_742(v165);
        outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v303, v166);
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_209_3();
        swift_endAccess();
      }
      else
      {
        v304 = 0;
        v305 = 1;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v304, &demangling cache variable for type metadata for DefaultParticipantMediaProviderCreator?);
      }
    }
    v167 = OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_85_21(v167, (uint64_t)&v312);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantCaptionsProviderCreator);
    if (OUTLINED_FUNCTION_97())
    {
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v303, (uint64_t)v302);
      v302[1] = &protocol witness table for ConversationController;
      swift_unknownObjectWeakAssign();
      *((_QWORD *)&v313 + 1) = &type metadata for DefaultParticipantCaptionsProviderCreator;
      v314 = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
      v168 = OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_742(v168);
      outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)v302, v169);
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_209_3();
      swift_endAccess();
    }
    else
    {
      v303 = xmmword_1BD6491B0;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v303, (uint64_t *)&demangling cache variable for type metadata for DefaultParticipantCaptionsProviderCreator?);
    }
    static ParticipantContactDetailsCache.resetAll()();
    v170 = &v157[OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState];
    OUTLINED_FUNCTION_1();
    v294 = (uint64_t)v170;
    ConversationController.updateLocalParticipant(with:isChangingExternalCameraUsageOnIPad:)();
    ConversationController.lookupActiveConversation()();
    ConversationController.update(with:)((uint64_t)&v312);
    OUTLINED_FUNCTION_358_2(v171, &demangling cache variable for type metadata for Conversation?);
    v172 = &v157[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    OUTLINED_FUNCTION_2_0();
    v173 = *((_QWORD *)v172 + 3);
    v174 = *((_QWORD *)v172 + 4);
    v175 = OUTLINED_FUNCTION_157();
    __swift_mutable_project_boxed_opaque_existential_1(v175, v176);
    v177 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v174 + 56);
    v178 = v157;
    v177(v157, &protocol witness table for ConversationController, v173, v174);
    swift_endAccess();
    v179 = *(void (**)(char *, _UNKNOWN **))(**(_QWORD **)&v178[OBJC_IVAR____TtC15ConversationKit22ConversationController_idsCapabilitiesChecker]
                                                      + 176);
    v100 = v178;
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v179(v157, &protocol witness table for ConversationController);
    OUTLINED_FUNCTION_43();
    ConversationController.updateIDSStatusForVideoMessaging()();
    ConversationController.setupScreenSharingSessionCallbacks()();
    v180 = (void *)(*(uint64_t (**)(uint64_t))(v296 + 176))(v295);
    ConversationController.updateScreenSharingSession(with:)((uint64_t)v180);

    LOBYTE(v172) = ConversationController.updateIsUsingIPadExternalCamera()();
    v181 = (_BYTE *)(v100 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera);
    v182 = OUTLINED_FUNCTION_2_0();
    *v181 = v172 & 1;
    v89 = OUTLINED_FUNCTION_2_11(v182, sel_defaultCenter);
    v98 = (uint64_t)&selRef_associatedAppBundleIdentifier;
    v183 = OUTLINED_FUNCTION_16_93(v89, sel_addObserver_selector_name_object_, v100, (uint64_t)sel_handleLocalVideoPreviewFirstFrameArrived_, *MEMORY[0x1E0DBD800]);
    v186 = OUTLINED_FUNCTION_14_101((uint64_t)v183, v184, v185, (uint64_t)sel_handleLocalVideoAttributesChanged_, *MEMORY[0x1E0DBD7F0]);
    v189 = OUTLINED_FUNCTION_14_101((uint64_t)v186, v187, v188, (uint64_t)sel_handleSendingVideoChanged_, *MEMORY[0x1E0DBD510]);
    v192 = OUTLINED_FUNCTION_14_101((uint64_t)v189, v190, v191, (uint64_t)sel_handleAudioUplinkChange_, *MEMORY[0x1E0DBD520]);
    if (v160 == 1)
    {
      v195 = OUTLINED_FUNCTION_14_101((uint64_t)v192, v193, v194, (uint64_t)sel_handleCameraZoomBecameAvailable_, *MEMORY[0x1E0DBD818]);
      v198 = OUTLINED_FUNCTION_14_101((uint64_t)v195, v196, v197, (uint64_t)sel_handleCameraZoomBecameUnavailable_, *MEMORY[0x1E0DBD820]);
      v201 = OUTLINED_FUNCTION_14_101((uint64_t)v198, v199, v200, (uint64_t)sel_handlelocalCameraUIDDidChange_, *MEMORY[0x1E0DBD7A8]);
      v204 = OUTLINED_FUNCTION_14_101((uint64_t)v201, v202, v203, (uint64_t)sel_handleCameraCinematicFramingAvailabilityChanged_, *MEMORY[0x1E0DBD788]);
      v207 = OUTLINED_FUNCTION_14_101((uint64_t)v204, v205, v206, (uint64_t)sel_handleCameraCinematicFramingEnabledChanged_, *MEMORY[0x1E0DBD790]);
      v210 = OUTLINED_FUNCTION_14_101((uint64_t)v207, v208, v209, (uint64_t)sel_handleCameraReactionEffectsEnabledChanged_, *MEMORY[0x1E0DBD7F8]);
      v213 = OUTLINED_FUNCTION_14_101((uint64_t)v210, v211, v212, (uint64_t)sel_handleCameraStudioLightEnabledChanged_, *MEMORY[0x1E0DBD808]);
      v216 = OUTLINED_FUNCTION_14_101((uint64_t)v213, v214, v215, (uint64_t)sel_handleCameraBlurEnabledChanged_, *MEMORY[0x1E0DBD780]);
      v219 = OUTLINED_FUNCTION_14_101((uint64_t)v216, v217, v218, (uint64_t)sel_handleCameraListDidChange_, *MEMORY[0x1E0DBD7C8]);
      v192 = OUTLINED_FUNCTION_14_101((uint64_t)v219, v220, v221, (uint64_t)sel_handleSystemPreferredCameraChanged_, *MEMORY[0x1E0DBD810]);
    }
    v222 = OUTLINED_FUNCTION_14_101((uint64_t)v192, v193, v194, (uint64_t)sel_handleScreenSharingDidChange_, *MEMORY[0x1E0DBD518]);
    v225 = OUTLINED_FUNCTION_14_101((uint64_t)v222, v223, v224, (uint64_t)sel_handleVideoCallStatusDidChange_, *MEMORY[0x1E0DBD4F0]);
    v228 = OUTLINED_FUNCTION_14_101((uint64_t)v225, v226, v227, (uint64_t)sel_handleCallStatusDidChange_, *MEMORY[0x1E0DBD4A0]);
    v231 = OUTLINED_FUNCTION_14_101((uint64_t)v228, v229, v230, (uint64_t)sel_handleCallConnected_, *MEMORY[0x1E0DBD488]);
    v234 = OUTLINED_FUNCTION_14_101((uint64_t)v231, v232, v233, (uint64_t)sel_handleCallStartedConnecting_, *MEMORY[0x1E0DBD498]);
    if (!v160)
      OUTLINED_FUNCTION_14_101((uint64_t)v234, v235, v236, (uint64_t)sel_handleBluetoothAudioFormatChanged_, *MEMORY[0x1E0DBD478]);
    OUTLINED_FUNCTION_16_93(v89, sel_addObserver_selector_name_object_, v100, (uint64_t)sel_handleLocalPreviewChanged_, *MEMORY[0x1E0DBD7B8]);
    OUTLINED_FUNCTION_16_93(v89, sel_addObserver_selector_name_object_, v100, (uint64_t)sel_handleLocalPreviewChanged_, *MEMORY[0x1E0DBD7B0]);
    v237 = OUTLINED_FUNCTION_16_93(v89, sel_addObserver_selector_name_object_, v100, (uint64_t)sel_handleLocalPreviewChanged_, *MEMORY[0x1E0DBD7C0]);
    v240 = OUTLINED_FUNCTION_14_101((uint64_t)v237, v238, v239, (uint64_t)sel_handleHoldMusicDidChange_, *MEMORY[0x1E0DBD4B0]);
    OUTLINED_FUNCTION_14_101((uint64_t)v240, v241, v242, (uint64_t)sel_handleScreenSharingAttributesChanged_, *MEMORY[0x1E0DBD540]);
    if (static Platform.current.getter() != 3)
      goto LABEL_53;
    v101 = sel_handleWindowDidFinishResize_;
    v243 = one-time initialization token for didEndWindowLiveResizeNotification;
    v81 = (id)v100;
    if (v243 == -1)
    {
LABEL_52:
      OUTLINED_FUNCTION_16_93(v89, *(SEL *)(v98 + 856), (uint64_t)v81, (uint64_t)v101, static Strings.Notifications.didEndWindowLiveResizeNotification);

LABEL_53:
      OUTLINED_FUNCTION_16_93(v89, *(SEL *)(v98 + 856), v100, (uint64_t)sel_handleScreenConnectionDidUpdate_, *MEMORY[0x1E0DC5348]);
      OUTLINED_FUNCTION_16_93(v89, *(SEL *)(v98 + 856), v100, (uint64_t)sel_handleScreenConnectionDidUpdate_, *MEMORY[0x1E0DC5350]);
      OUTLINED_FUNCTION_16_93(v89, *(SEL *)(v98 + 856), v100, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD408]);
      OUTLINED_FUNCTION_16_93(v89, *(SEL *)(v98 + 856), v100, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD400]);
      OUTLINED_FUNCTION_16_93(v89, *(SEL *)(v98 + 856), v100, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD410]);
      OUTLINED_FUNCTION_16_93(v89, *(SEL *)(v98 + 856), v100, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD418]);
      OUTLINED_FUNCTION_16_93(v89, *(SEL *)(v98 + 856), v100, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3E0]);
      OUTLINED_FUNCTION_16_93(v89, *(SEL *)(v98 + 856), v100, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3E8]);
      OUTLINED_FUNCTION_16_93(v89, *(SEL *)(v98 + 856), v100, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3F0]);
      OUTLINED_FUNCTION_16_93(v89, *(SEL *)(v98 + 856), v100, (uint64_t)sel_handlePTTCallStatusDidChange_, *MEMORY[0x1E0DBD3F8]);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v244 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v245 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v245 + 16) = xmmword_1BD645390;
      v246 = v100 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID;
      OUTLINED_FUNCTION_1();
      v247 = v246;
      v248 = v278;
      outlined init with copy of FeatureEligibility?(v247, v278, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      OUTLINED_FUNCTION_818();
      v250 = v249;
      v252 = v251;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v248, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v253 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v245 + 56) = MEMORY[0x1E0DEA968];
      v254 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v245 + 64) = v254;
      *(_QWORD *)(v245 + 32) = v250;
      *(_QWORD *)(v245 + 40) = v252;
      v255 = (_QWORD *)(v100 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
      OUTLINED_FUNCTION_1();
      *(_QWORD *)&v300 = *v255;
      OUTLINED_FUNCTION_616_0();
      v256 = OUTLINED_FUNCTION_427_0();
      *(_QWORD *)(v245 + 96) = v253;
      *(_QWORD *)(v245 + 104) = v254;
      *(_QWORD *)(v245 + 72) = v256;
      *(_QWORD *)(v245 + 80) = v257;
      v258 = *(_BYTE *)(v294 + 16);
      v300 = *(_OWORD *)v294;
      v301 = v258;
      v259 = OUTLINED_FUNCTION_427_0();
      *(_QWORD *)(v245 + 136) = v253;
      *(_QWORD *)(v245 + 144) = v254;
      *(_QWORD *)(v245 + 112) = v259;
      *(_QWORD *)(v245 + 120) = v260;
      LOBYTE(v300) = v292;
      v261 = OUTLINED_FUNCTION_427_0();
      *(_QWORD *)(v245 + 176) = v253;
      *(_QWORD *)(v245 + 184) = v254;
      *(_QWORD *)(v245 + 152) = v261;
      *(_QWORD *)(v245 + 160) = v262;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_527_0();
      OUTLINED_FUNCTION_30_4();
      v263 = OUTLINED_FUNCTION_15();
      v296 = xmmword_1BD6441D0;
      *(_OWORD *)(v263 + 16) = xmmword_1BD6441D0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      v264 = (__n128 *)OUTLINED_FUNCTION_290_5();
      OUTLINED_FUNCTION_763(v264);
      v265 = v100 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_71_1(v265, v266, type metadata accessor for Participant);
      OUTLINED_FUNCTION_1();
      v299[0] = v244;
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit11ParticipantVGG_SSs5NeverOTg506_sSi15f5Kit11h34VSSIgyno_Si6offset_AC7elementtSSs5I355OIegnrzr_TR04_s15a103Kit0A10ControllerC10activeCall10callCenter31participantMediaProviderCreator0h8CaptionsjK044includeLocalC217InVisibleParticipants20screenSharingSession4mode22idsCapabilitiesChecker8defaultsAcA0E0_p_AA0egJ0_pAA0oijK0_pAA0oljK0_pSbAA06ScreentuJ0_pSgAC12ControlsModeOAA015IDSCapabilitiesY0CAA08DefaultsJ0_ptcfcSSSi_AA0O0VtXEfU3_Tf3nnnpf_nTf1cn_n();
      v268 = v267;
      OUTLINED_FUNCTION_27();
      v299[0] = v268;
      v269 = OUTLINED_FUNCTION_31_11();
      OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [String] and conformance [A]);
      BidirectionalCollection<>.joined(separator:)();
      OUTLINED_FUNCTION_286_4();
      OUTLINED_FUNCTION_2_1();
      v299[0] = v299;
      v299[1] = v269;
      v270 = OUTLINED_FUNCTION_489_1();
      *(_QWORD *)(v263 + 56) = v253;
      *(_QWORD *)(v263 + 64) = v254;
      *(_QWORD *)(v263 + 32) = v270;
      *(_QWORD *)(v263 + 40) = v271;
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_460();
      OUTLINED_FUNCTION_58_1();
      ConversationController.fetchExistingScreenSharingAttributes()();
      if (*(_BYTE *)(v100 + OBJC_IVAR____TtC15ConversationKit22ConversationController_keepsPreviewActive) == 1)
      {
        v272 = v318;
        v273 = v319;
        OUTLINED_FUNCTION_184(v317);
        v274 = (void *)OUTLINED_FUNCTION_52(v272, (uint64_t (*)(uint64_t, uint64_t))v273[10]);
        objc_msgSend(v274, sel_startPreview);
        swift_release();

        v89 = v274;
      }
      else
      {
        swift_release();
      }
      v275 = v293;

      OUTLINED_FUNCTION_10();
      swift_release();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v288, &demangling cache variable for type metadata for ScreenSharingSessionProvider?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v315);
      OUTLINED_FUNCTION_103();
      (*(void (**)(uint64_t, uint64_t))(v290 + 8))(v275, v291);
      OUTLINED_FUNCTION_100_2();
      OUTLINED_FUNCTION_52_1();
      return;
    }
LABEL_60:
    swift_once();
    goto LABEL_52;
  }
  v100 = v99;
  v307[0] = MEMORY[0x1E0DEE9D8];
  v101 = (char *)v307;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v98 & 0xC000000000000001) != 0)
  {
    v102 = OUTLINED_FUNCTION_596();
    v104 = 1;
  }
  else
  {
    v102 = specialized _NativeSet.startIndex.getter(v98);
    v104 = v106 & 1;
  }
  v308 = (_QWORD *)v102;
  v309 = v103;
  v310 = v104;
  if (v100 < 0)
  {
    __break(1u);
    goto LABEL_60;
  }
  v107 = v98 & 0xFFFFFFFFFFFFFF8;
  if (v98 < 0)
    v107 = v98;
  v298 = v107;
  while (1)
  {
    v109 = (uint64_t)v308;
    v108 = v309;
    v110 = v310;
    v111 = OUTLINED_FUNCTION_807();
    specialized Set.subscript.getter(v111, v112, v113, v114);
    v116 = v115;
    if (!(id)TUNormalizedHandleForTUHandle())
      break;

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    v117 = *(_QWORD *)(v307[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    OUTLINED_FUNCTION_311_0();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if ((v98 & 0xC000000000000001) != 0)
    {
      if ((v110 & 1) == 0)
        goto LABEL_62;
      if (__CocoaSet.Index.handleBitPattern.getter())
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      else
        isUniquelyReferenced_nonNull_native = 1;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
      Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      OUTLINED_FUNCTION_653_0();
    }
    else
    {
      v118 = OUTLINED_FUNCTION_807();
      specialized _NativeSet.index(after:)(v118, v119, v120, v121);
      OUTLINED_FUNCTION_582_0();
      isUniquelyReferenced_nonNull_native = v122;
      outlined consume of Set<TUHandle>.Index._Variant(v109, v108, v110);
      v308 = v307;
      v309 = v117;
      v310 = isUniquelyReferenced_nonNull_native & 1;
    }
    if (!--v100)
    {
      outlined consume of Set<TUHandle>.Index._Variant((uint64_t)v308, v309, v310);
      v105 = OUTLINED_FUNCTION_2_1();
      v89 = v297;
      v91 = (objc_class *)v296;
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_62:
  __break(1u);
}

BOOL partial apply for closure #1 in ConversationController.requestScreenSharingSession(for:)(id *a1)
{
  uint64_t v1;

  return closure #1 in ConversationController.requestScreenSharingSession(for:)(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BD5855CC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    OUTLINED_FUNCTION_53_2();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.shareableLink(completionHandler:)(void *a1, void *a2)
{
  uint64_t v2;

  closure #1 in ConversationController.shareableLink(completionHandler:)(a1, a2, *(void (**)(void *, void *))(v2 + 16), *(_QWORD *)(v2 + 24), (_QWORD *)(v2 + 32));
}

uint64_t sub_1BD585608()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD58562C()
{
  OUTLINED_FUNCTION_285();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.updateLayoutStyle(_:)()
{
  uint64_t v0;

  return closure #1 in ConversationController.updateLayoutStyle(_:)(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

void partial apply for closure #2 in ConversationController.update(presentationContexts:forceUpdate:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  closure #2 in ConversationController.update(presentationContexts:forceUpdate:)(a1, *(_QWORD **)(v2 + 16), a2);
}

void partial apply for closure #1 in ConversationController.startRecordingLocalVideo()(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  closure #1 in ConversationController.startRecordingLocalVideo()(a1, a2, a3, v3);
}

void partial apply for closure #1 in ConversationController.captureMoment(for:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  closure #1 in ConversationController.captureMoment(for:)(a1, a2, a3, v3);
}

uint64_t sub_1BD585680()
{
  uint64_t v0;

  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_76();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.resetRecordingVideoMessage(completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_61_5(v3);
  *v4 = v1;
  v4[1] = partial apply for closure #1 in ConversationControlsManager.updateForegroundCollaborationState();
  v5 = OUTLINED_FUNCTION_499();
  return closure #1 in ConversationController.resetRecordingVideoMessage(completion:)(v5, v6, v7, v8, v9, v2);
}

uint64_t sub_1BD58571C()
{
  return objectdestroy_22Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t partial apply for closure #1 in ConversationController.saveRecordedVideoMessage()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ConversationController.saveRecordedVideoMessage()(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in ConversationController.discardRecordedVideoMessage()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ConversationController.discardRecordedVideoMessage()(v2, v3, v4, v5);
}

uint64_t objectdestroy_26Tm()
{
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.pauseRecordingVideoMessage()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ConversationController.pauseRecordingVideoMessage()(v2, v3, v4, v5);
}

uint64_t sub_1BD585830()
{
  return objectdestroy_22Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t partial apply for closure #1 in ConversationController.startRecordingVideoMessage()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ConversationController.startRecordingVideoMessage()(v2, v3, v4, v5);
}

uint64_t sub_1BD585888()
{
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_109_8();
  swift_release();
  OUTLINED_FUNCTION_712();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v0[6];
  v3 = v0[7];
  v4 = v0[8];
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_61_5(v5);
  *v6 = v1;
  v6[1] = partial apply for closure #1 in ConversationControlsManager.updateForegroundCollaborationState();
  v7 = OUTLINED_FUNCTION_499();
  return closure #1 in ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)(v7, v8, v9, v10, v11, v2, v3, v4);
}

uint64_t sub_1BD585940()
{
  return objectdestroy_22Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t partial apply for closure #1 in ConversationController.stopRecordingVideoMessage()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ConversationController.stopRecordingVideoMessage()(v2, v3, v4, v5);
}

void partial apply for closure #1 in ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()()
{
  uint64_t v0;

  closure #1 in ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()(v0);
}

void partial apply for closure #6 in ConversationController.setupScreenSharingSessionCallbacks()()
{
  closure #3 in ConversationController.setupScreenSharingSessionCallbacks()();
}

void partial apply for closure #5 in ConversationController.setupScreenSharingSessionCallbacks()()
{
  OUTLINED_FUNCTION_681();
}

void partial apply for closure #2 in ConversationController.setupScreenSharingSessionCallbacks()(uint64_t a1)
{
  uint64_t v1;

  closure #2 in ConversationController.setupScreenSharingSessionCallbacks()(a1, v1);
}

uint64_t sub_1BD5859D4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.deinit()
{
  uint64_t v0;

  closure #1 in ConversationController.deinit((_QWORD *)(v0 + 16));
}

void partial apply for closure #1 in ConversationController.unregisterForMoments()()
{
  uint64_t v0;

  closure #1 in ConversationController.unregisterForMoments()(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t partial apply for closure #2 in ConversationController.updateBuzzedMember(_:)()
{
  return partial apply for closure #2 in ConversationController.updateBuzzedMember(_:)(type metadata accessor for Participant);
}

void partial apply for closure #1 in ConversationController.registerForMoments()()
{
  uint64_t v0;

  closure #1 in ConversationController.registerForMoments()(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD585A30()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.endRequest(for:)(void *a1)
{
  closure #1 in ConversationController.endRequest(for:)(a1);
}

uint64_t sub_1BD585A54()
{
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:)()
{
  uint64_t *v0;

  closure #1 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BD585A80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  OUTLINED_FUNCTION_712();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:)()
{
  uint64_t v0;

  return closure #2 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(*(_BYTE **)(v0 + 16), (_QWORD *)(v0 + 24), *(void (**)(void))(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1BD585AD0()
{
  return objectdestroy_22Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_22Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

void partial apply for closure #3 in ConversationController.callCenter(_:oneToOneModeChangedFor:)()
{
  uint64_t v0;

  closure #3 in ConversationController.callCenter(_:oneToOneModeChangedFor:)(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BD585B0C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_39_0(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.scheduleResetVideoInfo(for:after:)()
{
  return partial apply for closure #2 in ConversationController.updateBuzzedMember(_:)((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t partial apply for closure #1 in ConversationController.callCenter(_:stateChangedFor:)()
{
  return static UUID.== infix(_:_:)() & 1;
}

void specialized ConversationController.migrate(to:with:isUpgrade:)(_QWORD *a1, uint64_t a2, int a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int EnumTagSinglePayload;
  void *v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t ObjectType;
  uint64_t (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v78;
  int v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  char *v93;
  void *v94;
  id v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  uint64_t v101;
  void (*v102)(__int128 *__return_ptr);
  id v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  id v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t, uint64_t);
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  char *v130;
  NSObject *v131;
  os_log_type_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t (*v139)();
  void *v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  const char *v147;
  NSObject *v148;
  os_log_type_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  NSObject *v155;
  os_log_type_t v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t (*v166)();
  void *v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  uint64_t v189;
  void *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void *v209;
  uint64_t v210;
  void *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  os_log_type_t v216;
  int v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  unint64_t v224;
  void *v225;
  uint64_t (*v226)();
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  id v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  _QWORD *v252;
  uint64_t v253;
  uint64_t v254;
  __int128 v255;
  uint64_t (*v256)(uint64_t);
  void *v257;
  uint64_t (*v258)();
  uint64_t v259;
  uint64_t v260;
  __int128 v261;
  uint64_t v262;
  uint64_t v263[3];
  uint64_t v264;
  uint64_t v265;

  HIDWORD(v243) = a3;
  v253 = a2;
  v6 = type metadata accessor for DispatchWorkItemFlags();
  v240 = *(_QWORD *)(v6 - 8);
  v241 = v6;
  MEMORY[0x1E0C80A78](v6);
  v239 = (uint64_t)&v232 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS();
  v237 = *(_QWORD *)(v8 - 8);
  v238 = v8;
  MEMORY[0x1E0C80A78](v8);
  v236 = (uint64_t)&v232 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID();
  v249 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v247 = (char *)&v232 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v248 = (char *)&v232 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v232 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v17);
  v242 = (uint64_t)&v232 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v251 = (unint64_t)&v232 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v232 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v232 - v25;
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v254 = v27;
  v244 = a4;
  v28 = (uint64_t)&a4[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID];
  swift_beginAccess();
  v235 = v28;
  outlined init with copy of FeatureEligibility?(v28, (uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v29 = a1[3];
  v30 = a1[4];
  v252 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v10);
  v31 = (uint64_t)&v16[*(int *)(v14 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v26, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)v23, v31, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v10);
  v250 = v10;
  if (EnumTagSinglePayload != 1)
  {
    v35 = v251;
    outlined init with copy of FeatureEligibility?((uint64_t)v16, v251, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v31, 1, v10) != 1)
    {
      v51 = v248;
      v50 = v249;
      (*(void (**)(char *, uint64_t, uint64_t))(v249 + 32))(v248, v31, v10);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      v52 = dispatch thunk of static Equatable.== infix(_:_:)();
      v53 = *(void (**)(char *, uint64_t))(v50 + 8);
      v53(v51, v10);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v53((char *)v35, v10);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v34 = v252;
      v33 = (void *)v253;
      if ((v52 & 1) == 0)
        goto LABEL_7;
      goto LABEL_13;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(unint64_t, uint64_t))(v249 + 8))(v35, v10);
LABEL_6:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    v34 = v252;
    v33 = (void *)v253;
    goto LABEL_7;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v31, 1, v10) != 1)
    goto LABEL_6;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v34 = v252;
  v33 = (void *)v253;
LABEL_13:
  v54 = &v244[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  v55 = *((_QWORD *)v54 + 1);
  ObjectType = swift_getObjectType();
  v57 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 48);
  swift_unknownObjectRetain();
  v58 = v57(ObjectType, v55);
  v60 = v59;
  swift_unknownObjectRelease();
  v61 = objc_msgSend(v33, sel_callUUID);
  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v64 = v63;

  if (v58 == v62 && v60 == v64)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
  v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v250;
  if ((v66 & 1) != 0)
  {
LABEL_20:
    v67 = *((_QWORD *)v54 + 1);
    v68 = swift_getObjectType();
    v69 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 48);
    swift_unknownObjectRetain();
    v70 = v69(v68, v67);
    v72 = v71;
    swift_unknownObjectRelease();
    v73 = objc_msgSend(v33, sel_callUUID);
    v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v76 = v75;

    if (v70 == v74 && v72 == v76)
    {
      swift_bridgeObjectRelease_n();
      v79 = 0;
    }
    else
    {
      v78 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v79 = v78 ^ 1;
    }
    v128 = v242;
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v129 = type metadata accessor for Logger();
    __swift_project_value_buffer(v129, (uint64_t)&static Logger.conversationController);
    outlined init with copy of RadarReporting((uint64_t)v34, (uint64_t)&v255);
    v130 = v244;
    v131 = Logger.logObject.getter();
    v132 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v131, v132))
    {
      v133 = swift_slowAlloc();
      LODWORD(v253) = v79;
      v134 = v133;
      v254 = swift_slowAlloc();
      v263[0] = v254;
      *(_DWORD *)v134 = 136315650;
      outlined init with copy of FeatureEligibility?(v235, v128, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      specialized >> prefix<A>(_:)(v128);
      v136 = v135;
      v138 = v137;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v128, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v136, v138, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v134 + 12) = 2080;
      v140 = v257;
      v139 = v258;
      __swift_project_boxed_opaque_existential_1(&v255, (uint64_t)v257);
      (*((void (**)(void *, uint64_t (*)()))v139 + 1))(v140, v139);
      __swift_storeEnumTagSinglePayload(v128, 0, 1, v250);
      specialized >> prefix<A>(_:)(v128);
      v142 = v141;
      v144 = v143;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v128, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v142, v144, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
      *(_WORD *)(v134 + 22) = 2080;
      LOBYTE(v261) = v253 & 1;
      v145 = String.init<A>(reflecting:)();
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v145, v146, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v147 = "Unable to migrate from conversation uuid %s to %s. Calls differ: %s.";
      v148 = v131;
      v149 = v132;
LABEL_73:
      _os_log_impl(&dword_1BD004000, v148, v149, v147, (uint8_t *)v134, 0x20u);
      v231 = v254;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v231, -1, -1);
      MEMORY[0x1C3B751B8](v134, -1, -1);
LABEL_76:

      return;
    }
    goto LABEL_75;
  }
LABEL_7:
  if ((v243 & 0x100000000) != 0)
    goto LABEL_56;
  if (one-time initialization token for conversationController != -1)
    swift_once();
  v36 = type metadata accessor for Logger();
  v37 = __swift_project_value_buffer(v36, (uint64_t)&static Logger.conversationController);
  v38 = v244;
  v233 = v37;
  v39 = Logger.logObject.getter();
  v40 = static os_log_type_t.default.getter();
  v41 = os_log_type_enabled(v39, v40);
  v234 = v38;
  if (v41)
  {
    v42 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    v263[0] = v43;
    *(_DWORD *)v42 = 136315394;
    LOBYTE(v255) = v38[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    v44 = String.init<A>(reflecting:)();
    *(_QWORD *)&v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    v46 = &v38[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    swift_beginAccess();
    v255 = *(_OWORD *)v46;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v47 = String.init<A>(reflecting:)();
    *(_QWORD *)&v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v48, v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v39, v40, "%s Going to migrate from oldCall: %s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    v49 = v43;
    v33 = (void *)v253;
    MEMORY[0x1C3B751B8](v49, -1, -1);
    MEMORY[0x1C3B751B8](v42, -1, -1);

  }
  else
  {

  }
  swift_unknownObjectRetain_n();
  v80 = Logger.logObject.getter();
  v81 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v80, v81))
  {
    v82 = (uint8_t *)swift_slowAlloc();
    v83 = swift_slowAlloc();
    v263[0] = v83;
    *(_DWORD *)v82 = 136315138;
    *(_QWORD *)&v255 = v33;
    *((_QWORD *)&v255 + 1) = v254;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v84 = String.init<A>(reflecting:)();
    *(_QWORD *)&v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v85, v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v80, v81, "... to newCall: %s", v82, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v83, -1, -1);
    MEMORY[0x1C3B751B8](v82, -1, -1);

  }
  else
  {

  }
  v86 = &v234[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
  swift_beginAccess();
  v87 = *((_QWORD *)v86 + 3);
  v88 = *((_QWORD *)v86 + 4);
  v253 = (uint64_t)v86;
  v89 = __swift_project_boxed_opaque_existential_1(v86, v87);
  v90 = *(_QWORD *)(v87 - 8);
  v91 = MEMORY[0x1E0C80A78](v89);
  v93 = (char *)&v232 - v92;
  (*(void (**)(char *, __n128))(v90 + 16))((char *)&v232 - v92, v91);
  v94 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v88 + 24))(v87, v88);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v93, v87);
  v95 = objc_msgSend(v94, sel_currentVideoCalls);
  swift_unknownObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v96 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v96 >> 62))
  {
    v97 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v97)
      goto LABEL_31;
LABEL_70:
    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
  swift_bridgeObjectRetain();
  v97 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v97)
    goto LABEL_70;
LABEL_31:
  if (v97 < 1)
  {
    __break(1u);
    return;
  }
  v245 = v97;
  v246 = 0;
  v98 = 0;
  v251 = v96 & 0xC000000000000001;
  do
  {
    if (v251)
      v99 = (id)MEMORY[0x1C3B73D18](v98, v96);
    else
      v99 = *(id *)(v96 + 8 * v98 + 32);
    v100 = v99;
    outlined init with copy of RadarReporting(v253, (uint64_t)v263);
    v101 = v265;
    __swift_project_boxed_opaque_existential_1(v263, v264);
    v102 = *(void (**)(__int128 *__return_ptr))(v101 + 104);
    v103 = v100;
    v102(&v255);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v263);
    outlined init with copy of FeatureEligibility?((uint64_t)&v255, (uint64_t)&v261, &demangling cache variable for type metadata for Conversation?);
    if (v262)
    {
      v104 = v96;
      outlined init with take of Notice(&v261, (uint64_t)v263);
      v105 = v264;
      v106 = v265;
      __swift_project_boxed_opaque_existential_1(v263, v264);
      v107 = v248;
      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v105, v106);
      v108 = v252[3];
      v109 = v252[4];
      __swift_project_boxed_opaque_existential_1(v252, v108);
      v110 = v247;
      (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v108, v109);
      v111 = static UUID.== infix(_:_:)();
      v112 = v250;
      v113 = *(void (**)(char *, uint64_t))(v249 + 8);
      v113(v110, v250);
      v113(v107, v112);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v255, &demangling cache variable for type metadata for Conversation?);
      if ((v111 & 1) != 0)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v263);
        v246 = v103;
      }
      else
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v263);
      }
      v96 = v104;
      v97 = v245;
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v255, &demangling cache variable for type metadata for Conversation?);

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v261, &demangling cache variable for type metadata for Conversation?);
    }
    ++v98;
  }
  while (v97 != v98);
  swift_bridgeObjectRelease();
  v34 = v252;
  if (!v246)
  {
LABEL_71:
    outlined init with copy of RadarReporting((uint64_t)v34, (uint64_t)&v255);
    v130 = v234;
    v131 = Logger.logObject.getter();
    v216 = static os_log_type_t.default.getter();
    v217 = v216;
    if (os_log_type_enabled(v131, v216))
    {
      v134 = swift_slowAlloc();
      v254 = swift_slowAlloc();
      v263[0] = v254;
      *(_DWORD *)v134 = 136315650;
      LODWORD(v253) = v217;
      LOBYTE(v261) = v130[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
      v218 = String.init<A>(reflecting:)();
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v218, v219, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v134 + 12) = 2080;
      v220 = v242;
      outlined init with copy of FeatureEligibility?(v235, v242, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      specialized >> prefix<A>(_:)(v220);
      v222 = v221;
      v224 = v223;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v220, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v222, v224, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v134 + 22) = 2080;
      v225 = v257;
      v226 = v258;
      __swift_project_boxed_opaque_existential_1(&v255, (uint64_t)v257);
      (*((void (**)(void *, uint64_t (*)()))v226 + 1))(v225, v226);
      __swift_storeEnumTagSinglePayload(v220, 0, 1, v250);
      specialized >> prefix<A>(_:)(v220);
      v228 = v227;
      v230 = v229;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v220, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v228, v230, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
      v147 = "%s Unable to migration from conversation uuid %s to %s because cannot find call with same backing conversation";
      v148 = v131;
      v149 = v253;
      goto LABEL_73;
    }

LABEL_75:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
    goto LABEL_76;
  }
  v114 = v246;
  v115 = (uint64_t)v234;
  v116 = &v234[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  v117 = *((_QWORD *)v116 + 1);
  v118 = swift_getObjectType();
  v119 = *(uint64_t (**)(uint64_t, uint64_t))(v117 + 184);
  v120 = v114;
  swift_unknownObjectRetain();
  LODWORD(v117) = v119(v118, v117);
  swift_unknownObjectRelease();
  if ((_DWORD)v117 != 6)
  {
    type metadata accessor for PlaceholderCall();
    if (!swift_dynamicCastClass())
    {
      v121 = *((_QWORD *)v116 + 1);
      v122 = swift_getObjectType();
      v123 = *(uint64_t (**)(uint64_t, uint64_t))(v121 + 352);
      swift_unknownObjectRetain();
      LOBYTE(v121) = v123(v122, v121);
      swift_unknownObjectRelease();
      objc_msgSend(v120, sel_setUplinkMuted_, v121 & 1);
    }
  }
  v124 = v254;
  *(_QWORD *)v116 = v120;
  *((_QWORD *)v116 + 1) = v124;
  swift_unknownObjectRelease();
  v125 = *((_QWORD *)v116 + 1);
  v126 = swift_getObjectType();
  v127 = *(uint64_t (**)(uint64_t, uint64_t))(v125 + 304);
  swift_unknownObjectRetain();
  LOBYTE(v125) = v127(v126, v125);
  swift_unknownObjectRelease();
  if ((v125 & 1) != 0)
    ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
  else
    ConversationController.stopLocalVideo()();
  v10 = v250;
  v150 = *((_QWORD *)v116 + 1);
  v151 = swift_getObjectType();
  v152 = swift_unknownObjectRetain();
  specialized ConversationController.updateAudioState(with:)(v152, v115, v151, v150);
  swift_unknownObjectRelease();

LABEL_56:
  if (one-time initialization token for conversationController != -1)
    swift_once();
  v153 = type metadata accessor for Logger();
  __swift_project_value_buffer(v153, (uint64_t)&static Logger.conversationController);
  outlined init with copy of RadarReporting((uint64_t)v34, (uint64_t)&v255);
  v154 = v244;
  v155 = Logger.logObject.getter();
  v156 = static os_log_type_t.default.getter();
  v157 = v156;
  if (os_log_type_enabled(v155, v156))
  {
    v158 = swift_slowAlloc();
    v254 = swift_slowAlloc();
    v263[0] = v254;
    *(_DWORD *)v158 = 136315650;
    LODWORD(v253) = v157;
    LOBYTE(v260) = v154[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    v159 = String.init<A>(reflecting:)();
    v260 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v159, v160, v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v158 + 12) = 2080;
    v161 = v242;
    outlined init with copy of FeatureEligibility?(v235, v242, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    specialized >> prefix<A>(_:)(v161);
    v163 = v162;
    v165 = v164;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v161, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v260 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v163, v165, v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v158 + 22) = 2080;
    v167 = v257;
    v166 = v258;
    __swift_project_boxed_opaque_existential_1(&v255, (uint64_t)v257);
    v168 = v167;
    v34 = v252;
    (*((void (**)(void *, uint64_t (*)()))v166 + 1))(v168, v166);
    __swift_storeEnumTagSinglePayload(v161, 0, 1, v250);
    specialized >> prefix<A>(_:)(v161);
    v170 = v169;
    v172 = v171;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v161, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v260 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v170, v172, v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
    _os_log_impl(&dword_1BD004000, v155, (os_log_type_t)v253, "%s Migrating conversation UUID from %s to %s", (uint8_t *)v158, 0x20u);
    v173 = v254;
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v173, -1, -1);
    v174 = v158;
    v10 = v250;
    MEMORY[0x1C3B751B8](v174, -1, -1);

  }
  else
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
    v161 = v242;
  }
  v175 = v34[3];
  v176 = v34[4];
  __swift_project_boxed_opaque_existential_1(v34, v175);
  (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v175, v176);
  __swift_storeEnumTagSinglePayload(v161, 0, 1, v10);
  ConversationController.conversationUUID.setter(v161);
  v177 = v34[3];
  v178 = v34[4];
  __swift_project_boxed_opaque_existential_1(v34, v177);
  v179 = (*(uint64_t (**)(uint64_t, uint64_t))(v178 + 56))(v177, v178);
  ConversationController.conversationState.setter(v179);
  v180 = &v154[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  swift_beginAccess();
  v181 = *(_QWORD *)(*(_QWORD *)v180 + 16);
  ConversationController.removeAllParticipants()();
  outlined init with copy of RadarReporting((uint64_t)v34, (uint64_t)v263);
  v182 = MEMORY[0x1E0C809B0];
  v183 = MEMORY[0x1E0DEE9D8];
  if ((v243 & 0x100000000) != 0)
  {
    v184 = v264;
    v185 = v265;
    __swift_project_boxed_opaque_existential_1(v263, v264);
    v186 = (*(uint64_t (**)(uint64_t, uint64_t))(v185 + 88))(v184, v185);
    v187 = specialized Set.count.getter(v186);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v263);
    if (v181 != v187)
      goto LABEL_66;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v263);
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v188 = (void *)static OS_dispatch_queue.main.getter();
  v189 = swift_allocObject();
  *(_QWORD *)(v189 + 16) = v154;
  v258 = closure #1 in ConversationController.migrate(to:with:isUpgrade:)partial apply;
  v259 = v189;
  *(_QWORD *)&v255 = v182;
  *((_QWORD *)&v255 + 1) = 1107296256;
  v256 = thunk for @escaping @callee_guaranteed () -> ();
  v257 = &block_descriptor_967;
  v190 = _Block_copy(&v255);
  v191 = v154;
  swift_release();
  v192 = v236;
  static DispatchQoS.unspecified.getter();
  *(_QWORD *)&v255 = v183;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v193 = v183;
  v194 = v239;
  v195 = v241;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v192, v194, v190);
  _Block_release(v190);

  v196 = v194;
  v183 = v193;
  v182 = MEMORY[0x1E0C809B0];
  (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v196, v195);
  (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v192, v238);
LABEL_66:
  v197 = v252;
  ConversationController.createNewParticipants(with:)(v252);
  ConversationController.updateRemoteParticipantsStates(with:)(v197);
  ConversationController.updateRemoteParticipantsNames(with:)(v197);
  ConversationController.updateLocalMemberAuthorizedToChangeGroupMembership(with:)(v197);
  v198 = ConversationController.isOneToOneModeEnabled.getter() & 1;
  v199 = v197[3];
  v200 = v197[4];
  __swift_project_boxed_opaque_existential_1(v197, v199);
  if (v198 != ((*(uint64_t (**)(uint64_t, uint64_t))(v200 + 200))(v199, v200) & 1))
  {
    v201 = (uint64_t)&v154[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    swift_beginAccess();
    outlined init with copy of RadarReporting(v201, (uint64_t)&v255);
    ConversationController.callCenter(_:oneToOneModeChangedFor:)(v202, (uint64_t)v197, v203, v204, v205, v206, v207, v208, v232, v233, (uint64_t)v234, v235, v236, v237, v238, v239, v240, v241, v242,
      v243,
      (uint64_t)v244,
      v245);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
  }
  outlined init with copy of RadarReporting((uint64_t)v197, (uint64_t)&v255);
  ConversationController.mostRecentActiveConversation.setter((uint64_t)&v255);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v209 = (void *)static OS_dispatch_queue.main.getter();
  v210 = swift_allocObject();
  *(_QWORD *)(v210 + 16) = v154;
  v258 = closure #2 in ConversationController.migrate(to:with:isUpgrade:)partial apply;
  v259 = v210;
  *(_QWORD *)&v255 = v182;
  *((_QWORD *)&v255 + 1) = 1107296256;
  v256 = thunk for @escaping @callee_guaranteed () -> ();
  v257 = &block_descriptor_974;
  v211 = _Block_copy(&v255);
  v212 = v154;
  swift_release();
  v213 = v236;
  static DispatchQoS.unspecified.getter();
  *(_QWORD *)&v255 = v183;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v214 = v239;
  v215 = v241;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v213, v214, v211);
  _Block_release(v211);

  (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v214, v215);
  (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v213, v238);
}

uint64_t objectdestroy_77Tm()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)()
{
  uint64_t v0;

  closure #1 in ConversationController.remoteVideoClient(_:remoteVideoAttributesDidChange:wantsDispatchToMain:)(*(void **)(v0 + 16), *(void **)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_1BD587594()
{
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void specialized ConversationController.migrate(to:with:isUpgrade:)(_QWORD *a1, uint64_t a2, int a3, char *a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int EnumTagSinglePayload;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t ObjectType;
  uint64_t (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  uint64_t v64;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v76;
  int v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  char *v91;
  void *v92;
  id v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(__int128 *__return_ptr);
  id v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t);
  id v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t, uint64_t);
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  char *v133;
  NSObject *v134;
  os_log_type_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  void (*v144)();
  void *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  const char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  NSObject *v158;
  os_log_type_t v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  void (*v169)();
  void *v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  uint64_t v191;
  void *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  int v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  uint64_t v212;
  void *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  os_log_type_t v218;
  int v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  void *v227;
  void (*v228)();
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  _QWORD *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  id v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  uint8_t *v253;
  _QWORD *v254;
  __int128 v255;
  uint64_t (*v256)(uint64_t);
  void *v257;
  void (*v258)();
  uint64_t v259;
  uint64_t v260;
  __int128 v261;
  uint64_t v262;
  uint64_t v263[3];
  uint64_t v264;
  uint64_t v265;

  v252 = a6;
  v253 = (uint8_t *)a2;
  v249 = a5;
  HIDWORD(v244) = a3;
  v8 = type metadata accessor for DispatchWorkItemFlags();
  v241 = *(_QWORD *)(v8 - 8);
  v242 = v8;
  MEMORY[0x1E0C80A78](v8);
  v240 = (uint64_t)&v234 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS();
  v238 = *(_QWORD *)(v10 - 8);
  v239 = v10;
  MEMORY[0x1E0C80A78](v10);
  v237 = (uint64_t)&v234 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID();
  v250 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v247 = (uint64_t)&v234 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v248 = (char *)&v234 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v234 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v19);
  v243 = (uint64_t)&v234 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v251 = (uint64_t)&v234 - v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v234 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v234 - v27;
  v245 = a4;
  v29 = (uint64_t)&a4[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationUUID];
  swift_beginAccess();
  v235 = v29;
  outlined init with copy of FeatureEligibility?(v29, (uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v31 = a1[3];
  v30 = a1[4];
  v254 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v31);
  v32 = v31;
  v33 = v12;
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v30);
  __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v12);
  v34 = (uint64_t)&v18[*(int *)(v16 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v28, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)v25, v34, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v12) != 1)
  {
    v38 = v251;
    outlined init with copy of FeatureEligibility?((uint64_t)v18, v251, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v34, 1, v33) != 1)
    {
      v52 = v250;
      v53 = v248;
      (*(void (**)(char *, uint64_t, uint64_t))(v250 + 32))(v248, v34, v33);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      v54 = dispatch thunk of static Equatable.== infix(_:_:)();
      v55 = *(void (**)(char *, uint64_t))(v52 + 8);
      v55(v53, v33);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v55((char *)v38, v33);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v37 = (uint64_t)v253;
      v36 = v254;
      if ((v54 & 1) == 0)
        goto LABEL_7;
      goto LABEL_13;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v38, v33);
    v36 = v254;
LABEL_6:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    v37 = (uint64_t)v253;
    goto LABEL_7;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v34, 1, v12);
  v36 = v254;
  if (EnumTagSinglePayload != 1)
    goto LABEL_6;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v37 = (uint64_t)v253;
LABEL_13:
  v56 = &v245[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  v57 = *((_QWORD *)v56 + 1);
  ObjectType = swift_getObjectType();
  v59 = *(uint64_t (**)(uint64_t, uint64_t))(v57 + 48);
  swift_unknownObjectRetain();
  v60 = v59(ObjectType, v57);
  v62 = v61;
  swift_unknownObjectRelease();
  v63 = *(uint64_t (**)(uint64_t))(v252 + 48);
  if (v60 == v63(v249) && v62 == v64)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
  v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v66 & 1) != 0)
  {
LABEL_20:
    v67 = swift_getObjectType();
    v68 = *((_QWORD *)v56 + 1);
    v69 = swift_getObjectType();
    v70 = *(uint64_t (**)(uint64_t, uint64_t))(v68 + 48);
    swift_unknownObjectRetain();
    v71 = v70(v69, v68);
    v73 = v72;
    swift_unknownObjectRelease();
    if (v71 == ((uint64_t (*)(uint64_t, unint64_t))v63)(v67, v252) && v73 == v74)
    {
      swift_bridgeObjectRelease_n();
      v77 = 0;
    }
    else
    {
      v76 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v77 = v76 ^ 1;
    }
    v130 = v243;
    v131 = v254;
    if (one-time initialization token for conversationController != -1)
      swift_once();
    v132 = type metadata accessor for Logger();
    __swift_project_value_buffer(v132, (uint64_t)&static Logger.conversationController);
    outlined init with copy of RadarReporting((uint64_t)v131, (uint64_t)&v255);
    v133 = v245;
    v134 = Logger.logObject.getter();
    v135 = static os_log_type_t.error.getter();
    v136 = v135;
    if (os_log_type_enabled(v134, v135))
    {
      v137 = swift_slowAlloc();
      LODWORD(v252) = v77;
      v138 = v137;
      v254 = (_QWORD *)swift_slowAlloc();
      v263[0] = (uint64_t)v254;
      *(_DWORD *)v138 = 136315650;
      LODWORD(v253) = v136;
      outlined init with copy of FeatureEligibility?(v235, v130, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      specialized >> prefix<A>(_:)(v130);
      v140 = v139;
      v142 = v141;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v130, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v140, v142, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v138 + 12) = 2080;
      v143 = v33;
      v145 = v257;
      v144 = v258;
      __swift_project_boxed_opaque_existential_1(&v255, (uint64_t)v257);
      (*((void (**)(void *, void (*)()))v144 + 1))(v145, v144);
      __swift_storeEnumTagSinglePayload(v130, 0, 1, v143);
      specialized >> prefix<A>(_:)(v130);
      v147 = v146;
      v149 = v148;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v130, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v147, v149, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
      *(_WORD *)(v138 + 22) = 2080;
      LOBYTE(v261) = v252 & 1;
      v150 = String.init<A>(reflecting:)();
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v150, v151, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v152 = "Unable to migrate from conversation uuid %s to %s. Calls differ: %s.";
LABEL_73:
      _os_log_impl(&dword_1BD004000, v134, (os_log_type_t)v253, v152, (uint8_t *)v138, 0x20u);
      v233 = v254;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v233, -1, -1);
      MEMORY[0x1C3B751B8](v138, -1, -1);
LABEL_76:

      return;
    }
    goto LABEL_75;
  }
LABEL_7:
  v249 = v33;
  if ((v244 & 0x100000000) != 0)
    goto LABEL_56;
  if (one-time initialization token for conversationController != -1)
    swift_once();
  v39 = type metadata accessor for Logger();
  v40 = __swift_project_value_buffer(v39, (uint64_t)&static Logger.conversationController);
  v41 = v245;
  v234 = v40;
  v42 = Logger.logObject.getter();
  v43 = static os_log_type_t.default.getter();
  v44 = os_log_type_enabled(v42, v43);
  v236 = v41;
  if (v44)
  {
    v45 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v263[0] = v46;
    *(_DWORD *)v45 = 136315394;
    LOBYTE(v255) = v41[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    v47 = String.init<A>(reflecting:)();
    *(_QWORD *)&v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v48, v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2080;
    v49 = &v236[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
    swift_beginAccess();
    v255 = *(_OWORD *)v49;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v50 = String.init<A>(reflecting:)();
    *(_QWORD *)&v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, v263);
    v41 = v236;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v42, v43, "%s Going to migrate from oldCall: %s", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v46, -1, -1);
    MEMORY[0x1C3B751B8](v45, -1, -1);

  }
  else
  {

  }
  swift_unknownObjectRetain_n();
  v78 = Logger.logObject.getter();
  v79 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = (uint8_t *)swift_slowAlloc();
    v81 = swift_slowAlloc();
    v263[0] = v81;
    *(_DWORD *)v80 = 136315138;
    v253 = v80 + 4;
    *(_QWORD *)&v255 = v37;
    *((_QWORD *)&v255 + 1) = v252;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v82 = String.init<A>(reflecting:)();
    *(_QWORD *)&v255 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v82, v83, v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    v41 = v236;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v78, v79, "... to newCall: %s", v80, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v81, -1, -1);
    MEMORY[0x1C3B751B8](v80, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v84 = (uint8_t *)&v41[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
  swift_beginAccess();
  v85 = *((_QWORD *)v84 + 3);
  v86 = *((_QWORD *)v84 + 4);
  v253 = v84;
  v87 = __swift_project_boxed_opaque_existential_1(v84, v85);
  v88 = *(_QWORD *)(v85 - 8);
  v89 = MEMORY[0x1E0C80A78](v87);
  v91 = (char *)&v234 - v90;
  (*(void (**)(char *, __n128))(v88 + 16))((char *)&v234 - v90, v89);
  v92 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v86 + 24))(v85, v86);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v91, v85);
  v93 = objc_msgSend(v92, sel_currentVideoCalls);
  swift_unknownObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v94 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v94 >> 62))
  {
    v95 = *(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v95)
      goto LABEL_31;
LABEL_70:
    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
  swift_bridgeObjectRetain();
  v95 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v95)
    goto LABEL_70;
LABEL_31:
  if (v95 < 1)
  {
    __break(1u);
    return;
  }
  v96 = v95;
  v246 = 0;
  v97 = 0;
  v252 = v94 & 0xC000000000000001;
  do
  {
    if (v252)
      v98 = (id)MEMORY[0x1C3B73D18](v97, v94);
    else
      v98 = *(id *)(v94 + 8 * v97 + 32);
    v99 = v98;
    outlined init with copy of RadarReporting((uint64_t)v253, (uint64_t)v263);
    v100 = v265;
    __swift_project_boxed_opaque_existential_1(v263, v264);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v102 = v101;
    v103 = *(void (**)(__int128 *__return_ptr))(v100 + 104);
    v104 = v99;
    v251 = v102;
    v103(&v255);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v263);
    outlined init with copy of FeatureEligibility?((uint64_t)&v255, (uint64_t)&v261, &demangling cache variable for type metadata for Conversation?);
    if (v262)
    {
      v105 = v96;
      v106 = v94;
      outlined init with take of Notice(&v261, (uint64_t)v263);
      v107 = v264;
      v108 = v265;
      __swift_project_boxed_opaque_existential_1(v263, v264);
      v109 = v248;
      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v107, v108);
      v110 = v254[3];
      v111 = v254[4];
      __swift_project_boxed_opaque_existential_1(v254, v110);
      v112 = v247;
      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v110, v111);
      v113 = static UUID.== infix(_:_:)();
      v114 = v249;
      v115 = *(void (**)(uint64_t, uint64_t))(v250 + 8);
      v115(v112, v249);
      v115((uint64_t)v109, v114);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v255, &demangling cache variable for type metadata for Conversation?);
      if ((v113 & 1) != 0)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v263);
        v246 = v104;
      }
      else
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v263);
      }
      v94 = v106;
      v96 = v105;
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v255, &demangling cache variable for type metadata for Conversation?);

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v261, &demangling cache variable for type metadata for Conversation?);
    }
    ++v97;
  }
  while (v96 != v97);
  swift_bridgeObjectRelease();
  v36 = v254;
  if (!v246)
  {
LABEL_71:
    outlined init with copy of RadarReporting((uint64_t)v36, (uint64_t)&v255);
    v133 = v236;
    v134 = Logger.logObject.getter();
    v218 = static os_log_type_t.default.getter();
    v219 = v218;
    if (os_log_type_enabled(v134, v218))
    {
      v138 = swift_slowAlloc();
      v254 = (_QWORD *)swift_slowAlloc();
      v263[0] = (uint64_t)v254;
      *(_DWORD *)v138 = 136315650;
      LODWORD(v253) = v219;
      LOBYTE(v261) = v133[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
      v220 = String.init<A>(reflecting:)();
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v220, v221, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v138 + 12) = 2080;
      v222 = v243;
      outlined init with copy of FeatureEligibility?(v235, v243, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      specialized >> prefix<A>(_:)(v222);
      v224 = v223;
      v226 = v225;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v222, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v224, v226, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v138 + 22) = 2080;
      v227 = v257;
      v228 = v258;
      __swift_project_boxed_opaque_existential_1(&v255, (uint64_t)v257);
      (*((void (**)(void *, void (*)()))v228 + 1))(v227, v228);
      __swift_storeEnumTagSinglePayload(v222, 0, 1, v249);
      specialized >> prefix<A>(_:)(v222);
      v230 = v229;
      v232 = v231;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v222, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      *(_QWORD *)&v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v230, v232, v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
      v152 = "%s Unable to migration from conversation uuid %s to %s because cannot find call with same backing conversation";
      goto LABEL_73;
    }

LABEL_75:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
    goto LABEL_76;
  }
  v116 = v246;
  v117 = &v236[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  v118 = *((_QWORD *)v117 + 1);
  v119 = swift_getObjectType();
  v120 = *(uint64_t (**)(uint64_t, uint64_t))(v118 + 184);
  v121 = v116;
  swift_unknownObjectRetain();
  LODWORD(v118) = v120(v119, v118);
  swift_unknownObjectRelease();
  if ((_DWORD)v118 != 6)
  {
    type metadata accessor for PlaceholderCall();
    if (!swift_dynamicCastClass())
    {
      v122 = *((_QWORD *)v117 + 1);
      v123 = swift_getObjectType();
      v124 = *(uint64_t (**)(uint64_t, uint64_t))(v122 + 352);
      swift_unknownObjectRetain();
      LOBYTE(v122) = v124(v123, v122);
      swift_unknownObjectRelease();
      objc_msgSend(v121, sel_setUplinkMuted_, v122 & 1);
    }
  }
  v125 = v251;
  *(_QWORD *)v117 = v121;
  *((_QWORD *)v117 + 1) = v125;
  swift_unknownObjectRelease();
  v126 = *((_QWORD *)v117 + 1);
  v127 = swift_getObjectType();
  v128 = *(uint64_t (**)(uint64_t, uint64_t))(v126 + 304);
  swift_unknownObjectRetain();
  LOBYTE(v126) = v128(v127, v126);
  swift_unknownObjectRelease();
  v129 = (uint64_t)v236;
  if ((v126 & 1) != 0)
    ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
  else
    ConversationController.stopLocalVideo()();
  v33 = v249;
  v153 = *((_QWORD *)v117 + 1);
  v154 = swift_getObjectType();
  v155 = swift_unknownObjectRetain();
  specialized ConversationController.updateAudioState(with:)(v155, v129, v154, v153);
  swift_unknownObjectRelease();

LABEL_56:
  if (one-time initialization token for conversationController != -1)
    swift_once();
  v156 = type metadata accessor for Logger();
  __swift_project_value_buffer(v156, (uint64_t)&static Logger.conversationController);
  outlined init with copy of RadarReporting((uint64_t)v36, (uint64_t)&v255);
  v157 = v245;
  v158 = Logger.logObject.getter();
  v159 = static os_log_type_t.default.getter();
  v160 = v159;
  if (os_log_type_enabled(v158, v159))
  {
    v161 = swift_slowAlloc();
    v253 = (uint8_t *)swift_slowAlloc();
    v263[0] = (uint64_t)v253;
    *(_DWORD *)v161 = 136315650;
    LODWORD(v252) = v160;
    LOBYTE(v260) = v157[OBJC_IVAR____TtC15ConversationKit22ConversationController_mode];
    v162 = String.init<A>(reflecting:)();
    v260 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v162, v163, v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v161 + 12) = 2080;
    v164 = v243;
    outlined init with copy of FeatureEligibility?(v235, v243, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    specialized >> prefix<A>(_:)(v164);
    v166 = v165;
    v168 = v167;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v164, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v260 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v166, v168, v263);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v161 + 22) = 2080;
    v170 = v257;
    v169 = v258;
    __swift_project_boxed_opaque_existential_1(&v255, (uint64_t)v257);
    v171 = v170;
    v36 = v254;
    (*((void (**)(void *, void (*)()))v169 + 1))(v171, v169);
    __swift_storeEnumTagSinglePayload(v164, 0, 1, v249);
    specialized >> prefix<A>(_:)(v164);
    v173 = v172;
    v175 = v174;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v164, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v260 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v173, v175, v263);
    v33 = v249;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
    _os_log_impl(&dword_1BD004000, v158, (os_log_type_t)v252, "%s Migrating conversation UUID from %s to %s", (uint8_t *)v161, 0x20u);
    v176 = (uint64_t)v253;
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v176, -1, -1);
    MEMORY[0x1C3B751B8](v161, -1, -1);

  }
  else
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
    v164 = v243;
  }
  v177 = v36[3];
  v178 = v36[4];
  __swift_project_boxed_opaque_existential_1(v36, v177);
  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v177, v178);
  __swift_storeEnumTagSinglePayload(v164, 0, 1, v33);
  ConversationController.conversationUUID.setter(v164);
  v179 = v36[3];
  v180 = v36[4];
  __swift_project_boxed_opaque_existential_1(v36, v179);
  v181 = (*(uint64_t (**)(uint64_t, uint64_t))(v180 + 56))(v179, v180);
  ConversationController.conversationState.setter(v181);
  v182 = &v157[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  swift_beginAccess();
  v183 = *(_QWORD *)(*(_QWORD *)v182 + 16);
  ConversationController.removeAllParticipants()();
  outlined init with copy of RadarReporting((uint64_t)v36, (uint64_t)v263);
  v184 = MEMORY[0x1E0C809B0];
  v185 = MEMORY[0x1E0DEE9D8];
  if ((v244 & 0x100000000) != 0)
  {
    v186 = v264;
    v187 = v265;
    __swift_project_boxed_opaque_existential_1(v263, v264);
    v188 = (*(uint64_t (**)(uint64_t, uint64_t))(v187 + 88))(v186, v187);
    v189 = specialized Set.count.getter(v188);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v263);
    if (v183 != v189)
      goto LABEL_66;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v263);
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v190 = (void *)static OS_dispatch_queue.main.getter();
  v191 = swift_allocObject();
  *(_QWORD *)(v191 + 16) = v157;
  v258 = partial apply for closure #1 in ConversationController.migrate(to:with:isUpgrade:);
  v259 = v191;
  *(_QWORD *)&v255 = v184;
  *((_QWORD *)&v255 + 1) = 1107296256;
  v256 = thunk for @escaping @callee_guaranteed () -> ();
  v257 = &block_descriptor_953;
  v192 = _Block_copy(&v255);
  v193 = v157;
  swift_release();
  v194 = v237;
  static DispatchQoS.unspecified.getter();
  *(_QWORD *)&v255 = v185;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v195 = v185;
  v196 = v240;
  v197 = v242;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v194, v196, v192);
  _Block_release(v192);

  v198 = v196;
  v185 = v195;
  v184 = MEMORY[0x1E0C809B0];
  (*(void (**)(uint64_t, uint64_t))(v241 + 8))(v198, v197);
  (*(void (**)(uint64_t, uint64_t))(v238 + 8))(v194, v239);
LABEL_66:
  v199 = v254;
  ConversationController.createNewParticipants(with:)(v254);
  ConversationController.updateRemoteParticipantsStates(with:)(v199);
  ConversationController.updateRemoteParticipantsNames(with:)(v199);
  ConversationController.updateLocalMemberAuthorizedToChangeGroupMembership(with:)(v199);
  v200 = ConversationController.isOneToOneModeEnabled.getter() & 1;
  v201 = v199[3];
  v202 = v199[4];
  __swift_project_boxed_opaque_existential_1(v199, v201);
  if (v200 != ((*(uint64_t (**)(uint64_t, uint64_t))(v202 + 200))(v201, v202) & 1))
  {
    v203 = (uint64_t)&v157[OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter];
    swift_beginAccess();
    outlined init with copy of RadarReporting(v203, (uint64_t)&v255);
    ConversationController.callCenter(_:oneToOneModeChangedFor:)(v204, (uint64_t)v199, v205, v206, v207, v208, v209, v210, v234, v235, (uint64_t)v236, v237, v238, v239, v240, v241, v242, v243, v244,
      (uint64_t)v245,
      (uint64_t)v246,
      v247);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
  }
  outlined init with copy of RadarReporting((uint64_t)v199, (uint64_t)&v255);
  ConversationController.mostRecentActiveConversation.setter((uint64_t)&v255);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v211 = (void *)static OS_dispatch_queue.main.getter();
  v212 = swift_allocObject();
  *(_QWORD *)(v212 + 16) = v157;
  v258 = partial apply for closure #2 in ConversationController.migrate(to:with:isUpgrade:);
  v259 = v212;
  *(_QWORD *)&v255 = v184;
  *((_QWORD *)&v255 + 1) = 1107296256;
  v256 = thunk for @escaping @callee_guaranteed () -> ();
  v257 = &block_descriptor_959;
  v213 = _Block_copy(&v255);
  v214 = v157;
  swift_release();
  v215 = v237;
  static DispatchQoS.unspecified.getter();
  *(_QWORD *)&v255 = v185;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v216 = v240;
  v217 = v242;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v215, v216, v213);
  _Block_release(v213);

  (*(void (**)(uint64_t, uint64_t))(v241 + 8))(v216, v217);
  (*(void (**)(uint64_t, uint64_t))(v238 + 8))(v215, v239);
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Activity, @unowned TUConversationActivitySessionApplicationState) -> ()(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(v3 + 16))(a1, a2, *a3);
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #1 in ConversationController.callCenter(_:collaborationsChangedFor:)()
{
  uint64_t v0;

  closure #1 in ConversationController.callCenter(_:collaborationsChangedFor:)(v0);
}

uint64_t sub_1BD588FAC()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.frequencyController(_:audioPowerChanged:forParticipantWithStreamToken:)()
{
  uint64_t v0;

  closure #1 in ConversationController.frequencyController(_:audioPowerChanged:forParticipantWithStreamToken:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(float *)(v0 + 32));
}

uint64_t sub_1BD588FD8()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.remoteVideoClientDidReceiveFirstFrame(_:)()
{
  uint64_t v0;

  closure #1 in ConversationController.remoteVideoClientDidReceiveFirstFrame(_:)(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD588FFC()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.remoteVideoClient(_:videoDidSuspend:)()
{
  uint64_t v0;

  closure #1 in ConversationController.remoteVideoClient(_:videoDidSuspend:)(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void partial apply for closure #1 in ConversationController.remoteVideoClient(_:remoteVideoDidPause:)()
{
  uint64_t v0;

  closure #1 in ConversationController.remoteVideoClient(_:remoteVideoDidPause:)(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BD589038()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationController.remoteVideoClient(_:networkQualityDidDegrade:info:)()
{
  uint64_t v0;

  closure #1 in ConversationController.remoteVideoClient(_:networkQualityDidDegrade:info:)(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void partial apply for closure #1 in ConversationController.remoteVideoClient(_:videoDidDegrade:)()
{
  uint64_t v0;

  closure #1 in ConversationController.remoteVideoClient(_:videoDidDegrade:)(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void partial apply for closure #1 in ConversationController.remoteVideoClient(_:remoteMediaDidStall:)()
{
  uint64_t v0;

  closure #1 in ConversationController.remoteVideoClient(_:remoteMediaDidStall:)(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BD589098()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.remoteVideoClient(_:remoteScreenAttributesDidChange:)()
{
  uint64_t v0;

  return closure #1 in ConversationController.remoteVideoClient(_:remoteScreenAttributesDidChange:)(*(_QWORD *)(v0 + 16));
}

uint64_t type metadata accessor for ConversationController.ParticipantInfo(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConversationController.ParticipantInfo);
}

void outlined assign with copy of Participant.State(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_84(a1, a2, a3);
  OUTLINED_FUNCTION_38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 24));
  OUTLINED_FUNCTION_0();
}

uint64_t specialized == infix(_:_:)(void *a1, void *a2)
{
  id v4;
  char v5;
  char v6;
  id v7;
  uint64_t result;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;

  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  if (a1 == a2)
  {
    v6 = 1;
    return v6 & 1;
  }
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
      v4 = a1;
      swift_unknownObjectRetain();
      v5 = static NSObject.== infix(_:_:)();
LABEL_9:
      v6 = v5;

      swift_unknownObjectRelease();
      return v6 & 1;
    }
    goto LABEL_10;
  }
  type metadata accessor for PlaceholderCall();
  if (swift_dynamicCastClass())
  {
    if (swift_dynamicCastClass())
    {
      v7 = a1;
      swift_unknownObjectRetain();
      v5 = static PlaceholderCall.== infix(_:_:)();
      goto LABEL_9;
    }
LABEL_10:
    v6 = 0;
    return v6 & 1;
  }
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  swift_getObjectType();
  v9._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x203A736872202CLL;
  v10._object = (void *)0xE700000000000000;
  String.append(_:)(v10);
  swift_getObjectType();
  v11._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void partial apply for closure #1 in ConversationController.handleAudioUplinkChange(_:)()
{
  uint64_t v0;

  closure #1 in ConversationController.handleAudioUplinkChange(_:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void partial apply for closure #1 in ConversationController.handleLocalPreviewChanged(_:)()
{
  uint64_t v0;

  closure #1 in ConversationController.handleLocalPreviewChanged(_:)(*(_QWORD *)(v0 + 16));
}

void partial apply for closure #1 in ConversationController.handleLocalVideoPreviewFirstFrameArrived(_:)()
{
  uint64_t v0;

  closure #1 in ConversationController.handleLocalVideoPreviewFirstFrameArrived(_:)(*(char **)(v0 + 16));
}

void partial apply for closure #1 in ConversationController.handleLocalVideoAttributesChanged(_:)()
{
  uint64_t v0;

  closure #1 in ConversationController.handleLocalVideoAttributesChanged(_:)(*(_QWORD *)(v0 + 16));
}

uint64_t partial apply for closure #1 in ConversationController.handleSendingVideoChanged(_:)()
{
  return partial apply for closure #1 in ConversationController.handleSendingVideoChanged(_:)((uint64_t (*)(_QWORD))MEMORY[0x1E0CAE648]);
}

void partial apply for closure #1 in ConversationController.handleWindowDidFinishResize(_:)()
{
  uint64_t v0;

  closure #1 in ConversationController.migrate(to:with:isUpgrade:)(*(_QWORD *)(v0 + 16), &OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishWindowResize);
}

uint64_t sub_1BD589388()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

id partial apply for closure #1 in ConversationController.handleScreenSharingDidChange(_:)()
{
  uint64_t v0;

  return closure #1 in ConversationController.handleScreenSharingDidChange(_:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void partial apply for closure #1 in ConversationController.handleCallConnected(_:)()
{
  closure #1 in ConversationController.handleCallStartedConnecting(_:)();
}

void partial apply for closure #1 in ConversationController.handleVideoCallStatusDidChange(_:)()
{
  uint64_t v0;

  closure #1 in ConversationController.handleVideoCallStatusDidChange(_:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void partial apply for closure #1 in ConversationController.handleCallStatusDidChange(_:)()
{
  uint64_t v0;

  closure #1 in ConversationController.handleCallStatusDidChange(_:)(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t objectdestroy_199Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = type metadata accessor for Notification();
  OUTLINED_FUNCTION_153_7(v2);

  OUTLINED_FUNCTION_52_28();
  return OUTLINED_FUNCTION_18_19();
}

uint64_t partial apply for closure #1 in ConversationController.handleHoldMusicDidChange(_:)()
{
  return partial apply for closure #1 in ConversationController.handleSendingVideoChanged(_:)((uint64_t (*)(_QWORD))MEMORY[0x1E0CAE648]);
}

uint64_t partial apply for closure #1 in ConversationController.handleBluetoothAudioFormatChanged(_:)()
{
  uint64_t v0;

  return closure #1 in ConversationController.handleBluetoothAudioFormatChanged(_:)(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t partial apply for closure #1 in ConversationController.handlePTTCallStatusDidChange(_:)()
{
  uint64_t v0;

  return closure #1 in ConversationController.handlePTTCallStatusDidChange(_:)(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t lazy protocol witness table accessor for type ConversationController.ControlsMode and conformance ConversationController.ControlsMode()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationController.ControlsMode and conformance ConversationController.ControlsMode;
  if (!lazy protocol witness table cache variable for type ConversationController.ControlsMode and conformance ConversationController.ControlsMode)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationController.ControlsMode, &type metadata for ConversationController.ControlsMode);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationController.ControlsMode and conformance ConversationController.ControlsMode);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ConversationController.OneToOneModeChangeSource and conformance ConversationController.OneToOneModeChangeSource()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationController.OneToOneModeChangeSource and conformance ConversationController.OneToOneModeChangeSource;
  if (!lazy protocol witness table cache variable for type ConversationController.OneToOneModeChangeSource and conformance ConversationController.OneToOneModeChangeSource)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationController.OneToOneModeChangeSource, &type metadata for ConversationController.OneToOneModeChangeSource);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationController.OneToOneModeChangeSource and conformance ConversationController.OneToOneModeChangeSource);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ConversationController.CameraStartPolicy and conformance ConversationController.CameraStartPolicy()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationController.CameraStartPolicy and conformance ConversationController.CameraStartPolicy;
  if (!lazy protocol witness table cache variable for type ConversationController.CameraStartPolicy and conformance ConversationController.CameraStartPolicy)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationController.CameraStartPolicy, &type metadata for ConversationController.CameraStartPolicy);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationController.CameraStartPolicy and conformance ConversationController.CameraStartPolicy);
  }
  return result;
}

void sub_1BD5894FC(id *a1@<X8>)
{
  *a1 = ConversationController.momentsController.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD589528(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_709(a1);
  ConversationController.conversationState.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD589548(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_709(a1);
  ConversationController.conversationLetMeInRequestState.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD589568(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  ConversationController.ignoreLetMeInRequests.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD589588(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_709(a1);
  ConversationController.rejectedParticipantsCount.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5895A8(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_709(a1);
  ConversationController.deviceOrientation.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5895C8(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  ConversationController.didDeferStartCameraAction.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5895E8(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  ConversationController.isUsingIPadExternalCamera.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD589604(_BYTE *a1@<X8>)
{
  char v2;

  ConversationController.captionsRecognizerShouldBeRunning.getter();
  *a1 = v2 & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD58962C(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  ConversationController.captionsRecognizerShouldBeRunning.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD589894(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  ConversationController.isSplitView.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5898B0()
{
  ConversationController.mostRecentActiveConversation.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for ConversationController()
{
  return type metadata accessor for ConversationController(0);
}

uint64_t type metadata accessor for ConversationController(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConversationController);
}

void type metadata completion function for ConversationController()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Participant(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?();
    if (v1 <= 0x3F)
    {
      type metadata accessor for UUID?();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for ConversationController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1088))();
}

void type metadata accessor for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice));
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for (activeConversation: Conversation, participant: Participant, notice: TUConversationNotice)?);
  }
}

uint64_t storeEnumTagSinglePayload for ConversationController.ControlsMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD589C4C + 4 * byte_1BD6659F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD589C80 + 4 * byte_1BD6659F0[v4]))();
}

uint64_t sub_1BD589C80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD589C88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD589C90);
  return result;
}

uint64_t sub_1BD589C9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD589CA4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD589CA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD589CB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ConversationController.ControlsMode()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for ConversationController.OneToOneModeChangeSource()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ConversationController.OneToOneModeChangeSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD589D24 + 4 * byte_1BD6659FF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD589D58 + 4 * byte_1BD6659FA[v4]))();
}

uint64_t sub_1BD589D58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD589D60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD589D68);
  return result;
}

uint64_t sub_1BD589D74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD589D7CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD589D80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD589D88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ConversationController.CameraStartPolicy()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for ConversationController.ParticipantInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  size_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  __int128 v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  __int128 v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = type metadata accessor for Participant.State(0);
    v8 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      switch(v8)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          v9 = type metadata accessor for Date();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
          goto LABEL_26;
        case 4:
          v12 = type metadata accessor for Date();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
          v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v14 = *(int *)(v13 + 48);
          v15 = (char *)a1 + v14;
          v16 = (char *)a2 + v14;
          *(_OWORD *)v15 = *(_OWORD *)((char *)a2 + v14);
          v17 = *(_QWORD *)((char *)a2 + v14 + 16);
          v18 = *(_QWORD *)((char *)a2 + v14 + 24);
          *((_QWORD *)v15 + 2) = v17;
          *((_QWORD *)v15 + 3) = v18;
          *((_WORD *)v15 + 16) = *((_WORD *)v16 + 16);
          *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
          v15[48] = v16[48];
          *(_OWORD *)(v15 + 56) = *(_OWORD *)(v16 + 56);
          *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
          v15[88] = v16[88];
          v15[89] = v16[89];
          v19 = *((_QWORD *)v16 + 15);
          swift_bridgeObjectRetain();
          if (v19)
          {
            if (v19 == 1)
            {
              v20 = v15 + 96;
              v21 = v16 + 96;
              v22 = 209;
              goto LABEL_20;
            }
            v36 = *((_QWORD *)v16 + 16);
            *((_QWORD *)v15 + 15) = v19;
            *((_QWORD *)v15 + 16) = v36;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8))((uint64_t)(v15 + 96), (uint64_t)(v16 + 96), v19);
          }
          else
          {
            v34 = *((_OWORD *)v16 + 7);
            *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
            *((_OWORD *)v15 + 7) = v34;
            *((_QWORD *)v15 + 16) = *((_QWORD *)v16 + 16);
          }
          *((_DWORD *)v15 + 34) = *((_DWORD *)v16 + 34);
          v37 = *((_OWORD *)v16 + 10);
          *((_OWORD *)v15 + 9) = *((_OWORD *)v16 + 9);
          *((_OWORD *)v15 + 10) = v37;
          *((_OWORD *)v15 + 11) = *((_OWORD *)v16 + 11);
          v15[192] = v16[192];
          v20 = v15 + 208;
          v21 = v16 + 208;
          *((_QWORD *)v15 + 25) = *((_QWORD *)v16 + 25);
          v22 = 97;
LABEL_20:
          memcpy(v20, v21, v22);
          v38 = *((_QWORD *)v16 + 39);
          if (v38)
          {
            v39 = *((_QWORD *)v16 + 40);
            v40 = *((_QWORD *)v16 + 41);
            *((_QWORD *)v15 + 39) = v38;
            *((_QWORD *)v15 + 40) = v39;
            *((_QWORD *)v15 + 41) = v40;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v15 + 312) = *(_OWORD *)(v16 + 312);
            *((_QWORD *)v15 + 41) = *((_QWORD *)v16 + 41);
          }
          v41 = *(int *)(v13 + 64);
          v42 = (char *)a1 + v41;
          v43 = (char *)a2 + v41;
          v44 = *((_QWORD *)v43 + 1);
          if (v44)
          {
            *(_QWORD *)v42 = *(_QWORD *)v43;
            *((_QWORD *)v42 + 1) = v44;
            v45 = *((_QWORD *)v43 + 3);
            *((_QWORD *)v42 + 2) = *((_QWORD *)v43 + 2);
            *((_QWORD *)v42 + 3) = v45;
            v42[32] = v43[32];
            *(_OWORD *)(v42 + 40) = *(_OWORD *)(v43 + 40);
            *((_QWORD *)v42 + 7) = *((_QWORD *)v43 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v46 = *((_OWORD *)v43 + 1);
            *(_OWORD *)v42 = *(_OWORD *)v43;
            *((_OWORD *)v42 + 1) = v46;
            v47 = *((_OWORD *)v43 + 3);
            *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
            *((_OWORD *)v42 + 3) = v47;
          }
LABEL_26:
          swift_storeEnumTagMultiPayload();
LABEL_27:
          v48 = (int *)type metadata accessor for Participant(0);
          v49 = v48[5];
          v50 = (char *)a1 + v49;
          v51 = (char *)a2 + v49;
          v52 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
          v53 = v48[6];
          v54 = (char *)a1 + v53;
          v55 = (char *)a2 + v53;
          v54[4] = v55[4];
          *(_DWORD *)v54 = *(_DWORD *)v55;
          v56 = v48[7];
          v57 = (char *)a1 + v56;
          v58 = (char *)a2 + v56;
          v59 = *(void **)v58;
          if (*(_QWORD *)v58)
          {
            v60 = *((_QWORD *)v58 + 1);
            *(_QWORD *)v57 = v59;
            *((_QWORD *)v57 + 1) = v60;
            v57[16] = v58[16];
            v61 = *((_QWORD *)v58 + 4);
            *((_QWORD *)v57 + 3) = *((_QWORD *)v58 + 3);
            *((_QWORD *)v57 + 4) = v61;
            v62 = v59;
            swift_bridgeObjectRetain();
          }
          else
          {
            v63 = *((_OWORD *)v58 + 1);
            *(_OWORD *)v57 = *(_OWORD *)v58;
            *((_OWORD *)v57 + 1) = v63;
            *((_QWORD *)v57 + 4) = *((_QWORD *)v58 + 4);
          }
          *(_QWORD *)((char *)a1 + v48[8]) = *(_QWORD *)((char *)a2 + v48[8]);
          v64 = v48[9];
          v65 = (_QWORD *)((char *)a1 + v64);
          v66 = (_QWORD *)((char *)a2 + v64);
          v67 = v66[1];
          *v65 = *v66;
          v65[1] = v67;
          *((_BYTE *)a1 + v48[10]) = *((_BYTE *)a2 + v48[10]);
          *(_QWORD *)((char *)a1 + v48[11]) = *(_QWORD *)((char *)a2 + v48[11]);
          v68 = v48[12];
          v69 = *(void **)((char *)a2 + v68);
          *(_QWORD *)((char *)a1 + v68) = v69;
          *((_BYTE *)a1 + v48[13]) = *((_BYTE *)a2 + v48[13]);
          v70 = v48[14];
          v71 = (char *)a1 + v70;
          v72 = (char *)a2 + v70;
          v73 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v74 = v69;
          if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
          {
            v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
            __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v73);
          }
          v76 = type metadata accessor for Participant.CountdownInfo(0);
          v77 = *(int *)(v76 + 20);
          v78 = &v71[v77];
          v79 = &v72[v77];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v72[v77], 1, v73))
          {
            v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v78, v79, v73);
            __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v73);
          }
          v71[*(int *)(v76 + 24)] = v72[*(int *)(v76 + 24)];
          *((_BYTE *)a1 + v48[15]) = *((_BYTE *)a2 + v48[15]);
          *(_QWORD *)((char *)a1 + v48[16]) = *(_QWORD *)((char *)a2 + v48[16]);
          swift_retain();
          v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int));
          *(_QWORD *)((char *)a1 + *(int *)(v81 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v81 + 48));
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          goto LABEL_27;
      }
    }
    else
    {
      switch(v8)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          v11 = type metadata accessor for Date();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
          goto LABEL_45;
        case 4:
          v23 = type metadata accessor for Date();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v25 = *(int *)(v24 + 48);
          v26 = (char *)a1 + v25;
          v27 = (char *)a2 + v25;
          *(_OWORD *)v26 = *(_OWORD *)((char *)a2 + v25);
          v28 = *(_QWORD *)((char *)a2 + v25 + 16);
          v29 = *(_QWORD *)((char *)a2 + v25 + 24);
          *((_QWORD *)v26 + 2) = v28;
          *((_QWORD *)v26 + 3) = v29;
          *((_WORD *)v26 + 16) = *((_WORD *)v27 + 16);
          *((_QWORD *)v26 + 5) = *((_QWORD *)v27 + 5);
          v26[48] = v27[48];
          *(_OWORD *)(v26 + 56) = *(_OWORD *)(v27 + 56);
          *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
          v26[88] = v27[88];
          v26[89] = v27[89];
          v30 = *((_QWORD *)v27 + 15);
          swift_bridgeObjectRetain();
          if (v30)
          {
            if (v30 == 1)
            {
              v31 = v26 + 96;
              v32 = v27 + 96;
              v33 = 209;
              goto LABEL_39;
            }
            v82 = *((_QWORD *)v27 + 16);
            *((_QWORD *)v26 + 15) = v30;
            *((_QWORD *)v26 + 16) = v82;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v30 - 8))((uint64_t)(v26 + 96), (uint64_t)(v27 + 96), v30);
          }
          else
          {
            v35 = *((_OWORD *)v27 + 7);
            *((_OWORD *)v26 + 6) = *((_OWORD *)v27 + 6);
            *((_OWORD *)v26 + 7) = v35;
            *((_QWORD *)v26 + 16) = *((_QWORD *)v27 + 16);
          }
          *((_DWORD *)v26 + 34) = *((_DWORD *)v27 + 34);
          v83 = *((_OWORD *)v27 + 10);
          *((_OWORD *)v26 + 9) = *((_OWORD *)v27 + 9);
          *((_OWORD *)v26 + 10) = v83;
          *((_OWORD *)v26 + 11) = *((_OWORD *)v27 + 11);
          v26[192] = v27[192];
          v31 = v26 + 208;
          v32 = v27 + 208;
          *((_QWORD *)v26 + 25) = *((_QWORD *)v27 + 25);
          v33 = 97;
LABEL_39:
          memcpy(v31, v32, v33);
          v84 = *((_QWORD *)v27 + 39);
          if (v84)
          {
            v85 = *((_QWORD *)v27 + 40);
            v86 = *((_QWORD *)v27 + 41);
            *((_QWORD *)v26 + 39) = v84;
            *((_QWORD *)v26 + 40) = v85;
            *((_QWORD *)v26 + 41) = v86;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v26 + 312) = *(_OWORD *)(v27 + 312);
            *((_QWORD *)v26 + 41) = *((_QWORD *)v27 + 41);
          }
          v87 = *(int *)(v24 + 64);
          v88 = (char *)a1 + v87;
          v89 = (char *)a2 + v87;
          v90 = *((_QWORD *)v89 + 1);
          if (v90)
          {
            *(_QWORD *)v88 = *(_QWORD *)v89;
            *((_QWORD *)v88 + 1) = v90;
            v91 = *((_QWORD *)v89 + 3);
            *((_QWORD *)v88 + 2) = *((_QWORD *)v89 + 2);
            *((_QWORD *)v88 + 3) = v91;
            v88[32] = v89[32];
            *(_OWORD *)(v88 + 40) = *(_OWORD *)(v89 + 40);
            *((_QWORD *)v88 + 7) = *((_QWORD *)v89 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v92 = *((_OWORD *)v89 + 1);
            *(_OWORD *)v88 = *(_OWORD *)v89;
            *((_OWORD *)v88 + 1) = v92;
            v93 = *((_OWORD *)v89 + 3);
            *((_OWORD *)v88 + 2) = *((_OWORD *)v89 + 2);
            *((_OWORD *)v88 + 3) = v93;
          }
LABEL_45:
          swift_storeEnumTagMultiPayload();
LABEL_46:
          v94 = (int *)type metadata accessor for Participant(0);
          v95 = v94[5];
          v96 = (char *)a1 + v95;
          v97 = (char *)a2 + v95;
          v98 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
          v99 = v94[6];
          v100 = (char *)a1 + v99;
          v101 = (char *)a2 + v99;
          v100[4] = v101[4];
          *(_DWORD *)v100 = *(_DWORD *)v101;
          v102 = v94[7];
          v103 = (char *)a1 + v102;
          v104 = (char *)a2 + v102;
          v105 = *(void **)v104;
          if (*(_QWORD *)v104)
          {
            v106 = *((_QWORD *)v104 + 1);
            *(_QWORD *)v103 = v105;
            *((_QWORD *)v103 + 1) = v106;
            v103[16] = v104[16];
            v107 = *((_QWORD *)v104 + 4);
            *((_QWORD *)v103 + 3) = *((_QWORD *)v104 + 3);
            *((_QWORD *)v103 + 4) = v107;
            v108 = v105;
            swift_bridgeObjectRetain();
          }
          else
          {
            v109 = *((_OWORD *)v104 + 1);
            *(_OWORD *)v103 = *(_OWORD *)v104;
            *((_OWORD *)v103 + 1) = v109;
            *((_QWORD *)v103 + 4) = *((_QWORD *)v104 + 4);
          }
          *(_QWORD *)((char *)a1 + v94[8]) = *(_QWORD *)((char *)a2 + v94[8]);
          v110 = v94[9];
          v111 = (_QWORD *)((char *)a1 + v110);
          v112 = (_QWORD *)((char *)a2 + v110);
          v113 = v112[1];
          *v111 = *v112;
          v111[1] = v113;
          *((_BYTE *)a1 + v94[10]) = *((_BYTE *)a2 + v94[10]);
          *(_QWORD *)((char *)a1 + v94[11]) = *(_QWORD *)((char *)a2 + v94[11]);
          v114 = v94[12];
          v115 = *(void **)((char *)a2 + v114);
          *(_QWORD *)((char *)a1 + v114) = v115;
          *((_BYTE *)a1 + v94[13]) = *((_BYTE *)a2 + v94[13]);
          v116 = v94[14];
          v117 = (char *)a1 + v116;
          v118 = (char *)a2 + v116;
          v119 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v120 = v115;
          if (__swift_getEnumTagSinglePayload((uint64_t)v118, 1, v119))
          {
            v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v117, v118, v119);
            __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, v119);
          }
          v122 = type metadata accessor for Participant.CountdownInfo(0);
          v123 = *(int *)(v122 + 20);
          v124 = &v117[v123];
          v125 = &v118[v123];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v118[v123], 1, v119))
          {
            v126 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v124, v125, v119);
            __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v119);
          }
          v117[*(int *)(v122 + 24)] = v118[*(int *)(v122 + 24)];
          *((_BYTE *)a1 + v94[15]) = *((_BYTE *)a2 + v94[15]);
          *(_QWORD *)((char *)a1 + v94[16]) = *(_QWORD *)((char *)a2 + v94[16]);
          swift_retain();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          goto LABEL_46;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ConversationController.ParticipantInfo(uint64_t a1)
{
  int EnumCaseMultiPayload;
  int v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  type metadata accessor for Participant.State(0);
  v3 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v3)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
        goto LABEL_3;
      case 4:
        goto LABEL_12;
      default:
        break;
    }
  }
  else
  {
    switch(v3)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
LABEL_3:
        v4 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
        break;
      case 4:
LABEL_12:
        v13 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v15 = a1 + *(int *)(v14 + 48);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v15 + 120) >= 2uLL)
          __swift_destroy_boxed_opaque_existential_1(v15 + 96);
        if (*(_QWORD *)(v15 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)(a1 + *(int *)(v14 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
  }
  v5 = (int *)type metadata accessor for Participant(0);
  v6 = a1 + v5[5];
  v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (id *)(a1 + v5[7]);
  if (*v8)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v9 = a1 + v5[14];
  v10 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v9 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v11, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v11, v10);
  return swift_release();
}

_BYTE *initializeWithCopy for ConversationController.ParticipantInfo(_BYTE *a1, _BYTE *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  size_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  __int128 v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  int *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  __int128 v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = type metadata accessor for Participant.State(0);
  v6 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v6)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
        v7 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_23;
      case 4:
        v9 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v11 = *(int *)(v10 + 48);
        v12 = &a1[v11];
        v13 = &a2[v11];
        *(_OWORD *)v12 = *(_OWORD *)&a2[v11];
        v14 = *(_QWORD *)&a2[v11 + 16];
        v15 = *(_QWORD *)&a2[v11 + 24];
        *((_QWORD *)v12 + 2) = v14;
        *((_QWORD *)v12 + 3) = v15;
        *((_WORD *)v12 + 16) = *((_WORD *)v13 + 16);
        *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
        v12[48] = v13[48];
        *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
        *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
        v12[88] = v13[88];
        v12[89] = v13[89];
        v16 = *((_QWORD *)v13 + 15);
        swift_bridgeObjectRetain();
        if (v16)
        {
          if (v16 == 1)
          {
            v17 = v12 + 96;
            v18 = v13 + 96;
            v19 = 209;
            goto LABEL_17;
          }
          v32 = *((_QWORD *)v13 + 16);
          *((_QWORD *)v12 + 15) = v16;
          *((_QWORD *)v12 + 16) = v32;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))((uint64_t)(v12 + 96), (uint64_t)(v13 + 96), v16);
        }
        else
        {
          v31 = *((_OWORD *)v13 + 7);
          *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
          *((_OWORD *)v12 + 7) = v31;
          *((_QWORD *)v12 + 16) = *((_QWORD *)v13 + 16);
        }
        *((_DWORD *)v12 + 34) = *((_DWORD *)v13 + 34);
        v33 = *((_OWORD *)v13 + 10);
        *((_OWORD *)v12 + 9) = *((_OWORD *)v13 + 9);
        *((_OWORD *)v12 + 10) = v33;
        *((_OWORD *)v12 + 11) = *((_OWORD *)v13 + 11);
        v12[192] = v13[192];
        v17 = v12 + 208;
        v18 = v13 + 208;
        *((_QWORD *)v12 + 25) = *((_QWORD *)v13 + 25);
        v19 = 97;
LABEL_17:
        memcpy(v17, v18, v19);
        v34 = *((_QWORD *)v13 + 39);
        if (v34)
        {
          v35 = *((_QWORD *)v13 + 40);
          v36 = *((_QWORD *)v13 + 41);
          *((_QWORD *)v12 + 39) = v34;
          *((_QWORD *)v12 + 40) = v35;
          *((_QWORD *)v12 + 41) = v36;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 312) = *(_OWORD *)(v13 + 312);
          *((_QWORD *)v12 + 41) = *((_QWORD *)v13 + 41);
        }
        v37 = *(int *)(v10 + 64);
        v38 = &a1[v37];
        v39 = &a2[v37];
        v40 = *((_QWORD *)v39 + 1);
        if (v40)
        {
          *(_QWORD *)v38 = *(_QWORD *)v39;
          *((_QWORD *)v38 + 1) = v40;
          v41 = *((_QWORD *)v39 + 3);
          *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
          *((_QWORD *)v38 + 3) = v41;
          v38[32] = v39[32];
          *(_OWORD *)(v38 + 40) = *(_OWORD *)(v39 + 40);
          *((_QWORD *)v38 + 7) = *((_QWORD *)v39 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v42 = *((_OWORD *)v39 + 1);
          *(_OWORD *)v38 = *(_OWORD *)v39;
          *((_OWORD *)v38 + 1) = v42;
          v43 = *((_OWORD *)v39 + 3);
          *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
          *((_OWORD *)v38 + 3) = v43;
        }
LABEL_23:
        swift_storeEnumTagMultiPayload();
LABEL_24:
        v44 = (int *)type metadata accessor for Participant(0);
        v45 = v44[5];
        v46 = &a1[v45];
        v47 = &a2[v45];
        v48 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
        v49 = v44[6];
        v50 = &a1[v49];
        v51 = &a2[v49];
        v50[4] = v51[4];
        *(_DWORD *)v50 = *(_DWORD *)v51;
        v52 = v44[7];
        v53 = &a1[v52];
        v54 = &a2[v52];
        v55 = *(void **)v54;
        if (*(_QWORD *)v54)
        {
          v56 = *((_QWORD *)v54 + 1);
          *(_QWORD *)v53 = v55;
          *((_QWORD *)v53 + 1) = v56;
          v53[16] = v54[16];
          v57 = *((_QWORD *)v54 + 4);
          *((_QWORD *)v53 + 3) = *((_QWORD *)v54 + 3);
          *((_QWORD *)v53 + 4) = v57;
          v58 = v55;
          swift_bridgeObjectRetain();
        }
        else
        {
          v59 = *((_OWORD *)v54 + 1);
          *(_OWORD *)v53 = *(_OWORD *)v54;
          *((_OWORD *)v53 + 1) = v59;
          *((_QWORD *)v53 + 4) = *((_QWORD *)v54 + 4);
        }
        *(_QWORD *)&a1[v44[8]] = *(_QWORD *)&a2[v44[8]];
        v60 = v44[9];
        v61 = &a1[v60];
        v62 = &a2[v60];
        v63 = v62[1];
        *v61 = *v62;
        v61[1] = v63;
        a1[v44[10]] = a2[v44[10]];
        *(_QWORD *)&a1[v44[11]] = *(_QWORD *)&a2[v44[11]];
        v64 = v44[12];
        v65 = *(void **)&a2[v64];
        *(_QWORD *)&a1[v64] = v65;
        a1[v44[13]] = a2[v44[13]];
        v66 = v44[14];
        v67 = &a1[v66];
        v68 = &a2[v66];
        v69 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v70 = v65;
        if (__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69))
        {
          v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
          __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v69);
        }
        v72 = type metadata accessor for Participant.CountdownInfo(0);
        v73 = *(int *)(v72 + 20);
        v74 = &v67[v73];
        v75 = &v68[v73];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v73], 1, v69))
        {
          v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v74, v75, v69);
          __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v69);
        }
        v67[*(int *)(v72 + 24)] = v68[*(int *)(v72 + 24)];
        a1[v44[15]] = a2[v44[15]];
        *(_QWORD *)&a1[v44[16]] = *(_QWORD *)&a2[v44[16]];
        swift_retain();
        v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int));
        *(_QWORD *)&a1[*(int *)(v77 + 48)] = *(_QWORD *)&a2[*(int *)(v77 + 48)];
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        goto LABEL_24;
    }
  }
  else
  {
    switch(v6)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
        v8 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_43;
      case 4:
        v20 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
        v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v22 = *(int *)(v21 + 48);
        v23 = &a1[v22];
        v24 = &a2[v22];
        *(_OWORD *)v23 = *(_OWORD *)&a2[v22];
        v25 = *(_QWORD *)&a2[v22 + 16];
        v26 = *(_QWORD *)&a2[v22 + 24];
        *((_QWORD *)v23 + 2) = v25;
        *((_QWORD *)v23 + 3) = v26;
        *((_WORD *)v23 + 16) = *((_WORD *)v24 + 16);
        *((_QWORD *)v23 + 5) = *((_QWORD *)v24 + 5);
        v23[48] = v24[48];
        *(_OWORD *)(v23 + 56) = *(_OWORD *)(v24 + 56);
        *(_OWORD *)(v23 + 72) = *(_OWORD *)(v24 + 72);
        v23[88] = v24[88];
        v23[89] = v24[89];
        v27 = *((_QWORD *)v24 + 15);
        swift_bridgeObjectRetain();
        if (v27)
        {
          if (v27 == 1)
          {
            v28 = v23 + 96;
            v29 = v24 + 96;
            v30 = 209;
            goto LABEL_37;
          }
          v79 = *((_QWORD *)v24 + 16);
          *((_QWORD *)v23 + 15) = v27;
          *((_QWORD *)v23 + 16) = v79;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))((uint64_t)(v23 + 96), (uint64_t)(v24 + 96), v27);
        }
        else
        {
          v78 = *((_OWORD *)v24 + 7);
          *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
          *((_OWORD *)v23 + 7) = v78;
          *((_QWORD *)v23 + 16) = *((_QWORD *)v24 + 16);
        }
        *((_DWORD *)v23 + 34) = *((_DWORD *)v24 + 34);
        v80 = *((_OWORD *)v24 + 10);
        *((_OWORD *)v23 + 9) = *((_OWORD *)v24 + 9);
        *((_OWORD *)v23 + 10) = v80;
        *((_OWORD *)v23 + 11) = *((_OWORD *)v24 + 11);
        v23[192] = v24[192];
        v28 = v23 + 208;
        v29 = v24 + 208;
        *((_QWORD *)v23 + 25) = *((_QWORD *)v24 + 25);
        v30 = 97;
LABEL_37:
        memcpy(v28, v29, v30);
        v81 = *((_QWORD *)v24 + 39);
        if (v81)
        {
          v82 = *((_QWORD *)v24 + 40);
          v83 = *((_QWORD *)v24 + 41);
          *((_QWORD *)v23 + 39) = v81;
          *((_QWORD *)v23 + 40) = v82;
          *((_QWORD *)v23 + 41) = v83;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v23 + 312) = *(_OWORD *)(v24 + 312);
          *((_QWORD *)v23 + 41) = *((_QWORD *)v24 + 41);
        }
        v84 = *(int *)(v21 + 64);
        v85 = &a1[v84];
        v86 = &a2[v84];
        v87 = *((_QWORD *)v86 + 1);
        if (v87)
        {
          *(_QWORD *)v85 = *(_QWORD *)v86;
          *((_QWORD *)v85 + 1) = v87;
          v88 = *((_QWORD *)v86 + 3);
          *((_QWORD *)v85 + 2) = *((_QWORD *)v86 + 2);
          *((_QWORD *)v85 + 3) = v88;
          v85[32] = v86[32];
          *(_OWORD *)(v85 + 40) = *(_OWORD *)(v86 + 40);
          *((_QWORD *)v85 + 7) = *((_QWORD *)v86 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v89 = *((_OWORD *)v86 + 1);
          *(_OWORD *)v85 = *(_OWORD *)v86;
          *((_OWORD *)v85 + 1) = v89;
          v90 = *((_OWORD *)v86 + 3);
          *((_OWORD *)v85 + 2) = *((_OWORD *)v86 + 2);
          *((_OWORD *)v85 + 3) = v90;
        }
LABEL_43:
        swift_storeEnumTagMultiPayload();
LABEL_44:
        v91 = (int *)type metadata accessor for Participant(0);
        v92 = v91[5];
        v93 = &a1[v92];
        v94 = &a2[v92];
        v95 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v93, v94, v95);
        v96 = v91[6];
        v97 = &a1[v96];
        v98 = &a2[v96];
        v97[4] = v98[4];
        *(_DWORD *)v97 = *(_DWORD *)v98;
        v99 = v91[7];
        v100 = &a1[v99];
        v101 = &a2[v99];
        v102 = *(void **)v101;
        if (*(_QWORD *)v101)
        {
          v103 = *((_QWORD *)v101 + 1);
          *(_QWORD *)v100 = v102;
          *((_QWORD *)v100 + 1) = v103;
          v100[16] = v101[16];
          v104 = *((_QWORD *)v101 + 4);
          *((_QWORD *)v100 + 3) = *((_QWORD *)v101 + 3);
          *((_QWORD *)v100 + 4) = v104;
          v105 = v102;
          swift_bridgeObjectRetain();
        }
        else
        {
          v106 = *((_OWORD *)v101 + 1);
          *(_OWORD *)v100 = *(_OWORD *)v101;
          *((_OWORD *)v100 + 1) = v106;
          *((_QWORD *)v100 + 4) = *((_QWORD *)v101 + 4);
        }
        *(_QWORD *)&a1[v91[8]] = *(_QWORD *)&a2[v91[8]];
        v107 = v91[9];
        v108 = &a1[v107];
        v109 = &a2[v107];
        v110 = v109[1];
        *v108 = *v109;
        v108[1] = v110;
        a1[v91[10]] = a2[v91[10]];
        *(_QWORD *)&a1[v91[11]] = *(_QWORD *)&a2[v91[11]];
        v111 = v91[12];
        v112 = *(void **)&a2[v111];
        *(_QWORD *)&a1[v111] = v112;
        a1[v91[13]] = a2[v91[13]];
        v113 = v91[14];
        v114 = &a1[v113];
        v115 = &a2[v113];
        v116 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v117 = v112;
        if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v116))
        {
          v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16))(v114, v115, v116);
          __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v116);
        }
        v119 = type metadata accessor for Participant.CountdownInfo(0);
        v120 = *(int *)(v119 + 20);
        v121 = &v114[v120];
        v122 = &v115[v120];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v115[v120], 1, v116))
        {
          v123 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16))(v121, v122, v116);
          __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v116);
        }
        v114[*(int *)(v119 + 24)] = v115[*(int *)(v119 + 24)];
        a1[v91[15]] = a2[v91[15]];
        *(_QWORD *)&a1[v91[16]] = *(_QWORD *)&a2[v91[16]];
        swift_retain();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        goto LABEL_44;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_BYTE *assignWithCopy for ConversationController.ParticipantInfo(_BYTE *a1, _BYTE *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  size_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  void *v58;
  uint64_t v59;
  id v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  int *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  int v101;
  uint64_t v102;
  char *v103;
  char *v104;
  void *v105;
  uint64_t v106;
  id v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, type metadata accessor for ConversationController.ParticipantInfo);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = type metadata accessor for Participant.State(0);
    v6 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      switch(v6)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          v7 = type metadata accessor for Date();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
          goto LABEL_24;
        case 4:
          v9 = type metadata accessor for Date();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
          v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v11 = *(int *)(v10 + 48);
          v12 = &a1[v11];
          v13 = &a2[v11];
          *(_OWORD *)v12 = *(_OWORD *)&a2[v11];
          *((_QWORD *)v12 + 2) = *(_QWORD *)&a2[v11 + 16];
          v14 = *(_QWORD *)&a2[v11 + 24];
          *((_WORD *)v12 + 16) = *((_WORD *)v13 + 16);
          *((_QWORD *)v12 + 3) = v14;
          *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
          v12[48] = v13[48];
          v15 = *(_OWORD *)(v13 + 72);
          v16 = *(_OWORD *)(v13 + 56);
          v12[88] = v13[88];
          *(_OWORD *)(v12 + 56) = v16;
          *(_OWORD *)(v12 + 72) = v15;
          v12[89] = v13[89];
          v17 = *((_QWORD *)v13 + 15);
          swift_bridgeObjectRetain();
          if (v17)
          {
            if (v17 == 1)
            {
              v18 = v12 + 96;
              v19 = v13 + 96;
              v20 = 209;
              goto LABEL_18;
            }
            *((_QWORD *)v12 + 15) = v17;
            *((_QWORD *)v12 + 16) = *((_QWORD *)v13 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))((uint64_t)(v12 + 96), (uint64_t)(v13 + 96), v17);
          }
          else
          {
            v33 = *((_OWORD *)v13 + 6);
            v34 = *((_OWORD *)v13 + 7);
            *((_QWORD *)v12 + 16) = *((_QWORD *)v13 + 16);
            *((_OWORD *)v12 + 6) = v33;
            *((_OWORD *)v12 + 7) = v34;
          }
          *((_DWORD *)v12 + 34) = *((_DWORD *)v13 + 34);
          *((_QWORD *)v12 + 18) = *((_QWORD *)v13 + 18);
          *((_QWORD *)v12 + 19) = *((_QWORD *)v13 + 19);
          v35 = *((_OWORD *)v13 + 10);
          v36 = *((_OWORD *)v13 + 11);
          v12[192] = v13[192];
          *((_OWORD *)v12 + 10) = v35;
          *((_OWORD *)v12 + 11) = v36;
          *((_QWORD *)v12 + 25) = *((_QWORD *)v13 + 25);
          v18 = v12 + 208;
          v19 = v13 + 208;
          v20 = 97;
LABEL_18:
          memcpy(v18, v19, v20);
          v37 = *((_QWORD *)v13 + 39);
          if (v37)
          {
            v38 = *((_QWORD *)v13 + 40);
            *((_QWORD *)v12 + 39) = v37;
            *((_QWORD *)v12 + 40) = v38;
            *((_QWORD *)v12 + 41) = *((_QWORD *)v13 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v39 = *(_OWORD *)(v13 + 312);
            *((_QWORD *)v12 + 41) = *((_QWORD *)v13 + 41);
            *(_OWORD *)(v12 + 312) = v39;
          }
          v40 = *(int *)(v10 + 64);
          v41 = &a1[v40];
          v42 = &a2[v40];
          if (*((_QWORD *)v42 + 1))
          {
            *(_QWORD *)v41 = *(_QWORD *)v42;
            *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
            *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
            *((_QWORD *)v41 + 3) = *((_QWORD *)v42 + 3);
            v41[32] = v42[32];
            *((_QWORD *)v41 + 5) = *((_QWORD *)v42 + 5);
            *((_QWORD *)v41 + 6) = *((_QWORD *)v42 + 6);
            *((_QWORD *)v41 + 7) = *((_QWORD *)v42 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v43 = *(_OWORD *)v42;
            v44 = *((_OWORD *)v42 + 1);
            v45 = *((_OWORD *)v42 + 3);
            *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
            *((_OWORD *)v41 + 3) = v45;
            *(_OWORD *)v41 = v43;
            *((_OWORD *)v41 + 1) = v44;
          }
LABEL_24:
          swift_storeEnumTagMultiPayload();
LABEL_25:
          v46 = (int *)type metadata accessor for Participant(0);
          v47 = v46[5];
          v48 = &a1[v47];
          v49 = &a2[v47];
          v50 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
          v51 = v46[6];
          v52 = &a1[v51];
          v53 = &a2[v51];
          v54 = *(_DWORD *)v53;
          v52[4] = v53[4];
          *(_DWORD *)v52 = v54;
          v55 = v46[7];
          v56 = &a1[v55];
          v57 = &a2[v55];
          v58 = *(void **)v57;
          if (*(_QWORD *)v57)
          {
            *(_QWORD *)v56 = v58;
            v59 = *((_QWORD *)v57 + 1);
            v56[16] = v57[16];
            *((_QWORD *)v56 + 1) = v59;
            *((_QWORD *)v56 + 3) = *((_QWORD *)v57 + 3);
            *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
            v60 = v58;
            swift_bridgeObjectRetain();
          }
          else
          {
            v61 = *(_OWORD *)v57;
            v62 = *((_OWORD *)v57 + 1);
            *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
            *(_OWORD *)v56 = v61;
            *((_OWORD *)v56 + 1) = v62;
          }
          *(_QWORD *)&a1[v46[8]] = *(_QWORD *)&a2[v46[8]];
          v63 = v46[9];
          v64 = &a1[v63];
          v65 = &a2[v63];
          *v64 = *v65;
          v64[1] = v65[1];
          a1[v46[10]] = a2[v46[10]];
          *(_QWORD *)&a1[v46[11]] = *(_QWORD *)&a2[v46[11]];
          v66 = v46[12];
          v67 = *(void **)&a2[v66];
          *(_QWORD *)&a1[v66] = v67;
          a1[v46[13]] = a2[v46[13]];
          v68 = v46[14];
          v69 = &a1[v68];
          v70 = &a2[v68];
          v71 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v72 = v67;
          if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
          {
            v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
            __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v71);
          }
          v74 = type metadata accessor for Participant.CountdownInfo(0);
          v75 = *(int *)(v74 + 20);
          v76 = &v69[v75];
          v77 = &v70[v75];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v70[v75], 1, v71))
          {
            v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v76, v77, v71);
            __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v71);
          }
          v69[*(int *)(v74 + 24)] = v70[*(int *)(v74 + 24)];
          a1[v46[15]] = a2[v46[15]];
          *(_QWORD *)&a1[v46[16]] = *(_QWORD *)&a2[v46[16]];
          swift_retain();
          v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int));
          *(_QWORD *)&a1[*(int *)(v79 + 48)] = *(_QWORD *)&a2[*(int *)(v79 + 48)];
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
          goto LABEL_25;
      }
    }
    else
    {
      switch(v6)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          v8 = type metadata accessor for Date();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
          goto LABEL_44;
        case 4:
          v21 = type metadata accessor for Date();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
          v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v23 = *(int *)(v22 + 48);
          v24 = &a1[v23];
          v25 = &a2[v23];
          *(_OWORD *)v24 = *(_OWORD *)&a2[v23];
          *((_QWORD *)v24 + 2) = *(_QWORD *)&a2[v23 + 16];
          v26 = *(_QWORD *)&a2[v23 + 24];
          *((_WORD *)v24 + 16) = *((_WORD *)v25 + 16);
          *((_QWORD *)v24 + 3) = v26;
          *((_QWORD *)v24 + 5) = *((_QWORD *)v25 + 5);
          v24[48] = v25[48];
          v27 = *(_OWORD *)(v25 + 72);
          v28 = *(_OWORD *)(v25 + 56);
          v24[88] = v25[88];
          *(_OWORD *)(v24 + 56) = v28;
          *(_OWORD *)(v24 + 72) = v27;
          v24[89] = v25[89];
          v29 = *((_QWORD *)v25 + 15);
          swift_bridgeObjectRetain();
          if (v29)
          {
            if (v29 == 1)
            {
              v30 = v24 + 96;
              v31 = v25 + 96;
              v32 = 209;
              goto LABEL_38;
            }
            *((_QWORD *)v24 + 15) = v29;
            *((_QWORD *)v24 + 16) = *((_QWORD *)v25 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v29 - 8))((uint64_t)(v24 + 96), (uint64_t)(v25 + 96), v29);
          }
          else
          {
            v80 = *((_OWORD *)v25 + 6);
            v81 = *((_OWORD *)v25 + 7);
            *((_QWORD *)v24 + 16) = *((_QWORD *)v25 + 16);
            *((_OWORD *)v24 + 6) = v80;
            *((_OWORD *)v24 + 7) = v81;
          }
          *((_DWORD *)v24 + 34) = *((_DWORD *)v25 + 34);
          *((_QWORD *)v24 + 18) = *((_QWORD *)v25 + 18);
          *((_QWORD *)v24 + 19) = *((_QWORD *)v25 + 19);
          v82 = *((_OWORD *)v25 + 10);
          v83 = *((_OWORD *)v25 + 11);
          v24[192] = v25[192];
          *((_OWORD *)v24 + 10) = v82;
          *((_OWORD *)v24 + 11) = v83;
          *((_QWORD *)v24 + 25) = *((_QWORD *)v25 + 25);
          v30 = v24 + 208;
          v31 = v25 + 208;
          v32 = 97;
LABEL_38:
          memcpy(v30, v31, v32);
          v84 = *((_QWORD *)v25 + 39);
          if (v84)
          {
            v85 = *((_QWORD *)v25 + 40);
            *((_QWORD *)v24 + 39) = v84;
            *((_QWORD *)v24 + 40) = v85;
            *((_QWORD *)v24 + 41) = *((_QWORD *)v25 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v86 = *(_OWORD *)(v25 + 312);
            *((_QWORD *)v24 + 41) = *((_QWORD *)v25 + 41);
            *(_OWORD *)(v24 + 312) = v86;
          }
          v87 = *(int *)(v22 + 64);
          v88 = &a1[v87];
          v89 = &a2[v87];
          if (*((_QWORD *)v89 + 1))
          {
            *(_QWORD *)v88 = *(_QWORD *)v89;
            *((_QWORD *)v88 + 1) = *((_QWORD *)v89 + 1);
            *((_QWORD *)v88 + 2) = *((_QWORD *)v89 + 2);
            *((_QWORD *)v88 + 3) = *((_QWORD *)v89 + 3);
            v88[32] = v89[32];
            *((_QWORD *)v88 + 5) = *((_QWORD *)v89 + 5);
            *((_QWORD *)v88 + 6) = *((_QWORD *)v89 + 6);
            *((_QWORD *)v88 + 7) = *((_QWORD *)v89 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v90 = *(_OWORD *)v89;
            v91 = *((_OWORD *)v89 + 1);
            v92 = *((_OWORD *)v89 + 3);
            *((_OWORD *)v88 + 2) = *((_OWORD *)v89 + 2);
            *((_OWORD *)v88 + 3) = v92;
            *(_OWORD *)v88 = v90;
            *((_OWORD *)v88 + 1) = v91;
          }
LABEL_44:
          swift_storeEnumTagMultiPayload();
LABEL_45:
          v93 = (int *)type metadata accessor for Participant(0);
          v94 = v93[5];
          v95 = &a1[v94];
          v96 = &a2[v94];
          v97 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v95, v96, v97);
          v98 = v93[6];
          v99 = &a1[v98];
          v100 = &a2[v98];
          v101 = *(_DWORD *)v100;
          v99[4] = v100[4];
          *(_DWORD *)v99 = v101;
          v102 = v93[7];
          v103 = &a1[v102];
          v104 = &a2[v102];
          v105 = *(void **)v104;
          if (*(_QWORD *)v104)
          {
            *(_QWORD *)v103 = v105;
            v106 = *((_QWORD *)v104 + 1);
            v103[16] = v104[16];
            *((_QWORD *)v103 + 1) = v106;
            *((_QWORD *)v103 + 3) = *((_QWORD *)v104 + 3);
            *((_QWORD *)v103 + 4) = *((_QWORD *)v104 + 4);
            v107 = v105;
            swift_bridgeObjectRetain();
          }
          else
          {
            v108 = *(_OWORD *)v104;
            v109 = *((_OWORD *)v104 + 1);
            *((_QWORD *)v103 + 4) = *((_QWORD *)v104 + 4);
            *(_OWORD *)v103 = v108;
            *((_OWORD *)v103 + 1) = v109;
          }
          *(_QWORD *)&a1[v93[8]] = *(_QWORD *)&a2[v93[8]];
          v110 = v93[9];
          v111 = &a1[v110];
          v112 = &a2[v110];
          *v111 = *v112;
          v111[1] = v112[1];
          a1[v93[10]] = a2[v93[10]];
          *(_QWORD *)&a1[v93[11]] = *(_QWORD *)&a2[v93[11]];
          v113 = v93[12];
          v114 = *(void **)&a2[v113];
          *(_QWORD *)&a1[v113] = v114;
          a1[v93[13]] = a2[v93[13]];
          v115 = v93[14];
          v116 = &a1[v115];
          v117 = &a2[v115];
          v118 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v119 = v114;
          if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v118))
          {
            v120 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v116, v117, v118);
            __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v118);
          }
          v121 = type metadata accessor for Participant.CountdownInfo(0);
          v122 = *(int *)(v121 + 20);
          v123 = &v116[v122];
          v124 = &v117[v122];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v117[v122], 1, v118))
          {
            v125 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v123, v124, v118);
            __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v118);
          }
          v116[*(int *)(v121 + 24)] = v117[*(int *)(v121 + 24)];
          a1[v93[15]] = a2[v93[15]];
          *(_QWORD *)&a1[v93[16]] = *(_QWORD *)&a2[v93[16]];
          swift_retain();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
          goto LABEL_45;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for ConversationController.ParticipantInfo(char *a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = type metadata accessor for Participant.State(0);
  v6 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v6)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
        v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        goto LABEL_7;
      case 4:
        v7 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
        v9 = *(int *)(v8 + 64);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = *((_OWORD *)v11 + 1);
        *(_OWORD *)v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v12;
        v13 = *((_OWORD *)v11 + 3);
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        *((_OWORD *)v10 + 3) = v13;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        break;
    }
    v15 = (int *)type metadata accessor for Participant(0);
    v16 = v15[5];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    v20 = v15[6];
    v21 = &a1[v20];
    v22 = &a2[v20];
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    v23 = v15[7];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v26;
    *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
    *(_QWORD *)&a1[v15[8]] = *(_QWORD *)&a2[v15[8]];
    *(_OWORD *)&a1[v15[9]] = *(_OWORD *)&a2[v15[9]];
    a1[v15[10]] = a2[v15[10]];
    *(_QWORD *)&a1[v15[11]] = *(_QWORD *)&a2[v15[11]];
    *(_QWORD *)&a1[v15[12]] = *(_QWORD *)&a2[v15[12]];
    a1[v15[13]] = a2[v15[13]];
    v27 = v15[14];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
    }
    v32 = type metadata accessor for Participant.CountdownInfo(0);
    v33 = *(int *)(v32 + 20);
    v34 = &v28[v33];
    v35 = &v29[v33];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v29[v33], 1, v30))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v34, v35, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v30);
    }
    v28[*(int *)(v32 + 24)] = v29[*(int *)(v32 + 24)];
    a1[v15[15]] = a2[v15[15]];
    *(_QWORD *)&a1[v15[16]] = *(_QWORD *)&a2[v15[16]];
    v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int));
    *(_QWORD *)&a1[*(int *)(v37 + 48)] = *(_QWORD *)&a2[*(int *)(v37 + 48)];
  }
  else
  {
    switch(v6)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 5:
        v45 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
        goto LABEL_18;
      case 4:
        v38 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(a1, a2, v38);
        v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&a1[*(int *)(v39 + 48)], &a2[*(int *)(v39 + 48)], 0x150uLL);
        v40 = *(int *)(v39 + 64);
        v41 = &a1[v40];
        v42 = &a2[v40];
        v43 = *((_OWORD *)v42 + 1);
        *(_OWORD *)v41 = *(_OWORD *)v42;
        *((_OWORD *)v41 + 1) = v43;
        v44 = *((_OWORD *)v42 + 3);
        *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
        *((_OWORD *)v41 + 3) = v44;
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        break;
    }
    v46 = (int *)type metadata accessor for Participant(0);
    v47 = v46[5];
    v48 = &a1[v47];
    v49 = &a2[v47];
    v50 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
    v51 = v46[6];
    v52 = &a1[v51];
    v53 = &a2[v51];
    *(_DWORD *)v52 = *(_DWORD *)v53;
    v52[4] = v53[4];
    v54 = v46[7];
    v55 = &a1[v54];
    v56 = &a2[v54];
    v57 = *((_OWORD *)v56 + 1);
    *(_OWORD *)v55 = *(_OWORD *)v56;
    *((_OWORD *)v55 + 1) = v57;
    *((_QWORD *)v55 + 4) = *((_QWORD *)v56 + 4);
    *(_QWORD *)&a1[v46[8]] = *(_QWORD *)&a2[v46[8]];
    *(_OWORD *)&a1[v46[9]] = *(_OWORD *)&a2[v46[9]];
    a1[v46[10]] = a2[v46[10]];
    *(_QWORD *)&a1[v46[11]] = *(_QWORD *)&a2[v46[11]];
    *(_QWORD *)&a1[v46[12]] = *(_QWORD *)&a2[v46[12]];
    a1[v46[13]] = a2[v46[13]];
    v58 = v46[14];
    v59 = &a1[v58];
    v60 = &a2[v58];
    v61 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
    }
    v63 = type metadata accessor for Participant.CountdownInfo(0);
    v64 = *(int *)(v63 + 20);
    v65 = &v59[v64];
    v66 = &v60[v64];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v60[v64], 1, v61))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v65, v66, v61);
      __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v61);
    }
    v59[*(int *)(v63 + 24)] = v60[*(int *)(v63 + 24)];
    a1[v46[15]] = a2[v46[15]];
    *(_QWORD *)&a1[v46[16]] = *(_QWORD *)&a2[v46[16]];
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithTake for ConversationController.ParticipantInfo(char *a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, type metadata accessor for ConversationController.ParticipantInfo);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = type metadata accessor for Participant.State(0);
    v6 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      switch(v6)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          v14 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
          goto LABEL_8;
        case 4:
          v7 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
          v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x150uLL);
          v9 = *(int *)(v8 + 64);
          v10 = &a1[v9];
          v11 = &a2[v9];
          v12 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v12;
          v13 = *((_OWORD *)v11 + 3);
          *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
          *((_OWORD *)v10 + 3) = v13;
LABEL_8:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
          break;
      }
      v15 = (int *)type metadata accessor for Participant(0);
      v16 = v15[5];
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      v20 = v15[6];
      v21 = &a1[v20];
      v22 = &a2[v20];
      *(_DWORD *)v21 = *(_DWORD *)v22;
      v21[4] = v22[4];
      v23 = v15[7];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v26;
      *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
      *(_QWORD *)&a1[v15[8]] = *(_QWORD *)&a2[v15[8]];
      *(_OWORD *)&a1[v15[9]] = *(_OWORD *)&a2[v15[9]];
      a1[v15[10]] = a2[v15[10]];
      *(_QWORD *)&a1[v15[11]] = *(_QWORD *)&a2[v15[11]];
      *(_QWORD *)&a1[v15[12]] = *(_QWORD *)&a2[v15[12]];
      a1[v15[13]] = a2[v15[13]];
      v27 = v15[14];
      v28 = &a1[v27];
      v29 = &a2[v27];
      v30 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
      }
      v32 = type metadata accessor for Participant.CountdownInfo(0);
      v33 = *(int *)(v32 + 20);
      v34 = &v28[v33];
      v35 = &v29[v33];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v29[v33], 1, v30))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v34, v35, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v30);
      }
      v28[*(int *)(v32 + 24)] = v29[*(int *)(v32 + 24)];
      a1[v15[15]] = a2[v15[15]];
      *(_QWORD *)&a1[v15[16]] = *(_QWORD *)&a2[v15[16]];
      v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant, Int));
      *(_QWORD *)&a1[*(int *)(v37 + 48)] = *(_QWORD *)&a2[*(int *)(v37 + 48)];
    }
    else
    {
      switch(v6)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 5:
          v45 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
          goto LABEL_19;
        case 4:
          v38 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(a1, a2, v38);
          v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&a1[*(int *)(v39 + 48)], &a2[*(int *)(v39 + 48)], 0x150uLL);
          v40 = *(int *)(v39 + 64);
          v41 = &a1[v40];
          v42 = &a2[v40];
          v43 = *((_OWORD *)v42 + 1);
          *(_OWORD *)v41 = *(_OWORD *)v42;
          *((_OWORD *)v41 + 1) = v43;
          v44 = *((_OWORD *)v42 + 3);
          *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
          *((_OWORD *)v41 + 3) = v44;
LABEL_19:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
          break;
      }
      v46 = (int *)type metadata accessor for Participant(0);
      v47 = v46[5];
      v48 = &a1[v47];
      v49 = &a2[v47];
      v50 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
      v51 = v46[6];
      v52 = &a1[v51];
      v53 = &a2[v51];
      *(_DWORD *)v52 = *(_DWORD *)v53;
      v52[4] = v53[4];
      v54 = v46[7];
      v55 = &a1[v54];
      v56 = &a2[v54];
      v57 = *((_OWORD *)v56 + 1);
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *((_OWORD *)v55 + 1) = v57;
      *((_QWORD *)v55 + 4) = *((_QWORD *)v56 + 4);
      *(_QWORD *)&a1[v46[8]] = *(_QWORD *)&a2[v46[8]];
      *(_OWORD *)&a1[v46[9]] = *(_OWORD *)&a2[v46[9]];
      a1[v46[10]] = a2[v46[10]];
      *(_QWORD *)&a1[v46[11]] = *(_QWORD *)&a2[v46[11]];
      *(_QWORD *)&a1[v46[12]] = *(_QWORD *)&a2[v46[12]];
      a1[v46[13]] = a2[v46[13]];
      v58 = v46[14];
      v59 = &a1[v58];
      v60 = &a2[v58];
      v61 = type metadata accessor for Date();
      if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
      }
      v63 = type metadata accessor for Participant.CountdownInfo(0);
      v64 = *(int *)(v63 + 20);
      v65 = &v59[v64];
      v66 = &v60[v64];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v60[v64], 1, v61))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v65, v66, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v61);
      }
      v59[*(int *)(v63 + 24)] = v60[*(int *)(v63 + 24)];
      a1[v46[15]] = a2[v46[15]];
      *(_QWORD *)&a1[v46[16]] = *(_QWORD *)&a2[v46[16]];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata completion function for ConversationController.ParticipantInfo()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = type metadata accessor for Participant(319);
  if (v1 <= 0x3F)
  {
    v2[4] = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void _sSbIegr_SbIegd_TRTA_0()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v1);
  OUTLINED_FUNCTION_36();
}

void _sSbIegd_SbIegr_TRTA_0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = (*(uint64_t (**)(void))(v1 + 16))() & 1;
  OUTLINED_FUNCTION_0();
}

void _sSbIegy_SbytIegnr_TRTA_0(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_701(a1);
  OUTLINED_FUNCTION_0();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Call) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_546_0(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  OUTLINED_FUNCTION_36();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Activity, @in_guaranteed TUConversationActivitySessionApplicationState) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t *);
  uint64_t v5;

  v4 = *(void (**)(uint64_t, uint64_t, uint64_t *))(v3 + 16);
  v5 = a3;
  v4(a1, a2, &v5);
  OUTLINED_FUNCTION_36();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @in_guaranteed TUConversationNotice, @in_guaranteed TUScreenShareDeviceFamily?) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @in_guaranteed TUConversationNotice, @in_guaranteed TUScreenShareDeviceFamily?) -> (@out ())(a1, a2, a3, a4, a5 & 1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t *))(v5 + 16));
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Participant, @guaranteed TUConversationNotice, @unowned TUScreenShareDeviceFamily?) -> ()(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(v4 + 16))(a1, a2, *a3, *(_QWORD *)a4, *(unsigned __int8 *)(a4 + 8));
  OUTLINED_FUNCTION_0();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @in_guaranteed Data?) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_544_0(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  OUTLINED_FUNCTION_36();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Conversation, @guaranteed Data?) -> ()(uint64_t a1, _QWORD *a2)
{
  OUTLINED_FUNCTION_535_0(a1, a2);
  OUTLINED_FUNCTION_0();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed CameraPosition) -> (@out ())(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_545_0(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9, SWORD2(v9), SBYTE6(v9), SHIBYTE(v9));
  OUTLINED_FUNCTION_36();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned CameraPosition) -> ()(uint64_t a1, unsigned __int8 *a2)
{
  OUTLINED_FUNCTION_700(a1, a2);
  OUTLINED_FUNCTION_0();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUConversationState, @in_guaranteed TUConversationState) -> (@out ())(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t *, uint64_t *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(void (**)(uint64_t *, uint64_t *))(v2 + 16);
  v4 = a2;
  v5 = a1;
  v3(&v5, &v4);
  OUTLINED_FUNCTION_36();
}

void partial apply for thunk for @escaping @callee_guaranteed (@unowned TUConversationState, @unowned TUConversationState) -> ()(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2);
  OUTLINED_FUNCTION_0();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed CameraPosition) -> (@out ())(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_543_0(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9, SWORD2(v9), SBYTE6(v9), SHIBYTE(v9));
  OUTLINED_FUNCTION_36();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed BroadcastingState) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD *);
  _QWORD v6[2];
  char v7;

  v5 = *(void (**)(uint64_t, _QWORD *))(v4 + 16);
  v6[0] = a2;
  v6[1] = a3;
  v7 = a4;
  v5(a1, v6);
  OUTLINED_FUNCTION_32();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned BroadcastingState) -> ()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v2 + 16))(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed ConversationController.OneToOneModeChangeSource) -> (@out ())(char a1, char a2)
{
  uint64_t v2;

  return thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed ConversationController.OneToOneModeChangeSource) -> (@out ())(a1, a2 & 1, *(uint64_t (**)(char *, char *))(v2 + 16));
}

void partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool, @unowned ConversationController.OneToOneModeChangeSource) -> ()(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(v2 + 16))(*a1, *a2);
  OUTLINED_FUNCTION_0();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Float) -> (@out ())(uint64_t a1, float a2)
{
  uint64_t v2;
  void (*v3)(uint64_t, float *);
  float v4;

  v3 = *(void (**)(uint64_t, float *))(v2 + 16);
  v4 = a2;
  v3(a1, &v4);
  OUTLINED_FUNCTION_36();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Float) -> ()(uint64_t a1, float *a2)
{
  uint64_t v2;

  (*(void (**)(float))(v2 + 16))(*a2);
  OUTLINED_FUNCTION_0();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @in_guaranteed Int) -> (@out ())(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t *);
  uint64_t v4;

  v3 = *(void (**)(uint64_t, uint64_t *))(v2 + 16);
  v4 = a2;
  v3(a1, &v4);
  OUTLINED_FUNCTION_36();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant, @unowned Int) -> ()(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  (*(void (**)(uint64_t, _QWORD))(v2 + 16))(a1, *a2);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD58D43C()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_153_7(v0);
  swift_release();
  OUTLINED_FUNCTION_52_28();
  return OUTLINED_FUNCTION_18_19();
}

uint64_t partial apply for closure #1 in closure #2 in ConversationController.callUUIDsAwaitingFirstRemoteVideoFrame.didset()
{
  return partial apply for closure #1 in ConversationController.handleSendingVideoChanged(_:)((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t partial apply for closure #1 in ConversationController.handleSendingVideoChanged(_:)(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v5)(void);

  v2 = *(_QWORD *)(OUTLINED_FUNCTION_529_0(a1) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return OUTLINED_FUNCTION_449_0(v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v5);
}

void __swift_allocate_boxed_opaque_existential_0Tm(uint64_t *a1)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
    *a1 = swift_allocBox();
  OUTLINED_FUNCTION_0();
}

void specialized ConversationController.updateAudioState(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(a4 + 352))(a3, a4);
  ConversationController.broadcastingState.setter();
}

void partial apply for closure #1 in ConversationController.migrate(to:with:isUpgrade:)()
{
  uint64_t v0;

  closure #1 in ConversationController.migrate(to:with:isUpgrade:)(*(_QWORD *)(v0 + 16), &OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveAllVisibleParticipants);
}

void partial apply for closure #2 in ConversationController.migrate(to:with:isUpgrade:)()
{
  uint64_t v0;

  closure #1 in ConversationController.migrate(to:with:isUpgrade:)(*(_QWORD *)(v0 + 16), &OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
}

uint64_t partial apply for closure #5 in ConversationController.createNewParticipants(with:)(uint64_t a1)
{
  uint64_t v1;

  return closure #5 in ConversationController.createNewParticipants(with:)(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t partial apply for closure #1 in ConversationController.removeParticipant(_:at:)()
{
  return closure #1 in ConversationController.removeParticipant(_:at:)() & 1;
}

BOOL partial apply for closure #1 in ConversationController.processCurrentCall(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return closure #1 in ConversationController.processCurrentCall(_:)(a1, a2, *(_QWORD *)(v2 + 16));
}

void partial apply for closure #1 in closure #1 in ConversationController.registerForMoments()(void *a1)
{
  uint64_t v1;

  closure #1 in closure #1 in ConversationController.registerForMoments()(a1, v1);
}

void partial apply for closure #3 in ConversationController.updateOtherInvitedParticipants()(void **a1)
{
  uint64_t v1;

  closure #3 in ConversationController.updateOtherInvitedParticipants()(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1BD58D66C()
{
  _QWORD *v0;

  if (v0[2])
    OUTLINED_FUNCTION_53_2();
  if (v0[4])
    swift_release();
  if (v0[6])
    swift_release();
  if (v0[8])
    OUTLINED_FUNCTION_712();
  if (v0[10])
    swift_release();
  if (v0[12])
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD58D6E4()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.fetchExistingScreenSharingAttributes()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ConversationController.fetchExistingScreenSharingAttributes()(a1, v1);
}

uint64_t sub_1BD58D708()
{
  OUTLINED_FUNCTION_285();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in ConversationController.fetchExistingScreenSharingAttributes()()
{
  uint64_t v0;

  closure #1 in closure #1 in ConversationController.fetchExistingScreenSharingAttributes()(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t objectdestroy_71Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_96();
  v1 = (int *)OUTLINED_FUNCTION_14_2();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  OUTLINED_FUNCTION_285();
  v3 = v0 + ((v2 + 24) & ~v2);
  OUTLINED_FUNCTION_238();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v4 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v4);
      break;
    case 4u:
      v12 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v12);
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v14 = v3 + *(int *)(v13 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v14 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v14 + 96);
      if (*(_QWORD *)(v14 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v3 + *(int *)(v13 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v5 = v3 + v1[5];
  v6 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (id *)(v3 + v1[7]);
  if (*v7)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v8 = v3 + v1[14];
  v9 = OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_48_4(v8))
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8));
  v10 = OUTLINED_FUNCTION_830();
  if (!OUTLINED_FUNCTION_48_4(v8 + *(int *)(v10 + 20)))
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8));
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationController.scheduleKickabilityUpdate(for:)()
{
  return partial apply for closure #2 in ConversationController.updateBuzzedMember(_:)(type metadata accessor for Participant);
}

uint64_t partial apply for closure #2 in ConversationController.updateBuzzedMember(_:)(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(void);

  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_529_0(a1) - 8) + 80);
  return OUTLINED_FUNCTION_449_0(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2), v4);
}

uint64_t partial apply for closure #1 in ConversationController.didUpdateVisibleParticipant(_:)()
{
  return partial apply for closure #1 in ConversationController.removeParticipant(_:at:)() & 1;
}

void closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply()
{
  partial apply for closure #2 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)();
}

void closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)partial apply()
{
  partial apply for closure #3 in ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)();
}

uint64_t OUTLINED_FUNCTION_76_22(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_85_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  outlined init with copy of RadarReporting(v2, a2);
}

uint64_t OUTLINED_FUNCTION_89_24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_DWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(v1 - 184) = *(_QWORD *)a1;
  *(_QWORD *)(v1 - 176) = v4;
  *(_BYTE *)(v1 - 168) = v3 & 1;
  v5 = v1 - 184;
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v5 + 72) = *(_OWORD *)(a1 + 72);
  *(_QWORD *)(v1 - 96) = v2;
  return Participant.ScreenShareAttributes.debugDescription.getter();
}

void OUTLINED_FUNCTION_99_13()
{
  uint64_t *v0;
  uint64_t v1;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1 - 160, v0);
}

uint64_t OUTLINED_FUNCTION_104_13()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_109_12@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - a2, a1, v4);
}

uint64_t OUTLINED_FUNCTION_116_8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return a2(a1, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_119_7()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_128_9@<X0>(uint64_t (*a1)(BOOL, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  return a1((v2 & 1) == 0, v1, v3);
}

uint64_t OUTLINED_FUNCTION_132_10()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_134_9()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_138_10(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_140_10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[8] = a1;
  v2[4] = v1;
  v2[5] = v3;
  outlined init with copy of RadarReporting(v4 - 120, v4 - 160);
}

void OUTLINED_FUNCTION_142_3()
{
  uint64_t v0;
  uint64_t v1;

  outlined init with copy of RadarReporting(v0, v1 - 160);
}

uint64_t OUTLINED_FUNCTION_143_8()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_144_5()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 144) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_146_6()
{
  return static UUID.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_147_7@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_148_2@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

_QWORD *OUTLINED_FUNCTION_158_2()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 128), v0);
}

void OUTLINED_FUNCTION_159_8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 - 168, a2);
}

uint64_t OUTLINED_FUNCTION_160_3()
{
  uint64_t v0;

  return specialized >> prefix<A>(_:)(v0 - 160);
}

void OUTLINED_FUNCTION_161_9()
{
  ConversationController.lookupActiveConversation()();
}

void *OUTLINED_FUNCTION_165_7(void *result)
{
  return outlined consume of Participant.RemoteIdentifiers?(result);
}

uint64_t OUTLINED_FUNCTION_168_3()
{
  return os_log(_:dso:log:type:_:)();
}

_QWORD *OUTLINED_FUNCTION_170_2(__n128 *a1, __n128 a2)
{
  _QWORD *v2;

  a1[1] = a2;
  return __swift_project_boxed_opaque_existential_1(v2, v2[3]);
}

uint64_t OUTLINED_FUNCTION_172_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_174_5()
{
  uint64_t v0;

  return __swift_mutable_project_boxed_opaque_existential_1(v0, *(_QWORD *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_175_3@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t OUTLINED_FUNCTION_180_2()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_181_6@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_182_6()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void *OUTLINED_FUNCTION_183_4(void *result)
{
  return outlined consume of Participant.RemoteIdentifiers?(result);
}

void OUTLINED_FUNCTION_187_4()
{
  ConversationController.lookupActiveConversation()();
}

_QWORD *OUTLINED_FUNCTION_191_1()
{
  uint64_t v0;

  outlined init with take of Notice((__int128 *)(v0 - 168), v0 - 128);
  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 128), *(_QWORD *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_192_4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_194_3(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_197_3()
{
  return static UUID.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_202_5@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_204_5()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_205_5()
{
  return String.init<A>(reflecting:)();
}

void OUTLINED_FUNCTION_208_4()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  specialized >> prefix<A>(_:)(v1);
}

uint64_t OUTLINED_FUNCTION_209_3()
{
  uint64_t v0;
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1(v0);
  return outlined init with take of Notice((__int128 *)(v1 - 256), v0);
}

void OUTLINED_FUNCTION_210_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  outlined init with copy of RadarReporting(v2, a2);
}

uint64_t OUTLINED_FUNCTION_214_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void OUTLINED_FUNCTION_215_4()
{
  JUMPOUT(0x1C3B7361CLL);
}

_QWORD *OUTLINED_FUNCTION_218_3()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_219_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

_QWORD *OUTLINED_FUNCTION_221_5()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 80));
}

uint64_t OUTLINED_FUNCTION_222_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t (*v11)(uint64_t *);

  v11 = *(uint64_t (**)(uint64_t *))(v10 + 16);
  a10 = a1;
  return v11(&a10);
}

uint64_t OUTLINED_FUNCTION_223_2()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_224_3()
{
  return os_log(_:dso:log:type:_:)();
}

void OUTLINED_FUNCTION_226_2()
{
  ConversationController.lookupActiveConversation()();
}

uint64_t OUTLINED_FUNCTION_227_3()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_233_4()
{
  return static UUID.== infix(_:_:)();
}

_QWORD *OUTLINED_FUNCTION_237_6()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_240_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(v1 + a1, 1, 1, v2);
}

uint64_t OUTLINED_FUNCTION_242_5()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_243_2()
{
  uint64_t v0;

  return outlined init with take of Notice((__int128 *)(v0 - 168), v0 - 128);
}

uint64_t OUTLINED_FUNCTION_251_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return outlined init with take of Notice(&a9, (uint64_t)&a13);
}

uint64_t OUTLINED_FUNCTION_254_4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_255_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_256_4()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_265_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_273_6(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&a9, a2);
}

uint64_t OUTLINED_FUNCTION_275_4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 312) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_287_3()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_290_5()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_291_6()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_292_3()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 - 128);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 - 160), v1);
  Conversation.containsAuthorizedToChangeGroupMembership(participantWithHandle:)(v0, v1, v3);
}

uint64_t OUTLINED_FUNCTION_295_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_303_4()
{
  ConversationController.lookupActiveConversation()();
}

uint64_t OUTLINED_FUNCTION_304_4()
{
  return type metadata accessor for Date();
}

uint64_t OUTLINED_FUNCTION_307_3()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_308_3@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

_QWORD *OUTLINED_FUNCTION_310_3()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

void OUTLINED_FUNCTION_311_5()
{
  ConversationController.lookupActiveConversation()();
}

uint64_t OUTLINED_FUNCTION_314_2(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_316_4()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 104);
}

void OUTLINED_FUNCTION_320_3()
{
  ConversationController.lookupActiveConversation()();
}

uint64_t OUTLINED_FUNCTION_325_3()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_326_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  __int128 v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v5 = va_arg(va1, __int128);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  return outlined init with take of Notice((__int128 *)va, (uint64_t)va1);
}

uint64_t OUTLINED_FUNCTION_327_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_328_3()
{
  return os_log(_:dso:log:type:_:)();
}

void *OUTLINED_FUNCTION_329_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = a1;
  *(_QWORD *)(v2 - 112) = v1;
  return _Block_copy((const void *)(v2 - 136));
}

unint64_t OUTLINED_FUNCTION_331_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return lazy protocol witness table accessor for type String and conformance String();
}

uint64_t OUTLINED_FUNCTION_332_4()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_333_4()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t OUTLINED_FUNCTION_334_4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v0, v1, (uint64_t *)(v2 - 200));
}

uint64_t OUTLINED_FUNCTION_336_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_339_1(char a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 96) = v3;
  *(_QWORD *)(v2 + 104) = v4;
  *(_BYTE *)(v2 + 72) = a1 & 1;
  *(_QWORD *)(v2 + 136) = v3;
  *(_QWORD *)(v2 + 144) = v4;
  *(_BYTE *)(v2 + 112) = v1 & 1;
  return static os_log_type_t.default.getter();
}

void OUTLINED_FUNCTION_340_3()
{
  uint64_t v0;

  outlined init with copy of RadarReporting(v0 - 152, v0 - 216);
}

uint64_t OUTLINED_FUNCTION_341_2@<X0>(uint64_t (*a1)(_QWORD)@<X8>)
{
  return a1(0);
}

uint64_t OUTLINED_FUNCTION_343_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_349_2()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_353_3()
{
  return type metadata accessor for UUID();
}

void OUTLINED_FUNCTION_357_2()
{
  ConversationController.lookupActiveConversation()();
}

void OUTLINED_FUNCTION_358_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 - 256, a2);
}

uint64_t OUTLINED_FUNCTION_359_1(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 + 896));
}

void OUTLINED_FUNCTION_360_1(float a1)
{
  float *v1;
  uint64_t v2;

  *v1 = a1;
  outlined init with copy of RadarReporting(v2 - 288, v2 - 184);
}

_QWORD *OUTLINED_FUNCTION_363_3@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_370_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_372_3()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_374_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  outlined init with copy of RadarReporting(v2, a2);
}

id OUTLINED_FUNCTION_375_3()
{
  void *v0;

  return outlined copy of Participant.RemoteIdentifiers?(v0);
}

id OUTLINED_FUNCTION_376_3()
{
  void *v0;

  return outlined copy of Participant.RemoteIdentifiers?(v0);
}

_QWORD *OUTLINED_FUNCTION_378_3()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

void OUTLINED_FUNCTION_379_2()
{
  ConversationController.broadcastingState.setter();
}

uint64_t OUTLINED_FUNCTION_385_1()
{
  uint64_t v0;

  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_386_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

id OUTLINED_FUNCTION_390_1()
{
  void *v0;

  return outlined copy of Participant.RemoteIdentifiers?(v0);
}

uint64_t OUTLINED_FUNCTION_392_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_395_0()
{
  return swift_endAccess();
}

void OUTLINED_FUNCTION_396_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 - 136, a2);
}

uint64_t OUTLINED_FUNCTION_399_3(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_403_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  outlined init with copy of RadarReporting(v2, a2);
}

unint64_t OUTLINED_FUNCTION_406_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 56) = v1;
  return lazy protocol witness table accessor for type String and conformance String();
}

uint64_t OUTLINED_FUNCTION_407_1(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3[8] = result;
  v3[4] = v1;
  v3[5] = v2;
  return result;
}

void OUTLINED_FUNCTION_411_2()
{
  JUMPOUT(0x1C3B7361CLL);
}

uint64_t OUTLINED_FUNCTION_412_2()
{
  return 0;
}

char *OUTLINED_FUNCTION_414_2@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_418_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_422_1()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_423_1()
{
  return swift_getObjectType();
}

_QWORD *OUTLINED_FUNCTION_425_1()
{
  uint64_t v0;

  outlined init with take of Notice((__int128 *)(v0 - 168), v0 - 128);
  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 128), *(_QWORD *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_426_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 216);
}

double OUTLINED_FUNCTION_427_1@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 96) = 1;
  return result;
}

_QWORD *OUTLINED_FUNCTION_428_1()
{
  uint64_t v0;

  outlined init with take of Notice((__int128 *)(v0 - 160), v0 - 120);
  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_429_0()
{
  return os_log(_:dso:log:type:_:)();
}

void OUTLINED_FUNCTION_431_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
  specialized >> prefix<A>(_:)(v4);
}

uint64_t OUTLINED_FUNCTION_432()
{
  return String.init<A>(reflecting:)();
}

_QWORD *OUTLINED_FUNCTION_435_0(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

void OUTLINED_FUNCTION_438_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined assign with take of Participant?(a1, v3, a3);
}

id OUTLINED_FUNCTION_440_0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[8] = a1;
  v3[4] = v2;
  v3[5] = v4;
  *(_QWORD *)(v5 - 160) = v1;
  return v1;
}

void OUTLINED_FUNCTION_441_0()
{
  ConversationController.lookupActiveConversation()();
}

uint64_t OUTLINED_FUNCTION_442_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 192);
}

uint64_t OUTLINED_FUNCTION_443_1()
{
  return static UUID.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_444_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_446_1(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(*(_QWORD *)(v1 - 200), a1);
}

uint64_t OUTLINED_FUNCTION_449_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_450_0()
{
  return swift_release();
}

id OUTLINED_FUNCTION_451_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;

  v3 = *(void **)(a1 + a2);
  *(_QWORD *)(v2 + 128) = v3;
  return v3;
}

uint64_t OUTLINED_FUNCTION_453()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_455()
{
  return Date.init()();
}

id OUTLINED_FUNCTION_456(__n128 *a1, __n128 a2)
{
  void *v2;
  uint64_t v3;

  a1[1] = a2;
  *(_QWORD *)(v3 - 120) = v2;
  return v2;
}

id OUTLINED_FUNCTION_457(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;

  return specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(a1, a2, a3, a4, v17, *(_DWORD *)(v18 - 100), *(_QWORD *)(v18 - 96), *(_DWORD *)(v18 - 84), a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t OUTLINED_FUNCTION_458_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

BOOL OUTLINED_FUNCTION_459_0(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_460()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_462()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_464_1()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void OUTLINED_FUNCTION_465_0()
{
  const void *v0;

  _Block_release(v0);
}

void OUTLINED_FUNCTION_466_0()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, *(_QWORD *)(v0 + 24));
  specialized >> prefix<A>(_:)(v1);
}

uint64_t OUTLINED_FUNCTION_468_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void OUTLINED_FUNCTION_471()
{
  uint64_t v0;
  uint64_t v1;

  Conversation.displayableActiveParticipants.getter(v0, v1);
}

void OUTLINED_FUNCTION_472_0()
{
  specialized static ParticipantContactDetailsCache.cache(for:)();
}

id OUTLINED_FUNCTION_473_1()
{
  return VideoMessageController.init(callCenter:notificationCenter:)();
}

uint64_t OUTLINED_FUNCTION_474()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_475(uint64_t a1)
{
  return a1 + 16;
}

void OUTLINED_FUNCTION_479_1()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, *(_QWORD *)(v1 - 216));
  specialized >> prefix<A>(_:)(v0);
}

void OUTLINED_FUNCTION_480_0()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_481_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_482()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  specialized >> prefix<A>(_:)(v0);
}

void OUTLINED_FUNCTION_483(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;

  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(a1, a2, a3, a4, *(_QWORD *)(v23 - 184), 0, 0, v22, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22);
}

void OUTLINED_FUNCTION_484_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 - 152, a2);
}

void OUTLINED_FUNCTION_485_0(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 72) = v2;
  *(_QWORD *)(v3 - 176) = a1;
  *(_QWORD *)(v3 - 168) = a2;
}

uint64_t OUTLINED_FUNCTION_489_1()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_491_0()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_494_1()
{
  return static UUID.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_496_0()
{
  uint64_t v0;

  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v0);
}

uint64_t OUTLINED_FUNCTION_499()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_501_1()
{
  return static UUID.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_503_1()
{
  return type metadata accessor for DispatchTime();
}

uint64_t OUTLINED_FUNCTION_504_0()
{
  return Notification.object.getter();
}

void OUTLINED_FUNCTION_506(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_507(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

_QWORD *OUTLINED_FUNCTION_509_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + a1) = v2;
  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 - 128), *(_QWORD *)(v3 - 104));
}

uint64_t OUTLINED_FUNCTION_511_1()
{
  return type metadata accessor for Notification();
}

_QWORD *OUTLINED_FUNCTION_513_0()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 128), *(_QWORD *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_514_1()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t OUTLINED_FUNCTION_515_0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v1 + 88);
  v2[7] = v0;
  v2[8] = v5;
  v2[4] = v3;
  v2[5] = v4;
  return static os_log_type_t.default.getter();
}

_QWORD *OUTLINED_FUNCTION_516_1()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

_QWORD *OUTLINED_FUNCTION_517()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 168), *(_QWORD *)(v0 - 144));
}

uint64_t OUTLINED_FUNCTION_518_1()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 232);
}

uint64_t OUTLINED_FUNCTION_519_1()
{
  char v0;
  uint64_t (*v1)(_QWORD);

  return v1(v0 & 1);
}

uint64_t OUTLINED_FUNCTION_520_1()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 256);
}

void OUTLINED_FUNCTION_522_1()
{
  uint64_t v0;

  outlined init with take of Notice((__int128 *)(v0 - 160), v0 - 120);
  ConversationController.participant(with:)();
}

uint64_t OUTLINED_FUNCTION_523_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 856) = a1;
  return v1 + 856;
}

uint64_t OUTLINED_FUNCTION_524()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 240);
}

uint64_t OUTLINED_FUNCTION_527_0()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_528_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 296);
}

uint64_t OUTLINED_FUNCTION_529_0(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t OUTLINED_FUNCTION_530_0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return v1(a1, v4, v2, v3);
}

uint64_t OUTLINED_FUNCTION_533_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v4, a2, v3);
}

uint64_t OUTLINED_FUNCTION_535_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v2 + 16))(a1, *a2, a2[1]);
}

void OUTLINED_FUNCTION_536(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,uint64_t a22)
{
  uint64_t v22;

  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(a1, a2, a3, a4, a5, 0, 0, v22, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22);
}

uint64_t OUTLINED_FUNCTION_539_0()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_543_0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t (*v14)(char *);

  v14 = *(uint64_t (**)(char *))(v13 + 16);
  a13 = a1;
  return v14(&a13);
}

uint64_t OUTLINED_FUNCTION_544_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t *);

  v11 = *(uint64_t (**)(uint64_t, uint64_t *))(v10 + 16);
  a9 = a2;
  a10 = a3;
  return v11(a1, &a9);
}

uint64_t OUTLINED_FUNCTION_545_0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t (*v14)(uint64_t, char *);

  v14 = *(uint64_t (**)(uint64_t, char *))(v13 + 16);
  a13 = a2;
  return v14(a1, &a13);
}

uint64_t OUTLINED_FUNCTION_546_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t (*v11)(uint64_t *);

  v11 = *(uint64_t (**)(uint64_t *))(v10 + 16);
  a9 = a1;
  a10 = a2;
  return v11(&a9);
}

uint64_t OUTLINED_FUNCTION_551_0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v1, (uint64_t *)(v2 - 296));
}

uint64_t OUTLINED_FUNCTION_552_0(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[8] = result;
  v2[4] = v1;
  v2[5] = v3;
  return result;
}

void OUTLINED_FUNCTION_553(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 - 184, a2);
}

uint64_t OUTLINED_FUNCTION_558()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v3, v1);
}

double OUTLINED_FUNCTION_559(_OWORD *a1)
{
  uint64_t v1;
  double result;

  *(_QWORD *)(v1 - 256) = a1;
  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_560_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

BOOL OUTLINED_FUNCTION_561_0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_565_0()
{
  return swift_getObjectType();
}

_QWORD *OUTLINED_FUNCTION_566()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

BOOL OUTLINED_FUNCTION_570_0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_571_0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 328) = result;
  return result;
}

_QWORD *OUTLINED_FUNCTION_574()
{
  _QWORD *v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

uint64_t OUTLINED_FUNCTION_575_0()
{
  return specialized _ArrayBuffer._consumeAndCreateNew()();
}

uint64_t OUTLINED_FUNCTION_576()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_584_0()
{
  return swift_unknownObjectWeakInit();
}

void OUTLINED_FUNCTION_590_0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v3;
  *(_BYTE *)(v1 + 32) = a1 & 1;
  ConversationController.isLocallySharingScreen.getter();
}

uint64_t OUTLINED_FUNCTION_592(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

_QWORD *OUTLINED_FUNCTION_594_0()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 200), *(_QWORD *)(v0 - 176));
}

uint64_t OUTLINED_FUNCTION_595_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_596()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t OUTLINED_FUNCTION_601_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_603(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

_QWORD *OUTLINED_FUNCTION_605_0(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_606(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);

  return v4(a1, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_607_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_610_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_613_0()
{
  return Logger.logObject.getter();
}

void OUTLINED_FUNCTION_615_0()
{
  unint64_t *v0;

  type metadata accessor for NSObject(0, v0);
}

void OUTLINED_FUNCTION_616_0()
{
  type metadata accessor for TUConversationState(0);
}

void OUTLINED_FUNCTION_617_0()
{
  unint64_t *v0;

  type metadata accessor for NSObject(0, v0);
}

char *OUTLINED_FUNCTION_619@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - a1;
}

char *OUTLINED_FUNCTION_620@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_621()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_623(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 168));
}

void OUTLINED_FUNCTION_624_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  type metadata accessor for TUConversationAVMode(0);
}

uint64_t OUTLINED_FUNCTION_625_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 160);
}

void OUTLINED_FUNCTION_627_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 + 464, a2);
}

uint64_t OUTLINED_FUNCTION_628_0()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with take of Notice((__int128 *)(v0 + 464), v1 - 256);
}

uint64_t OUTLINED_FUNCTION_629(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return Logger.logObject.getter();
}

id OUTLINED_FUNCTION_630_0(id a1, SEL a2, uint64_t a3)
{
  uint64_t v3;

  return objc_msgSend(a1, a2, a3, v3);
}

void OUTLINED_FUNCTION_631(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  outlined init with copy of RadarReporting(v14 - 104, (uint64_t)va);
}

void OUTLINED_FUNCTION_632(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  va_list va;

  va_start(va, a6);
  outlined init with copy of RadarReporting(v6 - 104, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_633_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_635()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[12] = v4;
  v1[13] = v3;
  v1[9] = v0;
  v1[10] = v2;
  return static os_log_type_t.default.getter();
}

unint64_t OUTLINED_FUNCTION_637_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 56) = v1;
  return lazy protocol witness table accessor for type String and conformance String();
}

void OUTLINED_FUNCTION_638_0()
{
  ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
}

void OUTLINED_FUNCTION_639_0()
{
  ConversationController.broadcastingState.setter();
}

uint64_t OUTLINED_FUNCTION_640_0()
{
  return ConversationController.isOneToOneModeEnabled.getter();
}

void OUTLINED_FUNCTION_641_0(void *a1)
{
  uint64_t v1;

  ConversationController.lookupActiveParticipant(from:)(a1, v1);
}

void OUTLINED_FUNCTION_642()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_643_0()
{
  return String.init<A>(reflecting:)();
}

_QWORD *OUTLINED_FUNCTION_644_0()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 128), v0);
}

uint64_t OUTLINED_FUNCTION_647_0()
{
  char v0;

  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_648_0()
{
  return String.init<A>(reflecting:)();
}

void OUTLINED_FUNCTION_649_0()
{
  ConversationController.lookupActiveConversation()();
}

void OUTLINED_FUNCTION_650_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + 22) = 2080;
  *(_QWORD *)(v2 - 184) = v0;
}

uint64_t OUTLINED_FUNCTION_651()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_653_0()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 256, 0);
}

void OUTLINED_FUNCTION_655_0()
{
  uint64_t v0;
  uint64_t v1;

  outlined init with copy of RadarReporting(v0, v1 - 160);
}

uint64_t OUTLINED_FUNCTION_656_0()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with take of Notice((__int128 *)(v1 - 120), v0);
}

uint64_t OUTLINED_FUNCTION_657_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_661_0()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_664_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_665(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 240));
}

__n128 OUTLINED_FUNCTION_666_0(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = v1[4];
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_667_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 184));
}

uint64_t OUTLINED_FUNCTION_668_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 224);
}

uint64_t OUTLINED_FUNCTION_669_0()
{
  uint64_t v0;

  return v0 - 224;
}

uint64_t OUTLINED_FUNCTION_670()
{
  return String.init<A>(reflecting:)();
}

void OUTLINED_FUNCTION_671_0()
{
  uint64_t v0;

  outlined init with copy of RadarReporting(v0 - 224, v0 - 288);
}

uint64_t OUTLINED_FUNCTION_672_0()
{
  uint64_t v0;

  return outlined init with take of Notice((__int128 *)(v0 - 144), v0 - 104);
}

uint64_t OUTLINED_FUNCTION_673_0()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t OUTLINED_FUNCTION_674_0()
{
  uint64_t v0;
  uint64_t v1;

  return outlined init with copy of RecentCallProviding & RecentsControllable(v0 + 688, v1 - 240);
}

uint64_t OUTLINED_FUNCTION_675_0()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_677()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t OUTLINED_FUNCTION_680()
{
  return String.init<A>(reflecting:)();
}

void OUTLINED_FUNCTION_681()
{
  closure #1 in ConversationController.setupScreenSharingSessionCallbacks()();
}

uint64_t OUTLINED_FUNCTION_682(_QWORD *a1)
{
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_684()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_686(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(a1, 0);
}

uint64_t OUTLINED_FUNCTION_687(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = a1;
  return type metadata accessor for Participant.CountdownInfo(0);
}

uint64_t OUTLINED_FUNCTION_688()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_689()
{
  return static os_log_type_t.fault.getter();
}

uint64_t OUTLINED_FUNCTION_691@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  return a1(1);
}

uint64_t OUTLINED_FUNCTION_692()
{
  return swift_release();
}

void OUTLINED_FUNCTION_694()
{
  ConversationController.lookupActiveConversation()();
}

uint64_t OUTLINED_FUNCTION_695()
{
  return ConversationController.isOneToOneModeEnabled.getter();
}

void OUTLINED_FUNCTION_696(_QWORD *a1)
{
  unint64_t *v1;

  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(a1, v1);
}

uint64_t OUTLINED_FUNCTION_697@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  return a3(a1, a2, v3, v4);
}

void OUTLINED_FUNCTION_698()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_700(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 16))(a1, *a2);
}

uint64_t OUTLINED_FUNCTION_701(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t OUTLINED_FUNCTION_702(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return static os_log_type_t.default.getter();
}

id OUTLINED_FUNCTION_703()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_705(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 296));
}

uint64_t OUTLINED_FUNCTION_706(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[8] = result;
  v2[4] = v1;
  v2[5] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_707()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 208);
}

uint64_t OUTLINED_FUNCTION_708()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_709(uint64_t a1)
{
  return *(_QWORD *)a1;
}

id OUTLINED_FUNCTION_710(__n128 *a1, __n128 a2)
{
  void *v2;
  uint64_t v3;

  a1[1] = a2;
  *(_QWORD *)(v3 - 160) = v2;
  return v2;
}

id OUTLINED_FUNCTION_711(__n128 *a1, __n128 a2)
{
  void *v2;
  uint64_t v3;

  a1[1] = a2;
  *(_QWORD *)(v3 - 128) = v2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_712()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_716()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 184);
}

uint64_t OUTLINED_FUNCTION_717()
{
  return swift_unknownObjectRelease();
}

id OUTLINED_FUNCTION_722(uint64_t a1, uint64_t a2)
{
  void *v2;

  __swift_project_value_buffer(a1, a2);
  return v2;
}

void OUTLINED_FUNCTION_728(float a1)
{
  float *v1;
  char v2;
  uint64_t v3;

  *v1 = a1;
  *(_BYTE *)(v3 - 96) = v2;
}

uint64_t OUTLINED_FUNCTION_731()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_732@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return __swift_destroy_boxed_opaque_existential_1(v1 + a1);
}

void OUTLINED_FUNCTION_734()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 232);
  outlined init with copy of RadarReporting(v0 + 272, v0 + 192);
}

uint64_t OUTLINED_FUNCTION_735()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_736()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_739()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_742(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_743()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 248);
}

uint64_t OUTLINED_FUNCTION_746()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_747()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_748()
{
  return ConversationController.isOneToOneModeEnabled.getter();
}

void OUTLINED_FUNCTION_749(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x2Au);
}

uint64_t OUTLINED_FUNCTION_750()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_751@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

void OUTLINED_FUNCTION_753(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo8TUHandleCG_15ConversationKit11ParticipantVs5NeverOTg5(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_755()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_758()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_760()
{
  return Set.Iterator.init(_cocoa:)();
}

id OUTLINED_FUNCTION_762()
{
  void *v0;

  return v0;
}

__n128 OUTLINED_FUNCTION_763(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = v1[10];
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_764()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_765()
{
  return type metadata accessor for VideoMessageController();
}

uint64_t OUTLINED_FUNCTION_766()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

void OUTLINED_FUNCTION_768()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_770()
{
  return _dispatchPreconditionTest(_:)();
}

void OUTLINED_FUNCTION_771()
{
  uint64_t v0;

  ConversationController.conversationUUID.setter(v0);
}

uint64_t OUTLINED_FUNCTION_772()
{
  uint64_t v0;
  uint64_t v1;

  return specialized Set.contains(_:)(v0, v1);
}

uint64_t OUTLINED_FUNCTION_776()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_777()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_778()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_781()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_782()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 272));
}

BOOL OUTLINED_FUNCTION_786@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_787()
{
  ConversationController.lookupActiveConversation()();
}

uint64_t OUTLINED_FUNCTION_789()
{
  return static os_log_type_t.error.getter();
}

uint64_t OUTLINED_FUNCTION_792()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 152);
}

uint64_t OUTLINED_FUNCTION_793()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_794(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 200));
}

id OUTLINED_FUNCTION_795(__n128 a1)
{
  void *v1;
  uint64_t v2;

  *(__n128 *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 96) = 0;
  *(_QWORD *)(v2 - 88) = 0;
  return v1;
}

uint64_t OUTLINED_FUNCTION_796()
{
  return static DispatchTime.now()();
}

void OUTLINED_FUNCTION_798()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  outlined destroy of AccountUpdateNotice(v0, v1);
}

uint64_t OUTLINED_FUNCTION_801()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void OUTLINED_FUNCTION_802(_QWORD *a1)
{
  unint64_t *v1;

  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(a1, v1);
}

uint64_t OUTLINED_FUNCTION_803()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_804()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_807()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_812(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 288) = result;
  return result;
}

void OUTLINED_FUNCTION_813()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_814()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t OUTLINED_FUNCTION_816()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t OUTLINED_FUNCTION_817()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void OUTLINED_FUNCTION_818()
{
  uint64_t v0;

  specialized >> prefix<A>(_:)(v0);
}

_QWORD *OUTLINED_FUNCTION_820()
{
  uint64_t v0;
  _QWORD *v1;

  return __swift_project_boxed_opaque_existential_1(v1, v0);
}

uint64_t OUTLINED_FUNCTION_821()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_822()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_823(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 312) = result;
  *(_QWORD *)(v2 - 304) = a2;
  return result;
}

void OUTLINED_FUNCTION_824()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[12] = v4;
  v1[13] = v3;
  v1[9] = v0;
  v1[10] = v2;
}

uint64_t OUTLINED_FUNCTION_825(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[8] = a1;
  v2[4] = v1;
  v2[5] = v3;
  return static os_log_type_t.default.getter();
}

uint64_t OUTLINED_FUNCTION_826()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

void OUTLINED_FUNCTION_827(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 144) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_830()
{
  return type metadata accessor for Participant.CountdownInfo(0);
}

uint64_t OUTLINED_FUNCTION_833()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 + 64);
}

uint64_t OUTLINED_FUNCTION_836()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_837()
{
  return String.init<A>(reflecting:)();
}

void NoticeViewModel.title.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void NoticeViewModel.subtitle.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

id NoticeViewModel.image.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void NoticeViewModel.primaryActionTitle.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void NoticeViewModel.secondaryActionTitle.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t NoticeViewModel.uuid.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_1_150();
  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_50();
  return v1(v0);
}

uint64_t type metadata accessor for NoticeViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for NoticeViewModel;
  if (!type metadata singleton initialization cache for NoticeViewModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t NoticeViewModel.needsIconBleedAdjustment.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_1_150() + 40));
}

uint64_t NoticeViewModel.type.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_1_150() + 44));
}

void NoticeViewModel.primaryAction.getter()
{
  OUTLINED_FUNCTION_1_150();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void NoticeViewModel.secondaryAction.getter()
{
  OUTLINED_FUNCTION_1_150();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t NoticeViewModel.init(title:subtitle:image:primaryActionTitle:secondaryActionTitle:uuid:needsIconBleedAdjustment:type:primaryAction:secondaryAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  _QWORD *v22;
  _QWORD *v23;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  v18 = (int *)OUTLINED_FUNCTION_1_150();
  v19 = (char *)a9 + v18[9];
  v20 = OUTLINED_FUNCTION_33_0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a11, v20);
  *((_BYTE *)a9 + v18[10]) = a12;
  *(_QWORD *)((char *)a9 + v18[11]) = a13;
  v22 = (_QWORD *)((char *)a9 + v18[12]);
  *v22 = a14;
  v22[1] = a15;
  v23 = (_QWORD *)((char *)a9 + v18[13]);
  *v23 = a16;
  v23[1] = a17;
  return result;
}

uint64_t CNKNoticeRecipe.viewModelWithPrimaryAction(_:andSecondaryAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  void *v5;
  void *v6;
  void *v7;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  int *v25;
  id v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v7 = v5;
  v9 = OUTLINED_FUNCTION_25_1(a1, sel_title);
  v10 = OUTLINED_FUNCTION_62_12();
  v31 = v11;
  v32 = v10;

  v13 = OUTLINED_FUNCTION_25_1(v12, sel_subtitle);
  v30 = OUTLINED_FUNCTION_62_12();
  v15 = v14;

  v17 = OUTLINED_FUNCTION_25_1(v16, sel_image);
  v18 = outlined bridged method (pb) of @objc CNKNoticeRecipe.primaryActionTitle.getter(v5, (SEL *)&selRef_primaryActionTitle);
  v20 = v19;
  v21 = outlined bridged method (pb) of @objc CNKNoticeRecipe.primaryActionTitle.getter(v5, (SEL *)&selRef_secondaryActionTitle);
  v23 = v22;
  v24 = OUTLINED_FUNCTION_25_1(v21, sel_uuid);
  v25 = (int *)OUTLINED_FUNCTION_1_150();
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v26 = objc_msgSend(v7, sel_type);
  *a5 = v32;
  a5[1] = v31;
  a5[2] = v30;
  a5[3] = v15;
  a5[4] = (uint64_t)v17;
  a5[5] = v18;
  a5[6] = v20;
  a5[7] = v21;
  a5[8] = v23;
  *((_BYTE *)a5 + v25[10]) = 1;
  *(uint64_t *)((char *)a5 + v25[11]) = (uint64_t)v26;
  v27 = (uint64_t *)((char *)a5 + v25[12]);
  *v27 = a1;
  v27[1] = a2;
  v28 = (uint64_t *)((char *)a5 + v25[13]);
  *v28 = a3;
  v28[1] = a4;
  swift_retain();
  return swift_retain();
}

uint64_t outlined bridged method (pb) of @objc CNKNoticeRecipe.primaryActionTitle.getter(void *a1, SEL *a2)
{
  void *v2;

  if (objc_msgSend(a1, *a2))
  {
    OUTLINED_FUNCTION_62_12();

  }
  return OUTLINED_FUNCTION_50();
}

_QWORD *initializeBufferWithCopyOfBuffer for NoticeViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  char *v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v10 = (void *)a2[4];
    v9 = a2[5];
    a1[4] = v10;
    a1[5] = v9;
    v11 = a2[7];
    a1[6] = a2[6];
    a1[7] = v11;
    v12 = a3[9];
    v27 = (char *)a2 + v12;
    v28 = (char *)a1 + v12;
    a1[8] = a2[8];
    v13 = type metadata accessor for UUID();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v28, v27, v13);
    v16 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *(_QWORD *)((char *)v4 + v16) = *(_QWORD *)((char *)a2 + v16);
    v17 = a3[12];
    v18 = a3[13];
    v19 = (_QWORD *)((char *)v4 + v17);
    v20 = (_QWORD *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (_QWORD *)((char *)v4 + v18);
    v23 = (_QWORD *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for NoticeViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for NoticeViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v25;
  char *v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v9 = (void *)a2[4];
  v8 = a2[5];
  a1[4] = v9;
  a1[5] = v8;
  v10 = a2[7];
  a1[6] = a2[6];
  a1[7] = v10;
  v11 = a3[9];
  v25 = (char *)a2 + v11;
  v26 = (char *)a1 + v11;
  a1[8] = a2[8];
  v12 = type metadata accessor for UUID();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v26, v25, v12);
  v15 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  v16 = a3[12];
  v17 = a3[13];
  v18 = (_QWORD *)((char *)a1 + v16);
  v19 = (_QWORD *)((char *)a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (_QWORD *)((char *)a1 + v17);
  v22 = (_QWORD *)((char *)a2 + v17);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for NoticeViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a2[4];
  v7 = (void *)a1[4];
  a1[4] = v6;
  v8 = v6;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = a3[9];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v13 = a3[12];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  v17 = a3[13];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for NoticeViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = a3[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

_QWORD *assignWithTake for NoticeViewModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (void *)a1[4];
  a1[4] = a2[4];

  v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[8];
  a1[7] = a2[7];
  a1[8] = v10;
  swift_bridgeObjectRelease();
  v11 = a3[9];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  swift_release();
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD58FE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_33_0();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for NoticeViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD58FEE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_33_0();
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for NoticeViewModel()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of RecentsCollectionViewCellProtocol.avatarViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCellProtocol.configure(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t CKContainerSetupInfo.collaborationInitiator.getter()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_2_25();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = CKContainerSetupInfo.collaborationInitiator.getter;
  return CKContainerSetupInfo.userNameAndEmail.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_0_158();
  if (v1)
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_11_7(*(uint64_t (**)(void))(v3 + 8));
  }
  else
  {
    v6[4] = v5;
    v6[5] = v4;
    v6[6] = v2;
    v6[7] = v0;
    OUTLINED_FUNCTION_2_14();
    return OUTLINED_FUNCTION_2_132();
  }
}

id _SWPendingCollaboration.collaborationInitiator.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v19;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v1);
  v6 = (char *)&v19 - v5;
  v7 = OUTLINED_FUNCTION_25_1(v4, sel_collaborationMetadata);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_initiatorNameComponents);

    if (v9)
    {
      static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

      v11 = OUTLINED_FUNCTION_51_5();
      v12 = 0;
    }
    else
    {
      v11 = OUTLINED_FUNCTION_51_5();
      v12 = 1;
    }
    OUTLINED_FUNCTION_66_1((uint64_t)v3, v12, v10, v11);
    v15 = outlined init with take of PersonNameComponents?((uint64_t)v3, (uint64_t)v6);
  }
  else
  {
    v13 = type metadata accessor for PersonNameComponents();
    v15 = OUTLINED_FUNCTION_66_1((uint64_t)v6, 1, v14, v13);
  }
  v16 = OUTLINED_FUNCTION_25_1(v15, sel_collaborationMetadata);
  if (v16)
    outlined bridged method (ob) of @objc _SWCollaborationMetadata.initiatorHandle.getter(v16);
  v17 = objc_allocWithZone(MEMORY[0x1E0DBD220]);
  return OUTLINED_FUNCTION_5_132();
}

uint64_t URL.collaborationInitiator.getter()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_2_25();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = URL.collaborationInitiator.getter;
  return URL.userNameAndEmail.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_0_158();
  if (v1)
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_11_7(*(uint64_t (**)(void))(v3 + 8));
  }
  else
  {
    v6[4] = v5;
    v6[5] = v4;
    v6[6] = v2;
    v6[7] = v0;
    OUTLINED_FUNCTION_2_14();
    return OUTLINED_FUNCTION_2_132();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 16);
  PersonNameComponents.init(formattedName:)(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 48), v3);
  v4 = objc_allocWithZone(MEMORY[0x1E0DBD220]);
  v5 = @nonobjc TUCollaborationInitiator.init(nameComponents:handle:)(v3, v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v5);
}

id SWShareableContent.collaborationInitiator.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_25_1(v2, sel_initiatorNameComponents);
  if (v5)
  {
    v6 = v5;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    v8 = OUTLINED_FUNCTION_51_5();
    v9 = 0;
  }
  else
  {
    v8 = type metadata accessor for PersonNameComponents();
    v9 = 1;
  }
  OUTLINED_FUNCTION_66_1((uint64_t)v4, v9, v7, v8);
  outlined bridged method (pb) of @objc SWShareableContent.initiatorHandle.getter(v0);
  v10 = objc_allocWithZone(MEMORY[0x1E0DBD220]);
  return OUTLINED_FUNCTION_5_132();
}

uint64_t specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  swift_allocError();
  *v3 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

uint64_t specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 40);
  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a2, v4);
  return swift_continuation_throwingResume();
}

uint64_t specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5 = *(_QWORD **)(*(_QWORD *)(a1 + 64) + 40);
  *v5 = a2;
  v5[1] = a3;
  v5[2] = a4;
  v5[3] = a5;
  return swift_continuation_throwingResume();
}

uint64_t CKContainerSetupInfo.userNameAndEmail.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 152) = v0;
  return OUTLINED_FUNCTION_23_57();
}

{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[19];
  v2 = (void *)objc_opt_self();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = CKContainerSetupInfo.userNameAndEmail.getter;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSString?, @unowned NSString?, @unowned NSError?) -> () with result type (String, String);
  v4[3] = &block_descriptor_104;
  v4[4] = v3;
  objc_msgSend(v2, sel_userNameAndEmail_containerSetupInfo_completionHandler_, 0, v1, v4);
  return OUTLINED_FUNCTION_31_1();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_23();
  *(_QWORD *)(v0 + 160) = v1;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
}

{
  uint64_t v0;

  swift_willThrow();
  return OUTLINED_FUNCTION_3_125(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSString?, @unowned NSString?, @unowned NSError?) -> () with result type (String, String)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 32);
  if (a4)
    return specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(v4, (uint64_t)a4);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(v4, v6, v8, v9, v10);
}

uint64_t URL.userNameAndEmail.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 152) = v0;
  return OUTLINED_FUNCTION_23_57();
}

{
  _QWORD *v0;
  void *v1;
  NSURL *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = (void *)objc_opt_self();
  URL._bridgeToObjectiveC()(v2);
  v4 = v3;
  v0[20] = v3;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = URL.userNameAndEmail.getter;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSString?, @unowned NSString?, @unowned NSError?) -> () with result type (String, String);
  v6[3] = &block_descriptor_6_12;
  v6[4] = v5;
  objc_msgSend(v1, sel_userNameAndEmail_containerSetupInfo_completionHandler_, v4, 0, v6);
  return OUTLINED_FUNCTION_31_1();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_23();
  *(_QWORD *)(v0 + 168) = v1;
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v2, v1, v3, v4);
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_willThrow();

  return OUTLINED_FUNCTION_3_125(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t outlined bridged method (pb) of @objc SWShareableContent.initiatorHandle.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_initiatorHandle);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (ob) of @objc _SWCollaborationMetadata.initiatorHandle.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_initiatorHandle);

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined init with take of PersonNameComponents?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo18NSAttributedStringCG_So6CGSizeVs5NeverOTg50131_s15ConversationKit38SystemApertureIncomingCallControlsViewC28maxSubtitleLabelSizeThatFits33_085E1321DC3A0050D89D5085A314C15FLLySo6f10VAGFAGSo18dE6CXEfU_0I3Kit0klmnoP0CAJTf1cn_n(unint64_t a1, char *a2, double a3, double a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  void (*v14)(id);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;

  v6 = a1;
  if (a1 >> 62)
    goto LABEL_14;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v24 = MEMORY[0x1E0DEE9D8];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v7 < 0)
        break;
      v8 = 0;
      v22 = v6 & 0xC000000000000001;
      v9 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel;
      v10 = v6;
      while (v7 != v8)
      {
        if (v22)
          v11 = (id)MEMORY[0x1C3B73D18](v8, v6);
        else
          v11 = *(id *)(v6 + 8 * v8 + 32);
        v12 = v11;
        v13 = *(_QWORD **)&a2[v9];
        v14 = *(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v13) + 0x80);
        v15 = v11;
        v14(v12);
        objc_msgSend(v13, sel_sizeThatFits_, a3, a4);
        v17 = v16;
        v19 = v18;

        v20 = *(_QWORD *)(v24 + 16);
        if (v20 >= *(_QWORD *)(v24 + 24) >> 1)
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        ++v8;
        *(_QWORD *)(v24 + 16) = v20 + 1;
        v21 = v24 + 16 * v20;
        *(_QWORD *)(v21 + 32) = v17;
        *(_QWORD *)(v21 + 40) = v19;
        v6 = v10;
        if (v7 == v8)
          goto LABEL_12;
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v7)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:

  }
}

__int128 *SystemApertureIncomingCallControlsView.Constants.leadingViewSize.unsafeMutableAddressor()
{
  if (one-time initialization token for leadingViewSize != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.leadingViewSize;
}

double static SystemApertureIncomingCallControlsView.Constants.leadingViewSize.getter()
{
  if (one-time initialization token for leadingViewSize != -1)
    swift_once();
  return *(double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize;
}

__int128 *SystemApertureIncomingCallControlsView.Constants.avatarMargins.unsafeMutableAddressor()
{
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.avatarMargins;
}

double static SystemApertureIncomingCallControlsView.Constants.avatarMargins.getter()
{
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  return *(double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.brandedCallMargins.unsafeMutableAddressor()
{
  if (one-time initialization token for brandedCallMargins != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.brandedCallMargins;
}

double static SystemApertureIncomingCallControlsView.Constants.brandedCallMargins.getter()
{
  if (one-time initialization token for brandedCallMargins != -1)
    swift_once();
  return *(double *)&static SystemApertureIncomingCallControlsView.Constants.brandedCallMargins;
}

double one-time initialization function for avatarMissingSpacer()
{
  double v0;
  double result;

  if (one-time initialization token for textNoAvatarMinX != -1)
    swift_once();
  v0 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX;
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  result = v0
         - *((double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins + 1)
         - *((double *)&xmmword_1EF4FD4A0 + 1);
  *(double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer = result;
  return result;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX.unsafeMutableAddressor()
{
  if (one-time initialization token for textNoAvatarMinX != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer.unsafeMutableAddressor()
{
  if (one-time initialization token for avatarMissingSpacer != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer;
}

double static SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for avatarMissingSpacer, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer);
}

void one-time initialization function for textNoAvatarMinX()
{
  static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX = 0x403D000000000000;
}

double static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for textNoAvatarMinX, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX);
}

void one-time initialization function for brandedCallImageCornerRadius()
{
  static SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius = 0x4028000000000000;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for brandedCallImageCornerRadius != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius;
}

double static SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for brandedCallImageCornerRadius, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius);
}

void one-time initialization function for textTopInset(uint64_t a1)
{
  one-time initialization function for textTopInset(a1, &one-time initialization token for sensorRegionHeight, &static SystemApertureConstants.sensorRegionHeight, &static SystemApertureIncomingCallControlsView.Constants.textTopInset);
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.textTopInset.unsafeMutableAddressor()
{
  if (one-time initialization token for textTopInset != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.textTopInset;
}

double static SystemApertureIncomingCallControlsView.Constants.textTopInset.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for textTopInset, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.textTopInset);
}

void one-time initialization function for textBottomInset(uint64_t a1)
{
  one-time initialization function for textTopInset(a1, &one-time initialization token for actionMargins, &qword_1EF4FD530, &static SystemApertureIncomingCallControlsView.Constants.textBottomInset);
}

void one-time initialization function for textTopInset(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  if (*a2 != -1)
    swift_once();
  *a4 = *a3;
  OUTLINED_FUNCTION_0();
}

__int128 *SystemApertureIncomingCallControlsView.Constants.actionMargins.unsafeMutableAddressor()
{
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.actionMargins;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.textBottomInset.unsafeMutableAddressor()
{
  if (one-time initialization token for textBottomInset != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.textBottomInset;
}

double static SystemApertureIncomingCallControlsView.Constants.textBottomInset.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for textBottomInset, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.textBottomInset);
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.minimumTextWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for minimumTextWidth != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.minimumTextWidth;
}

double static SystemApertureIncomingCallControlsView.Constants.minimumTextWidth.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for minimumTextWidth, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.minimumTextWidth);
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold.unsafeMutableAddressor()
{
  if (one-time initialization token for secondaryShortTextWidthThreshold != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold;
}

double static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for secondaryShortTextWidthThreshold, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold);
}

double one-time initialization function for secondaryShortTextWidthWithoutAvatarThreshold()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double result;

  if (one-time initialization token for secondaryShortTextWidthThreshold != -1)
    swift_once();
  v0 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold;
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  v1 = *((double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins + 1);
  if (one-time initialization token for leadingViewSize != -1)
    swift_once();
  v2 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize;
  v3 = *((double *)&xmmword_1EF4FD4A0 + 1);
  if (one-time initialization token for textNoAvatarMinX != -1)
    swift_once();
  result = v0
         + v1
         + v2
         + v3
         - *(double *)&static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX
         + 2.22507386e-308;
  *(double *)&static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold = result;
  return result;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold.unsafeMutableAddressor()
{
  if (one-time initialization token for secondaryShortTextWidthWithoutAvatarThreshold != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold;
}

double static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for secondaryShortTextWidthWithoutAvatarThreshold, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold);
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.actionDiameter.unsafeMutableAddressor()
{
  if (one-time initialization token for actionDiameter != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.actionDiameter;
}

double static SystemApertureIncomingCallControlsView.Constants.actionDiameter.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for actionDiameter, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter);
}

double static SystemApertureIncomingCallControlsView.Constants.actionMargins.getter()
{
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  return *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionMargins;
}

uint64_t *SystemApertureIncomingCallControlsView.Constants.interActionPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for interActionPadding != -1)
    swift_once();
  return &static SystemApertureIncomingCallControlsView.Constants.interActionPadding;
}

double static SystemApertureIncomingCallControlsView.Constants.interActionPadding.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for interActionPadding, (uint64_t)&static SystemApertureIncomingCallControlsView.Constants.interActionPadding);
}

void SystemApertureIncomingCallControlsView.leadingView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView) = a1;

}

uint64_t SystemApertureIncomingCallControlsView.alternatingLabelController.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_alternatingLabelController) = a1;
  return swift_release();
}

char *SystemApertureIncomingCallControlsView.__allocating_init(recipe:controlsManager:menuHostViewController:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return SystemApertureIncomingCallControlsView.init(recipe:controlsManager:menuHostViewController:)(a1, a2, a3, a4);
}

char *SystemApertureIncomingCallControlsView.init(recipe:controlsManager:menuHostViewController:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  double v25;
  id v26;
  id v27;
  UILabel *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  objc_class *v59;
  char *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  void *v65;
  void *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  objc_super v84;
  UIColor_optional v85;

  v79 = a4;
  v81 = a3;
  v75 = a2;
  v74 = OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAction?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_79();
  v77 = v7 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v74 - v10;
  v80 = (id)type metadata accessor for ConversationControlsAction();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_79();
  v15 = (_BYTE *)(v13 - v14);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v74 - v17;
  v19 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_features;
  v20 = one-time initialization token for shared;
  v21 = v4;
  if (v20 != -1)
    swift_once();
  v22 = static Features.shared;
  *(_QWORD *)&v4[v19] = static Features.shared;
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView] = 0;
  v23 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel;
  type metadata accessor for UILabel();
  v24 = (void *)objc_opt_self();
  v25 = *MEMORY[0x1E0DC1438];
  v26 = v22;
  v27 = objc_msgSend(v24, sel_systemFontOfSize_weight_, 16.67, v25, v74);
  v85.value.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UILabel.init(font:textColor:)(v28, (UIFont)v27, v85);
  v78 = v23;
  *(_QWORD *)&v21[v23] = v29;
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryBadge] = 0;
  v30 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel;
  v31 = type metadata accessor for BadgedLabel();
  v32 = objc_msgSend(v24, sel_systemFontOfSize_, 14.0);
  v33 = OUTLINED_FUNCTION_2_11((uint64_t)v32, sel_secondaryLabelColor);
  *(_QWORD *)&v21[v30] = BadgedLabel.__allocating_init(font:textColor:badge:)(v32, v33);
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_alternatingLabelController] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_context] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_cnkContentAlpha] = 0x3FF0000000000000;
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_recipe]);
  v34 = v75;
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_controlsManager] = v75;
  v35 = OUTLINED_FUNCTION_28_1();
  v76 = v35;
  v40 = a1;
  v41 = a1 + *(int *)(v35 + 60);
  v42 = *(char *)(v41 + 40);
  if ((v42 & 0x80000000) != 0)
    v31 = MEMORY[0x1E0DEE9D8];
  else
    OUTLINED_FUNCTION_40_61(v35, v36, v37, v38, v39, v42);
  specialized Collection.first.getter(v31, (uint64_t)v11);
  v43 = v34;
  OUTLINED_FUNCTION_27();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v80) == 1)
  {
    static ConversationControlsAction.rejectCall(controlsManager:)(v43, v18);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for ConversationControlsAction?);
  }
  else
  {
    outlined init with take of ConversationControlsAction((uint64_t)v11, (uint64_t)v18);
  }
  ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)();
  v45 = v44;
  OUTLINED_FUNCTION_22_29(v44, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_rejectButton] = v45;
  v51 = *(char *)(v41 + 40);
  if ((v51 & 0x80000000) != 0)
    v45 = MEMORY[0x1E0DEE9D8];
  else
    OUTLINED_FUNCTION_40_61(v46, v47, v48, v49, v50, v51);
  v52 = v77;
  specialized BidirectionalCollection.last.getter(v45, v77);
  OUTLINED_FUNCTION_27();
  if (__swift_getEnumTagSinglePayload(v52, 1, (uint64_t)v80) == 1)
  {
    static ConversationControlsAction.acceptCall(controlsManager:)(v43, v15);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for ConversationControlsAction?);
  }
  else
  {
    outlined init with take of ConversationControlsAction(v52, (uint64_t)v15);
  }
  v53 = v43;
  v54 = v40;
  v80 = v53;
  ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)();
  v56 = v55;
  outlined destroy of AccountUpdateNotice((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_acceptButton] = v56;
  v57 = *(_QWORD *)(v40 + 80);
  v58 = *(id *)&v21[v78];
  objc_msgSend(v58, sel_setAttributedText_, v57);

  v59 = (objc_class *)ObjC metadata update function for SystemApertureIncomingCallControlsView();
  v84.receiver = v21;
  v84.super_class = v59;
  v60 = (char *)objc_msgSendSuper2(&v84, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  SystemApertureIncomingCallControlsView.updateLeadingView()();
  SystemApertureIncomingCallControlsView.updateSecondaryBadge()();
  SystemApertureIncomingCallControlsView.updateSecondaryLabel()();
  v61 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel;
  v62 = objc_msgSend(*(id *)&v60[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel], sel_layer);
  OUTLINED_FUNCTION_65(v62, sel_setAllowsHitTesting_);

  v63 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel;
  v64 = objc_msgSend(*(id *)&v60[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel], sel_layer);
  OUTLINED_FUNCTION_65(v64, sel_setAllowsHitTesting_);

  v65 = *(void **)&v60[v61];
  OUTLINED_FUNCTION_65(v65, sel_setUserInteractionEnabled_);
  v66 = *(void **)&v60[v63];
  OUTLINED_FUNCTION_65(v66, sel_setUserInteractionEnabled_);
  objc_msgSend(v60, sel_addSubview_, v65);
  objc_msgSend(v60, sel_addSubview_, v66);
  OUTLINED_FUNCTION_45_46(OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_rejectButton);
  OUTLINED_FUNCTION_45_46(OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_acceptButton);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v67 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v67, (uint64_t)&static Logger.conversationControls);
  v68 = OUTLINED_FUNCTION_11_17();
  v69 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v68, v69))
  {
    v70 = (uint8_t *)OUTLINED_FUNCTION_105();
    v83 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v70 = 136446210;
    v71 = OUTLINED_FUNCTION_7_10();
    v82 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_54_1();
    _os_log_impl(&dword_1BD004000, v68, v69, "[%{public}s] created", v70, 0xCu);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  outlined destroy of AccountUpdateNotice(v54, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  return v60;
}

uint64_t type metadata accessor for SystemApertureIncomingCallControlsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SystemApertureIncomingCallControlsView;
  if (!type metadata singleton initialization cache for SystemApertureIncomingCallControlsView)
    return swift_getSingletonMetadata();
  return result;
}

void SystemApertureIncomingCallControlsView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void SystemApertureIncomingCallControlsView.init(coder:)()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  double v6;
  id v7;
  id v8;
  UILabel *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  UIColor_optional v14;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_features;
  if (one-time initialization token for shared != -1)
    swift_once();
  v3 = static Features.shared;
  *(_QWORD *)&v1[v2] = static Features.shared;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView] = 0;
  v4 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel;
  type metadata accessor for UILabel();
  v5 = (void *)objc_opt_self();
  v6 = *MEMORY[0x1E0DC1438];
  v7 = v3;
  v8 = objc_msgSend(v5, sel_systemFontOfSize_weight_, 16.67, v6);
  v14.value.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UILabel.init(font:textColor:)(v9, (UIFont)v8, v14);
  *(_QWORD *)&v1[v4] = v10;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryBadge] = 0;
  v11 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel;
  type metadata accessor for BadgedLabel();
  v12 = objc_msgSend(v5, sel_systemFontOfSize_, 14.0);
  v13 = OUTLINED_FUNCTION_2_11((uint64_t)v12, sel_secondaryLabelColor);
  *(_QWORD *)&v1[v11] = BadgedLabel.__allocating_init(font:textColor:badge:)(v12, v13);
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_alternatingLabelController] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_context] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_cnkContentAlpha] = 0x3FF0000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id SystemApertureIncomingCallControlsView.controlsManager.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_controlsManager));
}

uint64_t SystemApertureIncomingCallControlsView.context.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_context);
}

id SystemApertureIncomingCallControlsView.cnkContentAlpha.didset()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, sel_alpha);
    objc_msgSend(v2, sel_setAlpha_);

  }
  v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v3, sel_setAlpha_);
  v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v4, sel_setAlpha_);
  v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_rejectButton];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v5, sel_setAlpha_);
  v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_acceptButton];
  objc_msgSend(v0, sel_alpha);
  return objc_msgSend(v6, sel_setAlpha_);
}

double SystemApertureIncomingCallControlsView.cnkContentAlpha.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_cnkContentAlpha;
  OUTLINED_FUNCTION_2_0();
  return *(double *)v1;
}

id SystemApertureIncomingCallControlsView.cnkContentAlpha.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_cnkContentAlpha);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return SystemApertureIncomingCallControlsView.cnkContentAlpha.didset();
}

uint64_t (*SystemApertureIncomingCallControlsView.cnkContentAlpha.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return SystemApertureIncomingCallControlsView.cnkContentAlpha.modify;
}

uint64_t SystemApertureIncomingCallControlsView.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))SystemApertureIncomingCallControlsView.cnkContentAlpha.didset);
}

uint64_t key path setter for SystemApertureIncomingCallControlsView.recipe : SystemApertureIncomingCallControlsView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x120))(v6);
}

id SystemApertureIncomingCallControlsView.recipe.didset()
{
  void *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  char *v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  char v42;
  uint64_t v43[6];

  v1 = v0;
  swift_getObjectType();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.error.getter();
  v5 = "rolsViewControllerDelegate";
  if (os_log_type_enabled(v3, v4))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v43[0] = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = _typeName(_:qualified:)();
    v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v43);
    v5 = "ConversationControlsViewControllerDelegate" + 16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v3, v4, "[%{public}s.recipe.didSet] Updating recipe on existing instance may not result in the expected experience.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v7, -1, -1);
    MEMORY[0x1C3B751B8](v6, -1, -1);
  }

  v10 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_recipe;
  swift_beginAccess();
  outlined init with copy of ConversationControlsType(v10, (uint64_t)v43);
  v39 = 6;
  v40 = 0u;
  v41 = 0u;
  v42 = 6;
  static ConversationControlsType.== infix(_:_:)((uint64_t)v43);
  v12 = v11;
  outlined destroy of ConversationControlsType((uint64_t)&v39);
  outlined destroy of ConversationControlsType((uint64_t)v43);
  if ((v12 & 1) == 0)
  {
    outlined init with copy of ConversationControlsType(v10, (uint64_t)v43);
    v39 = 8;
    v40 = 0u;
    v41 = 0u;
    v42 = 6;
    static ConversationControlsType.== infix(_:_:)((uint64_t)v43);
    v14 = v13;
    outlined destroy of ConversationControlsType((uint64_t)&v39);
    outlined destroy of ConversationControlsType((uint64_t)v43);
    if ((v14 & 1) == 0)
    {
      v15 = v0;
      v16 = Logger.logObject.getter();
      v17 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc();
        v19 = swift_slowAlloc();
        v39 = v19;
        *(_DWORD *)v18 = 136446466;
        v20 = _typeName(_:qualified:)();
        v43[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2080;
        outlined init with copy of ConversationControlsType(v10, (uint64_t)v43);
        v29 = specialized >> prefix<A>(_:)((uint64_t)v43, v22, v23, v24, v25, v26, v27, v28);
        v31 = v30;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v43, &demangling cache variable for type metadata for ConversationControlsType?);
        v43[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v31, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v16, v17, "[%{public}s.recipe.didSet] Applied invalid recipe type %s", (uint8_t *)v18, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v19, -1, -1);
        MEMORY[0x1C3B751B8](v18, -1, -1);

      }
      else
      {

      }
      v5 = "rolsViewControllerDelegate";
    }
  }
  if (*(_QWORD *)(v10 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 40)))
  {
    v32 = Logger.logObject.getter();
    v33 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v43[0] = v35;
      *(_DWORD *)v34 = *((_QWORD *)v5 + 128);
      v36 = _typeName(_:qualified:)();
      v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v32, v33, "[%{public}s.recipe.didSet] Ignoring recipe subtitleLeadingBadge which is unsupported for the latest telephony design", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v35, -1, -1);
      MEMORY[0x1C3B751B8](v34, -1, -1);
    }

  }
  SystemApertureIncomingCallControlsView.updateLeadingView()();
  SystemApertureIncomingCallControlsView.updateSecondaryBadge()();
  SystemApertureIncomingCallControlsView.updateSecondaryLabel()();
  return objc_msgSend(v1, sel_setNeedsLayout);
}

uint64_t SystemApertureIncomingCallControlsView.recipe.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_recipe;
  OUTLINED_FUNCTION_2_0();
  return outlined init with copy of ConversationControlsRecipe(v3, a1);
}

void SystemApertureIncomingCallControlsView.recipe.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ConversationControlsRecipe(a1, v3);
  swift_endAccess();
  SystemApertureIncomingCallControlsView.recipe.didset();
  outlined destroy of AccountUpdateNotice(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
}

uint64_t (*SystemApertureIncomingCallControlsView.recipe.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return SystemApertureIncomingCallControlsView.recipe.modify;
}

uint64_t SystemApertureIncomingCallControlsView.recipe.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))SystemApertureIncomingCallControlsView.recipe.didset);
}

uint64_t SystemApertureIncomingCallControlsView.systemAperturePreferredContentSize.getter(uint64_t a1)
{
  id v1;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  CGFloat Width;
  id v12;
  CGRect v14;

  v1 = OUTLINED_FUNCTION_25_1(a1, sel_window);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_frame);
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v14.origin.x = v4;
    v14.origin.y = v6;
    v14.size.width = v8;
    v14.size.height = v10;
    Width = CGRectGetWidth(v14);
  }
  else
  {
    Width = 1.79769313e308;
  }
  v12 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_SBUISA_systemApertureLeadingConcentricContentLayoutGuide);
  objc_msgSend(v12, sel_layoutFrame);

  return *(_QWORD *)&Width;
}

Swift::Void __swiftcall SystemApertureIncomingCallControlsView.layoutSubviews()()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CGFloat v6;
  double v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  double v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  NSObject *v21;
  id v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  id v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  objc_class *v40;
  NSBundle v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  objc_class *v50;
  NSBundle v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double MaxX;
  SEL *v60;
  double v61;
  CGFloat v62;
  double v63;
  double v64;
  double v65;
  void *v66;
  id v67;
  void *v68;
  double v69;
  double v70;
  CGFloat Height;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  double v76;
  os_log_type_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  NSObject *v87;
  NSObject *v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  double v97;
  id v98;
  SEL v99;
  double v100;
  id v101;
  SEL v102;
  uint64_t v103;
  os_log_type_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t inited;
  void *v109;
  _QWORD *v110;
  void *v111;
  id v112;
  id v113;
  SEL *v114;
  id v115;
  NSObject *v116;
  char v117;
  void *v118;
  void *v119;
  id v120;
  SEL *v121;
  id v122;
  NSObject *v123;
  NSObject *v124;
  void *v125;
  id v126;
  void *v127;
  id v128;
  void *v129;
  id v130;
  void *v131;
  id v132;
  unint64_t v133;
  uint64_t v134;
  double v135;
  uint64_t v136;
  NSObject *v137;
  NSObject *v138;
  CGFloat v139;
  double v140;
  NSObject *v141;
  _QWORD *v142;
  uint64_t v143;
  void (*v144)(uint64_t);
  double v145;
  void (*v146)();
  uint64_t v147;
  objc_super v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;

  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_15_6();
  v3 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_1();
  v148.receiver = v1;
  v148.super_class = (Class)ObjC metadata update function for SystemApertureIncomingCallControlsView();
  objc_msgSendSuper2(&v148, sel_layoutSubviews);
  v5 = OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView;
  v141 = v1;
  v136 = *(uint64_t *)((char *)&v1->isa
                    + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView);
  if (v136)
  {
    if (one-time initialization token for leadingViewSize != -1)
      swift_once();
    v6 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize;
  }
  else
  {
    if (one-time initialization token for avatarMissingSpacer != -1)
      swift_once();
    v6 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMissingSpacer;
    if (one-time initialization token for leadingViewSize != -1)
      swift_once();
  }
  v7 = *((double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize + 1);
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v1->isa) + 0x118))();
  v8 = v2 + *(int *)(v3 + 68);
  v9 = *(id *)v8;
  v10 = *(_QWORD *)(v8 + 8);
  v11 = *(unsigned __int8 *)(v8 + 16);
  outlined copy of LeadingViewType?(*(id *)v8, v10, *(_BYTE *)(v8 + 16));
  outlined destroy of AccountUpdateNotice(v2, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  if ((_DWORD)v11 != 255
    && (outlined consume of LeadingViewType?(v9, v10, v11), (v11 & 1) != 0))
  {
    if (one-time initialization token for brandedCallMargins != -1)
      swift_once();
    v12 = *(double *)&qword_1EF4FD4B8;
    v118 = *(Class *)((char *)&v141->isa + v5);
    if (v118)
    {
      v11 = objc_msgSend(v118, sel_layer);
      if (one-time initialization token for brandedCallImageCornerRadius != -1)
        swift_once();
      -[NSObject setCornerRadius:](v11, sel_setCornerRadius_, *(double *)&static SystemApertureIncomingCallControlsView.Constants.brandedCallImageCornerRadius);

      v119 = *(Class *)((char *)&v141->isa + v5);
      if (v119)
      {
        v11 = objc_msgSend(v119, sel_layer);
        -[NSObject setMasksToBounds:](v11, sel_setMasksToBounds_, 1);

      }
    }
  }
  else
  {
    if (one-time initialization token for avatarMargins != -1)
      swift_once();
    v12 = *((double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins + 1);
  }
  OUTLINED_FUNCTION_5_133();
  v140 = (CGRectGetHeight(v149) - v7) * 0.5;
  objc_msgSend(*(id *)(v0 + v5), sel_setFrame_, v12);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v13, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v14 = OUTLINED_FUNCTION_19_9();
  v134 = v5;
  if (os_log_type_enabled(v11, v14))
  {
    v15 = OUTLINED_FUNCTION_105();
    v16 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_46_38(v16);
    *(_DWORD *)v15 = 136446466;
    v17 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_19_79(v17, v18);
    OUTLINED_FUNCTION_64_26();
    OUTLINED_FUNCTION_25();
    *(_WORD *)(v15 + 12) = 2080;
    v143 = *(_QWORD *)&v140;
    v144 = *(void (**)(uint64_t))&v6;
    v145 = v7;
    type metadata accessor for CGRect(0);
    v19 = OUTLINED_FUNCTION_62_32();
    v142 = (_QWORD *)OUTLINED_FUNCTION_19_79(v19, v20);
    OUTLINED_FUNCTION_64_26();
    OUTLINED_FUNCTION_63_28();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v11, v14, "[%{public}s][layout] leadingFrame is %s", (uint8_t *)v15);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  v139 = v12;
  if (one-time initialization token for actionDiameter != -1)
    swift_once();
  -[NSObject bounds](v141, sel_bounds);
  CGRectGetWidth(v150);
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  OUTLINED_FUNCTION_14_102();
  OUTLINED_FUNCTION_5_133();
  CGRectGetHeight(v151);
  v21 = *(NSObject **)(v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_acceptButton);
  v138 = v21;
  v22 = OUTLINED_FUNCTION_26_66();
  OUTLINED_FUNCTION_57_22((uint64_t)v22, sel_setCenter_);
  OUTLINED_FUNCTION_12_110();
  v23 = OUTLINED_FUNCTION_19_9();
  if (os_log_type_enabled(v21, v23))
  {
    v24 = OUTLINED_FUNCTION_105();
    v25 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_46_38(v25);
    *(_DWORD *)v24 = 136446466;
    v26 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_19_79(v26, v27);
    OUTLINED_FUNCTION_18_91();
    OUTLINED_FUNCTION_25();
    *(_WORD *)(v24 + 12) = 2080;
    OUTLINED_FUNCTION_75_24();
    v28 = String.init<A>(reflecting:)();
    v142 = (_QWORD *)OUTLINED_FUNCTION_19_79(v28, v29);
    OUTLINED_FUNCTION_18_91();
    OUTLINED_FUNCTION_63_28();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v21, v23, "[%{public}s][layout] acceptCenter is %s", (uint8_t *)v24);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_14_102();
  if (one-time initialization token for interActionPadding != -1)
    swift_once();
  OUTLINED_FUNCTION_14_102();
  OUTLINED_FUNCTION_5_133();
  CGRectGetHeight(v152);
  v30 = *(NSObject **)(v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_rejectButton);
  v31 = OUTLINED_FUNCTION_26_66();
  v137 = v30;
  OUTLINED_FUNCTION_57_22((uint64_t)v31, sel_setCenter_);
  OUTLINED_FUNCTION_12_110();
  v32 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_4_11(v32))
  {
    v33 = OUTLINED_FUNCTION_105();
    v34 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_46_38(v34);
    *(_DWORD *)v33 = 136446466;
    v35 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_79_22(v35, v36);
    OUTLINED_FUNCTION_18_91();
    OUTLINED_FUNCTION_54_1();
    *(_WORD *)(v33 + 12) = 2080;
    OUTLINED_FUNCTION_75_24();
    v37 = OUTLINED_FUNCTION_62_32();
    v142 = (_QWORD *)OUTLINED_FUNCTION_79_22(v37, v38);
    OUTLINED_FUNCTION_18_91();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_22_87(&dword_1BD004000, v30, v39, "[%{public}s][layout] rejectCenter is %s");
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  v40 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_7_14();
  v41.super.isa = v40;
  v46 = OUTLINED_FUNCTION_49_2(v42, v43, v44, v45, v41);
  v48 = v47;

  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v46, v48, v30);
  v50 = (objc_class *)OUTLINED_FUNCTION_25_1(v49, sel_conversationKit);
  OUTLINED_FUNCTION_7_14();
  v51.super.isa = v50;
  v56 = OUTLINED_FUNCTION_49_2(v52, v53, v54, v55, v51);
  v58 = v57;

  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v56, v58, v138);
  if (v136)
  {
    v153.origin.x = v12;
    v153.origin.y = v140;
    v153.size.width = v6;
    v153.size.height = v7;
    MaxX = CGRectGetMaxX(v153);
    v60 = (SEL *)&selRef_associatedAppBundleIdentifier;
    if (one-time initialization token for avatarMargins != -1)
      swift_once();
    v61 = MaxX + *((double *)&xmmword_1EF4FD4A0 + 1);
  }
  else
  {
    v60 = (SEL *)&selRef_associatedAppBundleIdentifier;
    if (one-time initialization token for textNoAvatarMinX != -1)
      swift_once();
    v61 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.textNoAvatarMinX;
  }
  v62 = v6;
  v63 = *(double *)&qword_1EF4FD538
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter
      + *((double *)&static SystemApertureIncomingCallControlsView.Constants.actionMargins + 1)
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.interActionPadding;
  OUTLINED_FUNCTION_5_133();
  v64 = CGRectGetWidth(v154) - v63 - v61;
  if (v64 > 0.0)
    v65 = v64;
  else
    v65 = 0.0;
  v66 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel);
  v67 = objc_msgSend(v66, sel_font);
  if (!v67)
  {
    __break(1u);
    return;
  }
  v68 = v67;
  objc_msgSend(v67, sel_lineHeight);
  v70 = v69;

  objc_msgSend(v141, v60[228]);
  Height = CGRectGetHeight(v155);
  v72 = SystemApertureIncomingCallControlsView.maxSubtitleLabelSizeThatFits(_:)(v65, Height - v70);
  v74 = v73;
  if (v136)
  {
    if (one-time initialization token for secondaryShortTextWidthThreshold != -1)
      swift_once();
    v75 = &static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthThreshold;
  }
  else
  {
    if (one-time initialization token for secondaryShortTextWidthWithoutAvatarThreshold != -1)
      swift_once();
    v75 = &static SystemApertureIncomingCallControlsView.Constants.secondaryShortTextWidthWithoutAvatarThreshold;
  }
  v76 = *(double *)v75;
  OUTLINED_FUNCTION_12_110();
  v77 = OUTLINED_FUNCTION_19_9();
  v78 = (void *)v77;
  if (os_log_type_enabled(v141, v77))
  {
    v79 = OUTLINED_FUNCTION_105();
    v142 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v79 = 136446978;
    v80 = OUTLINED_FUNCTION_7_10();
    v82 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v80, v81, (uint64_t *)&v142);
    OUTLINED_FUNCTION_46_38(v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v79 + 12) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v79 + 18) = 2048;
    OUTLINED_FUNCTION_76_23();
    *(_WORD *)(v79 + 28) = 2048;
    OUTLINED_FUNCTION_76_23();
    _os_log_impl(&dword_1BD004000, v141, (os_log_type_t)v78, "[%{public}s][layout] secondaryNextToSensor: %{BOOL}d, textWidth: %f, secondaryShortTextWidthThreshold: %f", (uint8_t *)v79, 0x26u);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v83 = (void *)objc_opt_self();
  v84 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v84 + 16) = v141;
  *(double *)(v84 + 24) = v72;
  *(_QWORD *)(v84 + 32) = v74;
  v85 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v85 + 16) = partial apply for closure #1 in SystemApertureIncomingCallControlsView.layoutSubviews();
  *(_QWORD *)(v85 + 24) = v84;
  v146 = partial apply for thunk for @callee_guaranteed () -> ();
  v147 = v85;
  v142 = (_QWORD *)MEMORY[0x1E0C809B0];
  v143 = 1107296256;
  v144 = thunk for @escaping @callee_guaranteed () -> ();
  v145 = COERCE_DOUBLE(&block_descriptor_105);
  v86 = _Block_copy(&v142);
  v87 = v141;
  swift_retain();
  swift_release();
  objc_msgSend(v83, sel_performWithoutAnimation_, v86);
  _Block_release(v86);
  v88 = OUTLINED_FUNCTION_15_64();
  swift_release();
  if ((v88 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v135 = v76;
    if (v72 > v76)
    {
      if (one-time initialization token for textTopInset != -1)
        swift_once();
      v89 = v87;
      v88 = *(NSObject **)((char *)&v87->isa
                         + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel);
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v88->isa) + 0x98))();
    }
    else
    {
      v89 = v87;
      objc_msgSend(v87, v60[228]);
      CGRectGetHeight(v156);
    }
    OUTLINED_FUNCTION_12_110();
    v90 = OUTLINED_FUNCTION_19_9();
    if (os_log_type_enabled(v88, v90))
    {
      v91 = OUTLINED_FUNCTION_105();
      v142 = (_QWORD *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v91 = 136446466;
      v92 = OUTLINED_FUNCTION_7_10();
      OUTLINED_FUNCTION_35_46(v92, v93);
      OUTLINED_FUNCTION_58_38();
      OUTLINED_FUNCTION_25();
      *(_WORD *)(v91 + 12) = 2080;
      OUTLINED_FUNCTION_66_30();
      v94 = CGRect.description.getter();
      v96 = OUTLINED_FUNCTION_35_46(v94, v95);
      OUTLINED_FUNCTION_46_38(v96);
      OUTLINED_FUNCTION_58_38();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v88, v90, "[%{public}s][layout] secondaryFrame: %s", (uint8_t *)v91);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    v88 = &one-time initialization token for ICSIsOnScreenNotification;
    v87 = v89;
    v60 = *(SEL **)((char *)&v89->isa
                  + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel);
    v97 = OUTLINED_FUNCTION_67_25();
    objc_msgSend(v98, v99, v97);
    v157.origin.x = OUTLINED_FUNCTION_67_25();
    CGRectGetMaxY(v157);
    v78 = v66;
    v100 = OUTLINED_FUNCTION_65_26();
    objc_msgSend(v101, v102, v100);
    v158.origin.x = v139;
    v158.origin.y = v140;
    v158.size.width = v62;
    v158.size.height = v7;
    CGRectGetMaxY(v158);
    if (one-time initialization token for avatarMargins == -1)
      goto LABEL_57;
  }
  swift_once();
LABEL_57:
  v159.origin.x = OUTLINED_FUNCTION_65_26();
  CGRectGetMaxY(v159);
  if (v72 > v135)
  {
    if (one-time initialization token for textBottomInset != -1)
      swift_once();
  }
  else
  {
    v160.origin.x = OUTLINED_FUNCTION_66_30();
    v160.size.height = *(CGFloat *)(v103 - 256);
    CGRectGetMinY(v160);
  }
  OUTLINED_FUNCTION_12_110();
  v104 = OUTLINED_FUNCTION_19_9();
  if (os_log_type_enabled(v88, v104))
  {
    v105 = OUTLINED_FUNCTION_105();
    v142 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v105 = 136446978;
    v106 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_35_46(v106, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v105 + 12) = 2048;
    OUTLINED_FUNCTION_77_18();
    *(_WORD *)(v105 + 22) = 2048;
    OUTLINED_FUNCTION_77_18();
    *(_WORD *)(v105 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v88, v104, "[%{public}s][layout] leadingViewMaxY: %f, textMaxY: %f, %f", (uint8_t *)v105, 0x2Au);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  if (-[NSObject effectiveUserInterfaceLayoutDirection](v87, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD646730;
    v109 = *(Class *)((char *)&v141->isa + v134);
    *(_QWORD *)(inited + 32) = v109;
    *(_QWORD *)(inited + 40) = v60;
    *(_QWORD *)(inited + 48) = v78;
    *(_QWORD *)(inited + 56) = v137;
    *(_QWORD *)(inited + 64) = v138;
    v142 = (_QWORD *)inited;
    specialized Array._endMutation()();
    v110 = v142;
    v142 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v111 = (void *)v110[4];
    if (v111)
    {
      v112 = v111;
      v113 = v109;
      v114 = v60;
      v115 = v78;
      v116 = v137;
      MEMORY[0x1C3B7301C](v138);
      OUTLINED_FUNCTION_7_124();
      if (v117)
        OUTLINED_FUNCTION_3_126();
      OUTLINED_FUNCTION_13_114();
      specialized Array._endMutation()();
    }
    else
    {
      v120 = v109;
      v121 = v60;
      v122 = v78;
      v123 = v137;
      v124 = v138;
    }
    v125 = (void *)v110[5];
    if (v125)
    {
      v126 = v125;
      OUTLINED_FUNCTION_52_45();
    }
    v127 = (void *)v110[6];
    if (v127)
    {
      v128 = v127;
      OUTLINED_FUNCTION_52_45();
    }
    v129 = (void *)v110[7];
    if (v129)
    {
      v130 = v129;
      OUTLINED_FUNCTION_52_45();
    }
    v131 = (void *)v110[8];
    if (v131)
    {
      v132 = v131;
      OUTLINED_FUNCTION_52_45();
    }
    v133 = (unint64_t)v142;
    swift_bridgeObjectRelease();
    specialized Sequence.forEach(_:)(v133, v87);
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    OUTLINED_FUNCTION_74();
  }
  OUTLINED_FUNCTION_50_1();
}

id closure #1 in SystemApertureIncomingCallControlsView.layoutSubviews()(uint64_t a1, double a2, double a3)
{
  void *v3;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel);
  objc_msgSend(v3, sel_setFrame_, 0.0, 0.0, a2, a3);
  objc_msgSend(v3, sel_setNeedsLayout);
  return objc_msgSend(v3, sel_layoutIfNeeded);
}

CGSize __swiftcall SystemApertureIncomingCallControlsView.sizeThatFits(_:)(CGSize a1)
{
  NSObject *v1;
  uint64_t v2;
  NSObject *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  int v31;
  double *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  double v60;
  double v61;
  CGSize result;
  NSObject *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  void *v68;
  uint64_t (*v69)();
  uint64_t v70;
  double v71;
  uint64_t v72[4];
  double v73;

  OUTLINED_FUNCTION_54_3();
  v3 = v1;
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_15_6();
  v8 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_1();
  if (v5 <= 2.22507386e-308)
    v5 = 1.79769313e308;
  *(double *)&v72[3] = v7;
  v73 = v5;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
  v11 = OUTLINED_FUNCTION_11_17();
  v12 = static os_log_type_t.debug.getter();
  v64 = v8;
  if (os_log_type_enabled(v11, v12))
  {
    v13 = OUTLINED_FUNCTION_105();
    v72[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v13 = 136446466;
    v14 = OUTLINED_FUNCTION_7_10();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    v66 = *(_QWORD *)&v5;
    type metadata accessor for CGSize(0);
    v16 = OUTLINED_FUNCTION_81_22();
    v65 = OUTLINED_FUNCTION_39_66(v16, v17);
    OUTLINED_FUNCTION_34_50();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_87(&dword_1BD004000, v11, v18, "[%{public}s][sizing] sizingThatFits %s");
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  if (one-time initialization token for actionDiameter != -1)
    swift_once();
  v19 = static SystemApertureIncomingCallControlsView.Constants.actionDiameter;
  if (one-time initialization token for interActionPadding != -1)
  {
    swift_once();
    v19 = static SystemApertureIncomingCallControlsView.Constants.actionDiameter;
  }
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.debug.getter();
  v63 = v1;
  if (os_log_type_enabled(v20, v21))
  {
    v22 = OUTLINED_FUNCTION_105();
    v72[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v22 = 136446466;
    v23 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_39_66(v23, v24);
    OUTLINED_FUNCTION_34_50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    v66 = v19;
    type metadata accessor for CGSize(0);
    v25 = OUTLINED_FUNCTION_81_22();
    v65 = OUTLINED_FUNCTION_39_66(v25, v26);
    OUTLINED_FUNCTION_34_50();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_87(&dword_1BD004000, v20, v27, "[%{public}s][sizing] actionsSize is  %s");
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v1->isa) + 0x118))();
  v28 = v2 + *(int *)(v64 + 68);
  v29 = *(id *)v28;
  v30 = *(_QWORD *)(v28 + 8);
  v31 = *(unsigned __int8 *)(v28 + 16);
  outlined copy of LeadingViewType?(*(id *)v28, v30, *(_BYTE *)(v28 + 16));
  outlined destroy of AccountUpdateNotice(v2, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  if (v31 != 255 && (outlined consume of LeadingViewType?(v29, v30, v31), (v31 & 1) != 0))
  {
    if (one-time initialization token for brandedCallMargins != -1)
      swift_once();
    v32 = (double *)&qword_1EF4FD4B8;
  }
  else
  {
    if (one-time initialization token for avatarMargins != -1)
      swift_once();
    v32 = (double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins + 1;
  }
  v33 = *v32;
  if (one-time initialization token for leadingViewSize != -1)
    swift_once();
  v34 = v33 + *(double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize;
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  v35 = v34 + *((double *)&xmmword_1EF4FD4A0 + 1);
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  v36 = *(double *)&qword_1EF4FD538
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter
      + *((double *)&static SystemApertureIncomingCallControlsView.Constants.actionMargins + 1)
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter
      + *(double *)&static SystemApertureIncomingCallControlsView.Constants.interActionPadding;
  OUTLINED_FUNCTION_2_0();
  objc_msgSend(*(id *)((char *)&v3->isa + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_primaryLabel), sel_sizeThatFits_, v7 - v36 - v35, v73);
  v38 = v37;
  v40 = v39;
  objc_msgSend(*(id *)((char *)&v3->isa + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel), sel_sizeThatFits_, v7 - v36 - v35, v73 - v39);
  v42 = v41;
  v44 = v43;
  v71 = 0.0;
  v45 = (void *)objc_opt_self();
  v46 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v46 + 16) = v3;
  *(double *)(v46 + 24) = v42;
  *(double *)(v46 + 32) = v44;
  *(_QWORD *)(v46 + 40) = &v71;
  v47 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v47 + 16) = partial apply for closure #1 in SystemApertureIncomingCallControlsView.sizeThatFits(_:);
  *(_QWORD *)(v47 + 24) = v46;
  v69 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  v70 = v47;
  v65 = MEMORY[0x1E0C809B0];
  v66 = 1107296256;
  v67 = thunk for @escaping @callee_guaranteed () -> ();
  v68 = &block_descriptor_13_3;
  v48 = _Block_copy(&v65);
  v49 = v3;
  swift_retain();
  OUTLINED_FUNCTION_74();
  objc_msgSend(v45, sel_performWithoutAnimation_, v48);
  _Block_release(v48);
  LOBYTE(v48) = OUTLINED_FUNCTION_15_64();
  swift_release();
  if ((v48 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v40 = v40 + v44 - v71;
    v44 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.avatarMargins;
    v35 = *((double *)&static SystemApertureIncomingCallControlsView.Constants.leadingViewSize + 1);
    v38 = *(double *)&xmmword_1EF4FD4A0;
    v7 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionMargins;
    v36 = *(double *)&static SystemApertureIncomingCallControlsView.Constants.actionDiameter;
    v42 = *(double *)&qword_1EF4FD530;
    if (one-time initialization token for textTopInset == -1)
      goto LABEL_29;
  }
  swift_once();
LABEL_29:
  v50 = v44 + v35;
  v51 = v7 + v36;
  v52 = v40 + *(double *)&static SystemApertureIncomingCallControlsView.Constants.textTopInset;
  if (one-time initialization token for textBottomInset != -1)
    swift_once();
  v53 = v50 + v38;
  v54 = v51 + v42;
  v55 = v52 + *(double *)&static SystemApertureIncomingCallControlsView.Constants.textBottomInset;
  if (one-time initialization token for minimumTextWidth != -1)
    swift_once();
  specialized max<A>(_:_:_:_:)(MEMORY[0x1E0DEE9D8], v53, v55, v54);
  Logger.logObject.getter();
  v56 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_51_3(v56))
  {
    v57 = OUTLINED_FUNCTION_105();
    v65 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v57 = 136446722;
    v58 = OUTLINED_FUNCTION_7_10();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v59, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2048;
    OUTLINED_FUNCTION_69_26();
    *(_WORD *)(v57 + 22) = 2048;
    OUTLINED_FUNCTION_69_26();
    _os_log_impl(&dword_1BD004000, v63, (os_log_type_t)v3, "[%{public}s][sizing] measuredWidth: %f, measuredHeight: %f", (uint8_t *)v57, 0x20u);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  swift_release();
  OUTLINED_FUNCTION_50_1();
  result.height = v61;
  result.width = v60;
  return result;
}

id closure #1 in SystemApertureIncomingCallControlsView.sizeThatFits(_:)(uint64_t a1, double *a2, double a3, double a4)
{
  _QWORD *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;

  v7 = *(_QWORD **)(a1 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel);
  objc_msgSend(v7, sel_frame);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  objc_msgSend(v7, sel_setFrame_, 0.0, 0.0, a3, a4);
  objc_msgSend(v7, sel_setNeedsLayout);
  v16 = objc_msgSend(v7, sel_layoutIfNeeded);
  *a2 = (*(double (**)(id))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x98))(v16);
  return objc_msgSend(v7, sel_setFrame_, v9, v11, v13, v15);
}

CGSize __swiftcall SystemApertureIncomingCallControlsView.systemLayoutSizeFitting(_:withHorizontalFittingPriority:verticalFittingPriority:)(CGSize _, __C::UILayoutPriority withHorizontalFittingPriority, __C::UILayoutPriority verticalFittingPriority)
{
  void *v3;
  double v4;
  double v5;
  CGSize result;

  objc_msgSend(v3, sel_sizeThatFits_, _.width, _.height, *(double *)&withHorizontalFittingPriority.rawValue, *(double *)&verticalFittingPriority.rawValue);
  result.height = v5;
  result.width = v4;
  return result;
}

id SystemApertureIncomingCallControlsView.intrinsicContentSize.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_sizeThatFits_, 1.79769313e308, 1.79769313e308);
}

void SystemApertureIncomingCallControlsView.updateLeadingView()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _DWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  int v16;
  id v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_15_6();
  v2 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  v5 = __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_11(v6))
  {
    v7 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *v7 = 136446210;
    v8 = OUTLINED_FUNCTION_7_10();
    v10 = OUTLINED_FUNCTION_45_5(v8, v9);
    OUTLINED_FUNCTION_61_0(v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_10(&dword_1BD004000, v11, v12, "[%{public}s] updateLeadingView");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_leadingView), sel_removeFromSuperview);
  SystemApertureIncomingCallControlsView.leadingView.setter(0);
  OUTLINED_FUNCTION_54_43(*v0);
  v13 = v1 + *(int *)(v2 + 68);
  v15 = *(id *)v13;
  v14 = *(_QWORD *)(v13 + 8);
  v16 = *(unsigned __int8 *)(v13 + 16);
  v17 = outlined copy of LeadingViewType?(*(id *)v13, v14, *(_BYTE *)(v13 + 16));
  OUTLINED_FUNCTION_22_29((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  if (v16 == 255)
  {
    Logger.logObject.getter();
    v18 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_51_3(v18))
    {
      v19 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v19 = 136446210;
      v20 = OUTLINED_FUNCTION_7_10();
      v22 = OUTLINED_FUNCTION_45_5(v20, v21);
      OUTLINED_FUNCTION_44_3(v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v5, (os_log_type_t)v1, "[%{public}s] omitting leading view", v19, 0xCu);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    if ((v16 & 1) != 0)
      SystemApertureIncomingCallControlsView.updateBrandedImageIcon(using:)((uint64_t)v15);
    else
      SystemApertureIncomingCallControlsView.updateAvatar(using:)(v15);
    outlined consume of LeadingViewType?(v15, v14, v16);
  }
  OUTLINED_FUNCTION_52_1();
}

void SystemApertureIncomingCallControlsView.updateAvatar(using:)(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _DWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v5 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_11(v5))
  {
    v6 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *v6 = 136446210;
    v7 = OUTLINED_FUNCTION_7_10();
    v9 = OUTLINED_FUNCTION_45_5(v7, v8);
    OUTLINED_FUNCTION_44_3(v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_10(&dword_1BD004000, v10, v11, "[%{public}s] showing avatar");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v12 = a1;
  SystemApertureIncomingCallControlsView.leadingView.setter((uint64_t)a1);
  v13 = objc_msgSend(v12, sel_layer);
  OUTLINED_FUNCTION_55_35(*v1);
  OUTLINED_FUNCTION_488_0();
  OUTLINED_FUNCTION_48_1(v13, sel_setAllowsHitTesting_);

  OUTLINED_FUNCTION_59_8();
  OUTLINED_FUNCTION_488_0();
  OUTLINED_FUNCTION_48_1(v12, sel_setUserInteractionEnabled_);
  OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v1, sel_addSubview_, v12), sel_setNeedsLayout);
  OUTLINED_FUNCTION_52_1();
}

void SystemApertureIncomingCallControlsView.updateBrandedImageIcon(using:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  _DWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;

  v2 = v1;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_11(v6))
  {
    v7 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *v7 = 136446210;
    v8 = OUTLINED_FUNCTION_7_10();
    v10 = OUTLINED_FUNCTION_45_5(v8, v9);
    OUTLINED_FUNCTION_61_0(v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_10(&dword_1BD004000, v11, v12, "[%{public}s] updateBrandedImageIcon");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, a1);
  v14 = v13;
  SystemApertureIncomingCallControlsView.leadingView.setter((uint64_t)v13);
  v16 = OUTLINED_FUNCTION_2_11(v15, sel_layer);
  OUTLINED_FUNCTION_55_35(*v2);
  OUTLINED_FUNCTION_488_0();
  OUTLINED_FUNCTION_48_1(v16, sel_setAllowsHitTesting_);

  OUTLINED_FUNCTION_59_8();
  OUTLINED_FUNCTION_488_0();
  OUTLINED_FUNCTION_48_1(v14, sel_setUserInteractionEnabled_);
  OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v2, sel_addSubview_, v14), sel_setNeedsLayout);

  OUTLINED_FUNCTION_52_1();
}

id SystemApertureIncomingCallControlsView.updateSecondaryBadge()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  id v6;
  void *v7;
  uint64_t v8;

  v2 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  v4 = *(_QWORD **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = (id)OUTLINED_FUNCTION_54_43(*v0);
  v7 = *(void **)(v1 + *(int *)(v2 + 40));
  if (v7)
    v6 = v7;
  OUTLINED_FUNCTION_22_29((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  v8 = (*(uint64_t (**)(void *))((*v5 & *v4) + 0x68))(v7);
  return OUTLINED_FUNCTION_123(v8, sel_setNeedsLayout);
}

id SystemApertureIncomingCallControlsView.updateSecondaryLabel()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(void);
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v32;

  v1 = v0;
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_79();
  v5 = v3 - v4;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - v10;
  v12 = *(_QWORD *)((char *)v0
                  + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_alternatingLabelController);
  if (v12)
  {
    v13 = *(void (**)(uint64_t))(*(_QWORD *)v12 + 264);
    v14 = swift_retain();
    v13(v14);
    swift_release();
  }
  v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v16 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x118);
  OUTLINED_FUNCTION_59_8();
  v17 = *((_QWORD *)v11 + 11);
  v18 = OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_22_29(v18, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  if (v17 >> 62)
  {
    OUTLINED_FUNCTION_5_0();
    v19 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v20 = OUTLINED_FUNCTION_27();
  v21 = *(_QWORD **)((char *)v1
                   + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel);
  if (v19 < 2)
  {
    ((void (*)(uint64_t))v16)(v20);
    v28 = *(_QWORD *)(v5 + 88);
    OUTLINED_FUNCTION_5_0();
    outlined destroy of AccountUpdateNotice(v5, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    if (v28 >> 62)
    {
      OUTLINED_FUNCTION_5_0();
      v29 = _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_27();
      if (v29)
        goto LABEL_9;
    }
    else
    {
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v29)
      {
LABEL_9:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v28 & 0xC000000000000001) == 0, v28);
        if ((v28 & 0xC000000000000001) != 0)
          v30 = (id)MEMORY[0x1C3B73D18](0, v28);
        else
          v30 = *(id *)(v28 + 32);
        v29 = (uint64_t)v30;
      }
    }
    OUTLINED_FUNCTION_27();
    v27 = (*(uint64_t (**)(uint64_t))((*v15 & *v21) + 0x80))(v29);
    return OUTLINED_FUNCTION_123(v27, sel_setNeedsLayout);
  }
  v22 = v21;
  v16();
  v23 = *((_QWORD *)v8 + 11);
  OUTLINED_FUNCTION_5_0();
  outlined destroy of AccountUpdateNotice((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  type metadata accessor for AlternatingLabelController();
  v24 = OUTLINED_FUNCTION_15();
  v25 = specialized AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)(v22, v23, 2.5, 0, 0, v24);
  (*(void (**)(void))(*(_QWORD *)v25 + 256))();
  v26 = swift_retain();
  SystemApertureIncomingCallControlsView.alternatingLabelController.setter(v26);
  v27 = swift_release();
  return OUTLINED_FUNCTION_123(v27, sel_setNeedsLayout);
}

double SystemApertureIncomingCallControlsView.maxSubtitleLabelSizeThatFits(_:)(double a1, double a2)
{
  _QWORD *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD *v10;
  id v11;
  double v12;
  double v13;
  _QWORD *v14;
  void (*v15)(void);
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void *);
  id v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  double *v34;
  double v35;
  double v36;
  double v37;
  _BYTE v39[16];

  v3 = v2;
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_79();
  MEMORY[0x1E0C80A78](v7);
  v9 = &v39[-v8];
  v10 = *(_QWORD **)((char *)v2
                   + OBJC_IVAR____TtC15ConversationKit38SystemApertureIncomingCallControlsView_secondaryLabel);
  v11 = objc_msgSend(v10, sel_sizeThatFits_, a1, a2);
  v13 = v12;
  v14 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v15 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x118);
  ((void (*)(id))v15)(v11);
  v16 = *((_QWORD *)v9 + 11);
  OUTLINED_FUNCTION_5_0();
  outlined destroy of AccountUpdateNotice((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  if (v16 >> 62)
  {
    OUTLINED_FUNCTION_5_0();
    v17 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = OUTLINED_FUNCTION_27();
  if (v17 >= 2)
  {
    v19 = (void *)(*(uint64_t (**)(uint64_t))((*v14 & *v10) + 0x78))(v18);
    v15();
    v20 = v3;
    v21 = OUTLINED_FUNCTION_5_0();
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo18NSAttributedStringCG_So6CGSizeVs5NeverOTg50131_s15ConversationKit38SystemApertureIncomingCallControlsViewC28maxSubtitleLabelSizeThatFits33_085E1321DC3A0050D89D5085A314C15FLLySo6f10VAGFAGSo18dE6CXEfU_0I3Kit0klmnoP0CAJTf1cn_n(v21, v20, a1, a2);
    v23 = v22;
    v24 = OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_22_29(v24, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    v25 = *(void (**)(void *))((*v14 & *v10) + 0x80);
    v26 = v19;
    v25(v19);
    v27 = *(_QWORD *)(v23 + 16);
    if (v27)
    {
      v13 = *(double *)(v23 + 32);
      v28 = v27 - 1;
      if (v28)
      {
        v29 = (double *)(v23 + 48);
        v30 = v28;
        v31 = *(double *)(v23 + 32);
        do
        {
          v32 = *v29;
          v29 += 2;
          v33 = v32;
          if (v31 < v32)
          {
            v13 = v33;
            v31 = v33;
          }
          --v30;
        }
        while (v30);
        v34 = (double *)(v23 + 56);
        v35 = *(double *)(v23 + 40);
        do
        {
          v36 = *v34;
          v34 += 2;
          v37 = v36;
          if (v35 < v36)
            v35 = v37;
          --v28;
        }
        while (v28);
      }
    }
    swift_bridgeObjectRelease();

  }
  return v13;
}

id SystemApertureIncomingCallControlsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void SystemApertureIncomingCallControlsView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SystemApertureIncomingCallControlsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for SystemApertureIncomingCallControlsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for ControlsView.cnkContentAlpha.getter in conformance SystemApertureIncomingCallControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t protocol witness for ControlsView.cnkContentAlpha.setter in conformance SystemApertureIncomingCallControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t (*protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureIncomingCallControlsView(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x110))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ControlsView.recipe.getter in conformance SystemApertureIncomingCallControlsView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t (*protocol witness for ControlsView.recipe.modify in conformance SystemApertureIncomingCallControlsView(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x128))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for SystemAperturePreferredContentSizeProvider.systemAperturePreferredContentSize.getter in conformance SystemApertureIncomingCallControlsView()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x130))();
}

uint64_t sub_1BD595234()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in SystemApertureIncomingCallControlsView.layoutSubviews()()
{
  uint64_t v0;

  return closure #1 in SystemApertureIncomingCallControlsView.layoutSubviews()(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1BD595268()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in SystemApertureIncomingCallControlsView.sizeThatFits(_:)()
{
  uint64_t v0;

  return closure #1 in SystemApertureIncomingCallControlsView.sizeThatFits(_:)(*(_QWORD *)(v0 + 16), *(double **)(v0 + 40), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

void sub_1BD5952A0(_QWORD **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x100))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5952DC(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x108))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD595314(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x118))();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata completion function for SystemApertureIncomingCallControlsView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SystemApertureIncomingCallControlsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.__allocating_init(recipe:controlsManager:menuHostViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.cnkContentAlpha.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.cnkContentAlpha.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.cnkContentAlpha.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.recipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.recipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.recipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallControlsView.systemAperturePreferredContentSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

ValueMetadata *type metadata accessor for SystemApertureIncomingCallControlsView.Constants()
{
  return &type metadata for SystemApertureIncomingCallControlsView.Constants;
}

uint64_t specialized AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)(_QWORD *a1, unint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  id v12;

  *(_QWORD *)(a6 + 16) = 0;
  *(_QWORD *)(a6 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a6 + 56) = 0;
  *(_QWORD *)(a6 + 72) = 0;
  swift_unknownObjectWeakInit();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11)
      goto LABEL_6;
  }
  else
  {
    v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11)
      goto LABEL_6;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0)
    v12 = (id)MEMORY[0x1C3B73D18](0, a2);
  else
    v12 = *(id *)(a2 + 32);
  v11 = (uint64_t)v12;
LABEL_6:
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x80))(v11);
  *(_QWORD *)(a6 + 32) = &protocol witness table for BadgedLabel;
  swift_unknownObjectWeakAssign();

  *(_QWORD *)(a6 + 48) = a2;
  *(double *)(a6 + 40) = a3;
  *(_QWORD *)(a6 + 72) = a5;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return a6;
}

uint64_t OUTLINED_FUNCTION_39_66(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 192));
}

void OUTLINED_FUNCTION_75_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 - 216) = v1;
  *(_QWORD *)(v0 - 208) = v2;
  type metadata accessor for CGPoint(0);
}

uint64_t OUTLINED_FUNCTION_76_23()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void SharedContentView.isPaused.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_isPaused);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  SharedContentView.isPaused.didset();
  OUTLINED_FUNCTION_9_0();
}

void SharedContentView.configure(with:)(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const void *v36;
  uint64_t v37;
  char *v38;
  Swift::Int v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[13];
  unsigned __int8 v44;
  unsigned __int8 v45[168];
  _BYTE v46[96];
  uint64_t v47;
  char v48;
  _QWORD v49[22];

  v2 = v1;
  OUTLINED_FUNCTION_15_6();
  v4 = type metadata accessor for SharedContentViewModel(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SharedContentViewModel?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  Hasher.init(_seed:)();
  SharedContentViewModel.hash(into:)();
  v18 = Hasher._finalize()();
  if ((v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_mostRecentViewModelHash + 8] & 1) != 0
    || *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_mostRecentViewModelHash] != v18)
  {
    v38 = &v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_mostRecentViewModelHash];
    v39 = v18;
    v41 = a1;
    v19 = v4;
    v42 = v8;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v20 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v20 + 16) = xmmword_1BD646740;
    v21 = &v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_loggingIdentifier];
    v22 = OUTLINED_FUNCTION_33_0();
    v40 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    v40(v17, v21, v22);
    __swift_storeEnumTagSinglePayload(v17, 0, 1, v22);
    specialized >> prefix<A>(_:)(v17);
    v24 = v23;
    v26 = v25;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
    v27 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v20 + 64) = v27;
    *(_QWORD *)(v20 + 32) = v24;
    *(_QWORD *)(v20 + 40) = v26;
    outlined init with copy of SharedContentViewModel(v41, v13);
    __swift_storeEnumTagSinglePayload(v13, 0, 1, v19);
    specialized >> prefix<A>(_:)(v13);
    v29 = v28;
    v31 = v30;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v13, &demangling cache variable for type metadata for SharedContentViewModel?);
    *(_QWORD *)(v20 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 104) = v27;
    *(_QWORD *)(v20 + 72) = v29;
    *(_QWORD *)(v20 + 80) = v31;
    v49[0] = v2;
    v32 = v2;
    v33 = String.init<A>(reflecting:)();
    *(_QWORD *)(v20 + 136) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 144) = v27;
    *(_QWORD *)(v20 + 112) = v33;
    *(_QWORD *)(v20 + 120) = v34;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    *(_QWORD *)v38 = v39;
    v38[8] = 0;
    SharedContentView.configureViewVisibility(for:)(v41);
    outlined init with copy of SharedContentViewModel(v41, v42);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      OUTLINED_FUNCTION_23_83();
      v36 = (const void *)(v42 + *(int *)(v35 + 80));
      OUTLINED_FUNCTION_10_111();
      OUTLINED_FUNCTION_4_44(v49, v32);
      outlined init with take of ParticipantVideoOverlayView.ViewModel(v36, v46);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
      OUTLINED_FUNCTION_23_83();
      OUTLINED_FUNCTION_10_111();
      OUTLINED_FUNCTION_4_44(v49, v32);
      memset(v46, 0, sizeof(v46));
      v47 = 0;
      v48 = -1;
    }
    v40(v17, (char *)v42, v22);
    __swift_storeEnumTagSinglePayload(v17, 0, 1, v22);
    v37 = (uint64_t)&v32[OBJC_IVAR____TtC15ConversationKit17SharedContentView_participantIdentifier];
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of UUID?(v17, v37);
    swift_endAccess();
    *(_QWORD *)&v32[OBJC_IVAR____TtC15ConversationKit17SharedContentView_deviceOrientation] = v27;
    SharedContentView.updateVideoViewTransform()();
    outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v49, (uint64_t)v43, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
    if (v43[3] == 1)
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v43, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
    }
    else
    {
      OUTLINED_FUNCTION_4_44(v45, v43);
      SharedContentVideoView.configure(with:)((uint64_t)v45);
      outlined destroy of SharedContentVideoView.ViewModel((uint64_t)v45);
    }
    outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v46, (uint64_t)v43, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
    if (v44 == 255)
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v46, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v49, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
      outlined destroy of SharedContentViewModel.ParticipantDetails(v42);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v43, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
    }
    else
    {
      outlined init with take of ParticipantVideoOverlayView.ViewModel(v43, v45);
      ParticipantVideoOverlayView.configure(with:)(v45);
      outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)v45);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v46, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v49, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
      outlined destroy of SharedContentViewModel.ParticipantDetails(v42);
    }
  }
}

id SharedContentView.customCornerRadius.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return SharedContentView.customCornerRadius.didset();
}

void SharedContentView.systemRootLayerTransform.setter(_OWORD *a1)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;

  v3 = (_OWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform);
  OUTLINED_FUNCTION_2_0();
  v4 = a1[1];
  *v3 = *a1;
  v3[1] = v4;
  v3[2] = a1[2];
  SharedContentView.updateVideoViewTransform()();
  OUTLINED_FUNCTION_9_0();
}

uint64_t specialized Collection.firstIndex(where:)(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v9;

  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    type metadata accessor for NSObject();
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1C3B73D18](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      if ((static NSObject.== infix(_:_:)() & 1) != 0)
      {

        a2 = v7;
        goto LABEL_17;
      }
      v8 = static NSObject.== infix(_:_:)();

      if ((v8 & 1) != 0)
        goto LABEL_17;
      v9 = v5 + 1;
      if (__OFADD__(v5, 1))
        break;
      ++v5;
      if (v9 == v4)
      {
        v5 = 0;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  v5 = 0;
LABEL_17:

  return v5;
}

{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v9;

  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_14:
    v5 = 0;
    goto LABEL_15;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_14;
LABEL_3:
  type metadata accessor for NSObject();
  v5 = 0;
  while (1)
  {
    v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
    v7 = v6;
    v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) != 0)
      break;
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4)
    {
      v5 = 0;
      break;
    }
  }
LABEL_15:

  return v5;
}

{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v9;

  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_14:
    v5 = 0;
    goto LABEL_15;
  }
LABEL_13:
  OUTLINED_FUNCTION_35_0();
  v4 = OUTLINED_FUNCTION_237();
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_14;
LABEL_3:
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  v5 = 0;
  while (1)
  {
    v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
    v7 = v6;
    v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) != 0)
      break;
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4)
    {
      v5 = 0;
      break;
    }
  }
LABEL_15:

  return v5;
}

void SharedContentView.participantIdentifier.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_participantIdentifier;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v3, a1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for SharedContentView.delegate : SharedContentView@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for SharedContentView.delegate : SharedContentView(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t SharedContentView.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

void SharedContentView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void (*SharedContentView.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

double SharedContentView.customCornerRadius.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius;
  OUTLINED_FUNCTION_2_0();
  return *(double *)v1;
}

double key path getter for SharedContentView.customCornerRadius : SharedContentView@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

id SharedContentView.customCornerRadius.didset()
{
  char *v0;
  double *v1;
  void *v2;
  double v3;
  id v4;
  id v5;
  id result;

  v1 = (double *)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius];
  OUTLINED_FUNCTION_2_0();
  objc_msgSend(v0, sel__setContinuousCornerRadius_, *v1);
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView];
  v3 = *v1;
  v4 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView];
  v5 = v2;
  objc_msgSend(v4, sel__setContinuousCornerRadius_, v3);
  objc_msgSend(v5, sel__setContinuousCornerRadius_, *v1);

  result = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot];
  if (result)
    return objc_msgSend(result, sel__setContinuousCornerRadius_, *v1);
  return result;
}

void SharedContentView.customCornerRadius.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t SharedContentView.customCornerRadius.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))SharedContentView.customCornerRadius.didset);
}

void SharedContentView.isPaused.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for SharedContentView.isPaused : SharedContentView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_isPaused);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void SharedContentView.isPaused.didset()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  double *v7;
  id v8;
  void *v9;
  char aBlock;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_isPaused];
  OUTLINED_FUNCTION_2_0();
  if (*v1 == 1)
  {
    v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView], sel_snapshotViewAfterScreenUpdates_, 0);
    v3 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot;
    v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot];
    *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot] = v2;

    v5 = *(void **)&v0[v3];
    if (v5)
    {
      OUTLINED_FUNCTION_40_3(v5, sel_setClipsToBounds_);
      v6 = *(void **)&v0[v3];
      if (v6)
      {
        v7 = (double *)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius];
        OUTLINED_FUNCTION_2_0();
        v8 = objc_msgSend(v6, sel__setContinuousCornerRadius_, *v7);
        if (*(_QWORD *)&v0[v3])
          OUTLINED_FUNCTION_25_1((uint64_t)v8, sel_addSubview_);
      }
    }
    objc_msgSend(v0, sel_setNeedsLayout);
  }
  else
  {
    v9 = (void *)objc_opt_self();
    *(_QWORD *)(OUTLINED_FUNCTION_15() + 16) = v0;
    aBlock = MEMORY[0x1E0C809B0];
    v11 = OUTLINED_FUNCTION_117((uint64_t)thunk for @escaping @callee_guaranteed () -> (), v15, MEMORY[0x1E0C809B0], 1107296256, v17, v19);
    v12 = v0;
    swift_release();
    *(_QWORD *)(OUTLINED_FUNCTION_15() + 16) = v12;
    v13 = OUTLINED_FUNCTION_117((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v16, aBlock, 1107296256, v18, v20);
    v14 = v12;
    swift_release();
    objc_msgSend(v9, sel_animateWithDuration_animations_completion_, v11, v13, 0.3);
    _Block_release(v13);
    _Block_release(v11);
  }
}

id closure #1 in SharedContentView.isPaused.didset(uint64_t a1)
{
  id result;

  result = *(id *)(a1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot);
  if (result)
    return objc_msgSend(result, sel_setAlpha_, 0.0);
  return result;
}

void closure #2 in SharedContentView.isPaused.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot;
  v4 = *(void **)(a2 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot);
  if (v4)
  {
    objc_msgSend(v4, sel_removeFromSuperview);
    v4 = *(void **)(a2 + v3);
  }
  *(_QWORD *)(a2 + v3) = 0;

}

void SharedContentView.isPaused.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t SharedContentView.isPaused.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))SharedContentView.isPaused.didset);
}

void SharedContentView.isScreenSharing.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void SharedContentView.isScreenSharing.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_isScreenSharing);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void SharedContentView.isScreenSharing.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void SharedContentView.updateVideoViewTransform()()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CGAffineTransform *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  SEL v15;
  uint64_t v16;
  const char *v17;
  CGAffineTransform v18;
  CGAffineTransform v19;

  v1 = v0;
  v2 = (_OWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform);
  OUTLINED_FUNCTION_2_0();
  v3 = v2[1];
  *(_OWORD *)&v19.a = *v2;
  v4 = v2[2];
  *(_OWORD *)&v19.c = v3;
  *(_OWORD *)&v19.tx = v4;
  CGAffineTransformInvert(&v18, &v19);
  v19 = v18;
  if (static Platform.current.getter())
    CGAffineTransform.rotatingTranslationComponent(for:)(*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_deviceOrientation), v5, v6, v7, v8, v9, v10, v11, &v18);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView);
  v13 = *(id *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView);
  v14 = v12;
  OUTLINED_FUNCTION_17_83();
  objc_msgSend(v13, v15);
  OUTLINED_FUNCTION_17_83();
  OUTLINED_FUNCTION_25_1(v16, v17);

}

void SharedContentView.systemRootLayerTransform.getter(_OWORD *a1@<X8>)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;

  v3 = (_OWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform);
  OUTLINED_FUNCTION_2_0();
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v3[2];
  OUTLINED_FUNCTION_32();
}

__n128 key path getter for SharedContentView.systemRootLayerTransform : SharedContentView@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  __n128 result;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform;
  swift_beginAccess();
  v4 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v4;
  result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a2 + 32) = result;
  return result;
}

void SharedContentView.systemRootLayerTransform.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void SharedContentView.systemRootLayerTransform.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    SharedContentView.updateVideoViewTransform()();
  OUTLINED_FUNCTION_0();
}

id SharedContentView.__allocating_init(frame:)()
{
  objc_class *v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

char *SharedContentView.init(frame:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  objc_super *v14;
  SEL v15;
  char *v16;
  void *v17;
  id v18;
  char *v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  char *v29;
  id v30;

  v1 = v0;
  v2 = OUTLINED_FUNCTION_6_111();
  v3 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_contentView;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v5 = v0;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot] = 0;
  v6 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SharedContentVideoView()), sel_init);
  v7 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantVideoOverlayView()), sel_init);
  v8 = &v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_mostRecentViewModelHash];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  UUID.init()();
  v9 = (uint64_t)&v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_participantIdentifier];
  v10 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_77_0(v9, v11, v12, v10);
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius] = 0;
  v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_isPaused] = 0;
  v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_isScreenSharing] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit17SharedContentView_deviceOrientation] = 1;
  OUTLINED_FUNCTION_7_125(OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform);
  v13 = OUTLINED_FUNCTION_15_0();
  v16 = (char *)objc_msgSendSuper2(v14, v15, v13, v5, v2);
  v17 = *(void **)&v16[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView];
  v18 = *(id *)&v16[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView];
  v19 = v16;
  v20 = v17;
  OUTLINED_FUNCTION_40_3(v18, sel_setHidden_);
  OUTLINED_FUNCTION_40_3(v18, sel_setClipsToBounds_);

  v21 = v20;
  OUTLINED_FUNCTION_40_3(v21, sel_setHidden_);
  OUTLINED_FUNCTION_40_3(v21, sel_setClipsToBounds_);

  OUTLINED_FUNCTION_40_3(v19, sel_setClipsToBounds_);
  objc_opt_self();
  v22 = v19;
  v23 = OUTLINED_FUNCTION_18_92();
  OUTLINED_FUNCTION_48_1(v22, sel_setBackgroundColor_);

  v24 = one-time initialization token for shared;
  v25 = *(id *)&v22[OBJC_IVAR____TtC15ConversationKit17SharedContentView_contentView];
  if (v24 != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 320))() & 1) != 0)
  {
    if (one-time initialization token for background != -1)
      swift_once();
    v26 = (id)static Colors.ParticipantViews.background;
  }
  else
  {
    v26 = OUTLINED_FUNCTION_18_92();
  }
  v27 = v26;
  OUTLINED_FUNCTION_48_1(v25, sel_setBackgroundColor_);

  v28 = OUTLINED_FUNCTION_48_1(v22, sel_addSubview_);
  OUTLINED_FUNCTION_25_1((uint64_t)v28, sel_addSubview_);
  v29 = v22;
  v30 = objc_msgSend(v29, sel_layer);
  OUTLINED_FUNCTION_40_3(v30, sel_setShadowPathIsBounds_);

  return v29;
}

void SharedContentView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void SharedContentView.init(coder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_contentView;
  *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3F10]));
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot) = 0;
  v2 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView;
  v3 = objc_allocWithZone((Class)type metadata accessor for SharedContentVideoView());
  *(_QWORD *)(v0 + v2) = OUTLINED_FUNCTION_70_0(v3);
  v4 = OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView;
  v5 = objc_allocWithZone((Class)type metadata accessor for ParticipantVideoOverlayView());
  *(_QWORD *)(v0 + v4) = OUTLINED_FUNCTION_70_0(v5);
  v6 = v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_mostRecentViewModelHash;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  UUID.init()();
  v7 = v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_participantIdentifier;
  v8 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_77_0(v7, v9, v10, v8);
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit17SharedContentView_delegate);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_customCornerRadius) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_isPaused) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_isScreenSharing) = 1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_deviceOrientation) = 1;
  OUTLINED_FUNCTION_7_125(OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform);
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall SharedContentView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  SharedContentView._layout()();
}

void SharedContentView._layout()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double MidX;
  id v11;
  double v12;
  id v13;
  double v14;
  void *v15;
  double v16;
  id v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  objc_msgSend(v0, sel_bounds);
  if (!CGRectIsInfinite(v18))
  {
    objc_msgSend(v0, sel_bounds);
    if (!CGRectIsEmpty(v19))
    {
      objc_msgSend(v0, sel_bounds);
      v2 = v1;
      v4 = v3;
      v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView];
      v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView];
      v7 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_contentView];
      v8 = v5;
      v9 = v6;
      objc_msgSend(v7, sel_setBounds_, 0.0, 0.0, v2, v4);
      objc_msgSend(v0, sel_bounds);
      MidX = CGRectGetMidX(v20);
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v7, sel_setCenter_, MidX, CGRectGetMidY(v21));

      v11 = v8;
      objc_msgSend(v11, sel_setBounds_, 0.0, 0.0, v2, v4);
      objc_msgSend(v0, sel_bounds);
      v12 = CGRectGetMidX(v22);
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v11, sel_setCenter_, v12, CGRectGetMidY(v23));

      v13 = v9;
      objc_msgSend(v13, sel_setBounds_, 0.0, 0.0, v2, v4);
      objc_msgSend(v0, sel_bounds);
      v14 = CGRectGetMidX(v24);
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v13, sel_setCenter_, v14, CGRectGetMidY(v25));

      v15 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoViewSnapshot];
      if (v15)
      {
        v17 = v15;
        objc_msgSend(v17, sel_setBounds_, 0.0, 0.0, v2, v4);
        objc_msgSend(v0, sel_bounds);
        v16 = CGRectGetMidX(v26);
        objc_msgSend(v0, sel_bounds);
        objc_msgSend(v17, sel_setCenter_, v16, CGRectGetMidY(v27));

      }
    }
  }
}

id SharedContentView.convert(_:to:)(uint64_t a1)
{
  char *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  objc_class *v7;
  char *v8;
  __int128 v9;
  double v11;
  id v12;
  SEL v13;
  objc_super v14;
  CGAffineTransform v15;

  v7 = (objc_class *)OUTLINED_FUNCTION_6_111();
  v8 = &v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_systemRootLayerTransform];
  OUTLINED_FUNCTION_2_0();
  v9 = *((_OWORD *)v8 + 1);
  *(_OWORD *)&v15.a = *(_OWORD *)v8;
  *(_OWORD *)&v15.c = v9;
  *(_OWORD *)&v15.tx = *((_OWORD *)v8 + 2);
  if (CGAffineTransformIsIdentity(&v15))
  {
    v14.receiver = v1;
    v14.super_class = v7;
    return objc_msgSendSuper2(&v14, sel_convertRect_toCoordinateSpace_, a1, v5, v4, v3, v2);
  }
  else
  {
    v11 = OUTLINED_FUNCTION_15_0();
    return objc_msgSend(v12, v13, a1, v11);
  }
}

unint64_t SharedContentView.configureViewVisibility(for:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  int EnumCaseMultiPayload;
  char *v10;
  id v11;
  char **v12;
  char **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  char **v22;
  unint64_t result;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t i;
  id v28;
  uint64_t j;
  id v30;
  void *v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;

  v3 = type metadata accessor for SharedContentViewModel(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v6 = swift_allocObject();
  v32 = xmmword_1BD6441C0;
  *(_OWORD *)(v6 + 16) = xmmword_1BD6441C0;
  v7 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView];
  v8 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoOverlayView];
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v8;
  v34 = v6;
  specialized Array._endMutation()();
  outlined init with copy of SharedContentViewModel(a1, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v10 = v1;
  v11 = v7;
  v12 = v8;
  if (EnumCaseMultiPayload != 1)
  {
    result = specialized MutableCollection._halfStablePartition(isSuffixElement:)(&v34, v10);
    v14 = result;
    if (v34 >> 62)
      goto LABEL_35;
    v24 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_8;
  }
  v13 = v12;
  v14 = specialized MutableCollection._halfStablePartition(isSuffixElement:)(&v34, v10);
  if (v34 >> 62)
    goto LABEL_33;
  v15 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v15 >= v14)
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      v17 = v5 + *(int *)(v16 + 80);
      v18 = *(_DWORD *)(v16 + 64);
      specialized Array.replaceSubrange<A>(_:with:)();
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = v32;
      *(_QWORD *)(v19 + 32) = v11;
      *(_QWORD *)(v19 + 40) = v13;
      v33 = v19;
      specialized Array._endMutation()();
      v20 = v33;
      v21 = v11;
      v22 = v13;
      outlined destroy of ParticipantVideoOverlayView.ViewModel(v17);
      goto LABEL_10;
    }
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
    v24 = _CocoaArrayWrapper.endIndex.getter();
    result = swift_bridgeObjectRelease();
LABEL_8:
    if (v24 < v14)
      break;
    v18 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel))
                    + 64);
    specialized Array.replaceSubrange<A>(_:with:)();
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BD6443F0;
    *(_QWORD *)(v25 + 32) = v11;
    v33 = v25;
    specialized Array._endMutation()();
    v20 = v33;
    v26 = v11;
LABEL_10:
    outlined destroy of SharedContentVideoView.ViewModel(v5 + v18);
    outlined destroy of SharedContentViewModel.ParticipantDetails(v5);
    v5 = v34;
    if (v34 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v13 = &selRef_associatedAppBundleIdentifier;
    if (v14)
    {
      if (v14 < 1)
      {
        __break(1u);
        goto LABEL_32;
      }
      for (i = 0; i != v14; ++i)
      {
        if ((v5 & 0xC000000000000001) != 0)
          v28 = (id)MEMORY[0x1C3B73D18](i, v5);
        else
          v28 = *(id *)(v5 + 8 * i + 32);
        v11 = v28;
        objc_msgSend(v28, sel_setHidden_, 1);

      }
    }
    swift_bridgeObjectRelease();
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5)
        return swift_bridgeObjectRelease();
    }
    else
    {
      v5 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v5)
        return swift_bridgeObjectRelease();
    }
    if (v5 >= 1)
    {
      for (j = 0; j != v5; ++j)
      {
        if ((v20 & 0xC000000000000001) != 0)
          v30 = (id)MEMORY[0x1C3B73D18](j, v20);
        else
          v30 = *(id *)(v20 + 8 * j + 32);
        v31 = v30;
        objc_msgSend(v30, sel_setHidden_, 0);

      }
      return swift_bridgeObjectRelease();
    }
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void SharedContentView.registerVideoLayers(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[21];
  _BYTE v9[168];
  _BYTE v10[168];
  _BYTE v11[168];

  type metadata accessor for SharedContentViewModel(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_1();
  if ((objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit17SharedContentView_videoView), sel_isHidden) & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    outlined init with copy of SharedContentViewModel(a1, v2);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
      v6 = v2 + *(int *)(v5 + 80);
      OUTLINED_FUNCTION_4_44(v10, (const void *)(v2 + *(int *)(v5 + 64)));
      outlined destroy of ParticipantVideoOverlayView.ViewModel(v6);
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (SharedContentViewModel.ParticipantDetails, CNKDeviceOrientation, SharedContentVideoView.ViewModel));
      OUTLINED_FUNCTION_4_44(v10, (const void *)(v2 + *(int *)(v7 + 64)));
    }
    outlined destroy of SharedContentViewModel.ParticipantDetails(v2);
    OUTLINED_FUNCTION_4_44(v11, v10);
    outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v11, (uint64_t)v8, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
    if (v8[3] == 1)
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v8, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
    }
    else
    {
      OUTLINED_FUNCTION_4_44(v9, v8);
      SharedContentVideoView.registerVideoLayers(with:)((uint64_t)v9);
      outlined destroy of SharedContentVideoView.ViewModel((uint64_t)v9);
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v11, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
  }
}

id SharedContentView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t outlined init with copy of SharedContentViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedContentViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of SharedContentViewModel.ParticipantDetails(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharedContentViewModel.ParticipantDetails(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BD5979BC(double *a1)
{
  SharedContentView.customCornerRadius.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5979E0(char *a1)
{
  SharedContentView.isPaused.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD597A04(_OWORD *a1)
{
  SharedContentView.systemRootLayerTransform.setter(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of SharedContentViewDelegate.sharedContentViewDidTapFullScreen(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SharedContentViewDelegate.sharedContentViewOverrideView(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t ObjC metadata update function for SharedContentView()
{
  return type metadata accessor for SharedContentView();
}

uint64_t type metadata accessor for SharedContentView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SharedContentView;
  if (!type metadata singleton initialization cache for SharedContentView)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for SharedContentView()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID?();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

unint64_t specialized MutableCollection._halfStablePartition(isSuffixElement:)(_QWORD *a1, void *a2)
{
  uint64_t v2;
  unint64_t v3;
  id v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  char v16;
  uint64_t v17;
  id v18;
  id v19;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  unint64_t v27;
  uint64_t v28;

  v5 = a2;
  v6 = swift_bridgeObjectRetain();
  v7 = specialized Collection.firstIndex(where:)(v6, v5);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = v7;
    v9 = v8;
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
    {
      if (*a1 >> 62)
      {
        swift_bridgeObjectRetain();
        v3 = _CocoaArrayWrapper.endIndex.getter();

        swift_bridgeObjectRelease();
        return v3;
      }
      v3 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    else
    {
      v10 = v3 + 1;
      if (__OFADD__(v3, 1))
        goto LABEL_58;
      if (*a1 >> 62)
      {
LABEL_59:
        swift_bridgeObjectRetain();
        v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        v11 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        type metadata accessor for NSObject();
        v10 = v3 + 5;
        do
        {
          v12 = v10 - 4;
          v13 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v14 = (id)MEMORY[0x1C3B73D18](v10 - 4);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
            if (v12 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_49;
            v14 = *(id *)(v13 + 8 * v10);
          }
          v15 = v14;
          v16 = static NSObject.== infix(_:_:)();

          if ((v16 & 1) == 0)
          {
            if (v12 != v3)
            {
              v17 = *a1;
              if ((*a1 & 0xC000000000000001) != 0)
              {
                v18 = (id)MEMORY[0x1C3B73D18](v3, *a1);
                v17 = *a1;
              }
              else
              {
                if ((v3 & 0x8000000000000000) != 0)
                  goto LABEL_52;
                if (v3 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_53;
                v18 = *(id *)(v17 + 8 * v3 + 32);
              }
              if ((v17 & 0xC000000000000001) != 0)
              {
                v19 = (id)MEMORY[0x1C3B73D18](v10 - 4, v17);
                v17 = *a1;
              }
              else
              {
                if ((v12 & 0x8000000000000000) != 0)
                  goto LABEL_54;
                if (v12 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_55;
                v19 = *(id *)(v17 + 8 * v10);
              }
              isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v17;
              if (!isUniquelyReferenced_nonNull_bridgeObject || v17 < 0 || (v17 & 0x4000000000000000) != 0)
                specialized _ArrayBuffer._consumeAndCreateNew()(v17);
              v21 = *(void **)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20);
              *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v19;

              specialized Array._endMutation()();
              v22 = *a1;
              v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v22;
              if (!v23 || v22 < 0 || (v22 & 0x4000000000000000) != 0)
                specialized _ArrayBuffer._consumeAndCreateNew()(v22);
              if ((v12 & 0x8000000000000000) != 0)
                goto LABEL_56;
              v24 = v22 & 0xFFFFFFFFFFFFFF8;
              if (v12 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_57;
              v25 = *(void **)(v24 + 8 * v10);
              *(_QWORD *)(v24 + 8 * v10) = v18;

              specialized Array._endMutation()();
            }
            if (__OFADD__(v3++, 1))
              goto LABEL_51;
          }
          v27 = v10 - 3;
          if (__OFADD__(v12, 1))
            goto LABEL_50;
          if (*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            v28 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            v28 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          ++v10;
        }
        while (v27 != v28);
      }
    }

  }
  return v3;
}

{
  uint64_t v2;
  unint64_t v3;
  id v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  char v16;
  uint64_t v17;
  id v18;
  id v19;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  unint64_t v27;
  uint64_t v28;

  v5 = a2;
  v6 = swift_bridgeObjectRetain();
  v7 = specialized Collection.firstIndex(where:)(v6, v5);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = v7;
    v9 = v8;
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
    {
      if (*a1 >> 62)
      {
        swift_bridgeObjectRetain();
        v3 = _CocoaArrayWrapper.endIndex.getter();

        swift_bridgeObjectRelease();
        return v3;
      }
      v3 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    else
    {
      v10 = v3 + 1;
      if (__OFADD__(v3, 1))
        goto LABEL_60;
      if (*a1 >> 62)
      {
LABEL_61:
        swift_bridgeObjectRetain();
        v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        v11 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        type metadata accessor for NSObject();
        v10 = v3 + 5;
        do
        {
          v12 = v10 - 4;
          v13 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v14 = (id)MEMORY[0x1C3B73D18](v10 - 4);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
              goto LABEL_61;
            }
            if (v12 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_51;
            v14 = *(id *)(v13 + 8 * v10);
          }
          v15 = v14;
          if ((static NSObject.== infix(_:_:)() & 1) != 0)
          {

          }
          else
          {
            v16 = static NSObject.== infix(_:_:)();

            if ((v16 & 1) == 0)
            {
              if (v12 != v3)
              {
                v17 = *a1;
                if ((*a1 & 0xC000000000000001) != 0)
                {
                  v18 = (id)MEMORY[0x1C3B73D18](v3, *a1);
                  v17 = *a1;
                }
                else
                {
                  if ((v3 & 0x8000000000000000) != 0)
                    goto LABEL_54;
                  if (v3 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_55;
                  v18 = *(id *)(v17 + 8 * v3 + 32);
                }
                if ((v17 & 0xC000000000000001) != 0)
                {
                  v19 = (id)MEMORY[0x1C3B73D18](v10 - 4, v17);
                  v17 = *a1;
                }
                else
                {
                  if ((v12 & 0x8000000000000000) != 0)
                    goto LABEL_56;
                  if (v12 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_57;
                  v19 = *(id *)(v17 + 8 * v10);
                }
                isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
                *a1 = v17;
                if (!isUniquelyReferenced_nonNull_bridgeObject || v17 < 0 || (v17 & 0x4000000000000000) != 0)
                  specialized _ArrayBuffer._consumeAndCreateNew()(v17);
                v21 = *(void **)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20);
                *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v19;

                specialized Array._endMutation()();
                v22 = *a1;
                v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
                *a1 = v22;
                if (!v23 || v22 < 0 || (v22 & 0x4000000000000000) != 0)
                  specialized _ArrayBuffer._consumeAndCreateNew()(v22);
                if ((v12 & 0x8000000000000000) != 0)
                  goto LABEL_58;
                v24 = v22 & 0xFFFFFFFFFFFFFF8;
                if (v12 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_59;
                v25 = *(void **)(v24 + 8 * v10);
                *(_QWORD *)(v24 + 8 * v10) = v18;

                specialized Array._endMutation()();
              }
              if (__OFADD__(v3++, 1))
                goto LABEL_53;
            }
          }
          v27 = v10 - 3;
          if (__OFADD__(v12, 1))
            goto LABEL_52;
          if (*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            v28 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            v28 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          ++v10;
        }
        while (v27 != v28);
      }
    }

  }
  return v3;
}

{
  uint64_t v2;
  unint64_t v3;
  id v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  id v20;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  void *v26;
  unint64_t v28;
  uint64_t v29;

  v5 = a2;
  v6 = OUTLINED_FUNCTION_26_22();
  v7 = specialized Collection.firstIndex(where:)(v6, v5);
  if (v2)
  {

    OUTLINED_FUNCTION_21_0();
  }
  else
  {
    v3 = v7;
    v9 = v8;
    OUTLINED_FUNCTION_21_0();
    if ((v9 & 1) != 0)
    {
      if (*a1 >> 62)
      {
        OUTLINED_FUNCTION_25_43();
        v3 = OUTLINED_FUNCTION_237();

        swift_bridgeObjectRelease();
      }
      else
      {
        v3 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);

      }
    }
    else
    {
      v10 = v3 + 1;
      if (__OFADD__(v3, 1))
        goto LABEL_58;
      if (*a1 >> 62)
      {
LABEL_59:
        OUTLINED_FUNCTION_26_22();
        v11 = OUTLINED_FUNCTION_237();
        OUTLINED_FUNCTION_21_0();
      }
      else
      {
        v11 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
        v10 = v3 + 5;
        do
        {
          v13 = v10 - 4;
          v14 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v15 = (id)MEMORY[0x1C3B73D18](v10 - 4);
          }
          else
          {
            if ((v13 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
            if (v13 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_49;
            v15 = *(id *)(v14 + 8 * v10);
          }
          v16 = v15;
          v17 = static NSObject.== infix(_:_:)();

          if ((v17 & 1) == 0)
          {
            if (v13 != v3)
            {
              v18 = *a1;
              if ((*a1 & 0xC000000000000001) != 0)
              {
                v19 = (id)MEMORY[0x1C3B73D18](v3, *a1);
                v18 = *a1;
              }
              else
              {
                if ((v3 & 0x8000000000000000) != 0)
                  goto LABEL_52;
                if (v3 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_53;
                v19 = *(id *)(v18 + 8 * v3 + 32);
              }
              if ((v18 & 0xC000000000000001) != 0)
              {
                v20 = (id)MEMORY[0x1C3B73D18](v10 - 4, v18);
                v18 = *a1;
              }
              else
              {
                if ((v13 & 0x8000000000000000) != 0)
                  goto LABEL_54;
                if (v13 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_55;
                v20 = *(id *)(v18 + 8 * v10);
              }
              isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v18;
              if (!isUniquelyReferenced_nonNull_bridgeObject || v18 < 0 || (v18 & 0x4000000000000000) != 0)
                specialized _ArrayBuffer._consumeAndCreateNew()(v18);
              v22 = *(void **)((v18 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20);
              *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v20;

              specialized Array._endMutation()();
              v23 = *a1;
              v24 = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v23;
              if (!v24 || v23 < 0 || (v23 & 0x4000000000000000) != 0)
                specialized _ArrayBuffer._consumeAndCreateNew()(v23);
              if ((v13 & 0x8000000000000000) != 0)
                goto LABEL_56;
              v25 = v23 & 0xFFFFFFFFFFFFFF8;
              if (v13 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_57;
              v26 = *(void **)(v25 + 8 * v10);
              *(_QWORD *)(v25 + 8 * v10) = v19;

              specialized Array._endMutation()();
            }
            if (__OFADD__(v3++, 1))
              goto LABEL_51;
          }
          v28 = v10 - 3;
          if (__OFADD__(v13, 1))
            goto LABEL_50;
          if (*a1 >> 62)
          {
            OUTLINED_FUNCTION_25_43();
            v29 = OUTLINED_FUNCTION_237();
            swift_bridgeObjectRelease();
          }
          else
          {
            v29 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          ++v10;
        }
        while (v28 != v29);
      }

    }
  }
  return v3;
}

uint64_t sub_1BD598250()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in SharedContentView.isPaused.didset()
{
  uint64_t v0;

  return closure #1 in SharedContentView.isPaused.didset(*(_QWORD *)(v0 + 16));
}

void partial apply for closure #2 in SharedContentView.isPaused.didset(uint64_t a1)
{
  uint64_t v1;

  closure #2 in SharedContentView.isPaused.didset(a1, *(_QWORD *)(v1 + 16));
}

uint64_t LeaveButtonViewModel.__allocating_init(service:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 56) = 0;
  outlined init with take of Notice(a1, v2 + 16);
  return v2;
}

uint64_t LeaveButtonViewModel.init(service:)(__int128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = 0;
  outlined init with take of Notice(a1, v1 + 16);
  return v1;
}

uint64_t LeaveButtonViewModel.controlType.getter()
{
  return LeaveButtonViewModel.config.getter();
}

uint64_t LeaveButtonViewModel.config.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  objc_class *v21;
  NSBundle v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  NSBundle v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[5];
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;

  v1 = v0;
  v2 = type metadata accessor for Font.Leading();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Image.Scale();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + 56))
  {
    v10 = *(_QWORD *)(v1 + 56);
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
    v12 = MEMORY[0x1C3B7262C](v11);
    static Font.Weight.bold.getter();
    v14 = v13;
    v15 = static Color.white.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CDF7D8], v6);
    v16 = static Font.body.getter();
    static SystemSymbol<A>.catalystCallControl(name:color:backgroundColor:scale:font:weight:)(0x6B72616D78, 0xE500000000000000, v15, v12, (uint64_t)v9, v16, v47, v14);
    v46 = v47[3];
    v45 = v47[4];
    v44 = v48;
    v43 = v49;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v42 = v47[0];
    v41 = v47[1];
    v40 = v47[2];
    v17(v9, v6);
    v18 = static Color.white.getter();
    static Font.subheadline.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDD6D8], v2);
    v19 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v50 = xmmword_1BD6456D0;
    v51 = 0x401C000000000000;
    v52 = v18;
    v54 = v42;
    v55 = v41;
    v56 = v40;
    v57 = v46;
    v58 = v45;
    v53 = v19;
    v59 = v44;
    v60 = v43;
    v20 = (void *)objc_opt_self();
    v21 = (objc_class *)objc_msgSend(v20, sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v22.super.isa = v21;
    v27 = OUTLINED_FUNCTION_49_2(v23, v24, v25, v26, v22);
    v29 = v28;

    v30 = (objc_class *)objc_msgSend(v20, sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v31.super.isa = v30;
    v36 = OUTLINED_FUNCTION_49_2(v32, v33, v34, v35, v31);
    v38 = v37;

    swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<()>);
    swift_allocObject();
    v10 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)((uint64_t)&v50, v27, v29, 0, v36, v38, 0x747542657661656CLL, 0xEB000000006E6F74, 1);
    *(_QWORD *)(v1 + 56) = v10;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v10;
}

uint64_t LeaveButtonViewModel.enabled(for:)(unint64_t a1)
{
  return ((uint64_t (*)(_QWORD))((char *)nullsub_3 + 4 * byte_1BD665FE0[(a1 >> 37) & 7]))(0);
}

uint64_t sub_1BD59876C()
{
  return 1;
}

BOOL sub_1BD598774@<W0>(uint64_t a1@<X8>)
{
  return (a1 & 0x100000000) == 0;
}

Swift::Void __swiftcall LeaveButtonViewModel.didTap()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 152))(v1, v2);
}

uint64_t sub_1BD5987C4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t key path setter for LeaveButtonViewModel.config : LeaveButtonViewModel()
{
  uint64_t v0;

  v0 = swift_retain();
  return LeaveButtonViewModel.config.setter(v0);
}

uint64_t LeaveButtonViewModel.config.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_release();
}

_QWORD *closure #1 in LeaveButtonViewModel.config.getter()
{
  _QWORD *result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v1 = result[5];
    v2 = result[6];
    __swift_project_boxed_opaque_existential_1(result + 2, v1);
    (*(void (**)(uint64_t, uint64_t))(v2 + 152))(v1, v2);
    return (_QWORD *)swift_release();
  }
  return result;
}

_QWORD *partial apply for closure #1 in LeaveButtonViewModel.config.getter()
{
  return closure #1 in LeaveButtonViewModel.config.getter();
}

uint64_t LeaveButtonViewModel.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t LeaveButtonViewModel.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance LeaveButtonViewModel(uint64_t a1)
{
  return LeaveButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL) & 1;
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance LeaveButtonViewModel()
{
  return LeaveButtonViewModel.controlType.getter();
}

uint64_t sub_1BD59893C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = LeaveButtonViewModel.config.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for LeaveButtonViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for LeaveButtonViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LeaveButtonViewModel.__allocating_init(service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t InCallControlsTitleCellViewModel.init(groupName:groupPhotoData:participants:mode:linksEnabled:shouldUseGroupHeader:conversation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, unsigned __int8 a5@<W5>, int a6@<W7>, uint64_t *a7@<X8>, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  int v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  objc_class *v57;
  void *v58;
  objc_class *v59;
  NSBundle v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  objc_class *v68;
  char *v69;
  objc_class *v70;
  id v71;
  Class isa;
  id v73;
  void *v74;
  id v75;
  void *v76;
  NSBundle v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  id v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  Class v112;
  id v113;
  void *v114;
  objc_class *v115;
  objc_class *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  _QWORD *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  Class v137;
  id v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  uint64_t inited;
  int v151;
  BOOL v152;
  BOOL v153;
  BOOL v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  id v162;
  void *v163;
  uint64_t v164;
  unsigned __int8 v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t result;
  char v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  Class v201;
  uint64_t v202;
  uint64_t v203;

  HIDWORD(v179) = a6;
  v190 = a4;
  v186 = a2;
  v180 = a7;
  v10 = a5;
  v191 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v14 = (_QWORD *)(v13 - v12);
  v188 = type metadata accessor for PersonNameComponents();
  v187 = *(_QWORD *)(v188 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v189 = v17 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_77();
  v21 = v20 - v19;
  v199 = type metadata accessor for Participant(0);
  v182 = *(_QWORD *)(v199 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_5_18();
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v175 - v27;
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v175 - v31;
  LODWORD(v185) = v10;
  HIDWORD(v185) = v10 >> 5;
  v33 = 0x1E0CB3000;
  v192 = v14;
  v183 = a3;
  if (v30)
  {
    v181 = a1;
    v184 = v30;
    if (String.count.getter() > 0)
      goto LABEL_7;
    swift_bridgeObjectRelease();
  }
  v34 = v185 & 0xFFFFFFE1;
  v35 = (void *)OUTLINED_FUNCTION_12_111();
  v36 = OUTLINED_FUNCTION_11_105(v35);
  if (v34 == 1)
  {
    v37 = OUTLINED_FUNCTION_0_159(0x414C504552414853, 0xE900000000000059);
    OUTLINED_FUNCTION_7_126(v37, v38);
    goto LABEL_8;
  }
  v39 = OUTLINED_FUNCTION_0_159(0x454D495445434146, 0xE800000000000000);
  OUTLINED_FUNCTION_7_126(v39, v40);
LABEL_7:
  if (((1 << SBYTE4(v185)) & 0x33) != 0)
    goto LABEL_8;
  if (HIDWORD(v185) == 2)
  {
    v56 = (void *)OUTLINED_FUNCTION_12_111();
    v57 = (objc_class *)OUTLINED_FUNCTION_11_105(v56);
    OUTLINED_FUNCTION_18_3();
  }
  else
  {
    if ((_DWORD)v185 != 96)
    {
LABEL_8:
      v10 = MEMORY[0x1E0DEA968];
      v41 = *(void **)(v190 + 16);
      if (v41 != (void *)1)
      {
LABEL_11:
        if (one-time initialization token for participantCountFormatter != -1)
          swift_once();
        v43 = (void *)static InCallControlsTitleCellViewModel.participantCountFormatter;
        v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v41);
        v45 = objc_msgSend(v43, sel_stringFromNumber_, v44);

        if (v45)
        {
          v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          OUTLINED_FUNCTION_16_94();
        }
        else
        {
          v200 = v41;
          v46 = dispatch thunk of CustomStringConvertible.description.getter();
          v44 = v47;
        }
        v48 = (void *)OUTLINED_FUNCTION_12_111();
        v49 = OUTLINED_FUNCTION_11_105(v48);
        OUTLINED_FUNCTION_18_3();
        v14 = (_QWORD *)OUTLINED_FUNCTION_0_159(v50, 0x80000001BD697F70);

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = xmmword_1BD645380;
        *(_QWORD *)(v51 + 56) = v10;
        v52 = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v51 + 32) = v46;
        *(_QWORD *)(v51 + 40) = v44;
        v53 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v51 + 96) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v51 + 104) = v53;
        *(_QWORD *)(v51 + 64) = v52;
        *(_QWORD *)(v51 + 72) = v41;
        v54 = String.init(format:arguments:)();
        OUTLINED_FUNCTION_6_112(v54, v55);
        OUTLINED_FUNCTION_54_1();
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_34_51();
        goto LABEL_28;
      }
      specialized Collection.first.getter(v190, v21);
      v42 = v199;
      if (__swift_getEnumTagSinglePayload(v21, 1, v199) == 1)
      {
        outlined destroy of Participant?(v21);
        goto LABEL_11;
      }
      outlined init with take of Participant(v21, (uint64_t)v32);
      v58 = (void *)OUTLINED_FUNCTION_12_111();
      v59 = (objc_class *)OUTLINED_FUNCTION_11_105(v58);
      OUTLINED_FUNCTION_18_3();
      OUTLINED_FUNCTION_27_70();
      OUTLINED_FUNCTION_7_14();
      v60.super.isa = v59;
      v178 = OUTLINED_FUNCTION_49_2(v61, v62, v63, v64, v60);
      v195 = v65;

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v177 = swift_allocObject();
      *(_OWORD *)(v177 + 16) = xmmword_1BD6441D0;
      v66 = *(void **)&v32[*(int *)(v42 + 28)];
      v10 = v42;
      v33 = v197;
      if (v66)
      {
        v67 = v66;
        outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v67);
        v196 = v69;
        if (v68)
        {
          v70 = v68;
          if ((objc_msgSend(v67, sel_shouldHideContact) & 1) != 0)
          {
            OUTLINED_FUNCTION_33_1();
            PersonNameComponents.init()();
            PersonNameComponents.givenName.setter();
            OUTLINED_FUNCTION_50_2();
            if (one-time initialization token for initials != -1)
              swift_once();
            OUTLINED_FUNCTION_1();
            v71 = (id)static NSPersonNameComponentsFormatter.initials;
            isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            v73 = objc_msgSend(v71, sel_stringFromPersonNameComponents_, isa);

            v74 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            OUTLINED_FUNCTION_16_94();
            (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v189, v188);
            v200 = v74;
            v201 = isa;
            lazy protocol witness table accessor for type String and conformance String();
            StringProtocol.localizedUppercase.getter();

            OUTLINED_FUNCTION_2_1();
            v75 = 0;
            goto LABEL_32;
          }

          OUTLINED_FUNCTION_54_1();
        }
        else
        {

        }
      }
      v84 = v194;
      _s15ConversationKit11ParticipantVWOcTm_5((uint64_t)v32, v194, (void (*)(_QWORD))type metadata accessor for Participant);
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:)(v84, v85, v86, v87, v88, v89, v90, v91, v175, v176, v177, v178, v179, (uint64_t)v180, v181, v182, v183, v184, v185,
        v186);
      v196 = (char *)v201;
      v70 = (objc_class *)v202;
      v75 = v200;
      OUTLINED_FUNCTION_33_1();
      OUTLINED_FUNCTION_79_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_54_1();

      a3 = v183;
      swift_release();
      outlined destroy of Participant(v84);
LABEL_32:
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_25();

      v200 = v196;
      v201 = v70;
      v92 = MEMORY[0x1E0DEA968];
      v93 = String.init<A>(_:)();
      v95 = v94;
      v14 = (_QWORD *)v177;
      *(_QWORD *)(v177 + 56) = v92;
      v14[8] = lazy protocol witness table accessor for type String and conformance String();
      v14[4] = v93;
      v14[5] = v95;
      v96 = String.init(format:_:)();
      OUTLINED_FUNCTION_6_112(v96, v97);
      OUTLINED_FUNCTION_27();
      outlined destroy of Participant((uint64_t)v32);
      OUTLINED_FUNCTION_34_51();
      goto LABEL_33;
    }
    v76 = (void *)OUTLINED_FUNCTION_12_111();
    v57 = (objc_class *)OUTLINED_FUNCTION_11_105(v76);
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_27_70();
  }
  OUTLINED_FUNCTION_7_14();
  v77.super.isa = v57;
  v82 = OUTLINED_FUNCTION_49_2(v78, v79, v80, v81, v77);
  OUTLINED_FUNCTION_6_112(v82, v83);

LABEL_28:
  OUTLINED_FUNCTION_26_67();
LABEL_33:
  v98 = MEMORY[0x1E0DEE9D8];
  v203 = MEMORY[0x1E0DEE9D8];
  v99 = v190;
  v100 = *(_QWORD *)(v190 + 16);
  v178 = v100;
  if (!v100)
    goto LABEL_64;
  OUTLINED_FUNCTION_24_69();
  v102 = v99 + v101;
  v195 = *(_QWORD *)(v103 + 72);
  swift_bridgeObjectRetain();
  v104 = v100;
  v196 = v28;
  do
  {
    _s15ConversationKit11ParticipantVWOcTm_5(v102, (uint64_t)v28, (void (*)(_QWORD))type metadata accessor for Participant);
    v105 = *(int *)(v10 + 28);
    v106 = *(void **)&v28[v105];
    if (v106)
    {
      v14 = v106;
      if ((objc_msgSend(v14, sel_shouldHideContact) & 1) != 0)
      {
        type metadata accessor for CNContact();
        v107 = @nonobjc CNContact.init(displayName:handle:)(0, 0, 0);
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          OUTLINED_FUNCTION_0_99();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        goto LABEL_62;
      }

      v108 = v14;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v108);
      if (v110)
      {
        if ((OUTLINED_FUNCTION_9(v109, sel_shouldHideContact) & 1) != 0)
        {
          OUTLINED_FUNCTION_79_1();
          OUTLINED_FUNCTION_19_80();
          OUTLINED_FUNCTION_20_12();
          OUTLINED_FUNCTION_50_2();
          if (one-time initialization token for initials != -1)
            swift_once();
          OUTLINED_FUNCTION_1();
          v111 = (id)static NSPersonNameComponentsFormatter.initials;
          v112 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          v113 = objc_msgSend(v111, sel_stringFromPersonNameComponents_, v112);

          v114 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          v116 = v115;

          OUTLINED_FUNCTION_4_142();
          v200 = v114;
          v201 = v116;
          lazy protocol witness table accessor for type String and conformance String();
          StringProtocol.localizedUppercase.getter();
          OUTLINED_FUNCTION_16_94();
          OUTLINED_FUNCTION_54_1();
          OUTLINED_FUNCTION_27();
          swift_bridgeObjectRelease_n();
LABEL_49:
          v128 = (uint64_t)v196;
          v129 = *(void **)&v196[v105];
          v130 = v199;
          if (v129)
          {
            v131 = v129;
            outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v131);
            if (v133)
            {
              v134 = v132;
              v135 = v133;
              if ((OUTLINED_FUNCTION_9(v132, sel_shouldHideContact) & 1) != 0)
              {
                OUTLINED_FUNCTION_33_1();
                OUTLINED_FUNCTION_19_80();
                OUTLINED_FUNCTION_20_12();
                OUTLINED_FUNCTION_50_2();
                if (one-time initialization token for initials != -1)
                  swift_once();
                OUTLINED_FUNCTION_1();
                v136 = (id)static NSPersonNameComponentsFormatter.initials;
                v137 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
                v138 = objc_msgSend(v136, sel_stringFromPersonNameComponents_, v137);

                v139 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
                v10 = v140;

                OUTLINED_FUNCTION_4_142();
                v200 = v139;
                v201 = (Class)v10;
                lazy protocol witness table accessor for type String and conformance String();
                StringProtocol.localizedUppercase.getter();
                OUTLINED_FUNCTION_16_94();
                OUTLINED_FUNCTION_53();
                v33 = 0;
                goto LABEL_58;
              }

              OUTLINED_FUNCTION_54_1();
            }
            else
            {

            }
          }
          v141 = v194;
          _s15ConversationKit11ParticipantVWOcTm_5(v128, v194, (void (*)(_QWORD))type metadata accessor for Participant);
          v10 = *(_QWORD *)(v128 + *(int *)(v130 + 64));
          swift_retain();
          ParticipantContactDetailsCache.contactDetails(for:)(v141, v142, v143, v144, v145, v146, v147, v148, v175, v176, v177, v178, v179, (uint64_t)v180, v181, v182, v183, v184, v185,
            v186);
          v33 = (uint64_t)v200;
          v134 = (uint64_t)v201;
          v135 = v202;
          v149 = v200;
          OUTLINED_FUNCTION_33_1();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_54_1();

          swift_release();
          OUTLINED_FUNCTION_30_72();
LABEL_58:
          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_2_1();
          type metadata accessor for CNContact();

          v127 = @nonobjc CNContact.init(displayName:handle:)(v134, v135, 0);
          goto LABEL_59;
        }

        OUTLINED_FUNCTION_25();
      }
      else
      {

      }
    }
    v117 = (uint64_t)v28;
    v118 = v194;
    _s15ConversationKit11ParticipantVWOcTm_5(v117, v194, (void (*)(_QWORD))type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)(v118, v119, v120, v121, v122, v123, v124, v125, v175, v176, v177, v178, v179, (uint64_t)v180, v181, v182, v183, v184, v185,
      v186);
    v33 = (uint64_t)v200;
    v10 = v202;
    v126 = v200;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_79_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53();

    swift_release();
    OUTLINED_FUNCTION_30_72();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_53();
    if (!v33)
      goto LABEL_49;
    v127 = v126;
LABEL_59:
    v14 = v127;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      OUTLINED_FUNCTION_0_99();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    OUTLINED_FUNCTION_26_67();
    v28 = v196;
LABEL_62:

    OUTLINED_FUNCTION_30_72();
    v102 += v195;
    --v104;
  }
  while (v104);
  v99 = v190;
  swift_bridgeObjectRelease();
  v98 = v203;
  a3 = v183;
  OUTLINED_FUNCTION_34_51();
LABEL_64:
  v195 = a8;
  LOBYTE(v200) = BYTE4(v179) & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(InCallControlsTitleCellViewModel.TitleCellButton, Bool)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  *(_BYTE *)(inited + 32) = 0;
  v151 = HIDWORD(v185);
  v152 = HIDWORD(v185) != 2;
  v153 = (_DWORD)v185 == 96;
  if (HIDWORD(v185) == 3)
    v152 = (_DWORD)v185 != 96;
  *(_BYTE *)(inited + 33) = v152;
  *(_BYTE *)(inited + 34) = 1;
  v154 = v151 == 3 && v153;
  *(_BYTE *)(inited + 35) = v154;
  OUTLINED_FUNCTION_33_1();
  outlined copy of Data?(v186, a3);
  lazy protocol witness table accessor for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton();
  v196 = (char *)Dictionary.init(dictionaryLiteral:)();
  v155 = v198;
  v156 = v178;
  if (v178)
  {
    v194 = v98;
    OUTLINED_FUNCTION_24_69();
    v158 = v99 + v157;
    v160 = *(_QWORD *)(v159 + 72);
    swift_bridgeObjectRetain();
    do
    {
      OUTLINED_FUNCTION_35_47(v158);
      v161 = *(void **)(v155 + *(int *)(v199 + 28));
      if (!v161)
      {
        OUTLINED_FUNCTION_9_105(v155);
LABEL_77:
        _s15ConversationKit11ParticipantVWOcTm_5(v33, (uint64_t)v14, (void (*)(_QWORD))type metadata accessor for Participant.State);
        v166 = (char *)&loc_1BD59980C + *((int *)qword_1BD599A60 + swift_getEnumCaseMultiPayload());
        __asm { BR              X9 }
      }
      v162 = objc_msgSend(v161, sel_value);
      v163 = v162;
      if (!v162)
      {
        v164 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v163 = (void *)MEMORY[0x1C3B72E00](v164);
        v162 = (id)OUTLINED_FUNCTION_53();
      }
      v165 = OUTLINED_FUNCTION_9((uint64_t)v162, sel_destinationIdIsTemporary);

      OUTLINED_FUNCTION_9_105(v198);
      if ((v165 & 1) == 0)
        goto LABEL_77;
      OUTLINED_FUNCTION_43_4();
      v167 = v193;
      OUTLINED_FUNCTION_35_47(v198);
      outlined destroy of Participant(v167);
      OUTLINED_FUNCTION_33_68();
      v158 += v160;
      --v156;
      v155 = v198;
    }
    while (v156);
    OUTLINED_FUNCTION_53();
    a3 = v183;
    v168 = v181;
    v98 = v194;
  }
  else
  {
    v168 = v181;
  }
  v169 = v186;
  outlined consume of Data?(v186, a3);
  OUTLINED_FUNCTION_53();
  result = OUTLINED_FUNCTION_2_1();
  v171 = (char)v200;
  v172 = v180;
  v173 = v184;
  *v180 = v168;
  v172[1] = v173;
  v174 = v176;
  v172[2] = v177;
  v172[3] = v174;
  v172[4] = v98;
  v172[5] = v169;
  v172[6] = a3;
  *((_BYTE *)v172 + 56) = v171;
  v172[8] = (uint64_t)v196;
  *((_BYTE *)v172 + 72) = 0;
  v172[10] = v195;
  return result;
}

BOOL static InCallControlsTitleCellViewModel.TitleCellButton.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void InCallControlsTitleCellViewModel.TitleCellButton.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int InCallControlsTitleCellViewModel.TitleCellButton.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsTitleCellViewModel.TitleCellButton(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static InCallControlsTitleCellViewModel.TitleCellButton.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance InCallControlsTitleCellViewModel.TitleCellButton()
{
  char *v0;

  return InCallControlsTitleCellViewModel.TitleCellButton.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance InCallControlsTitleCellViewModel.TitleCellButton(uint64_t a1)
{
  char *v1;

  InCallControlsTitleCellViewModel.TitleCellButton.hash(into:)(a1, *v1);
}

void InCallControlsTitleCellViewModel.title.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void InCallControlsTitleCellViewModel.subtitle.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t InCallControlsTitleCellViewModel.contacts.getter()
{
  return swift_bridgeObjectRetain();
}

void InCallControlsTitleCellViewModel.groupPhotoData.getter()
{
  uint64_t v0;
  unint64_t v1;

  v0 = OUTLINED_FUNCTION_50();
  outlined copy of Data?(v0, v1);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t InCallControlsTitleCellViewModel.shouldUseGroupHeader.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t InCallControlsTitleCellViewModel.buttonsShowing.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InCallControlsTitleCellViewModel.shouldEnableMessagesButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

void *InCallControlsTitleCellViewModel.conversation.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 80);
  v2 = v1;
  return v1;
}

id one-time initialization function for participantCountFormatter()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  static InCallControlsTitleCellViewModel.participantCountFormatter = (uint64_t)result;
  return result;
}

id @nonobjc CNContact.init(displayName:handle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  NSArray v5;
  id v6;

  if (!a2)
  {
    v4 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v5.super.isa = 0;
    goto LABEL_6;
  }
  v4 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v5.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
LABEL_6:
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_contactWithDisplayName_handleStrings_, v4, v5.super.isa);

  return v6;
}

unint64_t type metadata accessor for CNContact()
{
  unint64_t result;

  result = lazy cache variable for type metadata for CNContact;
  if (!lazy cache variable for type metadata for CNContact)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton;
  if (!lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsTitleCellViewModel.TitleCellButton, &type metadata for InCallControlsTitleCellViewModel.TitleCellButton);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton;
  if (!lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsTitleCellViewModel.TitleCellButton, &type metadata for InCallControlsTitleCellViewModel.TitleCellButton);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsTitleCellViewModel.TitleCellButton and conformance InCallControlsTitleCellViewModel.TitleCellButton);
  }
  return result;
}

uint64_t _s15ConversationKit11ParticipantVWOcTm_5(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v4;
  void (*v5)(uint64_t);

  a3(0);
  v4 = OUTLINED_FUNCTION_50();
  v5(v4);
  return a2;
}

void destroy for InCallControlsTitleCellViewModel(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >> 60 != 15)
    outlined consume of Data._Representation(*(_QWORD *)(a1 + 40), v2);
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for InCallControlsTitleCellViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = (uint64_t *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    outlined copy of Data._Representation(*v6, v7);
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v7;
  }
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v9 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRetain();
  v10 = v9;
  return a1;
}

uint64_t assignWithCopy for InCallControlsTitleCellViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      outlined copy of Data._Representation(*v4, *(_QWORD *)(a2 + 48));
      v8 = *(_QWORD *)(a1 + 40);
      v9 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 40) = v7;
      *(_QWORD *)(a1 + 48) = v5;
      outlined consume of Data._Representation(v8, v9);
      goto LABEL_8;
    }
    outlined destroy of Data(a1 + 40);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v6 = *v4;
  outlined copy of Data._Representation(*v4, *(_QWORD *)(a2 + 48));
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v5;
LABEL_8:
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v10 = *(void **)(a1 + 80);
  v11 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v11;
  v12 = v11;

  return a1;
}

uint64_t outlined destroy of Data(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t assignWithTake for InCallControlsTitleCellViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 48);
    if (v8 >> 60 != 15)
    {
      v9 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = *v6;
      *(_QWORD *)(a1 + 48) = v8;
      outlined consume of Data._Representation(v9, v7);
      goto LABEL_6;
    }
    outlined destroy of Data(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
LABEL_6:
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v10 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlsTitleCellViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InCallControlsTitleCellViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsTitleCellViewModel()
{
  return &type metadata for InCallControlsTitleCellViewModel;
}

uint64_t storeEnumTagSinglePayload for InCallControlsTitleCellViewModel.TitleCellButton(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD59A1E0 + 4 * byte_1BD666055[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD59A214 + 4 * byte_1BD666050[v4]))();
}

uint64_t sub_1BD59A214(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD59A21C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD59A224);
  return result;
}

uint64_t sub_1BD59A230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD59A238);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD59A23C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD59A244(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsTitleCellViewModel.TitleCellButton()
{
  return &type metadata for InCallControlsTitleCellViewModel.TitleCellButton;
}

id TapToRadarBannerViewController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PLPillView.__allocating_init(leadingAccessoryView:trailingAccessoryView:)(void *a1, void *a2)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithLeadingAccessoryView_trailingAccessoryView_, a1, a2);

  OUTLINED_FUNCTION_18();
}

uint64_t TapToRadarBannerViewController.isBannerPresent.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_isBannerPresent);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

uint64_t TapToRadarBannerViewController.isBannerPresent.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_isBannerPresent);
  result = OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return result;
}

void TapToRadarBannerViewController.isBannerPresent.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t TapToRadarBannerViewController.groupUUIDString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_groupUUIDString);
  *v3 = a1;
  v3[1] = a2;
  return OUTLINED_FUNCTION_2_4();
}

uint64_t TapToRadarBannerViewController.addressList.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_addressList) = a1;
  return OUTLINED_FUNCTION_2_4();
}

void TapToRadarBannerViewController.bannerSource.getter(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v2 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController____lazy_storage___bannerSource;
  v3 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController____lazy_storage___bannerSource];
  if (v3)
    goto LABEL_4;
  v4 = v1;
  OUTLINED_FUNCTION_59(a1, (unint64_t *)&lazy cache variable for type metadata for BNBannerSource);
  v5 = outlined bridged method (pb) of @objc TapToRadarBannerViewController.requesterIdentifier.getter(v1);
  @nonobjc BNBannerSource.__allocating_init(for:forRequesterIdentifier:)(0, v5, v6);
  if (v7)
  {
    v8 = *(void **)&v1[v2];
    *(_QWORD *)&v4[v2] = v7;
    v9 = v7;

    v3 = 0;
LABEL_4:
    v10 = v3;
    OUTLINED_FUNCTION_18();
    return;
  }
  __break(1u);
}

id TapToRadarBannerViewController.init()()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  Class isa;
  objc_class *v56;
  id v57;
  id v58;
  id v59;
  id result;
  void *v61;
  _QWORD v62[4];
  objc_super v63;
  uint64_t v64;
  uint64_t v65;

  OUTLINED_FUNCTION_93();
  v64 = v1;
  v65 = v2;
  v3 = type metadata accessor for UUID();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_groupUUIDString];
  *v7 = 0;
  v7[1] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_fullLogArchive] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController____lazy_storage___bannerSource] = 0;
  v8 = v0;
  UUID.init()();
  v9 = UUID.uuidString.getter();
  v11 = v10;
  v12 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = (uint64_t *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_requestID];
  *v13 = v9;
  v13[1] = v11;
  v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_isBannerPresent] = 0;
  OUTLINED_FUNCTION_59(v12, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v14 = @nonobjc UIImage.init(_systemName:)(0x7261646172, 0xE500000000000000);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v14);

  v16 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillLeadingImageView;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillLeadingImageView] = v15;
  objc_opt_self();
  v17 = v15;
  v18 = OUTLINED_FUNCTION_23_84();
  objc_msgSend(v17, sel_setTintColor_, v18);

  OUTLINED_FUNCTION_61();
  v21 = @nonobjc UIImage.init(_systemName:)(v19, v20);
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v21);

  v23 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillTrailingImageView;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillTrailingImageView] = v22;
  v24 = v22;
  v25 = OUTLINED_FUNCTION_23_84();
  objc_msgSend(v24, sel_setTintColor_, v25);

  OUTLINED_FUNCTION_59(v26, &lazy cache variable for type metadata for PLPillContentItem);
  v27 = (void *)objc_opt_self();
  v28 = objc_msgSend(v27, sel_conversationKit);
  OUTLINED_FUNCTION_61();
  v30 = OUTLINED_FUNCTION_0_3(0xD000000000000010, v29);
  v32 = v31;

  PLPillContentItem.__allocating_init(text:)(v30, v32);
  v33 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillViewTitle;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillViewTitle] = v34;
  v35 = objc_msgSend(v27, sel_conversationKit);
  OUTLINED_FUNCTION_61();
  v38 = OUTLINED_FUNCTION_0_3(v36, v37);
  v40 = v39;

  PLPillContentItem.__allocating_init(text:style:)(v38, v40, 5);
  v41 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillViewSubtitle;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillViewSubtitle] = v42;
  OUTLINED_FUNCTION_59(v42, &lazy cache variable for type metadata for PLPillView);
  v43 = *(void **)&v8[v16];
  v44 = *(void **)&v8[v23];
  v45 = v43;
  v46 = v44;
  PLPillView.__allocating_init(leadingAccessoryView:trailingAccessoryView:)(v43, v44);
  v48 = v47;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillView] = v47;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1BD6441C0;
  v50 = *(void **)&v8[v33];
  *(_QWORD *)(v49 + 32) = v50;
  v51 = *(void **)&v8[v41];
  *(_QWORD *)(v49 + 40) = v51;
  v62[0] = v49;
  specialized Array._endMutation()();
  v52 = v48;
  v53 = v50;
  v54 = v51;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v52, sel_setCenterContentItems_, isa);

  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_addressList] = MEMORY[0x1E0DEE9E8];
  v56 = (objc_class *)type metadata accessor for TapToRadarBannerViewController();
  v63.receiver = v8;
  v63.super_class = v56;
  v57 = objc_msgSendSuper2(&v63, sel_initWithNibName_bundle_, 0, 0);
  v62[3] = v56;
  v62[0] = v57;
  objc_allocWithZone(MEMORY[0x1E0DC3D80]);
  v58 = v57;
  v59 = @nonobjc UITapGestureRecognizer.init(target:action:)(v62, (uint64_t)sel_handleTap_);
  result = objc_msgSend(v58, sel_view);
  if (result)
  {
    v61 = result;
    objc_msgSend(result, sel_addGestureRecognizer_, v59);

    return v58;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for TapToRadarBannerViewController()
{
  return objc_opt_self();
}

id TapToRadarBannerViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void TapToRadarBannerViewController.init(coder:)()
{
  _BYTE *v0;
  _QWORD *v1;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_groupUUIDString];
  *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_fullLogArchive] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController____lazy_storage___bannerSource] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall TapToRadarBannerViewController.viewDidLoad()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  id v14;

  v1 = OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillView), sel_setAutoresizingMask_, 18);
  v2 = *(id *)(v0 + v1);
  v3 = OUTLINED_FUNCTION_1_52();
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_bounds);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
    v13 = OUTLINED_FUNCTION_1_52();
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v13, sel_addSubview_, *(_QWORD *)(v0 + v1));

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall TapToRadarBannerViewController.handleTap(_:)(UITapGestureRecognizer_optional *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_93();
  v3 = type metadata accessor for DispatchWorkItemFlags();
  v10 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v6 = (void *)OUTLINED_FUNCTION_7_22();
  *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v1;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v7 = v1;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  OUTLINED_FUNCTION_36_11(MEMORY[0x1E0DEE9D8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_21_53((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], v8, MEMORY[0x1E0DEAF38]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v9 = OUTLINED_FUNCTION_6_113();
  MEMORY[0x1C3B7361C](v9);
  OUTLINED_FUNCTION_50_3();

  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in TapToRadarBannerViewController.handleTap(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(unint64_t, char *, uint64_t);
  unint64_t v36;
  char *v37;
  unint64_t v38;
  char *v39;
  unint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  unint64_t v46;
  char *v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  char *v63;
  uint64_t v64;
  NSURL *v65;
  void *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  _QWORD *v79;
  uint64_t v80;

  v79 = a1;
  v1 = type metadata accessor for URL();
  v69 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v68 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v75 = (char *)&v67 - v7;
  v8 = type metadata accessor for URLQueryItem();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v73 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v74 = (char *)&v67 - v12;
  MEMORY[0x1E0C80A78](v13);
  v72 = (char *)&v67 - v14;
  MEMORY[0x1E0C80A78](v15);
  v71 = (char *)&v67 - v16;
  MEMORY[0x1E0C80A78](v17);
  v78 = (char *)&v67 - v18;
  MEMORY[0x1E0C80A78](v19);
  v70 = (char *)&v67 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v67 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v67 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v67 - v28;
  URLQueryItem.init(name:value:)();
  v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  v32 = *(_QWORD *)(v30 + 16);
  v31 = *(_QWORD *)(v30 + 24);
  v76 = v5;
  v77 = v1;
  if (v32 >= v31 >> 1)
    v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *(_QWORD *)(v30 + 16) = v32 + 1;
  v33 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v34 = *(_QWORD *)(v9 + 72);
  v35 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
  v35(v30 + v33 + v34 * v32, v29, v8);
  URLQueryItem.init(name:value:)();
  v36 = *(_QWORD *)(v30 + 16);
  if (v36 >= *(_QWORD *)(v30 + 24) >> 1)
    v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  v37 = v72;
  *(_QWORD *)(v30 + 16) = v36 + 1;
  v35(v30 + v33 + v36 * v34, v26, v8);
  URLQueryItem.init(name:value:)();
  v38 = *(_QWORD *)(v30 + 16);
  if (v38 >= *(_QWORD *)(v30 + 24) >> 1)
    v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  v39 = v70;
  *(_QWORD *)(v30 + 16) = v38 + 1;
  v35(v30 + v33 + v38 * v34, v23, v8);
  URLQueryItem.init(name:value:)();
  v40 = *(_QWORD *)(v30 + 16);
  if (v40 >= *(_QWORD *)(v30 + 24) >> 1)
    v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  v41 = v71;
  *(_QWORD *)(v30 + 16) = v40 + 1;
  v35(v30 + v33 + v40 * v34, v39, v8);
  URLQueryItem.init(name:value:)();
  v42 = *(_QWORD *)(v30 + 16);
  if (v42 >= *(_QWORD *)(v30 + 24) >> 1)
    v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *(_QWORD *)(v30 + 16) = v42 + 1;
  v35(v30 + v33 + v42 * v34, v78, v8);
  URLQueryItem.init(name:value:)();
  v43 = *(_QWORD *)(v30 + 16);
  if (v43 >= *(_QWORD *)(v30 + 24) >> 1)
    v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *(_QWORD *)(v30 + 16) = v43 + 1;
  v35(v30 + v33 + v43 * v34, v41, v8);
  if (*(_QWORD *)((char *)v79 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_groupUUIDString + 8))
  {
    swift_bridgeObjectRetain();
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    v44 = *(_QWORD *)(v30 + 16);
    if (v44 >= *(_QWORD *)(v30 + 24) >> 1)
      v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    *(_QWORD *)(v30 + 16) = v44 + 1;
    v35(v30 + v33 + v44 * v34, v37, v8);
  }
  v80 = *(_QWORD *)((char *)v79 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_addressList);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<String>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Set<String> and conformance Set<A>, &demangling cache variable for type metadata for Set<String>, MEMORY[0x1E0DEB3D0]);
  lazy protocol witness table accessor for type String and conformance String();
  Sequence<>.joined(separator:)();
  swift_bridgeObjectRelease();
  v45 = v74;
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v30 + 16);
  if (v46 >= *(_QWORD *)(v30 + 24) >> 1)
    v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  v47 = v73;
  *(_QWORD *)(v30 + 16) = v46 + 1;
  v35(v30 + v33 + v46 * v34, v45, v8);
  if (*((_BYTE *)v79 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_fullLogArchive) == 1)
  {
    URLQueryItem.init(name:value:)();
    v48 = *(_QWORD *)(v30 + 16);
    if (v48 >= *(_QWORD *)(v30 + 24) >> 1)
      v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    *(_QWORD *)(v30 + 16) = v48 + 1;
    v35(v30 + v33 + v48 * v34, v47, v8);
  }
  v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3998]), sel_init);
  outlined bridged method (mbnn) of @objc NSURLComponents.scheme.setter(0x722D6F742D706174, 0xEC00000072616461, v49, (SEL *)&selRef_setScheme_);
  outlined bridged method (mbnn) of @objc NSURLComponents.scheme.setter(7824750, 0xE300000000000000, v49, (SEL *)&selRef_setHost_);
  outlined bridged method (mbnn) of @objc NSURLComponents.queryItems.setter(v30, v49);
  v51 = (uint64_t)v76;
  v50 = v77;
  v52 = (uint64_t)v75;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1BD6441D0;
  v54 = objc_msgSend(v49, sel_URL);
  if (v54)
  {
    v55 = v54;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v56 = 0;
  }
  else
  {
    v56 = 1;
  }
  __swift_storeEnumTagSinglePayload(v52, v56, 1, v50);
  specialized >> prefix<A>(_:)(v52);
  v58 = v57;
  v60 = v59;
  outlined destroy of URL?(v52);
  *(_QWORD *)(v53 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v53 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v53 + 32) = v58;
  *(_QWORD *)(v53 + 40) = v60;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v61 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v62 = objc_msgSend(v49, sel_URL);
  if (v62)
  {
    v63 = v68;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v64 = v69;
    (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v51, v63, v50);
    __swift_storeEnumTagSinglePayload(v51, 0, 1, v50);
    if (__swift_getEnumTagSinglePayload(v51, 1, v50) == 1)
    {
      v62 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v65);
      v62 = v66;
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v51, v50);
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v51, 1, 1, v50);
  }
  objc_msgSend(v61, sel_openURL_withCompletionHandler_, v62, 0);

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v79) + 0x1A8))();
}

Swift::Void __swiftcall TapToRadarBannerViewController.showBanner()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_26_68();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  if ((OUTLINED_FUNCTION_9_106(*v0) & 1) != 0
    || (objc_msgSend(v10, sel_TTRBannerEnabled) & 1) == 0
    || (type metadata accessor for SpringBoardUtilities(),
        OUTLINED_FUNCTION_61(),
        v6 = static SpringBoardUtilities.checkSpringBoardState(for:)()))
  {

  }
  else
  {
    OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v9 = (void *)OUTLINED_FUNCTION_7_22();
    *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v1;
    OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
    OUTLINED_FUNCTION_35_28();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_36_11(MEMORY[0x1E0DEE9D8]);
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_21_53((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], v7, MEMORY[0x1E0DEAF38]);
    OUTLINED_FUNCTION_4_143();
    v8 = OUTLINED_FUNCTION_6_113();
    MEMORY[0x1C3B7361C](v8);

    OUTLINED_FUNCTION_50_3();
    OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    OUTLINED_FUNCTION_52_1();
  }
}

void closure #1 in TapToRadarBannerViewController.showBanner()(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  unsigned int v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20[2];

  v20[1] = *(id *)MEMORY[0x1E0C80C00];
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  v2 = os_log(_:dso:log:type:_:)();
  TapToRadarBannerViewController.bannerSource.getter(v2);
  v4 = v3;
  v20[0] = 0;
  v5 = objc_msgSend(v3, sel_layoutDescriptionWithError_, v20);

  if (v5)
  {
    v6 = v20[0];
    objc_msgSend(v5, sel_presentationSize);
    v8 = v7;
    v10 = v9;
    objc_msgSend(v5, sel_containerSize);
    objc_msgSend(a1, sel_preferredContentSizeWithPresentationSize_containerSize_, v8, v10, v11, v12);
    TapToRadarBannerViewController.bannerSource.getter((uint64_t)objc_msgSend(a1, sel_setPreferredContentSize_));
    v14 = v13;
    v20[0] = 0;
    v15 = objc_msgSend(v13, sel_postPresentable_options_userInfo_error_, a1, 1, 0, v20);

    if (v15)
    {
      v16 = v20[0];

      return;
    }
    v19 = v20[0];
    v18 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  else
  {
    v17 = v20[0];
    v18 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

}

Swift::Void __swiftcall TapToRadarBannerViewController.dismissBanner()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_26_68();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  v6 = OUTLINED_FUNCTION_9_106(*v0);
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v9 = (void *)OUTLINED_FUNCTION_7_22();
    *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v1;
    OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
    OUTLINED_FUNCTION_35_28();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_36_11(MEMORY[0x1E0DEE9D8]);
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_21_53((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], v7, MEMORY[0x1E0DEAF38]);
    OUTLINED_FUNCTION_4_143();
    v8 = OUTLINED_FUNCTION_6_113();
    MEMORY[0x1C3B7361C](v8);
    OUTLINED_FUNCTION_50_3();

    OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in TapToRadarBannerViewController.dismissBanner()(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  v2 = os_log(_:dso:log:type:_:)();
  TapToRadarBannerViewController.bannerSource.getter(v2);
  v4 = v3;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_requestID);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_requestID + 8);
  swift_bridgeObjectRetain();
  v7 = (void *)MEMORY[0x1C3B72E00](0xD000000000000013, 0x80000001BD698220);
  v11[0] = 0;
  v8 = outlined bridged method (mbgnnnnnn) of @objc BNBannerSource.revokePresentable(withRequestIdentifier:reason:animated:userInfo:)(v5, v6, (uint64_t)v7, 1, 0, (uint64_t)v11, v4);

  swift_bridgeObjectRelease();
  v9 = v11[0];
  if (!v8)
  {
    v10 = v9;
    v8 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }

}

uint64_t TapToRadarBannerViewController.addMessagesBubbleRecipientsList(groupMessageUUID:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v4 = swift_bridgeObjectRetain();
  TapToRadarBannerViewController.addressList.setter(v4);
  swift_bridgeObjectRetain();
  return TapToRadarBannerViewController.groupUUIDString.setter(a1, a2);
}

Swift::Void __swiftcall TapToRadarBannerViewController.useFullLogArchive()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_fullLogArchive) = 1;
}

uint64_t TapToRadarBannerViewController.presentableWillAppear(asBanner:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))(1);
}

uint64_t TapToRadarBannerViewController.presentableWillDisappear(asBanner:withReason:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))(0);
}

Swift::Bool __swiftcall TapToRadarBannerViewController._canShowWhileLocked()()
{
  return 1;
}

void TapToRadarBannerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void TapToRadarBannerViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TapToRadarBannerViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TapToRadarBannerViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void TapToRadarBannerViewController.requestIdentifier.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void *TapToRadarBannerViewController.viewController.getter()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

uint64_t TapToRadarBannerViewController.requesterIdentifier.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;

  type metadata accessor for TapToRadarBannerViewController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  return outlined bridged method (ob) of @objc NSBundle.bundleIdentifier.getter(v1);
}

CGSize __swiftcall TapToRadarBannerViewController.preferredContentSize(withPresentationSize:containerSize:)(CGSize withPresentationSize, CGSize containerSize)
{
  uint64_t v2;
  double v3;
  double v4;
  CGSize result;

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillView), sel_systemLayoutSizeFittingSize_, withPresentationSize.width, withPresentationSize.height, containerSize.width, containerSize.height);
  result.height = v4;
  result.width = v3;
  return result;
}

id TapToRadarBannerViewController.bannerContentOutsets.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit30TapToRadarBannerViewController_pillView), sel_shadowOutsets);
}

uint64_t outlined bridged method (ob) of @objc NSBundle.bundleIdentifier.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_bundleIdentifier);

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (pb) of @objc TapToRadarBannerViewController.requesterIdentifier.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_requesterIdentifier);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void outlined bridged method (mbnn) of @objc NSURLComponents.scheme.setter(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6;

  v6 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);

}

void outlined bridged method (mbnn) of @objc NSURLComponents.queryItems.setter(uint64_t a1, void *a2)
{
  Class isa;

  type metadata accessor for URLQueryItem();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setQueryItems_, isa);

}

id outlined bridged method (mbgnnnnnn) of @objc BNBannerSource.revokePresentable(withRequestIdentifier:reason:animated:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v12;
  id v13;

  v12 = (void *)MEMORY[0x1C3B72E00]();
  v13 = objc_msgSend(a7, sel_revokePresentableWithRequestIdentifier_reason_animated_userInfo_error_, v12, a3, a4 & 1, a5, a6);

  return v13;
}

uint64_t sub_1BD59C538()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in TapToRadarBannerViewController.handleTap(_:)()
{
  uint64_t v0;

  closure #1 in TapToRadarBannerViewController.handleTap(_:)(*(_QWORD **)(v0 + 16));
}

void partial apply for closure #1 in TapToRadarBannerViewController.showBanner()()
{
  uint64_t v0;

  closure #1 in TapToRadarBannerViewController.showBanner()(*(void **)(v0 + 16));
}

void partial apply for closure #1 in TapToRadarBannerViewController.dismissBanner()()
{
  uint64_t v0;

  closure #1 in TapToRadarBannerViewController.dismissBanner()(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BD59C574@<X0>(uint64_t **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_9_106(**a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BD59C5B0(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x128))(*a1);
}

uint64_t method lookup function for TapToRadarBannerViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.isBannerPresent.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.isBannerPresent.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.isBannerPresent.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.handleTap(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.showBanner()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.dismissBanner()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.addMessagesBubbleRecipientsList(groupMessageUUID:with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.useFullLogArchive()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.presentableWillAppear(asBanner:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of TapToRadarBannerViewController.presentableWillDisappear(asBanner:withReason:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t SidebarStateStream.states.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<SidebarState, Never>>);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = *(_QWORD *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<SidebarState, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<SidebarState, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<SidebarState, Never>);
  lazy protocol witness table accessor for type SidebarState and conformance SidebarState();
  Publisher<>.removeDuplicates()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<SidebarState, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<SidebarState, Never>>);
  v5 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

unint64_t lazy protocol witness table accessor for type SidebarState and conformance SidebarState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SidebarState and conformance SidebarState;
  if (!lazy protocol witness table cache variable for type SidebarState and conformance SidebarState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SidebarState, &type metadata for SidebarState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SidebarState and conformance SidebarState);
  }
  return result;
}

void SidebarStateStream.__allocating_init(initial:)()
{
  OUTLINED_FUNCTION_15();
  SidebarStateStream.init(initial:)();
  OUTLINED_FUNCTION_0();
}

uint64_t SidebarStateStream.currentState.getter()
{
  unsigned __int8 v1;

  CurrentValueSubject.value.getter();
  return v1;
}

BOOL static SidebarState.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void SidebarButtonViewModel.__allocating_init(service:stream:isScreenLocked:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_15();
  SidebarButtonViewModel.init(service:stream:isScreenLocked:)(a1, a2, a3);
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall SidebarStateStream.update(_:)(ConversationKit::SidebarState a1)
{
  CurrentValueSubject.send(_:)();
}

uint64_t one-time initialization function for showDetailsSideBar()
{
  uint64_t result;

  result = MEMORY[0x1C3B72E00](0xD000000000000012, 0x80000001BD6983C0);
  static NSNotificationName.showDetailsSideBar = result;
  return result;
}

id static NSNotificationName.showDetailsSideBar.getter()
{
  if (one-time initialization token for showDetailsSideBar != -1)
    swift_once();
  return (id)static NSNotificationName.showDetailsSideBar;
}

void SidebarState.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

Swift::Int SidebarState.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SidebarState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static SidebarState.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance SidebarState()
{
  char *v0;

  return SidebarState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance SidebarState(uint64_t a1)
{
  char *v1;

  SidebarState.hash(into:)(a1, *v1);
}

uint64_t SidebarStateStream.init(initial:)()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<SidebarState, Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)(v0 + 16) = CurrentValueSubject.init(_:)();
  return v0;
}

uint64_t SidebarStateStream.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  return v0;
}

uint64_t SidebarStateStream.__deallocating_deinit()
{
  OUTLINED_FUNCTION_285();
  return swift_deallocClassInstance();
}

void SidebarButtonViewModel.init(service:stream:isScreenLocked:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;

  v7 = MEMORY[0x1E0DEE9D8];
  v3[9] = 0;
  v3[10] = v7;
  outlined init with copy of IDSLookupManager(a1, (uint64_t)(v3 + 3));
  v3[8] = a2;
  v3[2] = a3;
  swift_retain();
  swift_retain();
  SidebarButtonViewModel.observeState()();
  OUTLINED_FUNCTION_11_0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_18();
}

uint64_t SidebarButtonViewModel.observeState()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[3];
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (**v45)(_QWORD, _QWORD);
  _QWORD *v46;
  id v47;
  id v48;

  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>);
  v38 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v2);
  v39 = (uint64_t)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<SidebarState, Never>, NSRunLoop>);
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  MEMORY[0x1E0C80A78](v4);
  v35 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NSNotificationCenter.Publisher();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue>);
  v45 = *(void (***)(_QWORD, _QWORD))(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v0 + 10;
  swift_beginAccess();
  v34 = v0;
  v0[10] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v16 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (one-time initialization token for showDetailsSideBar != -1)
    swift_once();
  NSNotificationCenter.publisher(for:object:)();

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v48 = (id)static OS_dispatch_queue.main.getter();
  v17 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v17);
  lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
  _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_0(&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_allocObject();
  v18 = v34;
  swift_weakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  ((void (**)(char *, uint64_t))v45)[1](v15, v13);
  swift_beginAccess();
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  v33[2] = v19;
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  v48 = (id)SidebarStateStream.states.getter();
  v45 = (void (**)(_QWORD, _QWORD))objc_opt_self();
  v47 = objc_msgSend(v45, sel_mainRunLoop);
  v44 = type metadata accessor for NSRunLoop.SchedulerOptions();
  v20 = v39;
  __swift_storeEnumTagSinglePayload(v39, 1, 1, v44);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<SidebarState, Never>);
  v21 = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<SidebarState, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<SidebarState, Never>);
  _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_0(&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  v43 = v22;
  v23 = v35;
  v33[1] = v21;
  Publisher.receive<A>(on:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v20, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<SidebarState, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<SidebarState, Never>, NSRunLoop>);
  v24 = v37;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v24);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  v48 = (id)v18[2];
  swift_retain();
  v47 = objc_msgSend(v45, sel_mainRunLoop);
  __swift_storeEnumTagSinglePayload(v20, 1, 1, v44);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  v36 = v25;
  v26 = v40;
  Publisher.receive<A>(on:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v20, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>);
  v35 = v27;
  v28 = v41;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v29 = *(void (**)(char *, uint64_t))(v38 + 8);
  v29(v26, v28);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  v30 = v18[6];
  v31 = v18[7];
  __swift_project_boxed_opaque_existential_1(v18 + 3, v30);
  v48 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 88))(v30, v31);
  v47 = objc_msgSend(v45, sel_mainRunLoop);
  __swift_storeEnumTagSinglePayload(v20, 1, 1, v44);
  Publisher.receive<A>(on:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v20, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v29(v26, v28);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t SidebarButtonViewModel.controlType.getter()
{
  return SidebarButtonViewModel.config.getter();
}

uint64_t SidebarButtonViewModel.config.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t (*v29)(char *);
  uint64_t v30;
  uint64_t (*v31)(char *);
  uint64_t v32;
  uint64_t (*v33)@<X0>(uint64_t@<X8>);
  uint64_t v34;
  uint64_t (*v35)(_QWORD, _QWORD, _QWORD);
  uint64_t v36;
  uint64_t (*v37)(_QWORD, _QWORD, _QWORD);
  uint64_t v38;

  v1 = v0;
  v2 = type metadata accessor for Font.Leading();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[9])
  {
    v6 = v1[9];
  }
  else
  {
    v7 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v7 + 16) = 0x2E72616265646973;
    *(_QWORD *)(v7 + 24) = 0xEF676E696461656CLL;
    v8 = static Color.white.getter();
    static Font.subheadline.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDD6D8], v2);
    v9 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v23 = xmmword_1BD6456D0;
    v24 = 0x401C000000000000;
    v25 = v8;
    v26 = v9;
    v27 = _s15ConversationKit12SystemSymbolVAASbRszlE19catalystCallControl4name5color15backgroundColorACySbGSS_7SwiftUI0K0VSbcAKSbctFZSSSbcfU_TA_0;
    v28 = v7;
    v29 = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
    v30 = 0;
    v31 = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
    v32 = 0;
    v33 = closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
    v34 = 0;
    v35 = partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
    v36 = 0;
    v37 = partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
    v38 = 0;
    v10 = (void *)objc_opt_self();
    v11 = objc_msgSend(v10, sel_conversationKit);
    v12 = OUTLINED_FUNCTION_0_3(0xD000000000000018, 0x80000001BD6982F0);
    v14 = v13;

    v15 = v1[6];
    v16 = v1[7];
    __swift_project_boxed_opaque_existential_1(v1 + 3, v15);
    LOBYTE(v15) = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 80))(v15, v16);
    v17 = objc_msgSend(v10, sel_conversationKit);
    v18 = OUTLINED_FUNCTION_0_3(0xD000000000000011, 0x80000001BD698310);
    v20 = v19;

    v21 = SidebarStateStream.currentState.getter() != 0;
    OUTLINED_FUNCTION_15();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<Bool>);
    OUTLINED_FUNCTION_14_0();
    v6 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)((uint64_t)&v23, v12, v14, v15 & 1, v18, v20, 0xD000000000000013, 0x80000001BD6725F0, v21, 1);
    v1[9] = v6;
    swift_retain();
    OUTLINED_FUNCTION_11_0();
  }
  swift_retain();
  return v6;
}

uint64_t sub_1BD59D6BC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BD59D6E0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

BOOL SidebarButtonViewModel.enabled(for:)(uint64_t a1)
{
  return (BYTE4(a1) == 128 || (BYTE4(a1) & 0xE0) != 0x80) && (_DWORD)a1 != 3;
}

Swift::Void __swiftcall SidebarButtonViewModel.didTap()()
{
  uint64_t v0;
  char v1;

  ((void (*)(void))SidebarButtonViewModel.config.getter)();
  specialized StateHolder.state.getter();
  specialized StateHolder.state.setter();
  v0 = OUTLINED_FUNCTION_11_0();
  SidebarButtonViewModel.config.getter(v0);
  v1 = specialized StateHolder.state.getter();
  swift_release();
  SidebarStateStream.update(_:)((ConversationKit::SidebarState)(v1 & 1));
}

Swift::Void __swiftcall SidebarButtonViewModel.onDisappear()()
{
  SidebarStateStream.update(_:)(ConversationKit_SidebarState_hidden);
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for SidebarButtonViewModel.config : SidebarButtonViewModel()
{
  uint64_t v0;

  v0 = swift_retain();
  return SidebarButtonViewModel.config.setter(v0);
}

uint64_t SidebarButtonViewModel.config.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return swift_release();
}

uint64_t closure #1 in SidebarButtonViewModel.config.getter()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    SidebarButtonViewModel.didTap()();
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in SidebarButtonViewModel.config.getter()
{
  return closure #1 in SidebarButtonViewModel.config.getter();
}

uint64_t closure #1 in SidebarButtonViewModel.observeState()()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t result;

  if (one-time initialization token for conversationController != -1)
    swift_once();
  v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)&static Logger.conversationController);
  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1BD004000, v1, v2, "Received notification about showing details side bar.", v3, 2u);
    MEMORY[0x1C3B751B8](v3, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    SidebarButtonViewModel.config.getter();
    specialized StateHolder.state.setter();
    swift_release();
    swift_retain();
    SidebarStateStream.update(_:)(ConversationKit_SidebarState_visible);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #2 in SidebarButtonViewModel.observeState()(unsigned __int8 *a1)
{
  int v1;
  uint64_t result;
  int v3;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    SidebarButtonViewModel.config.getter();
    v3 = specialized StateHolder.state.getter() & 1;
    swift_release();
    if (v1 != v3)
    {
      SidebarButtonViewModel.config.getter();
      specialized StateHolder.state.setter();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t closure #3 in SidebarButtonViewModel.observeState()(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    SidebarButtonViewModel.config.getter();
    specialized IconButtonConfig.enabled.setter(v1 ^ 1);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #4 in SidebarButtonViewModel.observeState()()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    SidebarButtonViewModel.config.getter();
    specialized StateHolder.state.setter();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t SidebarButtonViewModel.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SidebarButtonViewModel.__deallocating_deinit()
{
  SidebarButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

BOOL protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance SidebarButtonViewModel(uint64_t a1)
{
  return SidebarButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL);
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance SidebarButtonViewModel()
{
  return SidebarButtonViewModel.controlType.getter();
}

void protocol witness for CallControlsButtonViewModel.onAppear() in conformance SidebarButtonViewModel()
{
  SidebarButtonViewModel.onAppear()();
}

void protocol witness for CallControlsButtonViewModel.onDisappear() in conformance SidebarButtonViewModel()
{
  SidebarButtonViewModel.onDisappear()();
}

void sub_1BD59DC24(uint64_t *a1@<X8>)
{
  *a1 = SidebarButtonViewModel.config.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for SidebarState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD59DC98 + 4 * byte_1BD666185[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD59DCCC + 4 * byte_1BD666180[v4]))();
}

uint64_t sub_1BD59DCCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD59DCD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD59DCDCLL);
  return result;
}

uint64_t sub_1BD59DCE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD59DCF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD59DCF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD59DCFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SidebarState()
{
  return &type metadata for SidebarState;
}

uint64_t type metadata accessor for SidebarStateStream()
{
  return objc_opt_self();
}

uint64_t method lookup function for SidebarStateStream()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SidebarStateStream.__allocating_init(initial:)(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 88))(a1 & 1);
}

uint64_t type metadata accessor for SidebarButtonViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for SidebarButtonViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SidebarButtonViewModel.__allocating_init(service:stream:isScreenLocked:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t partial apply for closure #1 in SidebarButtonViewModel.observeState()()
{
  return closure #1 in SidebarButtonViewModel.observeState()();
}

uint64_t partial apply for closure #2 in SidebarButtonViewModel.observeState()(unsigned __int8 *a1)
{
  return closure #2 in SidebarButtonViewModel.observeState()(a1);
}

uint64_t partial apply for closure #3 in SidebarButtonViewModel.observeState()(char *a1)
{
  return closure #3 in SidebarButtonViewModel.observeState()(a1);
}

uint64_t partial apply for closure #4 in SidebarButtonViewModel.observeState()()
{
  return closure #4 in SidebarButtonViewModel.observeState()();
}

uint64_t InCallControlsTitleCell.ButtonType.debugDescription.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD59DDE4 + 4 * byte_1BD6662B0[a1]))(0x6567617373656D2ELL, 0xEF6E6F7474754273);
}

unint64_t sub_1BD59DDE4()
{
  return 0xD000000000000010;
}

unint64_t sub_1BD59DE00()
{
  return 0xD000000000000013;
}

unint64_t InCallControlsTitleCell.ButtonType.init(rawValue:)(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

uint64_t InCallControlsTitleCell.ButtonType.rawValue.getter(uint64_t result)
{
  return result;
}

