uint64_t RecentsListViewController.presentScreenTimeShield.didset()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_BYTE *);
  uint64_t (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[32];

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
  v4 = (_QWORD *)((char *)v1 + OBJC_IVAR___FTRecentsListViewController_presentScreenTimeShield);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 104);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*v4);
  v7(v5, v6);
  swift_release();
  v9 = *v4;
  v8 = v4[1];
  v10 = *(uint64_t (**)(_BYTE *))((*v2 & *v1) + 0x1B0);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v9);
  v11 = (uint64_t (*)(_BYTE *, _QWORD))v10(v16);
  v13 = *(_QWORD *)(v12 + 24);
  v14 = *(_QWORD *)(v12 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 40))(v9, v8, v13, v14);
  return v11(v16, 0);
}

void RecentsListViewController.presentScreenTimeShield.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_21_6();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v0);
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_32();
}

uint64_t RecentsListViewController.presentScreenTimeShield.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_6_6();
  v3 = (_QWORD *)(v1 + OBJC_IVAR___FTRecentsListViewController_presentScreenTimeShield);
  OUTLINED_FUNCTION_2_0();
  *v3 = v2;
  v3[1] = v0;
  OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_173();
  RecentsListViewController.presentScreenTimeShield.didset();
  v4 = OUTLINED_FUNCTION_124_0();
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
}

void RecentsListViewController.presentScreenTimeShield.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void RecentsListViewController.presentScreenTimeShield.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    RecentsListViewController.presentScreenTimeShield.didset();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for RecentsListViewController.setPreventsApplicationTerminationWhenModal : RecentsListViewController@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x290))();
  v5 = v4;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v5;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String) -> ();
  a2[1] = result;
  return result;
}

uint64_t key path setter for RecentsListViewController.setPreventsApplicationTerminationWhenModal : RecentsListViewController(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD, uint64_t);

  v3 = *a1;
  v4 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *(uint64_t (**)(_QWORD, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x298);
  swift_retain();
  return v6(partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed String) -> (@out ()), v5);
}

void RecentsListViewController.setPreventsApplicationTerminationWhenModal.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_32();
}

void RecentsListViewController.setPreventsApplicationTerminationWhenModal.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_6_6();
  v3 = (_QWORD *)(v1 + OBJC_IVAR___FTRecentsListViewController_setPreventsApplicationTerminationWhenModal);
  OUTLINED_FUNCTION_2_0();
  *v3 = v2;
  v3[1] = v0;
  swift_release();
  OUTLINED_FUNCTION_9_0();
}

void RecentsListViewController.setPreventsApplicationTerminationWhenModal.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for RecentsListViewController.headerView : RecentsListViewController(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x2B0);
  v4 = *a1;
  return v3(v2);
}

void RecentsListViewController.headerView.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR___FTRecentsListViewController_headerView);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  OUTLINED_FUNCTION_32();
}

void RecentsListViewController.headerView.setter(void *a1)
{
  ConversationDetailsView.leadingAccessoryView.setter(a1, &OBJC_IVAR___FTRecentsListViewController_headerView);
}

void RecentsListViewController.headerView.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id RecentsListViewController.featureFlags.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR___FTRecentsListViewController_featureFlags);
}

_QWORD *RecentsListViewController.facetimeLinkTipPopoverReferenceItem.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  _QWORD *result;
  void *v4;
  CGFloat Width;
  CGRect v6;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A8);
  result = (_QWORD *)v2();
  v4 = result;
  if (result)
  {
    objc_msgSend(result, sel_bounds);
    OUTLINED_FUNCTION_89();

    v6.origin.x = OUTLINED_FUNCTION_66();
    Width = CGRectGetWidth(v6);
    result = (_QWORD *)v2();
    if (result)
    {
      (*(void (**)(void))((*v1 & *result) + 0xE8))();
      OUTLINED_FUNCTION_15_2();
      return *(_QWORD **)&Width;
    }
  }
  return result;
}

uint64_t closure #1 in RecentsListViewController.dataSource.getter(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *boxed_opaque_existential_1;
  void (*v7)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[5];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v25 = type metadata accessor for RecentsCollectionViewDataSource();
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v24 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x340))();
  (*(void (**)(_QWORD *__return_ptr))((*v2 & *a1) + 0x1A0))(v27);
  v3 = v28;
  v4 = v29;
  v5 = __swift_project_boxed_opaque_existential_1(v27, v28);
  v26[3] = v3;
  v26[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  v7 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v3 - 8) + 16);
  v7(boxed_opaque_existential_1, v5, v3);
  v23 = *(id *)((char *)a1 + OBJC_IVAR___FTRecentsListViewController_conversationManager);
  RecentsListViewController.linkController.getter();
  v9 = v8;
  RecentsListViewController.cellProvider.getter();
  v11 = v10;
  v13 = v12;
  RecentsListViewController.supplementaryViewProvider.getter();
  v15 = v14;
  v17 = v16;
  MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7((uint64_t *)v19, boxed_opaque_existential_1, v3);
  specialized RecentsCollectionViewDataSource.__allocating_init(collectionView:recentsController:conversationManager:linkController:cellProvider:supplementaryViewProvider:)(v24, (uint64_t)v19, (uint64_t)v23, v9, v11, v13, v15, v17, v25, v3, v4);
  v21 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v21;
}

uint64_t closure #1 in RecentsListViewController.cellProvider.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  char *v34;
  _QWORD v36[12];
  uint64_t v37;
  uint64_t v38;

  v38 = a3;
  v36[9] = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1E0C80A78](v6);
  v36[10] = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v11 = MEMORY[0x1E0C80A78](v10);
  v36[11] = (char *)v36 - v12;
  MEMORY[0x1E0C80A78](v11);
  v36[4] = (char *)v36 - v13;
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>);
  v36[8] = *(_QWORD *)(v37 - 8);
  v14 = MEMORY[0x1E0C80A78](v37);
  v36[5] = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v17 = MEMORY[0x1E0C80A78](v16);
  v36[6] = (char *)v36 - v18;
  MEMORY[0x1E0C80A78](v17);
  v36[3] = (char *)v36 - v19;
  v20 = type metadata accessor for RecentCallRecentItemMetadata(0);
  MEMORY[0x1E0C80A78](v20);
  v36[7] = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for RecentsCallItemType(0);
  v23 = MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v36 - v24;
  v26 = a4 + 16;
  swift_beginAccess();
  v27 = MEMORY[0x1C3B752C0](a4 + 16);
  if (v27)
  {
    v28 = (void *)v27;
    v36[2] = a2;
    v29 = RecentsListViewController.dataSource.getter();

    swift_beginAccess();
    v30 = MEMORY[0x1C3B752C0](v26);
    if (v30)
    {
      v31 = (void *)v30;
      v36[1] = v29;
      v32 = RecentsListViewController.dataSource.getter();

      v33 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v32 + 168))();
      swift_release();
      swift_beginAccess();
      if (MEMORY[0x1C3B752C0](v26))
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(v38, (uint64_t)v25, type metadata accessor for RecentsCallItemType);
        v34 = (char *)&loc_1BD1543A4 + 4 * word_1BD64BB30[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }

    }
    swift_release();
  }
  return 0;
}

void sub_1BD154724()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = (uint64_t)v2 + OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemOngoingCalls;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v5, v3, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
  v6 = *(_QWORD *)(v4 - 224);
  if (__swift_getEnumTagSinglePayload(v3, 1, v6) == 1)
  {
    v7 = v0;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationKit);
    v9 = Logger.logObject.getter();
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1BD004000, v9, v10, "cellRegistrationForRecentsCallItemOngoingCalls was unexpectedly nil", v11, 2u);
      MEMORY[0x1C3B751B8](v11, -1, -1);
    }
    swift_release();

    JUMPOUT(0x1BD154848);
  }
  *(_QWORD *)(v4 - 320) = v0;
  v12 = *(_QWORD *)(v4 - 256);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v1, v3, v6);
  v13 = *(_QWORD *)(v4 - 240);
  outlined init with copy of ConversationControlsAppLaunchButtonType(*(_QWORD *)(v4 - 216), v13, type metadata accessor for RecentsCallItem);
  v14 = type metadata accessor for RecentsCallItem(0);
  __swift_storeEnumTagSinglePayload(v13, 0, 1, v14);
  type metadata accessor for RecentsCollectionViewCell();
  UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v13, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v6);
  JUMPOUT(0x1BD154B88);
}

void sub_1BD154850()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v4 - 320) = v0;

  swift_bridgeObjectRelease();
  swift_release();
  v5 = v3 + OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemLinks;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v5, v2, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
  v6 = *(_QWORD *)(v4 - 224);
  if (__swift_getEnumTagSinglePayload(v2, 1, v6) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationKit);
    v8 = Logger.logObject.getter();
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      JUMPOUT(0x1BD154940);
    }
    JUMPOUT(0x1BD154964);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 256) + 32))(*(_QWORD *)(v4 - 280), v2, v6);
  v10 = *(_QWORD *)(v4 - 240);
  outlined init with copy of ConversationControlsAppLaunchButtonType(*(_QWORD *)(v4 - 216), v10, type metadata accessor for RecentsCallItem);
  v11 = type metadata accessor for RecentsCallItem(0);
  __swift_storeEnumTagSinglePayload(v10, 0, 1, v11);
  type metadata accessor for RecentsCollectionViewCell();
  UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v10, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  JUMPOUT(0x1BD154AD0);
}

uint64_t key path setter for RecentsListViewController.collectionView : RecentsListViewController(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x348))(*a1);
}

void __swiftcall RecentsListViewController.collectionViewLayout()(UICollectionViewLayout *__return_ptr retstr)
{
  id v1;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_298();
  v1 = objc_allocWithZone(MEMORY[0x1E0DC35D0]);
  @nonobjc UICollectionViewCompositionalLayout.init(sectionProvider:)();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD154D6C()
{
  swift_unknownObjectUnownedDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void RecentsListViewController.collectionView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR___FTRecentsListViewController____lazy_storage___collectionView);
}

void RecentsListViewController.collectionView.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  RecentsListViewController.collectionView.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void RecentsListViewController.collectionView.modify(void **a1, char a2)
{
  RecentsListViewController.collectionView.modify(a1, a2, (void (*)(void))RecentsListViewController.collectionView.setter);
}

uint64_t key path setter for RecentsListViewController.cellBackgroundConfiguration : RecentsListViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for UIBackgroundConfiguration();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x360))(v6);
}

void RecentsListViewController.cellBackgroundConfiguration.getter()
{
  RecentsListViewController.cellBackgroundConfiguration.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  uint64_t (*v5)(_QWORD);
  uint64_t (*v6)(_QWORD);
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_96();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(v9);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_138_0();
  v15 = v0 + *v8;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of FeatureEligibility?(v15, v2, v10);
  v16 = v6(0);
  OUTLINED_FUNCTION_69_0(v2, 1, v16);
  if (v17)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, v10);
    v4(v0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v1, v12, v16);
    OUTLINED_FUNCTION_80_0();
    __swift_storeEnumTagSinglePayload(v18, v19, v20, v16);
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of Participant?(v1, v15, v10);
    swift_endAccess();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v12, v2, v16);
  }
  OUTLINED_FUNCTION_65_1();
}

uint64_t closure #1 in RecentsListViewController.cellBackgroundConfiguration.getter(void *a1)
{
  id v2;
  id v3;
  id v5;
  id v6;

  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 872))() & 1) != 0)
    return static UIBackgroundConfiguration.clear()();
  v2 = objc_msgSend(a1, sel_traitCollection);
  v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  if (v3 == (id)5)
    return static UIBackgroundConfiguration.clear()();
  static UIBackgroundConfiguration.listGroupedCell()();
  v5 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 8);
  v6 = objc_msgSend((id)objc_opt_self(), sel_effectForBlurEffect_style_, v5, 6);

  return UIBackgroundConfiguration.visualEffect.setter();
}

void RecentsListViewController.cellBackgroundConfiguration.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_225_0();
  OUTLINED_FUNCTION_291((uint64_t)v4, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32));
  OUTLINED_FUNCTION_80_0();
  __swift_storeEnumTagSinglePayload(v6, v7, v8, v5);
  OUTLINED_FUNCTION_2_0();
  v9 = OUTLINED_FUNCTION_131();
  outlined assign with take of Participant?(v9, v10, &demangling cache variable for type metadata for UIBackgroundConfiguration?);
  swift_endAccess();
  OUTLINED_FUNCTION_91();
}

void RecentsListViewController.cellBackgroundConfiguration.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = OUTLINED_FUNCTION_225_0();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  RecentsListViewController.cellBackgroundConfiguration.getter();
  OUTLINED_FUNCTION_18();
}

void RecentsListViewController.cellBackgroundConfiguration.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[2];
    v6 = OUTLINED_FUNCTION_38_21();
    OUTLINED_FUNCTION_291(v6, v7, v8);
    RecentsListViewController.cellBackgroundConfiguration.setter((uint64_t)v3);
    OUTLINED_FUNCTION_52((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }
  else
  {
    RecentsListViewController.cellBackgroundConfiguration.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
  }
  free(v4);
  free(v3);
  free(v2);
}

id closure #1 in closure #1 in RecentsListViewController.collectionLayoutConfiguration.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    RecentsListViewController.getSwipeActions(at:)(a1);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UISwipeActionsConfiguration);
    v6 = @nonobjc UISwipeActionsConfiguration.__allocating_init(actions:)();

  }
  else
  {
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UISwipeActionsConfiguration);
    return @nonobjc UISwipeActionsConfiguration.__allocating_init(actions:)();
  }
  return v6;
}

id @nonobjc UISwipeActionsConfiguration.__allocating_init(actions:)()
{
  Class isa;
  id v1;

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIContextualAction);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_configurationWithActions_, isa);

  return v1;
}

uint64_t RecentsListViewController.getSwipeActions(at:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  id v15;
  uint64_t v16;
  void (*v17)(void);
  id v18;
  _BYTE v19[7];
  char v20;
  uint64_t v21;

  v3 = type metadata accessor for RecentsCallItemType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for RecentsCallItem(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  RecentsListViewController.dataSource.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v12 + 264))(a1);
  swift_release();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    return MEMORY[0x1E0DEE9D8];
  }
  outlined init with take of StagedCollaboration((uint64_t)v8, (uint64_t)v11, type metadata accessor for RecentsCallItem);
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v11, (uint64_t)v5, type metadata accessor for RecentsCallItemType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  outlined destroy of RecentsCallItem((uint64_t)v5, type metadata accessor for RecentsCallItemType);
  if (EnumCaseMultiPayload == 1)
  {
    outlined destroy of RecentsCallItem((uint64_t)v11, type metadata accessor for RecentsCallItem);
    return MEMORY[0x1E0DEE9D8];
  }
  v15 = RecentsListViewController.deleteAction(of:)((uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v16 + 32) = v15;
  v21 = v16;
  specialized Array._endMutation()();
  v17 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x248);
  v18 = v15;
  v17();
  ReportSpamManager.spamAction(for:)((uint64_t)v11, &v20);
  swift_release();
  if (v20 && v20 != 1)
  {
    outlined destroy of RecentsCallItem((uint64_t)v11, type metadata accessor for RecentsCallItem);

  }
  else
  {
    RecentsListViewController.reportAndBlockAction(of:)();
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    outlined destroy of RecentsCallItem((uint64_t)v11, type metadata accessor for RecentsCallItem);
  }
  return v21;
}

uint64_t key path setter for RecentsListViewController.avatarViewControllerDelegate : RecentsListViewController(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x468))(*a1);
}

void RecentsListViewController.avatarViewControllerDelegate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR___FTRecentsListViewController____lazy_storage___avatarViewControllerDelegate);
  if (!v1)
  {
    v2 = objc_allocWithZone((Class)type metadata accessor for AvatarViewControllerDelegateWrapper());
    OUTLINED_FUNCTION_64_7();
    v3 = AvatarViewControllerDelegateWrapper.init(hostingViewController:)();
    OUTLINED_FUNCTION_283(v3);
    OUTLINED_FUNCTION_37_0();
    v1 = 0;
  }
  v4 = v1;
  OUTLINED_FUNCTION_18();
}

void AvatarViewControllerDelegateWrapper.__allocating_init(hostingViewController:)()
{
  OUTLINED_FUNCTION_12_3();
  AvatarViewControllerDelegateWrapper.init(hostingViewController:)();
  OUTLINED_FUNCTION_0();
}

void RecentsListViewController.avatarViewControllerDelegate.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR___FTRecentsListViewController____lazy_storage___avatarViewControllerDelegate);
}

void RecentsListViewController.avatarViewControllerDelegate.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  RecentsListViewController.avatarViewControllerDelegate.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void RecentsListViewController.avatarViewControllerDelegate.modify(void **a1, char a2)
{
  RecentsListViewController.collectionView.modify(a1, a2, (void (*)(void))RecentsListViewController.avatarViewControllerDelegate.setter);
}

void RecentsListViewController.collectionView.modify(void **a1, char a2, void (*a3)(void))
{
  void *v4;
  id v5;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = v4;
    a3();
    OUTLINED_FUNCTION_7_1(v5);
  }
  else
  {
    ((void (*)(void *))a3)(v4);
    OUTLINED_FUNCTION_36();
  }
}

uint64_t RecentsListViewController.pseudonymForDeferredLinkDetailPresentation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR___FTRecentsListViewController_pseudonymForDeferredLinkDetailPresentation);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

id RecentsListViewController.viewDidFinishInitialLoad.getter()
{
  void *v0;
  id result;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;

  result = objc_msgSend(v0, sel_isViewLoaded);
  if ((_DWORD)result)
  {
    RecentsListViewController.dataSource.getter();
    v3 = (_QWORD *)OUTLINED_FUNCTION_79_8(v2);
    v4 = OUTLINED_FUNCTION_43();
    v5 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0xF0))(v4);

    return (id)(v5 & 1);
  }
  return result;
}

void RecentsListViewController.__allocating_init(recentCallProvider:detailControllerFactory:contactStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_12_3();
  v4 = OUTLINED_FUNCTION_315_0();
  RecentsListViewController.init(recentCallProvider:detailControllerFactory:contactStore:)(v4, v5, a3);
  OUTLINED_FUNCTION_18();
}

void RecentsListViewController.__allocating_init(coder:)(uint64_t a1)
{
  objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void RecentsListViewController.init(coder:)()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR___FTRecentsListViewController_macCatalystDelegate + 8] = 0;
  OUTLINED_FUNCTION_54();
  v2 = (uint64_t)&v0[OBJC_IVAR___FTRecentsListViewController_indexPathForMenu];
  OUTLINED_FUNCTION_28_29();
  OUTLINED_FUNCTION_8_2(v2);
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController____lazy_storage___callCreator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController_callItemBlockContactsDelegate] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController_videoMessagesSink] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController_linkCoordinator] = 0;
  v3 = OBJC_IVAR___FTRecentsListViewController_faceTimeReportSpamManager;
  type metadata accessor for ReportSpamManager();
  v18 = 1;
  ReportSpamManager.__allocating_init(idsServiceType:)(&v18);
  *(_QWORD *)&v1[v3] = v4;
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController____lazy_storage___videoMessagingReportSpamManager] = 0;
  v5 = &v1[OBJC_IVAR___FTRecentsListViewController_presentScreenTimeShield];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v1[OBJC_IVAR___FTRecentsListViewController_setPreventsApplicationTerminationWhenModal];
  *v6 = TPNumberPadCharacter.rawValue.getter;
  v6[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController_headerView] = 0;
  v1[OBJC_IVAR___FTRecentsListViewController_headerViewIsPresented] = 0;
  v7 = OBJC_IVAR___FTRecentsListViewController_featureFlags;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController____lazy_storage___linkController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController____lazy_storage___dataSource] = 0;
  v8 = &v1[OBJC_IVAR___FTRecentsListViewController____lazy_storage___supplementaryViewProvider];
  *v8 = 0;
  v8[1] = 0;
  v9 = &v1[OBJC_IVAR___FTRecentsListViewController____lazy_storage___cellProvider];
  *v9 = 0;
  v9[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController____lazy_storage___collectionView] = 0;
  v10 = OUTLINED_FUNCTION_225_0();
  OUTLINED_FUNCTION_12_7(v10);
  v11 = (uint64_t)&v1[OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemCalls];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<RecentsCollectionViewCell, RecentsCallItem>);
  OUTLINED_FUNCTION_51_1(v11);
  OUTLINED_FUNCTION_51_1((uint64_t)&v1[OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsSensitveCallItemCalls]);
  OUTLINED_FUNCTION_51_1((uint64_t)&v1[OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemOngoingCalls]);
  OUTLINED_FUNCTION_51_1((uint64_t)&v1[OBJC_IVAR___FTRecentsListViewController_cellRegistrationForRecentsCallItemLinks]);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<UICollectionViewListCell>);
  OUTLINED_FUNCTION_12_7(v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<RecentsHeaderButtonsView>);
  OUTLINED_FUNCTION_12_7(v13);
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController____lazy_storage___deleteButtonItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController____lazy_storage___flexibleSpaceButtonItem] = 0;
  v14 = type metadata accessor for UICollectionLayoutListConfiguration();
  OUTLINED_FUNCTION_12_7(v14);
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController____lazy_storage___editMenu] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___FTRecentsListViewController____lazy_storage___avatarViewControllerDelegate] = 0;
  v15 = &v1[OBJC_IVAR___FTRecentsListViewController_pseudonymForDeferredLinkDetailPresentation];
  *v15 = 0;
  v15[1] = 0;
  v16 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_12_7(v16);
  v17 = OBJC_IVAR___FTRecentsListViewController_onboardingController;
  *(_QWORD *)&v1[v17] = objc_msgSend(objc_allocWithZone((Class)CNKCNSharedProfileOnboardingController), sel_init);
  OUTLINED_FUNCTION_8_2((uint64_t)&v1[OBJC_IVAR___FTRecentsListViewController_joinCallThrottlingIndexPath]);

  OUTLINED_FUNCTION_254();
  __break(1u);
}

Swift::Void __swiftcall RecentsListViewController.configureCollectionView()()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t (*v4)(void);
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  Class isa;

  OUTLINED_FUNCTION_42_2();
  v2 = OUTLINED_FUNCTION_25_1(v1, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  v4 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x340);
  v5 = (void *)v4();
  objc_msgSend(v3, sel_addSubview_, v5);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v6 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v6 + 16) = xmmword_1BD644140;
  v7 = objc_msgSend((id)v4(), sel_topAnchor);
  OUTLINED_FUNCTION_14_6();
  v9 = OUTLINED_FUNCTION_25_1(v8, sel_view);
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_topAnchor);
  OUTLINED_FUNCTION_18_11();
  v12 = OUTLINED_FUNCTION_231_1();
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v6 + 32) = v10;
  v13 = objc_msgSend((id)v4(), sel_bottomAnchor);
  OUTLINED_FUNCTION_14_6();
  v15 = OUTLINED_FUNCTION_25_1(v14, sel_view);
  if (!v15)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, sel_bottomAnchor);
  OUTLINED_FUNCTION_18_11();
  v18 = OUTLINED_FUNCTION_231_1();
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v6 + 40) = v16;
  v19 = objc_msgSend((id)v4(), sel_leadingAnchor);
  OUTLINED_FUNCTION_14_6();
  v21 = OUTLINED_FUNCTION_25_1(v20, sel_view);
  if (!v21)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v22 = objc_msgSend(v21, sel_safeAreaLayoutGuide);
  OUTLINED_FUNCTION_18_11();
  v24 = OUTLINED_FUNCTION_2_11(v23, sel_leadingAnchor);

  v25 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v24);
  *(_QWORD *)(v6 + 48) = v25;
  v26 = objc_msgSend((id)v4(), sel_trailingAnchor);
  OUTLINED_FUNCTION_19_5();
  v28 = OUTLINED_FUNCTION_25_1(v27, sel_view);
  if (v28)
  {
    v29 = v28;
    v30 = (void *)objc_opt_self();
    v31 = OUTLINED_FUNCTION_25_1((uint64_t)v30, sel_safeAreaLayoutGuide);

    v33 = OUTLINED_FUNCTION_6_7(v32, sel_trailingAnchor);
    v34 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v33);

    *(_QWORD *)(v6 + 56) = v34;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_13_3();
    objc_msgSend(v30, sel_activateConstraints_, isa);
    OUTLINED_FUNCTION_78_1(isa);
    return;
  }
LABEL_11:
  __break(1u);
}

Swift::Void __swiftcall RecentsListViewController.configureNavigationToolbar()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = v1;
  v3 = OUTLINED_FUNCTION_25_1(v0, sel_navigationController);
  if (v3 && (v4 = v3, v9 = objc_msgSend(v3, sel_toolbar), v4, v9))
  {
    objc_msgSend(v9, sel_setBarStyle_, 1);
    OUTLINED_FUNCTION_40_3(v9, sel_setTranslucent_);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v5 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v5 + 16) = xmmword_1BD644B60;
    RecentsListViewController.flexibleSpaceButtonItem.getter();
    *(_QWORD *)(v5 + 32) = v6;
    RecentsListViewController.deleteButtonItem.getter();
    *(_QWORD *)(v5 + 40) = v7;
    RecentsListViewController.flexibleSpaceButtonItem.getter();
    *(_QWORD *)(v5 + 48) = v8;
    specialized Array._endMutation()();
    outlined bridged method (mbnn) of @objc UIViewController.toolbarItems.setter(v5, v2);
    OUTLINED_FUNCTION_15_9(v9);
  }
  else
  {
    OUTLINED_FUNCTION_43_1();
  }
}

Swift::Void __swiftcall RecentsListViewController.setupTitle()()
{
  objc_class *v0;
  unint64_t v1;
  NSBundle v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  SEL *v9;

  v0 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_16_15();
  v1 = OUTLINED_FUNCTION_5_26(35);
  v2.super.isa = v0;
  OUTLINED_FUNCTION_49_2(v1, v3, v4, v5, v2);
  OUTLINED_FUNCTION_342();
  OUTLINED_FUNCTION_296();
  outlined bridged method (mbnn) of @objc UIViewController.title.setter(v6, v7, v8, v9);
  OUTLINED_FUNCTION_43_1();
}

Swift::Void __swiftcall RecentsListViewController.updateLeftBarButton()()
{
  uint64_t v0;
  void *v1;
  void *isa;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;

  v11 = OUTLINED_FUNCTION_25_1(v0, sel_navigationItem);
  if (objc_msgSend(v1, sel_isEditing))
    isa = RecentsListViewController.doneEditingBarButtonItem.getter();
  else
    isa = RecentsListViewController.editBarButtonItem.getter().super.super.isa;
  v9 = isa;
  OUTLINED_FUNCTION_269_0((int)isa, sel_setLeftBarButtonItem_, v3, v4, v5, v6, v7, v8, v10, v11);

  OUTLINED_FUNCTION_7_1(v12);
}

Swift::Void __swiftcall RecentsListViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  objc_super v7;
  _QWORD v8[4];

  RecentsListViewController.dataSource.getter();
  OUTLINED_FUNCTION_120();
  (*(void (**)(void))(v3 + 304))();
  v4 = OUTLINED_FUNCTION_43();
  (*(void (**)(_QWORD *__return_ptr, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x1A0))(v8, v4);
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  v5 = OUTLINED_FUNCTION_318();
  v6(v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for RecentsListViewController(0);
  objc_msgSendSuper2(&v7, sel_viewWillDisappear_, a1);
  RecentsListViewController.tipKitStartObservation()();
}

void RecentsListViewController.subscribeToNotifications()()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  OUTLINED_FUNCTION_113_3(v1, v2, v3, (uint64_t)sel_didEnterBackgroundNotification_, *MEMORY[0x1E0DC4768]);

  v5 = OUTLINED_FUNCTION_123(v4, sel_defaultCenter);
  OUTLINED_FUNCTION_113_3(v5, v6, v7, (uint64_t)sel_willEnterForegroundNotification_, *MEMORY[0x1E0DC4860]);

  v9 = OUTLINED_FUNCTION_123(v8, sel_defaultCenter);
  v10 = (void *)MEMORY[0x1C3B72E00](0xD000000000000018, 0x80000001BD677010);
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v0, sel_deleteAllRecents_, v10, 0);

  v14 = OUTLINED_FUNCTION_123(v11, sel_defaultCenter);
  OUTLINED_FUNCTION_113_3(v14, v12, v13, (uint64_t)sel_contactStoreDidChange_, *MEMORY[0x1E0C96870]);
  OUTLINED_FUNCTION_4_21(v14);
}

void RecentsListViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v6;

  v4 = v3;
  if (a2)
  {
    v6 = MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);
  OUTLINED_FUNCTION_14_18();

  OUTLINED_FUNCTION_18();
}

void RecentsListViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RecentsListViewController.__deallocating_deinit(uint64_t a1)
{
  return OUTLINED_FUNCTION_177(a1, (uint64_t (*)(void))type metadata accessor for RecentsListViewController);
}

void RecentItemContactsViewControllerDelegate.callItemToBlock.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v1 + OBJC_IVAR____TtC15ConversationKit40RecentItemContactsViewControllerDelegate_callItemToBlock, a1, type metadata accessor for RecentsCallItem);
}

void RecentItemContactsViewControllerDelegate.__allocating_init(_:faceTimeReportSpamManager:)()
{
  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_124_0();
  RecentItemContactsViewControllerDelegate.init(_:faceTimeReportSpamManager:)();
  OUTLINED_FUNCTION_18();
}

void RecentItemContactsViewControllerDelegate.init(_:faceTimeReportSpamManager:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_super v4;

  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_259(v3, (uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit40RecentItemContactsViewControllerDelegate_callItemToBlock]);
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit40RecentItemContactsViewControllerDelegate_faceTimeReportSpamManager] = v0;
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for RecentItemContactsViewControllerDelegate(0);
  objc_msgSendSuper2(&v4, sel_init);
  OUTLINED_FUNCTION_295_0(v2);
  OUTLINED_FUNCTION_45_0();
}

Swift::Void __swiftcall RecentItemContactsViewControllerDelegate.contactViewController(_:didExecuteBlockAndReportContactAction:)(CNContactViewController_optional *_, CNContact_optional didExecuteBlockAndReportContactAction)
{
  specialized ReportSpamManager.reportFaceTimeCallSpam<A>(call:)();
  OUTLINED_FUNCTION_0();
}

void specialized ReportSpamManager.reportFaceTimeCallSpam<A>(call:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  id v25;
  NSDictionary v26;
  unsigned int v27;
  os_log_type_t v28;
  BOOL v29;
  uint8_t *v30;
  os_log_type_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t __dst[22];
  uint64_t __src[23];

  v1 = v0;
  v2 = ReportSpamManager.fetchLocalFaceTimeHandles()();
  specialized Collection.first.getter(v2);
  if (!v4)
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)static ReportSpamManager.logger);
    swift_bridgeObjectRetain();
    v17 = Logger.logObject.getter();
    v18 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v17, v18))
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    __src[0] = v20;
    *(_DWORD *)v19 = 136315138;
    swift_bridgeObjectRetain();
    v21 = Set.description.getter();
    v23 = v22;
    swift_bridgeObjectRelease();
    __dst[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, __src);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v17, v18, "Could not report video message spam for call due to zero registered facetime service IMAccount %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v20, -1, -1);
    v24 = v19;
    goto LABEL_24;
  }
  v5 = v3;
  v6 = v4;
  swift_bridgeObjectRelease();
  RecentsCallItem.spamModel(with:)(v5, v6, (uint64_t)__src);
  swift_bridgeObjectRelease();
  memcpy(__dst, __src, sizeof(__dst));
  v7 = ReportSpamManager.SpamDataModel.mapToDict.getter();
  outlined release of ReportSpamManager.SpamDataModel((uint64_t)__src);
  if (one-time initialization token for logger != -1)
    swift_once();
  v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static ReportSpamManager.logger);
  swift_bridgeObjectRetain_n();
  v9 = Logger.logObject.getter();
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    __dst[0] = v12;
    *(_DWORD *)v11 = 136315138;
    if (v7)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyHashable : Any]);
      v13 = String.init<A>(reflecting:)();
      v15 = v14;
    }
    else
    {
      v15 = 0xE300000000000000;
      v13 = 7104878;
    }
    v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, __dst);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v9, v10, "ReportSpamManager: report spam, model.dictionary: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v12, -1, -1);
    MEMORY[0x1C3B751B8](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v25 = *(id *)(v1 + 16);
  if (v7)
  {
    v26.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v26.super.isa = 0;
  }
  v27 = objc_msgSend(v25, sel_reportSpamMessage_, v26.super.isa, v33, __dst[0]);

  v17 = Logger.logObject.getter();
  v28 = static os_log_type_t.default.getter();
  v29 = os_log_type_enabled(v17, v28);
  if (v27)
  {
    if (v29)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      v31 = v28;
      v32 = "ReportSpamManager: report spam was sent successfully";
LABEL_23:
      _os_log_impl(&dword_1BD004000, v17, v31, v32, v30, 2u);
      v24 = v30;
LABEL_24:
      MEMORY[0x1C3B751B8](v24, -1, -1);
    }
  }
  else if (v29)
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v30 = 0;
    v31 = v28;
    v32 = "ReportSpamManager: report spam was rejected for some reason";
    goto LABEL_23;
  }

}

void RecentItemContactsViewControllerDelegate.init()()
{
  OUTLINED_FUNCTION_300();
  __break(1u);
}

id RecentItemContactsViewControllerDelegate.__deallocating_deinit(uint64_t a1)
{
  return OUTLINED_FUNCTION_177(a1, (uint64_t (*)(void))type metadata accessor for RecentItemContactsViewControllerDelegate);
}

void closure #1 in closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(a1, a3, 0);

  }
}

void RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  void *v25;
  unsigned int v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, void (*)(), uint64_t);
  uint64_t v34;
  id v35;
  _QWORD *v36;
  id v37;
  Swift::String v38;
  Swift::String_optional v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_BYTE *);
  void (*v59)(_BYTE *, _QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_BYTE *, _QWORD);
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, _QWORD);
  void (**v68)();
  uint64_t v69;
  uint64_t (*v70)(_BYTE *);
  void (*v71)(_BYTE *, _QWORD);
  uint64_t (**v72)();
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void (*v76)(_BYTE *, _QWORD);
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_BYTE *, _QWORD);
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  id v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  _BYTE v96[32];
  Swift::String v97;

  v92 = a1;
  v5 = type metadata accessor for RecentsCallItem(0);
  v91 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v90 = v6;
  v93 = (uint64_t)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for RecentsCallItemType(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RecentCallRecentItemMetadata(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = a2;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v15, type metadata accessor for RecentsCallItemType);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    v23 = type metadata accessor for RecentsCallItemType;
    v24 = (uint64_t)v15;
LABEL_37:
    outlined destroy of RecentsCallItem(v24, v23);
    return;
  }
  outlined init with take of StagedCollaboration((uint64_t)v15, (uint64_t)v18, type metadata accessor for RecentCallRecentItemMetadata);
  v19 = *(int *)(v16 + 52);
  v20 = *(void **)&v18[v19];
  if (!v20)
  {
LABEL_36:
    v23 = type metadata accessor for RecentCallRecentItemMetadata;
    v24 = (uint64_t)v18;
    goto LABEL_37;
  }
  if ((a3 & 1) != 0)
  {
    v21 = v20;
    v22 = v94;
  }
  else
  {
    v25 = (void *)objc_opt_self();
    v89 = v20;
    v26 = objc_msgSend(v25, sel_isCommunicationSafetyEnabled);
    v22 = v94;
    if (v26)
    {
      if (one-time initialization token for shared != -1)
        swift_once();
      if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 872))() & 1) != 0
        && objc_msgSend(v89, sel_isSensitive))
      {
        v27 = objc_msgSend(v89, sel_messageUUID);
        if (v27)
        {
          v28 = v27;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          v29 = 0;
        }
        else
        {
          v29 = 1;
        }
        v85 = v95;
        v86 = type metadata accessor for UUID();
        __swift_storeEnumTagSinglePayload((uint64_t)v12, v29, 1, v86);
        v87 = (uint64_t)v85 + OBJC_IVAR___FTRecentsListViewController_messageUUIDForDeferredPresentation;
        swift_beginAccess();
        outlined assign with take of Participant?((uint64_t)v12, v87, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        swift_endAccess();
        RecentsListViewController.showSafetyIntervention()();

        goto LABEL_36;
      }
    }
  }
  v88 = v18;
  v89 = v20;
  RecentsListViewController.dataSource.getter();
  v31 = (*(uint64_t (**)(void))(*(_QWORD *)v30 + 192))();
  swift_release();
  if (v31)
  {
    v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v33 = *(void (**)(uint64_t, void (*)(), uint64_t))(*(_QWORD *)v31 + 168);
    swift_retain();
    v33(v22, partial apply for closure #1 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:), v32);
    swift_release_n();
    swift_release();
  }
  v34 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v9, v92, v34);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v34);
  v96[0] = 1;
  v35 = objc_allocWithZone((Class)type metadata accessor for VideoMessagePlayerViewModel(0));
  v36 = VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)();
  v37 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v97._object = (void *)0xE000000000000000;
  v38._object = (void *)0x80000001BD676E40;
  v38._countAndFlagsBits = 0xD000000000000018;
  v39.value._countAndFlagsBits = 0x61737265766E6F43;
  v39.value._object = (void *)0xEF74694B6E6F6974;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v97._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v39, (NSBundle)v37, v40, v97);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1BD6441D0;
  v42 = (uint64_t *)(v22 + *(int *)(v5 + 20));
  v44 = *v42;
  v43 = v42[1];
  *(_QWORD *)(v41 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v41 + 64) = lazy protocol witness table accessor for type String and conformance String();
  if (v43)
    v45 = v44;
  else
    v45 = 0;
  if (v43)
    v46 = v43;
  else
    v46 = 0xE000000000000000;
  *(_QWORD *)(v41 + 32) = v45;
  *(_QWORD *)(v41 + 40) = v46;
  swift_bridgeObjectRetain();
  v47 = String.init(format:_:)();
  v49 = v48;
  swift_bridgeObjectRelease();
  v50 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v36) + 0x188))(v47, v49);
  if ((a3 & 1) != 0)
  {
    v51 = objc_msgSend((id)objc_opt_self(), sel_isCommunicationSafetyEnabled);
    v52 = v89;
    v53 = v91;
    if ((_DWORD)v51)
    {
      (*(void (**)(uint64_t))((*v50 & *v36) + 0x2A8))(1);
      v51 = 0;
    }
  }
  else
  {
    v52 = v89;
    v51 = *(id *)&v88[v19];
    if (v51)
      v51 = objc_msgSend(v51, sel_isSensitive);
    v53 = v91;
  }
  (*(void (**)(id))((*v50 & *v36) + 0x278))(v51);
  if (objc_msgSend(v52, sel_isSensitive))
  {
    if (objc_msgSend((id)objc_opt_self(), sel_isCommunicationSafetyEnabled))
      (*(void (**)(_QWORD))((*v50 & *v36) + 0x218))(0);
  }
  v54 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v55 = v93;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v94, v93, type metadata accessor for RecentsCallItem);
  v56 = *(unsigned __int8 *)(v53 + 80);
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v54;
  outlined init with take of StagedCollaboration(v55, v57 + ((v56 + 24) & ~v56), type metadata accessor for RecentsCallItem);
  v58 = *(uint64_t (**)(_BYTE *))((*v50 & *v36) + 0x1C0);
  swift_retain();
  v59 = (void (*)(_BYTE *, _QWORD))v58(v96);
  *(_QWORD *)(v60 + 80) = partial apply for closure #2 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:);
  *(_QWORD *)(v60 + 88) = v57;
  swift_release();
  v59(v96, 0);
  swift_release();
  v61 = v94;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v94, v55, type metadata accessor for RecentsCallItem);
  v62 = (v56 + 16) & ~v56;
  v63 = swift_allocObject();
  outlined init with take of StagedCollaboration(v55, v63 + v62, type metadata accessor for RecentsCallItem);
  v64 = (void (*)(_BYTE *, _QWORD))v58(v96);
  *(_QWORD *)(v65 + 96) = partial apply for closure #3 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:);
  *(_QWORD *)(v65 + 104) = v63;
  swift_release();
  v64(v96, 0);
  v66 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v67 = (void (*)(_BYTE *, _QWORD))v58(v96);
  *v68 = partial apply for closure #4 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:);
  v68[1] = (void (*)())v66;
  swift_release();
  v67(v96, 0);
  swift_release();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v61, v55, type metadata accessor for RecentsCallItem);
  v69 = swift_allocObject();
  outlined init with take of StagedCollaboration(v55, v69 + v62, type metadata accessor for RecentsCallItem);
  v70 = *(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v36) + 0x1F0);
  v71 = (void (*)(_BYTE *, _QWORD))v70(v96);
  *v72 = partial apply for closure #5 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:);
  v72[1] = (uint64_t (*)())v69;
  swift_release();
  v71(v96, 0);
  v73 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v74 = v70(v96);
  v75 = v95;
  v76 = (void (*)(_BYTE *, _QWORD))v74;
  *(_QWORD *)(v77 + 16) = partial apply for closure #6 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:);
  *(_QWORD *)(v77 + 24) = v73;
  swift_release();
  v76(v96, 0);
  swift_release();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakDestroy();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v61, v55, type metadata accessor for RecentsCallItem);
  v78 = swift_allocObject();
  outlined init with take of StagedCollaboration(v55, v78 + v62, type metadata accessor for RecentsCallItem);
  v79 = (void (*)(_BYTE *, _QWORD))v58(v96);
  *(_QWORD *)(v80 + 48) = partial apply for closure #8 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:);
  *(_QWORD *)(v80 + 56) = v78;
  swift_release();
  v79(v96, 0);
  objc_allocWithZone((Class)type metadata accessor for VideoMessagePlayerViewController());
  v81 = v36;
  v82 = VideoMessagePlayerViewController.init(viewModel:)(v81);
  if (static Platform.current.getter() == 1)
  {
    objc_msgSend(v82, sel_setModalPresentationStyle_, 0);
    objc_msgSend(v75, sel_presentViewController_animated_completion_, v82, 1, 0);

    v23 = type metadata accessor for RecentCallRecentItemMetadata;
    v24 = (uint64_t)v88;
    goto LABEL_37;
  }
  v83 = objc_msgSend(v75, sel_navigationController);
  v18 = v88;
  if (v83)
  {
    v84 = v83;
    objc_msgSend(v83, sel_pushViewController_animated_, v82, 1);

    goto LABEL_36;
  }
  outlined destroy of RecentsCallItem((uint64_t)v88, type metadata accessor for RecentCallRecentItemMetadata);

}

void closure #2 in closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    RecentsListViewController.presentVoicemail(url:and:)(a1, a3);

  }
}

void RecentsListViewController.presentVoicemail(url:and:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int EnumCaseMultiPayload;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void *v29;
  Class isa;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  char *v36;
  NSURL *v37;
  void *v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v3);
  v42 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for URL();
  v41 = *(_QWORD *)(v43 - 8);
  v5 = MEMORY[0x1E0C80A78](v43);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v40 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v40 - v13;
  v15 = type metadata accessor for UUID();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for RecentsCallItemType(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v21, type metadata accessor for RecentsCallItemType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  outlined destroy of RecentsCallItem((uint64_t)v21, type metadata accessor for RecentsCallItemType);
  if (EnumCaseMultiPayload == 4)
  {
    v23 = RecentsCallItem.messageIndicatorViewModel.getter();
    if (v23)
    {
      v24 = v23;
      v25 = objc_msgSend(v23, sel_messageUUID);

      if (v25)
      {
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v26 = 0;
      }
      else
      {
        v26 = 1;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v12, v26, 1, v15);
      outlined init with take of Any?((uint64_t)v12, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
        v29 = (void *)objc_opt_self();
        isa = UUID._bridgeToObjectiveC()().super.isa;
        v31 = objc_msgSend(v29, sel_phoneAppVoicemailURLForMessageUUID_, isa);

        if (v31)
        {
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          v33 = v41;
          v32 = v42;
          v34 = *(void (**)(uint64_t, char *, uint64_t))(v41 + 32);
          v35 = v43;
          v34(v42, v7, v43);
          __swift_storeEnumTagSinglePayload(v32, 0, 1, v35);
          if (__swift_getEnumTagSinglePayload(v32, 1, v35) != 1)
          {
            v36 = v40;
            v34((uint64_t)v40, (char *)v32, v35);
            URL._bridgeToObjectiveC()(v37);
            v39 = v38;
            v44 = 0;
            TUOpenURLWithError();

            (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v35);
            (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
            return;
          }
        }
        else
        {
          v32 = v42;
          __swift_storeEnumTagSinglePayload(v42, 1, 1, v43);
        }
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        v27 = &demangling cache variable for type metadata for URL?;
        v28 = v32;
        goto LABEL_14;
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v15);
    }
    v27 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
    v28 = (uint64_t)v14;
LABEL_14:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v28, v27);
  }
}

Swift::Void __swiftcall RecentsListViewController.prepareSubviewsForFilter(view:)(UIView *view)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t i;
  UIView *v4;
  UIView *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;

  OUTLINED_FUNCTION_59((uint64_t)-[UIView subviews](view, sel_subviews), (unint64_t *)&lazy cache variable for type metadata for UIView);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_14_6();
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_9:
    v6 = OUTLINED_FUNCTION_2_1();
    v7 = OUTLINED_FUNCTION_123(v6, sel_layer);
    OUTLINED_FUNCTION_18_4(v7, sel_setAllowsGroupBlending_);

    v9 = OUTLINED_FUNCTION_123(v8, sel_layer);
    OUTLINED_FUNCTION_18_4(v9, sel_setAllowsGroupOpacity_);
    OUTLINED_FUNCTION_4_21(v9);
    return;
  }
  OUTLINED_FUNCTION_8_8();
  v2 = OUTLINED_FUNCTION_175();
  OUTLINED_FUNCTION_2_1();
  if (!v2)
    goto LABEL_9;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v4 = (UIView *)MEMORY[0x1C3B73D18](i);
      else
        v4 = (UIView *)OUTLINED_FUNCTION_5_6(v1 + 8 * i);
      v5 = v4;
      RecentsListViewController.prepareSubviewsForFilter(view:)(v4);

    }
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t RecentsListViewController.createCellRegistrationForRecentsCallItemOngoingCalls()()
{
  return RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()();
}

void closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemOngoingCalls()(UIView *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  UIView *v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void (*v33)(id);
  id v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(id, uint64_t, uint64_t);
  uint64_t v41;
  Class isa;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  UIView *v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;

  v48 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RecentsCallItemType(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v19 = MEMORY[0x1C3B752C0](a4 + 16);
  if (v19)
  {
    v20 = (_QWORD *)v19;
    outlined init with copy of ConversationControlsAppLaunchButtonType(a3, (uint64_t)v18, type metadata accessor for RecentsCallItemType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined destroy of RecentsCallItem((uint64_t)v18, type metadata accessor for RecentsCallItemType);
      RecentsCallItemType.conversationUUID()();
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
      {

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
        v21 = *(id *)((char *)v20 + OBJC_IVAR___FTRecentsListViewController_conversationManager);
        v22 = (void *)TUConversationManager.conversation(with:)((uint64_t)v15);

        v47 = v22;
        if (v22)
        {
          v23 = (_QWORD *)MEMORY[0x1E0DEEDD8];
          (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v20) + 0x358))();
          v24 = type metadata accessor for UIBackgroundConfiguration();
          __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v24);
          v25 = v48;
          v26 = MEMORY[0x1C3B7370C](v8);
          v27 = *(uint64_t (**)(void))((*v23 & (uint64_t)v25->super.super.isa) + 0x80);
          v28 = (void *)((uint64_t (*)(uint64_t))v27)(v26);

          if (!v28)
          {
            v29 = *(void **)((char *)v20 + OBJC_IVAR___FTRecentsListViewController_avatarViewControllerSettings);
            if (v29)
            {
              v30 = objc_allocWithZone(MEMORY[0x1E0C97470]);
              v46 = v29;
              v31 = objc_msgSend(v30, sel_initWithSettings_, v46);
              v32 = (void *)(*(uint64_t (**)(void))((*v23 & *v20) + 0x460))();
              objc_msgSend(v31, sel_setObjectViewControllerDelegate_, v32);

              v33 = *(void (**)(id))((*v23 & (uint64_t)v25->super.super.isa) + 0x88);
              v34 = v31;
              v33(v31);
              v25 = v48;

            }
          }
          v35 = v27();
          v36 = (_QWORD *)MEMORY[0x1E0DEEDD8];
          if (v35)
          {
            v37 = (void *)v35;
            (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v20) + 0x1A0))(v49);
            v38 = v50;
            v39 = v51;
            __swift_project_boxed_opaque_existential_1(v49, v50);
            v40 = *(void (**)(id, uint64_t, uint64_t))(v39 + 56);
            v41 = v39;
            v25 = v48;
            v40(v47, v38, v41);
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
            isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
            objc_msgSend(v37, sel_setContacts_, isa);

          }
          RecentsCollectionViewCell.configure(with:)(a3);
          v43 = (void *)(*(uint64_t (**)(void))((*v36 & (uint64_t)v25->super.super.isa) + 0x98))();
          if (v43)
          {
            v44 = v43;
            objc_msgSend(v43, sel_addTarget_action_forControlEvents_, v20, sel_didSelectAccessoryViewForOngoingCallWithSender_, 64);

          }
          v45 = (void *)(*(uint64_t (**)(void))((*v36 & (uint64_t)v25->super.super.isa) + 0xB0))();
          objc_msgSend(v45, sel_addTarget_action_forControlEvents_, v20, sel_didSelectAccessoryViewForRecentCallWithSender_, 64);

          RecentsListViewController.prepareSubviewsForFilter(view:)(v25);
          (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

        }
      }
    }
    else
    {

      outlined destroy of RecentsCallItem((uint64_t)v18, type metadata accessor for RecentsCallItemType);
    }
  }
}

uint64_t RecentsListViewController.createCellRegistrationForRecentsCallItemLinks()()
{
  return RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()();
}

void closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemLinks()(UIView *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  unsigned int v15;
  void *v16;
  void *v17;
  char **v18;
  uint64_t v19;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = MEMORY[0x1C3B752C0](a4 + 16);
  if (v10)
  {
    v11 = (_QWORD *)v10;
    RecentsCallItem.hasURL.getter();
    if ((v12 & 1) != 0)
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v11) + 0x358))();
      v14 = type metadata accessor for UIBackgroundConfiguration();
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v14);
      MEMORY[0x1C3B7370C](v9);
      RecentsCollectionViewCell.configure(with:)(a3);
      v15 = objc_msgSend(*(id *)((char *)v11 + OBJC_IVAR___FTRecentsListViewController_featureFlags), sel_recentsCallTapTargetsEnabled);
      v16 = (void *)(*(uint64_t (**)(void))((*v13 & (uint64_t)a1->super.super.isa) + 0xB0))();
      v17 = v16;
      v18 = &selRef_didSelectAccessoryViewForLinkWithSender_;
      if (v15)
        v18 = &selRef_didSelectAccessoryViewForRecentCallWithSender_;
      objc_msgSend(v16, sel_addTarget_action_forControlEvents_, v11, *v18, 64);

      RecentsListViewController.prepareSubviewsForFilter(view:)(a1);
    }

  }
}

void RecentsListViewController.deleteAllRecents(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;

  OUTLINED_FUNCTION_3_0();
  a25 = v26;
  a26 = v27;
  OUTLINED_FUNCTION_216();
  v28();
  OUTLINED_FUNCTION_184(&a9);
  v29 = OUTLINED_FUNCTION_38_21();
  v31 = v30(v29);
  if (v31)
    v32 = v31;
  else
    v32 = MEMORY[0x1E0DEE9D8];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a9);
  OUTLINED_FUNCTION_303();
  OUTLINED_FUNCTION_120();
  v34 = (*(uint64_t (**)(void))(v33 + 272))();
  OUTLINED_FUNCTION_43();
  a9 = v32;
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_8_8();
  specialized Array.append<A>(contentsOf:)();
  specialized Set.init<A>(_:)();
  v35 = specialized _copyCollectionToContiguousArray<A>(_:)();
  OUTLINED_FUNCTION_27();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v36 = OUTLINED_FUNCTION_17_2();
  v37 = __swift_project_value_buffer(v36, (uint64_t)&static Logger.conversationKit);
  OUTLINED_FUNCTION_16_31();
  swift_retain_n();
  OUTLINED_FUNCTION_35_0();
  Logger.logObject.getter();
  v38 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v39 = 134218496;
    v40 = *(_QWORD *)(v32 + 16);
    OUTLINED_FUNCTION_133();
    a9 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_133();
    *(_WORD *)(v39 + 12) = 2048;
    v41 = *(_QWORD *)(v34 + 16);
    OUTLINED_FUNCTION_2_1();
    a9 = v41;
    OUTLINED_FUNCTION_223();
    OUTLINED_FUNCTION_2_1();
    *(_WORD *)(v39 + 22) = 2048;
    v42 = *(_QWORD *)(v35 + 16);
    OUTLINED_FUNCTION_22();
    a9 = v42;
    OUTLINED_FUNCTION_223();
    OUTLINED_FUNCTION_22();
    _os_log_impl(&dword_1BD004000, v37, v38, "Deleting %ld call items, %ld link items. Total %ld items", (uint8_t *)v39, 0x20u);
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_19_1();
  swift_release_n();
  if (*(_QWORD *)(v34 + 16))
  {
    OUTLINED_FUNCTION_303();
    v43 = OUTLINED_FUNCTION_64_7();
    OUTLINED_FUNCTION_1_28();
    v44 = v43;
    specialized RecentsLinkController.showDeleteConfirmationIfRequired(for:isRemovingAllRecents:from:completionHandler:)();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_22();

    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    OUTLINED_FUNCTION_2_1();
    doRemoveAllRecents #1 () in RecentsListViewController.deleteAllRecents(_:)();
    OUTLINED_FUNCTION_22();
  }
  OUTLINED_FUNCTION_0_20();
}

uint64_t doRemoveAllRecents #1 () in RecentsListViewController.deleteAllRecents(_:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  void (*v9)(void);
  uint64_t v10;
  void (*v11)(uint64_t);
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD v16[4];

  OUTLINED_FUNCTION_6_6();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  v3 = __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationKit);
  Logger.logObject.getter();
  v4 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v5 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v3, v1, "Starting links deletion", v5);
    OUTLINED_FUNCTION_60();
  }

  RecentsListViewController.linkController.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v6 + 288))(v6);
  OUTLINED_FUNCTION_43();
  Logger.logObject.getter();
  v7 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v8 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v3, v1, "Starting recent calls deletion", v8);
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_216();
  v9();
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  v10 = OUTLINED_FUNCTION_311_0();
  v11(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  Logger.logObject.getter();
  v12 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v12))
  {
    v13 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v13 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v3, (os_log_type_t)v3, "Starting dataSource deletion", v13);
    OUTLINED_FUNCTION_60();
  }

  RecentsListViewController.dataSource.getter();
  (*(void (**)(uint64_t, void (*)(), _QWORD))(*(_QWORD *)v14 + 288))(v0, closure #1 in doRemoveAllRecents #1 () in RecentsListViewController.deleteAllRecents(_:), 0);
  return OUTLINED_FUNCTION_43();
}

void closure #1 in doRemoveAllRecents #1 () in RecentsListViewController.deleteAllRecents(_:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)&static Logger.conversationKit);
  oslog = Logger.logObject.getter();
  v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_1BD004000, oslog, v1, "Finished deleting all items from dataSource", v2, 2u);
    MEMORY[0x1C3B751B8](v2, -1, -1);
  }

}

uint64_t closure #1 in RecentsListViewController.deleteAllRecents(_:)(uint64_t result)
{
  if ((result & 1) != 0)
    return doRemoveAllRecents #1 () in RecentsListViewController.deleteAllRecents(_:)();
  return result;
}

void RecentsListViewController.handleDeferredVideoMessagePresentation()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  void *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint8_t *v34;
  os_log_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_t v52;
  uint8_t *v53;
  void *v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  void (*v58)(char *, char *, uint64_t);
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  id v69;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v1);
  v62 = (uint64_t)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CompactMap<AnyPublisher<[RecentsCallItem], Never>, RecentsCallItem>);
  v61 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v60 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.CompactMap<AnyPublisher<[RecentsCallItem], Never>, RecentsCallItem>, NSRunLoop>);
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  MEMORY[0x1E0C80A78](v4);
  v64 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v52 - v10;
  v12 = type metadata accessor for UUID();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x1E0C80A78](v12);
  v67 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v52 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v52 - v19;
  v21 = (uint64_t)v0 + OBJC_IVAR___FTRecentsListViewController_messageUUIDForDeferredPresentation;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v21, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v22(v20, v11, v12);
    if (objc_msgSend(v0, sel_isViewLoaded))
    {
      v23 = v0;
      if (one-time initialization token for videoMessaging != -1)
        swift_once();
      v24 = type metadata accessor for Logger();
      __swift_project_value_buffer(v24, (uint64_t)&static Logger.videoMessaging);
      v25 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
      v25(v18, v20, v12);
      v26 = Logger.logObject.getter();
      v27 = static os_log_type_t.default.getter();
      LODWORD(v56) = v27;
      v28 = os_log_type_enabled(v26, v27);
      v58 = v22;
      v59 = v23;
      if (v28)
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v54 = (void *)swift_slowAlloc();
        v69 = v54;
        v53 = v29;
        *(_DWORD *)v29 = 136315138;
        v57 = (void (*)(char *, uint64_t))(v29 + 4);
        v25(v9, v18, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v12);
        specialized >> prefix<A>(_:)((uint64_t)v9);
        v31 = v30;
        v52 = v26;
        v33 = v32;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v33, (uint64_t *)&v69);
        v22 = v58;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v57 = *(void (**)(char *, uint64_t))(v13 + 8);
        v57(v18, v12);
        v35 = v52;
        v34 = v53;
        _os_log_impl(&dword_1BD004000, v52, (os_log_type_t)v56, "Waiting for video message to load. uuid %s", v53, 0xCu);
        v36 = v54;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v36, -1, -1);
        MEMORY[0x1C3B751B8](v34, -1, -1);

      }
      else
      {
        v57 = *(void (**)(char *, uint64_t))(v13 + 8);
        v57(v18, v12);

      }
      v55 = v25;
      RecentsListViewController.dataSource.getter();
      v38 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 160))(v37);
      swift_release();
      v69 = v38;
      v39 = v67;
      v25(v67, v20, v12);
      v40 = *(unsigned __int8 *)(v13 + 80);
      v56 = v40 | 7;
      v41 = swift_allocObject();
      v22((char *)(v41 + ((v40 + 16) & ~v40)), v39, v12);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<[RecentsCallItem], Never>);
      type metadata accessor for RecentsCallItem(0);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type AnyPublisher<[RecentsCallItem], Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<[RecentsCallItem], Never>);
      v42 = v60;
      Publisher.compactMap<A>(_:)();
      swift_release();
      swift_release();
      v69 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
      v43 = type metadata accessor for NSRunLoop.SchedulerOptions();
      v44 = v62;
      __swift_storeEnumTagSinglePayload(v62, 1, 1, v43);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.CompactMap<AnyPublisher<[RecentsCallItem], Never>, RecentsCallItem> and conformance Publishers.CompactMap<A, B>, &demangling cache variable for type metadata for Publishers.CompactMap<AnyPublisher<[RecentsCallItem], Never>, RecentsCallItem>);
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
      v46 = v63;
      v45 = v64;
      Publisher.receive<A>(on:options:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v44, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v46);
      v47 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v48 = v67;
      v55(v67, v20, v12);
      v49 = swift_allocObject();
      *(_QWORD *)(v49 + 16) = v47;
      v58((char *)(v49 + ((v40 + 24) & ~v40)), v48, v12);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.ReceiveOn<Publishers.CompactMap<AnyPublisher<[RecentsCallItem], Never>, RecentsCallItem>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.CompactMap<AnyPublisher<[RecentsCallItem], Never>, RecentsCallItem>, NSRunLoop>);
      v50 = v66;
      v51 = Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v50);
      RecentsListViewController.videoMessagesSink.setter(v51);
      v57(v20, v12);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    }
  }
}

id RecentsListViewController.didEnterBackgroundNotification(_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  id result;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  result = objc_msgSend(v0, sel_isViewLoaded);
  if ((_DWORD)result)
  {
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v3 = type metadata accessor for Logger();
    __swift_project_value_buffer(v3, (uint64_t)&static Logger.videoMessaging);
    v4 = Logger.logObject.getter();
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1BD004000, v4, v5, "RecentsListViewController didEnter background", v6, 2u);
      MEMORY[0x1C3B751B8](v6, -1, -1);
    }

    RecentsListViewController.dataSource.getter();
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 304))(v7);
    v8 = swift_release();
    (*(void (**)(_QWORD *__return_ptr, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x1A0))(v11, v8);
    v9 = v12;
    v10 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v10 + 88))(v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    return (id)RecentsListViewController.clearDeferredVideoMessagePresetation()();
  }
  return result;
}

uint64_t RecentsListViewController.clearDeferredVideoMessagePresetation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecentsListViewController.videoMessagesSink.setter(0);
  v4 = type metadata accessor for UUID();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v4);
  v5 = v0 + OBJC_IVAR___FTRecentsListViewController_messageUUIDForDeferredPresentation;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v3, v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  return swift_endAccess();
}

Swift::Void __swiftcall RecentsListViewController.didSelectAccessoryViewForOngoingCall(sender:)(UIButton *sender)
{
  RecentsListViewController.didSelectAccessoryViewForOngoingCall(sender:)();
}

uint64_t RecentsListViewController.collectionViewIndexPath(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t (*v3)(void);
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v6 = (void *)OUTLINED_FUNCTION_307(*v2);
  objc_msgSend(a1, sel_convertPoint_toCoordinateSpace_, v6, 0.0, 0.0);
  v8 = v7;
  v10 = v9;

  v11 = objc_msgSend((id)v3(), sel_indexPathForItemAtPoint_, v8, v10);
  OUTLINED_FUNCTION_15_2();
  if (v2)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    v12 = 0;
  }
  else
  {
    v12 = 1;
  }
  v13 = OUTLINED_FUNCTION_28_29();
  return __swift_storeEnumTagSinglePayload(a2, v12, 1, v13);
}

void RecentsListViewController.joinCall(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  char v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  void (*v74)(_QWORD, _QWORD);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  _QWORD v84[2];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  void (*v92)(_QWORD, _QWORD);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[10];

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v4 = type metadata accessor for DispatchWorkItemFlags();
  v99 = *(_QWORD *)(v4 - 8);
  v100 = v4;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v98 = v6;
  v7 = type metadata accessor for DispatchQoS();
  v96 = *(_QWORD *)(v7 - 8);
  v97 = v7;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v95 = v9;
  v10 = type metadata accessor for DispatchTimeInterval();
  v91 = *(_QWORD *)(v10 - 8);
  v92 = (void (*)(_QWORD, _QWORD))v10;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v90 = v12;
  v102 = type metadata accessor for DispatchTime();
  v89 = *(_QWORD *)(v102 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_5_27();
  v88 = v14;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v15);
  v94 = (char *)v84 - v16;
  v17 = OUTLINED_FUNCTION_28_29();
  v101 = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_41();
  v86 = v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (IndexPath?, IndexPath?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_5_27();
  v93 = v23;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_18_0();
  v87 = v25;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v84 - v27;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v84 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_77();
  v36 = v35 - v34;
  v37 = v3;
  RecentsListViewController.recentsCallItem(at:)();
  OUTLINED_FUNCTION_69_0((uint64_t)v31, 1, v32);
  if (!v48)
  {
    v85 = v36;
    outlined init with take of StagedCollaboration((uint64_t)v31, v36, type metadata accessor for RecentsCallItem);
    v84[1] = v0;
    v38 = v0 + OBJC_IVAR___FTRecentsListViewController_joinCallThrottlingIndexPath;
    OUTLINED_FUNCTION_2_0();
    v39 = v101;
    v40 = *(void (**)(uint64_t))(v101 + 16);
    v41 = OUTLINED_FUNCTION_318();
    v40(v41);
    OUTLINED_FUNCTION_80_0();
    __swift_storeEnumTagSinglePayload(v42, v43, v44, v17);
    v45 = v1 + *(int *)(v20 + 48);
    outlined init with copy of FeatureEligibility?(v38, v1, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
    v46 = OUTLINED_FUNCTION_131();
    outlined init with copy of FeatureEligibility?(v46, v47, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
    OUTLINED_FUNCTION_69_0(v1, 1, v17);
    v49 = v37;
    if (v48)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
      v50 = OUTLINED_FUNCTION_69_0(v45, 1, v17);
      if (v48)
      {
        OUTLINED_FUNCTION_275(v50, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
LABEL_14:
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        v60 = OUTLINED_FUNCTION_17_2();
        v61 = OUTLINED_FUNCTION_3(v60, (uint64_t)&static Logger.conversationKit);
        v62 = static os_log_type_t.default.getter();
        v63 = OUTLINED_FUNCTION_13_0(v62);
        v64 = v85;
        if (v63)
        {
          v65 = (uint8_t *)OUTLINED_FUNCTION_105();
          *(_WORD *)v65 = 0;
          OUTLINED_FUNCTION_130(&dword_1BD004000, v61, (os_log_type_t)v49, "[Recents] Ignore second join call request.", v65);
          OUTLINED_FUNCTION_60();
        }

        v66 = v64;
        goto LABEL_20;
      }
    }
    else
    {
      v51 = v39;
      outlined init with copy of FeatureEligibility?(v1, v87, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
      OUTLINED_FUNCTION_69_0(v45, 1, v17);
      if (!v52)
      {
        v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32);
        v56 = v86;
        v55(v86, v45, v17);
        lazy protocol witness table accessor for type UUID and conformance UUID(lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
        v84[0] = v49;
        v57 = dispatch thunk of static Equatable.== infix(_:_:)();
        v58 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        v58(v56, v17);
        OUTLINED_FUNCTION_9_42((uint64_t)v28);
        v59 = OUTLINED_FUNCTION_199();
        ((void (*)(uint64_t))v58)(v59);
        v49 = v84[0];
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
        if ((v57 & 1) != 0)
          goto LABEL_14;
LABEL_19:
        v67 = v93;
        ((void (*)(uint64_t, uint64_t, uint64_t))v40)(v93, v49, v17);
        OUTLINED_FUNCTION_80_0();
        __swift_storeEnumTagSinglePayload(v68, v69, v70, v17);
        OUTLINED_FUNCTION_2_0();
        outlined assign with take of Participant?(v67, v38, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
        v71 = swift_endAccess();
        OUTLINED_FUNCTION_59(v71, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        v101 = static OS_dispatch_queue.main.getter();
        v72 = v88;
        static DispatchTime.now()();
        v73 = v90;
        *v90 = 300;
        v75 = v91;
        v74 = v92;
        (*(void (**)(_QWORD *, _QWORD, void (*)(_QWORD, _QWORD)))(v91 + 104))(v73, *MEMORY[0x1E0DEF490], v92);
        v76 = v94;
        DispatchTime.advanced(by:)();
        (*(void (**)(_QWORD *, _QWORD))(v75 + 8))(v73, v74);
        v92 = *(void (**)(_QWORD, _QWORD))(v89 + 8);
        v92(v72, v102);
        v77 = OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_260();
        v103[4] = partial apply for closure #1 in RecentsListViewController.joinCall(at:);
        v103[5] = v77;
        v103[0] = MEMORY[0x1E0C809B0];
        v103[1] = 1107296256;
        v103[2] = thunk for @escaping @callee_guaranteed () -> ();
        v103[3] = &block_descriptor_23;
        v78 = _Block_copy(v103);
        swift_release();
        v79 = v95;
        static DispatchQoS.unspecified.getter();
        v103[0] = MEMORY[0x1E0DEE9D8];
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        v80 = v98;
        v81 = v100;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        v82 = (void *)v101;
        MEMORY[0x1C3B735B0](v76, v79, v80, v78);
        _Block_release(v78);

        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v80, v81);
        (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v79, v97);
        v92(v76, v102);
        __swift_storeEnumTagSinglePayload(v67, 1, 1, v17);
        v83 = v85;
        RecentsListViewController.joinCall(for:indexPath:)();
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v67, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
        v66 = v83;
LABEL_20:
        outlined destroy of RecentsCallItem(v66, type metadata accessor for RecentsCallItem);
        goto LABEL_21;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
      v53 = OUTLINED_FUNCTION_199();
      v50 = v54(v53);
    }
    OUTLINED_FUNCTION_275(v50, (uint64_t *)&demangling cache variable for type metadata for (IndexPath?, IndexPath?));
    goto LABEL_19;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
LABEL_21:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall RecentsListViewController.didSelectAccessoryViewForRecentCall(sender:)(UIButton *sender)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  UIButton *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  void *v20;
  _QWORD v21[2];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_28_29();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_16_2();
  RecentsListViewController.collectionViewIndexPath(for:)(sender, (uint64_t)v5);
  v8 = OUTLINED_FUNCTION_312();
  v10 = OUTLINED_FUNCTION_69_0(v8, v9, v6);
  if (v11)
  {
    OUTLINED_FUNCTION_219(v10, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v12 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v12 + 16) = xmmword_1BD6441D0;
    v21[1] = sender;
    OUTLINED_FUNCTION_59(v12, (unint64_t *)&lazy cache variable for type metadata for UIButton);
    v13 = sender;
    v14 = String.init<A>(reflecting:)();
    v16 = v15;
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v12 + 32) = v14;
    *(_QWORD *)(v12 + 40) = v16;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_191_0();
    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_318();
    v18(v17);
    if (objc_msgSend(*(id *)(v1 + OBJC_IVAR___FTRecentsListViewController_featureFlags), sel_recentsCallTapTargetsEnabled))
    {
      RecentsListViewController.joinCall(at:)();
    }
    else
    {
      v19 = OUTLINED_FUNCTION_131();
      RecentsListViewController.showDetailsAtIndexPath(_:from:)(v19, v20);
    }
    OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  }
  OUTLINED_FUNCTION_91();
}

void RecentsListViewController.showDetailsAtIndexPath(_:from:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t EnumTagSinglePayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecentsListViewController.recentsCallItem(at:)();
  v10 = type metadata accessor for RecentsCallItem(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  }
  else
  {
    RecentsCallItem.conversationLink.getter(EnumTagSinglePayload, v12, v13, v14, v15, v16, v17, v18, v23, (uint64_t)v24);
    v19 = v24;
    outlined destroy of RecentsCallItem((uint64_t)v9, type metadata accessor for RecentsCallItem);
    if (v19)
    {
      outlined consume of ConversationLink?(v19);
      RecentsListViewController.showLinkDetailViewController(at:)(a1);
      return;
    }
  }
  v20 = objc_msgSend(a2, sel_superview);
  if (v20)
  {
    v21 = v20;
    objc_msgSend(a2, sel_frame);
    objc_msgSend(v21, sel_convertPoint_toView_, 0);

    objc_msgSend(a2, sel_frame);
    objc_msgSend(a2, sel_frame);
  }
  RecentsListViewController.showRecentCallDetailsViewController(at:sourceRect:)(a1);
  v22 = type metadata accessor for Tips.InvalidationReason();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v22);
  RecentsListViewController.tipKitDismissTip(_:)((uint64_t)v6);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
}

Swift::Void __swiftcall RecentsListViewController.didSelectAccessoryViewForLink(sender:)(UIButton *sender)
{
  RecentsListViewController.didSelectAccessoryViewForOngoingCall(sender:)();
}

void RecentsListViewController.didSelectAccessoryViewForOngoingCall(sender:)()
{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  _QWORD v19[2];

  OUTLINED_FUNCTION_96();
  v1 = v0;
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_28_29();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  RecentsListViewController.collectionViewIndexPath(for:)(v3, (uint64_t)v6);
  v12 = OUTLINED_FUNCTION_69_0((uint64_t)v6, 1, v7);
  if (v13)
  {
    OUTLINED_FUNCTION_219(v12, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v14 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
    v19[1] = v3;
    OUTLINED_FUNCTION_59(v14, (unint64_t *)&lazy cache variable for type metadata for UIButton);
    v15 = v3;
    String.init<A>(reflecting:)();
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    v16 = lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_252(v16);
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v1(v11);
    v17 = OUTLINED_FUNCTION_202_0();
    v18(v17);
  }
  OUTLINED_FUNCTION_65_1();
}

void RecentsListViewController.showLinkDetailViewController(at:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RecentsCallItem(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecentsListViewController.recentsCallItem(at:)();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  }
  else
  {
    outlined init with take of StagedCollaboration((uint64_t)v7, (uint64_t)v10, type metadata accessor for RecentsCallItem);
    RecentsCallItem.conversationLink.getter(v11, v12, v13, v14, v15, v16, v17, v18, v26, (uint64_t)v27);
    v19 = v27;
    outlined consume of ConversationLink?(v27);
    if (v19)
    {
      RecentsListViewController.showLinkDetailViewController(for:)((uint64_t)v10);
      outlined destroy of RecentsCallItem((uint64_t)v10, type metadata accessor for RecentsCallItem);
      return;
    }
    outlined destroy of RecentsCallItem((uint64_t)v10, type metadata accessor for RecentsCallItem);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BD6441D0;
  v21 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v4, a1, v21);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v21);
  specialized >> prefix<A>(_:)((uint64_t)v4);
  v23 = v22;
  v25 = v24;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v20 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v20 + 32) = v23;
  *(_QWORD *)(v20 + 40) = v25;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
}

void RecentsListViewController.didTapNewCallButton()()
{
  void *v0;
  void *v1;
  id v2;
  _QWORD *v3;
  void *v4;
  void (*v5)(void *, _UNKNOWN **);
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  char v13;

  v1 = v0;
  if ((TUIsBareMakoAccount() & 1) != 0)
  {
    RecentsListViewController.showMakoUserAlert()();
  }
  else
  {
    v13 = 0;
    v2 = objc_allocWithZone((Class)type metadata accessor for PeoplePickerViewController());
    PeoplePickerViewController.init(style:existingAddresses:currentConversation:stagedActivity:setPreventsApplicationTerminationWhenModal:)(&v13, 0, 0, 0, (uint64_t)TPNumberPadCharacter.rawValue.getter, 0);
    v4 = v3;
    v5 = *(void (**)(void *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x368);
    v6 = v1;
    v5(v1, &protocol witness table for RecentsListViewController);
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3A40]), sel_initWithRootViewController_, v4);
    objc_msgSend(v12, sel_setDefinesPresentationContext_, 0);
    v7 = objc_msgSend(v6, sel_traitCollection);
    v8 = objc_msgSend(v7, sel_userInterfaceIdiom);

    if (v8 == (id)5)
      v9 = -2;
    else
      v9 = 6;
    objc_msgSend(v12, sel_setModalPresentationStyle_, v9);
    v10 = objc_msgSend(v6, sel_navigationController);
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, sel_presentViewController_animated_completion_, v12, 1, 0);

    }
  }
}

void RecentsListViewController.showMakoUserAlert()()
{
  char *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  unsigned int v7;
  id v8;
  unint64_t v9;
  const char *v10;
  unint64_t v11;
  Swift::String_optional v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  id v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String v21;
  id v22;
  id v23;
  Swift::String v24;
  Swift::String_optional v25;
  Swift::String v26;
  Swift::String v27;
  unint64_t v28;
  id v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_conversationKit);
  v30._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD676C40;
  v3._countAndFlagsBits = 0xD000000000000010;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = 0;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v30);

  v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR___FTRecentsListViewController_featureFlags], sel_appleAccountRebrandEnabled);
  v8 = objc_msgSend(v1, sel_conversationKit);
  if (v7)
  {
    v9 = 0xD00000000000001FLL;
    v28 = 0xE000000000000000;
    v10 = "MAKO_ALERT_MESSAGE_APPLEACCOUNT";
  }
  else
  {
    v9 = 0xD000000000000012;
    v28 = 0xE000000000000000;
    v10 = "MAKO_ALERT_MESSAGE";
  }
  v11 = (unint64_t)(v10 - 32) | 0x8000000000000000;
  v12.value._countAndFlagsBits = 0x61737265766E6F43;
  v12.value._object = (void *)0xEF74694B6E6F6974;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v14 = 0;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, v12, (NSBundle)v8, v13, *(Swift::String *)(&v28 - 1));

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  v16 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v6._countAndFlagsBits, (uint64_t)v6._object, v15._countAndFlagsBits, (uint64_t)v15._object, 1);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
  v17 = objc_msgSend(v1, sel_conversationKit);
  v18._countAndFlagsBits = 0xD000000000000018;
  v31._object = (void *)0xE000000000000000;
  v18._object = (void *)0x80000001BD676C80;
  v19.value._countAndFlagsBits = 0x61737265766E6F43;
  v19.value._object = (void *)0xEF74694B6E6F6974;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v31);

  v22 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v21._countAndFlagsBits, (uint64_t)v21._object, 0, (uint64_t)closure #1 in RecentsListViewController.showMakoUserAlert());
  v23 = objc_msgSend(v1, sel_conversationKit);
  v32._object = (void *)0xE000000000000000;
  v24._countAndFlagsBits = 0x4C45434E4143;
  v24._object = (void *)0xE600000000000000;
  v25.value._countAndFlagsBits = 0x61737265766E6F43;
  v25.value._object = (void *)0xEF74694B6E6F6974;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0;
  v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v32);

  v29 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v27._countAndFlagsBits, (uint64_t)v27._object, 1, 0);
  objc_msgSend(v16, sel_addAction_, v22);
  objc_msgSend(v16, sel_addAction_, v29);
  objc_msgSend(v0, sel_presentViewController_animated_completion_, v16, 1, 0);

}

void RecentsListViewController.didTapNewLinkButton(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  _QWORD *v13;
  void (*v14)(uint64_t);
  _QWORD *v15;
  uint64_t v16;
  objc_super v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *MEMORY[0x1E0CE9610];
  v7 = type metadata accessor for Tips.InvalidationReason();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  RecentsListViewController.tipKitDismissTip(_:)((uint64_t)v5);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
  v8 = (objc_class *)type metadata accessor for LinkCreationCoordinator();
  v9 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_shareSheetViewController] = 0;
  v10 = &v9[OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink];
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = 0;
  v11 = &v9[OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_parentViewController];
  swift_beginAccess();
  *((_QWORD *)v11 + 1) = &protocol witness table for RecentsListViewController;
  swift_unknownObjectUnownedInit();
  v17.receiver = v9;
  v17.super_class = v8;
  v12 = objc_msgSendSuper2(&v17, sel_init);
  RecentsListViewController.linkCoordinator.setter((uint64_t)v12);
  v13 = *(_QWORD **)(v1 + OBJC_IVAR___FTRecentsListViewController_linkCoordinator);
  if (v13)
  {
    v14 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v13) + 0xB8);
    v15 = v13;
    v14(a1);

  }
}

uint64_t RecentsListViewController.recentsCallItem(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_96();
  v1 = v0;
  v3 = v2;
  RecentsListViewController.dataSource.getter();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
  v6 = *(_QWORD *)(OUTLINED_FUNCTION_28_29() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
  OUTLINED_FUNCTION_291(v8 + v7, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 280))(v8);
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_53();
  specialized Collection.first.getter(v9, v3);
  return swift_bridgeObjectRelease();
}

void RecentsListViewController.showRecentCallDetailsViewController(at:sourceRect:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RecentsCallItem(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecentsListViewController.recentsCallItem(at:)();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
    v12 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v4, a1, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v12);
    specialized >> prefix<A>(_:)((uint64_t)v4);
    v14 = v13;
    v16 = v15;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v11 + 32) = v14;
    *(_QWORD *)(v11 + 40) = v16;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    outlined init with take of StagedCollaboration((uint64_t)v7, (uint64_t)v10, type metadata accessor for RecentsCallItem);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationKit);
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1BD004000, v18, v19, "showRecentCallDetailsViewController", v20, 2u);
      MEMORY[0x1C3B751B8](v20, -1, -1);
    }

    RecentsListViewController.presentDetailsView(for:sourceRect:)((uint64_t)v10);
    outlined destroy of RecentsCallItem((uint64_t)v10, type metadata accessor for RecentsCallItem);
  }
}

NSCollectionLayoutSize __swiftcall RecentsListViewController.updateHeaderForTip(_:)(NSCollectionLayoutSize a1)
{
  void *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  void *v6;
  _QWORD *v7;
  uint64_t (*v8)(void);
  _QWORD *v9;
  uint64_t v10;
  id v11;
  id v12;
  unsigned int v13;
  id v14;
  _QWORD *v15;
  double v16;
  _QWORD *v17;
  void *v19;
  id v20;
  id v21;
  id v22;
  CGRect v24;

  v5 = v2;
  RecentsListViewController.tipPopoverController.getter();
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v6)
  {
    v1 = v6;
    v8 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x2A8);
    v9 = (_QWORD *)v8();
    if (v9)
    {
      OUTLINED_FUNCTION_150(v9);
      OUTLINED_FUNCTION_14_18();
      if (v3)
      {
        v11 = OUTLINED_FUNCTION_123(v10, sel_popoverPresentationController);
        if (v11)
        {
          v12 = objc_msgSend(v11, sel_presentedViewController);
          OUTLINED_FUNCTION_18_14();
          v13 = objc_msgSend(v4, sel_isBeingPresented);

          if (v13)
          {
            v14 = OUTLINED_FUNCTION_18_4(v3, sel_setActive_);
            v15 = (_QWORD *)((uint64_t (*)(id))v8)(v14);
            if (v15)
            {
              (*(void (**)(void))((*v7 & *v15) + 0x118))();
              OUTLINED_FUNCTION_4_39();
              objc_msgSend(v5, sel_bounds);
              OUTLINED_FUNCTION_89();

              v24.origin.x = OUTLINED_FUNCTION_66();
              v16 = CGRectGetHeight(v24) + 90.0;
            }
            else
            {
              v16 = 90.0;
            }
            v19 = (void *)objc_opt_self();
            v20 = objc_msgSend(v19, sel_fractionalWidthDimension_, 1.0);
            v21 = objc_msgSend(v19, sel_absoluteDimension_, v16);
            v22 = objc_msgSend((id)objc_opt_self(), sel_sizeWithWidthDimension_heightDimension_, v20, v21);

            return (NSCollectionLayoutSize)v22;
          }
        }

      }
    }

  }
  v17 = (_QWORD *)(*(uint64_t (**)(void))((*v7 & *v5) + 0x2A8))();
  if (v17)
  {
    OUTLINED_FUNCTION_150(v17);
    OUTLINED_FUNCTION_37_0();
    if (v1)
    {
      OUTLINED_FUNCTION_40_3(v1, sel_setActive_);

    }
  }
  return (NSCollectionLayoutSize)a1.super.isa;
}

void *closure #1 in RecentsListViewController.collectionViewLayout()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *Strong;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  unint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  Class isa;
  objc_class *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  Class v29;
  uint64_t v31;
  uint64_t v32;

  v2 = type metadata accessor for UICollectionLayoutListConfiguration();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  RecentsListViewController.dataSource.getter();
  v8 = v7;

  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 248))(&v32, a1);
  swift_release();
  if ((_BYTE)v32)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSCollectionLayoutSection);
    v10 = v9;
    v11 = (void *)swift_unknownObjectUnownedLoadStrong();
    RecentsListViewController.collectionLayoutConfiguration.getter();

    v12 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v13 = objc_msgSend(v12, sel_boundarySupplementaryItems);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSCollectionLayoutBoundarySupplementaryItem);
    v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2)
        goto LABEL_10;
    }
    else
    {
      v2 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v2)
        goto LABEL_10;
    }
    if (v2 >= 1)
    {
      for (i = 0; i != v2; ++i)
      {
        if ((v14 & 0xC000000000000001) != 0)
          v16 = (id)MEMORY[0x1C3B73D18](i, v14);
        else
          v16 = *(id *)(v14 + 8 * i + 32);
        v17 = v16;
        objc_msgSend(v16, sel_setPinToVisibleBounds_, 0);

      }
LABEL_10:
      swift_bridgeObjectRelease_n();
      if (one-time initialization token for shared != -1)
        swift_once();
      if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 872))() & 1) != 0)
      {
        objc_msgSend(v12, sel_contentInsets);
        objc_msgSend(v12, sel_setContentInsets_, 0.0);
      }
      return v12;
    }
    __break(1u);
    goto LABEL_24;
  }
  v10 = (void *)objc_opt_self();
  v14 = (unint64_t)objc_msgSend(v10, sel_fractionalWidthDimension_, 1.0);
  if (one-time initialization token for estimatedHeight != -1)
LABEL_24:
    swift_once();
  v18 = objc_msgSend(v10, sel_estimatedDimension_, *(double *)&static RecentsHeaderButtonsView.Constants.estimatedHeight);
  v19 = objc_msgSend((id)objc_opt_self(), sel_sizeWithWidthDimension_heightDimension_, v14, v18);

  v20 = (void *)swift_unknownObjectUnownedLoadStrong();
  v21 = v19;
  isa = RecentsListViewController.updateHeaderForTip(_:)((NSCollectionLayoutSize)v21).super.isa;

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSCollectionLayoutBoundarySupplementaryItem);
  v23 = isa;
  @nonobjc NSCollectionLayoutBoundarySupplementaryItem.__allocating_init(layoutSize:elementKind:alignment:)(v23, 0xD00000000000001CLL, 0x80000001BD6762C0, 1);
  v25 = v24;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSCollectionLayoutSection);
  v26 = (void *)swift_unknownObjectUnownedLoadStrong();
  RecentsListViewController.collectionLayoutConfiguration.getter();

  v12 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 872))() & 1) != 0)
  {
    objc_msgSend(v12, sel_contentInsets);
    objc_msgSend(v12, sel_setContentInsets_);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v27 + 32) = v25;
  v31 = v27;
  specialized Array._endMutation()();
  v28 = v25;
  v29 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setBoundarySupplementaryItems_, v29);

  return v12;
}

void *partial apply for closure #1 in RecentsListViewController.collectionViewLayout()(uint64_t a1)
{
  return closure #1 in RecentsListViewController.collectionViewLayout()(a1);
}

void RecentsListViewController.deleteRecentCalls(_:preparationHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;

  OUTLINED_FUNCTION_93();
  v53 = (void *)v0;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v47 - v11;
  v55 = OUTLINED_FUNCTION_118_4();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_41();
  v61 = v14;
  v64 = OUTLINED_FUNCTION_98_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OUTLINED_FUNCTION_19_33();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_5_27();
  v62 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_18_0();
  v60 = v22;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_18_0();
  v52 = v24;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_18_0();
  v56 = v26;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_18_0();
  v59 = v28;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_138_0();
  v30 = OUTLINED_FUNCTION_15();
  v31 = MEMORY[0x1E0DEE9D8];
  v57 = v30;
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = v8;
  v58 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v58 + 16) = v31;
  if (*(_QWORD *)(v8 + 16))
  {
    v50 = v4;
    v51 = v1;
    v63 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v33 = v8 + v63;
    v48 = v8;
    v49 = v6;
    swift_bridgeObjectRetain();
    v54 = v12;
    OUTLINED_FUNCTION_135(v33, v2);
    OUTLINED_FUNCTION_111(v2, (uint64_t)v17);
    v34 = (char *)&loc_1BD15B64C + dword_1BD15BACC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  v35 = v31;
  v36 = v58;
  if (*(_QWORD *)(v31 + 16))
  {
    v37 = v53;
    RecentsListViewController.linkController.getter();
    v39 = v38;
    OUTLINED_FUNCTION_25_2();
    v40 = v37;
    v41 = OUTLINED_FUNCTION_263();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v41);
    v42 = v57;
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    swift_retain();
    OUTLINED_FUNCTION_86();
    v43 = OUTLINED_FUNCTION_124();
    specialized RecentsLinkController.showDeleteConfirmationIfRequired(for:isRemovingAllRecents:from:completionHandler:)(v43, 0, (uint64_t)v40, v39, (uint64_t)v40, v6, v4, v42, v36, v35, v32, v46, v47, v48, v49, v50, v51, v52, (uint64_t)v53,
      (uint64_t)v54,
      v55,
      v56,
      v57);
    OUTLINED_FUNCTION_17_22();
  }
  else
  {
    v44 = v57;
    v45 = OUTLINED_FUNCTION_124();
    removeRecents #1 (calls:links:videoMessages:allItems:) in RecentsListViewController.deleteRecentCalls(_:preparationHandler:)(v45, MEMORY[0x1E0DEE9D8], v31, v32, (uint64_t)v53, v6, v4, v44, v36);
  }
  swift_release();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_52_1();
}

uint64_t removeRecents #1 (calls:links:videoMessages:allItems:) in RecentsListViewController.deleteRecentCalls(_:preparationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void (*v21)(uint64_t, void (*)(), _QWORD *);
  uint64_t v22;

  OUTLINED_FUNCTION_93();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  OUTLINED_FUNCTION_310_0();
  RecentsListViewController.dataSource.getter();
  v18 = v17;
  v19 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_260();
  v20 = (_QWORD *)OUTLINED_FUNCTION_15();
  v20[2] = v19;
  v20[3] = v16;
  v20[4] = v14;
  v20[5] = v12;
  v20[6] = a9;
  v20[7] = v10;
  v21 = *(void (**)(uint64_t, void (*)(), _QWORD *))(*(_QWORD *)v18 + 288);
  OUTLINED_FUNCTION_1_28();
  v22 = OUTLINED_FUNCTION_202_0();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v22);
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_8_8();
  v21(v9, partial apply for closure #1 in removeRecents #1 (calls:links:videoMessages:allItems:) in RecentsListViewController.deleteRecentCalls(_:preparationHandler:), v20);
  swift_release();
  OUTLINED_FUNCTION_22();
  return swift_release();
}

void closure #1 in removeRecents #1 (calls:links:videoMessages:allItems:) in RecentsListViewController.deleteRecentCalls(_:preparationHandler:)(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v8 = a1 + 16;
  swift_beginAccess();
  v9 = MEMORY[0x1C3B752C0](v8);
  if (v9)
  {
    v10 = (_QWORD *)v9;
    if (a2)
      a2(1);
    (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x1A0))(v21);
    v11 = v22;
    v12 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    swift_beginAccess();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 80);
    v14 = swift_bridgeObjectRetain();
    v13(v14, v11, v12);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    RecentsListViewController.linkController.getter();
    v16 = v15;
    swift_beginAccess();
    v17 = *(void (**)(uint64_t))(*(_QWORD *)v16 + 296);
    v18 = swift_bridgeObjectRetain();
    v17(v18);
    swift_bridgeObjectRelease();
    swift_release();
    RecentsListViewController.dataSource.getter();
    v20 = (*(uint64_t (**)(void))(*(_QWORD *)v19 + 192))();
    swift_release();
    if (v20)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 160))(a6);
      swift_release();
    }

  }
}

uint64_t specialized closure #1 in RecentsListViewController.deleteRecentCalls(_:preparationHandler:)(uint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;

  if ((result & 1) != 0)
  {
    OUTLINED_FUNCTION_2_0();
    v15 = *(_QWORD *)(a5 + 16);
    OUTLINED_FUNCTION_2_0();
    v16 = *(_QWORD *)(a6 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    removeRecents #1 (calls:links:videoMessages:allItems:) in RecentsListViewController.deleteRecentCalls(_:preparationHandler:)(v15, v16, a7, a8, a2, (uint64_t)a3, a4, a5, a6);
    OUTLINED_FUNCTION_54_1();
    return OUTLINED_FUNCTION_25();
  }
  else if (a3)
  {
    return a3(0);
  }
  return result;
}

void RecentsListViewController.removeRecentCallsAndReportIfNeeded(_:preparationHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  char *v32;
  uint64_t v33;
  _QWORD v34[6];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_93();
  v41 = v2;
  v42 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)v34 - v12;
  v39 = OUTLINED_FUNCTION_118_4();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_41();
  v40 = v14;
  v15 = OUTLINED_FUNCTION_98_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  v37 = OUTLINED_FUNCTION_19_33();
  v35 = *(_QWORD *)(v37 - 8);
  OUTLINED_FUNCTION_10_1();
  v18 = MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v34 - v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_41();
  v36 = v22;
  v23 = *(void **)(v0 + OBJC_IVAR___FTRecentsListViewController_featureFlags);
  if (objc_msgSend(v23, sel_videoMessagingEnabledM3)
    && (v34[4] = v15, objc_msgSend(v23, sel_videoMessagingSpamReportEnabled)))
  {
    v34[5] = v1;
    v26 = v9;
    if (*(_QWORD *)(v9 + 16))
    {
      v34[1] = v7;
      v34[2] = v5;
      v34[3] = v0;
      v27 = v9 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
      v28 = *(_QWORD *)(v35 + 72);
      v34[0] = v26;
      OUTLINED_FUNCTION_86();
      v35 = v28;
      OUTLINED_FUNCTION_111(v27, (uint64_t)v20);
      OUTLINED_FUNCTION_296();
      outlined init with copy of ConversationControlsAppLaunchButtonType(v29, v30, v31);
      OUTLINED_FUNCTION_315_0();
      v32 = (char *)&loc_1BD15C008 + dword_1BD15C25C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    v33 = OUTLINED_FUNCTION_77_0(v36, v24, v25, v37);
    OUTLINED_FUNCTION_96_3(v33, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
    RecentsListViewController.deleteRecentCalls(_:preparationHandler:)();
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    RecentsListViewController.deleteRecentCalls(_:preparationHandler:)();
  }
}

#error "1BD15C4F0: call analysis failed (funcsize=156)"

Swift::Void __swiftcall RecentsListViewController.reportSpamCalls(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2;
  char *v3;

  if (*((_QWORD *)a1._rawValue + 2))
  {
    v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_19_33() - 8) + 80);
    v3 = (char *)a1._rawValue + ((v2 + 32) & ~v2);
    if (one-time initialization token for faceTime != -1)
      swift_once();
    ReportSpamManager.reportVideoMessagingSpam(call:)((uint64_t)v3);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t closure #1 in RecentsListViewController.presentReportJunkAlert(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a4;
  *(_QWORD *)(v7 + 24) = a5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a4);
  RecentsListViewController.deleteRecentCalls(_:preparationHandler:)();
  return swift_release();
}

void closure #2 in RecentsListViewController.presentReportJunkAlert(_:completion:)(uint64_t a1, uint64_t a2, Swift::OpaquePointer a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a4;
  *(_QWORD *)(v8 + 24) = a5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a4);
  RecentsListViewController.deleteRecentCalls(_:preparationHandler:)();
  swift_release();
  RecentsListViewController.reportSpamCalls(_:)(a3);
}

id RecentsListViewController.deleteAction(of:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v18;
  Swift::String v19;

  v2 = type metadata accessor for RecentsCallItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIContextualAction);
  v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v19._object = (void *)0xE000000000000000;
  v6._object = (void *)0x80000001BD676D90;
  v6._countAndFlagsBits = 0xD000000000000020;
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v19);

  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RecentsCallItem);
  v11 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  outlined init with take of StagedCollaboration((uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for RecentsCallItem);
  v13 = @nonobjc UIContextualAction.__allocating_init(style:title:handler:)(1, v9._countAndFlagsBits, (uint64_t)v9._object, (uint64_t)partial apply for closure #1 in RecentsListViewController.deleteAction(of:), v12);
  v14 = (void *)objc_opt_self();
  v15 = (void *)MEMORY[0x1C3B72E00](0x69662E6873617274, 0xEA00000000006C6CLL);
  v16 = objc_msgSend(v14, sel___systemImageNamedSwift_, v15);

  objc_msgSend(v13, sel_setImage_, v16);
  return v13;
}

uint64_t closure #1 in RecentsListViewController.deleteAction(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;

  v10 = type metadata accessor for RecentsCallItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](a5 + 16);
  if (result)
  {
    v14 = (void *)result;
    RecentsListViewController.tipKitStopObservation()();
    type metadata accessor for TPTipsHelper();
    static TPTipsHelper.taskQueue.getter();
    outlined init with copy of ConversationControlsAppLaunchButtonType(a6, (uint64_t)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RecentsCallItem);
    v15 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v14;
    outlined init with take of StagedCollaboration((uint64_t)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for RecentsCallItem);
    v17 = (_QWORD *)(v16 + ((v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v17 = a3;
    v17[1] = a4;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = &async function pointer to partial apply for closure #1 in closure #1 in RecentsListViewController.deleteAction(of:);
    *(_QWORD *)(v18 + 24) = v16;
    v19 = v14;
    swift_retain();
    dispatch thunk of TaskQueue.async(_:)();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #1 in closure #1 in RecentsListViewController.deleteAction(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in RecentsListViewController.deleteAction(of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(void **)(v0 + 16);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RecentsCallItem>);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_19_33() - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = OUTLINED_FUNCTION_281();
  *(_OWORD *)(v7 + 16) = xmmword_1BD6441D0;
  OUTLINED_FUNCTION_111(v2, v7 + v6);
  v8 = (_QWORD *)OUTLINED_FUNCTION_15();
  v8[2] = v4;
  v8[3] = v3;
  v8[4] = v1;
  v4;
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  RecentsListViewController.removeRecentCallsAndReportIfNeeded(_:preparationHandler:)();
  OUTLINED_FUNCTION_2_1();
  swift_release();
  return OUTLINED_FUNCTION_70_1(*(uint64_t (**)(void))(v0 + 8));
}

id @nonobjc UIContextualAction.__allocating_init(style:title:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  id v10;
  _QWORD v12[6];

  if (a3)
  {
    v8 = (void *)MEMORY[0x1C3B72E00](a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v12[4] = a4;
  v12[5] = a5;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIContextualAction, @guaranteed UIView, @guaranteed @escaping @callee_guaranteed (@unowned Bool) -> ()) -> ();
  v12[3] = &block_descriptor_63;
  v9 = _Block_copy(v12);
  v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_contextualActionWithStyle_title_handler_, a1, v8, v9);

  _Block_release(v9);
  swift_release();
  return v10;
}

void thunk for @escaping @callee_guaranteed (@guaranteed UIContextualAction, @guaranteed UIView, @guaranteed @escaping @callee_guaranteed (@unowned Bool) -> ()) -> ()(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  void (*v6)(id, id, uint64_t (*)(char), uint64_t);
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  v10 = a2;
  v9 = a3;
  v6(v10, v9, partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned Bool) -> (), v8);
  swift_release();
  swift_release();

}

uint64_t closure #1 in closure #1 in RecentsListViewController.reportAndBlockAction(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for RecentsCallItem(0);
  v4[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in RecentsListViewController.reportAndBlockAction(of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  swift_release();
  if (one-time initialization token for faceTime != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 48);
  v11 = *(_OWORD *)(v0 + 24);
  OUTLINED_FUNCTION_111(*(_QWORD *)(v0 + 16), v1);
  v2 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_133_1(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_341();
  specialized ReportSpamManager.presentReportAndBlockAlert(of:from:preparationHandler:)();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_95_2(v1);
  swift_task_dealloc();
  return OUTLINED_FUNCTION_70_1(*(uint64_t (**)(void))(v0 + 8));
}

void RecentsListViewController.reportAndBlockAction(of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  NSBundle v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_93();
  v25 = v0;
  v2 = v1;
  v3 = OUTLINED_FUNCTION_19_33();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_59(v6, &lazy cache variable for type metadata for UIContextualAction);
  v7 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_2_15();
  v8.super.isa = v7;
  v13 = OUTLINED_FUNCTION_49_2(v9, v10, v11, v12, v8);
  v15 = v14;

  v16 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_260();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v2, (uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RecentsCallItem);
  v17 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v18 = OUTLINED_FUNCTION_281();
  *(_QWORD *)(v18 + 16) = v16;
  outlined init with take of StagedCollaboration((uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for RecentsCallItem);
  @nonobjc UIContextualAction.__allocating_init(style:title:handler:)(0, v13, v15, v25, v18);
  v19 = (void *)objc_opt_self();
  v20 = MEMORY[0x1C3B72E00](0xD000000000000010, 0x80000001BD676D30);
  v21 = OUTLINED_FUNCTION_59_2(v20, sel___systemImageNamedSwift_);
  OUTLINED_FUNCTION_15_2();
  OUTLINED_FUNCTION_4_24(v22, sel_setImage_);

  v23 = objc_msgSend((id)objc_opt_self(), sel_systemOrangeColor);
  OUTLINED_FUNCTION_4_24((uint64_t)v23, sel_setBackgroundColor_);

  OUTLINED_FUNCTION_52_1();
}

void closure #1 in RecentsListViewController.reportAndBlockAction(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_93();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v30 = OUTLINED_FUNCTION_19_33();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v31 + 64);
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_2_0();
  v33 = MEMORY[0x1C3B752C0](v25 + 16);
  if (v33)
  {
    v34 = (void *)v33;
    v43 = v23;
    v44 = a21;
    v45 = a22;
    RecentsListViewController.tipKitStopObservation()();
    type metadata accessor for TPTipsHelper();
    static TPTipsHelper.taskQueue.getter();
    v35 = OUTLINED_FUNCTION_263();
    OUTLINED_FUNCTION_259(v35, v36);
    v37 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v38 = (v32 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    v39 = swift_allocObject();
    outlined init with take of StagedCollaboration((uint64_t)&v43 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v39 + v37, type metadata accessor for RecentsCallItem);
    *(_QWORD *)(v39 + v38) = v34;
    v40 = (_QWORD *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v40 = v29;
    v40[1] = v27;
    v41 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v41 + 16) = v44;
    *(_QWORD *)(v41 + 24) = v39;
    v42 = v34;
    OUTLINED_FUNCTION_11_8();
    dispatch thunk of TaskQueue.async(_:)();

    OUTLINED_FUNCTION_43();
    swift_release();
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in closure #1 in RecentsListViewController.blockAllAction(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for RecentsCallItem(0);
  v4[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in RecentsListViewController.blockAllAction(of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;

  swift_release();
  if (one-time initialization token for faceTime != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 48);
  v15 = *(_OWORD *)(v0 + 24);
  OUTLINED_FUNCTION_111(*(_QWORD *)(v0 + 16), v1);
  v2 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_133_1(v2, v3, v4, v5, v6, v7, v8, v9, v15);
  OUTLINED_FUNCTION_11_8();
  v10 = OUTLINED_FUNCTION_341();
  specialized ReportSpamManager.presentBlockAllParticipantsAlert(of:from:preparationHandler:)(v10, v11, v12, v13);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_95_2(v1);
  swift_task_dealloc();
  return OUTLINED_FUNCTION_70_1(*(uint64_t (**)(void))(v0 + 8));
}

void closure #1 in closure #1 in closure #1 in RecentsListViewController.deleteAction(of:)(char a1, uint64_t a2, void (*a3)(_QWORD))
{
  if ((a1 & 1) != 0)
    RecentsListViewController.tipKitStartObservation()();
  a3(a1 & 1);
  OUTLINED_FUNCTION_18();
}

void closure #1 in RecentsListViewController.joinCall(at:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v5 = MEMORY[0x1C3B752C0](a1 + 16);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = type metadata accessor for IndexPath();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v7);
    v8 = (uint64_t)v6 + OBJC_IVAR___FTRecentsListViewController_joinCallThrottlingIndexPath;
    swift_beginAccess();
    outlined assign with take of Participant?((uint64_t)v4, v8, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
    swift_endAccess();

  }
}

void RecentsListViewController.joinCall(for:indexPath:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  int EnumCaseMultiPayload;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  char *v38;
  _QWORD v39[6];
  _BYTE v40[32];
  _QWORD v41[6];

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v39[3] = v3;
  v5 = v4;
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[4] = OUTLINED_FUNCTION_118_4();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_98_1();
  OUTLINED_FUNCTION_1_1();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v39 - v15;
  RecentsListViewController.engaged(with:)(v5);
  OUTLINED_FUNCTION_259(v5, (uint64_t)v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  OUTLINED_FUNCTION_295_0((uint64_t)v16);
  if (EnumCaseMultiPayload != 3)
    goto LABEL_12;
  RecentsCallItem.tuHandles.getter();
  specialized Collection.first.getter();
  v19 = v18;
  OUTLINED_FUNCTION_27();
  if (v19)
  {
    v39[0] = v1;
    v39[1] = v8;
    v20 = v19;
    v21 = (void *)objc_opt_self();
    v22 = objc_msgSend(objc_msgSend(v21, sel_sharedInstance), sel_providerManager);
    OUTLINED_FUNCTION_4_39();
    v24 = OUTLINED_FUNCTION_2_2(v23, sel_faceTimeProvider);

    v26 = OUTLINED_FUNCTION_25_1(v25, sel_prioritizedSenderIdentities);
    OUTLINED_FUNCTION_4_39();
    v28 = OUTLINED_FUNCTION_2_2(v27, sel_firstObject);

    if (v28)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v40, 0, sizeof(v40));
    }
    outlined init with take of Any?((uint64_t)v40, (uint64_t)v41, &demangling cache variable for type metadata for Any?);
    if (v41[3])
    {
      OUTLINED_FUNCTION_59(v29, (unint64_t *)&lazy cache variable for type metadata for TUSenderIdentity);
      if (swift_dynamicCast())
        v30 = (void *)v39[5];
      else
        v30 = 0;
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, &demangling cache variable for type metadata for Any?);
      v30 = 0;
    }
    v31 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x1D0))();
    v39[2] = v2;
    v32 = v31;
    v33 = objc_msgSend(OUTLINED_FUNCTION_2_11(v31, sel_sharedInstance), sel_providerManager);
    OUTLINED_FUNCTION_18_14();
    v35 = OUTLINED_FUNCTION_2_11(v34, sel_faceTimeProvider);

    RecentsCallItem.contact.getter();
    v37 = v36;
    (*(void (**)(id, uint64_t, void *, void *, void *, _QWORD))(*(_QWORD *)v32 + 136))(v35, 1, v36, v20, v30, 0);

    swift_release();
LABEL_12:
    outlined init with copy of ConversationControlsAppLaunchButtonType(v5, (uint64_t)v14, type metadata accessor for RecentsCallItemType);
    OUTLINED_FUNCTION_199();
    v38 = (char *)&loc_1BD15D794 + *((int *)qword_1BD15D9E8 + swift_getEnumCaseMultiPayload());
    __asm { BR              X10 }
  }
  OUTLINED_FUNCTION_52_1();
}

void RecentsListViewController.engaged(with:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void **v5;
  uint64_t (*v6)(_QWORD);
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_98_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = (void **)(v4 - v3);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v4 - v3, v6);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = *v5;
    ConversationLink.prevailingSuggestion.getter();
    if (v8)
    {
      v9 = v8;
      OUTLINED_FUNCTION_303();
      OUTLINED_FUNCTION_120();
      (*(void (**)(void *))(v10 + 328))(v9);
      OUTLINED_FUNCTION_17_22();
      OUTLINED_FUNCTION_2_1();

      OUTLINED_FUNCTION_43();
    }
    else
    {
      OUTLINED_FUNCTION_17_22();
      OUTLINED_FUNCTION_2_1();

    }
  }
  else
  {
    outlined destroy of RecentsCallItem((uint64_t)v5, type metadata accessor for RecentsCallItemType);
  }
  OUTLINED_FUNCTION_91();
}

void RecentsListViewController.joinConversationLink(_:wantsStagingArea:)(void *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void (*v12)(void);
  id v13;
  id v14;
  uint64_t v15;
  id v16;

  v3 = v2;
  v5 = a1;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
  {
    specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
    v6 = v15;
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9E8];
  }
  v7 = objc_allocWithZone(MEMORY[0x1E0DBD308]);
  v8 = @nonobjc TUJoinConversationRequest.init(conversationLink:otherInvitedHandles:sendLetMeInRequest:)(v5, v6, 0);
  objc_msgSend(v8, sel_setVideoEnabled_, 1);
  if (one-time initialization token for joinLink != -1)
    swift_once();
  v9 = swift_bridgeObjectRetain();
  outlined bridged method (mbgnn) of @objc TUJoinConversationRequest.invitationPreferences.setter(v9, v8);
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_setWantsStagingArea_, a2 & 1);
  v11 = (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x278))(v10);
  if (!v11)
    goto LABEL_9;
  v12 = (void (*)(void))v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v14 = objc_msgSend(v13, sel_callFilterController);

  LODWORD(v13) = objc_msgSend(v14, sel_shouldRestrictJoinConversationRequest_performSynchronously_, v8, 1);
  if (!(_DWORD)v13)
  {
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v12);
LABEL_9:
    v16 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    objc_msgSend(v16, sel_launchAppForJoinRequest_, v8);

    goto LABEL_10;
  }
  v16 = v8;
  v12();

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v12);
LABEL_10:

}

void RecentsListViewController.joinOngoingConversation(_:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  NSURL *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void (*v18)(void);
  id v19;
  id v20;
  uint64_t v21;
  id v22;

  v2 = v1;
  v4 = type metadata accessor for URL();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_state))
  {
    v16 = TUConversation.joinConversationRequest()();
    v17 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x278))();
    if (v17)
    {
      v18 = (void (*)(void))v17;
      v19 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v20 = objc_msgSend(v19, sel_callFilterController);

      LODWORD(v19) = objc_msgSend(v20, sel_shouldRestrictJoinConversationRequest_performSynchronously_, v16, 1);
      if ((_DWORD)v19)
      {
        v22 = v16;
        v18();

        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v18);
LABEL_10:

        return;
      }
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v18);
    }
    v22 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    objc_msgSend(v22, sel_launchAppForJoinRequest_, v16);

    goto LABEL_10;
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_faceTimeShowInCallUIURL);
  if (v11)
  {
    v12 = v11;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v4);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4) != 1)
    {
      URL._bridgeToObjectiveC()(v13);
      v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      TUOpenURL();

      return;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v4);
  }
  __break(1u);
}

void RecentsListViewController.conversationLink(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_1();
  RecentsListViewController.recentsCallItem(at:)();
  v5 = OUTLINED_FUNCTION_46_7((uint64_t)v3);
  if ((_DWORD)v5 == 1)
  {
    OUTLINED_FUNCTION_96_3(v5, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  }
  else
  {
    OUTLINED_FUNCTION_43_15();
    outlined init with take of StagedCollaboration(v6, v7, v8);
    RecentsCallItem.conversationLink.getter(v9, v10, v11, v12, v13, v14, v15, v16, v19, (uint64_t)v20);
    OUTLINED_FUNCTION_295_0(v0);
    v17 = v20;
    if (v20)
    {
      v18 = v20;
      outlined consume of ConversationLink?(v17);
    }
  }
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall RecentsListViewController.presentOnboardingViewController()()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;

  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_309(*(_QWORD *)static Features.shared) & 1) != 0)
  {
    OUTLINED_FUNCTION_54_17(v0, sel_dismissViewControllerAnimated_completion_);
    v2 = *(void **)&v0[OBJC_IVAR___FTRecentsListViewController_onboardingController];
    objc_opt_self();
    v3 = v2;
    v4 = objc_msgSend(OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_sharedInstance), sel_contactStore);
    OUTLINED_FUNCTION_4_39();
    OUTLINED_FUNCTION_236(v5, sel_presentOnboardingControllerFrom_withContactStore_);

    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

id protocol witness for PersonalNicknameMenuViewDelegate.presentOnboardingViewController() in conformance RecentsListViewController()
{
  void *v0;

  return objc_msgSend(v0, sel_presentOnboardingViewController);
}

void RecentsListViewController.beginEditing()()
{
  void *v0;

  objc_msgSend(v0, sel_setEditing_animated_, 1, 1);
  RecentsListViewController.updateLeftBarButton()();
}

void RecentsListViewController.endEditing()()
{
  void *v0;

  objc_msgSend(v0, sel_setEditing_animated_, 0, 1);
  RecentsListViewController.updateLeftBarButton()();
}

id closure #1 in RecentsListViewController.editMenuItems.getter(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  char v6;

  v6 = 0;
  v3 = objc_allocWithZone((Class)type metadata accessor for PersonalNicknameMenuView());
  v4 = a2;
  return PersonalNicknameMenuView.init(displayContext:personalNicknameMenuViewDelegate:)(&v6, (uint64_t)a2, (uint64_t)&protocol witness table for RecentsListViewController);
}

uint64_t RecentsListViewController.selectActionItem.getter()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  void *v4;
  id v5;
  Swift::String v7;

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v7._object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 0x7463656C6553;
  v1._object = (void *)0xE600000000000000;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v7);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  @nonobjc UIImage.__allocating_init(systemName:)();
  if (one-time initialization token for selectActionIdentifier != -1)
    swift_once();
  v4 = (void *)static RecentsListViewController.Constants.selectActionIdentifier;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v5 = v4;
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

void closure #1 in RecentsListViewController.selectActionItem.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x1C3B752C0](v2);
  objc_msgSend(v3, sel_beginEditing);

}

id RecentsListViewController.doneEditingBarButtonItem.getter()
{
  void *v0;
  id v1;
  _QWORD v3[4];

  v3[3] = type metadata accessor for RecentsListViewController(0);
  v3[0] = v0;
  objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v1 = v0;
  return @nonobjc UIBarButtonItem.init(barButtonSystemItem:target:action:)(0, v3, (uint64_t)sel_endEditing);
}

void RecentsListViewController.didSelect(_:didSelectItemAt:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  Class isa;

  OUTLINED_FUNCTION_266();
  if (objc_msgSend(*(id *)(v1 + OBJC_IVAR___FTRecentsListViewController_featureFlags), sel_recentsCallTapTargetsEnabled))
  {
    v4 = objc_msgSend(v0, sel_cellForItemAtIndexPath_, OUTLINED_FUNCTION_273().super.isa);
    OUTLINED_FUNCTION_18_14();
    if (!v3)
      v3 = v0;
    RecentsListViewController.showDetailsAtIndexPath(_:from:)(v2, v3);

  }
  else
  {
    RecentsListViewController.joinCall(at:)();
  }
  isa = OUTLINED_FUNCTION_273().super.isa;
  objc_msgSend(v0, sel_deselectItemAtIndexPath_animated_, isa, 1);
  OUTLINED_FUNCTION_42_0(isa);
}

void RecentsListViewController.collectionView(_:didSelectItemAt:)()
{
  uint64_t v0;
  id v1;
  id v2;

  OUTLINED_FUNCTION_266();
  if (objc_msgSend(v1, sel_isEditing))
  {
    RecentsListViewController.deleteButtonItem.getter();
    OUTLINED_FUNCTION_270();
    OUTLINED_FUNCTION_112_4();
    objc_msgSend(v2, sel_setEnabled_, v0 != 0);
    OUTLINED_FUNCTION_15_9(v2);
  }
  else
  {
    RecentsListViewController.didSelect(_:didSelectItemAt:)();
  }
}

void RecentsListViewController.collectionView(_:didDeselectItemAt:)(void *a1)
{
  id v2;

  if (objc_msgSend(a1, sel_isEditing))
  {
    RecentsListViewController.deleteButtonItem.getter();
    OUTLINED_FUNCTION_270();
    OUTLINED_FUNCTION_112_4();
    objc_msgSend(v2, sel_setEnabled_, a1 != 0);
    OUTLINED_FUNCTION_7_1(v2);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

void RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  void (*v41)(unint64_t, char *, uint64_t);
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_28_29();
  v47 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v47 + 64);
  MEMORY[0x1E0C80A78](v5);
  v45 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  v9 = OUTLINED_FUNCTION_32_3();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v46 = (char *)v40 - v14;
  v44 = v4;
  RecentsListViewController.conversationLink(at:)();
  if (v15)
  {
    v16 = v15;
    v42 = v0;
    v43 = v5;
    v17 = objc_msgSend(v15, sel_URL);
    if (v17)
    {
      v18 = v17;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v19 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
      v19(v2, v13, v9);
      OUTLINED_FUNCTION_80_0();
      __swift_storeEnumTagSinglePayload(v20, v21, v22, v9);
      OUTLINED_FUNCTION_69_0(v2, 1, v9);
      if (!v23)
      {
        v19((uint64_t)v46, (char *)v2, v9);
        v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
        v25 = v43;
        v24(v1, v44, v43);
        OUTLINED_FUNCTION_83_7(v1, 0);
        v41 = (void (*)(unint64_t, char *, uint64_t))v19;
        v26 = OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_336(v26, v27, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
        v28 = swift_endAccess();
        OUTLINED_FUNCTION_59(v28, (unint64_t *)&lazy cache variable for type metadata for UIContextMenuConfiguration);
        v40[1] = v29;
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v46, v9);
        v24((uint64_t)v45, v44, v25);
        v30 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
        v31 = (v11 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
        v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
        v33 = (*(unsigned __int8 *)(v47 + 80) + v32 + 8) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
        v34 = swift_allocObject();
        v41(v34 + v30, v13, v9);
        v36 = v42;
        v35 = v43;
        *(_QWORD *)(v34 + v31) = v42;
        *(_QWORD *)(v34 + v32) = v16;
        (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v34 + v33, v45, v35);
        v37 = v36;
        v38 = specialized ParticipantsViewController.participantsViewControllerDelegate.getter();
        UIContextMenuConfiguration.init(identifier:previewProvider:actionProvider:)(v38);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v46, v9);
        goto LABEL_7;
      }
    }
    else
    {
      OUTLINED_FUNCTION_51_1(v2);
    }

    OUTLINED_FUNCTION_275(v39, &demangling cache variable for type metadata for URL?);
  }
LABEL_7:
  OUTLINED_FUNCTION_52_1();
}

Class closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  Swift::String v33;
  Swift::String_optional v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  UIMenuElementSize v47;
  id v48;
  id v49;
  Swift::String v50;
  Class isa;
  Swift::OpaquePointer v53;
  _QWORD v54[2];
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  UIMenuElementSize v66;
  UIImage_optional v67;
  Swift::String v68;
  Swift::String v69;
  Swift::String v70;

  v64 = a5;
  v56 = a3;
  v57 = a4;
  v6 = type metadata accessor for IndexPath();
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  v63 = *(_QWORD *)(v61 + 64);
  MEMORY[0x1E0C80A78](v6);
  v59 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v54[1] = v11;
  v12 = @nonobjc UIImage.__allocating_init(systemName:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  v65 = v13;
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_conversationKit);
  v68._object = (void *)0xE000000000000000;
  v16._object = (void *)0x80000001BD676F20;
  v16._countAndFlagsBits = 0xD000000000000010;
  v17.value._countAndFlagsBits = 0x61737265766E6F43;
  v17.value._object = (void *)0xEF74694B6E6F6974;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v68._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v68);

  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  v19 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20 + v19, (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v60 = v12;
  v58 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v21 = @nonobjc UIImage.__allocating_init(systemName:)();
  v22 = objc_msgSend(v14, sel_conversationKit);
  v23._countAndFlagsBits = 0xD000000000000011;
  v69._object = (void *)0xE000000000000000;
  v23._object = (void *)0x80000001BD676F60;
  v24.value._countAndFlagsBits = 0x61737265766E6F43;
  v24.value._object = (void *)0xEF74694B6E6F6974;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v69._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v69);

  v26 = swift_allocObject();
  v27 = v56;
  swift_unknownObjectWeakInit();
  v28 = swift_allocObject();
  v29 = (void *)v57;
  *(_QWORD *)(v28 + 16) = v57;
  *(_QWORD *)(v28 + 24) = v26;
  v55 = v21;
  v30 = v29;
  v57 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v31 = @nonobjc UIImage.__allocating_init(systemName:)();
  v32 = objc_msgSend(v14, sel_conversationKit);
  v33._countAndFlagsBits = 0xD000000000000012;
  v70._object = (void *)0xE000000000000000;
  v33._object = (void *)0x80000001BD676F80;
  v34.value._countAndFlagsBits = 0x61737265766E6F43;
  v34.value._object = (void *)0xEF74694B6E6F6974;
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v70._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v70);

  v37 = v61;
  v36 = v62;
  v38 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v59, v64, v62);
  v39 = (*(unsigned __int8 *)(v37 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v40 + v39, v38, v36);
  v41 = v31;
  v42 = v27;
  v43 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenu);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1BD644B60;
  v46 = (void *)v57;
  v45 = (void *)v58;
  *(_QWORD *)(v44 + 32) = v58;
  *(_QWORD *)(v44 + 40) = v46;
  *(_QWORD *)(v44 + 48) = v43;
  v66 = v44;
  specialized Array._endMutation()();
  v47 = v66;
  v48 = v45;
  v49 = v46;
  v50._countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  v67.value.super.isa = 0;
  v67.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v50, (Swift::String_optional)0, v67, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v47, v53).super.super.isa;

  return isa;
}

void closure #1 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_generalPasteboard);
  v0 = URL.absoluteString.getter();
  outlined bridged method (mbnn) of @objc UIViewController.title.setter(v0, v1, v2, (SEL *)&selRef_setString_);

}

void closure #2 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  Swift::String v26;

  v3 = a3 + 16;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD310]), sel_initWithTUConversationLink_, a2);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUStringShareItem);
  v6 = v5;
  v7 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v26._object = (void *)0xE000000000000000;
  v8._object = (void *)0x80000001BD674B10;
  v8._countAndFlagsBits = 0xD000000000000010;
  v9.value._countAndFlagsBits = 0x61737265766E6F43;
  v9.value._object = (void *)0xEF74694B6E6F6974;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v26._countAndFlagsBits = 0;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v26);

  v12 = TUStringShareItem.__allocating_init(message:)(v11._countAndFlagsBits, (uint64_t)v11._object);
  type metadata accessor for LinkShareActivityViewController();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD645380;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TULinkShareItem);
  *(_QWORD *)(v13 + 32) = v4;
  *(_QWORD *)(v13 + 88) = v6;
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 64) = v12;
  v15 = v4;
  v16 = v12;
  v17 = LinkShareActivityViewController.__allocating_init(activityItems:applicationActivities:)((void *)v13, 0);
  objc_msgSend(v17, sel_setOverrideUserInterfaceStyle_, 2);
  objc_msgSend(v17, sel_setAllowsCustomPresentationStyle_, 1);
  v18 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v19 = objc_msgSend(v18, sel_userInterfaceIdiom);

  if (v19 == (id)1)
  {
    swift_beginAccess();
    v20 = (void *)MEMORY[0x1C3B752C0](v3);
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v20, sel_traitCollection);

      v23 = objc_msgSend(v22, sel_horizontalSizeClass);
      if (v23 == (id)2)
        objc_msgSend(v17, sel_setModalPresentationStyle_, 2);
    }
  }
  swift_beginAccess();
  v24 = (void *)MEMORY[0x1C3B752C0](v3);
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, sel_presentViewController_animated_completion_, v17, 1, 0);

  }
}

uint64_t closure #3 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  RecentsListViewController.dataSource.getter();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
  v6 = type metadata accessor for IndexPath();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a3, v6);
  (*(void (**)(uint64_t))(*(_QWORD *)v5 + 280))(v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  swift_retain();
  RecentsListViewController.removeRecentCallsAndReportIfNeeded(_:preparationHandler:)();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

void closure #1 in closure #3 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(char a1)
{
  id Strong;

  if ((a1 & 1) != 0)
  {
    Strong = (id)swift_unknownObjectUnownedLoadStrong();
    objc_msgSend(Strong, sel_setEditing_, 0);

  }
}

#error "1BD15F5B8: call analysis failed (funcsize=72)"

UITargetedPreview_optional __swiftcall RecentsListViewController.collectionView(_:previewForHighlightingContextMenuWithConfiguration:)(UICollectionView *_, UIContextMenuConfiguration previewForHighlightingContextMenuWithConfiguration)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  Class isa;
  UIView *v15;
  id v16;
  id v17;
  uint64_t v18;
  objc_class *v19;
  Swift::Bool v20;
  UITargetedPreview_optional result;

  OUTLINED_FUNCTION_93();
  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_138_0();
  v10 = OUTLINED_FUNCTION_28_29();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_4_1();
  v12 = v2 + OBJC_IVAR___FTRecentsListViewController_indexPathForMenu;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of FeatureEligibility?(v12, v5, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_69_0(v5, 1, v10);
  if (v13)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v5, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v3, v5, v10);
    isa = OUTLINED_FUNCTION_273().super.isa;
    v15 = (UIView *)objc_msgSend(v7, sel_cellForItemAtIndexPath_, isa);

    if (v15)
    {
      OUTLINED_FUNCTION_72(v4, 1);
      OUTLINED_FUNCTION_2_0();
      outlined assign with take of Participant?(v4, v12, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
      swift_endAccess();
      v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3B78]), sel_init);
      v17 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      objc_msgSend(v16, sel_setBackgroundColor_, v17);

      OUTLINED_FUNCTION_59(v18, &lazy cache variable for type metadata for UITargetedPreview);
      UITargetedPreview.__allocating_init(view:parameters:)(v15, (UIPreviewParameters)v16);
    }
    OUTLINED_FUNCTION_39_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  }
  OUTLINED_FUNCTION_52_1();
  result.value.super.isa = v19;
  result.is_nil = v20;
  return result;
}

void RecentsListViewController.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_28_29();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_138_0();
  if (v5 == 0xD00000000000001CLL && v3 == 0x80000001BD6762C0 || (OUTLINED_FUNCTION_13() & 1) != 0)
  {
    v9 = specialized ParticipantsViewController.participantsViewControllerDelegate.getter();
    MEMORY[0x1C3B7007C](v9);
    v10 = static IndexPath.== infix(_:_:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
    if ((v10 & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v11 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationKit);
      OUTLINED_FUNCTION_221(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
      OUTLINED_FUNCTION_16_31();
      v12 = Logger.logObject.getter();
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = OUTLINED_FUNCTION_105();
        v18 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v14 = 136315394;
        OUTLINED_FUNCTION_35_0();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v3, &v18);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v14 + 12) = 2080;
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
        v15 = OUTLINED_FUNCTION_229_0();
        OUTLINED_FUNCTION_274(v15, v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_316();
        OUTLINED_FUNCTION_218(&dword_1BD004000, v12, v17, "Ending Displaying SupplementalView of kind %s at index %s");
        OUTLINED_FUNCTION_194();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_316();

      *(_BYTE *)(v0 + OBJC_IVAR___FTRecentsListViewController_headerViewIsPresented) = 0;
      RecentsListViewController.tipKitStopObservation()();
    }
  }
  OUTLINED_FUNCTION_52_1();
}

void RecentsListViewController.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_28_29();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  if (v4 == 0xD00000000000001CLL && v2 == 0x80000001BD6762C0
    || (OUTLINED_FUNCTION_202_0(), (OUTLINED_FUNCTION_13() & 1) != 0))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationKit);
    OUTLINED_FUNCTION_221(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    OUTLINED_FUNCTION_16_31();
    v8 = Logger.logObject.getter();
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v10 = 136315394;
      OUTLINED_FUNCTION_86();
      v11 = OUTLINED_FUNCTION_202_0();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v10 + 12) = 2080;
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
      v14 = OUTLINED_FUNCTION_229_0();
      OUTLINED_FUNCTION_274(v14, v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      OUTLINED_FUNCTION_218(&dword_1BD004000, v8, v16, "Started displaying SupplementalView of kind %s at index %s");
      OUTLINED_FUNCTION_194();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));

    *(_BYTE *)(v0 + OBJC_IVAR___FTRecentsListViewController_headerViewIsPresented) = 1;
  }
  OUTLINED_FUNCTION_52_1();
}

void @objc RecentsListViewController.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void);
  void (*v23)(void);
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  id v35;
  id v36;

  OUTLINED_FUNCTION_93();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v30 = OUTLINED_FUNCTION_28_29();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  v34 = v27;
  v35 = v25;
  v36 = v29;
  v23();

  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_39_0((uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
  OUTLINED_FUNCTION_52_1();
}

void RecentsListViewController.showLinkDetailViewController(for:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _UNKNOWN **);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  __int128 v18;
  uint64_t v19;
  _BYTE v20[40];

  v2 = v1;
  v4 = type metadata accessor for RecentsCallItem(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v6, v7);
  type metadata accessor for LinkDetailViewModel();
  swift_allocObject();
  v8 = LinkDetailViewModel.init(recentsCallItem:)((uint64_t)v6);
  if (v8)
  {
    v9 = v8;
    outlined init with copy of FeatureEligibility?((uint64_t)v2 + OBJC_IVAR___FTRecentsListViewController_detailControllerFactory, (uint64_t)&v18, &demangling cache variable for type metadata for RecentCallDetailControllerFactoryProtocol?);
    if (v19)
    {
      outlined init with take of Notice(&v18, (uint64_t)v20);
      v10 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v9 + 416);
      v11 = swift_unknownObjectRetain();
      v10(v11, &protocol witness table for RecentsListViewController);
      swift_retain();
      RecentsListViewController.linkController.getter();
      v13 = v12;
      outlined init with copy of RadarReporting((uint64_t)v20, (uint64_t)&v18);
      v14 = objc_allocWithZone((Class)type metadata accessor for LinkDetailViewController());
      v15 = LinkDetailViewController.init(viewModel:linkController:detailControllerFactory:)(v9, v13, (uint64_t)&v18);
      v16 = objc_msgSend(v2, sel_navigationController);
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v16, sel_pushViewController_animated_, v15, 1);

      }
      RecentsListViewController.engaged(with:)(a1);

      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
    else
    {
      swift_release();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v18, &demangling cache variable for type metadata for RecentCallDetailControllerFactoryProtocol?);
    }
  }
}

Swift::Void __swiftcall RecentsListViewController.showLinkDetailViewController(for:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_6_6();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v3 = OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_0_7();
  if ((RecentsListViewController.viewDidFinishInitialLoad.getter() & 1) != 0)
  {
    RecentsListViewController.dataSource.getter();
    v6 = (void *)OUTLINED_FUNCTION_79_8(v5);
    OUTLINED_FUNCTION_43();
    v7 = OUTLINED_FUNCTION_124_0();
    v8(v7);

    v9 = OUTLINED_FUNCTION_312();
    v11 = OUTLINED_FUNCTION_69_0(v9, v10, v3);
    if (v12)
    {
      OUTLINED_FUNCTION_219(v11, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v13 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
      OUTLINED_FUNCTION_124();
      v14 = MEMORY[0x1E0DEA968];
      String.init<A>(reflecting:)();
      *(_QWORD *)(v13 + 56) = v14;
      v15 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_252(v15);
      OUTLINED_FUNCTION_190();
      OUTLINED_FUNCTION_53();
    }
    else
    {
      v18 = OUTLINED_FUNCTION_311_0();
      OUTLINED_FUNCTION_64_5(v18, v19);
      RecentsListViewController.showLinkDetailViewController(for:)(v1);
      outlined destroy of RecentsCallItem(v1, type metadata accessor for RecentsCallItem);
    }
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    OUTLINED_FUNCTION_124();
    v16 = OUTLINED_FUNCTION_124_0();
    RecentsListViewController.pseudonymForDeferredLinkDetailPresentation.setter(v16, v17);
  }
}

uint64_t RecentsListViewController.handleDeferredLinkDetailPresentation()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t result;

  v1 = *(void **)(v0 + OBJC_IVAR___FTRecentsListViewController_pseudonymForDeferredLinkDetailPresentation + 8);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR___FTRecentsListViewController_pseudonymForDeferredLinkDetailPresentation);
    swift_bridgeObjectRetain();
    v3._countAndFlagsBits = v2;
    v3._object = v1;
    RecentsListViewController.showLinkDetailViewController(for:)(v3);
    swift_bridgeObjectRelease();
    return RecentsListViewController.pseudonymForDeferredLinkDetailPresentation.setter(0, 0);
  }
  return result;
}

void RecentsListViewController.showVideoPlayerForMessage(withUUID:bypassSafety:)()
{
  os_log_type_t v0;
  uint64_t v1;
  os_log_type_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  LODWORD(v39) = v3;
  v40 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OUTLINED_FUNCTION_33_0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  if ((RecentsListViewController.viewDidFinishInitialLoad.getter() & 1) != 0
    && (RecentsListViewController.dataSource.getter(),
        OUTLINED_FUNCTION_120(),
        v19 = (*(uint64_t (**)(void))(v18 + 152))(),
        OUTLINED_FUNCTION_43(),
        (v19 & 1) != 0))
  {
    RecentsListViewController.dataSource.getter();
    v21 = (_QWORD *)OUTLINED_FUNCTION_79_8(v20);
    OUTLINED_FUNCTION_43();
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v21) + 0x1C8))(v40);

    OUTLINED_FUNCTION_69_0((uint64_t)v12, 1, v13);
    if (v22)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
      if (one-time initialization token for videoMessaging != -1)
        swift_once();
      v23 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v23, (uint64_t)&static Logger.videoMessaging);
      v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      v24(v1, v40, v8);
      v25 = Logger.logObject.getter();
      v26 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_4_14(v26))
      {
        v27 = (uint8_t *)OUTLINED_FUNCTION_105();
        v40 = OUTLINED_FUNCTION_105();
        v42 = v40;
        *(_DWORD *)v27 = 136315138;
        v39 = v27 + 4;
        v24((uint64_t)v7, v1, v8);
        OUTLINED_FUNCTION_72((uint64_t)v7, 0);
        specialized >> prefix<A>(_:)((uint64_t)v7);
        v29 = v28;
        v31 = v30;
        OUTLINED_FUNCTION_32_18(v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v31, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_54_1();
        OUTLINED_FUNCTION_39_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
        OUTLINED_FUNCTION_48(&dword_1BD004000, v25, v2, "Failed to look up video message with uuid %s to launch video player", v27);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_39_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));

    }
    else
    {
      OUTLINED_FUNCTION_64_5((uint64_t)v12, v17);
      RecentsListViewController.showVideoPlayerForMessage(targetItem:bypassSafety:)(v17, v39 & 1);
      outlined destroy of RecentsCallItem(v17, type metadata accessor for RecentsCallItem);
    }
  }
  else
  {
    v32 = RecentsListViewController.viewDidFinishInitialLoad.getter();
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v33 = OUTLINED_FUNCTION_17_2();
    v34 = OUTLINED_FUNCTION_3(v33, (uint64_t)&static Logger.videoMessaging);
    v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v36 = 67109120;
      LODWORD(v42) = v32 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v34, v35, "Delay video message showing viewLoaded: %{BOOL}d", v36, 8u);
      OUTLINED_FUNCTION_60();
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, v40, v8);
    OUTLINED_FUNCTION_72((uint64_t)v7, 0);
    v37 = OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_336(v37, v38, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    swift_endAccess();
  }
  OUTLINED_FUNCTION_52_1();
}

void RecentsListViewController.showVideoPlayerForMessage(targetItem:bypassSafety:)(uint64_t a1, int a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint8_t *v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  char v49;
  uint8_t *v50;
  _BYTE v51[4];
  int v52;
  _BYTE *v53;
  uint64_t v54;

  v3 = v2;
  v54 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v6 = MEMORY[0x1E0C80A78](v5);
  v53 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v9 = &v51[-v8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = &v51[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v15 = &v51[-v14];
  v16 = type metadata accessor for URL();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = &v51[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!objc_msgSend(v2, sel_isViewLoaded))
  {
LABEL_9:
    if (objc_msgSend(v3, sel_isViewLoaded)
      && (RecentsListViewController.dataSource.getter(),
          v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 152))(v24),
          swift_release(),
          (v25 & 1) != 0))
    {
      if (one-time initialization token for videoMessaging != -1)
        swift_once();
      v26 = type metadata accessor for Logger();
      __swift_project_value_buffer(v26, (uint64_t)&static Logger.videoMessaging);
      v27 = Logger.logObject.getter();
      v28 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_1BD004000, v27, v28, "Not showing video message: Video message missing media url.", v29, 2u);
        MEMORY[0x1C3B751B8](v29, -1, -1);
      }

    }
    else
    {
      if (one-time initialization token for videoMessaging != -1)
        swift_once();
      v30 = type metadata accessor for Logger();
      __swift_project_value_buffer(v30, (uint64_t)&static Logger.videoMessaging);
      v31 = Logger.logObject.getter();
      v32 = static os_log_type_t.error.getter();
      v33 = os_log_type_enabled(v31, v32);
      v34 = (uint64_t)v53;
      if (v33)
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_1BD004000, v31, v32, "Not showing Video message: view is not loaded or in background.", v35, 2u);
        MEMORY[0x1C3B751B8](v35, -1, -1);
      }

      v36 = RecentsCallItem.messageIndicatorViewModel.getter();
      if (v36)
      {
        v37 = v36;
        v38 = objc_msgSend(v36, sel_messageUUID);

        if (v38)
        {
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          v39 = 0;
        }
        else
        {
          v39 = 1;
        }
        v41 = type metadata accessor for UUID();
        __swift_storeEnumTagSinglePayload(v34, v39, 1, v41);
        outlined init with take of Any?(v34, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      }
      else
      {
        v40 = type metadata accessor for UUID();
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v40);
      }
      v42 = (uint64_t)v3 + OBJC_IVAR___FTRecentsListViewController_messageUUIDForDeferredPresentation;
      swift_beginAccess();
      outlined assign with take of Participant?((uint64_t)v9, v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      swift_endAccess();
    }
    return;
  }
  v20 = RecentsCallItem.messageIndicatorViewModel.getter();
  if (!v20)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v16);
LABEL_8:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for URL?);
    goto LABEL_9;
  }
  v21 = v20;
  v52 = a2;
  v22 = objc_msgSend(v20, sel_mediaURL);

  if (v22)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v13, v23, 1, v16);
  outlined init with take of Any?((uint64_t)v13, (uint64_t)v15, &demangling cache variable for type metadata for URL?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) == 1)
    goto LABEL_8;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v19, v15, v16);
  RecentsListViewController.dataSource.getter();
  v44 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 152))(v43);
  swift_release();
  if ((v44 & 1) == 0)
  {
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v16);
    goto LABEL_9;
  }
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v45 = type metadata accessor for Logger();
  __swift_project_value_buffer(v45, (uint64_t)&static Logger.videoMessaging);
  v46 = Logger.logObject.getter();
  v47 = static os_log_type_t.info.getter();
  v48 = os_log_type_enabled(v46, v47);
  v49 = v52;
  if (v48)
  {
    v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v50 = 0;
    _os_log_impl(&dword_1BD004000, v46, v47, "Presenting video message player", v50, 2u);
    MEMORY[0x1C3B751B8](v50, -1, -1);
  }

  RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)((uint64_t)v19, v54, v49 & 1);
  (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v16);
}

Swift::Void __swiftcall RecentsListViewController.showSafetyIntervention()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  OUTLINED_FUNCTION_59(v0, (unint64_t *)&lazy cache variable for type metadata for SCUIInterventionViewController);
  v2 = specialized ParticipantsViewController.participantsViewControllerDelegate.getter();
  @nonobjc SCUIInterventionViewController.__allocating_init(workflow:contextDictionary:)(v2, v3);
  v12 = v4;
  objc_msgSend(v4, sel_setInterventionDelegate_, v1);
  OUTLINED_FUNCTION_40_3(v12, sel_setModalInPresentation_);
  objc_msgSend(v12, sel_setModalPresentationStyle_, 2);
  OUTLINED_FUNCTION_207_1(v1, sel_presentViewController_animated_completion_, v5, v6, v7, v8, v9, v10, v11, (uint64_t)v12);
  OUTLINED_FUNCTION_7_1(v13);
}

void closure #1 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    RecentsListViewController.dataSource.getter();
    v5 = v4;

    v6 = (_QWORD *)(*(uint64_t (**)(void))(*(_QWORD *)v5 + 168))();
    swift_release();
    (*(void (**)(_QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v6) + 0x1E8))(0, 0);

  }
}

void closure #2 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v5 = (void *)MEMORY[0x1C3B752C0](a1 + 16);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 1, 0);
    v7 = type metadata accessor for IndexPath();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v7);
    RecentsListViewController.joinCall(for:indexPath:)();

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  }
}

void closure #3 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  NSURL *v36;
  void *v37;
  void *v38;
  int v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  id v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URLComponents?);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v48 - v7;
  v9 = type metadata accessor for URL();
  v53 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URLComponents();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecentsCallItem.tuHandles.getter();
  specialized Collection.first.getter();
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    v48 = v11;
    v50 = v13;
    v51 = v12;
    URLComponents.init()();
    URLComponents.scheme.setter();
    URLComponents.path.setter();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<URLQueryItem>);
    type metadata accessor for URLQueryItem();
    v18 = swift_allocObject();
    v52 = xmmword_1BD6441D0;
    *(_OWORD *)(v18 + 16) = xmmword_1BD6441D0;
    v49 = v17;
    v19 = objc_msgSend(v17, sel_value);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    URLComponents.queryItems.setter();
    URLComponents.url.getter();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for URL?);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = v52;
      v22 = v50;
      v21 = v51;
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v2, v15, v51);
      __swift_storeEnumTagSinglePayload((uint64_t)v2, 0, 1, v21);
      specialized >> prefix<A>(_:)((uint64_t)v2);
      v24 = v23;
      v26 = v25;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v2, &demangling cache variable for type metadata for URLComponents?);
      *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v20 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v20 + 32) = v24;
      *(_QWORD *)(v20 + 40) = v26;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v21);
    }
    else
    {
      v27 = v53;
      v28 = v48;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v48, v8, v9);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = v52;
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v6, v28, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v9);
      specialized >> prefix<A>(_:)((uint64_t)v6);
      v31 = v30;
      v33 = v32;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for URL?);
      v34 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
      v35 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v29 + 64) = v35;
      *(_QWORD *)(v29 + 32) = v31;
      *(_QWORD *)(v29 + 40) = v33;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      URL._bridgeToObjectiveC()(v36);
      v38 = v37;
      v54 = 0;
      v39 = TUOpenURLWithError();

      v40 = v54;
      if (v39)
      {
        v41 = v54;

        (*(void (**)(char *, uint64_t))(v53 + 8))(v28, v9);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v51);

      }
      else
      {
        v42 = v34;
        v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = v52;
        v44 = v50;
        if (v40)
        {
          v54 = v40;
          type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSError);
          v45 = v40;
          v46 = String.init<A>(reflecting:)();
        }
        else
        {
          v47 = 0xE300000000000000;
          v46 = 7104878;
        }
        *(_QWORD *)(v43 + 56) = v42;
        *(_QWORD *)(v43 + 64) = v35;
        *(_QWORD *)(v43 + 32) = v46;
        *(_QWORD *)(v43 + 40) = v47;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v53 + 8))(v28, v9);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v51);

      }
    }
  }
}

void closure #4 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void closure #5 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  id v3;
  id v4;

  v1 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for RecentsCallItem(0) + 48));
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
      goto LABEL_3;
LABEL_7:
    swift_bridgeObjectRelease();
    return;
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_7;
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v1 & 0xC000000000000001) == 0, v1);
  if ((v1 & 0xC000000000000001) != 0)
    v3 = (id)MEMORY[0x1C3B73D18](0, v1);
  else
    v3 = *(id *)(v1 + 32);
  v4 = v3;
  swift_bridgeObjectRelease();
  CNContact.block()();

}

Swift::Void __swiftcall CNContact.block()()
{
  unint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  char *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;

  OUTLINED_FUNCTION_65_5();
  if (one-time initialization token for conversationKit != -1)
    goto LABEL_39;
  while (1)
  {
    v4 = OUTLINED_FUNCTION_17_2();
    v5 = __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationKit);
    v6 = (char *)(id)v0;
    v7 = v5;
    Logger.logObject.getter();
    v8 = OUTLINED_FUNCTION_12_0();
    v9 = 0x1F26E0000uLL;
    if (OUTLINED_FUNCTION_51_3(v8))
    {
      v10 = OUTLINED_FUNCTION_105();
      v44 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v10 = 136315394;
      v11 = OUTLINED_FUNCTION_257(v44, sel_phoneNumbers);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
      OUTLINED_FUNCTION_202_0();
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CNLabeledValue]);
      v12 = OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_16_26(v12, v13, v14, v15, v16);
      OUTLINED_FUNCTION_171();

      v17 = OUTLINED_FUNCTION_54_1();
      *(_WORD *)(v10 + 12) = 2080;
      v18 = OUTLINED_FUNCTION_257(v17, (const char *)0x1F26E0156);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      v19 = OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_16_26(v19, v20, v21, v22, v23);
      OUTLINED_FUNCTION_171();

      OUTLINED_FUNCTION_30_4();
      _os_log_impl(&dword_1BD004000, v7, (os_log_type_t)v1, "Block: blocking phoneNumbers %s \n\n emailAddreses: %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_257(v24, sel_phoneNumbers);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_4_39();
    v45 = MEMORY[0x1E0DEE9D8];
    if (v1 >> 62)
    {
      OUTLINED_FUNCTION_25_2();
      v25 = OUTLINED_FUNCTION_25_3();
    }
    else
    {
      v25 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_25_2();
    }
    v43 = v6;
    if (!v25)
    {
      OUTLINED_FUNCTION_53();
      v0 = MEMORY[0x1E0DEE9D8];
      goto LABEL_19;
    }
    if (v25 < 1)
      break;
    v26 = 0;
    v9 = v1 & 0xC000000000000001;
    do
    {
      if (v9)
        OUTLINED_FUNCTION_165_1();
      v2 = OUTLINED_FUNCTION_5_6(v1 + 8 * v26);
      v27 = objc_msgSend(objc_msgSend(v2, sel_value), sel_digits);
      OUTLINED_FUNCTION_14_18();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      v29 = v28;

      v30 = (id)TUHomeCountryCode();
      if (v30)
      {
        v5 = v30;
        v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v6 = v31;

      }
      else
      {
        v3 = 0;
        v6 = 0;
      }
      v32 = objc_allocWithZone(MEMORY[0x1E0DBD368]);
      OUTLINED_FUNCTION_53_15();
      OUTLINED_FUNCTION_40_1();
      if (v29)
        OUTLINED_FUNCTION_13_4();
      ++v26;
    }
    while (v25 != v26);
    OUTLINED_FUNCTION_53();
    v0 = v45;
LABEL_19:
    OUTLINED_FUNCTION_53();
    if (v0 >> 62)
    {
      OUTLINED_FUNCTION_5_0();
      v1 = OUTLINED_FUNCTION_237();
    }
    else
    {
      v1 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_5_0();
    }
    if (v1)
    {
      OUTLINED_FUNCTION_139_0();
      OUTLINED_FUNCTION_292();
      while (1)
      {
        v2 = (id)(v3 - 4);
        if (v9)
          OUTLINED_FUNCTION_60_12();
        v33 = OUTLINED_FUNCTION_286();
        v34 = v33;
        v35 = v3 - 3;
        if (__OFADD__(v2, 1))
          break;
        v36 = OUTLINED_FUNCTION_2_11((uint64_t)v33, sel_sharedPrivacyManager);
        if (!v36)
          goto LABEL_45;
        v2 = v36;
        OUTLINED_FUNCTION_197(v36, v6 + 3803, 1);

        ++v3;
        if (v35 == v1)
          goto LABEL_28;
      }
      __break(1u);
    }
    else
    {
LABEL_28:
      OUTLINED_FUNCTION_19_1();
      v37 = objc_msgSend(v43, sel_emailAddresses);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_37_0();
      if (v9 >> 62)
      {
        OUTLINED_FUNCTION_124();
        v0 = OUTLINED_FUNCTION_25_3();
        if (!v0)
        {
LABEL_36:
          OUTLINED_FUNCTION_19_1();
          OUTLINED_FUNCTION_8_0();
          return;
        }
      }
      else
      {
        v0 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        OUTLINED_FUNCTION_124();
        if (!v0)
          goto LABEL_36;
      }
      OUTLINED_FUNCTION_139_0();
      OUTLINED_FUNCTION_344();
      while (1)
      {
        if (v2)
          OUTLINED_FUNCTION_313();
        v38 = *(id *)(v9 + 8 * v3);
        v1 = (unint64_t)v38;
        v39 = v3 - 3;
        if (__OFADD__(v3 - 4, 1))
          break;
        v40 = OUTLINED_FUNCTION_9((uint64_t)v38, sel_sharedPrivacyManager);
        if (!v40)
          goto LABEL_46;
        v41 = v40;
        v42 = OUTLINED_FUNCTION_2_2((uint64_t)v40, sel_value);
        OUTLINED_FUNCTION_197(v41, v6 + 2452, 1);

        ++v3;
        if (v39 == v0)
          goto LABEL_36;
      }
    }
    __break(1u);
LABEL_39:
    swift_once();
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
}

void closure #6 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    RecentsListViewController.showGetMoreHelp()();

  }
}

uint64_t RecentsListViewController.showGetMoreHelp()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  Class isa;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  _QWORD v22[4];

  v1 = v0;
  v2 = type metadata accessor for URL();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for URLRequest();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CEF638]), sel_init);
  v8 = objc_msgSend((id)objc_opt_self(), sel_nonPersistentDataStore);
  objc_msgSend(v7, sel_setWebsiteDataStore_, v8);

  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CEF630]), sel_initWithFrame_configuration_, v7, 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend((id)objc_opt_self(), sel_waysToGetHelpURL);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  isa = URLRequest._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v9, sel_loadRequest_, isa);

  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F20]), sel_init);
  objc_msgSend(v13, sel_setView_, v9);
  v14 = objc_msgSend(v13, sel_navigationItem);
  v22[3] = type metadata accessor for RecentsListViewController(0);
  v22[0] = v1;
  objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v15 = v1;
  v16 = @nonobjc UIBarButtonItem.init(barButtonSystemItem:target:action:)(0, v22, (uint64_t)sel_dismissMoreHelp);
  objc_msgSend(v14, sel_setRightBarButtonItem_, v16);

  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3A40]), sel_initWithRootViewController_, v13);
  objc_msgSend(v17, sel_setModalPresentationStyle_, 2);
  v18 = objc_msgSend(v15, sel_presentedViewController);
  if (!v18)
    goto LABEL_4;
  v19 = v18;
  type metadata accessor for VideoMessagePlayerViewController();
  v20 = (id)swift_dynamicCastClass();
  if (!v20)
  {

LABEL_4:
    v20 = v15;
  }
  objc_msgSend(v20, sel_presentViewController_animated_completion_, v17, 1, 0);

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void closure #8 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)()
{
  RecentsCallItem.saveVideoMessage(_:)();
}

uint64_t closure #1 in RecentsListViewController.handleDeferredVideoMessagePresentation()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = type metadata accessor for RecentsCallItem(0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v10)
  {
    v11 = *(_QWORD *)a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v12 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v11, (uint64_t)v9, type metadata accessor for RecentsCallItem);
      if ((closure #1 in closure #1 in RecentsListViewController.handleDeferredVideoMessagePresentation()((uint64_t)v9, a2) & 1) != 0)break;
      outlined destroy of RecentsCallItem((uint64_t)v9, type metadata accessor for RecentsCallItem);
      v11 += v12;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    outlined init with take of StagedCollaboration((uint64_t)v9, a3, type metadata accessor for RecentsCallItem);
    v13 = 0;
  }
  else
  {
LABEL_6:
    v13 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a3, v13, 1, v6);
}

uint64_t closure #1 in closure #1 in RecentsListViewController.handleDeferredVideoMessagePresentation()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v33 = a2;
  v2 = type metadata accessor for UUID();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v31 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v9 = MEMORY[0x1E0C80A78](v8);
  v32 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v30 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v30 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v30 - v17;
  v19 = RecentsCallItem.messageIndicatorViewModel.getter();
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, sel_messageUUID);

    if (v21)
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v16, v22, 1, v2);
    outlined init with take of Any?((uint64_t)v16, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v2);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v13, v33, v2);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v2);
  v23 = (uint64_t)&v7[*(int *)(v5 + 48)];
  v24 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
  outlined init with copy of FeatureEligibility?((uint64_t)v18, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)v13, v23, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v2) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v23, 1, v2) == 1)
    {
      v25 = -1;
    }
    else
    {
      v24 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
      v25 = 0;
    }
  }
  else
  {
    v26 = (uint64_t)v32;
    outlined init with copy of FeatureEligibility?((uint64_t)v7, (uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v23, 1, v2) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v26, v2);
      v25 = 0;
      v24 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    }
    else
    {
      v27 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v31, v23, v2);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      v28 = *(void (**)(char *, uint64_t))(v3 + 8);
      v28(v27, v2);
      v24 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v28(v32, v2);
    }
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, v24);
  return v25 & 1;
}

void closure #2 in RecentsListViewController.handleDeferredVideoMessagePresentation()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD v26[2];
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = MEMORY[0x1C3B752C0](a2 + 16);
  if (v13)
  {
    v14 = (void *)v13;
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)&static Logger.videoMessaging);
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v16(v12, a3, v9);
    v17 = Logger.logObject.getter();
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v29 = a1;
      v19 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v31 = v28;
      v27 = v19;
      *(_DWORD *)v19 = 136315138;
      v26[1] = v19 + 4;
      v16(v8, (uint64_t)v12, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v9);
      specialized >> prefix<A>(_:)((uint64_t)v8);
      v21 = v20;
      v23 = v22;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v30 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      a1 = v29;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v24 = v27;
      _os_log_impl(&dword_1BD004000, v17, v18, "Video message loaded. uuid %s", v27, 0xCu);
      v25 = v28;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v25, -1, -1);
      MEMORY[0x1C3B751B8](v24, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }

    RecentsListViewController.clearDeferredVideoMessagePresetation()();
    RecentsListViewController.showVideoPlayerForMessage(targetItem:bypassSafety:)(a1, 0);

  }
}

void @nonobjc SCUIInterventionViewController.__allocating_init(workflow:contextDictionary:)(uint64_t a1, uint64_t a2)
{
  NSDictionary v3;
  id v4;

  if (a2)
  {
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_53();
  }
  else
  {
    v3.super.isa = 0;
  }
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_viewControllerWithWorkflow_contextDictionary_, a1, v3.super.isa);
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_18();
}

void RecentsListViewController.didConfirm(forInterventionViewController:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_30_6();
  if (a1)
  {
    objc_opt_self();
    v5 = (void *)OUTLINED_FUNCTION_328();
    if (v5)
      OUTLINED_FUNCTION_54_17(v5, sel_dismissViewControllerAnimated_completion_);
  }
  v6 = (uint64_t)v2 + OBJC_IVAR___FTRecentsListViewController_messageUUIDForDeferredPresentation;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of FeatureEligibility?(v6, v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF10Foundation4UUIDV_s5NeverOytTg5141_s15ConversationKit25RecentsListViewControllerC10didConfirm015forInterventioneF0ySo25SCUIInterventionContainer_pSg_tFy10Foundation4UUIDVXEfU_0G3Kit0ijkL0CTf1cn_n(v1, v2);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v7 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_77_0(v1, v8, v9, v7);
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Participant?(v1, v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  swift_endAccess();
  OUTLINED_FUNCTION_91();
}

void RecentsListViewController.didReject(forInterventionViewController:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_30_6();
  if (a1)
  {
    objc_opt_self();
    v5 = (void *)OUTLINED_FUNCTION_328();
    if (v5)
      OUTLINED_FUNCTION_54_17(v5, sel_dismissViewControllerAnimated_completion_);
  }
  v6 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_77_0(v1, v7, v8, v6);
  v9 = v2 + OBJC_IVAR___FTRecentsListViewController_messageUUIDForDeferredPresentation;
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Participant?(v1, v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void @objc RecentsListViewController.didConfirm(forInterventionViewController:)()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  OUTLINED_FUNCTION_310_0();
  v3 = v2;
  swift_unknownObjectRetain();
  v4 = v3;
  v0(v1);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_15_9(v4);
}

void RecentsListViewController.dismissMoreHelp()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, sel_presentedViewController);
  if (!v1)
    goto LABEL_4;
  v2 = v1;
  type metadata accessor for VideoMessagePlayerViewController();
  v3 = (id)swift_dynamicCastClass();
  if (!v3)
  {

LABEL_4:
    v3 = v0;
  }
  v4 = v3;
  objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);

}

void WeakBox<>.recentCallsDidChange()()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD1629C8(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  if (a1)
  {
    if (objc_msgSend(a1, sel_isViewLoaded))
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.default.getter();
      OUTLINED_FUNCTION_255();
      RecentsListViewController.dataSource.getter();
      v3 = (void *)OUTLINED_FUNCTION_79_8(v2);
      OUTLINED_FUNCTION_43();
      v4 = specialized ParticipantsViewController.participantsViewControllerDelegate.getter();
      v5(v4);

      RecentsListViewController.reloadEditMenu()();
    }

  }
  OUTLINED_FUNCTION_9_0();
}

void protocol witness for RecentCallProviderDelegate.recentCallsDidChange() in conformance <> WeakBox<A>()
{
  WeakBox<>.recentCallsDidChange()();
}

void AvatarViewControllerDelegateWrapper.hostingViewController.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD162ADC()
{
  OUTLINED_FUNCTION_32();
}

void AvatarViewControllerDelegateWrapper.hostingViewController.setter(void *a1)
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_21_6();
  swift_unknownObjectWeakAssign();

  OUTLINED_FUNCTION_43_1();
}

void AvatarViewControllerDelegateWrapper.hostingViewController.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit35AvatarViewControllerDelegateWrapper_hostingViewController;
  v3[4] = v1;
  v3[5] = v4;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD162B74(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

void AvatarViewControllerDelegateWrapper.hostingViewController.modify()
{
  id *v0;
  void *v1;
  char v2;

  OUTLINED_FUNCTION_331();
  swift_unknownObjectWeakAssign();
  if ((v2 & 1) != 0)
  {

    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();

  }
  OUTLINED_FUNCTION_4_2(v0);
}

void *AvatarViewControllerDelegateWrapper.init(hostingViewController:)()
{
  void *v0;
  objc_super v2;

  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_337();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AvatarViewControllerDelegateWrapper();
  objc_msgSendSuper2(&v2, sel_init);
  OUTLINED_FUNCTION_49_5();
  return v0;
}

uint64_t AvatarViewControllerDelegateWrapper.hostingViewController(for:)()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  uint64_t v9;

  result = OUTLINED_FUNCTION_306_0(*v0);
  if (!result)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v2 = OUTLINED_FUNCTION_17_2();
    v3 = (void *)OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationKit);
    v4 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_131_0(v4))
    {
      v5 = (_DWORD *)OUTLINED_FUNCTION_105();
      v9 = OUTLINED_FUNCTION_105();
      *v5 = 136446210;
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000001BLL, 0x80000001BD676380, &v9);
      OUTLINED_FUNCTION_253();
      OUTLINED_FUNCTION_86_5(&dword_1BD004000, v6, v7, "AvatarViewControllerDelegateWrapper %{public}s: hostingViewController is unexpectedly nil, this is a fatal error.");
      OUTLINED_FUNCTION_102_1();
      OUTLINED_FUNCTION_60();
    }

    _StringGuts.grow(_:)(105);
    OUTLINED_FUNCTION_192(0xD000000000000024, (uint64_t)"AvatarViewControllerDelegateWrapper ");
    v8._object = (void *)0x80000001BD676380;
    v8._countAndFlagsBits = 0xD00000000000001BLL;
    String.append(_:)(v8);
    OUTLINED_FUNCTION_192(0xD000000000000043, (uint64_t)": hostingViewController is unexpectedly nil, this is a fatal error.");
    result = OUTLINED_FUNCTION_254();
    __break(1u);
  }
  return result;
}

id AvatarViewControllerDelegateWrapper.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_init);
}

void AvatarViewControllerDelegateWrapper.init()()
{
  OUTLINED_FUNCTION_300();
  __break(1u);
}

id AvatarViewControllerDelegateWrapper.__deallocating_deinit(uint64_t a1)
{
  return RecentsHeaderButtonsView.__deallocating_deinit(a1, type metadata accessor for AvatarViewControllerDelegateWrapper);
}

void RecentsListViewController.peoplePickerInvited(_:withVideo:button:senderIdentity:messagesGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;

  OUTLINED_FUNCTION_114_4(*v5);
  OUTLINED_FUNCTION_120();
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(v10 + 128))(a1, a2, a4, 0, a5);
  v11 = OUTLINED_FUNCTION_43();
  v12 = OUTLINED_FUNCTION_123(v11, sel_presentedViewController);
  if (v12)
  {
    v13 = v12;
    OUTLINED_FUNCTION_54_17(v12, sel_dismissViewControllerAnimated_completion_);
    OUTLINED_FUNCTION_42_0(v13);
  }
  else
  {
    OUTLINED_FUNCTION_49_0();
  }
}

Swift::Void __swiftcall RecentsListViewController.peoplePickerCancelled()()
{
  uint64_t v0;
  id v1;
  void *v2;

  v1 = OUTLINED_FUNCTION_25_1(v0, sel_presentedViewController);
  if (v1)
  {
    v2 = v1;
    OUTLINED_FUNCTION_54_17(v1, sel_dismissViewControllerAnimated_completion_);

  }
  RecentsListViewController.fadeInNavigationController()();
}

void RecentsListViewController.fadeInNavigationController()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v1 = objc_msgSend(v0, sel_navigationController);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_view);

    if (v3)
    {
      objc_msgSend(v3, sel_alpha);
      v5 = v4;

      if (v5 == 0.0)
      {
        v6 = (void *)objc_opt_self();
        v7 = swift_allocObject();
        *(_QWORD *)(v7 + 16) = v0;
        v10[4] = partial apply for closure #1 in RecentsListViewController.fadeInNavigationController();
        v10[5] = v7;
        v10[0] = MEMORY[0x1E0C809B0];
        v10[1] = 1107296256;
        v10[2] = thunk for @escaping @callee_guaranteed () -> ();
        v10[3] = &block_descriptor_129;
        v8 = _Block_copy(v10);
        v9 = v0;
        swift_release();
        objc_msgSend(v6, sel_animateWithDuration_animations_, v8, 0.3);
        _Block_release(v8);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void RecentsListViewController.peoplePickerRequestedDialCall(using:video:contact:handle:senderIdentity:ttyType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;

  OUTLINED_FUNCTION_114_4(*v6);
  OUTLINED_FUNCTION_120();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 136))(a1, a2, a3, a4, a5, a6);
  v14 = OUTLINED_FUNCTION_43();
  v15 = OUTLINED_FUNCTION_123(v14, sel_presentedViewController);
  if (v15)
  {
    v16 = v15;
    OUTLINED_FUNCTION_54_17(v15, sel_dismissViewControllerAnimated_completion_);
    OUTLINED_FUNCTION_4_21(v16);
  }
}

void RecentsListViewController.peoplePickerSentInvitation(with:facetimeUnavailablePeople:facetimeAvailablePeople:shouldAddOtherInvitedToRemoteMembers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;

  OUTLINED_FUNCTION_114_4(*v4);
  OUTLINED_FUNCTION_120();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v9 + 144))(a1, a2, a3, a4, 0);
  v10 = OUTLINED_FUNCTION_43();
  v11 = OUTLINED_FUNCTION_123(v10, sel_presentedViewController);
  if (v11)
  {
    v12 = v11;
    OUTLINED_FUNCTION_54_17(v11, sel_dismissViewControllerAnimated_completion_);
    OUTLINED_FUNCTION_42_0(v12);
  }
  else
  {
    OUTLINED_FUNCTION_49_0();
  }
}

uint64_t RecentsListViewController.peoplePickerRequestedUnknownContactPopover(for:sourceView:sourceRect:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t *v6;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;

  result = OUTLINED_FUNCTION_308(*v6);
  if (result)
  {
    v15 = v14;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))(v15 + 16))(v6, a1, a2, ObjectType, v15, a3, a4, a5, a6);
    return swift_unknownObjectRelease();
  }
  return result;
}

void closure #1 in RecentsListViewController.fadeInNavigationController()(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(a1, sel_navigationController);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_view);

    if (v3)
    {
      objc_msgSend(v3, sel_setAlpha_, 1.0);

    }
    else
    {
      __break(1u);
    }
  }
}

void RecentsListViewController.contactStoreDidChange(_:)()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  os_log_t oslog;

  if (objc_msgSend(v0, sel_isViewLoaded))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v1 = type metadata accessor for Logger();
    __swift_project_value_buffer(v1, (uint64_t)&static Logger.conversationKit);
    v2 = Logger.logObject.getter();
    v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1BD004000, v2, v3, "ContactStoreDidChange. Reload data.", v4, 2u);
      MEMORY[0x1C3B751B8](v4, -1, -1);
    }

    RecentsListViewController.dataSource.getter();
    oslog = (os_log_t)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 168))(v5);
    swift_release();
    (*(void (**)(_QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & (uint64_t)oslog->isa) + 0x1E8))(0, 0);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationKit);
    oslog = (os_log_t)Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1BD004000, oslog, v7, "ContactStoreDidChange. Skip reload data before view is loaded.", v8, 2u);
      MEMORY[0x1C3B751B8](v8, -1, -1);
    }
  }

}

void @objc RecentsListViewController.deleteAllRecents(_:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v7 = type metadata accessor for Notification();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  v9 = a1;
  a4(v4);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
  OUTLINED_FUNCTION_91();
}

void closure #1 in RecentsListViewController.showMakoUserAlert()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  NSURL *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v3)
  {
    v4 = v3;
    URL.init(string:)();
    v5 = type metadata accessor for URL();
    v7 = 0;
    if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v5) != 1)
    {
      URL._bridgeToObjectiveC()(v6);
      v7 = v8;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
    }
    objc_msgSend(v4, sel_openSensitiveURL_withOptions_, v7, 0);

  }
}

void RecentsListViewController.coordinatorFinished(_:)(_QWORD *a1)
{
  RecentsListViewController.coordinatorFinished(_:)(a1);
}

{
  uint64_t v2;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  OUTLINED_FUNCTION_124_0();
  v2 = os_log(_:dso:log:type:_:)();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xC0))(v2);
  OUTLINED_FUNCTION_18();
}

void RecentsListViewController.coordinatorFailed(_:)(_QWORD *a1)
{
  RecentsListViewController.coordinatorFinished(_:)(a1);
}

void protocol witness for LinkCreationCoordinatorDelegate.coordinatorFinished(_:) in conformance RecentsListViewController(_QWORD *a1)
{
  RecentsListViewController.coordinatorFinished(_:)(a1);
}

void protocol witness for LinkCreationCoordinatorDelegate.coordinatorFailed(_:) in conformance RecentsListViewController(_QWORD *a1)
{
  RecentsListViewController.coordinatorFailed(_:)(a1);
}

void WeakBox<>.recentsHeaderButtonsView(_:didTapAction:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD163858(void *a1)
{
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  if (a1)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v6 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
    *(_BYTE *)(v4 - 105) = v2 & 1;
    v7 = String.init<A>(reflecting:)();
    v9 = v8;
    *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v6 + 32) = v7;
    *(_QWORD *)(v6 + 40) = v9;
    os_log(_:dso:log:type:_:)();
    v10 = OUTLINED_FUNCTION_30_4();
    if ((v2 & 1) != 0)
    {
      v15 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0xE8))(v10);
      OUTLINED_FUNCTION_4_24((uint64_t)v15, sel_didTapNewLinkButtonFrom_);

    }
    else
    {
      v11 = type metadata accessor for Tips.InvalidationReason();
      OUTLINED_FUNCTION_77_0(v1, v12, v13, v11);
      v14 = RecentsListViewController.tipKitDismissTip(_:)(v1);
      OUTLINED_FUNCTION_32_18(v14, (uint64_t *)&demangling cache variable for type metadata for Tips.InvalidationReason?);
      objc_msgSend(a1, sel_didTapNewCallButton);
    }

  }
  OUTLINED_FUNCTION_52_1();
}

void protocol witness for RecentsHeaderButtonsViewDelegate.recentsHeaderButtonsView(_:didTapAction:) in conformance <> WeakBox<A>()
{
  WeakBox<>.recentsHeaderButtonsView(_:didTapAction:)();
}

void RecentsListViewController.didJoinCall(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0_7();
  (*(void (**)(void))(*(_QWORD *)a1 + 432))();
  v7 = OUTLINED_FUNCTION_28_29();
  OUTLINED_FUNCTION_77_0((uint64_t)v5, v8, v9, v7);
  RecentsListViewController.joinCall(for:indexPath:)();
  v10 = OUTLINED_FUNCTION_131();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v10, v11);
  OUTLINED_FUNCTION_95_2(v1);
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall RecentsListViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  _QWORD *v2;
  uint64_t (*v3)(void);
  _BOOL8 v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _BOOL8 v13;
  objc_super v14;

  v5 = _;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for RecentsListViewController(0);
  objc_msgSendSuper2(&v14, sel_setEditing_animated_, v5, animated);
  v6 = (void *)OUTLINED_FUNCTION_307(*v2);
  objc_msgSend(v6, sel_setEditing_, v5);

  v8 = OUTLINED_FUNCTION_25_1(v7, sel_navigationController);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_setToolbarHidden_animated_, !v5, 1);

  }
  RecentsListViewController.deleteButtonItem.getter();
  v11 = v10;
  if (v5)
  {
    v12 = (void *)v3();
    outlined bridged method (ob) of @objc UICollectionView.indexPathsForSelectedItems.getter(v12);
    OUTLINED_FUNCTION_112_4();
    v13 = v5;
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v11, sel_setEnabled_, v13);

  OUTLINED_FUNCTION_49_0();
}

uint64_t RecentsListViewController.deleteButtonAction(_:)()
{
  _QWORD *v0;
  void *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x340))();
  result = outlined bridged method (ob) of @objc UICollectionView.indexPathsForSelectedItems.getter(v1);
  if (result)
  {
    v3 = result;
    if (*(_QWORD *)(result + 16))
    {
      RecentsListViewController.dataSource.getter();
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 280))(v3);
      swift_release();
      swift_bridgeObjectRelease();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      RecentsListViewController.removeRecentCallsAndReportIfNeeded(_:preparationHandler:)();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void closure #1 in RecentsListViewController.deleteButtonAction(_:)(char a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  if ((a1 & 1) != 0)
  {
    v2 = a2 + 16;
    swift_beginAccess();
    v3 = (void *)MEMORY[0x1C3B752C0](v2);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, sel_endEditing);

    }
  }
}

Swift::Void __swiftcall CNContact.unblock()()
{
  uint64_t v0;
  char *v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  id v11;
  void *v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;

  OUTLINED_FUNCTION_65_5();
  v6 = (unint64_t)OUTLINED_FUNCTION_25_1(v5, sel_phoneNumbers);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v20 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)v7 >> 62)
    goto LABEL_36;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_25_2();
  while (1)
  {
    v19 = (id)v0;
    if (!v8)
    {
      OUTLINED_FUNCTION_53();
      v0 = MEMORY[0x1E0DEE9D8];
      goto LABEL_16;
    }
    if (v8 < 1)
      break;
    for (i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_165_1();
      v1 = (char *)OUTLINED_FUNCTION_5_6(v7 + 8 * i);
      v6 = (unint64_t)objc_msgSend(v1, sel_value);
      v3 = objc_msgSend((id)v6, sel_digits);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_324_0();
      if ((id)TUHomeCountryCode())
      {
        OUTLINED_FUNCTION_19_16();
        OUTLINED_FUNCTION_271_0();
      }
      else
      {
        v3 = 0;
        v4 = 0;
      }
      v10 = objc_allocWithZone(MEMORY[0x1E0DBD368]);
      OUTLINED_FUNCTION_53_15();
      OUTLINED_FUNCTION_40_1();
      if (v2)
        OUTLINED_FUNCTION_13_4();
    }
    OUTLINED_FUNCTION_53();
    v0 = v20;
LABEL_16:
    OUTLINED_FUNCTION_53();
    if ((unint64_t)v0 >> 62)
    {
      if (v0 < 0)
        v6 = v0;
      else
        v6 = v0 & 0xFFFFFFFFFFFFFF8;
      OUTLINED_FUNCTION_5_0();
      v7 = OUTLINED_FUNCTION_188();
    }
    else
    {
      v7 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_5_0();
    }
    if (v7)
    {
      OUTLINED_FUNCTION_139_0();
      OUTLINED_FUNCTION_292();
      while (1)
      {
        v1 = (char *)v3 - 4;
        if (v6)
          OUTLINED_FUNCTION_60_12();
        v11 = OUTLINED_FUNCTION_286();
        v12 = v11;
        v2 = (char *)v3 - 3;
        if (__OFADD__(v1, 1))
          break;
        v13 = (char *)OUTLINED_FUNCTION_2_11((uint64_t)v11, sel_sharedPrivacyManager);
        if (!v13)
          goto LABEL_47;
        v1 = v13;
        OUTLINED_FUNCTION_197(v13, (SEL)(v4 + 3803), 0);

        v3 = (char *)v3 + 1;
        if (v2 == (char *)v7)
          goto LABEL_25;
      }
      __break(1u);
    }
    else
    {
LABEL_25:
      OUTLINED_FUNCTION_19_1();
      v14 = objc_msgSend(v19, sel_emailAddresses);
      OUTLINED_FUNCTION_325_0();
      OUTLINED_FUNCTION_37_0();
      if (v6 >> 62)
      {
        OUTLINED_FUNCTION_124();
        v0 = OUTLINED_FUNCTION_25_3();
        if (!v0)
        {
LABEL_33:
          OUTLINED_FUNCTION_19_1();
          OUTLINED_FUNCTION_8_0();
          return;
        }
      }
      else
      {
        v0 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        OUTLINED_FUNCTION_124();
        if (!v0)
          goto LABEL_33;
      }
      OUTLINED_FUNCTION_139_0();
      OUTLINED_FUNCTION_344();
      while (1)
      {
        if (v1)
          OUTLINED_FUNCTION_313();
        v15 = *(id *)(v6 + 8 * (_QWORD)v3);
        v7 = (uint64_t)v15;
        v2 = (char *)v3 - 3;
        if (__OFADD__((char *)v3 - 4, 1))
          break;
        v16 = OUTLINED_FUNCTION_9((uint64_t)v15, sel_sharedPrivacyManager);
        if (!v16)
          goto LABEL_48;
        v17 = v16;
        v18 = OUTLINED_FUNCTION_2_2((uint64_t)v16, sel_value);
        OUTLINED_FUNCTION_197(v17, (SEL)(v4 + 2452), 0);

        v3 = (char *)v3 + 1;
        if (v2 == (char *)v0)
          goto LABEL_33;
      }
    }
    __break(1u);
LABEL_36:
    if (v7 < 0)
      v6 = v7;
    else
      v6 = v7 & 0xFFFFFFFFFFFFFF8;
    OUTLINED_FUNCTION_25_2();
    v8 = OUTLINED_FUNCTION_188();
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
}

Swift::Bool __swiftcall CNContact.isBlocked()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t i;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  unsigned __int8 v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v25;
  uint64_t v26;

  OUTLINED_FUNCTION_65_5();
  v3 = (unint64_t)OUTLINED_FUNCTION_25_1(v2, sel_phoneNumbers);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNLabeledValue);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v26 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)v4 >> 62)
    goto LABEL_38;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  LOBYTE(v6) = OUTLINED_FUNCTION_25_2();
  while (1)
  {
    v25 = (void *)v0;
    if (!v5)
    {
      OUTLINED_FUNCTION_53();
      v0 = MEMORY[0x1E0DEE9D8];
      goto LABEL_15;
    }
    if (v5 < 1)
      break;
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_165_1();
      v3 = (unint64_t)objc_msgSend(OUTLINED_FUNCTION_5_6(v4 + 8 * i), sel_value);
      v8 = objc_msgSend((id)v3, sel_digits);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_324_0();
      if ((id)TUHomeCountryCode())
      {
        OUTLINED_FUNCTION_19_16();
        OUTLINED_FUNCTION_271_0();
      }
      v9 = objc_allocWithZone(MEMORY[0x1E0DBD368]);
      OUTLINED_FUNCTION_53_15();
      OUTLINED_FUNCTION_40_1();
      if (v1)
        OUTLINED_FUNCTION_13_4();
    }
    OUTLINED_FUNCTION_53();
    v0 = v26;
LABEL_15:
    OUTLINED_FUNCTION_53();
    if ((unint64_t)v0 >> 62)
    {
      if (v0 < 0)
        v3 = v0;
      else
        v3 = v0 & 0xFFFFFFFFFFFFFF8;
      OUTLINED_FUNCTION_5_0();
      v10 = OUTLINED_FUNCTION_188();
    }
    else
    {
      v10 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_5_0();
    }
    if (v10)
    {
      OUTLINED_FUNCTION_139_0();
      v3 = v0 & 0xC000000000000001;
      v11 = 4;
      while (1)
      {
        v4 = v11 - 4;
        if (v3)
          OUTLINED_FUNCTION_60_12();
        v12 = OUTLINED_FUNCTION_286();
        v13 = v12;
        v14 = v11 - 3;
        if (__OFADD__(v4, 1))
          break;
        v6 = OUTLINED_FUNCTION_6_7((uint64_t)v12, sel_sharedPrivacyManager);
        if (!v6)
          goto LABEL_49;
        v1 = v6;
        v15 = objc_msgSend(v6, sel_isIncomingCommunicationBlockedForPhoneNumber_, v13);

        ++v11;
        if (v14 == v10)
          goto LABEL_26;
      }
      __break(1u);
    }
    else
    {
      v15 = 0;
LABEL_26:
      OUTLINED_FUNCTION_19_1();
      v16 = objc_msgSend(v25, sel_emailAddresses);
      OUTLINED_FUNCTION_325_0();
      OUTLINED_FUNCTION_37_0();
      if (v3 >> 62)
      {
        OUTLINED_FUNCTION_124();
        v0 = OUTLINED_FUNCTION_25_3();
        if (!v0)
        {
LABEL_35:
          OUTLINED_FUNCTION_19_1();
          LOBYTE(v6) = v15;
          return (char)v6;
        }
      }
      else
      {
        v0 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        OUTLINED_FUNCTION_124();
        if (!v0)
          goto LABEL_35;
      }
      OUTLINED_FUNCTION_139_0();
      v1 = (void *)(v3 & 0xC000000000000001);
      v17 = 4;
      while (1)
      {
        v4 = v17 - 4;
        if (v1)
        {
          v18 = OUTLINED_FUNCTION_131();
          v19 = (id)MEMORY[0x1C3B73D18](v18);
        }
        else
        {
          v19 = *(id *)(v3 + 8 * v17);
        }
        v20 = v19;
        v21 = v17 - 3;
        if (__OFADD__(v4, 1))
          break;
        v6 = OUTLINED_FUNCTION_9((uint64_t)v19, sel_sharedPrivacyManager);
        if (!v6)
          goto LABEL_50;
        v22 = v6;
        v23 = OUTLINED_FUNCTION_2_11((uint64_t)v6, sel_value);
        v15 = objc_msgSend(v22, sel_isIncomingCommunicationBlockedForEmailAddress_, v23);

        ++v17;
        if (v21 == v0)
          goto LABEL_35;
      }
    }
    __break(1u);
LABEL_38:
    if (v4 < 0)
      v3 = v4;
    else
      v3 = v4 & 0xFFFFFFFFFFFFFF8;
    OUTLINED_FUNCTION_25_2();
    v6 = (id)OUTLINED_FUNCTION_188();
    v5 = (uint64_t)v6;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return (char)v6;
}

Swift::Void __swiftcall TUHandle.unblock()()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  TUHandle.unblock()(0, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17,
    v18,
    v19,
    v20,
    v21,
    v22);
}

void @objc TUHandle.unblock()(void *a1)
{
  id v1;

  v1 = a1;
  TUHandle.unblock()();

}

Swift::Void __swiftcall TUHandle.block()()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  TUHandle.unblock()(1, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17,
    v18,
    v19,
    v20,
    v21,
    v22);
}

void TUHandle.unblock()(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v24;
  uint64_t v25;
  char v26;
  id v27;
  id v28;
  id v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  os_log_type_t v35;
  _DWORD *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;

  OUTLINED_FUNCTION_65_5();
  v26 = v25;
  v27 = OUTLINED_FUNCTION_25_1(v25, sel_type);
  if (v27 == (id)1)
    goto LABEL_17;
  if (v27 == (id)2)
  {
    OUTLINED_FUNCTION_25_1(2, sel_value);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_322();
    if ((id)TUHomeCountryCode())
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_264();
    }
    v45 = objc_allocWithZone(MEMORY[0x1E0DBD368]);
    v46 = OUTLINED_FUNCTION_109_6();
    if (v46)
    {
      v47 = v46;
      v48 = objc_msgSend((id)objc_opt_self(), sel_sharedPrivacyManager);
      if (v48)
      {
        v49 = v48;
        objc_msgSend(v48, sel_setBlockIncomingCommunication_forPhoneNumber_, v26 & 1, v47);

        goto LABEL_16;
      }
      goto LABEL_19;
    }
LABEL_17:
    OUTLINED_FUNCTION_8_0();
    return;
  }
  if (v27 != (id)3)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v33 = OUTLINED_FUNCTION_17_2();
    v34 = (void *)__swift_project_value_buffer(v33, (uint64_t)&static Logger.conversationKit);
    v49 = v24;
    Logger.logObject.getter();
    v35 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_131_0(v35))
    {
      v36 = (_DWORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *v36 = 136315138;
      OUTLINED_FUNCTION_59((uint64_t)v49, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      v37 = v49;
      v38 = OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_16_26(v38, v39, v40, v41, v42);
      OUTLINED_FUNCTION_253();

      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_86_5(&dword_1BD004000, v43, v44, "Unknown handle type: %s");
      OUTLINED_FUNCTION_102_1();
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_16;
  }
  v28 = objc_msgSend((id)objc_opt_self(), sel_sharedPrivacyManager);
  v49 = v28;
  if (v28)
  {
    v29 = OUTLINED_FUNCTION_25_1((uint64_t)v28, sel_value);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_43_15();
    outlined bridged method (mnbnn) of @objc TUPrivacyManager.setBlockIncomingCommunication(_:forEmailAddress:)(v30, v31, v32, v49);
LABEL_16:

    return;
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void @objc TUHandle.block()(void *a1)
{
  id v1;

  v1 = a1;
  TUHandle.block()();

}

Swift::Bool __swiftcall TUHandle.isBlocked()()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  os_log_type_t v13;
  _DWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  unsigned __int8 v24;
  uint64_t v25;
  os_log_type_t v26;
  int v27;
  os_log_type_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  id v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v41[3];
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_3_0();
  v43 = v1;
  v44 = v2;
  v3 = v0;
  v42 = 0;
  v4 = OUTLINED_FUNCTION_25_1(v2, sel_type);
  if (v4 != (id)1)
  {
    if (v4 == (id)2)
    {
      OUTLINED_FUNCTION_123(2, sel_value);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      OUTLINED_FUNCTION_322();
      if ((id)TUHomeCountryCode())
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        OUTLINED_FUNCTION_264();
      }
      v21 = objc_allocWithZone(MEMORY[0x1E0DBD368]);
      v22 = OUTLINED_FUNCTION_109_6();
      if (!v22)
      {
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        v31 = OUTLINED_FUNCTION_17_2();
        __swift_project_value_buffer(v31, (uint64_t)&static Logger.conversationKit);
        v32 = OUTLINED_FUNCTION_64_7();
        Logger.logObject.getter();
        v33 = OUTLINED_FUNCTION_37_4();
        if (os_log_type_enabled(v0, v33))
        {
          v34 = (uint8_t *)OUTLINED_FUNCTION_105();
          v35 = OUTLINED_FUNCTION_105();
          v41[0] = v35;
          *(_DWORD *)v34 = 136315138;
          v36 = OUTLINED_FUNCTION_9(v35, sel_value);
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          OUTLINED_FUNCTION_272();
          v37 = OUTLINED_FUNCTION_199();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, v39);
          OUTLINED_FUNCTION_230();

          OUTLINED_FUNCTION_58_1();
          OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v33, "invalid formattedPhoneNumber, value: %s", v34);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_60();
        }

        goto LABEL_26;
      }
      v23 = v22;
      v5 = objc_msgSend((id)objc_opt_self(), sel_sharedPrivacyManager);
      if (v5)
      {
        v3 = v5;
        v24 = -[NSObject isIncomingCommunicationBlockedForPhoneNumber:](v5, sel_isIncomingCommunicationBlockedForPhoneNumber_, v23);

        v42 = v24;
        goto LABEL_16;
      }
    }
    else
    {
      if (v4 != (id)3)
      {
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        v11 = OUTLINED_FUNCTION_17_2();
        __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationKit);
        v12 = OUTLINED_FUNCTION_64_7();
        Logger.logObject.getter();
        v13 = OUTLINED_FUNCTION_37_4();
        if (OUTLINED_FUNCTION_131_0(v13))
        {
          v14 = (_DWORD *)OUTLINED_FUNCTION_105();
          v15 = OUTLINED_FUNCTION_105();
          v41[0] = v15;
          *v14 = 136315138;
          OUTLINED_FUNCTION_59(v15, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
          v16 = v12;
          v17 = String.init<A>(reflecting:)();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, v41);
          OUTLINED_FUNCTION_230();

          OUTLINED_FUNCTION_25();
          OUTLINED_FUNCTION_86_5(&dword_1BD004000, v19, v20, "Unknown handle type: %s");
          OUTLINED_FUNCTION_102_1();
          OUTLINED_FUNCTION_60();
        }

        goto LABEL_16;
      }
      v5 = objc_msgSend((id)objc_opt_self(), sel_sharedPrivacyManager);
      if (v5)
      {
        v6 = v5;
        v7 = OUTLINED_FUNCTION_123((uint64_t)v5, sel_value);
        OUTLINED_FUNCTION_19_16();
        OUTLINED_FUNCTION_342();
        OUTLINED_FUNCTION_296();
        v3 = outlined bridged method (mbnn) of @objc TUPrivacyManager.isIncomingCommunicationBlocked(forEmailAddress:)(v8, v9, v10);

        v42 = v3 & 1;
LABEL_16:
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        v25 = OUTLINED_FUNCTION_17_2();
        v26 = __swift_project_value_buffer(v25, (uint64_t)&static Logger.conversationKit);
        v27 = v42;
        v28 = v26;
        Logger.logObject.getter();
        v29 = OUTLINED_FUNCTION_37_4();
        if (OUTLINED_FUNCTION_13_0(v29))
        {
          v30 = (uint8_t *)OUTLINED_FUNCTION_105();
          *(_DWORD *)v30 = 67109120;
          LODWORD(v41[0]) = v27;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl(&dword_1BD004000, v3, v28, "handle isBlocked: %{BOOL}d", v30, 8u);
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_2_0();
        goto LABEL_26;
      }
      __break(1u);
    }
    __break(1u);
    return (char)v5;
  }
LABEL_26:
  OUTLINED_FUNCTION_0_20();
  return (char)v5;
}

void specialized WeakBox.init(_:)(void *a1)
{
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_337();

  OUTLINED_FUNCTION_9_0();
}

id @nonobjc TUPhoneNumber.init(digits:countryCode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  if (!a2)
  {
    v7 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v7 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v8 = (void *)MEMORY[0x1C3B72E00](a3, a4);
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = objc_msgSend(v4, sel_initWithDigits_countryCode_, v7, v8);

  return v9;
}

id thunk for @escaping @callee_guaranteed () -> (@owned UIViewController?)(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = (void *)v1(v2);
  swift_release();
  return v3;
}

id thunk for @escaping @callee_guaranteed (@guaranteed [UIMenuElement]) -> (@owned UIMenu?)(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenuElement);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

void specialized Array.replaceSubrange<A>(_:with:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  char v22;

  OUTLINED_FUNCTION_93();
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v4 = v2;
  v5 = *v0;
  v6 = *(_QWORD *)(*v0 + 16);
  if (v6 < v2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v7 = v1;
  v8 = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (__OFADD__(v6, v9))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v5;
  if (!isUniquelyReferenced_nonNull_native || v6 + v9 > *(_QWORD *)(v5 + 24) >> 1)
  {
    v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    *v0 = v5;
  }
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_193();
  v13 = v5 + v12;
  v15 = *(_QWORD *)(v14 + 72);
  v16 = v5 + v12 + v15 * v7;
  OUTLINED_FUNCTION_311_0();
  v17 = swift_arrayDestroy();
  if (!v9)
    goto LABEL_13;
  v18 = *(_QWORD *)(v5 + 16);
  if (__OFSUB__(v18, v4))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13 + v15 * v4, v18 - v4, v16 + v15);
  v19 = *(_QWORD *)(v5 + 16);
  v20 = __OFADD__(v19, v9);
  v21 = v19 + v9;
  if (!v20)
  {
    *(_QWORD *)(v5 + 16) = v21;
LABEL_13:
    if (v15 < 1)
    {
LABEL_17:
      OUTLINED_FUNCTION_96_3(v17, (uint64_t *)&demangling cache variable for type metadata for CollectionOfOne<Participant>);
      OUTLINED_FUNCTION_52_1();
      return;
    }
    v22 = 0;
    while ((v22 & 1) == 0)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v10, v13 + v15 * v7, type metadata accessor for Participant);
      v13 += v15;
      v22 = 1;
      if (v13 + v15 * (v7 - 1) >= v16)
        goto LABEL_17;
    }
    goto LABEL_24;
  }
LABEL_25:
  __break(1u);
}

{
  specialized Array.replaceSubrange<A>(_:with:)();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_96();
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_265();
  if (v6 != v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v5;
  v9 = v2 - v5;
  if (__OFSUB__(v2, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = v5 - v2;
  if (__OFSUB__(0, v9))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v3, v10))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!OUTLINED_FUNCTION_249_0() || v3 - v9 > *(_QWORD *)(v0 + 24) >> 1)
  {
    OUTLINED_FUNCTION_289_1();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v0 = v11;
  }
  v12 = v0 + 32 + 16 * v8;
  OUTLINED_FUNCTION_319();
  if (!v9)
    goto LABEL_13;
  v13 = *(_QWORD *)(v0 + 16);
  if (__OFSUB__(v13, v2))
    goto LABEL_19;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v0 + 32 + 16 * v2, v13 - v2, v12);
  v14 = *(_QWORD *)(v0 + 16);
  v7 = __OFADD__(v14, v10);
  v15 = v14 - v9;
  if (!v7)
  {
    *(_QWORD *)(v0 + 16) = v15;
LABEL_13:
    *v1 = v0;
    OUTLINED_FUNCTION_65_1();
    return;
  }
LABEL_20:
  __break(1u);
}

{
  specialized Array.replaceSubrange<A>(_:with:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  OUTLINED_FUNCTION_93();
  if (v3 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = v4;
  v6 = *v1;
  v7 = *(_QWORD *)(*v1 + 16);
  if (v7 < v4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v3;
  v9 = v4 - v3;
  if (__OFSUB__(v4, v3))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_310_0();
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 + v10 > *(_QWORD *)(v6 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v6 = v11;
  }
  v12 = v6 + 32 + 16 * v8;
  swift_arrayDestroy();
  if (!v10)
    goto LABEL_13;
  v13 = *(_QWORD *)(v6 + 16);
  if (__OFSUB__(v13, v5))
    goto LABEL_19;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(v6 + 32 + 16 * v5), v13 - v5, (char *)(v12 + 16));
  v14 = *(_QWORD *)(v6 + 16);
  v15 = __OFADD__(v14, v10);
  v16 = v14 + v10;
  if (!v15)
  {
    *(_QWORD *)(v6 + 16) = v16;
LABEL_13:
    *(_QWORD *)v12 = v2;
    *(_QWORD *)(v12 + 8) = v0;
    *v1 = v6;
    OUTLINED_FUNCTION_52_1();
    return;
  }
LABEL_20:
  __break(1u);
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_96();
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_265();
  if (v6 != v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v5;
  v9 = v2 - v5;
  if (__OFSUB__(v2, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = v5 - v2;
  if (__OFSUB__(0, v9))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v3, v10))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!OUTLINED_FUNCTION_249_0() || v3 - v9 > *(_QWORD *)(v0 + 24) >> 1)
  {
    OUTLINED_FUNCTION_289_1();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v0 = v11;
  }
  v12 = v0 + 32 + 40 * v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  OUTLINED_FUNCTION_319();
  if (!v9)
    goto LABEL_13;
  v13 = *(_QWORD *)(v0 + 16);
  if (__OFSUB__(v13, v2))
    goto LABEL_19;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v0 + 32 + 40 * v2, v13 - v2, v12);
  v14 = *(_QWORD *)(v0 + 16);
  v7 = __OFADD__(v14, v10);
  v15 = v14 - v9;
  if (!v7)
  {
    *(_QWORD *)(v0 + 16) = v15;
LABEL_13:
    *v1 = v0;
    OUTLINED_FUNCTION_65_1();
    return;
  }
LABEL_20:
  __break(1u);
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_96();
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_282();
  if (v6 != v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = v5;
  v9 = v2 - v5;
  if (__OFSUB__(v2, v5))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v10 = v5 - v2;
  if (__OFSUB__(0, v9))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = v3 - v9;
  if (__OFADD__(v3, v10))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (OUTLINED_FUNCTION_249_0() && v11 <= *(_QWORD *)(v0 + 24) >> 1)
  {
    if (!v10)
      goto LABEL_14;
  }
  else
  {
    OUTLINED_FUNCTION_289_1();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v0 = v12;
    if (!v10)
    {
LABEL_14:
      *v1 = v0;
      OUTLINED_FUNCTION_65_1();
      return;
    }
  }
  v13 = *(_QWORD *)(v0 + 16);
  if (__OFSUB__(v13, v2))
    goto LABEL_20;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(v0 + 32 + 4 * v2), v13 - v2, (char *)(v0 + 32 + 4 * v8));
  v14 = *(_QWORD *)(v0 + 16);
  v7 = __OFADD__(v14, v10);
  v15 = v14 + v10;
  if (!v7)
  {
    *(_QWORD *)(v0 + 16) = v15;
    goto LABEL_14;
  }
LABEL_21:
  __break(1u);
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_96();
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_282();
  if (v6 != v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = v5;
  v9 = v2 - v5;
  if (__OFSUB__(v2, v5))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v10 = v5 - v2;
  if (__OFSUB__(0, v9))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = v3 - v9;
  if (__OFADD__(v3, v10))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (OUTLINED_FUNCTION_249_0() && v11 <= *(_QWORD *)(v0 + 24) >> 1)
  {
    if (!v10)
      goto LABEL_14;
  }
  else
  {
    OUTLINED_FUNCTION_289_1();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v0 = v12;
    if (!v10)
    {
LABEL_14:
      *v1 = v0;
      OUTLINED_FUNCTION_65_1();
      return;
    }
  }
  v13 = *(_QWORD *)(v0 + 16);
  if (__OFSUB__(v13, v2))
    goto LABEL_20;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(v0 + 32 + v2), v13 - v2, (char *)(v0 + 32 + v8));
  v14 = *(_QWORD *)(v0 + 16);
  v7 = __OFADD__(v14, v10);
  v15 = v14 + v10;
  if (!v7)
  {
    *(_QWORD *)(v0 + 16) = v15;
    goto LABEL_14;
  }
LABEL_21:
  __break(1u);
}

{
  specialized Array.replaceSubrange<A>(_:with:)();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  void (*v4)(_QWORD);
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD);
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_42_2();
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v6 = v2;
  v7 = *v0;
  v8 = *(_QWORD *)(*v0 + 16);
  if (v8 < v2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = v1;
  v10 = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = v1 - v2;
  if (__OFSUB__(0, v10))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v8, v11))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = v4;
  v13 = v3;
  v23 = v5;
  if (!swift_isUniquelyReferenced_nonNull_native() || v8 - v10 > *(_QWORD *)(v7 + 24) >> 1)
    v7 = v13();
  v12(0);
  OUTLINED_FUNCTION_193();
  v15 = v7 + v14;
  v17 = *(_QWORD *)(v16 + 72);
  v18 = v7 + v14 + v17 * v9;
  swift_arrayDestroy();
  if (!v10)
    goto LABEL_13;
  v19 = *(_QWORD *)(v7 + 16);
  if (__OFSUB__(v19, v6))
    goto LABEL_19;
  v23(v15 + v17 * v6, v19 - v6, v18);
  v20 = *(_QWORD *)(v7 + 16);
  v21 = __OFADD__(v20, v11);
  v22 = v20 - v10;
  if (!v21)
  {
    *(_QWORD *)(v7 + 16) = v22;
LABEL_13:
    *v0 = v7;
    OUTLINED_FUNCTION_9_5();
    return;
  }
LABEL_20:
  __break(1u);
}

uint64_t specialized Array.replaceSubrange<A>(_:with:)()
{
  return specialized Array.replaceSubrange<A>(_:with:)();
}

{
  unint64_t *v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  unint64_t *v22;

  OUTLINED_FUNCTION_42_2();
  if (v7 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = v10;
    v2 = v9;
    v1 = v8;
    v4 = v7;
    v5 = *v0;
    if (!(*v0 >> 62))
    {
      v11 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  OUTLINED_FUNCTION_26_22();
  v11 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_21_0();
LABEL_4:
  if (v11 < v1)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (__OFSUB__(v1, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v3 = v4 - v1;
  if (__OFSUB__(0, v1 - v4))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v5 = *v0;
  v22 = v2;
  if (!(*v0 >> 62))
  {
    v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_34:
  OUTLINED_FUNCTION_26_22();
  v12 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_21_0();
LABEL_9:
  v13 = v12 + v3;
  if (__OFADD__(v12, v3))
  {
    __break(1u);
LABEL_36:
    OUTLINED_FUNCTION_26_22();
    v16 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_21_0();
    goto LABEL_17;
  }
  v5 = *v0;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v0 = v5;
  v21 = v6;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v15 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_20;
    v12 = 1;
  }
  if (v5 >> 62)
    goto LABEL_36;
  v16 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  if (v16 <= v13)
    v16 = v13;
  OUTLINED_FUNCTION_26_22();
  v5 = MEMORY[0x1C3B73D24](v12, v16, 1, v5);
  swift_bridgeObjectRelease();
  *v0 = v5;
  v15 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_20:
  v17 = v15 + 32 + 8 * v4;
  type metadata accessor for NSObject(0, v22);
  swift_arrayDestroy();
  if (!v3)
    return specialized Array._endMutation()();
  if (v5 >> 62)
  {
    OUTLINED_FUNCTION_26_22();
    v18 = OUTLINED_FUNCTION_175();
    OUTLINED_FUNCTION_21_0();
  }
  else
  {
    v18 = *(_QWORD *)(v15 + 16);
  }
  if (__OFSUB__(v18, v1))
  {
    __break(1u);
  }
  else
  {
    result = v21(v15 + 32 + 8 * v1, v18 - v1, v17);
    if (!(v5 >> 62))
    {
      v20 = *(_QWORD *)(v15 + 16);
      goto LABEL_26;
    }
  }
  OUTLINED_FUNCTION_26_22();
  v20 = OUTLINED_FUNCTION_188();
  result = OUTLINED_FUNCTION_21_0();
LABEL_26:
  if (!__OFADD__(v20, v3))
  {
    *(_QWORD *)(v15 + 16) = v20 + v3;
    return specialized Array._endMutation()();
  }
  __break(1u);
  return result;
}

{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  OUTLINED_FUNCTION_93();
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    v0 = v8;
    v2 = v7;
    v3 = v6;
    v4 = *v1;
    if (!(*v1 >> 62))
    {
      v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  OUTLINED_FUNCTION_35_0();
  v9 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_133();
LABEL_4:
  if (v9 < v2)
  {
    __break(1u);
    goto LABEL_32;
  }
  v10 = v2 - v3;
  if (__OFSUB__(v2, v3))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v4 = *v1;
  if (!(*v1 >> 62))
  {
    v11 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_34:
  OUTLINED_FUNCTION_35_0();
  v11 = _CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_133();
LABEL_9:
  v12 = v11 + v5;
  if (__OFADD__(v11, v5))
  {
    __break(1u);
LABEL_36:
    OUTLINED_FUNCTION_35_0();
    v15 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_133();
    goto LABEL_17;
  }
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v11 = 0;
  if ((_DWORD)isUniquelyReferenced_nonNull_bridgeObject
    && (v4 & 0x8000000000000000) == 0
    && (v4 & 0x4000000000000000) == 0)
  {
    v14 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v12 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_20;
    v11 = 1;
  }
  if (v4 >> 62)
    goto LABEL_36;
  v15 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  if (v15 <= v12)
    v15 = v12;
  OUTLINED_FUNCTION_35_0();
  v4 = MEMORY[0x1C3B73D24](v11, v15, 1, v4);
  isUniquelyReferenced_nonNull_bridgeObject = swift_bridgeObjectRelease();
  *v1 = v4;
  v14 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_20:
  v16 = (_QWORD *)(v14 + 32 + 8 * v3);
  OUTLINED_FUNCTION_59(isUniquelyReferenced_nonNull_bridgeObject, (unint64_t *)&lazy cache variable for type metadata for UIView);
  swift_arrayDestroy();
  if (!v5)
  {
LABEL_28:
    *v16 = v0;
    return specialized Array._endMutation()();
  }
  if (v4 >> 62)
  {
    OUTLINED_FUNCTION_35_0();
    v17 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_133();
  }
  else
  {
    v17 = *(_QWORD *)(v14 + 16);
  }
  if (__OFSUB__(v17, v2))
  {
    __break(1u);
  }
  else
  {
    result = specialized UnsafeMutablePointer.moveInitialize(from:count:)(v14 + 32 + 8 * v2, v17 - v2, v16 + 1);
    if (!(v4 >> 62))
    {
      v19 = *(_QWORD *)(v14 + 16);
      goto LABEL_26;
    }
  }
  OUTLINED_FUNCTION_35_0();
  v19 = OUTLINED_FUNCTION_237();
  result = OUTLINED_FUNCTION_133();
LABEL_26:
  if (!__OFADD__(v19, v5))
  {
    *(_QWORD *)(v14 + 16) = v19 + v5;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

void outlined bridged method (mbnn) of @objc UIViewController.title.setter(uint64_t a1, uint64_t a2, void *a3)
{
  outlined bridged method (mbnn) of @objc UIViewController.title.setter(a1, a2, a3, (SEL *)&selRef_setTitle_);
}

uint64_t type metadata accessor for RecentItemContactsViewControllerDelegate(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for RecentItemContactsViewControllerDelegate);
}

uint64_t sub_1BD16593C()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void partial apply for closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemOngoingCalls()(UIView *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemOngoingCalls()(a1, a2, a3, v3);
}

void partial apply for closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemLinks()(UIView *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemLinks()(a1, a2, a3, v3);
}

void partial apply for closure #1 in RecentsListViewController.joinCall(at:)()
{
  uint64_t v0;

  closure #1 in RecentsListViewController.joinCall(at:)(v0);
}

uint64_t sub_1BD165970()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in RecentsListViewController.presentReportJunkAlert(_:completion:)(uint64_t a1)
{
  uint64_t *v1;

  return closure #1 in RecentsListViewController.presentReportJunkAlert(_:completion:)(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in RecentsListViewController.presentReportJunkAlert(_:completion:)(uint64_t a1)
{
  uint64_t v1;
  Swift::OpaquePointer v2;

  v2._rawValue = *(void **)(v1 + 24);
  closure #2 in RecentsListViewController.presentReportJunkAlert(_:completion:)(a1, *(_QWORD *)(v1 + 16), v2, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void partial apply for closure #3 in RecentsListViewController.presentReportJunkAlert(_:completion:)()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 16);
  if (v1)
    v1(0);
  OUTLINED_FUNCTION_0();
}

void *outlined copy of ConversationLink?(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    swift_bridgeObjectRetain();
    return (void *)swift_retain();
  }
  return result;
}

void *outlined consume of ConversationLink?(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    return (void *)swift_release();
  }
  return result;
}

uint64_t outlined bridged method (pb) of @objc UICollectionView.indexPathsForSelectedItems.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_indexPathsForSelectedItems);
  if (!v1)
    return 0;
  v2 = v1;
  type metadata accessor for IndexPath();
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1BD165ADC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  OUTLINED_FUNCTION_42_2();
  v1 = *(_QWORD *)(OUTLINED_FUNCTION_32_3() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = OUTLINED_FUNCTION_28_29();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  OUTLINED_FUNCTION_39_0(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

Class partial apply for closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_32_3() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_28_29() - 8) + 80);
  return closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, v1 + v4, *(void **)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), v1 + ((v6 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6));
}

void outlined bridged method (mnbnn) of @objc TUPrivacyManager.setBlockIncomingCommunication(_:forEmailAddress:)(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;

  v6 = (id)MEMORY[0x1C3B72E00](a2, a3);
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_setBlockIncomingCommunication_forEmailAddress_, a1 & 1, v6);

}

id outlined bridged method (mbnn) of @objc TUPrivacyManager.isIncomingCommunicationBlocked(forEmailAddress:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;

  v4 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(a3, sel_isIncomingCommunicationBlockedForEmailAddress_, v4);

  return v5;
}

void specialized protocol witness for Collection.subscript.read in conformance [A]()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_21_34();
  v2 = OUTLINED_FUNCTION_37_22((uint64_t)v1);
  specialized Array.subscript.read(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  OUTLINED_FUNCTION_18();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_21_34();
  v2 = OUTLINED_FUNCTION_37_22((uint64_t)v1);
  specialized Array.subscript.read(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  OUTLINED_FUNCTION_18();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_21_34();
  v2 = OUTLINED_FUNCTION_37_22((uint64_t)v1);
  specialized Array.subscript.read(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  OUTLINED_FUNCTION_18();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_21_34();
  v2 = OUTLINED_FUNCTION_37_22((uint64_t)v1);
  specialized Array.subscript.read(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  OUTLINED_FUNCTION_18();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_21_34();
  v2 = OUTLINED_FUNCTION_37_22((uint64_t)v1);
  specialized Array.subscript.read(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  OUTLINED_FUNCTION_18();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_21_34();
  v2 = OUTLINED_FUNCTION_37_22((uint64_t)v1);
  specialized Array.subscript.read(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  OUTLINED_FUNCTION_18();
}

void specialized Array.subscript.read(uint64_t a1, uint64_t a2)
{
  id *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_17_35(a1, a2);
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v4, v5, v6);
  if (v3)
    OUTLINED_FUNCTION_43_23();
  *v2 = OUTLINED_FUNCTION_38_22();
  OUTLINED_FUNCTION_18();
}

{
  id *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_17_35(a1, a2);
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v4, v5, v6);
  if (v3)
    OUTLINED_FUNCTION_43_23();
  *v2 = OUTLINED_FUNCTION_38_22();
  OUTLINED_FUNCTION_18();
}

void specialized Array.subscript.read(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a3 + 16) > a2)
  {
    *a1 = *(_QWORD *)(a3 + 8 * a2 + 32);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_21_6();
    OUTLINED_FUNCTION_0();
    return;
  }
  __break(1u);
}

void sub_1BD165F50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_308(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD165F80(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x1A0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD165FB8()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_114_4(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD165FE8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x200))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD166020()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x248))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD166068()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x2A8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1660A0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x340))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1660D8(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x358))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD166110()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x460))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD166148()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_306_0(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of RecentsListViewControllerMacCatalystDelegate.recentsListViewController(_:didRequestUnknownContactPopoverForRecentsCallItem:customSourceView:sourceRect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of RecentsListViewControllerMacCatalystDelegate.recentsListViewController(_:didRequestUnknownContactPopoverForHandle:customSourceView:sourceRect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t ObjC metadata update function for RecentsListViewController()
{
  return type metadata accessor for RecentsListViewController(0);
}

uint64_t method lookup function for RecentsListViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecentsListViewController.macCatalystDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of RecentsListViewController.macCatalystDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of RecentsListViewController.macCatalystDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of RecentsListViewController.recentCallProvider.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of RecentsListViewController.recentCallProvider.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of RecentsListViewController.recentCallProvider.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of RecentsListViewController.callCreator.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of RecentsListViewController.callItemBlockContactsDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of RecentsListViewController.callItemBlockContactsDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of RecentsListViewController.callItemBlockContactsDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of RecentsListViewController.faceTimeReportSpamManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of RecentsListViewController.faceTimeReportSpamManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of RecentsListViewController.faceTimeReportSpamManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of RecentsListViewController.presentScreenTimeShield.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of RecentsListViewController.presentScreenTimeShield.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of RecentsListViewController.presentScreenTimeShield.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of RecentsListViewController.setPreventsApplicationTerminationWhenModal.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of RecentsListViewController.setPreventsApplicationTerminationWhenModal.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of RecentsListViewController.setPreventsApplicationTerminationWhenModal.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of RecentsListViewController.headerView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of RecentsListViewController.headerView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of RecentsListViewController.headerView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of RecentsListViewController.facetimeLinkTipPopoverReferenceItem.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D8))();
}

uint64_t dispatch thunk of RecentsListViewController.collectionView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x340))();
}

uint64_t dispatch thunk of RecentsListViewController.collectionView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x348))();
}

uint64_t dispatch thunk of RecentsListViewController.collectionView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x350))();
}

uint64_t dispatch thunk of RecentsListViewController.cellBackgroundConfiguration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x358))();
}

uint64_t dispatch thunk of RecentsListViewController.cellBackgroundConfiguration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x360))();
}

uint64_t dispatch thunk of RecentsListViewController.cellBackgroundConfiguration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x368))();
}

uint64_t dispatch thunk of RecentsListViewController.avatarViewControllerDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x460))();
}

uint64_t dispatch thunk of RecentsListViewController.avatarViewControllerDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x468))();
}

uint64_t dispatch thunk of RecentsListViewController.avatarViewControllerDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x470))();
}

uint64_t dispatch thunk of RecentsListViewController.__allocating_init(recentCallProvider:detailControllerFactory:contactStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1224))();
}

uint64_t ObjC metadata update function for RecentItemContactsViewControllerDelegate()
{
  return type metadata accessor for RecentItemContactsViewControllerDelegate(0);
}

uint64_t type metadata completion function for RecentItemContactsViewControllerDelegate()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RecentsCallItem(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for RecentItemContactsViewControllerDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecentItemContactsViewControllerDelegate.__allocating_init(_:faceTimeReportSpamManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of RecentItemContactsViewControllerDelegate.contactViewController(_:didExecuteBlockAndReportContactAction:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t method lookup function for AvatarViewControllerDelegateWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AvatarViewControllerDelegateWrapper.hostingViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of AvatarViewControllerDelegateWrapper.hostingViewController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AvatarViewControllerDelegateWrapper.hostingViewController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AvatarViewControllerDelegateWrapper.__allocating_init(hostingViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of AvatarViewControllerDelegateWrapper.hostingViewController(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

void partial apply for closure #1 in RecentsListViewController.deleteButtonAction(_:)(char a1)
{
  uint64_t v1;

  closure #1 in RecentsListViewController.deleteButtonAction(_:)(a1, v1);
}

uint64_t sub_1BD166660()
{
  return objectdestroy_48Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t partial apply for closure #1 in RecentsListViewController.handleDeferredVideoMessagePresentation()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_214();
  return closure #1 in RecentsListViewController.handleDeferredVideoMessagePresentation()(a1, v4, a2);
}

uint64_t sub_1BD1666A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_39_0(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_43_15();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #2 in RecentsListViewController.handleDeferredVideoMessagePresentation()(uint64_t a1)
{
  return partial apply for closure #2 in RecentsListViewController.handleDeferredVideoMessagePresentation()(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t))closure #2 in RecentsListViewController.handleDeferredVideoMessagePresentation());
}

id partial apply for closure #1 in closure #1 in RecentsListViewController.collectionLayoutConfiguration.getter(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in closure #1 in RecentsListViewController.collectionLayoutConfiguration.getter(a1, v1);
}

uint64_t partial apply for specialized closure #1 in Sequence<>.contains(_:)(uint64_t a1)
{
  uint64_t v1;

  return specialized closure #1 in Sequence<>.contains(_:)(a1, *(_QWORD *)(v1 + 16)) & 1;
}

{
  uint64_t v1;

  return specialized closure #1 in Sequence<>.contains(_:)(a1, *(_QWORD *)(v1 + 16), (void (*)(uint64_t))MEMORY[0x1E0CB0998], &lazy protocol witness table cache variable for type UUID and conformance UUID) & 1;
}

uint64_t partial apply for closure #1 in RecentsListViewController.blockAllAction(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return partial apply for closure #1 in RecentsListViewController.blockAllAction(of:)(a1, a2, a3, a4, &unk_1E761D378, &unk_1E761D3A0, &async function pointer to partial apply for closure #1 in closure #1 in RecentsListViewController.blockAllAction(of:), &async function pointer to partial apply for thunk for @escaping @callee_guaranteed @Sendable @async () -> ());
}

uint64_t sub_1BD166740()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned Bool) -> ()(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t partial apply for closure #1 in closure #1 in RecentsListViewController.blockAllAction(of:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_55_16();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_162_0(v1, (uint64_t)partial apply for closure #1 in closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:));
  return closure #1 in closure #1 in RecentsListViewController.blockAllAction(of:)(v2, v3, v4, v5);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @Sendable @async () -> ()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_256_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_76_8(v1, (uint64_t)partial apply for closure #1 in closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:));
  return OUTLINED_FUNCTION_48_20(v2, v3, v4);
}

uint64_t partial apply for closure #1 in RecentsListViewController.reportAndBlockAction(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return partial apply for closure #1 in RecentsListViewController.blockAllAction(of:)(a1, a2, a3, a4, &unk_1E761D418, &unk_1E761D440, &async function pointer to partial apply for closure #1 in closure #1 in RecentsListViewController.reportAndBlockAction(of:), &thunk for @escaping @callee_guaranteed @Sendable @async () -> ()partial apply);
}

#error "1BD166884: call analysis failed (funcsize=24)"

uint64_t objectdestroy_68Tm()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_89_7();
  switch(OUTLINED_FUNCTION_121_0())
  {
    case 0u:
    case 3u:
    case 4u:
      OUTLINED_FUNCTION_93_2();
      OUTLINED_FUNCTION_118_4();
      v6 = OUTLINED_FUNCTION_50_20();
      if (!OUTLINED_FUNCTION_49_20(v6))
        OUTLINED_FUNCTION_62_11();
      OUTLINED_FUNCTION_18_10(v3[6]);
      OUTLINED_FUNCTION_68_3();
      v7 = v2 + v3[10];
      OUTLINED_FUNCTION_33_0();
      if (!OUTLINED_FUNCTION_46_7(v7))
        OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_158();
      if (v8)
      {

        OUTLINED_FUNCTION_247();
        OUTLINED_FUNCTION_246();
      }
      if (!OUTLINED_FUNCTION_46_7(v2 + v3[12]))
        OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_18_10(v3[13]);
      break;
    case 1u:
      v9 = OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_75(v9);
      v3 = (int *)OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_68_3();
      OUTLINED_FUNCTION_18_10(v3[6]);
      OUTLINED_FUNCTION_156();
      if (v10)
      {

        OUTLINED_FUNCTION_204();
        goto LABEL_14;
      }
      break;
    case 2u:
      OUTLINED_FUNCTION_205_0();
      OUTLINED_FUNCTION_93_2();
LABEL_14:
      swift_release();
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  v11 = OUTLINED_FUNCTION_81_9();
  if (!OUTLINED_FUNCTION_46_7((uint64_t)v3))
    OUTLINED_FUNCTION_52((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8));
  OUTLINED_FUNCTION_18_10(v0[10]);
  OUTLINED_FUNCTION_18_10(v0[11]);
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_18_10(v0[14]);

  OUTLINED_FUNCTION_301();
  return OUTLINED_FUNCTION_16_33();
}

uint64_t partial apply for closure #1 in closure #1 in RecentsListViewController.reportAndBlockAction(of:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_55_16();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_162_0(v1, (uint64_t)partial apply for closure #1 in closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:));
  return closure #1 in closure #1 in RecentsListViewController.reportAndBlockAction(of:)(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in RecentsListViewController.deleteAction(of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_310_0();
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_172();
  return closure #1 in RecentsListViewController.deleteAction(of:)(v5, v3, v1, v0, v6, v7);
}

uint64_t sub_1BD166AF0()
{
  int *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_115();
  v4 = v1 + v3;
  OUTLINED_FUNCTION_98_1();
  switch(OUTLINED_FUNCTION_121_0())
  {
    case 0u:
    case 3u:
    case 4u:
      OUTLINED_FUNCTION_93_2();
      OUTLINED_FUNCTION_118_4();
      v5 = OUTLINED_FUNCTION_50_20();
      if (!OUTLINED_FUNCTION_49_20(v5))
        OUTLINED_FUNCTION_62_11();
      OUTLINED_FUNCTION_18_10(v2[6]);
      OUTLINED_FUNCTION_68_3();
      v6 = v4 + v2[10];
      OUTLINED_FUNCTION_33_0();
      if (!OUTLINED_FUNCTION_46_7(v6))
        OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_158();
      if (v7)
      {

        OUTLINED_FUNCTION_247();
        OUTLINED_FUNCTION_246();
      }
      if (!OUTLINED_FUNCTION_46_7(v4 + v2[12]))
        OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_18_10(v2[13]);
      break;
    case 1u:
      v8 = OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_75(v8);
      v2 = (int *)OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_68_3();
      OUTLINED_FUNCTION_18_10(v2[6]);
      OUTLINED_FUNCTION_156();
      if (v9)
      {

        OUTLINED_FUNCTION_204();
        goto LABEL_14;
      }
      break;
    case 2u:
      OUTLINED_FUNCTION_205_0();
      OUTLINED_FUNCTION_93_2();
LABEL_14:
      swift_release();
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  v10 = OUTLINED_FUNCTION_81_9();
  if (!OUTLINED_FUNCTION_46_7((uint64_t)v2))
    OUTLINED_FUNCTION_52((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8));
  OUTLINED_FUNCTION_18_10(v0[10]);
  OUTLINED_FUNCTION_18_10(v0[11]);
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_18_10(v0[14]);
  OUTLINED_FUNCTION_301();
  return OUTLINED_FUNCTION_16_33();
}

uint64_t partial apply for closure #1 in closure #1 in RecentsListViewController.deleteAction(of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(OUTLINED_FUNCTION_19_33() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = v0 + v3;
  v6 = (uint64_t *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  v7 = *v6;
  v8 = v6[1];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:);
  return closure #1 in closure #1 in RecentsListViewController.deleteAction(of:)(v4, v5, v7, v8);
}

uint64_t sub_1BD166D34()
{
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable @async () -> ()partial apply()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_256_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_76_8(v1, (uint64_t)partial apply for closure #1 in SyncedScreeningAlphaGradientView.gradient(for:));
  return OUTLINED_FUNCTION_48_20(v2, v3, v4);
}

void partial apply for closure #1 in closure #1 in closure #1 in RecentsListViewController.deleteAction(of:)(char a1)
{
  uint64_t v1;

  closure #1 in closure #1 in closure #1 in RecentsListViewController.deleteAction(of:)(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24));
}

uint64_t partial apply for closure #1 in RecentsListViewController.cellProvider.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return closure #1 in RecentsListViewController.cellProvider.getter(a1, a2, a3, v3);
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed String) -> (@out ())(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  thunk for @escaping @callee_guaranteed (@in_guaranteed String) -> (@out ())(a1, a2, *(void (**)(_QWORD *))(v2 + 16));
}

void partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String) -> ()(_QWORD *a1)
{
  uint64_t v1;

  thunk for @escaping @callee_guaranteed (@guaranteed String) -> ()(a1, *(void (**)(_QWORD, _QWORD))(v1 + 16));
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed TUFilteredRequest) -> (@out ())(uint64_t a1)
{
  uint64_t v1;

  thunk for @escaping @callee_guaranteed (@in_guaranteed TUFilteredRequest) -> (@out ())(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUFilteredRequest) -> ()(_QWORD *a1)
{
  uint64_t v1;

  return thunk for @escaping @callee_guaranteed (@guaranteed TUFilteredRequest) -> ()(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_1BD166DD4()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void partial apply for closure #1 in RecentsListViewController.fadeInNavigationController()()
{
  uint64_t v0;

  closure #1 in RecentsListViewController.fadeInNavigationController()(*(void **)(v0 + 16));
}

void partial apply for closure #1 in RecentsListViewController.selectActionItem.getter(uint64_t a1)
{
  uint64_t v1;

  closure #1 in RecentsListViewController.selectActionItem.getter(a1, v1);
}

id partial apply for closure #1 in RecentsListViewController.editMenuItems.getter(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in RecentsListViewController.editMenuItems.getter(a1, *(void **)(v1 + 16));
}

void partial apply for closure #1 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)()
{
  uint64_t v0;

  closure #1 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(v0);
}

void partial apply for closure #2 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_33();
  closure #2 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(*(_QWORD *)(v0 + 16));
}

uint64_t partial apply for closure #3 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)()
{
  return partial apply for closure #3 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)((uint64_t (*)(uint64_t))closure #3 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:));
}

void partial apply for closure #4 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)()
{
  uint64_t v0;

  closure #4 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(v0);
}

uint64_t partial apply for closure #5 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)()
{
  return partial apply for closure #3 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)((uint64_t (*)(uint64_t))closure #5 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:));
}

void partial apply for closure #6 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)()
{
  uint64_t v0;

  closure #6 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(v0);
}

uint64_t objectdestroy_140Tm()
{
  int *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_89_7();
  switch(OUTLINED_FUNCTION_121_0())
  {
    case 0u:
    case 3u:
    case 4u:
      OUTLINED_FUNCTION_93_2();
      OUTLINED_FUNCTION_118_4();
      v3 = OUTLINED_FUNCTION_50_20();
      if (!OUTLINED_FUNCTION_49_20(v3))
        OUTLINED_FUNCTION_62_11();
      OUTLINED_FUNCTION_18_10(v2[6]);
      OUTLINED_FUNCTION_68_3();
      v4 = v1 + v2[10];
      OUTLINED_FUNCTION_33_0();
      if (!OUTLINED_FUNCTION_46_7(v4))
        OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_158();
      if (v5)
      {

        OUTLINED_FUNCTION_247();
        OUTLINED_FUNCTION_246();
      }
      if (!OUTLINED_FUNCTION_46_7(v1 + v2[12]))
        OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_18_10(v2[13]);
      break;
    case 1u:
      v6 = OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_75(v6);
      v2 = (int *)OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_68_3();
      OUTLINED_FUNCTION_18_10(v2[6]);
      OUTLINED_FUNCTION_156();
      if (v7)
      {

        OUTLINED_FUNCTION_204();
        goto LABEL_14;
      }
      break;
    case 2u:
      OUTLINED_FUNCTION_205_0();
      OUTLINED_FUNCTION_93_2();
LABEL_14:
      swift_release();
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  v8 = OUTLINED_FUNCTION_81_9();
  if (!OUTLINED_FUNCTION_46_7((uint64_t)v2))
    OUTLINED_FUNCTION_52((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
  OUTLINED_FUNCTION_18_10(v0[10]);
  OUTLINED_FUNCTION_18_10(v0[11]);
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_18_10(v0[14]);
  return OUTLINED_FUNCTION_16_33();
}

uint64_t partial apply for closure #8 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)()
{
  return partial apply for closure #3 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)((uint64_t (*)(uint64_t))closure #8 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:));
}

uint64_t partial apply for closure #3 in RecentsListViewController.presentVideoMessagePlayer(url:and:bypassSafety:)(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_19_33() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_1BD167048()
{
  return objectdestroy_48Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t objectdestroy_48Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  OUTLINED_FUNCTION_21_6();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)()
{
  OUTLINED_FUNCTION_32_3();
  OUTLINED_FUNCTION_214();
  closure #1 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)();
}

uint64_t sub_1BD1670DC()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #2 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BD167100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_28_29();
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_39_0(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_43_15();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #3 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_28_29();
  v0 = OUTLINED_FUNCTION_143_1();
  return closure #3 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(v0, v1, v2);
}

void partial apply for closure #1 in closure #3 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(char a1)
{
  closure #1 in closure #3 in closure #1 in RecentsListViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1);
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #2 in RecentsListViewController.presentReportJunkAlert(_:completion:)(char a1)
{
  uint64_t v1;
  void (*v2)(_QWORD);

  v2 = *(void (**)(_QWORD))(v1 + 16);
  if (v2)
    v2(a1 & 1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD1671BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in removeRecents #1 (calls:links:videoMessages:allItems:) in RecentsListViewController.deleteRecentCalls(_:preparationHandler:)()
{
  uint64_t v0;

  closure #1 in removeRecents #1 (calls:links:videoMessages:allItems:) in RecentsListViewController.deleteRecentCalls(_:preparationHandler:)(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t outlined release of ReportSpamManager.SpamDataModel(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t partial apply for closure #2 in closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()(uint64_t a1)
{
  return partial apply for closure #2 in RecentsListViewController.handleDeferredVideoMessagePresentation()(a1, type metadata accessor for RecentsCallItem, (uint64_t (*)(uint64_t))closure #2 in closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemCalls());
}

uint64_t objectdestroy_59Tm()
{
  int *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_285();
  v4 = v1 + v3;
  OUTLINED_FUNCTION_98_1();
  switch(OUTLINED_FUNCTION_121_0())
  {
    case 0u:
    case 3u:
    case 4u:
      OUTLINED_FUNCTION_93_2();
      OUTLINED_FUNCTION_118_4();
      v5 = OUTLINED_FUNCTION_50_20();
      if (!OUTLINED_FUNCTION_49_20(v5))
        OUTLINED_FUNCTION_62_11();
      OUTLINED_FUNCTION_18_10(v2[6]);
      OUTLINED_FUNCTION_68_3();
      v6 = v4 + v2[10];
      OUTLINED_FUNCTION_33_0();
      if (!OUTLINED_FUNCTION_46_7(v6))
        OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_158();
      if (v7)
      {

        OUTLINED_FUNCTION_247();
        OUTLINED_FUNCTION_246();
      }
      if (!OUTLINED_FUNCTION_46_7(v4 + v2[12]))
        OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_18_10(v2[13]);
      break;
    case 1u:
      v8 = OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_75(v8);
      v2 = (int *)OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_68_3();
      OUTLINED_FUNCTION_18_10(v2[6]);
      OUTLINED_FUNCTION_156();
      if (v9)
      {

        OUTLINED_FUNCTION_204();
        goto LABEL_14;
      }
      break;
    case 2u:
      OUTLINED_FUNCTION_205_0();
      OUTLINED_FUNCTION_93_2();
LABEL_14:
      swift_release();
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_5_49();
  v10 = OUTLINED_FUNCTION_81_9();
  if (!OUTLINED_FUNCTION_46_7((uint64_t)v2))
    OUTLINED_FUNCTION_52((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8));
  OUTLINED_FUNCTION_18_10(v0[10]);
  OUTLINED_FUNCTION_18_10(v0[11]);
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_5_49();
  OUTLINED_FUNCTION_18_10(v0[14]);
  return OUTLINED_FUNCTION_16_33();
}

uint64_t partial apply for closure #1 in closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemCalls()(uint64_t a1)
{
  return partial apply for closure #2 in RecentsListViewController.handleDeferredVideoMessagePresentation()(a1, type metadata accessor for RecentsCallItem, (uint64_t (*)(uint64_t))closure #1 in closure #1 in RecentsListViewController.createCellRegistrationForRecentsCallItemCalls());
}

uint64_t partial apply for closure #2 in RecentsListViewController.handleDeferredVideoMessagePresentation()(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;

  OUTLINED_FUNCTION_97_1(a1, a2);
  v3 = OUTLINED_FUNCTION_143_1();
  return a3(v3);
}

uint64_t closure #1 in Sequence<>.contains(_:)specialized partial apply(uint64_t a1)
{
  return partial apply for specialized closure #1 in Sequence<>.contains(_:)(a1) & 1;
}

{
  return _sSTsSQ7ElementRpzrlE8containsySbABFSbABXEfU_Say10Foundation4UUIDVG_Tg5TA_0(a1) & 1;
}

uint64_t OUTLINED_FUNCTION_76_8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_89_7()
{
  return type metadata accessor for RecentsCallItemType(0);
}

uint64_t OUTLINED_FUNCTION_93_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_101_5()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_102_1()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_104_2()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  outlined destroy of RecentsCallItem(v0, v1);
}

id OUTLINED_FUNCTION_109_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return @nonobjc TUPhoneNumber.init(digits:countryCode:)(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_112_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_118_4()
{
  return type metadata accessor for RecentCallRecentItemMetadata(0);
}

id OUTLINED_FUNCTION_133_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  uint64_t v9;

  *(_OWORD *)(a1 + 16) = a9;
  *(_QWORD *)(a1 + 32) = v9;
  return (id)a9;
}

uint64_t OUTLINED_FUNCTION_139_0()
{
  return objc_opt_self();
}

uint64_t OUTLINED_FUNCTION_143_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_150(_QWORD *a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & *a1) + 0x100))();
}

void OUTLINED_FUNCTION_151_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
}

uint64_t OUTLINED_FUNCTION_159()
{
  return String.init<A>(reflecting:)();
}

void OUTLINED_FUNCTION_160(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1 + a1, v2);
}

uint64_t OUTLINED_FUNCTION_162_0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void OUTLINED_FUNCTION_163(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with take of StagedCollaboration(a1, a2, v2);
}

void OUTLINED_FUNCTION_165_1()
{
  JUMPOUT(0x1C3B73D18);
}

uint64_t OUTLINED_FUNCTION_171()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_176()
{
  return type metadata accessor for RecentOngoingConversationMetadata(0);
}

uint64_t OUTLINED_FUNCTION_179()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_191_0()
{
  return os_log(_:dso:log:type:_:)();
}

void OUTLINED_FUNCTION_192(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;

  v2 = (a2 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t OUTLINED_FUNCTION_194()
{
  return swift_arrayDestroy();
}

id OUTLINED_FUNCTION_197(id a1, SEL a2, uint64_t a3)
{
  uint64_t v3;

  return objc_msgSend(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_199()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_202_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_204()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_205_0()
{
  id *v0;

}

id OUTLINED_FUNCTION_207_1(id a1, SEL a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return objc_msgSend(a1, a2, a10, 1, 0);
}

uint64_t OUTLINED_FUNCTION_209()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_217()
{
  return type metadata accessor for RecentsListViewController(0);
}

void OUTLINED_FUNCTION_218(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  os_log_type_t v5;

  _os_log_impl(a1, a2, v5, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_221@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v3, v1, v2);
}

uint64_t OUTLINED_FUNCTION_223()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_225_0()
{
  return type metadata accessor for UIBackgroundConfiguration();
}

uint64_t OUTLINED_FUNCTION_229_0()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t OUTLINED_FUNCTION_230()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

id OUTLINED_FUNCTION_231_1()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, (SEL)(v2 + 3918), v1);
}

id OUTLINED_FUNCTION_236(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, v2, v4);
}

uint64_t OUTLINED_FUNCTION_246()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_247()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_249_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_252(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[8] = a1;
  v2[4] = v1;
  v2[5] = v3;
  return static os_log_type_t.default.getter();
}

uint64_t OUTLINED_FUNCTION_253()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_254()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t OUTLINED_FUNCTION_256_0()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_259(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_260()
{
  return swift_unknownObjectWeakInit();
}

void OUTLINED_FUNCTION_261(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + a1);
  *v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_262()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_263()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_264()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_267()
{
  return specialized Array._endMutation()();
}

id OUTLINED_FUNCTION_269_0(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  return objc_msgSend(a10, a2, v10);
}

uint64_t OUTLINED_FUNCTION_270()
{
  void *v0;

  return outlined bridged method (pb) of @objc UICollectionView.indexPathsForSelectedItems.getter(v0);
}

void OUTLINED_FUNCTION_271_0()
{
  void *v0;

}

void OUTLINED_FUNCTION_272()
{
  void *v0;

}

NSIndexPath OUTLINED_FUNCTION_273()
{
  return IndexPath._bridgeToObjectiveC()();
}

uint64_t OUTLINED_FUNCTION_274(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_281()
{
  return swift_allocObject();
}

id OUTLINED_FUNCTION_283(id a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + v2) = a1;
  return a1;
}

id OUTLINED_FUNCTION_286()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1);
}

void OUTLINED_FUNCTION_295_0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of RecentsCallItem(a1, v1);
}

uint64_t OUTLINED_FUNCTION_297_0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *v2 = v0;
  v2[1] = v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_298()
{
  return swift_unknownObjectUnownedInit();
}

void OUTLINED_FUNCTION_303()
{
  RecentsListViewController.linkController.getter();
}

uint64_t OUTLINED_FUNCTION_307@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x340))();
}

uint64_t OUTLINED_FUNCTION_309@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0xB8))();
}

uint64_t OUTLINED_FUNCTION_311_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_312()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_313()
{
  JUMPOUT(0x1C3B73D18);
}

void OUTLINED_FUNCTION_314()
{
  uint64_t v0;
  uint64_t *v1;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, v1);
}

uint64_t OUTLINED_FUNCTION_316()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

void OUTLINED_FUNCTION_317()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  outlined destroy of RecentsCallItem(v1, v0);
}

uint64_t OUTLINED_FUNCTION_319()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_322()
{
  void *v0;

}

void OUTLINED_FUNCTION_324_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_325_0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_326()
{
  return type metadata accessor for Optional();
}

uint64_t OUTLINED_FUNCTION_329()
{
  return swift_dynamicCastObjCClass();
}

void OUTLINED_FUNCTION_336(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined assign with take of Participant?(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_337()
{
  return swift_unknownObjectWeakAssign();
}

void OUTLINED_FUNCTION_340()
{
  uint64_t v0;
  uint64_t *v1;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, v1);
}

uint64_t OUTLINED_FUNCTION_341()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_342()
{
  void *v0;

}

BOOL static CaptioningStateManager.CaptioningState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  BOOL v4;
  char v6;
  char v7;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  if (*(_BYTE *)(a1 + 8) != 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 == *(double *)a2;
    return 0;
  }
  if (v2 == 0.0)
  {
    v4 = *(_QWORD *)&v3 == 0;
  }
  else
  {
    if (*(_QWORD *)&v2 != 1)
    {
      if (*(_QWORD *)&v3 > 1uLL)
        v7 = *(_BYTE *)(a2 + 8);
      else
        v7 = 0;
      return (v7 & 1) != 0;
    }
    v4 = *(_QWORD *)&v3 == 1;
  }
  if (v4)
    v6 = *(_BYTE *)(a2 + 8);
  else
    v6 = 0;
  return (v6 & 1) != 0;
}

void CaptioningStateManager.captioningState.getter()
{
  CurrentValueSubject.value.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t CaptioningStateManager.captioningStatePublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<CaptioningStateManager.CaptioningState, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<CaptioningStateManager.CaptioningState, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<CaptioningStateManager.CaptioningState, Never>);
  return Publisher.eraseToAnyPublisher()();
}

uint64_t CaptioningStateManager.isCaptioningEnabled.getter()
{
  unint64_t v1;
  char v2;

  OUTLINED_FUNCTION_3_55();
  return (v1 > 1) | ((v2 & 1) == 0);
}

uint64_t CaptioningStateManager.captionsRecognizerStateManager.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptioningStateManager and conformance CaptioningStateManager, (void (*)(uint64_t))type metadata accessor for CaptioningStateManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v0 + 24);
}

uint64_t key path getter for CaptioningStateManager.captionsRecognizerStateManager : CaptioningStateManager@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CaptioningStateManager.captionsRecognizerStateManager.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1BD167CE0(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = CaptioningStateManager.captionsRecognizerStateManager.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for CaptioningStateManager.captionsRecognizerStateManager : CaptioningStateManager()
{
  swift_unknownObjectRetain();
  return CaptioningStateManager.captionsRecognizerStateManager.setter();
}

uint64_t type metadata accessor for CaptioningStateManager()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CaptioningStateManager;
  if (!type metadata singleton initialization cache for CaptioningStateManager)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CaptioningStateManager.captionsRecognizerStateManager.setter()
{
  swift_getKeyPath();
  specialized CaptioningStateManager.withMutation<A, B>(keyPath:_:)();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t CaptioningStateManager.access<A>(keyPath:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptioningStateManager and conformance CaptioningStateManager, (void (*)(uint64_t))type metadata accessor for CaptioningStateManager);
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t closure #1 in CaptioningStateManager.captionsRecognizerStateManager.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 32) = a3;
  return swift_unknownObjectWeakAssign();
}

uint64_t partial apply for closure #1 in CaptioningStateManager.captionsRecognizerStateManager.setter()
{
  uint64_t *v0;

  return closure #1 in CaptioningStateManager.captionsRecognizerStateManager.setter(v0[2], v0[3], v0[4]);
}

uint64_t specialized CaptioningStateManager.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptioningStateManager and conformance CaptioningStateManager, (void (*)(uint64_t))type metadata accessor for CaptioningStateManager);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t CaptioningStateManager.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptioningStateManager and conformance CaptioningStateManager, (void (*)(uint64_t))type metadata accessor for CaptioningStateManager);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void (*CaptioningStateManager.captionsRecognizerStateManager.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[5] = v2;
  swift_getKeyPath();
  v4[6] = OBJC_IVAR____TtC15ConversationKit22CaptioningStateManager___observationRegistrar;
  *v4 = v2;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptioningStateManager and conformance CaptioningStateManager, (void (*)(uint64_t))type metadata accessor for CaptioningStateManager);
  v4[7] = v5;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v4[3] = v6;
  v4[4] = v7;
  return CaptioningStateManager.captionsRecognizerStateManager.modify;
}

void CaptioningStateManager.captionsRecognizerStateManager.modify(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 32) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  v4 = v3[5];
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  *v3 = v4;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  free(v3);
}

uint64_t CaptioningStateManager.cancellables.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptioningStateManager and conformance CaptioningStateManager, (void (*)(uint64_t))type metadata accessor for CaptioningStateManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t key path setter for CaptioningStateManager.cancellables : CaptioningStateManager()
{
  swift_bridgeObjectRetain();
  return CaptioningStateManager.cancellables.setter();
}

uint64_t CaptioningStateManager.cancellables.setter()
{
  swift_getKeyPath();
  specialized CaptioningStateManager.withMutation<A, B>(keyPath:_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

void CaptioningStateManager.__allocating_init(capabilities:)(_QWORD *a1)
{
  swift_allocObject();
  CaptioningStateManager.init(capabilities:)(a1);
  OUTLINED_FUNCTION_0();
}

_QWORD *CaptioningStateManager.init(capabilities:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v1[4] = 0;
  swift_unknownObjectWeakInit();
  v1[5] = MEMORY[0x1E0DEE9E8];
  ObservationRegistrar.init()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<CaptioningStateManager.CaptioningState, Never>);
  swift_allocObject();
  v1[2] = CurrentValueSubject.init(_:)();
  v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x70))() & 1) != 0)
  {
    (*(void (**)(void))((*v12 & *a1) + 0x68))();
    v17 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
    v13 = type metadata accessor for NSRunLoop.SchedulerOptions();
    OUTLINED_FUNCTION_77_0(v6, v14, v15, v13);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
    Publisher.receive<A>(on:options:)();
    outlined destroy of NSRunLoop.SchedulerOptions?(v6);

    swift_release();
    OUTLINED_FUNCTION_15();
    swift_weakInit();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
    swift_getKeyPath();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CaptioningStateManager and conformance CaptioningStateManager, (void (*)(uint64_t))type metadata accessor for CaptioningStateManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    OUTLINED_FUNCTION_10_47();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    OUTLINED_FUNCTION_2_0();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    OUTLINED_FUNCTION_10_47();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();

    swift_release();
  }
  else
  {

  }
  return v1;
}

uint64_t sub_1BD1686A4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in CaptioningStateManager.init(capabilities:)(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    CaptioningStateManager.setCaptioningEnabled(_:)(v1);
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in CaptioningStateManager.init(capabilities:)(char *a1)
{
  return closure #1 in CaptioningStateManager.init(capabilities:)(a1);
}

void sub_1BD16872C(uint64_t *a1@<X8>)
{
  *a1 = CaptioningStateManager.cancellables.getter();
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall CaptioningStateManager.setCaptioningEnabled(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v2 = v1;
  v4 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  if ((CaptioningStateManager.isCaptioningEnabled.getter() & 1) != v4)
  {
    if (a1)
    {
      v9 = type metadata accessor for TaskPriority();
      OUTLINED_FUNCTION_77_0(v8, v10, v11, v9);
      type metadata accessor for MainActor();
      swift_retain();
      v12 = static MainActor.shared.getter();
      v13 = (_QWORD *)OUTLINED_FUNCTION_15();
      v14 = MEMORY[0x1E0DF06E8];
      v13[2] = v12;
      v13[3] = v14;
      v13[4] = v2;
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      swift_release();
    }
    else
    {
      CurrentValueSubject.send(_:)();
    }
  }
}

uint64_t closure #1 in CaptioningStateManager.setCaptioningEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[16] = a4;
  type metadata accessor for MainActor();
  v4[17] = static MainActor.shared.getter();
  v4[18] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[19] = v5;
  return swift_task_switch();
}

uint64_t closure #1 in CaptioningStateManager.setCaptioningEnabled(_:)()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)objc_opt_self();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = closure #1 in CaptioningStateManager.setCaptioningEnabled(_:);
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSSet) -> () with result type Set<String>;
  v3[3] = &block_descriptor_20_1;
  v3[4] = v2;
  objc_msgSend(v1, sel_installedLanguagesWithCompletion_, v3);
  return swift_continuation_await();
}

{
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;

  swift_release();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = OUTLINED_FUNCTION_7_57();
  specialized Set.contains(_:)(v2, v3, v1);
  v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    v6 = 2;
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    v6 = 1;
  }
  *(_QWORD *)(v0 + 80) = v6;
  *(_BYTE *)(v0 + 88) = 1;
  CurrentValueSubject.send(_:)();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BD168A98()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CaptioningStateManager.setCaptioningEnabled(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in CaptioningStateManager.setCaptioningEnabled(_:)(a1, v4, v5, v6);
}

uint64_t @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSSet) -> () with result type Set<String>(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  return specialized _resumeUnsafeContinuation<A>(_:_:)(v1, v2);
}

Swift::Void __swiftcall CaptioningStateManager.fetchSpeechModel()()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_3_55();
  if (v12 == 1 && v11 == 1)
  {
    v5 = (void *)objc_opt_self();
    v6 = OUTLINED_FUNCTION_7_57();
    v7 = (void *)MEMORY[0x1C3B72E00](v6);
    OUTLINED_FUNCTION_15();
    swift_weakInit();
    v8 = MEMORY[0x1E0C809B0];
    v9 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Int, @unowned Bool) -> (), MEMORY[0x1E0C809B0], 1107296256, v13, v15);
    swift_release();
    v10 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed String?, @guaranteed Error?) -> (), v8, 1107296256, v14, v16);
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_fetchAssetsForLanguage_urgent_forceUpgrade_detailedProgress_completion_, v7, 1, 1, v9, v10);
    _Block_release(v10);
    _Block_release(v9);

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v1 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v1 + 16) = xmmword_1BD6441D0;
    OUTLINED_FUNCTION_3_55();
    v2 = String.init<A>(reflecting:)();
    v4 = v3;
    *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v1 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v1 + 32) = v2;
    *(_QWORD *)(v1 + 40) = v4;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
}

uint64_t closure #1 in CaptioningStateManager.fetchSpeechModel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BD645380;
  v1 = String.init<A>(reflecting:)();
  v3 = v2;
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v5 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v0 + 64) = v5;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v3;
  v6 = String.init<A>(reflecting:)();
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v0 + 80) = v7;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    CurrentValueSubject.send(_:)();
    return swift_release();
  }
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned Int, @unowned Bool) -> ()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t closure #2 in CaptioningStateManager.fetchSpeechModel()(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v4 = type metadata accessor for DispatchWorkItemFlags();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = partial apply for closure #1 in closure #2 in CaptioningStateManager.fetchSpeechModel();
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_19;
  v15 = _Block_copy(aBlock);
  v16 = a3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, v5);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v11, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t closure #1 in closure #2 in CaptioningStateManager.fetchSpeechModel()(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BD6441D0;
    v3 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v4 = String.init<A>(reflecting:)();
    v6 = v5;
    *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v2 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v2 + 32) = v4;
    *(_QWORD *)(v2 + 40) = v6;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
LABEL_9:
      swift_retain();
      swift_release();
      CurrentValueSubject.send(_:)();
      return swift_release();
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
      goto LABEL_9;
  }
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed String?, @guaranteed Error?) -> ()(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  swift_retain();
  v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall CaptioningStateManager.setRecognizerEnabled(_:)(Swift::Bool a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;

  v2 = CaptioningStateManager.captionsRecognizerStateManager.getter();
  v4 = v3;
  if (a1)
  {
    if (!v2)
      return;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  }
  else
  {
    if (!v2)
      return;
    v6 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v6, v4);
  }
  swift_unknownObjectRelease();
}

void CaptioningStateManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 24);
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22CaptioningStateManager___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  OUTLINED_FUNCTION_0();
}

uint64_t CaptioningStateManager.__deallocating_deinit()
{
  CaptioningStateManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t partial apply for closure #1 in CaptioningStateManager.fetchSpeechModel()()
{
  return closure #1 in CaptioningStateManager.fetchSpeechModel()();
}

uint64_t partial apply for closure #2 in CaptioningStateManager.fetchSpeechModel()(uint64_t a1, uint64_t a2, void *a3)
{
  return closure #2 in CaptioningStateManager.fetchSpeechModel()(a1, a2, a3);
}

uint64_t dispatch thunk of CaptionsRecognizerStateManaging.enableCaptionsRecognizer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CaptionsRecognizerStateManaging.disableCaptionsRecognizer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t ObjC metadata update function for CaptioningStateManager()
{
  return type metadata accessor for CaptioningStateManager();
}

uint64_t type metadata completion function for CaptioningStateManager()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CaptioningStateManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CaptioningStateManager.__allocating_init(capabilities:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for CaptioningStateManager.CaptioningState()
{
  return &type metadata for CaptioningStateManager.CaptioningState;
}

uint64_t sub_1BD169610()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in CaptioningStateManager.fetchSpeechModel()()
{
  uint64_t v0;

  return closure #1 in closure #2 in CaptioningStateManager.fetchSpeechModel()(*(void **)(v0 + 16));
}

uint64_t ShareViewControllerError.message.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void ShareViewController.backgroundSendUtility.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit19ShareViewController_backgroundSendUtility);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit19ShareViewController_backgroundSendUtility) = a1;

}

Swift::Void __swiftcall ShareViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ShareViewController();
  objc_msgSendSuper2(&v3, sel_viewDidAppear_, a1);
  ShareViewController.startProcessInputItemsTask()();
}

uint64_t type metadata accessor for ShareViewController()
{
  return objc_opt_self();
}

uint64_t ShareViewController.startProcessInputItemsTask()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v4);
  type metadata accessor for MainActor();
  v5 = v0;
  v6 = static MainActor.shared.getter();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x1E0DF06E8];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v5;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

objc_class *ShareViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v6;

  v4 = v3;
  if (a2)
  {
    v6 = MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);
  OUTLINED_FUNCTION_14_18();

  return v4;
}

char *ShareViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  objc_super v15;

  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit19ShareViewController_backgroundSendUtility] = 0;
  v7 = OBJC_IVAR____TtC15ConversationKit19ShareViewController_collaborationInitiationManager;
  v8 = (void *)objc_opt_self();
  v9 = v3;
  v10 = objc_msgSend(v8, sel_sharedInstance);
  v11 = objc_msgSend(v10, sel_conversationManager);

  type metadata accessor for CollaborationInitiationManager();
  v12 = OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)&v3[v7] = v12;

  if (a2)
  {
    v13 = MEMORY[0x1C3B72E00](a1, a2);
    OUTLINED_FUNCTION_133();
  }
  else
  {
    v13 = 0;
  }
  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for ShareViewController();
  objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, v13, a3);
  OUTLINED_FUNCTION_14_18();

  return v9;
}

id ShareViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ShareViewController.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit19ShareViewController_backgroundSendUtility] = 0;
  v3 = OBJC_IVAR____TtC15ConversationKit19ShareViewController_collaborationInitiationManager;
  v4 = (void *)objc_opt_self();
  v5 = v1;
  v6 = objc_msgSend(v4, sel_sharedInstance);
  v7 = objc_msgSend(v6, sel_conversationManager);

  type metadata accessor for CollaborationInitiationManager();
  v8 = OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)&v1[v3] = v8;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for ShareViewController();
  v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

id ShareViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShareViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t closure #1 in ShareViewController.startProcessInputItemsTask()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v4[7] = a4;
  v4[8] = type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  v5 = (_QWORD *)swift_task_alloc();
  v4[10] = v5;
  *v5 = v4;
  v5[1] = closure #1 in ShareViewController.startProcessInputItemsTask();
  return ShareViewController.processInputItems()();
}

uint64_t closure #1 in ShareViewController.startProcessInputItemsTask()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  return OUTLINED_FUNCTION_24_29();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_44_2();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v15;

  OUTLINED_FUNCTION_44_2();
  if (one-time initialization token for default != -1)
    swift_once();
  v1 = *(void **)(v0 + 88);
  v2 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v2, (uint64_t)&static Log.default);
  v3 = v1;
  v4 = v1;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    v15 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v8 = Error.localizedDescription.getter();
    *(_QWORD *)(v0 + 48) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_30_10();
    OUTLINED_FUNCTION_30_10();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v5, v6, "Error processing input items: %s", v7);
    OUTLINED_FUNCTION_19_6();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_30_10();
  OUTLINED_FUNCTION_30_10();

  v10 = objc_msgSend(*(id *)(v0 + 56), sel_extensionContext);
  v11 = *(void **)(v0 + 88);
  if (v10)
  {
    v12 = v10;
    v13 = (void *)_convertErrorToNSError(_:)();
    objc_msgSend(v12, sel_cancelRequestWithError_, v13);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ShareViewController.processInputItems()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[32] = v0;
  type metadata accessor for MainActor();
  v1[33] = static MainActor.shared.getter();
  v1[34] = dispatch thunk of Actor.unownedExecutor.getter();
  v1[35] = v2;
  return swift_task_switch();
}

{
  uint64_t v0;
  id *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  id v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  void *v49;
  void *v50;
  uint64_t v51[2];

  v51[1] = *MEMORY[0x1E0C80C00];
  if (one-time initialization token for default != -1)
    swift_once();
  v1 = (id *)(v0 + 256);
  v2 = *(void **)(v0 + 256);
  v3 = OUTLINED_FUNCTION_17_2();
  v4 = __swift_project_value_buffer(v3, (uint64_t)&static Log.default);
  *(_QWORD *)(v0 + 288) = v4;
  v5 = v2;
  Logger.logObject.getter();
  v6 = OUTLINED_FUNCTION_18_13();
  v7 = OUTLINED_FUNCTION_21_12(v6);
  v8 = *(void **)(v0 + 256);
  if (v7)
  {
    v9 = (uint8_t *)OUTLINED_FUNCTION_105();
    v10 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 138412290;
    v11 = objc_msgSend(v8, sel_extensionContext);
    v12 = v11;
    if (v11)
      *(_QWORD *)(v0 + 248) = v11;
    else
      *(_QWORD *)(v0 + 240) = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v13 = *v1;
    *v10 = v12;

    OUTLINED_FUNCTION_48(&dword_1BD004000, v4, v6, "Received input items %@", v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v14 = objc_msgSend(*v1, sel_extensionContext);
  if (!v14)
    goto LABEL_26;
  v15 = v14;
  v16 = objc_msgSend(v14, sel_inputItems);

  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v0 + 296) = v17;

  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v0 + 304) = v18;
  if (!v18)
  {
    OUTLINED_FUNCTION_133();
LABEL_26:
    swift_release();
    lazy protocol witness table accessor for type ShareViewControllerError and conformance ShareViewControllerError();
    OUTLINED_FUNCTION_10_8();
    OUTLINED_FUNCTION_17_36();
    v38 = v37 | 0xF;
LABEL_27:
    OUTLINED_FUNCTION_4_51(v36, v38);
    goto LABEL_28;
  }
  v19 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 256)+ OBJC_IVAR____TtC15ConversationKit19ShareViewController_collaborationInitiationManager)+ 16), sel_activeConversations);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  lazy protocol witness table accessor for type TUConversation and conformance NSObject();
  v20 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Collection.first.getter();
  v22 = v21;
  *(_QWORD *)(v0 + 312) = v21;
  OUTLINED_FUNCTION_2_1();
  if (!v22)
  {
    swift_release();
    OUTLINED_FUNCTION_133();
    lazy protocol witness table accessor for type ShareViewControllerError and conformance ShareViewControllerError();
    OUTLINED_FUNCTION_10_8();
    OUTLINED_FUNCTION_17_36();
    v38 = v41 + 16;
    goto LABEL_27;
  }
  *(_QWORD *)(v0 + 200) = MEMORY[0x1E0DEE9D8];
  specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(*(_QWORD *)(v17 + 16), 0);
  specialized Array._endMutation()();
  v23 = 0;
  do
  {
    v24 = OUTLINED_FUNCTION_22_36(v23);
    outlined init with copy of Any(v24, v0 + 48);
    outlined init with copy of Any(v0 + 48, v0 + 80);
    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for NSExtensionItem);
    if (OUTLINED_FUNCTION_97())
    {
      OUTLINED_FUNCTION_42_20();
      v42 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 336) = v42;
      *v42 = v0;
      v42[1] = ShareViewController.processInputItems();
      v43 = OUTLINED_FUNCTION_38_23();
      return ShareViewController.processExtensionItem(_:for:)(v43, v44);
    }
    v25 = *(NSObject **)(v0 + 288);
    OUTLINED_FUNCTION_56_15(v0 + 48);
    Logger.logObject.getter();
    v26 = OUTLINED_FUNCTION_18_13();
    if (OUTLINED_FUNCTION_5_3(v26))
    {
      v27 = OUTLINED_FUNCTION_105();
      v51[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v27 = 136315138;
      OUTLINED_FUNCTION_52_15(v0 + 112);
      v28 = String.init<A>(describing:)();
      *(_QWORD *)(v27 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v51);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v25, v20, "Skipping %s since it's not a NSExtensionItem", (uint8_t *)v27);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_53_16();
    OUTLINED_FUNCTION_7_58(v0 + 48);
  }
  while (!v30);
  OUTLINED_FUNCTION_26_23();
  OUTLINED_FUNCTION_43();
  v31 = *(_QWORD *)(v0 + 200);
  if (v31 >> 62)
  {
    OUTLINED_FUNCTION_17_20();
    v32 = OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v32 = *(NSObject **)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v32)
  {
    OUTLINED_FUNCTION_36_28();
    Logger.logObject.getter();
    v33 = OUTLINED_FUNCTION_18_13();
    if (OUTLINED_FUNCTION_21_12(v33))
    {
      v34 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v34 = 134217984;
      if (v31 >> 62)
      {
        swift_bridgeObjectRetain();
        v35 = _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_13_3();
      }
      else
      {
        v35 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      OUTLINED_FUNCTION_13_3();
      *(_QWORD *)(v0 + 192) = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v32, v33, "Completing request with %ld processed item(s)", v34);
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_19_1();

    v48 = objc_msgSend(*(id *)(v0 + 256), sel_extensionContext);
    v49 = *(void **)(v0 + 312);
    if (v48)
    {
      v50 = v48;
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_64_8();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_20_36();

    }
    else
    {
      OUTLINED_FUNCTION_13_3();
      v50 = v49;
    }

    v39 = *(uint64_t (**)(void))(v0 + 8);
    return v39();
  }
  v45 = *(void **)(v0 + 312);
  OUTLINED_FUNCTION_13_3();
  lazy protocol witness table accessor for type ShareViewControllerError and conformance ShareViewControllerError();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_17_36();
  OUTLINED_FUNCTION_4_51(v46, v47);

LABEL_28:
  v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v2);
  *(_QWORD *)(v0 + 344) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_24_29();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27[2];

  v27[1] = *MEMORY[0x1E0C80C00];
  MEMORY[0x1C3B7301C](*(id *)(v0 + 328));
  if (*(_QWORD *)((*(_QWORD *)(v0 + 200) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 200) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v1 = *(void **)(v0 + 328);
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  OUTLINED_FUNCTION_7_58(v0 + 48);
  if (v3)
  {
LABEL_9:
    OUTLINED_FUNCTION_26_23();
    OUTLINED_FUNCTION_43();
    v10 = *(_QWORD *)(v0 + 200);
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = OUTLINED_FUNCTION_25_3();
      OUTLINED_FUNCTION_2_1();
      if (v23)
        goto LABEL_11;
    }
    else if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_11:
      v11 = *(NSObject **)(v0 + 288);
      swift_bridgeObjectRetain_n();
      Logger.logObject.getter();
      v12 = OUTLINED_FUNCTION_18_13();
      if (OUTLINED_FUNCTION_21_12(v12))
      {
        v13 = (uint8_t *)OUTLINED_FUNCTION_105();
        *(_DWORD *)v13 = 134217984;
        if (v10 >> 62)
        {
          swift_bridgeObjectRetain();
          v14 = _CocoaArrayWrapper.endIndex.getter();
          OUTLINED_FUNCTION_2_1();
        }
        else
        {
          v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        OUTLINED_FUNCTION_2_1();
        *(_QWORD *)(v0 + 192) = v14;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v11, v12, "Completing request with %ld processed item(s)", v13);
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_19_1();

      v19 = objc_msgSend(*(id *)(v0 + 256), sel_extensionContext);
      v20 = *(void **)(v0 + 312);
      if (v19)
      {
        v21 = v19;
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_64_8();
        OUTLINED_FUNCTION_13_3();
        OUTLINED_FUNCTION_20_36();

      }
      else
      {
        OUTLINED_FUNCTION_2_1();
        v21 = v20;
      }

      v22 = *(uint64_t (**)(void))(v0 + 8);
      return v22();
    }
    v24 = *(void **)(v0 + 312);
    OUTLINED_FUNCTION_2_1();
    lazy protocol witness table accessor for type ShareViewControllerError and conformance ShareViewControllerError();
    OUTLINED_FUNCTION_10_8();
    OUTLINED_FUNCTION_17_36();
    OUTLINED_FUNCTION_4_51(v25, v26);

    v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  while (1)
  {
    v4 = OUTLINED_FUNCTION_22_36(v2);
    outlined init with copy of Any(v4, v0 + 48);
    OUTLINED_FUNCTION_52_15(v0 + 48);
    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for NSExtensionItem);
    if (OUTLINED_FUNCTION_97())
      break;
    v5 = *(NSObject **)(v0 + 288);
    outlined init with copy of Any(v0 + 48, v0 + 112);
    Logger.logObject.getter();
    v6 = OUTLINED_FUNCTION_18_13();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = OUTLINED_FUNCTION_105();
      v27[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v7 = 136315138;
      outlined init with copy of Any(v0 + 112, v0 + 16);
      v8 = String.init<A>(describing:)();
      *(_QWORD *)(v7 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v27);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v5, v6, "Skipping %s since it's not a NSExtensionItem", (uint8_t *)v7);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    OUTLINED_FUNCTION_7_58(v0 + 48);
    if (v3)
      goto LABEL_9;
  }
  OUTLINED_FUNCTION_42_20();
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 336) = v15;
  *v15 = v0;
  v15[1] = ShareViewController.processInputItems();
  v16 = OUTLINED_FUNCTION_38_23();
  return ShareViewController.processExtensionItem(_:for:)(v16, v17);
}

{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  id v35;
  void *v36;
  void *v37;
  uint64_t (*v38)(void);
  void *v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43[2];

  v43[1] = *MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 344);
  v2 = *(id *)(v0 + 328);
  v3 = v1;
  v4 = v2;
  v5 = v1;
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v42 = *(void **)(v0 + 344);
    v8 = *(void **)(v0 + 328);
    v9 = OUTLINED_FUNCTION_105();
    v43[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 136315394;
    v10 = v8;
    v11 = objc_msgSend(v10, sel_description);
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v14 = v13;

    *(_QWORD *)(v0 + 208) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();

    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    v15 = Error.localizedDescription.getter();
    *(_QWORD *)(v0 + 232) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();

    _os_log_impl(&dword_1BD004000, v6, v7, "Skipping %s due to error: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  v17 = *(void **)(v0 + 328);

  OUTLINED_FUNCTION_48_3();
  OUTLINED_FUNCTION_48_3();

  OUTLINED_FUNCTION_48_3();
  OUTLINED_FUNCTION_7_58(v0 + 48);
  if (v19)
  {
LABEL_9:
    OUTLINED_FUNCTION_26_23();
    OUTLINED_FUNCTION_43();
    v26 = *(_QWORD *)(v0 + 200);
    if (v26 >> 62)
    {
      OUTLINED_FUNCTION_17_20();
      v27 = OUTLINED_FUNCTION_25_3();
      OUTLINED_FUNCTION_13_3();
      if (v27)
        goto LABEL_11;
    }
    else
    {
      v27 = *(NSObject **)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v27)
      {
LABEL_11:
        OUTLINED_FUNCTION_36_28();
        Logger.logObject.getter();
        v28 = OUTLINED_FUNCTION_18_13();
        if (OUTLINED_FUNCTION_21_12(v28))
        {
          v29 = (uint8_t *)OUTLINED_FUNCTION_105();
          *(_DWORD *)v29 = 134217984;
          if (v26 >> 62)
          {
            swift_bridgeObjectRetain();
            v30 = _CocoaArrayWrapper.endIndex.getter();
            OUTLINED_FUNCTION_13_3();
          }
          else
          {
            v30 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          OUTLINED_FUNCTION_13_3();
          *(_QWORD *)(v0 + 192) = v30;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_13_3();
          OUTLINED_FUNCTION_48(&dword_1BD004000, v27, v28, "Completing request with %ld processed item(s)", v29);
          OUTLINED_FUNCTION_60();
        }
        OUTLINED_FUNCTION_19_1();

        v35 = objc_msgSend(*(id *)(v0 + 256), sel_extensionContext);
        v36 = *(void **)(v0 + 312);
        if (v35)
        {
          v37 = v35;
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_64_8();
          OUTLINED_FUNCTION_13_3();
          OUTLINED_FUNCTION_20_36();

        }
        else
        {
          OUTLINED_FUNCTION_13_3();
          v37 = v36;
        }

        v38 = *(uint64_t (**)(void))(v0 + 8);
        return v38();
      }
    }
    v39 = *(void **)(v0 + 312);
    OUTLINED_FUNCTION_13_3();
    lazy protocol witness table accessor for type ShareViewControllerError and conformance ShareViewControllerError();
    OUTLINED_FUNCTION_10_8();
    OUTLINED_FUNCTION_17_36();
    OUTLINED_FUNCTION_4_51(v40, v41);

    v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
  while (1)
  {
    v20 = OUTLINED_FUNCTION_22_36(v18);
    outlined init with copy of Any(v20, v0 + 48);
    OUTLINED_FUNCTION_52_15(v0 + 48);
    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for NSExtensionItem);
    if (OUTLINED_FUNCTION_97())
      break;
    v21 = *(NSObject **)(v0 + 288);
    OUTLINED_FUNCTION_56_15(v0 + 48);
    Logger.logObject.getter();
    v22 = OUTLINED_FUNCTION_18_13();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = OUTLINED_FUNCTION_105();
      v43[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v23 = 136315138;
      OUTLINED_FUNCTION_56_15(v0 + 112);
      v24 = String.init<A>(describing:)();
      *(_QWORD *)(v23 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, v43);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_53_16();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v21, v22, "Skipping %s since it's not a NSExtensionItem", (uint8_t *)v23);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_53_16();
    OUTLINED_FUNCTION_7_58(v0 + 48);
    if (v19)
      goto LABEL_9;
  }
  OUTLINED_FUNCTION_42_20();
  v31 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 336) = v31;
  *v31 = v0;
  v31[1] = ShareViewController.processInputItems();
  v32 = OUTLINED_FUNCTION_38_23();
  return ShareViewController.processExtensionItem(_:for:)(v32, v33);
}

uint64_t ShareViewController.processExtensionItem(_:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for UUID();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = type metadata accessor for MainActor();
  v3[9] = static MainActor.shared.getter();
  v3[10] = dispatch thunk of Actor.unownedExecutor.getter();
  v3[11] = v5;
  return swift_task_switch();
}

uint64_t ShareViewController.processExtensionItem(_:for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  id v8;
  id v9;
  unint64_t v10;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  v3 = outlined bridged method (pb) of @objc NSExtensionItem.attachments.getter(*(void **)(v0 + 16));
  *(_QWORD *)(v0 + 96) = v3;
  if (v3)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = OUTLINED_FUNCTION_25_3();
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(v0 + 104) = v4;
    if (v4)
    {
      OUTLINED_FUNCTION_69_9();
      if (v6)
        v7 = OUTLINED_FUNCTION_5_6(v5);
      else
        v7 = (id)MEMORY[0x1C3B73D18](0);
      *(_QWORD *)(v0 + 112) = v7;
      *(_QWORD *)(v0 + 120) = 1;
      OUTLINED_FUNCTION_1_56();
    }
    OUTLINED_FUNCTION_31_32();
    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_30_31();
    v8 = OUTLINED_FUNCTION_60_13();
    v9 = objc_msgSend(v8, sel_description);
    OUTLINED_FUNCTION_62_12();
    OUTLINED_FUNCTION_27_22();

    OUTLINED_FUNCTION_27();
    v16 = v1;
    v17 = v2;
    OUTLINED_FUNCTION_39_26();
  }
  else
  {
    OUTLINED_FUNCTION_31_32();
    _StringGuts.grow(_:)(21);
    v12 = OUTLINED_FUNCTION_60_13();
    v13 = objc_msgSend(v12, sel_description);
    OUTLINED_FUNCTION_62_12();
    OUTLINED_FUNCTION_27_22();

    OUTLINED_FUNCTION_27();
    v16 = v1;
    v17 = v2;
    OUTLINED_FUNCTION_39_26();
    v10 = 0xD000000000000013;
  }
  String.append(_:)(*(Swift::String *)&v10);
  lazy protocol witness table accessor for type ShareViewControllerError and conformance ShareViewControllerError();
  OUTLINED_FUNCTION_10_8();
  *v14 = v16;
  v14[1] = v17;
  swift_willThrow();
  OUTLINED_FUNCTION_19_34();
  return OUTLINED_FUNCTION_8_51(*(uint64_t (**)(void))(v0 + 8));
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_30();
  v0[17] = v2;
  v0[18] = v3;
  v0[19] = v1;
  swift_task_dealloc();
  if (v1)
    OUTLINED_FUNCTION_19_1();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_30();
  v0[23] = v2;
  v0[24] = v1;
  swift_task_dealloc();
  if (v1)
    OUTLINED_FUNCTION_34_18(v0[6]);
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;

  v1 = *(void **)(v0 + 160);
  if (*(_BYTE *)(v0 + 264) == 1)
  {
    v3 = *(_QWORD *)(v0 + 24);
    v2 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 232) = static MainActor.shared.getter();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v4;
    v4[2] = v2;
    v4[3] = v1;
    v4[4] = v3;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v5;
    *v5 = v0;
    v5[1] = ShareViewController.processExtensionItem(_:for:);
    return OUTLINED_FUNCTION_23_33();
  }
  else
  {
    OUTLINED_FUNCTION_44_2();
    lazy protocol witness table accessor for type ShareViewControllerError and conformance ShareViewControllerError();
    OUTLINED_FUNCTION_10_8();
    OUTLINED_FUNCTION_4_51(v7, 0xD000000000000033);

    OUTLINED_FUNCTION_19_34();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v2);
  *(_QWORD *)(v0 + 256) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    OUTLINED_FUNCTION_29_0();
  }
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_release();
  ShareViewController.backgroundSendUtility.setter(0);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 112);
  OUTLINED_FUNCTION_44_2();

  OUTLINED_FUNCTION_19_34();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_59_16();

  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_19_34();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
}

{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_59_16();

  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_19_34();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);

  swift_release();
  swift_release();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_19_34();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

void ShareViewController.processExtensionItem(_:for:)()
{
  os_log_type_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;

  v2 = (void *)MEMORY[0x1C3B72E00](v1[17], v1[18]);
  consumeSandboxToken(v2);

  if (one-time initialization token for default != -1)
    goto LABEL_15;
  while (1)
  {
    v3 = OUTLINED_FUNCTION_17_2();
    v4 = __swift_project_value_buffer(v3, (uint64_t)&static Log.default);
    OUTLINED_FUNCTION_5_0();
    v5 = v4;
    Logger.logObject.getter();
    v6 = OUTLINED_FUNCTION_18_13();
    v7 = OUTLINED_FUNCTION_5_3(v6);
    v8 = v1[18];
    if (v7)
    {
      v9 = v1[17];
      v10 = OUTLINED_FUNCTION_105();
      v17 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v10 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v10 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v8, &v17);
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v5, v0, "Consumed sandbox token %s", (uint8_t *)v10);
      OUTLINED_FUNCTION_19_6();
      OUTLINED_FUNCTION_60();
    }
    v11 = (void *)v1[14];
    OUTLINED_FUNCTION_19_1();

    OUTLINED_FUNCTION_43_24();
    if (v12)
    {
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_5_0();
      OUTLINED_FUNCTION_69_9();
      if (v12)
        v16 = OUTLINED_FUNCTION_5_6(v15);
      else
        v16 = (id)MEMORY[0x1C3B73D18](0);
      v1[20] = v16;
      OUTLINED_FUNCTION_1_56();
    }
    OUTLINED_FUNCTION_69_9();
    if (v12)
      v14 = OUTLINED_FUNCTION_5_6(v13 + 8 * (_QWORD)v11);
    else
      v14 = (id)MEMORY[0x1C3B73D18](v11);
    v1[14] = v14;
    v1[15] = (char *)v11 + 1;
    if (!__OFADD__(v11, 1))
      OUTLINED_FUNCTION_1_56();
    __break(1u);
LABEL_15:
    swift_once();
  }
}

id ShareViewController.processExtensionItem(_:for:)()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v2 = objc_msgSend(*(id *)(v1 + 16), sel_attributedTitle);
  if (v2)
  {
    v3 = objc_msgSend(v2, sel_string);
    OUTLINED_FUNCTION_14_18();
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  *(_QWORD *)(v1 + 200) = v6;
  result = objc_msgSend(*(id *)(v1 + 32), sel_view);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(v1 + 32);
    v10 = objc_msgSend(result, sel_window);
    *(_QWORD *)(v1 + 208) = v10;

    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 216) = v11;
    *v11 = v1;
    v11[1] = ShareViewController.processExtensionItem(_:for:);
    return (id)CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 184), v4, v6, (uint64_t)v10, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ShareViewController.processExtensionItem(_:for:)(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;

  v9 = *v2;
  v4 = v9;
  OUTLINED_FUNCTION_24_4(&v9);
  *(_QWORD *)(v4 + 224) = v1;
  swift_task_dealloc();
  v5 = *(void **)(v4 + 208);
  v6 = *(void **)(v4 + 184);
  v7 = *(_QWORD *)(v4 + 48);
  if (!v1)
    *(_BYTE *)(v4 + 264) = a1 & 1;
  OUTLINED_FUNCTION_34_18(v7);

  OUTLINED_FUNCTION_2_1();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t ShareViewController.loadSandboxToken(from:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t ObjectType;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v1[4] = a1;
  v1[5] = ObjectType;
  v1[6] = type metadata accessor for MainActor();
  v1[7] = static MainActor.shared.getter();
  v1[8] = dispatch thunk of Actor.unownedExecutor.getter();
  v1[9] = v4;
  return swift_task_switch();
}

uint64_t ShareViewController.loadSandboxToken(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 80) = static MainActor.shared.getter();
  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *(_OWORD *)(v1 + 16) = v4;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v2;
  *v2 = v0;
  v2[1] = ShareViewController.loadSandboxToken(from:);
  return OUTLINED_FUNCTION_23_33();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v2);
  *(_QWORD *)(v0 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    OUTLINED_FUNCTION_29_0();
  }
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

{
  uint64_t v0;

  swift_release();
  swift_release();
  OUTLINED_FUNCTION_29_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void closure #1 in ShareViewController.loadSandboxToken(from:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<String, Error>);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (void *)MEMORY[0x1C3B72E00](0x2D786F62646E6173, 0xED00006E656B6F74);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = partial apply for closure #1 in closure #1 in ShareViewController.loadSandboxToken(from:);
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSItemProviderReading?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_25;
  v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_loadItemForTypeIdentifier_options_completionHandler_, v7, 0, v10);
  _Block_release(v10);

}

uint64_t closure #1 in closure #1 in ShareViewController.loadSandboxToken(from:)(uint64_t a1, void *a2)
{
  Swift::String v4;
  id v5;
  Swift::String v6;
  _QWORD *v7;

  if (a1
    && (swift_unknownObjectRetain(),
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSSecureCoding),
        (swift_dynamicCast() & 1) != 0))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<String, Error>);
    return CheckedContinuation.resume(returning:)();
  }
  else
  {
    _StringGuts.grow(_:)(55);
    v4._object = (void *)0x80000001BD677510;
    v4._countAndFlagsBits = 0xD000000000000035;
    String.append(_:)(v4);
    v5 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error?);
    v6._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    lazy protocol witness table accessor for type ShareViewControllerError and conformance ShareViewControllerError();
    swift_allocError();
    *v7 = 0;
    v7[1] = 0xE000000000000000;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<String, Error>);
    return CheckedContinuation.resume(throwing:)();
  }
}

void closure #2 in ShareViewController.processExtensionItem(_:for:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Error>);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  objc_allocWithZone((Class)CNKBackgroundSendUtility);
  v12 = @nonobjc CNKBackgroundSendUtility.init(itemProvider:faceTime:completion:)(a3, a4, (uint64_t)partial apply for closure #1 in closure #2 in ShareViewController.processExtensionItem(_:for:), v11);
  ShareViewController.backgroundSendUtility.setter((uint64_t)v12);
}

uint64_t closure #1 in closure #2 in ShareViewController.processExtensionItem(_:for:)(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Error>);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Error>);
    return CheckedContinuation.resume(returning:)();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ShareViewControllerError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ShareViewControllerError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ShareViewControllerError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ShareViewControllerError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareViewControllerError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareViewControllerError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareViewControllerError()
{
  return &type metadata for ShareViewControllerError;
}

uint64_t method lookup function for ShareViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BD16C510()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ShareViewController.startProcessInputItemsTask()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  return closure #1 in ShareViewController.startProcessInputItemsTask()(a1, v4, v5, v6);
}

id @nonobjc CNKBackgroundSendUtility.init(itemProvider:faceTime:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  id v8;
  _QWORD v10[6];

  v10[4] = a3;
  v10[5] = a4;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  v10[3] = &block_descriptor_20_2;
  v7 = _Block_copy(v10);
  v8 = objc_msgSend(v4, sel_initWithItemProvider_faceTimeConversation_completion_, a1, a2, v7);

  _Block_release(v7);
  swift_release();
  return v8;
}

unint64_t lazy protocol witness table accessor for type ShareViewControllerError and conformance ShareViewControllerError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ShareViewControllerError and conformance ShareViewControllerError;
  if (!lazy protocol witness table cache variable for type ShareViewControllerError and conformance ShareViewControllerError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ShareViewControllerError, &type metadata for ShareViewControllerError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareViewControllerError and conformance ShareViewControllerError);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TUConversation and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type TUConversation and conformance NSObject;
  if (!lazy protocol witness table cache variable for type TUConversation and conformance NSObject)
  {
    v1 = _sSo8NSObjectCMaTm_0(255, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject);
  }
  return result;
}

uint64_t outlined bridged method (pb) of @objc NSExtensionItem.attachments.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_attachments);
  if (!v1)
    return 0;
  v2 = v1;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSItemProvider);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void outlined bridged method (mbnnn) of @objc NSExtensionContext.completeRequest(returningItems:completionHandler:)(uint64_t a1, uint64_t a2, void *a3)
{
  Class isa;

  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_completeRequestReturningItems_completionHandler_, isa, a2);

}

void partial apply for closure #2 in ShareViewController.processExtensionItem(_:for:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in ShareViewController.processExtensionItem(_:for:)(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

void partial apply for closure #1 in ShareViewController.loadSandboxToken(from:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in ShareViewController.loadSandboxToken(from:)(a1, *(void **)(v1 + 16));
}

uint64_t sub_1BD16C7C8()
{
  return objectdestroy_13Tm((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<String, Error>);
}

uint64_t partial apply for closure #1 in closure #1 in ShareViewController.loadSandboxToken(from:)(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<String, Error>);
  OUTLINED_FUNCTION_49_3();
  return closure #1 in closure #1 in ShareViewController.loadSandboxToken(from:)(a1, a2);
}

uint64_t sub_1BD16C818()
{
  return objectdestroy_13Tm(&demangling cache variable for type metadata for CheckedContinuation<(), Error>);
}

uint64_t objectdestroy_13Tm(uint64_t *a1)
{
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_34_18(*(_QWORD *)(v1 - 8));
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in ShareViewController.processExtensionItem(_:for:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Error>);
  OUTLINED_FUNCTION_49_3();
  return closure #1 in closure #2 in ShareViewController.processExtensionItem(_:for:)(a1);
}

void ShareCardSharePlayHeaderView.controlsManager.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ShareCardSharePlayHeaderView.controlsManager.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ShareCardSharePlayHeaderView.app.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*ShareCardSharePlayHeaderView.app.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id ShareCardSharePlayHeaderView.init(controlsManager:app:)(void *a1, _QWORD *a2)
{
  void (*v4)(void);
  id v5;
  _QWORD *v6;

  State.init(wrappedValue:)();
  v4 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x78);
  v5 = a1;
  v6 = a2;
  v4();

  swift_release();
  return v5;
}

uint64_t ShareCardSharePlayHeaderView.picker.getter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (**v27)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;

  v4 = type metadata accessor for MenuOrder();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView>>);
  v32 = *(_QWORD *)(v29 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_1();
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.menuOrder(_:)>>.0);
  v31 = *(_QWORD *)(v33 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  v18 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v36._object = (void *)0xE000000000000000;
  v19._object = (void *)0x80000001BD670220;
  v19._countAndFlagsBits = 0xD000000000000017;
  v20.value._countAndFlagsBits = 0x61737265766E6F43;
  v20.value._object = (void *)0xEF74694B6E6F6974;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v36._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v36);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BD6441D0;
  v23 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x68))();
  v25 = v24;
  *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v22 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v25;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  String.uppercased()();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView> and conformance <> Section<A, B, C>();
  Menu.init(content:label:)();
  static MenuOrder.fixed.getter();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Menu<ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView>>, MEMORY[0x1E0CDD990]);
  View.menuOrder(_:)();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v8, v35);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v2, v29);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v17, v13, v33);
  v27 = (uint64_t (**)())(v17 + *(int *)(v30 + 36));
  *v27 = partial apply for closure #1 in View.animation(_:);
  v27[1] = (uint64_t (*)())v26;
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v13, v33);
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type String and conformance String();
  View.accessibilityLabel<A>(_:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v17, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in ShareCardSharePlayHeaderView.picker.getter()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>);
  lazy protocol witness table accessor for type ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>> and conformance <> ForEach<A, B, C>();
  lazy protocol witness table accessor for type String and conformance String();
  return Section<>.init<A>(_:content:)();
}

uint64_t closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter(void *a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v8;
  id v9;
  id v10;

  swift_getKeyPath();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_BYTE *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  swift_retain();
  v9 = a1;
  v10 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ForegroundApp.AutomaticShareState]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<HStack<TupleView<(Text, Spacer, Image?)>>>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type [ForegroundApp.AutomaticShareState] and conformance [A], &demangling cache variable for type metadata for [ForegroundApp.AutomaticShareState], MEMORY[0x1E0DEAF48]);
  lazy protocol witness table accessor for type ForegroundApp.AutomaticShareState and conformance ForegroundApp.AutomaticShareState();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Button<HStack<TupleView<(Text, Spacer, Image?)>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<HStack<TupleView<(Text, Spacer, Image?)>>>, MEMORY[0x1E0CDFA58]);
  return ForEach<>.init(_:id:content:)();
}

uint64_t closure #1 in closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter(char *a1, void *a2, void *a3, char a4, uint64_t a5)
{
  char v9;
  uint64_t v10;
  id v11;
  id v12;

  v9 = *a1;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  *(_BYTE *)(v10 + 32) = a4;
  *(_QWORD *)(v10 + 40) = a5;
  *(_BYTE *)(v10 + 48) = v9;
  swift_retain();
  v11 = a2;
  v12 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Text, Spacer, Image?)>>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type HStack<TupleView<(Text, Spacer, Image?)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Text, Spacer, Image?)>>, MEMORY[0x1E0CDFB10]);
  return Button.init(action:label:)();
}

void closure #1 in closure #1 in closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v6;

  v6 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ForegroundApp.AutomaticShareState>);
  State.wrappedValue.setter();
  (*(void (**)(BOOL))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x90))(v6 == 2);
  ShareCardSharePlayHeaderView.shareMediaEphemeralAlert(authorization:)();
}

uint64_t sub_1BD16D130(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))((*v4 & *v3) + 0x7F8))(a1, a2, a3 & 1);
}

__n128 closure #2 in closure #1 in closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter@<Q0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __n128 result;
  __n128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v4 = static VerticalAlignment.center.getter();
  closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter(a1, (uint64_t)&v11);
  v5 = v12;
  v6 = v13;
  v7 = v14;
  v8 = v15;
  v9 = v16;
  result = v11;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(__n128 *)(a2 + 24) = result;
  *(_BYTE *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = v7;
  *(_BYTE *)(a2 + 64) = v8;
  *(_QWORD *)(a2 + 72) = v9;
  return result;
}

uint64_t closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  int v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  Swift::String_optional v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  unsigned __int8 v21;

  v3 = a1;
  v4 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v20 = 0xE000000000000000;
  if (v3 == 1)
  {
    v5 = 0x7478654E206B7341;
    v6 = 0x656D695420;
  }
  else
  {
    v5 = 0x6974616D6F747541;
    v6 = 0x796C6C6163;
  }
  v7 = v6 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
  v8.value._countAndFlagsBits = 0x61737265766E6F43;
  v8.value._object = (void *)0xEF74694B6E6F6974;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, v8, (NSBundle)v4, v9, *(Swift::String *)(&v20 - 1));

  lazy protocol witness table accessor for type String and conformance String();
  v11 = Text.init<A>(_:)();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ForegroundApp.AutomaticShareState>);
  State.wrappedValue.getter();
  if (v21 == v3)
    v18 = Image.init(systemName:)();
  else
    v18 = 0;
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v13;
  *(_BYTE *)(a2 + 16) = v15 & 1;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  *(_QWORD *)(a2 + 48) = v18;
  outlined copy of Text.Storage(v11, v13, v15 & 1);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v11, v13, v15 & 1);
  return swift_bridgeObjectRelease();
}

void closure #2 in ShareCardSharePlayHeaderView.picker.getter(char a1@<W2>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  Swift::String_optional v21;
  Swift::String v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t KeyPath;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  unsigned __int8 v45;

  v43 = a3;
  v5 = type metadata accessor for LayoutDirection();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>);
  MEMORY[0x1E0C80A78](v38);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1E0C80A78](v39);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
  MEMORY[0x1E0C80A78](v40);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v44._countAndFlagsBits) = a1;
  v44._object = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ForegroundApp.AutomaticShareState>);
  State.wrappedValue.getter();
  LODWORD(a2) = v45;
  v18 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  if ((_DWORD)a2 == 1)
  {
    v19 = 0xD000000000000014;
    v36 = 0xE000000000000000;
    v20 = 0x80000001BD66D330;
  }
  else
  {
    v36 = 0xE000000000000000;
    v20 = 0x80000001BD66D350;
    v19 = 0xD000000000000017;
  }
  v21.value._countAndFlagsBits = 0x61737265766E6F43;
  v21.value._object = (void *)0xEF74694B6E6F6974;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v23 = 0;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v19, v21, (NSBundle)v18, v22, *(Swift::String *)(&v36 - 1));

  v44 = v24;
  lazy protocol witness table accessor for type String and conformance String();
  Label<>.init<A>(_:systemImage:)();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CD9A98], v5);
  v26 = (uint64_t *)&v13[*(int *)(v38 + 36)];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<LayoutDirection>);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v26 + *(int *)(v27 + 28), v8, v5);
  *v26 = KeyPath;
  v29 = v41;
  v28 = v42;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v13, v11, v42);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v28);
  v30 = static Color.secondary.getter();
  v31 = swift_getKeyPath();
  outlined init with copy of FeatureEligibility?((uint64_t)v13, (uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>);
  v32 = (uint64_t *)&v15[*(int *)(v39 + 36)];
  *v32 = v31;
  v32[1] = v30;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>);
  v33 = static Font.callout.getter();
  v34 = swift_getKeyPath();
  outlined init with copy of FeatureEligibility?((uint64_t)v15, (uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>);
  v35 = (uint64_t *)&v17[*(int *)(v40 + 36)];
  *v35 = v34;
  v35[1] = v33;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>);
  outlined init with take of Any?((uint64_t)v17, v43, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
}

uint64_t closure #1 in ShareCardSharePlayHeaderView.content.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[51];
  unsigned __int8 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[51];

  v38 = a4;
  v37 = a3;
  v35 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>);
  v8 = MEMORY[0x1E0C80A78](v7);
  v39 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - v10;
  v12 = type metadata accessor for Image.ResizingMode();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v36 = a2;
  static UIImage.appIcon(for:usingIconCrop:)(*(_QWORD *)((char *)a2 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier), *(void **)((char *)a2 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier + 8), 0);
  if (v16)
  {
    v17 = v16;
    Image.init(uiImage:)();
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0CDF6F8], v12);
    v18 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    static Layout.ConversationControls.values.getter((uint64_t)v40);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    v33 = v41;
    v34 = v40[50];
    v32 = v42;
    v19 = v43;
    v20 = v44;
    v21 = v45;

    v22 = 0x3FF0000000000000;
  }
  else
  {
    v18 = 0;
    v22 = 0;
    v33 = 0;
    v34 = 0;
    v32 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
  }
  v23 = static HorizontalAlignment.leading.getter();
  static Layout.ConversationControls.values.getter((uint64_t)v46);
  v24 = v46[17];
  *(_QWORD *)v11 = v23;
  *((_QWORD *)v11 + 1) = v24;
  v11[16] = 0;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>);
  closure #1 in closure #1 in ShareCardSharePlayHeaderView.content.getter(v35, v36, v37, v38, (uint64_t)&v11[*(int *)(v25 + 44)]);
  v26 = v39;
  outlined init with copy of FeatureEligibility?((uint64_t)v11, v39, &demangling cache variable for type metadata for VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>);
  *a5 = v18;
  a5[1] = v22;
  v27 = v34;
  a5[2] = 0;
  a5[3] = v27;
  v28 = v32;
  a5[4] = v33;
  a5[5] = v28;
  a5[6] = v19;
  a5[7] = v20;
  a5[8] = v21;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>));
  outlined init with copy of FeatureEligibility?(v26, (uint64_t)a5 + *(int *)(v29 + 48), &demangling cache variable for type metadata for VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>);
  swift_retain();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v11, &demangling cache variable for type metadata for VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v26, &demangling cache variable for type metadata for VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>);
  return swift_release();
}

uint64_t closure #1 in closure #1 in ShareCardSharePlayHeaderView.content.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a4;
  v32 = a3;
  v31 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>);
  v8 = MEMORY[0x1E0C80A78](v7);
  v30 = (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v29 - v11;
  v29 = a2;
  v34 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x68))(v10);
  v35 = v13;
  lazy protocol witness table accessor for type String and conformance String();
  v14 = Text.init<A>(_:)();
  v16 = v15;
  v18 = v17 & 1;
  static Font.Weight.bold.getter();
  v19 = Text.fontWeight(_:)();
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  outlined consume of Text.Storage(v14, v16, v18);
  swift_bridgeObjectRelease();
  ShareCardSharePlayHeaderView.picker.getter(v31, v29);
  v26 = v30;
  outlined init with copy of FeatureEligibility?((uint64_t)v12, v30, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>);
  *(_QWORD *)a5 = v19;
  *(_QWORD *)(a5 + 8) = v21;
  *(_BYTE *)(a5 + 16) = v25;
  *(_QWORD *)(a5 + 24) = v23;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>));
  outlined init with copy of FeatureEligibility?(v26, a5 + *(int *)(v27 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>);
  outlined copy of Text.Storage(v19, v21, v25);
  swift_bridgeObjectRetain();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v26, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>);
  outlined consume of Text.Storage(v19, v21, v25);
  return swift_bridgeObjectRelease();
}

void ShareCardSharePlayHeaderView.body.getter(uint64_t a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = (_BYTE *)(v11 - v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout>, _FlexFrameLayout>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_4_1();
  v19 = static Axis.Set.horizontal.getter();
  v20 = static Axis.Set.vertical.getter();
  v21 = Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v19)
    v21 = Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v20)
    v21 = Axis.Set.init(rawValue:)();
  *v12 = v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_SizeFittingRoot, TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>);
  closure #1 in ShareCardSharePlayHeaderView.body.getter(a1, a2, a3, a4, (uint64_t)&v12[*(int *)(v22 + 44)]);
  v23 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  outlined init with copy of FeatureEligibility?((uint64_t)v12, v17, &demangling cache variable for type metadata for ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>);
  v32 = v17 + *(int *)(v13 + 36);
  *(_BYTE *)v32 = v23;
  *(_QWORD *)(v32 + 8) = v25;
  *(_QWORD *)(v32 + 16) = v27;
  *(_QWORD *)(v32 + 24) = v29;
  *(_QWORD *)(v32 + 32) = v31;
  *(_BYTE *)(v32 + 40) = 0;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v12, &demangling cache variable for type metadata for ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>);
  v33 = static Alignment.leading.getter();
  v36 = 1;
  v35 = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v35, 0, v36, v33, v34);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v17, &demangling cache variable for type metadata for ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout>);
  outlined init with take of Any?(v5, a5, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout>, _FlexFrameLayout>);
}

void closure #1 in ShareCardSharePlayHeaderView.body.getter(uint64_t a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[50];
  _QWORD v30[51];

  v28 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29[-1] - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v29[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v29[-1] - v19;
  static Layout.ConversationControls.values.getter((uint64_t)v29);
  v21 = v29[15];
  *(_QWORD *)v20 = static VerticalAlignment.center.getter();
  *((_QWORD *)v20 + 1) = v21;
  v20[16] = 0;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
  closure #1 in ShareCardSharePlayHeaderView.content.getter(a1, a2, a3, a4, (uint64_t *)&v20[*(int *)(v22 + 44)]);
  v23 = static HorizontalAlignment.leading.getter();
  static Layout.ConversationControls.values.getter((uint64_t)v30);
  v24 = v30[16];
  *(_QWORD *)v14 = v23;
  *((_QWORD *)v14 + 1) = v24;
  v14[16] = 0;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
  closure #1 in ShareCardSharePlayHeaderView.content.getter(a1, a2, a3, a4, (uint64_t *)&v14[*(int *)(v25 + 44)]);
  outlined init with copy of FeatureEligibility?((uint64_t)v20, (uint64_t)v18, &demangling cache variable for type metadata for HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
  outlined init with copy of FeatureEligibility?((uint64_t)v14, (uint64_t)v12, &demangling cache variable for type metadata for VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
  v26 = v28;
  outlined init with copy of FeatureEligibility?((uint64_t)v18, v28, &demangling cache variable for type metadata for HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>));
  outlined init with copy of FeatureEligibility?((uint64_t)v12, v26 + *(int *)(v27 + 48), &demangling cache variable for type metadata for VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v14, &demangling cache variable for type metadata for VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v20, &demangling cache variable for type metadata for HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v12, &demangling cache variable for type metadata for VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v18, &demangling cache variable for type metadata for HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>);
}

void ShareCardSharePlayHeaderView.shareMediaEphemeralAlert(authorization:)()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  _QWORD v9[4];
  __int16 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  Swift::String v14;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AD0];
  v9[0] = 0x616C706572616873;
  v9[1] = 0xE900000000000079;
  v9[2] = 1;
  v9[3] = v0;
  v10 = 0;
  v11 = 4;
  v12 = 0;
  v13 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v9);

  swift_bridgeObjectRelease();
  if (v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v4 = objc_msgSend(v2, sel_imageWithTintColor_, v3);

  }
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v6._object = (void *)0xE900000000000059;
  v14._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0x414C504552414853;
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v14);

  static NSAttributedString.localizedString(_:prefixImage:imageBounds:)();
}

void sub_1BD16E274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11)
{
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  Swift::String_optional v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;

  v14 = swift_bridgeObjectRelease();
  v15 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x68))(v14);
  v17 = v16;
  v18 = objc_msgSend(v13, *(SEL *)(v11 + 864));
  if ((a11 & 1) != 0)
  {
    v19 = 0xD00000000000001FLL;
    v20 = 0x80000001BD6701A0;
  }
  else
  {
    v20 = 0x80000001BD670180;
    v19 = 0xD000000000000015;
  }
  v21.value._countAndFlagsBits = 0x61737265766E6F43;
  v21.value._object = (void *)0xEF74694B6E6F6974;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v19, v21, (NSBundle)v18, v22, v28);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v23 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v23 + 32) = v15;
  *(_QWORD *)(v23 + 40) = v17;
  v24 = String.init(format:_:)();
  v26 = v25;
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = v24;
  v27._object = v26;
  NSMutableAttributedString.__allocating_init(string:)(v27);
}

uint64_t sub_1BD16E3B8()
{
  void *v0;
  uint64_t v1;

  return v1;
}

void protocol witness for View.body.getter in conformance ShareCardSharePlayHeaderView(uint64_t a1@<X8>)
{
  uint64_t v1;

  ShareCardSharePlayHeaderView.body.getter(*(_QWORD *)v1, *(_QWORD **)(v1 + 8), *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t partial apply for closure #1 in ShareCardSharePlayHeaderView.picker.getter()
{
  return closure #1 in ShareCardSharePlayHeaderView.picker.getter();
}

void partial apply for closure #2 in ShareCardSharePlayHeaderView.picker.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  closure #2 in ShareCardSharePlayHeaderView.picker.getter(*(_BYTE *)(v1 + 32), *(void **)(v1 + 40), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>, MEMORY[0x1E0CDCF80]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>, MEMORY[0x1E0CDCF80]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>, MEMORY[0x1E0CDF8C8]);
    v3 = v2;
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<LayoutDirection> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<LayoutDirection>, MEMORY[0x1E0CDCF80]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView> and conformance <> Section<A, B, C>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[3];

  result = lazy protocol witness table cache variable for type Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView> and conformance <> Section<A, B, C>;
  if (!lazy protocol witness table cache variable for type Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView> and conformance <> Section<A, B, C>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView>);
    v2 = lazy protocol witness table accessor for type ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>> and conformance <> ForEach<A, B, C>();
    v3[0] = MEMORY[0x1E0CDDD58];
    v3[1] = v2;
    v3[2] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFF98], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView> and conformance <> Section<A, B, C>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>> and conformance <> ForEach<A, B, C>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>> and conformance <> ForEach<A, B, C>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Button<HStack<TupleView<(Text, Spacer, Image?)>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<HStack<TupleView<(Text, Spacer, Image?)>>>, MEMORY[0x1E0CDFA58]);
    v3 = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFEE8], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

uint64_t closure #1 in View.animation(_:)()
{
  uint64_t result;

  result = Transaction.disablesAnimations.getter();
  if ((result & 1) == 0)
  {
    swift_retain();
    return Transaction.animation.setter();
  }
  return result;
}

uint64_t sub_1BD16E6F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in View.animation(_:)()
{
  return closure #1 in View.animation(_:)();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Menu<ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Menu<ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<ModifiedContent<ModifiedContent<ModifiedContent<Label<Text, Image>, _EnvironmentKeyWritingModifier<LayoutDirection>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, Section<Text, ForEach<[ForegroundApp.AutomaticShareState], ForegroundApp.AutomaticShareState, Button<HStack<TupleView<(Text, Spacer, Image?)>>>>, EmptyView>>, MEMORY[0x1E0CDD990]);
    v4[2] = v2;
    v4[3] = v3;
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x1E0CDBC38];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ShareCardSharePlayHeaderView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ShareCardSharePlayHeaderView(id *a1)
{

  return swift_release();
}

uint64_t initializeWithCopy for ShareCardSharePlayHeaderView(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = v3;
  v6 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ShareCardSharePlayHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ShareCardSharePlayHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareCardSharePlayHeaderView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareCardSharePlayHeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareCardSharePlayHeaderView()
{
  return &type metadata for ShareCardSharePlayHeaderView;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>> and conformance <A> Group<A>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>> and conformance <A> Group<A>;
  if (!lazy protocol witness table cache variable for type Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>> and conformance <A> Group<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>, MEMORY[0x1E0CE0680]);
    v3 = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDF690], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>> and conformance <A> Group<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout>, _FlexFrameLayout>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>> and conformance ViewThatFits<A>, &demangling cache variable for type metadata for ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, MEMORY[0x1E0CD8CC8]);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ViewThatFits<TupleView<(HStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>, VStack<Group<TupleView<(ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>?, VStack<TupleView<(Text, ModifiedContent<ModifiedContent<<<opaque return type of View.menuOrder(_:)>>.0, _TransactionModifier>, AccessibilityAttachmentModifier>)>>)>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter()
{
  uint64_t v0;

  return closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BD16EBC4()
{
  return objectdestroy_15Tm();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter(char *a1)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BD16EC18()
{
  return objectdestroy_15Tm();
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter()
{
  uint64_t v0;

  closure #1 in closure #1 in closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

double partial apply for closure #2 in closure #1 in closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = closure #2 in closure #1 in closure #1 in closure #1 in ShareCardSharePlayHeaderView.picker.getter(*(_BYTE *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t PeoplePickerAddButtonHandler.handleContactSelection(for:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  if (result)
  {
    v5 = (void (*)(void))result;
    v6 = a1[3];
    v7 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v6);
    CNKContactProperty.asRecipient()(v6, v7);
    if (v8)
    {
      v9 = v8;
      v5();

    }
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v5);
  }
  return result;
}

id protocol witness for CNKContactProperty.contact.getter in conformance CNContactProperty()
{
  return @nonobjc CNContactProperty.contact.getter();
}

id @nonobjc CNContactProperty.contact.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_contact);
}

double protocol witness for CNKContactProperty.value.getter in conformance CNContactProperty@<D0>(_OWORD *a1@<X8>)
{
  return @nonobjc CNContactProperty.value.getter(a1);
}

double @nonobjc CNContactProperty.value.getter@<D0>(_OWORD *a1@<X8>)
{
  void *v1;
  double result;

  if (objc_msgSend(v1, sel_value))
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

void CNKContactProperty.asRecipient()(uint64_t a1, uint64_t a2)
{
  void *v4;
  void (*v5)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;

  v4 = (void *)(*(uint64_t (**)(void))(a2 + 8))();
  v5 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 16);
  v5(v13, a1, a2);
  if (v14)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v7 = (uint64_t)v11;
      v6 = v12;
      goto LABEL_10;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)v13);
  }
  v5(v13, a1, a2);
  if (v14)
  {
    type metadata accessor for CNPhoneNumber();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v8 = objc_msgSend(v11, sel_stringValue);
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v6 = v9;

      goto LABEL_10;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)v13);
  }
  v7 = 0;
  v6 = 0xE000000000000000;
LABEL_10:
  if (String.count.getter() < 1)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = objc_allocWithZone(MEMORY[0x1E0D13688]);
    @nonobjc CNComposeRecipient.init(contact:address:kind:)(v4, v7, v6);
  }
}

uint64_t dispatch thunk of CNKContactProperty.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PeoplePickerAddButtonHandler.presenterViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PeoplePickerAddButtonHandler.presenterViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PeoplePickerAddButtonHandler.contactsSearchViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PeoplePickerAddButtonHandler.contactsSearchViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PeoplePickerAddButtonHandler.contactsSearchViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PeoplePickerAddButtonHandler.addToken.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PeoplePickerAddButtonHandler.addToken.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of PeoplePickerAddButtonHandler.addToken.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of PeoplePickerAddButtonHandler.handleAddButtonPressed(sourceView:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

double ParticipantViewButton.ElementColors.backgroundAlpha.getter(double a1, double a2)
{
  return a2;
}

id ParticipantViewButton.discView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_discView);
}

void ParticipantViewButton.image.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_image);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  OUTLINED_FUNCTION_32();
}

id key path getter for ParticipantViewButton.image : ParticipantViewButton@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_image);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void key path setter for ParticipantViewButton.image : ParticipantViewButton(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  ParticipantViewButton.image.setter(v1);
}

void ParticipantViewButton.image.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_image);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  ParticipantViewButton.updateColors()();
  OUTLINED_FUNCTION_9_0();
}

void ParticipantViewButton.updateColors()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t *v3;
  id v4;
  double v5;
  double v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id *v23;
  double v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;
  objc_super v39;
  uint64_t v40;
  objc_super v41;

  ObjectType = (objc_class *)swift_getObjectType();
  v41.receiver = v0;
  v41.super_class = ObjectType;
  if (objc_msgSendSuper2(&v41, sel_isEnabled))
  {
    v39.receiver = v0;
    v39.super_class = ObjectType;
    if ((objc_msgSendSuper2(&v39, sel_isHighlighted) & 1) != 0)
    {
      v2 = 1;
    }
    else
    {
      v38.receiver = v0;
      v38.super_class = ObjectType;
      if (objc_msgSendSuper2(&v38, sel_isSelected))
        v2 = 4;
      else
        v2 = 0;
    }
  }
  else
  {
    v2 = 2;
  }
  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_colorConfiguration];
  swift_beginAccess();
  v4 = specialized Dictionary.subscript.getter(v2, *v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  swift_endAccess();
  if (v4)
  {
LABEL_13:
    v21 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_discView];
    v22 = objc_msgSend(v8, sel_colorWithAlphaComponent_, v10);
    objc_msgSend(v21, sel_setBackgroundColor_, v22);

    v23 = (id *)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_image];
    swift_beginAccess();
    if (*v23)
    {
      v24 = v6;
      v25 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_imageView];
      v26 = *v23;
      v27 = objc_msgSend(v26, sel__flatImageWithColor_, v4);
      objc_msgSend(v25, sel_setImage_, v27);

      objc_msgSend(v25, sel_setAlpha_, v24);
    }
    else
    {
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_imageView], sel_setImage_, 0);
    }

    return;
  }
  swift_beginAccess();
  v4 = specialized Dictionary.subscript.getter(0, *v3);
  v6 = v11;
  v8 = v12;
  v10 = v13;
  swift_endAccess();
  if (v4)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BD645380;
    v40 = v2;
    type metadata accessor for UIControlState(0);
    v15 = String.init<A>(reflecting:)();
    v17 = v16;
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    v18 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v14 + 64) = v18;
    *(_QWORD *)(v14 + 32) = v15;
    *(_QWORD *)(v14 + 40) = v17;
    v40 = *v3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Dictionary<UIControlState, ParticipantViewButton.ElementColors>);
    v19 = String.init<A>(reflecting:)();
    *(_QWORD *)(v14 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 104) = v18;
    *(_QWORD *)(v14 + 72) = v19;
    *(_QWORD *)(v14 + 80) = v20;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BD646740;
  v40 = v2;
  type metadata accessor for UIControlState(0);
  v29 = String.init<A>(reflecting:)();
  v31 = v30;
  v32 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
  v33 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v28 + 64) = v33;
  *(_QWORD *)(v28 + 32) = v29;
  *(_QWORD *)(v28 + 40) = v31;
  v40 = 0;
  v34 = String.init<A>(reflecting:)();
  *(_QWORD *)(v28 + 96) = v32;
  *(_QWORD *)(v28 + 104) = v33;
  *(_QWORD *)(v28 + 72) = v34;
  *(_QWORD *)(v28 + 80) = v35;
  v40 = *v3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Dictionary<UIControlState, ParticipantViewButton.ElementColors>);
  v36 = String.init<A>(reflecting:)();
  *(_QWORD *)(v28 + 136) = v32;
  *(_QWORD *)(v28 + 144) = v33;
  *(_QWORD *)(v28 + 112) = v36;
  *(_QWORD *)(v28 + 120) = v37;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
}

void ParticipantViewButton.image.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ParticipantViewButton.colorConfiguration.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ParticipantViewButton.colorConfiguration : ParticipantViewButton@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_colorConfiguration);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

void key path setter for ParticipantViewButton.colorConfiguration : ParticipantViewButton()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  ParticipantViewButton.colorConfiguration.setter(v0);
}

void ParticipantViewButton.colorConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_colorConfiguration);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  swift_bridgeObjectRelease();
  ParticipantViewButton.updateColors()();
  OUTLINED_FUNCTION_9_0();
}

void ParticipantViewButton.colorConfiguration.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ParticipantViewButton.image.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    ParticipantViewButton.updateColors()();
}

id ParticipantViewButton.isSelected.getter()
{
  return ParticipantViewButton.isSelected.getter((SEL *)&selRef_isSelected);
}

void ParticipantViewButton.isSelected.setter(char a1)
{
  ParticipantViewButton.isSelected.setter(a1, (SEL *)&selRef_setSelected_);
}

void ParticipantViewButton.isSelected.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_6_43();
  v3 = OUTLINED_FUNCTION_0_68((uint64_t)v2);
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)v1 = v0;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 64) = OUTLINED_FUNCTION_15_40(v3, sel_isSelected);
  OUTLINED_FUNCTION_18();
}

void ParticipantViewButton.isSelected.modify(objc_super **a1, char a2)
{
  ParticipantViewButton.isSelected.modify(a1, a2, (SEL *)&selRef_setSelected_);
}

id ParticipantViewButton.isHighlighted.getter()
{
  return ParticipantViewButton.isSelected.getter((SEL *)&selRef_isHighlighted);
}

void ParticipantViewButton.isHighlighted.setter(char a1)
{
  ParticipantViewButton.isSelected.setter(a1, (SEL *)&selRef_setHighlighted_);
}

void ParticipantViewButton.isHighlighted.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_6_43();
  v3 = OUTLINED_FUNCTION_0_68((uint64_t)v2);
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)v1 = v0;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 64) = OUTLINED_FUNCTION_15_40(v3, sel_isHighlighted);
  OUTLINED_FUNCTION_18();
}

void ParticipantViewButton.isHighlighted.modify(objc_super **a1, char a2)
{
  ParticipantViewButton.isSelected.modify(a1, a2, (SEL *)&selRef_setHighlighted_);
}

id ParticipantViewButton.isEnabled.getter()
{
  return ParticipantViewButton.isSelected.getter((SEL *)&selRef_isEnabled);
}

id ParticipantViewButton.isSelected.getter(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v4, *a1);
}

void ParticipantViewButton.isEnabled.setter(char a1)
{
  ParticipantViewButton.isSelected.setter(a1, (SEL *)&selRef_setEnabled_);
}

void ParticipantViewButton.isSelected.setter(char a1, SEL *a2)
{
  void *v2;
  objc_super v5;

  v5.receiver = v2;
  v5.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v5, *a2, a1 & 1);
  ParticipantViewButton.updateColors()();
}

void ParticipantViewButton.isEnabled.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_6_43();
  v3 = OUTLINED_FUNCTION_0_68((uint64_t)v2);
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)v1 = v0;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 64) = OUTLINED_FUNCTION_15_40(v3, sel_isEnabled);
  OUTLINED_FUNCTION_18();
}

void ParticipantViewButton.isEnabled.modify(objc_super **a1, char a2)
{
  ParticipantViewButton.isSelected.modify(a1, a2, (SEL *)&selRef_setEnabled_);
}

void ParticipantViewButton.isSelected.modify(objc_super **a1, char a2, SEL *a3)
{
  objc_super *v4;
  uint64_t receiver_low;
  objc_class *super_class;
  id receiver;
  objc_super *v8;

  v4 = *a1;
  receiver_low = LOBYTE((*a1)[4].receiver);
  receiver = (*a1)[3].receiver;
  super_class = (*a1)[3].super_class;
  v8 = *a1;
  if ((a2 & 1) != 0)
  {
    v8[1].receiver = receiver;
    v8[1].super_class = super_class;
    objc_msgSendSuper2(v8 + 1, *a3, receiver_low);
  }
  else
  {
    v8[2].receiver = receiver;
    v8[2].super_class = super_class;
    objc_msgSendSuper2(v8 + 2, *a3, receiver_low);
    ParticipantViewButton.updateColors()();
  }
  free(v4);
}

char *ParticipantViewButton.__allocating_init(imageName:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  char *v8;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(a1, (uint64_t)&v10, &demangling cache variable for type metadata for ImageName?);
  if (v11)
  {
    outlined init with take of Notice(&v10, (uint64_t)v12);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v3 = v2;
    v4 = v13;
    v5 = v14;
    v6 = __swift_project_boxed_opaque_existential_1(v12, v13);
    v7 = (void *)specialized static UIImage.image(named:)((uint64_t)v6, v3, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v10, &demangling cache variable for type metadata for ImageName?);
    v7 = 0;
  }
  OUTLINED_FUNCTION_12_3();
  v8 = ParticipantViewButton.init(buttonImage:)(v7);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(a1, &demangling cache variable for type metadata for ImageName?);
  return v8;
}

char *ParticipantViewButton.__allocating_init(symbolName:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  char *v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v2 = v1;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(a1, (uint64_t)&v13, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  if (v14)
  {
    outlined init with take of Notice(&v13, (uint64_t)v10);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v4 = v11;
    v5 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v5 + 8))(&v13, v4, v5);
    v6 = static UIImage.symbolImage(for:)((uint64_t)&v13);
    outlined release of SymbolImageDescription((uint64_t)&v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v13, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
    v6 = 0;
  }
  v7 = objc_allocWithZone(v2);
  v8 = ParticipantViewButton.init(buttonImage:)(v6);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(a1, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  return v8;
}

void ParticipantViewButton.__allocating_init(buttonImage:)(void *a1)
{
  OUTLINED_FUNCTION_12_3();
  ParticipantViewButton.init(buttonImage:)(a1);
  OUTLINED_FUNCTION_0();
}

char *ParticipantViewButton.init(buttonImage:)(void *a1)
{
  char *v1;
  void *v2;
  objc_class *v4;
  void **v5;
  id v6;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  objc_super v28;

  v2 = v1;
  v4 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v5 = (void **)&v1[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_image];
  *v5 = 0;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3F58]);
  v7 = v2;
  v8 = objc_msgSend(v6, sel_init);
  v9 = OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_blurView;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_blurView] = v8;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_discView] = OUTLINED_FUNCTION_4_52(objc_allocWithZone(MEMORY[0x1E0DC3F10]));
  v10 = OUTLINED_FUNCTION_4_52(objc_allocWithZone(MEMORY[0x1E0DC3890]));
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_imageView] = v10;
  objc_msgSend(v10, sel_setContentMode_, 1);
  if (a1)
  {
    OUTLINED_FUNCTION_2_0();
    v11 = *v5;
    *v5 = a1;
    v12 = a1;

  }
  v13 = *(id *)&v7[v9];
  UIVisualEffectView.applyEffect(_:)(ConversationKit_PlatformEffectViewStyle_extraLight);

  if (one-time initialization token for expandButton != -1)
    swift_once();
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_colorConfiguration] = static Colors.ParticipantViews.expandButton;
  swift_bridgeObjectRetain();

  v28.receiver = v7;
  v28.super_class = v4;
  v14 = (char *)objc_msgSendSuper2(&v28, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v14, sel_setUserInteractionEnabled_, 1);
  v15 = OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_blurView;
  v16 = *(void **)&v14[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_discView];
  v17 = *(void **)&v14[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_imageView];
  v18 = *(id *)&v14[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_blurView];
  v19 = v16;
  v20 = v17;
  OUTLINED_FUNCTION_18_4(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(v18, sel_setUserInteractionEnabled_);

  v21 = v19;
  OUTLINED_FUNCTION_18_4(v21, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(v21, sel_setUserInteractionEnabled_);

  v22 = v20;
  OUTLINED_FUNCTION_18_4(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(v22, sel_setUserInteractionEnabled_);

  ParticipantViewButton.addConstraints()();
  objc_opt_self();
  v23 = v14;
  v24 = OUTLINED_FUNCTION_12_35();
  objc_msgSend(v23, sel_setBackgroundColor_, v24);

  v25 = *(id *)&v14[v15];
  v26 = OUTLINED_FUNCTION_12_35();
  objc_msgSend(v25, sel_setBackgroundColor_, v26);

  ParticipantViewButton.updateColors()();
  return v23;
}

void ParticipantViewButton.addConstraints()()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  Class isa;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_blurView];
  objc_msgSend(v0, sel_addSubview_, v2);
  v3 = objc_msgSend(v2, sel_contentView);
  v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_discView];
  objc_msgSend(v3, sel_addSubview_, v4);

  v37 = *(id *)&v1[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_imageView];
  objc_msgSend(v4, sel_addSubview_);
  v36 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BD64C100;
  v6 = objc_msgSend(v2, sel_topAnchor);
  v7 = objc_msgSend(v1, (SEL)&selRef_setUserInteractionEnabled_ + 4);
  v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v2, sel_leadingAnchor);
  v10 = objc_msgSend(v1, sel_leadingAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v2, sel_trailingAnchor);
  v13 = objc_msgSend(v1, sel_trailingAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(v2, sel_bottomAnchor);
  v16 = objc_msgSend(v1, sel_bottomAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v5 + 56) = v17;
  v18 = objc_msgSend(v4, sel_topAnchor);
  v19 = objc_msgSend(v2, sel_topAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(_QWORD *)(v5 + 64) = v20;
  v21 = objc_msgSend(v4, sel_leadingAnchor);
  v22 = objc_msgSend(v2, sel_leadingAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(_QWORD *)(v5 + 72) = v23;
  v24 = objc_msgSend(v4, sel_trailingAnchor);
  v25 = objc_msgSend(v2, sel_trailingAnchor);
  v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(_QWORD *)(v5 + 80) = v26;
  v27 = objc_msgSend(v4, sel_bottomAnchor);
  v28 = objc_msgSend(v2, sel_bottomAnchor);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(_QWORD *)(v5 + 88) = v29;
  v30 = objc_msgSend(v37, sel_centerXAnchor);
  v31 = objc_msgSend(v4, sel_centerXAnchor);
  v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

  *(_QWORD *)(v5 + 96) = v32;
  v33 = objc_msgSend(v37, sel_centerYAnchor);
  v34 = objc_msgSend(v4, sel_centerYAnchor);
  v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

  *(_QWORD *)(v5 + 104) = v35;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_activateConstraints_, isa);

}

void ParticipantViewButton.__allocating_init(coder:)(void *a1)
{
  objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void ParticipantViewButton.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_image] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ParticipantViewButton.layoutSubviews()()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v7, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_blurView];
  OUTLINED_FUNCTION_10_14();
  v3 = v2;
  OUTLINED_FUNCTION_10_14();
  if (v4 >= v3)
    v5 = v3;
  else
    v5 = v4;
  objc_msgSend(v1, sel__setCornerRadius_, v5 * 0.5);
  v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantViewButton_discView];
  objc_msgSend(v1, sel__cornerRadius);
  objc_msgSend(v6, sel__setCornerRadius_);
}

id ParticipantViewButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantViewButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ParticipantViewButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ParticipantViewButton()
{
  return objc_opt_self();
}

uint64_t method lookup function for ParticipantViewButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantViewButton.__allocating_init(buttonImage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void destroy for ParticipantViewButton.ElementColors(id *a1)
{

}

_QWORD *initializeWithCopy for ParticipantViewButton.ElementColors(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  v7 = v3;
  v8 = v6;
  return a1;
}

uint64_t assignWithCopy for ParticipantViewButton.ElementColors(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for ParticipantViewButton.ElementColors(uint64_t a1, _QWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];

  *(_QWORD *)(a1 + 24) = a2[3];
  return a1;
}

ValueMetadata *type metadata accessor for ParticipantViewButton.ElementColors()
{
  return &type metadata for ParticipantViewButton.ElementColors;
}

void specialized CALayer.withoutActions(_:)(uint64_t a1, void *a2)
{
  void *v3;
  unint64_t v4;
  id v5;

  v3 = (void *)objc_opt_self();
  objc_msgSend(v3, sel_begin);
  objc_msgSend(v3, sel_setDisableActions_, 1);
  v5 = a2;
  v4 = swift_bridgeObjectRetain();
  specialized Sequence.forEach(_:)(v4, v5);
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_commit);
  OUTLINED_FUNCTION_15_9(v5);
}

id CALayer.withoutActions(_:)(void (*a1)(id))
{
  void *v2;

  v2 = (void *)objc_opt_self();
  objc_msgSend(v2, sel_begin);
  a1(objc_msgSend(v2, sel_setDisableActions_, 1));
  return objc_msgSend(v2, sel_commit);
}

uint64_t CALayer.LayerAnimationCoordinatorKeyPath.rawValue.getter()
{
  return 0x732E73646E756F62;
}

BOOL CALayer.LayerAnimationCoordinatorKeyPath.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of CALayer.LayerAnimationCoordinatorKeyPath.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance CALayer.LayerAnimationCoordinatorKeyPath@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = CALayer.LayerAnimationCoordinatorKeyPath.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance CALayer.LayerAnimationCoordinatorKeyPath(_QWORD *a1@<X8>)
{
  *a1 = 0x732E73646E756F62;
  a1[1] = 0xEB00000000657A69;
}

void specialized CALayer.coordinateAnimation(_:animations:)()
{
  objc_msgSend((id)objc_opt_self(), sel_begin);
  OUTLINED_FUNCTION_0_69();
}

void sub_1BD170B5C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v16;
  void *v17;
  void *v18;
  id v20;
  void *v21;
  void *v22;
  id v23;

  v20 = objc_msgSend(v18, sel_animationForKey_, a1);

  if (v20)
  {
    objc_opt_self();
    v21 = (void *)swift_dynamicCastObjCClass();
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, sel_duration);
      objc_msgSend(v17, sel_setAnimationDuration_);
      v23 = objc_msgSend(v22, sel_timingFunction);
      objc_msgSend(v17, sel_setAnimationTimingFunction_, v23);

      v20 = v23;
    }

  }
  closure #1 in ParticipantViewLabelContainerViewLayer.layoutSublayers()(a10);
  objc_msgSend(v17, sel_commit);

  OUTLINED_FUNCTION_15_9(a10);
}

void CALayer.coordinateAnimation(_:animations:)()
{
  objc_msgSend((id)objc_opt_self(), sel_begin);
  OUTLINED_FUNCTION_0_69();
}

id sub_1BD170C6C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void (*v16)(void);
  void *v17;
  void *v18;
  id v20;
  void *v21;
  void *v22;
  id v23;

  v20 = objc_msgSend(v18, sel_animationForKey_, a1);

  if (v20)
  {
    objc_opt_self();
    v21 = (void *)swift_dynamicCastObjCClass();
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, sel_duration);
      objc_msgSend(v17, sel_setAnimationDuration_);
      v23 = objc_msgSend(v22, sel_timingFunction);
      objc_msgSend(v17, sel_setAnimationTimingFunction_, v23);

      v20 = v23;
    }

  }
  v16();
  return objc_msgSend(v17, sel_commit);
}

unint64_t lazy protocol witness table accessor for type CALayer.LayerAnimationCoordinatorKeyPath and conformance CALayer.LayerAnimationCoordinatorKeyPath()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CALayer.LayerAnimationCoordinatorKeyPath and conformance CALayer.LayerAnimationCoordinatorKeyPath;
  if (!lazy protocol witness table cache variable for type CALayer.LayerAnimationCoordinatorKeyPath and conformance CALayer.LayerAnimationCoordinatorKeyPath)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CALayer.LayerAnimationCoordinatorKeyPath, &type metadata for CALayer.LayerAnimationCoordinatorKeyPath);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CALayer.LayerAnimationCoordinatorKeyPath and conformance CALayer.LayerAnimationCoordinatorKeyPath);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CALayer.LayerAnimationCoordinatorKeyPath(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD170DB4 + 4 * asc_1BD64C160[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD170DD4 + 4 * byte_1BD64C165[v4]))();
}

_BYTE *sub_1BD170DB4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD170DD4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD170DDC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD170DE4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD170DEC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD170DF4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CALayer.LayerAnimationCoordinatorKeyPath()
{
  return &type metadata for CALayer.LayerAnimationCoordinatorKeyPath;
}

void ClarityUIContactsView.navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  JUMPOUT(0x1C3B72860);
}

uint64_t key path setter for ClarityUIContactsView.navigationPath : ClarityUIContactsView(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for NavigationPath();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return ClarityUIContactsView.navigationPath.setter((uint64_t)v4);
}

uint64_t ClarityUIContactsView.navigationPath.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_1_57();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5 - v4, a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  Binding.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*ClarityUIContactsView.navigationPath.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OUTLINED_FUNCTION_1_57();
  *v3 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[1] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  v3[4] = v7;
  v8 = malloc(*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v3[5] = v8;
  outlined init with copy of Binding<NavigationPath>(v1, (uint64_t)v8);
  MEMORY[0x1C3B72860](v7);
  return ClarityUIContactsView.navigationPath.modify;
}

void ClarityUIContactsView.navigationPath.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 40);
  v4 = *(void **)(*(_QWORD *)a1 + 16);
  v5 = *(void **)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v6 = *v2;
    v7 = v2[1];
    (*(void (**)(_QWORD, void *, _QWORD))(v7 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 16), v5, *v2);
    Binding.wrappedValue.setter();
    outlined destroy of Binding<NavigationPath>((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    Binding.wrappedValue.setter();
    outlined destroy of Binding<NavigationPath>((uint64_t)v3);
  }
  free(v3);
  free(v5);
  free(v4);
  free(v2);
}

uint64_t outlined init with copy of Binding<NavigationPath>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of Binding<NavigationPath>(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ClarityUIContactsView.$navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  return Binding.projectedValue.getter();
}

uint64_t ClarityUIContactsView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = type metadata accessor for ClarityUINavigationTitle();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v4 = v3 - v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for List<Never, ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0>>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0>);
  lazy protocol witness table accessor for type ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0> and conformance <> ForEach<A, B, C>();
  List<>.init(content:)();
  static ClarityUINavigationTitle.contacts.getter();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type List<Never, ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0>> and conformance List<A, B>, &demangling cache variable for type metadata for List<Never, ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0>>, MEMORY[0x1E0CDD950]);
  View.navigationTitle(_:)();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t closure #1 in ClarityUIContactsView.body.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for ClarityUIContactsView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = (uint64_t *)(a1 + *(int *)(MEMORY[0x1E0C80A78](v2) + 20));
  v7 = *v5;
  v6 = v5[1];
  v15 = v7;
  v16 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ClarityUIContactsList>);
  State.wrappedValue.getter();
  v8 = ClarityUIContactsList.allContactIdentifiers.getter();
  swift_release();
  v17 = v8;
  swift_getKeyPath();
  outlined init with copy of ClarityUIContactsView(a1, (uint64_t)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  outlined init with take of ClarityUIContactsView((uint64_t)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.badge(_:)>>.0);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type [String] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [String], MEMORY[0x1E0DEAF48]);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
  v12 = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>, MEMORY[0x1E0CD9468]);
  v15 = v11;
  v16 = v12;
  swift_getOpaqueTypeConformance2();
  return ForEach<>.init(_:id:content:)();
}

uint64_t partial apply for closure #1 in ClarityUIContactsView.body.getter()
{
  uint64_t v0;

  return closure #1 in ClarityUIContactsView.body.getter(*(_QWORD *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0> and conformance <> ForEach<A, B, C>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = lazy protocol witness table cache variable for type ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0> and conformance <> ForEach<A, B, C>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0>);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
    v2[2] = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>, MEMORY[0x1E0CD9468]);
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFEE8], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

uint64_t closure #1 in closure #1 in ClarityUIContactsView.body.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  ConversationKit::ClarityUIContact v31;

  v20 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>);
  v21 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = (void *)a1[1];
  v10 = a2 + *(int *)(type metadata accessor for ClarityUIContactsView() + 20);
  v12 = *(void **)v10;
  v11 = *(void **)(v10 + 8);
  v26 = v12;
  v27 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ClarityUIContactsList>);
  State.wrappedValue.getter();
  v13._countAndFlagsBits = v8;
  v13._object = v9;
  ClarityUIContactsList.contact(for:)(v13);
  swift_release();
  v14 = v27;
  v15 = v28;
  v16 = v29;
  v30 = 0;
  v22 = v26;
  v23 = v27;
  v24 = v28;
  v25 = v29;
  v17 = v26;
  v18 = v14;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Label<Text, ClarityUIContactAvatar> and conformance Label<A, B>, (uint64_t *)&demangling cache variable for type metadata for Label<Text, ClarityUIContactAvatar>, MEMORY[0x1E0CDF8C8]);
  lazy protocol witness table accessor for type ClarityUIOutgoingCallActionsNavigationDestination and conformance ClarityUIOutgoingCallActionsNavigationDestination();
  NavigationLink<>.init<A>(value:label:)();
  v26 = v17;
  v27 = v18;
  v28 = v15;
  v29 = v16;
  v31.cnContact.super.isa = (Class)&v26;
  ClarityUICallHistory.badgeCount(for:)(v31);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type NavigationLink<Label<Text, ClarityUIContactAvatar>, Never> and conformance NavigationLink<A, B>, &demangling cache variable for type metadata for NavigationLink<Label<Text, ClarityUIContactAvatar>, Never>, MEMORY[0x1E0CD9468]);
  View.badge(_:)();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v7, v5);
}

uint64_t closure #1 in closure #1 in closure #1 in ClarityUIContactsView.body.getter()
{
  lazy protocol witness table accessor for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar();
  return Label.init(title:icon:)();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIContactsView.body.getter@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v5 = a1;
  v6 = a2;
  swift_bridgeObjectRetain();
  CNContact.clarityUIDisplayName.getter();
  swift_bridgeObjectRelease();

  lazy protocol witness table accessor for type String and conformance String();
  result = Text.init<A>(_:)();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = v9 & 1;
  *(_QWORD *)(a3 + 24) = v10;
  return result;
}

id closure #2 in closure #1 in closure #1 in closure #1 in ClarityUIContactsView.body.getter@<X0>(void *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  id v3;

  *a3 = a1;
  a3[1] = a2;
  v3 = a1;
  return a2;
}

uint64_t ClarityUIContactsView.init(navigationPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  outlined init with take of Binding<NavigationPath>(a1, a2);
  v3 = OUTLINED_FUNCTION_2_63();
  v4 = (_QWORD *)(a2 + *(int *)(v3 + 20));
  type metadata accessor for ClarityUIContactsList();
  swift_allocObject();
  ClarityUIContactsList.init()();
  State.init(wrappedValue:)();
  *v4 = v7;
  v4[1] = v8;
  v5 = *(int *)(v3 + 24);
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)(a2 + v5) = static ClarityUICallHistory.shared;
  return swift_retain();
}

uint64_t outlined init with take of Binding<NavigationPath>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ClarityUIContactsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ClarityUIContactsView;
  if (!type metadata singleton initialization cache for ClarityUIContactsView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static ClarityUIContactsNavigationDestination.== infix(_:_:)()
{
  return 1;
}

Swift::Int ClarityUIContactsNavigationDestination.hashValue.getter()
{
  Hasher.init(_seed:)();
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ClarityUIContactsNavigationDestination()
{
  Hasher.init(_seed:)();
  return Hasher._finalize()();
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIContactsView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ClarityUIContactsNavigationDestination and conformance ClarityUIContactsNavigationDestination()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIContactsNavigationDestination and conformance ClarityUIContactsNavigationDestination;
  if (!lazy protocol witness table cache variable for type ClarityUIContactsNavigationDestination and conformance ClarityUIContactsNavigationDestination)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIContactsNavigationDestination, &type metadata for ClarityUIContactsNavigationDestination);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIContactsNavigationDestination and conformance ClarityUIContactsNavigationDestination);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIContactsNavigationDestination and conformance ClarityUIContactsNavigationDestination;
  if (!lazy protocol witness table cache variable for type ClarityUIContactsNavigationDestination and conformance ClarityUIContactsNavigationDestination)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIContactsNavigationDestination, &type metadata for ClarityUIContactsNavigationDestination);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIContactsNavigationDestination and conformance ClarityUIContactsNavigationDestination);
  }
  return result;
}

void sub_1BD171A50()
{
  ClarityUIContactsView.navigationPath.getter();
}

uint64_t *initializeBufferWithCopyOfBuffer for ClarityUIContactsView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
                + 32);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 20);
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v7 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *(uint64_t *)((char *)v7 + v13) = *(uint64_t *)((char *)a2 + v13);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for ClarityUIContactsView(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_release();
  swift_release();
  v2 = a1
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v3 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for ClarityUIContactsView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 20);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v11);
  v14 = (_QWORD *)((char *)a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ClarityUIContactsView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  swift_retain();
  swift_release();
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for ClarityUIContactsView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  return a1;
}

_QWORD *assignWithTake for ClarityUIContactsView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  swift_release();
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIContactsView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD171EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityUIContactsView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD171F78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void type metadata completion function for ClarityUIContactsView()
{
  unint64_t v0;

  type metadata accessor for Binding<NavigationPath>();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for Binding<NavigationPath>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Binding<NavigationPath>)
  {
    type metadata accessor for NavigationPath();
    v0 = type metadata accessor for Binding();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Binding<NavigationPath>);
  }
}

ValueMetadata *type metadata accessor for ClarityUIContactsNavigationDestination()
{
  return &type metadata for ClarityUIContactsNavigationDestination;
}

uint64_t sub_1BD1720D4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for List<Never, ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0>>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type List<Never, ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0>> and conformance List<A, B>, &demangling cache variable for type metadata for List<Never, ForEach<[String], String, <<opaque return type of View.badge(_:)>>.0>>, MEMORY[0x1E0CDD950]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t outlined init with copy of ClarityUIContactsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClarityUIContactsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD17217C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_2_63() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  swift_release();
  swift_release();
  v3 = v2
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v4 = OUTLINED_FUNCTION_1_57();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t outlined init with take of ClarityUIContactsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClarityUIContactsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in ClarityUIContactsView.body.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_2_63() - 8) + 80);
  return closure #1 in closure #1 in ClarityUIContactsView.body.getter(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ClarityUIContactsView.body.getter()
{
  return closure #1 in closure #1 in closure #1 in ClarityUIContactsView.body.getter();
}

unint64_t lazy protocol witness table accessor for type ClarityUIOutgoingCallActionsNavigationDestination and conformance ClarityUIOutgoingCallActionsNavigationDestination()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIOutgoingCallActionsNavigationDestination and conformance ClarityUIOutgoingCallActionsNavigationDestination;
  if (!lazy protocol witness table cache variable for type ClarityUIOutgoingCallActionsNavigationDestination and conformance ClarityUIOutgoingCallActionsNavigationDestination)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIOutgoingCallActionsNavigationDestination, &type metadata for ClarityUIOutgoingCallActionsNavigationDestination);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIOutgoingCallActionsNavigationDestination and conformance ClarityUIOutgoingCallActionsNavigationDestination);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIOutgoingCallActionsNavigationDestination and conformance ClarityUIOutgoingCallActionsNavigationDestination;
  if (!lazy protocol witness table cache variable for type ClarityUIOutgoingCallActionsNavigationDestination and conformance ClarityUIOutgoingCallActionsNavigationDestination)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIOutgoingCallActionsNavigationDestination, &type metadata for ClarityUIOutgoingCallActionsNavigationDestination);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIOutgoingCallActionsNavigationDestination and conformance ClarityUIOutgoingCallActionsNavigationDestination);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIContactsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in closure #1 in ClarityUIContactsView.body.getter(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

id partial apply for closure #2 in closure #1 in closure #1 in closure #1 in ClarityUIContactsView.body.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return closure #2 in closure #1 in closure #1 in closure #1 in ClarityUIContactsView.body.getter(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

unint64_t lazy protocol witness table accessor for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar;
  if (!lazy protocol witness table cache variable for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIContactAvatar, &type metadata for ClarityUIContactAvatar);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar;
  if (!lazy protocol witness table cache variable for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIContactAvatar, &type metadata for ClarityUIContactAvatar);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar);
  }
  return result;
}

double static CallControlsMenuView.Constants.verticalPadding.getter()
{
  return 16.0;
}

double static CallControlsMenuView.Constants.horizontalPadding.getter()
{
  return 20.0;
}

uint64_t CallControlsMenuView.init(viewModel:service:screenShareService:sidebarStateStream:isScreenLocked:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  __int128 v35[3];

  type metadata accessor for CallControlsMenuViewModel();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsMenuViewModel and conformance CallControlsMenuViewModel, (void (*)(uint64_t))type metadata accessor for CallControlsMenuViewModel);
  swift_retain();
  Bindable<A>.init(wrappedValue:)();
  OUTLINED_FUNCTION_0_70();
  v9 = type metadata accessor for LetMeInCountdownViewModel();
  swift_allocObject();
  v10 = (__int128 *)OUTLINED_FUNCTION_12_36();
  v11 = LetMeInCountdownViewModel.init(service:)(v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CallControlsInCallButtonViewModel>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD64C380;
  OUTLINED_FUNCTION_0_70();
  v13 = type metadata accessor for SidebarButtonViewModel();
  OUTLINED_FUNCTION_15();
  swift_retain();
  swift_retain();
  SidebarButtonViewModel.init(service:stream:isScreenLocked:)((uint64_t)v35, a3, a4);
  *(_QWORD *)(inited + 56) = v13;
  *(_QWORD *)(inited + 64) = &protocol witness table for SidebarButtonViewModel;
  *(_QWORD *)(inited + 32) = v14;
  OUTLINED_FUNCTION_0_70();
  v15 = type metadata accessor for VideoButtonViewModel();
  OUTLINED_FUNCTION_15();
  v16 = (__int128 *)OUTLINED_FUNCTION_12_36();
  v17 = VideoButtonViewModel.init(service:)(v16);
  *(_QWORD *)(inited + 96) = v15;
  *(_QWORD *)(inited + 104) = &protocol witness table for VideoButtonViewModel;
  *(_QWORD *)(inited + 72) = v17;
  OUTLINED_FUNCTION_0_70();
  v18 = type metadata accessor for AudioMuteButtonViewModel();
  OUTLINED_FUNCTION_15();
  v19 = (__int128 *)OUTLINED_FUNCTION_12_36();
  v20 = AudioMuteButtonViewModel.init(service:)(v19);
  *(_QWORD *)(inited + 136) = v18;
  *(_QWORD *)(inited + 144) = &protocol witness table for AudioMuteButtonViewModel;
  *(_QWORD *)(inited + 112) = v20;
  outlined init with copy of RadarReporting(a2, (uint64_t)v35);
  v21 = type metadata accessor for ScreenShareButtonViewModel();
  OUTLINED_FUNCTION_15();
  v22 = (__int128 *)OUTLINED_FUNCTION_12_36();
  v23 = ScreenShareButtonViewModel.init(service:)(v22);
  *(_QWORD *)(inited + 176) = v21;
  *(_QWORD *)(inited + 184) = &protocol witness table for ScreenShareButtonViewModel;
  *(_QWORD *)(inited + 152) = v23;
  *(_QWORD *)(inited + 216) = v9;
  *(_QWORD *)(inited + 224) = &protocol witness table for LetMeInCountdownViewModel;
  *(_QWORD *)(inited + 192) = v11;
  OUTLINED_FUNCTION_0_70();
  v24 = type metadata accessor for JoinButtonViewModel();
  OUTLINED_FUNCTION_15();
  v25 = JoinButtonViewModel.init(service:letMeInViewModel:)(v35, v11);
  *(_QWORD *)(inited + 256) = v24;
  *(_QWORD *)(inited + 264) = &protocol witness table for JoinButtonViewModel;
  *(_QWORD *)(inited + 232) = v25;
  OUTLINED_FUNCTION_0_70();
  v26 = type metadata accessor for CancelButtonViewModel();
  OUTLINED_FUNCTION_15();
  v27 = CancelButtonViewModel.init(service:letMeInViewModel:)(v35, v11);
  *(_QWORD *)(inited + 296) = v26;
  *(_QWORD *)(inited + 304) = &protocol witness table for CancelButtonViewModel;
  *(_QWORD *)(inited + 272) = v27;
  OUTLINED_FUNCTION_0_70();
  v28 = type metadata accessor for LeaveButtonViewModel();
  v29 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v29 + 56) = 0;
  outlined init with take of Notice(v35, v29 + 16);
  *(_QWORD *)(inited + 336) = v28;
  *(_QWORD *)(inited + 344) = &protocol witness table for LeaveButtonViewModel;
  *(_QWORD *)(inited + 312) = v29;
  v30 = type metadata accessor for LocalVideoRecordButtonViewModel();
  v31 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(inited + 376) = v30;
  *(_QWORD *)(inited + 384) = &protocol witness table for LocalVideoRecordButtonViewModel;
  *(_QWORD *)(inited + 352) = v31;
  swift_retain_n();
  v32 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit014CallControlsInH15ButtonViewModel_pGG_AH0jhlM6Holder33_5B4A18A810ED2BA0BAF7DF9664EFF4B6LLVs5NeverOTg506_sSi15f6Kit014hij3C15klm20_pAA0ecgH6Holder33_5opqrstuvw37LLVIgynr_Si6offset_AaB_p7elementtAEs5X266OIegnrzr_TR04_s15a5Kit20cd4Menug150V9viewModel7service18screenShareService18sidebarStateStream14isScreenLockedAcA0cdefH0C_AA0cdL0_pAA0qkcdL0_pAA07SidebarnO0C7Combine12AnyPublisherVySbs5u26OGtcfcAA02IncfH6Holder33_5jklmnopqR31LLVSi_AA0cdxc6ButtonfH0_ptXEfU_Tf3nnnpf_nTf1cn_n(inited);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit(&demangling cache variable for type metadata for CallControlsInCallButtonViewModel);
  result = type metadata accessor for CallControlsMenuView();
  *(_QWORD *)(a5 + *(int *)(result + 20)) = v32;
  return result;
}

double static CallControlsMenuView.Constants.spacing.getter()
{
  return 20.0;
}

uint64_t CallControlsMenuView.viewModel.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  Bindable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for CallControlsMenuView.viewModel : CallControlsMenuView()
{
  swift_retain();
  return CallControlsMenuView.viewModel.setter();
}

uint64_t CallControlsMenuView.viewModel.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  return Bindable.wrappedValue.setter();
}

void (*CallControlsMenuView.viewModel.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  v2[4] = Bindable.wrappedValue.modify();
  return CallControlsMenuView.viewModel.modify;
}

void CallControlsMenuView.viewModel.modify(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t CallControlsMenuView.$viewModel.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  return Bindable.projectedValue.getter();
}

uint64_t _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit014CallControlsInH15ButtonViewModel_pGG_AH0jhlM6Holder33_5B4A18A810ED2BA0BAF7DF9664EFF4B6LLVs5NeverOTg506_sSi15f6Kit014hij3C15klm20_pAA0ecgH6Holder33_5opqrstuvw37LLVIgynr_Si6offset_AaB_p7elementtAEs5X266OIegnrzr_TR04_s15a5Kit20cd4Menug150V9viewModel7service18screenShareService18sidebarStateStream14isScreenLockedAcA0cdefH0C_AA0cdL0_pAA0qkcdL0_pAA07SidebarnO0C7Combine12AnyPublisherVySbs5u26OGtcfcAA02IncfH6Holder33_5jklmnopqR31LLVSi_AA0cdxc6ButtonfH0_ptXEfU_Tf3nnnpf_nTf1cn_n(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20[2];
  _OWORD v21[4];
  uint64_t v22;

  v22 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v2 = v22;
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    v4 = 0;
    v5 = a1 + 32;
    do
    {
      outlined init with copy of RadarReporting(v5, (uint64_t)v20);
      *(_QWORD *)&v15 = v4;
      outlined init with take of Notice(v20, (uint64_t)&v15 + 8);
      v21[0] = v15;
      v21[1] = v16;
      v21[2] = v17;
      v19 = 2977385;
      *(_QWORD *)&v20[0] = 0xE300000000000000;
      v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v6);
      swift_bridgeObjectRelease();
      v7 = v19;
      v8 = *(_QWORD *)&v20[0];
      outlined init with copy of RadarReporting((uint64_t)v21 + 8, (uint64_t)&v16);
      *(_QWORD *)&v15 = v7;
      *((_QWORD *)&v15 + 1) = v8;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v21, &demangling cache variable for type metadata for (offset: Int, element: CallControlsInCallButtonViewModel));
      v2 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v2 = v22;
      }
      v9 = *(_QWORD *)(v2 + 16);
      if (v9 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v2 = v22;
      }
      ++v4;
      *(_QWORD *)(v2 + 16) = v9 + 1;
      v10 = v2 + 56 * v9;
      v11 = v15;
      v12 = v16;
      v13 = v17;
      *(_QWORD *)(v10 + 80) = v18;
      *(_OWORD *)(v10 + 48) = v12;
      *(_OWORD *)(v10 + 64) = v13;
      *(_OWORD *)(v10 + 32) = v11;
      v5 += 40;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  return v2;
}

void CallControlsMenuView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>);
  v2 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>, _PaddingLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v26 = v9;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>, _PaddingLayout>, _PaddingLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v25 = v11;
  *(_QWORD *)v7 = static VerticalAlignment.top.getter();
  *((_QWORD *)v7 + 1) = 0x4034000000000000;
  v7[16] = 0;
  v12 = &v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>)
                   + 44)];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  Bindable.wrappedValue.getter();
  v13 = CallControlsMenuViewModel.context.getter();
  v15 = v14;
  v17 = v16;
  swift_release();
  v28 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for CallControlsMenuView() + 20));
  v18 = OUTLINED_FUNCTION_15();
  *(_DWORD *)(v18 + 16) = v13;
  *(_BYTE *)(v18 + 20) = BYTE4(v13);
  *(_QWORD *)(v18 + 24) = v15;
  *(_BYTE *)(v18 + 32) = v17 & 1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [InCallViewModelHolder]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [InCallViewModelHolder] and conformance [A], &demangling cache variable for type metadata for [InCallViewModelHolder]);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>? and conformance <A> A?();
  lazy protocol witness table accessor for type InCallViewModelHolder and conformance InCallViewModelHolder();
  ForEach<>.init(_:content:)();
  v19 = v22;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v12, v4, v22);
  v20 = (uint64_t (**)())&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>)
                                    + 36)];
  *v20 = closure #2 in closure #1 in CallControlsMenuView.body.getter;
  v20[1] = 0;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
  static Edge.Set.top.getter();
  static Edge.Set.bottom.getter();
  OUTLINED_FUNCTION_7_59();
}

uint64_t closure #1 in closure #1 in CallControlsMenuView.body.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return InCallViewModelHolder.build(_:)(a1 & 0xFFFFFFFFFFLL, a2, a3, a4);
}

uint64_t InCallViewModelHolder.build(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  __int128 v25;
  uint64_t (**v26)();
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v5 = v4;
  v35 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>);
  MEMORY[0x1E0C80A78](v33);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>);
  MEMORY[0x1E0C80A78](v34);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v5[5];
  v16 = v5[6];
  __swift_project_boxed_opaque_existential_1(v5 + 2, v17);
  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16))(a1 & 0xFFFFFFFFFFLL, a2, a3, v17, v16) & 1) == 0)return __swift_storeEnumTagSinglePayload(v35, 1, 1, v34);
  v19 = v5[5];
  v18 = v5[6];
  __swift_project_boxed_opaque_existential_1(v5 + 2, v19);
  v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v18 + 8) + 8))(v19);
  v22 = v21;
  LOBYTE(v19) = v23;
  CallControlsType.controlView()(v20, v21, v23);
  outlined consume of CallControlsType(v20, v22, v19);
  outlined init with copy of InCallViewModelHolder((uint64_t)v5, (uint64_t)&v36);
  v24 = swift_allocObject();
  v25 = v37;
  *(_OWORD *)(v24 + 16) = v36;
  *(_OWORD *)(v24 + 32) = v25;
  *(_OWORD *)(v24 + 48) = v38;
  *(_QWORD *)(v24 + 64) = v39;
  outlined init with copy of FeatureEligibility?((uint64_t)v11, (uint64_t)v13, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>);
  v26 = (uint64_t (**)())&v13[*(int *)(v33 + 36)];
  *v26 = partial apply for closure #1 in InCallViewModelHolder.build(_:);
  v26[1] = (uint64_t (*)())v24;
  v26[2] = 0;
  v26[3] = 0;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v11, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>);
  outlined init with copy of InCallViewModelHolder((uint64_t)v5, (uint64_t)&v36);
  v27 = swift_allocObject();
  v28 = v37;
  *(_OWORD *)(v27 + 16) = v36;
  *(_OWORD *)(v27 + 32) = v28;
  *(_OWORD *)(v27 + 48) = v38;
  *(_QWORD *)(v27 + 64) = v39;
  outlined init with copy of FeatureEligibility?((uint64_t)v13, (uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>);
  v29 = v34;
  v30 = &v15[*(int *)(v34 + 36)];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  *((_QWORD *)v30 + 2) = partial apply for closure #2 in InCallViewModelHolder.build(_:);
  *((_QWORD *)v30 + 3) = v27;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>);
  v31 = v35;
  outlined init with take of Any?((uint64_t)v15, v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>);
  return __swift_storeEnumTagSinglePayload(v31, 0, 1, v29);
}

uint64_t closure #2 in closure #1 in CallControlsMenuView.body.getter()
{
  return Transaction.disablesAnimations.setter();
}

void CallControlsType.controlView()(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for CallControlTextButton(0);
  MEMORY[0x1E0C80A78](v4);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>);
  v5 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>.Storage);
  MEMORY[0x1E0C80A78](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>);
  MEMORY[0x1E0C80A78](v9);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>.Storage);
  MEMORY[0x1E0C80A78](v7);
  __asm { BR              X10 }
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for CallControlTextButton(0);
  MEMORY[0x1E0C80A78](v4);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<CallControlTextButton, _OffsetEffect>);
  v5 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>.Storage);
  MEMORY[0x1E0C80A78](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>);
  MEMORY[0x1E0C80A78](v9);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>.Storage);
  MEMORY[0x1E0C80A78](v7);
  __asm { BR              X10 }
}

uint64_t sub_1BD173274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  *(_QWORD *)(v3 - 136) = 0;
  *(_QWORD *)(v3 - 128) = 0;
  *(_QWORD *)(v3 - 144) = v2;
  *(_BYTE *)(v3 - 120) = 1;
  outlined copy of CallControlsType(v2, v1, 0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButton<()>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconButton<()> and conformance IconButton<A>, &demangling cache variable for type metadata for IconButton<()>);
  _ConditionalContent<>.init(storage:)();
  v4 = *(_QWORD *)(v3 - 96);
  v5 = *(_BYTE *)(v3 - 88);
  *(_OWORD *)v0 = *(_OWORD *)(v3 - 112);
  *(_QWORD *)(v0 + 16) = v4;
  *(_BYTE *)(v0 + 24) = v5;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<AnyView, IconButton<()>>);
  lazy protocol witness table accessor for type _ConditionalContent<AnyView, IconButton<()>> and conformance <> _ConditionalContent<A, B>();
  lazy protocol witness table accessor for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>> and conformance <> _ConditionalContent<A, B>();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t closure #1 in InCallViewModelHolder.build(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[5];
  v2 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 16))(v1);
}

uint64_t closure #2 in InCallViewModelHolder.build(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[5];
  v2 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 24))(v1);
}

uint64_t protocol witness for Identifiable.id.getter in conformance InCallViewModelHolder@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

double closure #1 in CallControlsType.controlView()()
{
  double v0;

  ViewDimensions.height.getter();
  return (v0 + -36.0) * 0.5;
}

uint64_t specialized _ContiguousArrayStorage.__deallocating_deinit()
{
  return specialized _ContiguousArrayStorage.__deallocating_deinit(&demangling cache variable for type metadata for [NSLayoutConstraint]);
}

{
  swift_arrayDestroy();
  OUTLINED_FUNCTION_239();
  return swift_deallocClassInstance();
}

{
  return specialized _ContiguousArrayStorage.__deallocating_deinit((uint64_t *)&demangling cache variable for type metadata for ParticipantsViewController);
}

{
  return specialized _ContiguousArrayStorage.__deallocating_deinit((void (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

{
  return specialized _ContiguousArrayStorage.__deallocating_deinit((void (*)(_QWORD))type metadata accessor for Participant);
}

{
  return specialized _ContiguousArrayStorage.__deallocating_deinit(&demangling cache variable for type metadata for CallControlsPreCallButtonViewModel);
}

uint64_t type metadata accessor for CallControlsMenuView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CallControlsMenuView;
  if (!type metadata singleton initialization cache for CallControlsMenuView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BD173808()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in CallControlsMenuView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in CallControlsMenuView.body.getter(*(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>, lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CDC8B0]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>? and conformance <A> A?);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, (uint64_t (*)(void))lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>> and conformance <> _ConditionalContent<A, B>, MEMORY[0x1E0CDC8B0]);
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>);
    v2[0] = lazy protocol witness table accessor for type _ConditionalContent<AnyView, IconButton<()>> and conformance <> _ConditionalContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>> and conformance <> _ConditionalContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<AnyView, IconButton<()>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<AnyView, IconButton<()>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<AnyView, IconButton<()>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<AnyView, IconButton<()>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconButton<()> and conformance IconButton<A>, &demangling cache variable for type metadata for IconButton<()>);
    v3[0] = MEMORY[0x1E0CDFD08];
    v3[1] = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<AnyView, IconButton<()>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconButton<Bool> and conformance IconButton<A>, &demangling cache variable for type metadata for IconButton<Bool>);
    v3[0] = v2;
    v3[1] = lazy protocol witness table accessor for type ModifiedContent<CallControlTextButton, _AlignmentWritingModifier> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<CallControlTextButton, _AlignmentWritingModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<CallControlTextButton, _AlignmentWritingModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<CallControlTextButton, _AlignmentWritingModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlTextButton and conformance CallControlTextButton, (void (*)(uint64_t))type metadata accessor for CallControlTextButton);
    v3[0] = v2;
    v3[1] = lazy protocol witness table accessor for type _AlignmentWritingModifier and conformance _AlignmentWritingModifier();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<CallControlTextButton, _AlignmentWritingModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _AlignmentWritingModifier and conformance _AlignmentWritingModifier()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type _AlignmentWritingModifier and conformance _AlignmentWritingModifier;
  if (!lazy protocol witness table cache variable for type _AlignmentWritingModifier and conformance _AlignmentWritingModifier)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDC878], MEMORY[0x1E0CDC890]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _AlignmentWritingModifier and conformance _AlignmentWritingModifier);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type InCallViewModelHolder and conformance InCallViewModelHolder()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallViewModelHolder and conformance InCallViewModelHolder;
  if (!lazy protocol witness table cache variable for type InCallViewModelHolder and conformance InCallViewModelHolder)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallViewModelHolder, &type metadata for InCallViewModelHolder);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallViewModelHolder and conformance InCallViewModelHolder);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in CallControlsMenuView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BD173B58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = CallControlsMenuView.viewModel.getter();
  *a1 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CallControlsMenuView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for CallControlsMenuView(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CallControlsMenuView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CallControlsMenuView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CallControlsMenuView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for CallControlsMenuView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CallControlsMenuView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD173E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CallControlsMenuView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD173E8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void type metadata completion function for CallControlsMenuView()
{
  unint64_t v0;

  type metadata accessor for Bindable<CallControlsMenuViewModel>();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for Bindable<CallControlsMenuViewModel>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Bindable<CallControlsMenuViewModel>)
  {
    type metadata accessor for CallControlsMenuViewModel();
    v0 = type metadata accessor for Bindable();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Bindable<CallControlsMenuViewModel>);
  }
}

ValueMetadata *type metadata accessor for CallControlsMenuView.Constants()
{
  return &type metadata for CallControlsMenuView.Constants;
}

uint64_t sub_1BD173FDC()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>, _PaddingLayout>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9758]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>, _PaddingLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<ModifiedContent<ForEach<[InCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _AlignmentWritingModifier>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t destroy for InCallViewModelHolder(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

uint64_t initializeWithCopy for InCallViewModelHolder(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 16;
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 16, v4, v6);
  return a1;
}

_QWORD *assignWithCopy for InCallViewModelHolder(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  return a1;
}

uint64_t assignWithTake for InCallViewModelHolder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for InCallViewModelHolder()
{
  return &type metadata for InCallViewModelHolder;
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in InCallViewModelHolder()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t specialized _ContiguousArrayStorage.__deallocating_deinit(void (*a1)(_QWORD))
{
  a1(0);
  swift_arrayDestroy();
  OUTLINED_FUNCTION_239();
  return swift_deallocClassInstance();
}

uint64_t specialized _ContiguousArrayStorage.__deallocating_deinit(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  swift_arrayDestroy();
  OUTLINED_FUNCTION_239();
  return swift_deallocClassInstance();
}

uint64_t outlined consume of CallControlsType(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 < 4u)
    return swift_release();
  return result;
}

uint64_t outlined init with copy of InCallViewModelHolder(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for InCallViewModelHolder(a2, a1);
  return a2;
}

uint64_t partial apply for closure #1 in InCallViewModelHolder.build(_:)()
{
  uint64_t v0;

  return closure #1 in InCallViewModelHolder.build(_:)((_QWORD *)(v0 + 16));
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in InCallViewModelHolder.build(_:)()
{
  uint64_t v0;

  return closure #2 in InCallViewModelHolder.build(_:)((_QWORD *)(v0 + 16));
}

uint64_t outlined init with copy of CallControlTextButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CallControlTextButton(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of CallControlTextButton(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CallControlTextButton(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined copy of CallControlsType(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 < 4u)
    return swift_retain();
  return result;
}

uint64_t outlined copy of _ConditionalContent<AnyView, IconButton<()>>.Storage(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  result = swift_retain();
  if ((a4 & 1) != 0)
    return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
  return result;
}

uint64_t outlined consume of _ConditionalContent<AnyView, IconButton<()>>.Storage(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  result = swift_release();
  if ((a4 & 1) != 0)
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a2);
  return result;
}

uint64_t InterfaceOrientationBridgingViewController.orientationSubscription.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit42InterfaceOrientationBridgingViewController_orientationSubscription) = a1;
  return swift_release();
}

Swift::Void __swiftcall InterfaceOrientationBridgingViewController.viewDidLoad()()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  uint64_t v8;
  objc_super v9;

  v1 = type metadata accessor for NSNotificationCenter.Publisher();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for InterfaceOrientationBridgingViewController();
  v9.receiver = v0;
  v9.super_class = v6;
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  NSNotificationCenter.publisher(for:object:)();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher, v2, MEMORY[0x1E0CB1F20]);
  v8 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  InterfaceOrientationBridgingViewController.orientationSubscription.setter(v8);
}

uint64_t type metadata accessor for InterfaceOrientationBridgingViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BD1745F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in InterfaceOrientationBridgingViewController.viewDidLoad()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v2);
  if (result)
    InterfaceOrientationBridgingViewController.updateInterfaceOrientationTraitIfNecessary()();
  return result;
}

uint64_t partial apply for closure #1 in InterfaceOrientationBridgingViewController.viewDidLoad()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in InterfaceOrientationBridgingViewController.viewDidLoad()(a1, v1);
}

void sub_1BD1746E0()
{
  void *v0;
  void *v1;

}

void InterfaceOrientationBridgingViewController.updateInterfaceOrientationTraitIfNecessary()()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = type metadata accessor for UITraitOverrides();
  MEMORY[0x1E0C80A78](v1);
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_window);

    if (v4)
    {
      v5 = objc_msgSend(v4, sel_windowScene);

      if (v5)
      {
        objc_msgSend(v5, sel_interfaceOrientation);
        OUTLINED_FUNCTION_5_50();
      }
    }
    OUTLINED_FUNCTION_5_50();
  }
  __break(1u);
}

uint64_t UIMutableTraits.interfaceOrientation.setter()
{
  lazy protocol witness table accessor for type InterfaceOrientationTrait and conformance InterfaceOrientationTrait();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type UIInterfaceOrientation and conformance UIInterfaceOrientation, (uint64_t (*)(uint64_t))type metadata accessor for UIInterfaceOrientation, (uint64_t)&protocol conformance descriptor for UIInterfaceOrientation);
  return dispatch thunk of UIMutableTraits.subscript.setter();
}

unint64_t lazy protocol witness table accessor for type InterfaceOrientationTrait and conformance InterfaceOrientationTrait()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InterfaceOrientationTrait and conformance InterfaceOrientationTrait;
  if (!lazy protocol witness table cache variable for type InterfaceOrientationTrait and conformance InterfaceOrientationTrait)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InterfaceOrientationTrait, &type metadata for InterfaceOrientationTrait);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InterfaceOrientationTrait and conformance InterfaceOrientationTrait);
  }
  return result;
}

id InterfaceOrientationBridgingViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void InterfaceOrientationBridgingViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  void *v5;
  objc_super v6;

  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit42InterfaceOrientationBridgingViewController_orientationSubscription] = 0;
  if (a2)
  {
    v5 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for InterfaceOrientationBridgingViewController();
  objc_msgSendSuper2(&v6, sel_initWithNibName_bundle_, v5, a3);

  OUTLINED_FUNCTION_45_0();
}

id InterfaceOrientationBridgingViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InterfaceOrientationBridgingViewController.init(coder:)(void *a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit42InterfaceOrientationBridgingViewController_orientationSubscription] = 0;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for InterfaceOrientationBridgingViewController();
  objc_msgSendSuper2(&v3, sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_36();
}

id InterfaceOrientationBridgingViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InterfaceOrientationBridgingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *InterfaceOrientationTrait.defaultValue.unsafeMutableAddressor()
{
  return &static InterfaceOrientationTrait.defaultValue;
}

uint64_t static InterfaceOrientationTrait.defaultValue.getter()
{
  return 0;
}

void protocol witness for static UITraitDefinition.defaultValue.getter in conformance InterfaceOrientationTrait(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void UITraitCollection.interfaceOrientation.getter()
{
  lazy protocol witness table accessor for type InterfaceOrientationTrait and conformance InterfaceOrientationTrait();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type UIInterfaceOrientation and conformance UIInterfaceOrientation, (uint64_t (*)(uint64_t))type metadata accessor for UIInterfaceOrientation, (uint64_t)&protocol conformance descriptor for UIInterfaceOrientation);
  OUTLINED_FUNCTION_2_64();
  OUTLINED_FUNCTION_36();
}

void UIMutableTraits.interfaceOrientation.getter()
{
  lazy protocol witness table accessor for type InterfaceOrientationTrait and conformance InterfaceOrientationTrait();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type UIInterfaceOrientation and conformance UIInterfaceOrientation, (uint64_t (*)(uint64_t))type metadata accessor for UIInterfaceOrientation, (uint64_t)&protocol conformance descriptor for UIInterfaceOrientation);
  dispatch thunk of UIMutableTraits.subscript.getter();
  OUTLINED_FUNCTION_45_0();
}

void key path getter for UIMutableTraits.interfaceOrientation : <A>A(_QWORD *a1@<X8>)
{
  uint64_t v2;

  UIMutableTraits.interfaceOrientation.getter();
  *a1 = v2;
}

uint64_t key path setter for UIMutableTraits.interfaceOrientation : <A>A()
{
  return UIMutableTraits.interfaceOrientation.setter();
}

uint64_t (*UIMutableTraits.interfaceOrientation.modify(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v3;
  uint64_t v5;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  UIMutableTraits.interfaceOrientation.getter();
  *a1 = v5;
  return UIMutableTraits.interfaceOrientation.modify;
}

uint64_t UIMutableTraits.interfaceOrientation.modify()
{
  return UIMutableTraits.interfaceOrientation.setter();
}

void *InterfaceOrientationKey.defaultValue.unsafeMutableAddressor()
{
  return &static InterfaceOrientationKey.defaultValue;
}

uint64_t static InterfaceOrientationKey.defaultValue.getter()
{
  return 0;
}

uint64_t protocol witness for static EnvironmentKey._valuesEqual(_:_:) in conformance InterfaceOrientationKey()
{
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type UIInterfaceOrientation and conformance UIInterfaceOrientation, (uint64_t (*)(uint64_t))type metadata accessor for UIInterfaceOrientation, (uint64_t)&protocol conformance descriptor for UIInterfaceOrientation);
  return static EnvironmentKey<>._valuesEqual(_:_:)();
}

uint64_t EnvironmentValues.interfaceOrientation.getter()
{
  uint64_t v1;

  lazy protocol witness table accessor for type InterfaceOrientationKey and conformance InterfaceOrientationKey();
  EnvironmentValues.subscript.getter();
  return v1;
}

unint64_t lazy protocol witness table accessor for type InterfaceOrientationKey and conformance InterfaceOrientationKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InterfaceOrientationKey and conformance InterfaceOrientationKey;
  if (!lazy protocol witness table cache variable for type InterfaceOrientationKey and conformance InterfaceOrientationKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InterfaceOrientationKey, &type metadata for InterfaceOrientationKey);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InterfaceOrientationKey and conformance InterfaceOrientationKey);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InterfaceOrientationKey and conformance InterfaceOrientationKey;
  if (!lazy protocol witness table cache variable for type InterfaceOrientationKey and conformance InterfaceOrientationKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InterfaceOrientationKey, &type metadata for InterfaceOrientationKey);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InterfaceOrientationKey and conformance InterfaceOrientationKey);
  }
  return result;
}

uint64_t EnvironmentValues.interfaceOrientation.setter()
{
  lazy protocol witness table accessor for type InterfaceOrientationKey and conformance InterfaceOrientationKey();
  return EnvironmentValues.subscript.setter();
}

uint64_t (*EnvironmentValues.interfaceOrientation.modify(uint64_t a1))(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = lazy protocol witness table accessor for type InterfaceOrientationKey and conformance InterfaceOrientationKey();
  EnvironmentValues.subscript.getter();
  return EnvironmentValues.interfaceOrientation.modify;
}

uint64_t EnvironmentValues.interfaceOrientation.modify(_QWORD *a1)
{
  a1[1] = *a1;
  return EnvironmentValues.subscript.setter();
}

void static InterfaceOrientationKey.read(from:)()
{
  lazy protocol witness table accessor for type InterfaceOrientationTrait and conformance InterfaceOrientationTrait();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type UIInterfaceOrientation and conformance UIInterfaceOrientation, (uint64_t (*)(uint64_t))type metadata accessor for UIInterfaceOrientation, (uint64_t)&protocol conformance descriptor for UIInterfaceOrientation);
  OUTLINED_FUNCTION_2_64();
  OUTLINED_FUNCTION_36();
}

uint64_t static InterfaceOrientationKey.write(to:value:)(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  return UIMutableTraits.interfaceOrientation.setter();
}

void protocol witness for static UITraitBridgedEnvironmentKey.read(from:) in conformance InterfaceOrientationKey(_QWORD *a1@<X8>)
{
  uint64_t v2;

  static InterfaceOrientationKey.read(from:)();
  *a1 = v2;
}

uint64_t protocol witness for static UITraitBridgedEnvironmentKey.write(to:value:) in conformance InterfaceOrientationKey(uint64_t a1)
{
  return static InterfaceOrientationKey.write(to:value:)(a1);
}

uint64_t sub_1BD174FE4()
{
  return 16;
}

__n128 sub_1BD174FF0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t method lookup function for InterfaceOrientationBridgingViewController()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for InterfaceOrientationTrait()
{
  return &type metadata for InterfaceOrientationTrait;
}

ValueMetadata *type metadata accessor for InterfaceOrientationKey()
{
  return &type metadata for InterfaceOrientationKey;
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit4Call_pG_So016UICustomViewMenuB0Cs5NeverOTg504_s15d83Kit0A35ControlsPrimaryActionButtonProviderC4menu3forSo6UIMenuCSgAA7Control_p_tFSo23ghib4CAA4F7_pXEfU_AF0dnopqR0CTf1cn_n(uint64_t a1)
{
  uint64_t v1;
  __int128 *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray.reserveCapacity(_:)();
    v3 = (__int128 *)(a1 + 32);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UICustomViewMenuElement);
    do
    {
      v4 = swift_allocObject();
      v5 = *v3++;
      swift_weakInit();
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v4;
      *(_OWORD *)(v6 + 24) = v5;
      swift_unknownObjectRetain();
      @nonobjc UICustomViewMenuElement.__allocating_init(viewProvider:)((uint64_t)partial apply for closure #1 in closure #1 in ConversationControlsPrimaryActionButtonProvider.menu(for:), v6);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v1;
    }
    while (v1);
    v7 = v9;
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

void ConversationControlsPrimaryActionButtonProvider.__allocating_init(controlsManager:context:calls:selectedCallAction:title:symbol:prefersPill:showsSymbolInPill:prefersMediumSize:menuHostViewController:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, char a11, void *a12)
{
  OUTLINED_FUNCTION_15();
  ConversationControlsPrimaryActionButtonProvider.init(controlsManager:context:calls:selectedCallAction:title:symbol:prefersPill:showsSymbolInPill:prefersMediumSize:menuHostViewController:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  OUTLINED_FUNCTION_21_3();
}

uint64_t ConversationControlsPrimaryActionButtonProvider.init(controlsManager:context:calls:selectedCallAction:title:symbol:prefersPill:showsSymbolInPill:prefersMediumSize:menuHostViewController:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, char a11, void *a12)
{
  uint64_t v12;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(__int128 *__return_ptr, uint64_t, uint64_t);
  id v31;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[288];
  uint64_t v38;
  __int128 v39;
  uint64_t v40;

  *(_BYTE *)(v12 + 160) = a11;
  *(_QWORD *)(v12 + 168) = a3;
  *(_QWORD *)(v12 + 176) = a4;
  *(_QWORD *)(v12 + 184) = a5;
  if (a7)
  {
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a4);
    swift_bridgeObjectRetain();
    v17 = String.count.getter();
    swift_bridgeObjectRelease();
    if ((a9 & 1) == 0)
      goto LABEL_7;
  }
  else
  {
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a4);
    if ((a9 & 1) == 0)
    {
LABEL_8:
      v18 = a12;
      v19 = a1;
      OUTLINED_FUNCTION_10_49();
      v21 = v20;
      goto LABEL_10;
    }
    v17 = 0;
  }
  static Layout.ConversationControls.values.getter((uint64_t)v37);
  if (v38 < v17)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v22 = a12;
  v23 = a1;
  OUTLINED_FUNCTION_10_49();
  v21 = v24;
  swift_retain_n();
  ControlsButtonProvider.title.setter(a6, a7);
  OUTLINED_FUNCTION_74();
  swift_retain();
  ControlsButtonProvider.prominentTitleFont.getter();
  v26 = v25;
  OUTLINED_FUNCTION_74();
  ControlsButtonProvider.titleFont.setter(v26);
  OUTLINED_FUNCTION_74();
LABEL_10:
  outlined init with copy of SymbolImageDescribing?(a8, (uint64_t)&v39);
  if (v40)
  {
    v27 = outlined init with take of Notice(&v39, (uint64_t)v34);
    if (*(_BYTE *)(v21 + 41) != 2 || (a10 & 1) != 0)
    {
      OUTLINED_FUNCTION_17_8(v27, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      v28 = v35;
      v29 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      v30 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v29 + 8);
      swift_retain();
      v30(&v39, v28, v29);
      v31 = static UIImage.symbolImage(for:)((uint64_t)&v39);
      outlined release of SymbolImageDescription((uint64_t)&v39);
      ControlsButtonProvider.image.setter(v31);
      OUTLINED_FUNCTION_74();
    }

    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a4);
    outlined destroy of SymbolImageDescribing?(a8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  else
  {

    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a4);
    outlined destroy of SymbolImageDescribing?(a8);
    outlined destroy of SymbolImageDescribing?((uint64_t)&v39);
  }
  return v21;
}

Swift::Void __swiftcall ConversationControlsPrimaryActionButtonProvider.buttonChanged()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  double v4;
  id v5;
  double v6;
  int v7;

  ControlsButtonProvider.buttonChanged()();
  swift_beginAccess();
  v1 = MEMORY[0x1C3B752C0](v0 + 16);
  if (v1)
  {
    v2 = (void *)v1;
    if (*(_BYTE *)(v0 + 41) == 2)
    {
      type metadata accessor for UILayoutPriority(0);
      lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
      v3 = v2;
      OUTLINED_FUNCTION_3_56();
      LODWORD(v4) = v7;
      objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 1, v4);

      v5 = v2;
      OUTLINED_FUNCTION_3_56();
      LODWORD(v6) = v7;
      objc_msgSend(v2, sel_setContentHuggingPriority_forAxis_, 0, v6);

    }
  }
}

void ConversationControlsPrimaryActionButtonProvider.buttonConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIConfigurationColorTransformer?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.Size();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ConversationControlsMenuButtonProvider.buttonConfiguration.getter();
  if (*(_BYTE *)(v0 + 160) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DC3198], v4);
    UIButton.Configuration.buttonSize.setter();
  }
  v8 = (id)UIButton.Configuration.preferredSymbolConfigurationForImage.getter();
  if (!v8)
    v8 = objc_msgSend((id)objc_opt_self(), sel_unspecifiedConfiguration);
  v9 = v8;
  v10 = objc_msgSend((id)objc_opt_self(), sel_configurationWithWeight_, 7);
  v11 = objc_msgSend(v9, sel_configurationByApplyingConfiguration_, v10);

  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  if (static Platform.current.getter() == 2)
  {
    UIConfigurationColorTransformer.init(_:)();
    v12 = type metadata accessor for UIConfigurationColorTransformer();
    __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v12);
    UIButton.Configuration.imageColorTransformer.setter();
  }

}

id closure #1 in ConversationControlsPrimaryActionButtonProvider.buttonConfiguration.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_whiteColor);
}

UIMenu ConversationControlsPrimaryActionButtonProvider.menu(for:)()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  UIMenuElementSize preferredElementSize;
  uint64_t v10;
  Swift::OpaquePointer v12;
  UIImage_optional v13;
  Swift::String swift__string;

  swift_retain();
  v0 = swift_bridgeObjectRetain();
  v1 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit4Call_pG_So016UICustomViewMenuB0Cs5NeverOTg504_s15d83Kit0A35ControlsPrimaryActionButtonProviderC4menu3forSo6UIMenuCSgAA7Control_p_tFSo23ghib4CAA4F7_pXEfU_AF0dnopqR0CTf1cn_n(v0);
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  swift__string._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD677740;
  v3._countAndFlagsBits = 0xD000000000000027;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  swift__string._countAndFlagsBits = 0;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, swift__string);

  if (v1 >> 62)
  {
    OUTLINED_FUNCTION_17_8(v7, &lazy cache variable for type metadata for UIMenuElement);
    swift_bridgeObjectRetain();
    preferredElementSize = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v8 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    OUTLINED_FUNCTION_17_8(v8, &lazy cache variable for type metadata for UIMenuElement);
    preferredElementSize = v1;
  }
  v10 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17_8(v10, &lazy cache variable for type metadata for UIMenu);
  v13.value.super.isa = 0;
  v13.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v13, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v12);
}

id closure #1 in closure #1 in ConversationControlsPrimaryActionButtonProvider.menu(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType;
  void *v7;
  unsigned __int8 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  ObjectType = swift_getObjectType();
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 160))(ObjectType, a4);
  v8 = objc_msgSend(v7, sel_isSystemProvider);

  if ((v8 & 1) != 0)
  {
    v9 = 0;
  }
  else
  {
    v11 = type metadata accessor for ConversationControlsRecipeGenerator();
    v9 = specialized static ConversationControlsRecipeGenerator.makeVoipBadgeIcon(for:)(a3, v11, ObjectType, a4);
    if (v9)
      swift_bridgeObjectRelease();
  }
  v12 = type metadata accessor for ConversationControlsBadgingAvatarViewController();
  v13 = v9;
  v14 = swift_unknownObjectRetain();
  v15 = (void *)specialized ConversationControlsBadgingAvatarViewController.__allocating_init(call:badgeImage:)(v14, v9, v12, ObjectType, a4);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 64))(ObjectType, a4);
  v18 = v17;
  v19 = objc_msgSend(v15, sel_view);
  v20 = swift_allocObject();
  swift_weakInit();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v20;
  v21[3] = a3;
  v21[4] = a4;
  objc_allocWithZone((Class)type metadata accessor for ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView());
  swift_unknownObjectRetain();
  swift_retain();
  ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.init(title:accessoryView:onSelection:)(v16, v18, v19, (uint64_t)partial apply for closure #1 in closure #1 in closure #1 in ConversationControlsPrimaryActionButtonProvider.menu(for:), (uint64_t)v21);
  v10 = v22;
  swift_release();
  swift_release();

  return (id)v10;
}

uint64_t closure #1 in closure #1 in closure #1 in ConversationControlsPrimaryActionButtonProvider.menu(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  void (*v6)(uint64_t, uint64_t);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = *(void (**)(uint64_t, uint64_t))(result + 176);
    if (v6)
      v6(a2, a3);
    return swift_release();
  }
  return result;
}

void ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.__allocating_init(title:accessoryView:onSelection:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.init(title:accessoryView:onSelection:)(a1, a2, a3, a4, a5);
}

Swift::Bool __swiftcall ConversationControlsPrimaryActionButtonProvider.shouldEnableMenu()()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 168) + 16) != 0;
}

id closure #1 in variable initialization expression of ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.titleLabel(void *a1)
{
  id v1;

  objc_msgSend(a1, sel_setAlpha_, 0.96);
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 17.0);
  objc_msgSend(a1, sel_setFont_, v1);

  objc_msgSend(a1, sel_setNumberOfLines_, 2);
  objc_msgSend(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return a1;
}

void ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.init(title:accessoryView:onSelection:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  char *v15;
  objc_class *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  Class isa;
  char *v39;
  id v40;
  id v41;
  char *v42;
  id v43;
  char *v44;
  id v45;
  _QWORD v47[4];
  objc_super v48;

  v10 = OBJC_IVAR____TtCC15ConversationKit47ConversationControlsPrimaryActionButtonProvider19AvatarSelectionView_titleLabel;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v12 = v5;
  v13 = OUTLINED_FUNCTION_2_11((uint64_t)v12, sel_init);
  v14 = closure #1 in variable initialization expression of ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.titleLabel(v13);

  *(_QWORD *)&v5[v10] = v14;
  v15 = &v12[OBJC_IVAR____TtCC15ConversationKit47ConversationControlsPrimaryActionButtonProvider19AvatarSelectionView_onSelection];
  *(_QWORD *)v15 = a4;
  *((_QWORD *)v15 + 1) = a5;
  swift_retain();

  v16 = (objc_class *)type metadata accessor for ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView();
  v48.receiver = v12;
  v48.super_class = v16;
  v17 = (char *)objc_msgSendSuper2(&v48, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtCC15ConversationKit47ConversationControlsPrimaryActionButtonProvider19AvatarSelectionView_titleLabel;
  v19 = *(void **)&v17[OBJC_IVAR____TtCC15ConversationKit47ConversationControlsPrimaryActionButtonProvider19AvatarSelectionView_titleLabel];
  v20 = v17;
  outlined bridged method (mbnn) of @objc UILabel.text.setter(a1, a2, v19);
  objc_msgSend(v20, sel_addSubview_, v19);
  v45 = (id)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v21 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v21 + 16) = xmmword_1BD644E30;
  v22 = objc_msgSend(v19, sel_leadingAnchor);
  v23 = OUTLINED_FUNCTION_2_11((uint64_t)v22, sel_leadingAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 16.0);

  *(_QWORD *)(v21 + 32) = v24;
  v26 = OUTLINED_FUNCTION_2_11(v25, sel_trailingAnchor);
  v27 = objc_msgSend(*(id *)&v17[v18], sel_trailingAnchor);
  v28 = OUTLINED_FUNCTION_5_51();
  OUTLINED_FUNCTION_11_42();

  *(_QWORD *)(v21 + 40) = v23;
  v29 = OUTLINED_FUNCTION_2_11((uint64_t)objc_msgSend(*(id *)&v17[v18], sel_topAnchor), sel_topAnchor);
  v30 = OUTLINED_FUNCTION_5_51();
  OUTLINED_FUNCTION_11_42();

  *(_QWORD *)(v21 + 48) = v23;
  v31 = objc_msgSend(*(id *)&v17[v18], sel_centerYAnchor);
  v32 = OUTLINED_FUNCTION_2_11((uint64_t)v31, sel_centerYAnchor);
  v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);
  OUTLINED_FUNCTION_11_42();

  *(_QWORD *)(v21 + 56) = v23;
  v35 = OUTLINED_FUNCTION_2_11(v34, sel_bottomAnchor);
  v36 = objc_msgSend(*(id *)&v17[v18], sel_bottomAnchor);
  v37 = objc_msgSend(v35, sel_constraintGreaterThanOrEqualToAnchor_constant_, v36, 16.0);

  *(_QWORD *)(v21 + 64) = v37;
  v47[0] = v21;
  specialized Array._endMutation()();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = OUTLINED_FUNCTION_4_10().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v45, sel_activateConstraints_, isa);

  if (a3)
  {
    v39 = v20;
    v40 = a3;
    ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.addAccessoryView(_:)(v40);

  }
  v47[3] = v16;
  v47[0] = v20;
  v41 = objc_allocWithZone(MEMORY[0x1E0DC3D80]);
  v42 = v20;
  v43 = @nonobjc UITapGestureRecognizer.init(target:action:)(v47, (uint64_t)sel_onTap);
  v44 = v42;
  objc_msgSend(v44, sel_addGestureRecognizer_, v43);

  swift_release();
  OUTLINED_FUNCTION_21_3();
}

id ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = OBJC_IVAR____TtCC15ConversationKit47ConversationControlsPrimaryActionButtonProvider19AvatarSelectionView_titleLabel;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v3 = closure #1 in variable initialization expression of ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.titleLabel(v2);

  *(_QWORD *)&v0[v1] = v3;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.addAccessoryView(_:)(void *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  Class isa;

  v3 = v1;
  objc_msgSend(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_addSubview_, a1);
  v5 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v6 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v6 + 16) = xmmword_1BD64C5C0;
  v7 = OUTLINED_FUNCTION_25_1(v6, sel_leadingAnchor);
  v8 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCC15ConversationKit47ConversationControlsPrimaryActionButtonProvider19AvatarSelectionView_titleLabel], sel_trailingAnchor);
  v9 = OUTLINED_FUNCTION_4_5((uint64_t)v8, sel_constraintGreaterThanOrEqualToAnchor_constant_);
  OUTLINED_FUNCTION_8_5();

  *(_QWORD *)(v6 + 32) = v2;
  v11 = OUTLINED_FUNCTION_2_11(v10, sel_trailingAnchor);
  v12 = OUTLINED_FUNCTION_25_1((uint64_t)v11, sel_trailingAnchor);
  v13 = OUTLINED_FUNCTION_4_5((uint64_t)v12, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_8_5();

  *(_QWORD *)(v6 + 40) = v2;
  v15 = OUTLINED_FUNCTION_25_1(v14, sel_topAnchor);
  v16 = OUTLINED_FUNCTION_2_11((uint64_t)v15, sel_topAnchor);
  v17 = OUTLINED_FUNCTION_4_5((uint64_t)v16, sel_constraintGreaterThanOrEqualToAnchor_constant_);
  OUTLINED_FUNCTION_8_5();

  *(_QWORD *)(v6 + 48) = v2;
  v19 = OUTLINED_FUNCTION_25_1(v18, sel_centerYAnchor);
  v20 = OUTLINED_FUNCTION_2_11((uint64_t)v19, sel_centerYAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);
  OUTLINED_FUNCTION_8_5();

  *(_QWORD *)(v6 + 56) = v2;
  v23 = OUTLINED_FUNCTION_2_11(v22, sel_bottomAnchor);
  v24 = OUTLINED_FUNCTION_25_1((uint64_t)v23, sel_bottomAnchor);
  v25 = objc_msgSend(v23, sel_constraintGreaterThanOrEqualToAnchor_constant_, v24, 12.0);

  *(_QWORD *)(v6 + 64) = v25;
  v27 = OUTLINED_FUNCTION_25_1(v26, sel_heightAnchor);
  v28 = OUTLINED_FUNCTION_13_45(v27);

  *(_QWORD *)(v6 + 72) = v28;
  v30 = OUTLINED_FUNCTION_25_1(v29, sel_widthAnchor);
  v31 = OUTLINED_FUNCTION_13_45(v30);

  *(_QWORD *)(v6 + 80) = v31;
  specialized Array._endMutation()();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = OUTLINED_FUNCTION_4_10().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_activateConstraints_, isa);

}

uint64_t ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.onTap()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0
                              + OBJC_IVAR____TtCC15ConversationKit47ConversationControlsPrimaryActionButtonProvider19AvatarSelectionView_onSelection))();
}

id ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ConversationControlsPrimaryActionButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:)()
{
  OUTLINED_FUNCTION_6_44();
  __break(1u);
}

void ConversationControlsPrimaryActionButtonProvider.init(controlsManager:context:shape:menuHostViewController:)()
{
  OUTLINED_FUNCTION_6_44();
  __break(1u);
}

uint64_t ConversationControlsPrimaryActionButtonProvider.__ivar_destroyer()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 176));
}

uint64_t ConversationControlsPrimaryActionButtonProvider.deinit()
{
  uint64_t v0;

  v0 = ConversationControlsMenuButtonProvider.deinit();
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 176));
  return v0;
}

uint64_t ConversationControlsPrimaryActionButtonProvider.__deallocating_deinit()
{
  ConversationControlsPrimaryActionButtonProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ConversationControlsPrimaryActionButtonProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsPrimaryActionButtonProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsPrimaryActionButtonProvider.__allocating_init(controlsManager:context:calls:selectedCallAction:title:symbol:prefersPill:showsSymbolInPill:prefersMediumSize:menuHostViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 608))();
}

uint64_t method lookup function for ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsPrimaryActionButtonProvider.AvatarSelectionView.__allocating_init(title:accessoryView:onSelection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BD176684()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

id partial apply for closure #1 in closure #1 in ConversationControlsPrimaryActionButtonProvider.menu(for:)(uint64_t a1)
{
  uint64_t *v1;

  return closure #1 in closure #1 in ConversationControlsPrimaryActionButtonProvider.menu(for:)(a1, v1[2], v1[3], v1[4]);
}

uint64_t objectdestroy_2Tm_1()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ConversationControlsPrimaryActionButtonProvider.menu(for:)()
{
  uint64_t *v0;

  return closure #1 in closure #1 in closure #1 in ConversationControlsPrimaryActionButtonProvider.menu(for:)(v0[2], v0[3], v0[4]);
}

uint64_t specialized Set.contains(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = type metadata accessor for UUID();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (_s10Foundation4UUIDVACSHAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09C8]), v6 = dispatch thunk of Hashable._rawHashValue(seed:)(), v7 = -1 << *(_BYTE *)(a2 + 32), v8 = v6 & ~v7, ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      _s10Foundation4UUIDVACSHAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09D0]);
      v12 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

void specialized Set.contains(_:)(Swift::UInt32 a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  if (*(_QWORD *)(a2 + 16))
  {
    OUTLINED_FUNCTION_4_54();
    Hasher._combine(_:)(a1);
    OUTLINED_FUNCTION_4_6();
    OUTLINED_FUNCTION_1_58();
    if ((v5 & 1) != 0 && *(_DWORD *)(*(_QWORD *)(a2 + 48) + 4 * v4) != a1)
    {
      OUTLINED_FUNCTION_0_72();
      if ((v8 & 1) != 0)
      {
        do
        {
          if (*(_DWORD *)(v6 + 4 * v7) == a1)
            break;
          OUTLINED_FUNCTION_0_72();
        }
        while ((v9 & 1) != 0);
      }
    }
  }
  OUTLINED_FUNCTION_95_0();
}

uint64_t specialized Set.contains(_:)(void *a1, uint64_t a2)
{
  return specialized Set.contains(_:)(a1, a2, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
}

{
  return specialized Set.contains(_:)(a1, a2, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
}

uint64_t specialized Set.contains(_:)(void *a1, uint64_t a2, unint64_t *a3)
{
  id v4;
  char v5;
  Swift::Int v8;
  uint64_t v9;
  Swift::Int v10;
  char v11;
  id v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  char v19;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v4 = a1;
    v5 = __CocoaSet.contains(_:)();

    return v5 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v8 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40)),
        v9 = -1 << *(_BYTE *)(a2 + 32),
        v10 = v8 & ~v9,
        OUTLINED_FUNCTION_9_45(),
        (v11 & 1) == 0))
  {
LABEL_11:
    v14 = 0;
    return v14 & 1;
  }
  _sSo8NSObjectCMaTm_0(0, a3);
  v12 = OUTLINED_FUNCTION_12_37();
  v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    v15 = ~v9;
    v16 = (v10 + 1) & v15;
    OUTLINED_FUNCTION_9_45();
    if ((v17 & 1) != 0)
    {
      do
      {
        v18 = OUTLINED_FUNCTION_12_37();
        v14 = static NSObject.== infix(_:_:)();

        if ((v14 & 1) != 0)
          break;
        v16 = (v16 + 1) & v15;
        OUTLINED_FUNCTION_9_45();
      }
      while ((v19 & 1) != 0);
      return v14 & 1;
    }
    goto LABEL_11;
  }
  v14 = 1;
  return v14 & 1;
}

void specialized Set.contains(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  Swift::Int v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v18;

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    v6 = OUTLINED_FUNCTION_4_6();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    OUTLINED_FUNCTION_7_60();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (OUTLINED_FUNCTION_10_50() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        OUTLINED_FUNCTION_7_60();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = (_QWORD *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2)
              break;
            if ((OUTLINED_FUNCTION_10_50() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            OUTLINED_FUNCTION_7_60();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void specialized Set.contains(_:)(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;

  if (*(_QWORD *)(a2 + 16))
  {
    v3 = a1;
    v4 = OUTLINED_FUNCTION_4_54();
    OUTLINED_FUNCTION_22_7(v4, v5, v6, v7, v8, v9, v10, v11, v18, v19);
    OUTLINED_FUNCTION_4_6();
    OUTLINED_FUNCTION_1_58();
    if ((v13 & 1) != 0 && *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v12) != v3)
    {
      OUTLINED_FUNCTION_0_72();
      if ((v16 & 1) != 0)
      {
        do
        {
          if (*(unsigned __int8 *)(v14 + v15) == v3)
            break;
          OUTLINED_FUNCTION_0_72();
        }
        while ((v17 & 1) != 0);
      }
    }
  }
  OUTLINED_FUNCTION_95_0();
}

void specialized Set.contains(_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  char v5;

  if (*(_QWORD *)(a2 + 16))
  {
    OUTLINED_FUNCTION_11_43(a1, a2);
    static Hasher._hash(seed:_:)();
    OUTLINED_FUNCTION_2_65();
    if ((v2 & 1) != 0)
    {
      OUTLINED_FUNCTION_5_52();
      if (!v3)
      {
        OUTLINED_FUNCTION_0_72();
        if ((v4 & 1) != 0)
        {
          do
          {
            OUTLINED_FUNCTION_5_52();
            if (v3)
              break;
            OUTLINED_FUNCTION_0_72();
          }
          while ((v5 & 1) != 0);
        }
      }
    }
  }
}

{
  char v2;
  char v3;
  char v4;
  char v5;

  if (*(_QWORD *)(a2 + 16))
  {
    OUTLINED_FUNCTION_11_43(a1, a2);
    static Hasher._hash(seed:_:)();
    OUTLINED_FUNCTION_2_65();
    if ((v2 & 1) != 0)
    {
      OUTLINED_FUNCTION_5_52();
      if (!v3)
      {
        OUTLINED_FUNCTION_0_72();
        if ((v4 & 1) != 0)
        {
          do
          {
            OUTLINED_FUNCTION_5_52();
            if (v3)
              break;
            OUTLINED_FUNCTION_0_72();
          }
          while ((v5 & 1) != 0);
        }
      }
    }
  }
}

{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;

  if (*(_QWORD *)(a2 + 16))
  {
    v2 = OUTLINED_FUNCTION_4_54();
    OUTLINED_FUNCTION_22_7(v2, v3, v4, v5, v6, v7, v8, v9, v14, v15);
    OUTLINED_FUNCTION_4_6();
    OUTLINED_FUNCTION_1_58();
    if ((v10 & 1) != 0)
    {
      OUTLINED_FUNCTION_5_52();
      if (!v11)
      {
        OUTLINED_FUNCTION_0_72();
        if ((v12 & 1) != 0)
        {
          do
          {
            OUTLINED_FUNCTION_5_52();
            if (v11)
              break;
            OUTLINED_FUNCTION_0_72();
          }
          while ((v13 & 1) != 0);
        }
      }
    }
  }
  OUTLINED_FUNCTION_95_0();
}

void specialized Set.contains(_:)(char a1, uint64_t a2)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char v20;

  if (*(_QWORD *)(a2 + 16))
  {
    v3 = a1 & 1;
    v4 = OUTLINED_FUNCTION_4_54();
    OUTLINED_FUNCTION_22_7(v4, v5, v6, v7, v8, v9, v10, v11, v19, v20);
    OUTLINED_FUNCTION_4_6();
    OUTLINED_FUNCTION_1_58();
    if ((v13 & 1) != 0 && (((v3 == 0) ^ *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v12)) & 1) == 0)
    {
      OUTLINED_FUNCTION_0_72();
      if ((v18 & 1) != 0)
      {
        do
        {
          if ((((v3 == 0) ^ *(_BYTE *)(v15 + v17)) & 1) != 0)
            break;
          v17 = (v17 + 1) & v16;
        }
        while (((*(_QWORD *)(v14 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0);
      }
    }
  }
  OUTLINED_FUNCTION_95_0();
}

void one-time initialization function for firstPartyCollaborationApps()
{
  uint64_t v0;

  specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of one-time initialization function for firstPartyCollaborationApps);
  static EntitlementsChecker.firstPartyCollaborationApps = v0;
}

id EntitlementsChecker.entitlements(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id result;
  void *v6;
  id v7;

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for LSBundleRecord);
  swift_bridgeObjectRetain();
  result = @nonobjc LSBundleRecord.__allocating_init(bundleIdentifier:allowPlaceholder:)(a1, a2, 0);
  if (!v2)
  {
    v6 = result;
    v7 = objc_msgSend(result, sel_entitlements);

    return v7;
  }
  return result;
}

id @nonobjc LSBundleRecord.__allocating_init(bundleIdentifier:allowPlaceholder:)(uint64_t a1, uint64_t a2, char a3)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleRecordWithBundleIdentifier_allowPlaceholder_error_, v4, a3 & 1, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v5;
}

id EntitlementsChecker.lookupBundleIdentifierSupported(_:entitlement:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  id result;
  void *v11;
  Swift::String v12;
  Swift::Bool v13;

  v5 = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  result = specialized EntitlementsChecker.tryLog<A>(_:_:function:line:)((uint64_t)"Entitlements", 12, 2, 0xD00000000000002FLL, 0x80000001BD677A10, 53, v5, v5, a1, a2);
  if (result)
  {
    v11 = result;
    v12._countAndFlagsBits = a3;
    v12._object = a4;
    v13 = LSPropertyList.contains(entitlement:)(v12);

    return (id)v13;
  }
  return result;
}

uint64_t EntitlementsChecker.supportsCollaboration(bundleIdentifier:bundleRecord:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t result;
  char v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::Bool v12;

  result = (uint64_t)objc_msgSend(*(id *)(v3 + 16), sel_collaborateTogetherEnabled);
  if ((_DWORD)result)
  {
    if (one-time initialization token for firstPartyCollaborationApps != -1)
      swift_once();
    specialized Set.contains(_:)(a1, a2, static EntitlementsChecker.firstPartyCollaborationApps);
    if ((v8 & 1) != 0)
    {
      return 1;
    }
    else if (a3)
    {
      v9 = a3;
      v10 = objc_msgSend(v9, sel_entitlements);
      v11._object = (void *)0x80000001BD677980;
      v11._countAndFlagsBits = 0xD000000000000031;
      v12 = LSPropertyList.contains(entitlement:)(v11);

      return v12;
    }
    else
    {
      return (uint64_t)EntitlementsChecker.lookupBundleIdentifierSupported(_:entitlement:)(a1, a2, 0xD000000000000031, (void *)0x80000001BD677980);
    }
  }
  return result;
}

id specialized EntitlementsChecker.tryLog<A>(_:_:function:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v10;

  v10 = EntitlementsChecker.entitlements(for:)(a9, a10);
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t EntitlementsChecker.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t EntitlementsChecker.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t EntitlementsChecker.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  return v0;
}

uint64_t EntitlementsChecker.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  return v0;
}

uint64_t protocol witness for EntitlementsChecking.supportsCollaboration(bundleIdentifier:bundleRecord:) in conformance EntitlementsChecker()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 112))() & 1;
}

uint64_t dispatch thunk of EntitlementsChecking.supportsCollaboration(bundleIdentifier:bundleRecord:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for EntitlementsChecker()
{
  return objc_opt_self();
}

uint64_t method lookup function for EntitlementsChecker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntitlementsChecker.supportsCollaboration(bundleIdentifier:bundleRecord:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of EntitlementsChecker.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t _s10Foundation4UUIDVACSHAAWlTm_1(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for UUID();
    result = MEMORY[0x1C3B750C8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Image.init(describer:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = __swift_mutable_project_boxed_opaque_existential_1(a1, v2);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  v8 = specialized Image.init(describer:)((uint64_t)v6, v2, v3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v8;
}

uint64_t specialized Image.init(describer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 8))(&v7, a2, a3);
  swift_bridgeObjectRetain();
  outlined release of SymbolImageDescription((uint64_t)&v7);
  v5 = Image.init(systemName:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

uint64_t MessagesGroup.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_31_0(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t MessagesGroup.uuid.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_31_0(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*MessagesGroup.uuid.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MessagesGroup.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_3_57() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for MessagesGroup()
{
  uint64_t result;

  result = type metadata singleton initialization cache for MessagesGroup;
  if (!type metadata singleton initialization cache for MessagesGroup)
    return swift_getSingletonMetadata();
  return result;
}

void MessagesGroup.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_3_57() + 20));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*MessagesGroup.name.modify())(_QWORD)
{
  OUTLINED_FUNCTION_3_57();
  return TPNumberPadCharacter.rawValue.getter;
}

void MessagesGroup.init(uuid:name:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = (_QWORD *)(a4 + *(int *)(OUTLINED_FUNCTION_3_57() + 20));
  *v9 = a2;
  v9[1] = a3;
  OUTLINED_FUNCTION_18();
}

uint64_t getEnumTagSinglePayload for MessagesGroup()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD177884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagesGroup()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD177908(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for MessagesGroup()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ConversationKit::CallRecordingButtonConfiguration __swiftcall CallRecordingButtonConfiguration.init(isEnabled:isHidden:)(Swift::Bool isEnabled, Swift::Bool isHidden)
{
  Swift::Bool *v2;
  ConversationKit::CallRecordingButtonConfiguration result;

  *v2 = isEnabled;
  v2[1] = isHidden;
  result.isEnabled = isEnabled;
  return result;
}

uint64_t CallRecordingButtonConfiguration.isEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t CallRecordingButtonConfiguration.isEnabled.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*CallRecordingButtonConfiguration.isEnabled.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t CallRecordingButtonConfiguration.isHidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t CallRecordingButtonConfiguration.isHidden.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*CallRecordingButtonConfiguration.isHidden.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t dispatch thunk of CallRecordingCountdownViewModelDelegate.resetCountdown()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CallRecordingViewModelDelegate.updateRecordingTimeLabel(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of CallRecordingViewModelDelegate.updatePowerLevels(latestRemoteSpectrum:latestLocalSpectrum:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t getEnumTagSinglePayload for CallRecordingButtonConfiguration(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65281 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CallRecordingButtonConfiguration(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD177B34 + 4 * byte_1BD64C6F5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1BD177B68 + 4 * byte_1BD64C6F0[v4]))();
}

uint64_t sub_1BD177B68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD177B70(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BD177B78);
  return result;
}

uint64_t sub_1BD177B84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BD177B8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD177B90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD177B98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CallRecordingButtonConfiguration()
{
  return &type metadata for CallRecordingButtonConfiguration;
}

uint64_t dispatch thunk of CallRecordingButtonViewModelDelegate.presentEducationScreen()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CallRecordingViewModelProtocol.recordingState.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = (*(uint64_t (**)(void))(a2 + 8))();
  return v2 | ((HIDWORD(v2) & 1) << 32);
}

uint64_t dispatch thunk of CallRecordingViewModelProtocol.recordingState.setter(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 16))(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t dispatch thunk of CallRecordingViewModelProtocol.recordingState.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of CallRecordingViewModelProtocol.startCountdown()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CallRecordingViewModelProtocol.startStopwatch()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CallRecordingViewModelProtocol.observeCountdownNotifications()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CallRecordingViewModelProtocol.observeRecordingStateNotifications()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CallRecordingEducationViewControllerDelegate.tappedCancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t CallScreeningViewModelComposer.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t CallScreeningViewModelComposer.composeViewModel()()
{
  if (one-time initialization token for viewModel != -1)
    swift_once();
  return swift_retain();
}

uint64_t one-time initialization function for viewModel()
{
  uint64_t result;

  result = closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel();
  static CallScreeningViewModelComposer.viewModel = result;
  return result;
}

{
  uint64_t result;

  type metadata accessor for TranscriptionViewModel(0);
  swift_allocObject();
  result = TranscriptionViewModel.init(config:)(0x697263736E617254, 0xEC000000676E6962);
  static TranscriptionView_Previews.viewModel = result;
  return result;
}

uint64_t closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for default != -1)
    swift_once();
  v3 = static TranscriptionViewModel.Configuration.default;
  type metadata accessor for TranscriptionViewModel(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v4 = TranscriptionViewModel.init(config:)(v3, *((uint64_t *)&v3 + 1));
  static TaskPriority.userInitiated.getter();
  v5 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 0, 1, v5);
  type metadata accessor for MainActor();
  swift_retain();
  v6 = static MainActor.shared.getter();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x1E0DF06E8];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v4;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v5);
  swift_retain();
  v9 = static MainActor.shared.getter();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v9;
  v10[3] = v8;
  v10[4] = v4;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  return v4;
}

__int128 *TranscriptionViewModel.Configuration.default.unsafeMutableAddressor()
{
  if (one-time initialization token for default != -1)
    swift_once();
  return &static TranscriptionViewModel.Configuration.default;
}

uint64_t closure #1 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[5] = a4;
  v4[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  v4[7] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = type metadata accessor for MainActor();
  v4[12] = static MainActor.shared.getter();
  v4[13] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[14] = v6;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  v1 = (id)static PhoneLockStateObserver.shared;
  PhoneLockStateObserver.values.getter();

  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher> and conformance AsyncPublisher<A>, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>, MEMORY[0x1E0C95E98]);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  *(_QWORD *)(v0 + 120) = static MainActor.shared.getter();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>((unint64_t *)&lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator, MEMORY[0x1E0C95E78]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  *v2 = v0;
  v2[1] = closure #1 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel;
  OUTLINED_FUNCTION_23_34();
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj();
}

{
  _QWORD *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_30();
  *v1 = *v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  _QWORD *v2;

  if (*(_BYTE *)(v0 + 136) == 2)
  {
    OUTLINED_FUNCTION_20_6(*(_QWORD *)(v0 + 72));
    OUTLINED_FUNCTION_43();
    swift_task_dealloc();
    OUTLINED_FUNCTION_81_0();
    return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    TranscriptionViewModel.hidePrivacySensitiveContent.setter();
    *(_QWORD *)(v0 + 120) = static MainActor.shared.getter();
    lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>((unint64_t *)&lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator, MEMORY[0x1E0C95E78]);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v2;
    *v2 = v0;
    v2[1] = closure #1 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel;
    OUTLINED_FUNCTION_23_34();
    return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj();
  }
}

uint64_t closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[12] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v4[13] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<String>.Publisher>);
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  v4[17] = v6;
  v4[18] = *(_QWORD *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<String>.Publisher>.Iterator);
  v4[20] = v7;
  v4[21] = *(_QWORD *)(v7 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = type metadata accessor for MainActor();
  v4[24] = static MainActor.shared.getter();
  v4[25] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[26] = v8;
  return swift_task_switch();
}

void closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel()
{
  OUTLINED_FUNCTION_3_58();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  Published.projectedValue.getter();
  swift_endAccess();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Published<String>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<String>.Publisher, MEMORY[0x1E0C96190]);
  OUTLINED_FUNCTION_9_46();
}

uint64_t sub_1BD178350()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_15_41();
  OUTLINED_FUNCTION_14_47();
  OUTLINED_FUNCTION_10_11(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v0[27] = 0;
  v0[28] = static MainActor.shared.getter();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<Published<String>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<String>.Publisher>.Iterator, MEMORY[0x1E0C95E78]);
  v2 = (_QWORD *)swift_task_alloc();
  v0[29] = v2;
  *v2 = v0;
  v2[1] = closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel;
  return OUTLINED_FUNCTION_1_59();
}

uint64_t closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_30();
  *v3 = *v2;
  *(_QWORD *)(v0 + 240) = v1;
  swift_task_dealloc();
  v4 = *(_QWORD *)(v0 + 224);
  if (v1)
  {
    if (v4)
      goto LABEL_5;
LABEL_6:
    OUTLINED_FUNCTION_22_37();
    return OUTLINED_FUNCTION_2_8();
  }
  if (!v4)
    goto LABEL_6;
LABEL_5:
  OUTLINED_FUNCTION_20_11();
  OUTLINED_FUNCTION_16_34();
  OUTLINED_FUNCTION_20_37();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_release();
  *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 72);
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 256);
  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    swift_release();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_81_0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)static CallScreeningRTTHelper.shared + 192))(*(_QWORD *)(v0 + 248), v1) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 96);
    v3 = *(_QWORD *)(v0 + 104);
    v5 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v3, 1, 1, v5);
    swift_retain();
    v6 = static MainActor.shared.getter();
    v7 = (_QWORD *)swift_allocObject();
    v8 = MEMORY[0x1E0DF06E8];
    v7[2] = v6;
    v7[3] = v8;
    v7[4] = v4;
    v7[5] = v2;
    v7[6] = v1;
    if (__swift_getEnumTagSinglePayload(v3, 1, v5) == 1)
    {
      outlined destroy of TaskPriority?(*(_QWORD *)(v0 + 104), &demangling cache variable for type metadata for TaskPriority?);
      if (v6)
      {
LABEL_7:
        swift_getObjectType();
        swift_unknownObjectRetain();
        v9 = dispatch thunk of Actor.unownedExecutor.getter();
        v11 = v10;
        swift_unknownObjectRelease();
LABEL_13:
        v15 = swift_allocObject();
        *(_QWORD *)(v15 + 16) = &async function pointer to partial apply for closure #1 in closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel;
        *(_QWORD *)(v15 + 24) = v7;
        if (v11 | v9)
        {
          *(_QWORD *)(v0 + 16) = 0;
          *(_QWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 32) = v9;
          *(_QWORD *)(v0 + 40) = v11;
        }
        v13 = swift_task_create();
        swift_release();
        goto LABEL_16;
      }
    }
    else
    {
      TaskPriority.rawValue.getter();
      OUTLINED_FUNCTION_10_11(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8));
      if (v7[2])
        goto LABEL_7;
    }
    v9 = 0;
    v11 = 0;
    goto LABEL_13;
  }
  v13 = *(_QWORD *)(v0 + 216);
  swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_16:
    *(_QWORD *)(v0 + 216) = v13;
    goto LABEL_17;
  }
  v14 = swift_retain();
  MEMORY[0x1C3B73268](v14, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
  OUTLINED_FUNCTION_43();
LABEL_17:
  *(_QWORD *)(v0 + 224) = static MainActor.shared.getter();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<Published<String>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<String>.Publisher>.Iterator, MEMORY[0x1E0C95E78]);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v16;
  *v16 = v0;
  v16[1] = closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel;
  return dispatch thunk of AsyncIteratorProtocol.next()();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 240);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  OUTLINED_FUNCTION_8_11();
  return OUTLINED_FUNCTION_4_55();
}

uint64_t closure #1 in closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[8] = a5;
  v6[9] = a6;
  v6[7] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
  v6[10] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<[TranscriptionViewModel.Caption]>.Publisher>);
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>.Publisher);
  v6[14] = v8;
  v6[15] = *(_QWORD *)(v8 - 8);
  v6[16] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<[TranscriptionViewModel.Caption]>.Publisher>.Iterator);
  v6[17] = v9;
  v6[18] = *(_QWORD *)(v9 - 8);
  v6[19] = swift_task_alloc();
  v6[20] = type metadata accessor for MainActor();
  v6[21] = static MainActor.shared.getter();
  v6[22] = dispatch thunk of Actor.unownedExecutor.getter();
  v6[23] = v10;
  return swift_task_switch();
}

void closure #1 in closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel()
{
  OUTLINED_FUNCTION_3_58();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
  Published.projectedValue.getter();
  swift_endAccess();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Published<[TranscriptionViewModel.Caption]>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>.Publisher, MEMORY[0x1E0C96190]);
  OUTLINED_FUNCTION_9_46();
}

uint64_t sub_1BD1789A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_15_41();
  OUTLINED_FUNCTION_14_47();
  OUTLINED_FUNCTION_10_11(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  *(_QWORD *)(v0 + 192) = static MainActor.shared.getter();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<Published<[TranscriptionViewModel.Caption]>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<[TranscriptionViewModel.Caption]>.Publisher>.Iterator, MEMORY[0x1E0C95E78]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v2;
  *v2 = v0;
  v2[1] = closure #1 in closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel;
  return OUTLINED_FUNCTION_1_59();
}

uint64_t closure #1 in closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_30();
  *v3 = *v2;
  *(_QWORD *)(v0 + 208) = v1;
  swift_task_dealloc();
  v4 = *(_QWORD *)(v0 + 192);
  if (v1)
  {
    if (v4)
      goto LABEL_5;
LABEL_6:
    OUTLINED_FUNCTION_22_37();
    return OUTLINED_FUNCTION_2_8();
  }
  if (!v4)
    goto LABEL_6;
LABEL_5:
  OUTLINED_FUNCTION_20_11();
  OUTLINED_FUNCTION_16_34();
  OUTLINED_FUNCTION_20_37();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 40);
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(v0 + 216);
  if (v1)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v2 = static CallScreeningRTTHelper.shared;
    v3 = *(_QWORD *)(v1 + 16);
    v4 = *(_QWORD *)(v0 + 80);
    if (v3)
    {
      v5 = v3 - 1;
      v6 = type metadata accessor for TranscriptionViewModel.Caption(0);
      outlined init with copy of TranscriptionViewModel.Caption(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v5, v4);
      v7 = v4;
      v8 = 0;
      v9 = v6;
    }
    else
    {
      v9 = type metadata accessor for TranscriptionViewModel.Caption(0);
      v7 = v4;
      v8 = 1;
    }
    __swift_storeEnumTagSinglePayload(v7, v8, 1, v9);
    v12 = *(_QWORD *)(v0 + 72);
    v11 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2 + 176))(v11, v13, v12);
    outlined destroy of TaskPriority?(v11, &demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
    *(_QWORD *)(v0 + 192) = static MainActor.shared.getter();
    lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<Published<[TranscriptionViewModel.Caption]>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<[TranscriptionViewModel.Caption]>.Publisher>.Iterator, MEMORY[0x1E0C95E78]);
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v14;
    *v14 = v0;
    v14[1] = closure #1 in closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel;
    return dispatch thunk of AsyncIteratorProtocol.next()();
  }
  else
  {
    OUTLINED_FUNCTION_20_6(*(_QWORD *)(v0 + 144));
    OUTLINED_FUNCTION_43();
    swift_task_dealloc();
    OUTLINED_FUNCTION_81_0();
    swift_task_dealloc();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 208);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  OUTLINED_FUNCTION_8_11();
  return OUTLINED_FUNCTION_4_55();
}

uint64_t CallScreeningViewModelComposer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CallScreeningViewModelComposer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t CallScreeningViewModelComposer.init()()
{
  uint64_t v0;

  return v0;
}

void one-time initialization function for waitingForTranscriptionText()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v5._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001BD677A80;
  v1._countAndFlagsBits = 0xD000000000000019;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v5);

  static TranscriptionViewModel.Configuration.Strings.waitingForTranscriptionText = (__int128)v4;
}

__int128 *TranscriptionViewModel.Configuration.Strings.waitingForTranscriptionText.unsafeMutableAddressor()
{
  if (one-time initialization token for waitingForTranscriptionText != -1)
    swift_once();
  return &static TranscriptionViewModel.Configuration.Strings.waitingForTranscriptionText;
}

uint64_t static TranscriptionViewModel.Configuration.Strings.waitingForTranscriptionText.getter()
{
  uint64_t v0;

  if (one-time initialization token for waitingForTranscriptionText != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  v0 = static TranscriptionViewModel.Configuration.Strings.waitingForTranscriptionText;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static TranscriptionViewModel.Configuration.Strings.waitingForTranscriptionText.setter(uint64_t a1, uint64_t a2)
{
  if (one-time initialization token for waitingForTranscriptionText != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)&static TranscriptionViewModel.Configuration.Strings.waitingForTranscriptionText = a1;
  *((_QWORD *)&static TranscriptionViewModel.Configuration.Strings.waitingForTranscriptionText + 1) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TranscriptionViewModel.Configuration.Strings.waitingForTranscriptionText.modify())()
{
  if (one-time initialization token for waitingForTranscriptionText != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t static TranscriptionViewModel.Configuration.default.getter()
{
  uint64_t v0;

  if (one-time initialization token for default != -1)
    swift_once();
  v0 = static TranscriptionViewModel.Configuration.default;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t type metadata accessor for CallScreeningViewModelComposer()
{
  return objc_opt_self();
}

uint64_t method lookup function for CallScreeningViewModelComposer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallScreeningViewModelComposer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

ValueMetadata *type metadata accessor for TranscriptionViewModel.Configuration.Strings()
{
  return &type metadata for TranscriptionViewModel.Configuration.Strings;
}

uint64_t partial apply for closure #1 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel(v2, v3, v4, v5);
}

uint64_t objectdestroyTm_4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel(v2, v3, v4, v5);
}

uint64_t sub_1BD17916C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_61_5(v9);
  *v10 = v2;
  v10[1] = partial apply for closure #1 in closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:);
  return closure #1 in closure #2 in closure #1 in variable initialization expression of static CallScreeningViewModelComposer.viewModel(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1BD17921C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t outlined init with copy of TranscriptionViewModel.Caption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptionViewModel.Caption(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of TaskPriority?(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_20_6(*(_QWORD *)(v3 - 8));
  return a1;
}

void PushToTalkView.__allocating_init(conversationControlsManager:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_1();
  PushToTalkView.init(conversationControlsManager:)(v0);
}

void sub_1BD1792D4()
{
  OUTLINED_FUNCTION_0();
}

void PushToTalkView.leaveLabelButtonView.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  NSBundle v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  id v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit14PushToTalkView____lazy_storage___leaveLabelButtonView);
  if (!v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit14PushToTalkView_leaveButton);
    objc_opt_self();
    v3 = (objc_class *)OUTLINED_FUNCTION_25_1((uint64_t)v2, sel_conversationKit);
    v4 = OUTLINED_FUNCTION_12_38();
    v5.super.isa = v3;
    OUTLINED_FUNCTION_49_2(v4, v6, v7, v8, v5);
    OUTLINED_FUNCTION_14_27();
    v9 = objc_allocWithZone((Class)type metadata accessor for PushToTalkLabelButtonView());
    v10 = OUTLINED_FUNCTION_35_17();
    OUTLINED_FUNCTION_58_16(v10);
    OUTLINED_FUNCTION_37_0();
    v1 = 0;
  }
  v11 = v1;
  OUTLINED_FUNCTION_49_0();
}

void PushToTalkView.talkLabelButtonView.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  objc_class *v3;
  NSBundle v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  id v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit14PushToTalkView____lazy_storage___talkLabelButtonView);
  if (!v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit14PushToTalkView_talkButton);
    objc_opt_self();
    v3 = (objc_class *)OUTLINED_FUNCTION_25_1((uint64_t)v2, sel_conversationKit);
    OUTLINED_FUNCTION_2_17();
    v4.super.isa = v3;
    OUTLINED_FUNCTION_49_2(v5, v6, v7, v8, v4);
    OUTLINED_FUNCTION_14_27();
    v9 = objc_allocWithZone((Class)type metadata accessor for PushToTalkLabelButtonView());
    v10 = OUTLINED_FUNCTION_35_17();
    OUTLINED_FUNCTION_58_16(v10);
    OUTLINED_FUNCTION_37_0();
    v1 = 0;
  }
  v11 = v1;
  OUTLINED_FUNCTION_49_0();
}

void PushToTalkView.alwaysOnDisplayDimmingView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit14PushToTalkView_alwaysOnDisplayDimmingView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit14PushToTalkView_alwaysOnDisplayDimmingView) = a1;

}

void PushToTalkView.init(conversationControlsManager:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  double v25;
  double v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  objc_class *v32;
  uint64_t v33;
  NSBundle v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  char *v44;
  objc_class *v45;
  NSBundle v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  objc_class *v54;
  id v55;
  id v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  objc_super v73;
  id aBlock[3];
  ValueMetadata *v75;
  void (*v76)(void *);
  uint64_t v77;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  v69 = v4;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>.Publisher);
  v68 = *(_QWORD *)(v70 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v67 = v6;
  v72 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Published<PushToTalkViewModel.TalkButtonState>.Publisher, OS_dispatch_queue>)
                  - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v71 = v8;
  v9 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView;
  type metadata accessor for PushToTalkSessionDetailsView();
  v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v11 = (char *)OUTLINED_FUNCTION_48_21();
  *(_QWORD *)(v1 + v9) = OUTLINED_FUNCTION_5_39((uint64_t)v11, sel_init);
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit14PushToTalkView____lazy_storage___leaveLabelButtonView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit14PushToTalkView____lazy_storage___talkLabelButtonView] = 0;
  v12 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_leftMarginLayoutGuide;
  v13 = OUTLINED_FUNCTION_85_6();
  *(_QWORD *)&v11[v12] = OUTLINED_FUNCTION_53_3(v13);
  v14 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_rightMarginLayoutGuide;
  v15 = OUTLINED_FUNCTION_85_6();
  *(_QWORD *)&v11[v14] = OUTLINED_FUNCTION_53_3(v15);
  v16 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_centerContentLayoutGuide;
  v17 = OUTLINED_FUNCTION_85_6();
  *(_QWORD *)&v11[v16] = OUTLINED_FUNCTION_53_3(v17);
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_cancellables] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_alwaysOnDisplayDimmingView] = 0;
  v18 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_topDetailContainerMarginConstant;
  v19 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v19, sel_bounds);
  v21 = v20;

  *(double *)&v11[v18] = v21 * 0.09;
  v22 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_bottomButtonContainerMarginConstant;
  v24 = OUTLINED_FUNCTION_25_1(v23, sel_mainScreen);
  objc_msgSend(v24, sel_bounds);
  v26 = v25;

  *(double *)&v11[v22] = v26 * 0.07;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_viewModel] = OUTLINED_FUNCTION_74_5();
  v75 = &type metadata for SymbolImageDescribers.ConversationControls;
  v76 = (void (*)(void *))&protocol witness table for SymbolImageDescribers.ConversationControls;
  LOBYTE(aBlock[0]) = 18;
  if (one-time initialization token for pttLeaveButtonFullScreen != -1)
    swift_once();
  v27 = objc_allocWithZone((Class)type metadata accessor for CircularButton());
  OUTLINED_FUNCTION_5_0();
  v28 = CircularButton.init(symbol:stateConfiguration:context:)();
  v29 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_leaveButton;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_leaveButton] = v28;
  objc_msgSend(v28, sel_addTarget_action_forControlEvents_, a1, sel_pttLeaveButtonTappedWithButton_, 64);
  v76 = closure #1 in PushToTalkView.init(conversationControlsManager:);
  v77 = 0;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  v75 = (ValueMetadata *)&block_descriptor_26;
  _Block_copy(aBlock);
  v30 = OUTLINED_FUNCTION_48_21();
  objc_msgSend(v30, sel_setConfigurationUpdateHandler_, v27);
  _Block_release(v27);

  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0x657661654C747470, 0xEE006E6F74747542, *(void **)&v11[v29]);
  objc_opt_self();
  v31 = OUTLINED_FUNCTION_48_21();
  v32 = (objc_class *)OUTLINED_FUNCTION_5_39((uint64_t)v31, sel_conversationKit);
  v33 = OUTLINED_FUNCTION_12_38();
  v34.super.isa = v32;
  v38 = OUTLINED_FUNCTION_49_2(v33, v35, v36, v37, v34);
  v40 = v39;

  OUTLINED_FUNCTION_65_10(v38, v40);
  v41 = OUTLINED_FUNCTION_74_5();
  v42 = objc_allocWithZone((Class)type metadata accessor for PushToTalkTalkCircularButton());
  v43 = PushToTalkTalkCircularButton.init(viewModel:)(v41);
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_talkButton] = v43;
  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0x426B6C6154747470, 0xED00006E6F747475, v43);
  v44 = v43;
  v45 = (objc_class *)OUTLINED_FUNCTION_5_39((uint64_t)v44, sel_conversationKit);
  OUTLINED_FUNCTION_2_17();
  v46.super.isa = v45;
  v51 = OUTLINED_FUNCTION_49_2(v47, v48, v49, v50, v46);
  v53 = v52;

  OUTLINED_FUNCTION_65_10(v51, v53);
  v54 = (objc_class *)type metadata accessor for PushToTalkView();
  v73.receiver = v11;
  v73.super_class = v54;
  v55 = objc_msgSendSuper2(&v73, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v75 = (ValueMetadata *)v54;
  aBlock[0] = v55;
  v56 = objc_allocWithZone(MEMORY[0x1E0DC3D80]);
  v57 = (char *)v55;
  v58 = @nonobjc UITapGestureRecognizer.init(target:action:)(aBlock, (uint64_t)sel_openPTTApp_);
  v59 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView;
  objc_msgSend(*(id *)(*(_QWORD *)&v57[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView]+ OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButton), sel_addGestureRecognizer_, v58);
  v60 = OUTLINED_FUNCTION_74_5();
  (*(void (**)(uint64_t))(*(_QWORD *)v60 + 136))(v60);
  OUTLINED_FUNCTION_43();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  aBlock[0] = (id)static OS_dispatch_queue.main.getter();
  v61 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v69, 1, 1, v61);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<PushToTalkViewModel.TalkButtonState>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>.Publisher);
  _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_0(&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v69, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v70);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_24_25();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Published<PushToTalkViewModel.TalkButtonState>.Publisher, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<Published<PushToTalkViewModel.TalkButtonState>.Publisher, OS_dispatch_queue>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  OUTLINED_FUNCTION_6_9(v71, *(uint64_t (**)(uint64_t, uint64_t))(v72 + 8));
  v62 = &v57[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_cancellables];
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_30_32();
  objc_msgSend(v57, sel_addSubview_, *(_QWORD *)&v57[v59]);
  v63 = v57;
  PushToTalkView.leaveLabelButtonView.getter();
  OUTLINED_FUNCTION_31_33(v64);

  v65 = v63;
  PushToTalkView.talkLabelButtonView.getter();
  OUTLINED_FUNCTION_31_33(v66);

  PushToTalkView.setupLayoutGuides()();
}

void closure #1 in PushToTalkView.init(conversationControlsManager:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIConfigurationColorTransformer?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - v9;
  if (objc_msgSend(a1, sel_isEnabled))
  {
    if (one-time initialization token for pttButtonSymbol != -1)
      swift_once();
    v11 = &static Colors.PTT.pttButtonSymbol;
  }
  else
  {
    if (one-time initialization token for pttButtonDisabledSymbol != -1)
      swift_once();
    v11 = &static Colors.PTT.pttButtonDisabledSymbol;
  }
  v12 = (id)*v11;
  UIButton.configuration.getter();
  v13 = type metadata accessor for UIButton.Configuration();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v13))
  {
    *(_QWORD *)(swift_allocObject() + 16) = v12;
    v14 = v12;
    UIConfigurationColorTransformer.init(_:)();
    v15 = type metadata accessor for UIConfigurationColorTransformer();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v15);
    UIButton.Configuration.imageColorTransformer.setter();
  }
  outlined init with copy of UIButton.Configuration?((uint64_t)v10, (uint64_t)v8);
  UIButton.configuration.setter();

  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, &demangling cache variable for type metadata for UIButton.Configuration?);
}

void closure #2 in PushToTalkView.init(conversationControlsManager:)(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    PushToTalkView.updateUIForTalkButtonState(state:)(v2);

  }
}

void PushToTalkView.__allocating_init(coder:)()
{
  uint64_t v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void PushToTalkView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  double v16;
  double v17;

  v1 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView;
  type metadata accessor for PushToTalkSessionDetailsView();
  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  *(_QWORD *)&v0[v1] = OUTLINED_FUNCTION_70_0(v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit14PushToTalkView____lazy_storage___leaveLabelButtonView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit14PushToTalkView____lazy_storage___talkLabelButtonView] = 0;
  v3 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_leftMarginLayoutGuide;
  v4 = OUTLINED_FUNCTION_54_18();
  *(_QWORD *)&v0[v3] = OUTLINED_FUNCTION_70_0(v4);
  v5 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_rightMarginLayoutGuide;
  v6 = OUTLINED_FUNCTION_54_18();
  *(_QWORD *)&v0[v5] = OUTLINED_FUNCTION_70_0(v6);
  v7 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_centerContentLayoutGuide;
  v8 = OUTLINED_FUNCTION_54_18();
  *(_QWORD *)&v0[v7] = OUTLINED_FUNCTION_70_0(v8);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_cancellables] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_alwaysOnDisplayDimmingView] = 0;
  v9 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_topDetailContainerMarginConstant;
  v10 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v10, sel_bounds);
  v12 = v11;

  *(double *)&v0[v9] = v12 * 0.09;
  v13 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_bottomButtonContainerMarginConstant;
  v15 = OUTLINED_FUNCTION_123(v14, sel_mainScreen);
  objc_msgSend(v15, sel_bounds);
  v17 = v16;

  *(double *)&v0[v13] = v17 * 0.07;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall PushToTalkView.openPTTApp(_:)(UITapGestureRecognizer *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  id v6;

  v2 = (_QWORD *)(*(uint64_t (**)(UITapGestureRecognizer *))(**(_QWORD **)(v1
                                                                                   + OBJC_IVAR____TtC15ConversationKit14PushToTalkView_viewModel)
                                                                     + 160))(a1);
  if (v2)
  {
    v6 = v2;
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x270))();
    v4 = v3;
    ObjectType = swift_getObjectType();
    LOBYTE(v4) = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 216))(ObjectType, v4);
    swift_unknownObjectRelease();
    if ((v4 & 1) != 0)
      ConversationControlsManager.openPTTApp()();

  }
}

uint64_t PushToTalkView.updateUI(call:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char **v20;
  char **v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  NSBundle v33;
  id v34;
  id v35;
  id v36;
  NSBundle v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  char **v42;
  id v43;
  char **v44;
  char **v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  NSBundle v49;
  uint64_t v50;
  char **v51;
  id v52;
  Swift::UInt v53;
  id v54;
  char *v55;
  id v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v66[2];
  id v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Swift::Int v76;
  _BOOL4 v77;
  char **v78;
  _QWORD __src[9];
  _BYTE __dst[72];
  uint64_t v81;
  uint64_t v82;

  v69 = type metadata accessor for DispatchWorkItemFlags();
  v70 = *(void **)(v69 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v75 = v5;
  v74 = type metadata accessor for DispatchQoS();
  v73 = *(_QWORD *)(v74 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  v72 = v7;
  v8 = (_QWORD *)type metadata accessor for UUID();
  v9 = *(v8 - 1);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_channelDisplayName);
  v66[1] = OUTLINED_FUNCTION_19_16();
  v68 = v13;

  v14 = objc_msgSend(OUTLINED_FUNCTION_72_11(), sel_localizedName);
  OUTLINED_FUNCTION_49_5();
  v15 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  v17 = v16;

  OUTLINED_FUNCTION_17_8(v18, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
  v19 = OUTLINED_FUNCTION_72_11();
  outlined bridged method (ob) of @objc TUCallProvider.bundleIdentifier.getter(v19);
  v21 = v20;
  static UIImageView.appIcon(for:)(v22, v20);
  v23 = swift_bridgeObjectRelease();
  v24 = OUTLINED_FUNCTION_25_1(v23, sel_image);
  OUTLINED_FUNCTION_37_0();
  v25 = a1;
  v78 = v21;
  specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:badgeImage:)(v25, v21);
  v27 = v26;
  v77 = v26 == 0;
  v66[0] = v15;
  if (v26)
  {
    v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v67 = objc_msgSend(v26, sel_view);
    v28 = v27;
    v29 = OUTLINED_FUNCTION_257((uint64_t)v28, sel_uniqueProxyIdentifierUUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *))((*v15 & *v28) + 0x58))(v11);
    OUTLINED_FUNCTION_14_18();
    v26 = (void *)OUTLINED_FUNCTION_6_9((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  }
  else
  {
    v29 = 0;
    v67 = 0;
  }
  v30 = OUTLINED_FUNCTION_257((uint64_t)v26, sel_status);
  v71 = v27;
  v76 = (Swift::Int)v29;
  if ((_DWORD)v30 == 1)
  {
    v31 = OUTLINED_FUNCTION_257((uint64_t)v30, sel_isSendingTransmission);
    if ((_DWORD)v31)
    {
      OUTLINED_FUNCTION_25();
      v32 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_45_22();
      v33.super.isa = (Class)v21;
      OUTLINED_FUNCTION_49_2(0x6E696E657473694CLL, 0xE900000000000067, 0x61737265766E6F43, 0xEF74694B6E6F6974, v33);
      OUTLINED_FUNCTION_42_21();
      OUTLINED_FUNCTION_33_21();
LABEL_17:
      OUTLINED_FUNCTION_4_56();
LABEL_26:

      goto LABEL_27;
    }
    if (OUTLINED_FUNCTION_257((uint64_t)v31, sel_isReceivingTransmission))
    {
      v38 = OUTLINED_FUNCTION_25();
      v39 = OUTLINED_FUNCTION_257(v38, sel_activeRemoteParticipant);
      if (v39)
      {
        v40 = v39;
        swift_bridgeObjectRelease();
        v41 = v25;
        v42 = v78;
        v43 = v40;
        specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:activeRemoteParticipant:badgeImage:)(v41, v43, v21);
        v21 = v44;
        if (v44)
        {
          v45 = v44;
          v46 = objc_msgSend(v45, sel_view);

          OUTLINED_FUNCTION_121((uint64_t)&v81);
        }
        else
        {
          OUTLINED_FUNCTION_121((uint64_t)&v81);
          v46 = 0;
        }
        Hasher.init()();
        if (v21)
        {
          v21 = v21;
          v52 = OUTLINED_FUNCTION_25_1((uint64_t)v21, sel_uniqueProxyIdentifierUUID);
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          v53 = (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & (unint64_t)*v21) + 0x58))(v11);
          OUTLINED_FUNCTION_6_9((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
          Hasher._combine(_:)(1u);
          Hasher._combine(_:)(v53);
        }
        else
        {
          Hasher._combine(_:)(0);
        }
        OUTLINED_FUNCTION_75_8();
        v8 = v46;
        v51 = &selRef_inputDevices;
        Hasher._combine(_:)((Swift::UInt)objc_msgSend(v43, sel_hash));
        memcpy(__dst, __src, sizeof(__dst));
        v76 = Hasher.finalize()();
        v54 = objc_msgSend(v43, sel_name);
        v27 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        v11 = v55;

        v77 = 0;
      }
      else
      {
        OUTLINED_FUNCTION_75_8();
        OUTLINED_FUNCTION_4_56();
        v51 = &selRef_inputDevices;
      }
      v56 = OUTLINED_FUNCTION_257(v50, v51[185]);
      v15 = (_QWORD *)OUTLINED_FUNCTION_19_16();
      v17 = v57;
      v25 = v70;
      goto LABEL_26;
    }
    goto LABEL_15;
  }
  v21 = &selRef_inputDevices;
  v34 = OUTLINED_FUNCTION_257((uint64_t)v30, sel_serviceStatus);
  if (!v34)
  {
LABEL_15:
    OUTLINED_FUNCTION_33_21();
    OUTLINED_FUNCTION_4_56();
    v15 = (_QWORD *)v66[0];
    goto LABEL_27;
  }
  v35 = OUTLINED_FUNCTION_257((uint64_t)v34, sel_serviceStatus);
  v9 = v69;
  v15 = (_QWORD *)v66[0];
  if (v35 == (id)2)
  {
    OUTLINED_FUNCTION_25();
    v48 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_45_22();
    v49.super.isa = (Class)&selRef_inputDevices;
    OUTLINED_FUNCTION_49_2(0x6961764120746F4ELL, 0xED0000656C62616CLL, 0x61737265766E6F43, 0xEF74694B6E6F6974, v49);
    OUTLINED_FUNCTION_42_21();
    v25 = v70;
    goto LABEL_17;
  }
  v25 = v70;
  if (v35 == (id)1)
  {
    OUTLINED_FUNCTION_25();
    v36 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_45_22();
    v37.super.isa = (Class)&selRef_inputDevices;
    OUTLINED_FUNCTION_49_2(0x63656E6E6F636552, 0xEC000000676E6974, 0x61737265766E6F43, 0xEF74694B6E6F6974, v37);
    OUTLINED_FUNCTION_42_21();
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_4_56();
LABEL_27:
  OUTLINED_FUNCTION_17_8(v47, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v58 = (void *)static OS_dispatch_queue.main.getter();
  v59 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v60 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v60 + 16) = v59;
  *(_QWORD *)(v60 + 24) = v8;
  *(_QWORD *)(v60 + 32) = v76;
  *(_BYTE *)(v60 + 40) = v77;
  *(_QWORD *)(v60 + 48) = v27;
  *(_QWORD *)(v60 + 56) = v11;
  *(_QWORD *)(v60 + 64) = v15;
  *(_QWORD *)(v60 + 72) = v17;
  __src[4] = partial apply for specialized closure #1 in PushToTalkView.updateUI(call:);
  __src[5] = v60;
  __src[0] = MEMORY[0x1E0C809B0];
  __src[1] = 1107296256;
  __src[2] = thunk for @escaping @callee_guaranteed () -> ();
  __src[3] = &block_descriptor_7;
  v61 = _Block_copy(__src);
  v62 = v8;
  OUTLINED_FUNCTION_43();
  v63 = v72;
  static DispatchQoS.unspecified.getter();
  __src[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v64 = v75;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v63, v64, v61);
  _Block_release(v61);

  OUTLINED_FUNCTION_121((uint64_t)&v82);
  (*((void (**)(uint64_t, uint64_t))v25 + 1))(v64, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 8))(v63, v74);
}

void specialized closure #1 in PushToTalkView.updateUI(call:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  void *v17;

  v15 = a1 + 16;
  swift_beginAccess();
  v16 = MEMORY[0x1C3B752C0](v15);
  if (v16)
  {
    v17 = (void *)v16;
    PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:)(a2, a3, a4 & 1, a5, a6, a7, a8);

  }
}

Swift::Void __swiftcall PushToTalkView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  id v2;
  Class isa;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  objc_super v17;

  isa = a1.value.super.isa;
  v17.receiver = v1;
  v17.super_class = (Class)type metadata accessor for PushToTalkView();
  v4 = objc_msgSendSuper2(&v17, sel_traitCollectionDidChange_, isa);
  if (isa)
  {
    v4 = OUTLINED_FUNCTION_123((uint64_t)v4, sel__backlightLuminance);
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(OUTLINED_FUNCTION_25_1((uint64_t)v4, sel_traitCollection), sel__backlightLuminance);
  OUTLINED_FUNCTION_18_17();
  if (!isa || v5 != v2)
  {
    v7 = OUTLINED_FUNCTION_25_1(v6, sel_traitCollection);
    v8 = objc_msgSend(v7, sel__backlightLuminance);

    if (v8 == (id)1)
    {
      objc_msgSend(v1, sel_bounds);
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, v9, v10, v11, v12);
      v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.0, 0.75);
      objc_msgSend(v13, sel_setBackgroundColor_, v14);

      OUTLINED_FUNCTION_10_16(v15, sel_addSubview_);
      v16 = v13;
      PushToTalkView.alwaysOnDisplayDimmingView.setter((uint64_t)v13);
      objc_msgSend(v1, sel_bringSubviewToFront_, *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView]);

    }
    else
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_alwaysOnDisplayDimmingView], sel_removeFromSuperview);
      PushToTalkView.alwaysOnDisplayDimmingView.setter(0);
    }
  }
}

void PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  BOOL v14;
  uint64_t v15;
  char v16;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v14 = a3 & 1;
  v15 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v7
                                                                   + OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView))
                             + 0xA8))();
  v18 = (a3 & 1) == 0 && v15 == a2;
  if ((v16 & 1) != 0)
    v19 = v14;
  else
    v19 = v18;
  v30 = (id)objc_opt_self();
  if (one-time initialization token for shared != -1)
    swift_once();
  v20 = !v19;
  v21 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
  v22 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_24_25();
  v23 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v23 + 16) = v22;
  *(_BYTE *)(v23 + 24) = v20;
  *(_QWORD *)(v23 + 32) = a4;
  *(_QWORD *)(v23 + 40) = a5;
  *(_QWORD *)(v23 + 48) = a6;
  *(_QWORD *)(v23 + 56) = a7;
  v24 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed () -> (), (uint64_t)v30, a1, MEMORY[0x1E0C809B0], 1107296256, v35, v37);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  v25 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_24_25();
  v26 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v26 + 16) = v25;
  *(_BYTE *)(v26 + 24) = v20;
  v27 = (void *)v34;
  *(_QWORD *)(v26 + 32) = v34;
  *(_QWORD *)(v26 + 40) = a2;
  *(_BYTE *)(v26 + 48) = v14;
  *(_QWORD *)(v26 + 56) = a4;
  *(_QWORD *)(v26 + 64) = a5;
  *(_QWORD *)(v26 + 72) = a6;
  *(_QWORD *)(v26 + 80) = a7;
  v28 = OUTLINED_FUNCTION_76_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), (uint64_t)v31, v34, MEMORY[0x1E0C809B0], 1107296256, v36, v38);
  v29 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v32, sel_animateWithDuration_animations_completion_, v24, v28, v21);
  _Block_release(v28);
  _Block_release(v24);
}

void closure #1 in PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void (*v17)(void);
  _QWORD *v18;
  char v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  void *v29;
  _QWORD *v30;
  void (*v31)(void);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t (*v36)(void);
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;

  v11 = a1 + 16;
  swift_beginAccess();
  v12 = MEMORY[0x1C3B752C0](v11);
  if (!v12)
    return;
  v13 = (char *)v12;
  v14 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView;
  v15 = *(_QWORD **)(v12 + OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView);
  v16 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v17 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v15) + 0xA8);
  v18 = v15;
  v17();
  LOBYTE(v17) = v19;

  if ((v17 & 1) == 0 && (a2 & 1) != 0)
  {
    v20 = (void *)(*(uint64_t (**)(void))((*v16 & **(_QWORD **)&v13[v14]) + 0x90))();
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, sel_setAlpha_, 0.0);

    }
  }
  v22 = (void *)(*(uint64_t (**)(void))((*v16 & **(_QWORD **)&v13[v14]) + 0xC0))();
  v23 = objc_msgSend(v22, sel_text);

  if (v23)
  {

    v24 = (void *)(*(uint64_t (**)(void))((*v16 & **(_QWORD **)&v13[v14]) + 0xC0))();
    v25 = (uint64_t)outlined bridged method (ob) of @objc UILabel.text.getter(v24);
    if (!v26)
    {
LABEL_13:
      v29 = (void *)(*(uint64_t (**)(uint64_t))((*v16 & **(_QWORD **)&v13[v14]) + 0xC0))(v25);
      objc_msgSend(v29, sel_setAlpha_, 0.0);

      goto LABEL_15;
    }
    if (v25 != a3 || v26 != a4)
    {
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      v25 = swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
        goto LABEL_15;
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
LABEL_15:
  v30 = *(_QWORD **)(*(_QWORD *)&v13[v14]
                   + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButton);
  v31 = *(void (**)(void))((*v16 & *v30) + 0x70);
  v32 = v30;
  v31();
  v34 = v33;

  swift_bridgeObjectRelease();
  if (v34)
  {
    v35 = *(_QWORD **)(*(_QWORD *)&v13[v14]
                     + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButton);
    v36 = *(uint64_t (**)(void))((*v16 & *v35) + 0x70);
    v37 = v35;
    v38 = v36();
    v40 = v39;

    if (!v40)
      goto LABEL_22;
    if (v38 == a5 && v40 == a6)
    {

      swift_bridgeObjectRelease();
      return;
    }
    v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v42 & 1) == 0)
LABEL_22:
      objc_msgSend(*(id *)(*(_QWORD *)&v13[v14] + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButton), sel_setAlpha_, 0.0);
  }

}

void closure #2 in PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:)(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(void *);
  id v24;
  _QWORD *v25;
  _QWORD *v26;
  void (*v27)(uint64_t, _QWORD);
  _QWORD *v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  void (*v35)(uint64_t, uint64_t);
  _QWORD *v36;
  void *v37;
  double v38;
  uint64_t v39;
  void *v40;
  unsigned int v41;
  _QWORD aBlock[6];

  v16 = a2 + 16;
  swift_beginAccess();
  v17 = MEMORY[0x1C3B752C0](v16);
  if (v17)
  {
    v18 = (char *)v17;
    v19 = (_QWORD *)&unk_1EF4C0000;
    v20 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if ((a3 & 1) != 0)
    {
      v41 = a6 & 1;
      v21 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView;
      v22 = *(_QWORD **)(v17 + OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView);
      v23 = *(void (**)(void *))((*MEMORY[0x1E0DEEDD8] & *v22) + 0x98);
      v24 = a4;
      v25 = v22;
      v23(a4);

      v26 = *(_QWORD **)&v18[v21];
      v27 = *(void (**)(uint64_t, _QWORD))((*v20 & *v26) + 0xB0);
      v28 = v26;
      v27(a5, v41);

      v29 = *(_QWORD **)&v18[v21];
      v19 = &unk_1EF4C0000;
      v30 = (void *)(*(uint64_t (**)(void))((*v20 & *v29) + 0x90))();
      if (v30)
      {
        v31 = v30;
        objc_msgSend(v30, sel_setAlpha_, 0.0);

      }
    }
    v32 = v19[154];
    v33 = (void *)(*(uint64_t (**)(void))((*v20 & **(_QWORD **)&v18[v32]) + 0xC0))();
    outlined bridged method (mbgnn) of @objc UILabel.text.setter(a7, a8, v33);

    v34 = *(_QWORD **)(*(_QWORD *)&v18[v32]
                     + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButton);
    v35 = *(void (**)(uint64_t, uint64_t))((*v20 & *v34) + 0x78);
    v36 = v34;
    swift_bridgeObjectRetain();
    v35(a9, a10);

    v37 = (void *)objc_opt_self();
    if (one-time initialization token for shared != -1)
      swift_once();
    v38 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
    v39 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = partial apply for closure #1 in closure #2 in PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:);
    aBlock[5] = v39;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_25_0;
    v40 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v37, sel_animateWithDuration_animations_, v40, v38);
    _Block_release(v40);

  }
}

void closure #1 in closure #2 in PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  void *v8;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (char *)v2;
    v4 = OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView;
    v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v6 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v2
                                                                            + OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView))
                                      + 0x90))();
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, sel_setAlpha_, 1.0);

    }
    v8 = (void *)(*(uint64_t (**)(void))((*v5 & **(_QWORD **)&v3[v4]) + 0xC0))();
    objc_msgSend(v8, sel_setAlpha_, 1.0);

    objc_msgSend(*(id *)(*(_QWORD *)&v3[v4] + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButton), sel_setAlpha_, 1.0);
  }
}

void PushToTalkView.updateUIForTalkButtonState(state:)(unsigned __int8 a1)
{
  int v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t *v5;
  objc_class *v6;
  NSBundle v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  NSBundle v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;

  v1 = a1;
  PushToTalkView.talkLabelButtonView.getter();
  v3 = (void *)v2;
  v4 = OUTLINED_FUNCTION_24_30(v2, OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label);

  if (v1 == 3)
  {
    if (one-time initialization token for buttonLabelDisabled != -1)
      swift_once();
    v5 = &static Colors.PTT.buttonLabelDisabled;
  }
  else
  {
    if (one-time initialization token for buttonLabel != -1)
      swift_once();
    v5 = &static Colors.PTT.buttonLabel;
  }
  objc_msgSend(v4, sel_setTextColor_, *v5);

  v6 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_2_17();
  v7.super.isa = v6;
  v12 = OUTLINED_FUNCTION_49_2(v8, v9, v10, v11, v7);
  v14 = v13;

  if ((v1 & 0xFE) == 2)
  {
    PushToTalkView.leaveLabelButtonView.getter();
    v16 = (id)v15;
    OUTLINED_FUNCTION_24_30(v15, OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_button);
    OUTLINED_FUNCTION_18_11();
    -[objc_class setEnabled:](v6, sel_setEnabled_, 1, 0xE000000000000000);

    PushToTalkView.leaveLabelButtonView.getter();
    OUTLINED_FUNCTION_24_30(v17, OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label);
    OUTLINED_FUNCTION_18_17();
    if (one-time initialization token for buttonLabel != -1)
      swift_once();
    objc_msgSend(v16, sel_setTextColor_, static Colors.PTT.buttonLabel);
    goto LABEL_16;
  }
  PushToTalkView.leaveLabelButtonView.getter();
  OUTLINED_FUNCTION_24_30(v18, OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_button);
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_18_4(&ParticipantVideoOverlayView.base_props, sel_setEnabled_);

  PushToTalkView.leaveLabelButtonView.getter();
  v20 = (void *)v19;
  v21 = OUTLINED_FUNCTION_24_30(v19, OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label);

  if (one-time initialization token for buttonLabelDisabled != -1)
    swift_once();
  objc_msgSend(v21, sel_setTextColor_, static Colors.PTT.buttonLabelDisabled, 0xE000000000000000);

  if ((v1 & 1) != 0)
  {
    v22 = swift_bridgeObjectRelease();
    v16 = OUTLINED_FUNCTION_2_2(v22, sel_conversationKit);
    OUTLINED_FUNCTION_2_17();
    v23.super.isa = (Class)v16;
    v12 = OUTLINED_FUNCTION_49_2(v24, v25, v26, v27, v23);
    v14 = v28;
LABEL_16:

  }
  PushToTalkView.talkLabelButtonView.getter();
  v30 = (void *)v29;
  v31 = OUTLINED_FUNCTION_24_30(v29, OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label);

  outlined bridged method (mbnn) of @objc UILabel.text.setter(v12, v14, v31);
  OUTLINED_FUNCTION_78_1(v31);
}

void PushToTalkView.setupLayoutGuides()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  if (v3 == (id)1
    || (objc_msgSend(OUTLINED_FUNCTION_25_1(v4, sel_currentDevice), sel_userInterfaceIdiom), OUTLINED_FUNCTION_14_18(), v2 == (id)5))
  {
    v5 = PushToTalkView.iPadLayoutConstraints()();
    v6 = v5;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v6 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v6 + 16) = xmmword_1BD6443F0;
    v7 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit14PushToTalkView_leftMarginLayoutGuide), sel_widthAnchor);
    v8 = objc_msgSend(v7, sel_constraintEqualToConstant_, 20.0);

    *(_QWORD *)(v6 + 32) = v8;
    v5 = OUTLINED_FUNCTION_26_0();
  }
  v9 = OUTLINED_FUNCTION_9(v5, sel_topAnchor);
  v10 = OUTLINED_FUNCTION_123((uint64_t)v9, sel_layoutMarginsGuide);
  v11 = OUTLINED_FUNCTION_50_5(v10);
  OUTLINED_FUNCTION_71_3();
  v13 = OUTLINED_FUNCTION_1_21(v12, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_18_17();

  v15 = OUTLINED_FUNCTION_9(v14, sel_bottomAnchor);
  v16 = objc_msgSend(OUTLINED_FUNCTION_123((uint64_t)v15, sel_layoutMarginsGuide), sel_bottomAnchor);
  OUTLINED_FUNCTION_1_4();
  v17 = OUTLINED_FUNCTION_37_23(v15, sel_constraintEqualToAnchor_);

  v19 = OUTLINED_FUNCTION_9(v18, sel_leadingAnchor);
  v20 = OUTLINED_FUNCTION_123((uint64_t)v19, sel_layoutMarginsGuide);
  v21 = objc_msgSend(v20, sel_leadingAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  if (v6 >> 62)
  {
    OUTLINED_FUNCTION_5_0();
    v23 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
  }
  else
  {
    v23 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!__OFADD__(v23, 3))
  {
    OUTLINED_FUNCTION_17_31(v23 + 3);
    OUTLINED_FUNCTION_26_0();
    v24 = v10;
    OUTLINED_FUNCTION_36_0();
  }
  __break(1u);
  JUMPOUT(0x1BD17BF0CLL);
}

uint64_t PushToTalkView.iPadLayoutConstraints()()
{
  uint64_t v0;
  id v1;
  id v2;
  double v3;
  id v4;
  id v5;
  double v6;
  id v7;
  id v8;
  id v9;
  double v10;
  uint64_t v11;
  uint64_t v13;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit14PushToTalkView_leftMarginLayoutGuide), sel_widthAnchor);
  v2 = objc_msgSend(v1, sel_constraintGreaterThanOrEqualToConstant_, 20.0);

  LODWORD(v3) = 1148829696;
  v4 = OUTLINED_FUNCTION_2_2((uint64_t)objc_msgSend(v2, sel_setPriority_, v3), sel_widthAnchor);
  v5 = objc_msgSend(v4, sel_constraintLessThanOrEqualToConstant_, 375.0);

  LODWORD(v6) = 1148846080;
  v7 = OUTLINED_FUNCTION_2_2((uint64_t)objc_msgSend(v5, sel_setPriority_, v6), sel_widthAnchor);
  v8 = OUTLINED_FUNCTION_25_1((uint64_t)v7, sel_widthAnchor);
  v9 = OUTLINED_FUNCTION_48_1(v7, sel_constraintGreaterThanOrEqualToAnchor_constant_);
  OUTLINED_FUNCTION_18_11();

  LODWORD(v10) = 1144750080;
  objc_msgSend(v4, sel_setPriority_, v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v11 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v11 + 16) = xmmword_1BD644B60;
  *(_QWORD *)(v11 + 32) = v2;
  *(_QWORD *)(v11 + 40) = v5;
  *(_QWORD *)(v11 + 48) = v4;
  v13 = v11;
  OUTLINED_FUNCTION_26_0();
  return v13;
}

void PushToTalkView.setupConstraints()()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;

  v2 = v0;
  v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit14PushToTalkView_pttSessionDetailsView];
  PushToTalkView.leaveLabelButtonView.getter();
  v5 = v4;
  PushToTalkView.talkLabelButtonView.getter();
  v7 = v6;

  OUTLINED_FUNCTION_18_4(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_);

  OUTLINED_FUNCTION_18_4(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v8 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v8 + 16) = xmmword_1BD644B60;
  v9 = OUTLINED_FUNCTION_2_2(v8, sel_topAnchor);
  v10 = OUTLINED_FUNCTION_9((uint64_t)v9, sel_topAnchor);
  v11 = OUTLINED_FUNCTION_1_21((uint64_t)v10, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v8 + 32) = v1;
  v13 = OUTLINED_FUNCTION_2_2(v12, sel_leadingAnchor);
  v14 = OUTLINED_FUNCTION_9((uint64_t)v13, sel_leadingAnchor);
  v15 = OUTLINED_FUNCTION_1_21((uint64_t)v14, (const char *)&selRef_attemptToPlaySoundType_forCall_ + 6);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v8 + 40) = v1;
  v17 = OUTLINED_FUNCTION_2_2(v16, sel_trailingAnchor);
  v18 = OUTLINED_FUNCTION_9((uint64_t)v17, sel_trailingAnchor);
  v19 = objc_msgSend(v17, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v18);
  OUTLINED_FUNCTION_71_3();

  *(_QWORD *)(v8 + 48) = v14;
  OUTLINED_FUNCTION_17_4();
  v20 = v8;
  PushToTalkView.leaveLabelButtonView.getter();
  v22 = v21;
  v23 = objc_msgSend(v21, sel_leadingAnchor);

  v25 = OUTLINED_FUNCTION_9(v24, sel_leadingAnchor);
  v44 = OUTLINED_FUNCTION_48_1(v23, sel_constraintEqualToAnchor_constant_);

  PushToTalkView.leaveLabelButtonView.getter();
  v27 = v26;
  v28 = objc_msgSend(v26, sel_bottomAnchor);

  v30 = OUTLINED_FUNCTION_9(v29, sel_bottomAnchor);
  OUTLINED_FUNCTION_48_1(v28, sel_constraintEqualToAnchor_);

  PushToTalkView.talkLabelButtonView.getter();
  v32 = v31;
  v33 = objc_msgSend(v31, sel_trailingAnchor);

  v35 = OUTLINED_FUNCTION_9(v34, sel_trailingAnchor);
  v36 = OUTLINED_FUNCTION_48_1(v33, sel_constraintEqualToAnchor_constant_);

  PushToTalkView.talkLabelButtonView.getter();
  v38 = objc_msgSend(v37, sel_bottomAnchor);
  OUTLINED_FUNCTION_49_5();
  v40 = OUTLINED_FUNCTION_9(v39, sel_bottomAnchor);
  v41 = objc_msgSend(v2, sel_constraintEqualToAnchor_, v40);
  OUTLINED_FUNCTION_37_0();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v42 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v42 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!__OFADD__(v42, 4))
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v42 + 4, 1);
    OUTLINED_FUNCTION_17_4();
    v43 = v44;
    OUTLINED_FUNCTION_13_4();
  }
  __break(1u);
  JUMPOUT(0x1BD17C5F8);
}

id PushToTalkView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void PushToTalkView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PushToTalkView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushToTalkView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(uint64_t a1, uint64_t a2, void *a3)
{
  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(a1, a2, a3, (SEL *)&selRef_setAccessibilityLabel_);
}

uint64_t type metadata accessor for PushToTalkView()
{
  return objc_opt_self();
}

uint64_t sub_1BD17C7E4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #2 in PushToTalkView.init(conversationControlsManager:)(unsigned __int8 *a1)
{
  uint64_t v1;

  closure #2 in PushToTalkView.init(conversationControlsManager:)(a1, v1);
}

void outlined bridged method (mbnn) of @objc CNMutableContact.firstName.setter(uint64_t a1, uint64_t a2, void *a3)
{
  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(a1, a2, a3, (SEL *)&selRef_setFirstName_);
}

void outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6;

  v6 = (id)MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_2_1();
  objc_msgSend(a3, *a4, v6);

}

void *outlined bridged method (ob) of @objc UILabel.text.getter(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = a1;
  v3 = objc_msgSend(a1, sel_text);
  OUTLINED_FUNCTION_37_0();
  if (!v1)
    return 0;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_73();
  return v2;
}

void specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:activeRemoteParticipant:badgeImage:)(void *a1, void *a2, void *a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t (**v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t (**v28)(char *, uint64_t);
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t (*v34)(char *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char **v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t (**v50)(char *, uint64_t);
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  v8 = OUTLINED_FUNCTION_19_35();
  v9 = *(uint64_t (***)(char *, uint64_t))(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v50 - v13;
  if (objc_msgSend(a1, sel_isPTT))
  {
    v50 = v9;
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel_init);
    v16 = OUTLINED_FUNCTION_123((uint64_t)v15, sel_name);
    v53 = a2;
    if (!v16)
    {
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v16 = (id)MEMORY[0x1C3B72E00](v17);
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v15, sel_setNickname_, v16);

    v18 = (void *)objc_opt_self();
    v55 = a1;
    v19 = objc_msgSend(v18, sel_tu_contactStoreConfigurationForCall_, a1);
    v20 = OUTLINED_FUNCTION_48_1(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v21 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v21 + 16) = xmmword_1BD6443F0;
    *(_QWORD *)(v21 + 32) = v15;
    v56 = v21;
    specialized Array._endMutation()();
    v22 = v56;
    v23 = (void *)objc_opt_self();
    v54 = a3;
    v24 = v20;
    v52 = v15;
    v25 = objc_msgSend(v23, sel_clearColor);
    v26 = (uint64_t (**)(char *, uint64_t))objc_allocWithZone((Class)type metadata accessor for ConversationControlsBadgingAvatarViewController());
    v51 = v24;
    v27 = v22;
    v28 = v26;
    ConversationControlsBadgingAvatarViewController.init(contactStore:contacts:badgeImage:badgeBackgroundColor:)(v24, v27, a3, v25);
    v30 = v29;
    v31 = v53;
    v32 = OUTLINED_FUNCTION_2_2((uint64_t)v30, sel_imageURL);
    if (v32)
    {
      v33 = v32;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v28 = v50;
      v34 = v50[4];
      ((void (*)(void *, char *, uint64_t))v34)(v3, v12, v8);
      OUTLINED_FUNCTION_86_0((uint64_t)v3, 0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v8) != 1)
      {
        ((void (*)(char *, void *, uint64_t))v34)(v14, v3, v8);
        v35 = OUTLINED_FUNCTION_55_17();
        if (v3)
        {

          v37 = 0;
          v38 = 0xF000000000000000;
        }
        else
        {
          v37 = v35;
          v38 = v36;
        }
        v40 = &selRef_inputDevices;
        v39 = v28[1](v14, v8);
        goto LABEL_13;
      }
    }
    else
    {
      OUTLINED_FUNCTION_86_0((uint64_t)v3, 1);
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v3, &demangling cache variable for type metadata for URL?);
    v37 = 0;
    v38 = 0xF000000000000000;
    v40 = &selRef_inputDevices;
LABEL_13:
    v41 = v51;
    v42 = v52;
    v43 = OUTLINED_FUNCTION_2_2(v39, v40[187]);
    OUTLINED_FUNCTION_19_16();
    OUTLINED_FUNCTION_73();
    v44 = outlined copy of Data?(v37, v38);
    v45 = OUTLINED_FUNCTION_257(v44, sel_contacts);
    OUTLINED_FUNCTION_17_8((uint64_t)v45, (unint64_t *)&lazy cache variable for type metadata for CNContact);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v46 = objc_allocWithZone(MEMORY[0x1E0C974F0]);
    v47 = @nonobjc CNGroupIdentity.init(groupWithName:photo:contacts:)((uint64_t)v28, (uint64_t)v3, v37, v38);
    v48 = OUTLINED_FUNCTION_257((uint64_t)v47, sel_avatarViewController);

    OUTLINED_FUNCTION_10_16(v49, sel_updateViewWithGroupIdentity_);
    outlined consume of Data?(v37, v38);

    goto LABEL_14;
  }

LABEL_14:
  OUTLINED_FUNCTION_52_1();
}

void specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:badgeImage:)(void *a1, void *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  __n128 *v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(void *, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  __n128 *v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  __n128 v76;
  id v77;
  uint64_t v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_19_35();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v70 - v11;
  v13 = type metadata accessor for CharacterSet();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_0(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  if (!objc_msgSend(a1, sel_isPTT) || (objc_opt_self(), (v17 = swift_dynamicCastObjCClass()) == 0))
  {

LABEL_30:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  v72 = v10;
  v73 = v7;
  v80 = a2;
  v18 = (void *)v17;
  v19 = swift_unknownObjectRetain();
  v79 = v18;
  v20 = OUTLINED_FUNCTION_25_1(v19, sel_channelDisplayName);
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v23 = v22;

  v81 = v23;
  v82 = v21;
  v83 = v21;
  v84 = v23;
  static CharacterSet.whitespaces.getter();
  lazy protocol witness table accessor for type String and conformance String();
  v24 = StringProtocol.components(separatedBy:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v25 = specialized Collection.prefix(_:)(2, v24);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel_init);
  v33 = (v31 >> 1) - v29;
  if (!__OFSUB__(v31 >> 1, v29))
  {
    v34 = v32;
    v78 = v25;
    v71 = v12;
    if (v33 <= 0)
    {
      v36 = 0;
      v37 = 0xE000000000000000;
    }
    else
    {
      if (v29 > 0 || v31 < 2)
        goto LABEL_32;
      v36 = *v27;
      v37 = v27[1];
      swift_bridgeObjectRetain();
    }
    outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v36, v37, v34, (SEL *)&selRef_setFirstName_);
    if (v33 < 2)
    {
      v40 = 0;
      v39 = 0xE000000000000000;
    }
    else
    {
      if (v29 > 1 || v31 < 4)
        goto LABEL_33;
      v40 = v27[2];
      v39 = v27[3];
      OUTLINED_FUNCTION_5_0();
    }
    outlined bridged method (mbnn) of @objc CNMutableContact.lastName.setter(v40, v39, v34);
    v41 = objc_msgSend((id)objc_opt_self(), sel_tu_contactStoreConfigurationForCall_, a1);
    v42 = OUTLINED_FUNCTION_48_1(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_initWithConfiguration_);

    v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v43 = (__n128 *)OUTLINED_FUNCTION_15();
    v76 = (__n128)xmmword_1BD6443F0;
    OUTLINED_FUNCTION_28_31(v43, (__n128)xmmword_1BD6443F0);
    v44 = v83;
    v45 = (void *)objc_opt_self();
    v46 = v80;
    v75 = v80;
    v47 = v42;
    v48 = v34;
    v49 = objc_msgSend(v45, sel_clearColor);
    v50 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsBadgingAvatarViewController());
    v77 = v47;
    ConversationControlsBadgingAvatarViewController.init(contactStore:contacts:badgeImage:badgeBackgroundColor:)(v47, v44, v46, v49);
    v52 = v51;
    v53 = objc_msgSend(v79, sel_imageURL);
    if (v53)
    {
      v54 = v53;
      v55 = v72;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v56 = v73;
      v57 = *(void (**)(void *, char *, uint64_t))(v73 + 32);
      v57(v2, v55, v6);
      OUTLINED_FUNCTION_83_0((uint64_t)v2, 0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v6) != 1)
      {
        v58 = (uint64_t)v71;
        v57(v71, (char *)v2, v6);
        v59 = v58;
        v60 = OUTLINED_FUNCTION_55_17();
        v62 = v75;
        if (v2)
        {

          v63 = 0;
          v64 = 0xF000000000000000;
        }
        else
        {
          v63 = v60;
          v64 = v61;
        }
        OUTLINED_FUNCTION_6_9(v59, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
        goto LABEL_29;
      }
    }
    else
    {
      OUTLINED_FUNCTION_83_0((uint64_t)v2, 1);
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v2, &demangling cache variable for type metadata for URL?);
    v63 = 0;
    v64 = 0xF000000000000000;
    v62 = v75;
LABEL_29:
    v65 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_28_31(v65, v76);
    v66 = objc_allocWithZone(MEMORY[0x1E0C974F0]);
    v67 = v48;
    outlined copy of Data?(v63, v64);
    v68 = @nonobjc CNGroupIdentity.init(groupWithName:photo:contacts:)(v82, v81, v63, v64);
    v69 = OUTLINED_FUNCTION_5_39((uint64_t)v68, sel_avatarViewController);

    objc_msgSend(v69, sel_updateViewWithGroupIdentity_, v68);
    outlined consume of Data?(v63, v64);

    swift_unknownObjectRelease();
    goto LABEL_30;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_1BD17D218()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for specialized closure #1 in PushToTalkView.updateUI(call:)()
{
  uint64_t v0;

  specialized closure #1 in PushToTalkView.updateUI(call:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t method lookup function for PushToTalkView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushToTalkView.__allocating_init(conversationControlsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of PushToTalkView.openPTTApp(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of PushToTalkView.updateUI(call:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t sub_1BD17D2B4()
{
  OUTLINED_FUNCTION_285();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:)()
{
  uint64_t v0;

  closure #1 in PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1BD17D2F8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #2 in PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:)(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

void partial apply for closure #1 in closure #2 in PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:)()
{
  uint64_t v0;

  closure #1 in closure #2 in PushToTalkView.updatePTTSessionDetails(avatar:avatarViewHash:title:subtitle:)(v0);
}

uint64_t sub_1BD17D370()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in closure #1 in PushToTalkView.init(conversationControlsManager:)()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id OUTLINED_FUNCTION_85_6()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 2464));
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo18NSAttributedStringCG_So6CGSizeVs5NeverOTg50113_s15ConversationKit23DurationLabelControllerC04CallC9Formatter33_10D348B228899EF7BB6154999D4B47C3LLV010makeWidestv21Size5using7fittingSo6f23VSo7UILabelC_AKtFAKSo18dE6CXEfU_So7UILabelCAJTf1cn_n(unint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 >> 62)
    goto LABEL_14;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      v18 = MEMORY[0x1E0DEE9D8];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v8 < 0)
        break;
      v9 = 0;
      while (v8 != v9)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v10 = (id)MEMORY[0x1C3B73D18](v9, a1);
        else
          v10 = *(id *)(a1 + 8 * v9 + 32);
        v11 = v10;
        objc_msgSend(a2, sel_setAttributedText_, v10);
        objc_msgSend(a2, sel_sizeThatFits_, a3, a4);
        v13 = v12;
        v15 = v14;

        v16 = *(_QWORD *)(v18 + 16);
        if (v16 >= *(_QWORD *)(v18 + 24) >> 1)
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        ++v9;
        *(_QWORD *)(v18 + 16) = v16 + 1;
        v17 = v18 + 16 * v16;
        *(_QWORD *)(v17 + 32) = v13;
        *(_QWORD *)(v17 + 40) = v15;
        if (v8 == v9)
          goto LABEL_12;
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v8)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:

  }
}

void DurationLabelController.__allocating_init(durationProvider:label:textColor:voiceOverUpdateHandler:prefixAttributedString:)()
{
  DurationLabelController.__allocating_init(durationProvider:label:textColor:voiceOverUpdateHandler:prefixAttributedString:)();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_93();
  v19 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = *(_QWORD *)(v13 + 24);
  v15 = *(_QWORD *)(v13 + 32);
  v17 = __swift_mutable_project_boxed_opaque_existential_1(v13, v16);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_81();
  (*(void (**)(uint64_t))(v18 + 16))(v1);
  v19(v1, v12, v10, v8, v6, v4, v0, v16, v15);
  __swift_destroy_boxed_opaque_existential_1(v14);
  OUTLINED_FUNCTION_52_1();
}

void thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ()(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void DurationLabelController.CallDurationFormatter.attributedString(from:)(double a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = DurationLabelController.CallDurationFormatter.string(from:)(a1);
  if (v3)
  {
    v4 = (uint64_t)v2;
    v5 = v3;
    v6 = *(_QWORD *)(v1 + 40);
    objc_allocWithZone(MEMORY[0x1E0CB3498]);
    swift_bridgeObjectRetain();
    @nonobjc NSAttributedString.init(string:attributes:)(v4, v5, v6);
  }
}

id DurationLabelController.CallDurationFormatter.string(from:)(double a1)
{
  uint64_t v1;
  id v2;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;

  if (a1 < 0.0)
    return 0;
  if (*(double *)(v1 + 8) <= a1)
  {
    if (*(double *)(v1 + 24) <= a1)
      v5 = objc_msgSend(*(id *)(v1 + 32), sel_stringFromTimeInterval_);
    else
      v5 = objc_msgSend(*(id *)(v1 + 16), sel_stringFromTimeInterval_);
    v6 = v5;
    if (v6)
    {
      v7 = v6;
      v2 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v2;
    }
    return 0;
  }
  v2 = objc_msgSend(*(id *)v1, sel_stringFromTimeInterval_);
  if (v2)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.remove(at:)();
    swift_bridgeObjectRelease();
    return (id)v4;
  }
  return v2;
}

double DurationLabelController.CallDurationFormatter.makeWidestLabelSize(using:fitting:)(void *a1, double a2, double a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;

  v6 = objc_msgSend(a1, sel_attributedText);
  v7 = outlined bridged method (pb) of @objc UILabel.text.getter(a1);
  v9 = v8;
  v10 = DurationLabelController.CallDurationFormatter.templateStrings()();
  v11 = a1;
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo18NSAttributedStringCG_So6CGSizeVs5NeverOTg50113_s15ConversationKit23DurationLabelControllerC04CallC9Formatter33_10D348B228899EF7BB6154999D4B47C3LLV010makeWidestv21Size5using7fittingSo6f23VSo7UILabelC_AKtFAKSo18dE6CXEfU_So7UILabelCAJTf1cn_n(v10, v11, a2, a3);
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = *(double *)(v13 + 32);
    v16 = v14 - 1;
    if (v16)
    {
      v17 = v13 + 56;
      v18 = *(double *)(v13 + 32);
      do
      {
        if (v18 < *(double *)(v17 - 8))
        {
          v15 = *(double *)(v17 - 8);
          v18 = v15;
        }
        v17 += 16;
        --v16;
      }
      while (v16);
    }
  }
  else
  {
    v15 = 0.0;
  }
  swift_bridgeObjectRelease();
  $defer #1 () in DurationLabelController.CallDurationFormatter.makeWidestLabelSize(using:fitting:)((uint64_t)v6, v11, v7, v9);

  swift_bridgeObjectRelease();
  return v15;
}

void $defer #1 () in DurationLabelController.CallDurationFormatter.makeWidestLabelSize(using:fitting:)(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  id v6;

  if (a1)
  {
    objc_msgSend(a2, sel_setAttributedText_, a1);
  }
  else
  {
    if (a4)
      v5 = MEMORY[0x1C3B72E00](a3, a4);
    else
      v5 = 0;
    v6 = (id)v5;
    objc_msgSend(a2, sel_setText_);

  }
}

uint64_t DurationLabelController.CallDurationFormatter.templateStrings()()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v10;

  DurationLabelController.CallDurationFormatter.attributedString(from:)(284.0);
  v1 = v0;
  DurationLabelController.CallDurationFormatter.attributedString(from:)(3420.0);
  v3 = v2;
  DurationLabelController.CallDurationFormatter.attributedString(from:)(61.0);
  v5 = v4;
  v10 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v6 = v1;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v3)
  {
    v7 = v3;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v5)
  {
    v8 = v5;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }

  return v10;
}

id DurationLabelController.label.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void DurationLabelController.duration.didset(double a1)
{
  uint64_t v1;

  if (*(double *)(v1 + 72) != a1)
    DurationLabelController.updateDurationLabel()();
}

void DurationLabelController.duration.setter(double a1)
{
  uint64_t v1;
  double v2;

  v2 = *(double *)(v1 + 72);
  *(double *)(v1 + 72) = a1;
  DurationLabelController.duration.didset(v2);
}

uint64_t key path getter for DurationLabelController.voiceOverUpdateHandler : DurationLabelController@<X0>(uint64_t a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)();

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 192))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)())result;
  return result;
}

uint64_t key path setter for DurationLabelController.voiceOverUpdateHandler : DurationLabelController(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t (*v7)(void (*)(), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(void (*)(), uint64_t))(**(_QWORD **)a2 + 200);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return v7(v6, v5);
}

uint64_t DurationLabelController.voiceOverUpdateHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  v1 = *(_QWORD *)(v0 + 144);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v1;
}

uint64_t DurationLabelController.voiceOverUpdateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  OUTLINED_FUNCTION_2_0();
  v5 = *(_QWORD *)(v2 + 144);
  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = a2;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v5);
}

uint64_t (*DurationLabelController.voiceOverUpdateHandler.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

void DurationLabelController.init(durationProvider:label:textColor:voiceOverUpdateHandler:prefixAttributedString:)()
{
  DurationLabelController.__allocating_init(durationProvider:label:textColor:voiceOverUpdateHandler:prefixAttributedString:)();
}

uint64_t DurationLabelController.deinit()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 80);
  if (v1)
    objc_msgSend(v1, sel_invalidate);

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  v2 = *(void **)(v0 + 88);
  v3 = *(void **)(v0 + 104);
  v4 = *(void **)(v0 + 120);
  swift_bridgeObjectRelease();

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 144));
  return v0;
}

uint64_t DurationLabelController.__deallocating_deinit()
{
  DurationLabelController.deinit();
  return swift_deallocClassInstance();
}

CGSize __swiftcall DurationLabelController.makeWidestLabelSize(fitting:)(CGSize fitting)
{
  uint64_t v1;
  uint64_t *v2;
  double height;
  double width;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  CGSize result;

  height = fitting.height;
  width = fitting.width;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_17_8(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v7 = OUTLINED_FUNCTION_7_22();
  *v2 = v7;
  OUTLINED_FUNCTION_4_57(v7, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v1 & 1) != 0)
    v8 = DurationLabelController.CallDurationFormatter.makeWidestLabelSize(using:fitting:)(*(void **)(v1 + 16), width, height);
  else
    __break(1u);
  result.height = v9;
  result.width = v8;
  return result;
}

Swift::Void __swiftcall DurationLabelController.updateTimer()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  double v7;
  id v8;
  int v9;
  void *v10;
  uint64_t v11;

  v2 = v0;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v5 = OUTLINED_FUNCTION_7_22();
  *v1 = v5;
  OUTLINED_FUNCTION_4_57(v5, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    v6 = *(void **)(v0 + 16);
    if ((objc_msgSend(*(id *)(v2 + 16), sel_isHidden) & 1) != 0
      || (objc_msgSend(v6, sel_alpha), v7 <= 0.1))
    {
      v9 = 0;
    }
    else
    {
      v8 = objc_msgSend(v6, sel_window);

      v9 = v8 != 0;
    }
    v10 = *(void **)(v2 + 80);
    if (v10)
    {
      if (v9 != objc_msgSend(v10, sel_isValid))
      {
        v11 = 31;
        if (!v9)
          v11 = 32;
        goto LABEL_13;
      }
    }
    else if ((v9 & 1) != 0)
    {
      v11 = 31;
LABEL_13:
      (*(void (**)(void))(*(_QWORD *)v2 + 8 * v11))();
    }
    OUTLINED_FUNCTION_91();
    return;
  }
  __break(1u);
}

id DurationLabelController.isRunning.getter()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 80);
  if (result)
    return objc_msgSend(result, sel_isValid);
  return result;
}

Swift::Void __swiftcall DurationLabelController.start()()
{
  _QWORD *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t aBlock[6];

  v2 = v0;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v5 = OUTLINED_FUNCTION_7_22();
  *v1 = v5;
  OUTLINED_FUNCTION_17(v5, *MEMORY[0x1E0DEF740]);
  _dispatchPreconditionTest(_:)();
  v6 = OUTLINED_FUNCTION_12_39();
  if ((v0 & 1) != 0)
  {
    (*(void (**)(uint64_t))(*v0 + 256))(v6);
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v7 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v7, (uint64_t)&static Logger.conversationControls);
  v8 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v8))
  {
    OUTLINED_FUNCTION_7_31();
    aBlock[0] = OUTLINED_FUNCTION_105();
    v9 = OUTLINED_FUNCTION_2_26(4.8751e-34);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, aBlock);
    OUTLINED_FUNCTION_59_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_23(&dword_1BD004000, v11, v12, "[%{public}s] startDurationTimer");
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }

  v13 = (void *)objc_opt_self();
  v14 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = (uint64_t)partial apply for closure #1 in DurationLabelController.start();
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  aBlock[3] = (uint64_t)&block_descriptor_27;
  v15 = _Block_copy(aBlock);
  swift_release();
  v16 = objc_msgSend(v13, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v15, 1.0);
  _Block_release(v15);
  v17 = (void *)v2[10];
  v2[10] = v16;

  OUTLINED_FUNCTION_65_1();
}

uint64_t closure #1 in DurationLabelController.start()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  v4 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v4;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #1 in DurationLabelController.start()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in DurationLabelController.start()()
{
  uint64_t v0;
  uint64_t Strong;

  OUTLINED_FUNCTION_2_0();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    type metadata accessor for MainActor();
    *(_QWORD *)(v0 + 64) = static MainActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  swift_release();
  DurationLabelController.updateDuration()();
  swift_release();
  return swift_task_switch();
}

{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall DurationLabelController.stop()()
{
  id *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_17_8(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_17(v4, *MEMORY[0x1E0DEF740]);
  _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_12_39();
  if ((v0 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v5 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v6))
  {
    OUTLINED_FUNCTION_7_31();
    v12 = OUTLINED_FUNCTION_105();
    v7 = OUTLINED_FUNCTION_2_26(4.8751e-34);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v12);
    OUTLINED_FUNCTION_59_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_23(&dword_1BD004000, v9, v10, "[%{public}s] endDurationTimer");
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }

  objc_msgSend(v0[10], sel_invalidate);
  v11 = v0[10];
  v0[10] = 0;

  OUTLINED_FUNCTION_65_1();
}

void DurationLabelController.updateDuration()()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_17_8(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    v5 = v0[7];
    v6 = v0[8];
    __swift_project_boxed_opaque_existential_1(v0 + 4, v5);
    v7 = (*(double (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    DurationLabelController.duration.setter(v7);
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

void DurationLabelController.updateDurationLabel()()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  Swift::String v29;
  void (*v30)(void);
  uint64_t v31;

  OUTLINED_FUNCTION_93();
  v2 = (_QWORD *)v0;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v5 = OUTLINED_FUNCTION_7_22();
  *v1 = v5;
  OUTLINED_FUNCTION_4_57(v5, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    DurationLabelController.CallDurationFormatter.attributedString(from:)(*(double *)(v0 + 72));
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_init);
      v9 = v8;
      v10 = *(void **)(v0 + 136);
      if (v10)
        objc_msgSend(v8, sel_appendAttributedString_, *(_QWORD *)(v0 + 136));
      objc_msgSend(v9, sel_appendAttributedString_, v7);
      v11 = *(void **)(v0 + 16);
      objc_msgSend(v11, sel_setAttributedText_, v9);
      v12 = *(void **)(v0 + 24);
      if (v12)
      {
        v13 = v12;
        v14 = objc_msgSend(v11, sel_textColor);
        if (!v14)
          goto LABEL_8;
        v15 = v14;
        OUTLINED_FUNCTION_17_8((uint64_t)v14, (unint64_t *)&lazy cache variable for type metadata for UIColor);
        v16 = v13;
        v17 = v15;
        LOBYTE(v15) = static NSObject.== infix(_:_:)();

        if ((v15 & 1) == 0)
LABEL_8:
          objc_msgSend(v11, sel_setTextColor_, v13);

      }
      if (v10)
      {
        v18 = objc_msgSend(v10, sel_string);
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v21 = v20;

      }
      else
      {
        v19 = 0;
        v21 = 0xE000000000000000;
      }
      v22 = v2[7];
      v23 = v2[8];
      __swift_project_boxed_opaque_existential_1(v2 + 4, v22);
      v24 = (*(double (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      v25 = static DurationLabelController.axVoiceOverDurationString(from:)(v24);
      if (v26)
        v27 = v25;
      else
        v27 = 0;
      if (v26)
        v28 = v26;
      else
        v28 = (void *)0xE000000000000000;
      swift_bridgeObjectRetain();
      v29._countAndFlagsBits = v27;
      v29._object = v28;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v19, v21, v11);
      if ((UIAccessibilityIsVoiceOverRunning()
         || UIAccessibilityIsSwitchControlRunning()
         || _AXSCommandAndControlEnabled())
        && (v30 = (void (*)(void))(*(uint64_t (**)(void))(*v2 + 192))()) != 0)
      {
        v31 = (uint64_t)v30;
        v30();

        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v31);
        v9 = v7;
      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t static DurationLabelController.axVoiceOverDurationString(from:)(double a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (one-time initialization token for axVoiceOverFormatter != -1)
    swift_once();
  v2 = objc_msgSend((id)static DurationLabelController.axVoiceOverFormatter, sel_stringFromTimeInterval_, a1);
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v8 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v6, v7, "Unable to format call duration: %f", v8, 0xCu);
      MEMORY[0x1C3B751B8](v8, -1, -1);
    }

    return 0;
  }
  return v4;
}

id one-time initialization function for axVoiceOverFormatter()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  objc_msgSend(v0, sel_setUnitsStyle_, 3);
  objc_msgSend(v0, sel_setAllowedUnits_, 224);
  result = objc_msgSend(v0, sel_setZeroFormattingBehavior_, 1);
  static DurationLabelController.axVoiceOverFormatter = (uint64_t)v0;
  return result;
}

void specialized DurationLabelController.init(durationProvider:label:textColor:voiceOverUpdateHandler:prefixAttributedString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void (**v33)(uint64_t *, _QWORD, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t inited;
  void *v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[6];

  OUTLINED_FUNCTION_93();
  v23 = v22;
  v25 = v24;
  v57 = v26;
  v58 = v27;
  v60 = v28;
  v55 = v29;
  v56 = v30;
  v32 = v31;
  v59 = OUTLINED_FUNCTION_8_13();
  v33 = *(void (***)(uint64_t *, _QWORD, uint64_t))(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_81();
  v62[3] = v23;
  v62[4] = a21;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v62);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(boxed_opaque_existential_1, v32, v23);
  v25[9] = 0;
  v25[10] = 0;
  v35 = OUTLINED_FUNCTION_29_27();
  v36 = OUTLINED_FUNCTION_53_3(v35);
  objc_msgSend(v36, sel_setZeroFormattingBehavior_, 0x10000);
  objc_msgSend(v36, sel_setAllowedUnits_, 192);
  objc_msgSend(v36, sel_setUnitsStyle_, 0);
  v37 = OUTLINED_FUNCTION_29_27();
  v38 = OUTLINED_FUNCTION_53_3(v37);
  objc_msgSend(v38, sel_setAllowedUnits_, 64);
  objc_msgSend(v38, sel_setUnitsStyle_, 1);
  v39 = OUTLINED_FUNCTION_29_27();
  v40 = OUTLINED_FUNCTION_53_3(v39);
  objc_msgSend(v40, sel_setAllowedUnits_, 32);
  objc_msgSend(v40, sel_setUnitsStyle_, 1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
  v42 = (void *)*MEMORY[0x1E0DC1238];
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 32) = v42;
  *(_QWORD *)(inited + 40) = 0xBFE0000000000000;
  type metadata accessor for NSAttributedStringKey(0);
  v44 = v43;
  v45 = (id)lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
  v46 = v42;
  v47 = Dictionary.init(dictionaryLiteral:)();
  v25[11] = v36;
  v25[12] = 0x4082C00000000000;
  v25[13] = v38;
  v25[14] = 0x40AC200000000000;
  v25[15] = v40;
  v25[16] = v47;
  OUTLINED_FUNCTION_17_8(v47, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v25[18] = 0;
  v25[19] = 0;
  *v21 = OUTLINED_FUNCTION_7_22();
  v33[13](v21, *MEMORY[0x1E0DEF740], v59);
  v48 = _dispatchPreconditionTest(_:)();
  ((void (*)(uint64_t *, uint64_t))v33[1])(v21, v59);
  if ((v48 & 1) != 0)
  {
    outlined init with copy of IDSLookupManager((uint64_t)v62, (uint64_t)(v25 + 4));
    v25[2] = v56;
    v25[3] = v55;
    OUTLINED_FUNCTION_2_0();
    v49 = v25[18];
    v38 = (id)v60;
    v25[18] = v60;
    v25[19] = v58;
    v45 = v55;
    v33 = v56;
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v60);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v49);
    v25[17] = v57;
    v44 = v57;
    v48 = (uint64_t)v25;
    DurationLabelController.updateDuration()();
    DurationLabelController.updateDurationLabel()();
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v50 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v50, (uint64_t)&static Logger.conversationControls);
  v51 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled((os_log_t)v48, v51))
  {
    v52 = (uint8_t *)OUTLINED_FUNCTION_7_31();
    v61 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v52 = 136446210;
    v53 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, (os_log_t)v48, v51, "[%{public}s] created", v52, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  OUTLINED_FUNCTION_52_1();
}

#error "1BD17EFBC: call analysis failed (funcsize=55)"

uint64_t sub_1BD17EFE8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in DurationLabelController.start()()
{
  return closure #1 in DurationLabelController.start()();
}

uint64_t type metadata accessor for DurationLabelController()
{
  return objc_opt_self();
}

uint64_t method lookup function for DurationLabelController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DurationLabelController.voiceOverUpdateHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DurationLabelController.voiceOverUpdateHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DurationLabelController.voiceOverUpdateHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DurationLabelController.__allocating_init(durationProvider:label:textColor:voiceOverUpdateHandler:prefixAttributedString:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of DurationLabelController.makeWidestLabelSize(fitting:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DurationLabelController.updateTimer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DurationLabelController.isRunning.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DurationLabelController.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DurationLabelController.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t destroy for DurationLabelController.CallDurationFormatter(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DurationLabelController.CallDurationFormatter(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  v8 = *(void **)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  a1[4] = v8;
  a1[5] = v7;
  v9 = v3;
  v10 = v6;
  v11 = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DurationLabelController.CallDurationFormatter(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v10 = *(void **)(a2 + 32);
  v11 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  v12 = v10;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DurationLabelController.CallDurationFormatter(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DurationLabelController.CallDurationFormatter(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DurationLabelController.CallDurationFormatter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void *type metadata accessor for DurationLabelController.CallDurationFormatter()
{
  return &unk_1E761E6B0;
}

uint64_t sub_1BD17F2D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD17F2F8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in DurationLabelController.start()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in closure #1 in DurationLabelController.start()(a1, v4, v5, v6);
}

void ConversationControlsButton.localizedName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___CNKConversationControlsButton_localizedName);
  OUTLINED_FUNCTION_2_0();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  ConversationControlsButton.localizedName.didset();
  OUTLINED_FUNCTION_9_0();
}

id static ConversationControlsButtonFactory.makeButton(frame:provider:)(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  objc_class *v6;
  char *v7;
  objc_super v8;

  OUTLINED_FUNCTION_17_7();
  if (*(_BYTE *)(v2 + 40))
  {
    v3 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsButton());
    OUTLINED_FUNCTION_11_8();
    OUTLINED_FUNCTION_15_0();
    return ConversationControlsButton.init(frame:provider:)(v4);
  }
  else
  {
    v6 = (objc_class *)type metadata accessor for SystemApertureButton();
    v7 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit20SystemApertureButton_provider] = a1;
    v8.receiver = v7;
    v8.super_class = v6;
    OUTLINED_FUNCTION_11_8();
    return OUTLINED_FUNCTION_0_74(&v8, sel_initWithFrame_);
  }
}

void SystemApertureButton.__allocating_init(frame:provider:)()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  objc_super v3;

  v2 = (char *)OUTLINED_FUNCTION_5_54();
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit20SystemApertureButton_provider] = v0;
  v3.receiver = v2;
  v3.super_class = v1;
  OUTLINED_FUNCTION_0_74(&v3, sel_initWithFrame_);
  OUTLINED_FUNCTION_11_44();
}

id ConversationControlsButton.__allocating_init(frame:provider:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_54();
  OUTLINED_FUNCTION_15_0();
  return ConversationControlsButton.init(frame:provider:)(v0);
}

uint64_t key path getter for ConversationControlsButton.delegate : ConversationControlsButton@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR___CNKConversationControlsButton_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for ConversationControlsButton.delegate : ConversationControlsButton(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR___CNKConversationControlsButton_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

void ConversationControlsButton.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___CNKConversationControlsButton_delegate;
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x1C3B752C0](v1);
  OUTLINED_FUNCTION_32();
}

void ConversationControlsButton.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR___CNKConversationControlsButton_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void (*ConversationControlsButton.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___CNKConversationControlsButton_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return ConversationControlsButton.delegate.modify;
}

void ConversationControlsButton.delegate.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    OUTLINED_FUNCTION_10();
  }
  free(v3);
}

void ConversationControlsButton.localizedName.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ConversationControlsButton.localizedName : ConversationControlsButton@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___CNKConversationControlsButton_localizedName);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

void key path setter for ConversationControlsButton.localizedName : ConversationControlsButton(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ConversationControlsButton.localizedName.setter(v1, v2);
}

uint64_t ConversationControlsButton.localizedName.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = v0 + OBJC_IVAR___CNKConversationControlsButton_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v1);
  if (result)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ConversationControlsButton()
{
  return objc_opt_self();
}

void ConversationControlsButton.localizedName.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsButton.localizedName.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    ConversationControlsButton.localizedName.didset();
  OUTLINED_FUNCTION_0();
}

id ConversationControlsButton.init(frame:provider:)(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  char *v4;
  objc_super v6;

  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_18_1(OBJC_IVAR___CNKConversationControlsButton_delegate);
  v4 = &v1[OBJC_IVAR___CNKConversationControlsButton_localizedName];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR___CNKConversationControlsButton_provider] = a1;
  v6.receiver = v1;
  v6.super_class = v3;
  return OUTLINED_FUNCTION_0_74(&v6, sel_initWithFrame_);
}

uint64_t type metadata accessor for SystemApertureButton()
{
  return objc_opt_self();
}

id ConversationControlsButton.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ConversationControlsButton.init(coder:)()
{
  char *v0;
  char *v1;

  OUTLINED_FUNCTION_18_1(OBJC_IVAR___CNKConversationControlsButton_delegate);
  v1 = &v0[OBJC_IVAR___CNKConversationControlsButton_localizedName];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  OUTLINED_FUNCTION_6_45();
  __break(1u);
}

uint64_t ConversationControlsButton.description.getter()
{
  return ConversationControlsButton.description.getter(&demangling cache variable for type metadata for ConversationControlsButton.Type);
}

Swift::Void __swiftcall ConversationControlsButton.layoutSubviews()()
{
  ConversationControlsButton.layoutSubviews()();
}

Swift::Void __swiftcall ConversationControlsButton.didMoveToWindow()()
{
  ConversationControlsButton.didMoveToWindow()();
}

void ConversationControlsButton.contextMenuInteraction(_:willDisplayMenuFor:animator:)()
{
  ConversationControlsButton.contextMenuInteraction(_:willDisplayMenuFor:animator:)();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_12_40((uint64_t)v8.super_class, sel_contextMenuInteraction_willDisplayMenuForConfiguration_animator_, v1, v2, v3, v4, v5, v6, v8);
  OUTLINED_FUNCTION_7_61();
  OUTLINED_FUNCTION_20_38(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 448));
  OUTLINED_FUNCTION_49_0();
}

void ConversationControlsButton.contextMenuInteraction(_:willEndFor:animator:)()
{
  ConversationControlsButton.contextMenuInteraction(_:willEndFor:animator:)();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_12_40((uint64_t)v8.super_class, sel_contextMenuInteraction_willEndForConfiguration_animator_, v1, v2, v3, v4, v5, v6, v8);
  OUTLINED_FUNCTION_7_61();
  OUTLINED_FUNCTION_20_38(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 456));
  OUTLINED_FUNCTION_49_0();
}

void @objc ConversationControlsButton.contextMenuInteraction(_:willDisplayMenuFor:animator:)(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, id, uint64_t))
{
  id v10;
  id v11;
  id v12;

  v10 = a3;
  v11 = a4;
  swift_unknownObjectRetain();
  v12 = a1;
  a6(v10, v11, a5);

  swift_unknownObjectRelease();
}

UIContextMenuConfiguration_optional __swiftcall ConversationControlsButton.contextMenuInteraction(_:configurationForMenuAtLocation:)(UIContextMenuInteraction _, CGPoint configurationForMenuAtLocation)
{
  objc_class *v2;
  Swift::Bool v3;
  UIContextMenuConfiguration_optional result;

  v2 = (objc_class *)ConversationControlsButton.contextMenuInteraction(_:configurationForMenuAtLocation:)((uint64_t)_.super.isa, &OBJC_IVAR___CNKConversationControlsButton_provider);
  result.value.super.isa = v2;
  result.is_nil = v3;
  return result;
}

uint64_t ConversationControlsButton._contextMenuInteraction(_:styleForMenuWith:)(uint64_t a1, uint64_t a2)
{
  return ConversationControlsButton._contextMenuInteraction(_:styleForMenuWith:)(a1, a2, &OBJC_IVAR___CNKConversationControlsButton_provider, (uint64_t)&protocol witness table for ConversationControlsButton);
}

CGPoint __swiftcall ConversationControlsButton.menuAttachmentPoint(for:)(UIContextMenuConfiguration a1)
{
  double v1;
  double v2;
  CGPoint result;

  ConversationControlsButton.menuAttachmentPoint(for:)((uint64_t)a1.super.isa, &OBJC_IVAR___CNKConversationControlsButton_provider, (uint64_t)&protocol witness table for ConversationControlsButton);
  result.y = v2;
  result.x = v1;
  return result;
}

void ConversationControlsButton.init(frame:)()
{
  ConversationControlsButton.init(frame:)();
}

{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t ConversationControlsButton.cnkContentAlpha.getter()
{
  return OUTLINED_FUNCTION_3_59();
}

void ConversationControlsButton.cnkContentAlpha.setter()
{
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsButton.cnkContentAlpha.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = *(_QWORD *)(v1 + OBJC_IVAR___CNKConversationControlsButton_provider);
  OUTLINED_FUNCTION_3_59();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationControlsButton.shape.getter()
{
  return OUTLINED_FUNCTION_25_30(OBJC_IVAR___CNKConversationControlsButton_provider);
}

uint64_t (*protocol witness for Control.cnkContentAlpha.modify in conformance ConversationControlsButton(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___CNKConversationControlsButton_provider);
  *(_QWORD *)(a1 + 8) = v2;
  *(double *)a1 = (*(double (**)(void))(*(_QWORD *)v2 + 192))();
  return ConversationControlsButton.cnkContentAlpha.modify;
}

void SystemApertureButton.init(frame:provider:)(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  objc_super v4;

  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit20SystemApertureButton_provider] = a1;
  v4.receiver = v1;
  v4.super_class = v3;
  OUTLINED_FUNCTION_0_74(&v4, sel_initWithFrame_);
  OUTLINED_FUNCTION_11_44();
}

void SystemApertureButton.init(coder:)()
{
  OUTLINED_FUNCTION_6_45();
  __break(1u);
}

id @objc ConversationControlsButton.description.getter(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = a1;
  v5 = a3();
  v7 = v6;

  v8 = (void *)MEMORY[0x1C3B72E00](v5, v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t SystemApertureButton.description.getter()
{
  return ConversationControlsButton.description.getter(&demangling cache variable for type metadata for SystemApertureButton.Type);
}

uint64_t ConversationControlsButton.description.getter(uint64_t *a1)
{
  void *v1;
  objc_class *v3;
  Swift::String v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t ObjectType;
  objc_super v10;
  uint64_t v11;
  unint64_t v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;

  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  _StringGuts.grow(_:)(32);
  swift_bridgeObjectRelease();
  v11 = 60;
  v12 = 0xE100000000000000;
  ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v13._countAndFlagsBits = String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_22_2(v13);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 0x6E6F74747562203ALL;
  v4._object = (void *)0xEB00000000203D20;
  String.append(_:)(v4);
  v10.receiver = v1;
  v10.super_class = v3;
  v5 = objc_msgSendSuper2(&v10, sel_description, ObjectType);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v14._countAndFlagsBits = String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_22_2(v14);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 0x6469766F7270203BLL;
  v6._object = (void *)0xED0000203D207265;
  String.append(_:)(v6);
  type metadata accessor for ControlsButtonProvider();
  OUTLINED_FUNCTION_11_8();
  v15._countAndFlagsBits = String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_22_2(v15);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 62;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return v11;
}

Swift::Void __swiftcall SystemApertureButton.layoutSubviews()()
{
  ConversationControlsButton.layoutSubviews()();
}

void ConversationControlsButton.layoutSubviews()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_90_0((uint64_t)v8.super_class, sel_layoutSubviews, v1, v2, v3, v4, v5, v6, v8);
  OUTLINED_FUNCTION_7_61();
  (*(void (**)(void *))(v7 + 432))(v0);
  OUTLINED_FUNCTION_45_0();
}

Swift::Void __swiftcall SystemApertureButton.didMoveToWindow()()
{
  ConversationControlsButton.didMoveToWindow()();
}

void ConversationControlsButton.didMoveToWindow()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_90_0((uint64_t)v8.super_class, sel_didMoveToWindow, v1, v2, v3, v4, v5, v6, v8);
  OUTLINED_FUNCTION_7_61();
  (*(void (**)(void *))(v7 + 440))(v0);
  OUTLINED_FUNCTION_45_0();
}

void SystemApertureButton.contextMenuInteraction(_:willDisplayMenuFor:animator:)()
{
  ConversationControlsButton.contextMenuInteraction(_:willDisplayMenuFor:animator:)();
}

void SystemApertureButton.contextMenuInteraction(_:willEndFor:animator:)()
{
  ConversationControlsButton.contextMenuInteraction(_:willEndFor:animator:)();
}

UIContextMenuConfiguration_optional __swiftcall SystemApertureButton.contextMenuInteraction(_:configurationForMenuAtLocation:)(UIContextMenuInteraction _, CGPoint configurationForMenuAtLocation)
{
  objc_class *v2;
  Swift::Bool v3;
  UIContextMenuConfiguration_optional result;

  v2 = (objc_class *)ConversationControlsButton.contextMenuInteraction(_:configurationForMenuAtLocation:)((uint64_t)_.super.isa, &OBJC_IVAR____TtC15ConversationKit20SystemApertureButton_provider);
  result.value.super.isa = v2;
  result.is_nil = v3;
  return result;
}

uint64_t ConversationControlsButton.contextMenuInteraction(_:configurationForMenuAtLocation:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v2 + *a2) + 240);
  v4 = OUTLINED_FUNCTION_11_8();
  if (v3(v4))
  {
    v6 = v5;
    type metadata accessor for UIContextMenuConfiguration();
    v7 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v7 + 24) = v6;
    swift_unknownObjectWeakInit();
    v8 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v8 + 24) = &protocol witness table for ControlsButtonProvider;
    swift_unknownObjectWeakInit();
    v9 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v9 + 16) = v8;
    *(_QWORD *)(v9 + 24) = v7;
    swift_retain();
    swift_retain();
    v10 = UIContextMenuConfiguration.init(identifier:previewProvider:actionProvider:)(0);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    swift_release();
    return 0;
  }
  return v10;
}

uint64_t SystemApertureButton._contextMenuInteraction(_:styleForMenuWith:)(uint64_t a1, uint64_t a2)
{
  return ConversationControlsButton._contextMenuInteraction(_:styleForMenuWith:)(a1, a2, &OBJC_IVAR____TtC15ConversationKit20SystemApertureButton_provider, (uint64_t)&protocol witness table for SystemApertureButton);
}

uint64_t ConversationControlsButton._contextMenuInteraction(_:styleForMenuWith:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void *v4;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  id v13;
  uint64_t v14;
  objc_super v16;

  v9 = (objc_class *)OUTLINED_FUNCTION_15_6();
  if (!OUTLINED_FUNCTION_15_43(*a3))
    return 0;
  v11 = v10;
  ObjectType = swift_getObjectType();
  v16.receiver = v4;
  v16.super_class = v9;
  v13 = objc_msgSendSuper2(&v16, sel__contextMenuInteraction_styleForMenuWithConfiguration_, a1, a2);
  v14 = (*(uint64_t (**)(void *, uint64_t, id, uint64_t, uint64_t))(v11 + 24))(v4, a4, v13, ObjectType, v11);
  OUTLINED_FUNCTION_10();

  return v14;
}

CGPoint __swiftcall SystemApertureButton.menuAttachmentPoint(for:)(UIContextMenuConfiguration a1)
{
  double v1;
  double v2;
  CGPoint result;

  ConversationControlsButton.menuAttachmentPoint(for:)((uint64_t)a1.super.isa, &OBJC_IVAR____TtC15ConversationKit20SystemApertureButton_provider, (uint64_t)&protocol witness table for SystemApertureButton);
  result.y = v2;
  result.x = v1;
  return result;
}

id ConversationControlsButton.menuAttachmentPoint(for:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  void *v3;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  char v11;
  char v12;
  id result;
  objc_super v14;

  v7 = (objc_class *)OUTLINED_FUNCTION_15_6();
  if (!OUTLINED_FUNCTION_15_43(*a2)
    || (v9 = v8,
        ObjectType = swift_getObjectType(),
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, a3, a1, ObjectType, v9),
        v12 = v11,
        result = (id)OUTLINED_FUNCTION_10(),
        (v12 & 1) != 0))
  {
    v14.receiver = v3;
    v14.super_class = v7;
    return objc_msgSendSuper2(&v14, sel_menuAttachmentPointForConfiguration_, a1);
  }
  return result;
}

id ConversationControlsButton.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void SystemApertureButton.init(frame:)()
{
  ConversationControlsButton.init(frame:)();
}

id ConversationControlsButton.__deallocating_deinit()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return OUTLINED_FUNCTION_90_0((uint64_t)v8.super_class, sel_dealloc, v1, v2, v3, v4, v5, v6, v8);
}

uint64_t SystemApertureButton.cnkContentAlpha.getter()
{
  return OUTLINED_FUNCTION_3_59();
}

void SystemApertureButton.cnkContentAlpha.setter()
{
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_0();
}

void SystemApertureButton.cnkContentAlpha.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit20SystemApertureButton_provider);
  OUTLINED_FUNCTION_3_59();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void ConversationControlsButton.cnkContentAlpha.modify()
{
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_0();
}

uint64_t SystemApertureButton.shape.getter()
{
  return OUTLINED_FUNCTION_25_30(OBJC_IVAR____TtC15ConversationKit20SystemApertureButton_provider);
}

uint64_t (*protocol witness for Control.cnkContentAlpha.modify in conformance SystemApertureButton(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit20SystemApertureButton_provider);
  *(_QWORD *)(a1 + 8) = v2;
  *(double *)a1 = (*(double (**)(void))(*(_QWORD *)v2 + 192))();
  return ConversationControlsButton.cnkContentAlpha.modify;
}

unint64_t type metadata accessor for UIContextMenuConfiguration()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UIContextMenuConfiguration;
  if (!lazy cache variable for type metadata for UIContextMenuConfiguration)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIContextMenuConfiguration);
  }
  return result;
}

uint64_t sub_1BD180910()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in UIContextMenuConfiguration.init(provider:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in UIContextMenuConfiguration.init(provider:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BD180980(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ConversationControlsButton.cnkContentAlpha.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD1809A4()
{
  ConversationControlsButton.cnkContentAlpha.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1809C4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  SystemApertureButton.cnkContentAlpha.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD1809E8()
{
  SystemApertureButton.cnkContentAlpha.setter();
  OUTLINED_FUNCTION_0();
}

ValueMetadata *type metadata accessor for ConversationControlsButtonFactory()
{
  return &type metadata for ConversationControlsButtonFactory;
}

uint64_t dispatch thunk of ConversationControlsButtonDelegate.buttonDidUpdateLocalizedName(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for ConversationControlsButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsButton.__allocating_init(frame:provider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for SystemApertureButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureButton.__allocating_init(frame:provider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t AnsweringConditionTimer.__allocating_init(logger:timeToWaitForCall:callIsScreenable:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_26();
  v0 = swift_allocObject();
  AnsweringConditionTimer.init(logger:timeToWaitForCall:callIsScreenable:)();
  return v0;
}

_QWORD *AnsweringConditionTimer.init(logger:timeToWaitForCall:callIsScreenable:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_7_26();
  v6 = direct field offset for AnsweringConditionTimer.timer;
  type metadata accessor for AsyncCancellableTimer();
  v7 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)((char *)v1 + v6) = v7;
  *(_QWORD *)(v7 + 112) = 0;
  v1[4] = v4;
  v1[5] = v3;
  v8 = (char *)v1 + direct field offset for AnsweringConditionTimer.logger;
  v9 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, v5, v9);
  v1[2] = v2;
  v1[3] = v0;
  return v1;
}

uint64_t AnsweringConditionTimer.shouldAnswer@Sendable (_:)(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[6] = a1;
  v2[7] = v1;
  v3 = *v1;
  v2[8] = *v1;
  v4 = *(_QWORD *)(v3 + 80);
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = OUTLINED_FUNCTION_5_55();
  v2[12] = OUTLINED_FUNCTION_5_55();
  v2[13] = OUTLINED_FUNCTION_5_55();
  v2[14] = OUTLINED_FUNCTION_5_55();
  type metadata accessor for MainActor();
  v2[15] = OUTLINED_FUNCTION_54_2();
  v2[16] = OUTLINED_FUNCTION_34();
  v2[17] = v5;
  return OUTLINED_FUNCTION_2_8();
}

uint64_t AnsweringConditionTimer.shouldAnswer@Sendable (_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD, _QWORD);
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  NSObject *log;
  os_log_type_t type;
  uint64_t v39;

  if (((*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 56) + 16))(*(_QWORD *)(v0 + 48)) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 112);
    v2 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 48);
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 56) + 32))(v4);
    v7 = v6;
    *(_QWORD *)(v0 + 144) = direct field offset for AnsweringConditionTimer.logger;
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    *(_QWORD *)(v0 + 152) = v8;
    v8(v1, v4, v2);
    v9 = Logger.logObject.getter();
    v10 = static os_log_type_t.default.getter();
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(_QWORD *)(v0 + 112);
    if (v11)
    {
      type = v10;
      v13 = *(_QWORD *)(v0 + 104);
      v35 = *(_QWORD *)(v0 + 80);
      log = v9;
      v14 = *(_QWORD *)(v0 + 72);
      v15 = OUTLINED_FUNCTION_105();
      v36 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v15 = 136446466;
      v39 = v36;
      v16 = Duration.description.getter();
      *(_QWORD *)(v0 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      v8(v13, v12, v14);
      v18 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v18(v12, v14);
      v19 = dispatch thunk of CustomStringConvertible.description.getter();
      v21 = v20;
      v18(v13, v14);
      *(_QWORD *)(v0 + 40) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, log, type, "Should Answer timer started with timeToWait %{public}s for: %{public}s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    v32 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8);
    v32(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 72));

    *(_QWORD *)(v0 + 160) = v32;
    v33 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v33;
    *v33 = v0;
    v33[1] = AnsweringConditionTimer.shouldAnswer@Sendable (_:);
    return AsyncCancellableTimer.wait(with:)(v5, v7);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 80);
    v22 = *(_QWORD *)(v0 + 88);
    v24 = *(_QWORD *)(v0 + 72);
    v25 = *(_QWORD *)(v0 + 48);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v22, v25, v24);
    v26 = (void *)Logger.logObject.getter();
    v27 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_131_0(v27))
    {
      OUTLINED_FUNCTION_105();
      v39 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_15_44(4.8751e-34);
      OUTLINED_FUNCTION_6_46();
      OUTLINED_FUNCTION_13_46();
      OUTLINED_FUNCTION_9_47();
      v28 = OUTLINED_FUNCTION_3_60();
      *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_12_41(v28, v29, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_4_59(&dword_1BD004000, v30, v31, "Should Answer timer returning early as NO for: %{public}s because we can no longer screen the call.");
      OUTLINED_FUNCTION_14_22();
      OUTLINED_FUNCTION_60();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));

    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  swift_release();
  if ((static Task<>.isCancelled.getter() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 152))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 72));
    v1 = (void *)Logger.logObject.getter();
    v2 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_131_0(v2))
    {
      OUTLINED_FUNCTION_105();
      v9 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_15_44(4.8751e-34);
      OUTLINED_FUNCTION_6_46();
      OUTLINED_FUNCTION_13_46();
      OUTLINED_FUNCTION_9_47();
      v3 = OUTLINED_FUNCTION_3_60();
      *(_QWORD *)(v0 + 24) = OUTLINED_FUNCTION_12_41(v3, v4, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_4_59(&dword_1BD004000, v5, v6, "Should Answer timer canceled for: %{public}s");
      OUTLINED_FUNCTION_14_22();
      OUTLINED_FUNCTION_60();
    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 160))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));

    v7 = 0;
  }
  else
  {
    v7 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 56) + 16))(*(_QWORD *)(v0 + 48));
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v7 & 1);
}

{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t AnsweringConditionTimer.cancel()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  type metadata accessor for MainActor();
  v1[3] = OUTLINED_FUNCTION_54_2();
  v1[4] = OUTLINED_FUNCTION_34();
  v1[5] = v2;
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + direct field offset for AnsweringConditionTimer.timer);
  return swift_task_switch();
}

{
  AsyncCancellableTimer.cancel()();
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnsweringConditionTimer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  v1 = v0 + direct field offset for AnsweringConditionTimer.logger;
  v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t AnsweringConditionTimer.__deallocating_deinit()
{
  AnsweringConditionTimer.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata completion function for AnsweringConditionTimer()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for AnsweringConditionTimer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnsweringConditionTimer);
}

uint64_t method lookup function for AnsweringConditionTimer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnsweringConditionTimer.__allocating_init(logger:timeToWaitForCall:callIsScreenable:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void RecentsCollectionViewCell.messageTapHandler.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper))
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v3 = (void *)dispatch thunk of RecentsListItemViewHelper.messageIndicatorView.getter();
    OUTLINED_FUNCTION_43();
    if (v3)
    {
      dispatch thunk of MessageIndicatorView.tapHandler.setter();
      OUTLINED_FUNCTION_15_9(v3);
    }
    else
    {
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a1);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t key path setter for RecentsCollectionViewCell.avatarViewController : RecentsCollectionViewCell(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x88);
  v4 = *a1;
  return v3(v2);
}

void RecentsCollectionViewCell.avatarViewController.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  RecentsCollectionViewCell.avatarViewController.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void RecentsCollectionViewCell.avatarViewController.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    RecentsCollectionViewCell.avatarViewController.setter(v2);

  }
  else
  {
    RecentsCollectionViewCell.avatarViewController.setter(*a1);
    OUTLINED_FUNCTION_36();
  }
}

uint64_t key path setter for RecentsCollectionViewCell.joinButton : RecentsCollectionViewCell(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA0);
  v4 = *a1;
  return v3(v2);
}

void RecentsCollectionViewCell.joinButton.setter(void *a1)
{
  void **v1;
  void *v3;

  OUTLINED_FUNCTION_0_8();
  v3 = *v1;
  *v1 = a1;

}

void RecentsCollectionViewCell.joinButton.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for RecentsCollectionViewCell.doubleTapHandler : RecentsCollectionViewCell@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD *);

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xB8))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed UITapGestureRecognizer) -> ();
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

uint64_t key path setter for RecentsCollectionViewCell.doubleTapHandler : RecentsCollectionViewCell(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t (*v7)(void (*)(uint64_t), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed UITapGestureRecognizer) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(void (*)(uint64_t), uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC0);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return v7(v6, v5);
}

uint64_t RecentsCollectionViewCell.doubleTapHandler.getter()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*v0);
  return v1;
}

uint64_t RecentsCollectionViewCell.doubleTapHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  OUTLINED_FUNCTION_0_8();
  v5 = *v2;
  *v2 = a1;
  v2[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v5);
}

void RecentsCollectionViewCell.doubleTapHandler.modify()
{
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
}

id RecentsCollectionViewCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void RecentsCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void RecentsCollectionViewCell.init(coder:)()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_joinButton] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_doubleTapHandler];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Bool __swiftcall RecentsCollectionViewCell._disableRasterizeInAnimations()()
{
  return 1;
}

Swift::Void __swiftcall RecentsCollectionViewCell.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  Class isa;
  objc_super v3;

  isa = a1.value.super.isa;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for RecentsCollectionViewCell();
  objc_msgSendSuper2(&v3, sel_traitCollectionDidChange_, isa);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper])
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    dispatch thunk of RecentsListItemViewHelper.updateForParentTraitCollectionDidChange()();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_36();
  }
  else
  {
    __break(1u);
  }
}

id RecentsCollectionViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecentsCollectionViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void RecentsCollectionViewCell.messageTapHandler.getter()
{
  uint64_t v0;
  void *v1;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit25RecentsCollectionViewCell_listItemViewHelper))
  {
    swift_retain();
    v1 = (void *)dispatch thunk of RecentsListItemViewHelper.messageIndicatorView.getter();
    swift_release();
    if (v1)
    {
      dispatch thunk of MessageIndicatorView.tapHandler.getter();

    }
    OUTLINED_FUNCTION_65_2();
  }
  else
  {
    __break(1u);
  }
}

void key path getter for RecentsCollectionViewCell.messageTapHandler : RecentsCollectionViewCell(void (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();

  RecentsCollectionViewCell.messageTapHandler.getter();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (void (*)())v2;
}

void key path setter for RecentsCollectionViewCell.messageTapHandler : RecentsCollectionViewCell(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
  }
  else
  {
    v4 = 0;
  }
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  RecentsCollectionViewCell.messageTapHandler.setter((uint64_t)v4);
}

void RecentsCollectionViewCell.messageTapHandler.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  RecentsCollectionViewCell.messageTapHandler.getter();
  *a1 = v3;
  a1[1] = v4;
  OUTLINED_FUNCTION_0();
}

void RecentsCollectionViewCell.messageTapHandler.modify(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_65_2();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v2);
    OUTLINED_FUNCTION_14_48();
    v3 = OUTLINED_FUNCTION_65_2();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
  }
  else
  {
    OUTLINED_FUNCTION_14_48();
  }
}

void (*RecentsCollectionViewCell.didDoubleTap(gesture:)(uint64_t a1))(uint64_t)
{
  _QWORD *v1;
  void (*result)(uint64_t);
  uint64_t v4;

  result = (void (*)(uint64_t))(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xB8))();
  if (result)
  {
    v4 = (uint64_t)result;
    result(a1);
    return (void (*)(uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
  }
  return result;
}

Swift::Void __swiftcall RecentsCollectionViewCell.configureSelectedBackgroundView()()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;

  v1 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_bounds);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, v3, v5, v7, v9);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.607843137, 0.607843137, 0.607843137, 0.72);
  objc_msgSend(v11, sel_setBackgroundColor_, v10);

  objc_msgSend(v11, sel__setDrawsAsBackdropOverlayWithBlendMode_, 3);
  objc_msgSend(v0, sel_setSelectedBackgroundView_, v11);

}

Swift::Void __swiftcall RecentsCollectionViewCell.configureDetailAccessory()()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
  objc_msgSend(v0, sel_addSubview_, v1);

  objc_msgSend(v0, sel__setPopupMenuButton_, 0);
  v2 = (void *)OUTLINED_FUNCTION_12_42(*v0);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_removeFromSuperview);
    OUTLINED_FUNCTION_15_9(v3);
  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

void sub_1BD181F04(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x80))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD181F44(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = OUTLINED_FUNCTION_12_42(**a1);
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for RecentsCollectionViewCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecentsCollectionViewCell.avatarViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of RecentsCollectionViewCell.avatarViewController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of RecentsCollectionViewCell.avatarViewController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of RecentsCollectionViewCell.joinButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of RecentsCollectionViewCell.joinButton.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCell.joinButton.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCell.detailAccessoryButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCell.doubleTapHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of RecentsCollectionViewCell.doubleTapHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of RecentsCollectionViewCell.doubleTapHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t sub_1BD1820B0()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed UITapGestureRecognizer) -> (@out ())(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *);
  uint64_t v3;

  v2 = *(void (**)(uint64_t *))(v1 + 16);
  v3 = a1;
  v2(&v3);
  OUTLINED_FUNCTION_36();
}

void partial apply for thunk for @escaping @callee_guaranteed (@guaranteed UITapGestureRecognizer) -> ()(_QWORD *a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD))(v1 + 16))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t outlined init with take of RecentOngoingConversationMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecentOngoingConversationMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void CGPoint.rounded(_:toScaleOf:)()
{
  id v0;
  id v1;
  double v2;

  OUTLINED_FUNCTION_3_8();
  v1 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v1, sel_displayScale);
  OUTLINED_FUNCTION_2_66(v2);
  OUTLINED_FUNCTION_1_60();

  OUTLINED_FUNCTION_0_75();
}

{
  id v0;
  double v1;

  OUTLINED_FUNCTION_3_8();
  objc_msgSend(v0, sel_displayScale);
  OUTLINED_FUNCTION_2_66(v1);
  OUTLINED_FUNCTION_1_60();
  OUTLINED_FUNCTION_0_75();
}

void CGPoint.rounded(_:toScale:)(uint64_t a1, double a2, double a3, double a4)
{
  CGFloat.rounded(_:toScale:)(a1, a2, a3);
  CGFloat.rounded(_:toScale:)(a1, a2, a4);
  OUTLINED_FUNCTION_0_75();
}

double CGPoint.rounded(_:toScaleOf:)(uint64_t a1, void *a2, double a3, double a4)
{
  swift_getObjectType();
  return specialized CGPoint.rounded(_:toScaleOf:)(a1, a2, a3, a4);
}

double specialized CGPoint.rounded(_:toScaleOf:)(uint64_t a1, id a2, double a3, double a4)
{
  id v7;
  double v8;
  double v9;
  double v10;

  v7 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v7, sel_displayScale);
  v9 = v8;
  v10 = CGFloat.rounded(_:toScale:)(a1, v8, a3);
  CGFloat.rounded(_:toScale:)(a1, v9, a4);

  return v10;
}

uint64_t IDSCapabilitiesChecker.Capabilities.init(faceTimeAudio:faceTimeVideo:faceTimeMultiway:videoMessaging:)(char a1, char a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = 256;
  if ((a1 & 1) == 0)
    v4 = 0;
  v5 = 0x10000;
  if ((a2 & 1) == 0)
    v5 = 0;
  v6 = v5 | v4;
  v7 = 0x1000000;
  if ((a3 & 1) == 0)
    v7 = 0;
  v8 = 0x10000000000;
  if ((a4 & 1) == 0)
    v8 = 0;
  return v6 | v7 | v8;
}

uint64_t IDSCapabilitiesChecker.Capabilities.faceTimeAudio.getter(unint64_t a1)
{
  if (a1 == 2)
    return 0;
  else
    return (a1 >> 8) & 1;
}

uint64_t IDSCapabilitiesChecker.Capabilities.faceTimeVideo.getter(unint64_t a1)
{
  if (a1 == 2)
    return 0;
  else
    return (a1 >> 16) & 1;
}

uint64_t IDSCapabilitiesChecker.Capabilities.faceTimeMultiway.getter(unint64_t a1)
{
  if (a1 == 2)
    return 0;
  else
    return (a1 >> 24) & 1;
}

uint64_t IDSCapabilitiesChecker.Capabilities.videoMessaging.getter(unint64_t a1)
{
  if (a1 == 2)
    return 0;
  else
    return (a1 >> 40) & 1;
}

BOOL static IDSCapabilitiesChecker.Capabilities.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  _BOOL8 v2;
  int8x16_t v4;
  int8x16_t v5;

  v2 = a2 == 2 && a1 == 2;
  if (a1 != 2 && a2 != 2)
  {
    v4 = (int8x16_t)vdupq_n_s64(a1);
    v5 = (int8x16_t)vdupq_n_s64(a2);
    *(int16x4_t *)v4.i8 = vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8(veorq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v5, (int8x16_t)xmmword_1BD64CB30)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v5, (int8x16_t)xmmword_1BD64CB40))), (int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v4, (int8x16_t)xmmword_1BD64CB30)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v4, (int8x16_t)xmmword_1BD64CB40)))))), 0xFuLL));
    v4.i16[0] = vminv_u16(*(uint16x4_t *)v4.i8);
    return (((a1 & 1) == 0) ^ a2) & v4.i32[0] & (((a1 & 0x100) == 0) ^ (a2 >> 8) & 1);
  }
  return v2;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance IDSCapabilitiesChecker.Capabilities(unsigned int *a1, unsigned int *a2)
{
  return static IDSCapabilitiesChecker.Capabilities.== infix(_:_:)(*a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32), *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32));
}

uint64_t key path setter for IDSCapabilitiesChecker.participantCapabilities : IDSCapabilitiesChecker(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t IDSCapabilitiesChecker.participantCapabilities.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_bridgeObjectRetain();
}

uint64_t key path setter for IDSCapabilitiesChecker.delegate : IDSCapabilitiesChecker(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 176);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t IDSCapabilitiesChecker.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v0 + 32);
}

uint64_t IDSCapabilitiesChecker.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 40) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*IDSCapabilitiesChecker.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_2_0();
  v4 = MEMORY[0x1C3B752C0](v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v3[3] = v4;
  v3[4] = v5;
  return IDSCapabilitiesChecker.delegate.modify;
}

void IDSCapabilitiesChecker.delegate.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 40) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

void IDSCapabilitiesChecker.__allocating_init(participants:lookupManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_15();
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  OUTLINED_FUNCTION_33_22();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_61(v4, v5, v6);
  OUTLINED_FUNCTION_5_56();
  __swift_destroy_boxed_opaque_existential_1(a2);
  OUTLINED_FUNCTION_91();
}

void IDSCapabilitiesChecker.init(participants:lookupManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  OUTLINED_FUNCTION_33_22();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_61(v4, v5, v6);
  OUTLINED_FUNCTION_5_56();
  __swift_destroy_boxed_opaque_existential_1(a2);
  OUTLINED_FUNCTION_91();
}

uint64_t IDSCapabilitiesChecker.capabilitiesForHandle(_:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = (id)TUCopyIDSCanonicalAddressForHandle();
  if (!v1)
    return 3;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v5 = v4;

  OUTLINED_FUNCTION_2_0();
  if (!*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 3;
  }
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_5_0();
  specialized __RawDictionaryStorage.find<A>(_:)(v3, v5);
  if ((v6 & 1) == 0)
  {
    OUTLINED_FUNCTION_3_3();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_10_51();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_27();
  return v3;
}

Swift::Void __swiftcall IDSCapabilitiesChecker.update(withParticipants:)(Swift::OpaquePointer withParticipants)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  void (**v38)(void);
  uint64_t v39;
  uint64_t *v40;
  void (**v41)(void);
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  BOOL v66;
  unint64_t v67;
  char v68;
  BOOL v69;
  unint64_t v70;
  char v71;
  _QWORD *v72;
  char v73;
  char v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  __int16 v108;
  char v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BOOL8 v113;
  Swift::Int v114;
  unint64_t v115;
  char v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t ObjectType;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  void (**v134)(void);
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  void *rawValue;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  void (**v163)(void);
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD v170[3];
  _QWORD *v171;
  void (**v172)(void);

  v156 = OUTLINED_FUNCTION_33_0();
  v155 = *(_QWORD *)(v156 - 8);
  MEMORY[0x1E0C80A78](v156);
  v164 = (uint64_t *)((char *)&v152 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for Participant(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77_1();
  isUniquelyReferenced_nonNull_native = type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination();
  v162 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
  MEMORY[0x1E0C80A78](isUniquelyReferenced_nonNull_native);
  OUTLINED_FUNCTION_79();
  v166 = v7 - v8;
  v10 = MEMORY[0x1E0C80A78](v9);
  v158 = (uint64_t *)((char *)&v152 - v11);
  v12 = MEMORY[0x1E0C80A78](v10);
  v154 = (uint64_t)&v152 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v152 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IDSCapabilitiesChecker.ParticipantDestination?);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_79();
  v19 = v17 - v18;
  MEMORY[0x1E0C80A78](v20);
  v161 = (uint64_t *)((char *)&v152 - v21);
  v22 = (_QWORD *)*((_QWORD *)withParticipants._rawValue + 2);
  v168 = isUniquelyReferenced_nonNull_native;
  rawValue = withParticipants._rawValue;
  v159 = v22;
  if (!v22)
  {
    v25 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    v46 = (unint64_t)v165;
    v165[6] = v25;
    swift_bridgeObjectRelease();
    if (v22)
    {
      OUTLINED_FUNCTION_37_3();
      v163 = (void (**)(void))((char *)withParticipants._rawValue + v47);
      v164 = (_QWORD *)v4;
      v158 = (_QWORD *)(v46 + 56);
      v160 = *(_QWORD *)(v5 + 72);
      OUTLINED_FUNCTION_5_0();
      v48 = 0;
      v49 = MEMORY[0x1E0DEE9E0];
      v50 = (uint64_t)v161;
      do
      {
        v167 = (_QWORD *)v49;
        v51 = *(_QWORD *)(v46 + 48);
        v52 = *(_QWORD *)(v51 + 16);
        if (v52)
        {
          v53 = v162;
          OUTLINED_FUNCTION_37_3();
          v55 = v51 + v54;
          OUTLINED_FUNCTION_124();
          v56 = *(_QWORD *)(v53 + 72);
          while (1)
          {
            outlined init with copy of Participant(v55, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination);
            if ((static UUID.== infix(_:_:)() & 1) != 0)
              break;
            outlined destroy of ConversationControlsAction((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination);
            v55 += v56;
            if (!--v52)
            {
              v57 = 1;
              v50 = (uint64_t)v161;
              goto LABEL_26;
            }
          }
          v50 = (uint64_t)v161;
          outlined init with take of IDSCapabilitiesChecker.ParticipantDestination((uint64_t)v15, (uint64_t)v161);
          v57 = 0;
        }
        else
        {
          OUTLINED_FUNCTION_124();
          v57 = 1;
        }
LABEL_26:
        isUniquelyReferenced_nonNull_native = v168;
        __swift_storeEnumTagSinglePayload(v50, v57, 1, v168);
        OUTLINED_FUNCTION_13_3();
        if (__swift_getEnumTagSinglePayload(v50, 1, isUniquelyReferenced_nonNull_native) == 1)
        {
          outlined destroy of IDSCapabilitiesChecker.ParticipantDestination?(v50);
          v49 = (uint64_t)v167;
        }
        else
        {
          v58 = (uint64_t *)(v50 + *(int *)(isUniquelyReferenced_nonNull_native + 20));
          v59 = *v58;
          v60 = v58[1];
          swift_bridgeObjectRetain();
          outlined destroy of ConversationControlsAction(v50, (uint64_t (*)(_QWORD))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination);
          v61 = *(_QWORD *)(v46 + 80);
          v62 = *(_QWORD *)(v46 + 88);
          __swift_project_boxed_opaque_existential_1(v158, v61);
          v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 16))(v59, v60, v61, v62);
          OUTLINED_FUNCTION_2_1();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (v63 == 3)
          {
            OUTLINED_FUNCTION_21_35();
            OUTLINED_FUNCTION_32_23();
            if (v66)
              goto LABEL_91;
            v67 = v64;
            v68 = v65;
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, IDSCapabilitiesChecker.Capabilities>);
            v69 = OUTLINED_FUNCTION_12_43();
            isUniquelyReferenced_nonNull_native = v168;
            if (v69)
            {
              v70 = OUTLINED_FUNCTION_31_34();
              if ((v68 & 1) != (v71 & 1))
                goto LABEL_97;
              v67 = v70;
            }
            v49 = v170[0];
            if ((v68 & 1) != 0)
            {
              OUTLINED_FUNCTION_11_45();
              v50 = (uint64_t)v161;
            }
            else
            {
              OUTLINED_FUNCTION_4_60(v170[0] + 8 * (v67 >> 6));
              OUTLINED_FUNCTION_9_48(v77 + v78 * v67);
              OUTLINED_FUNCTION_11_45();
              v79 = *(_QWORD *)(v49 + 16);
              v66 = __OFADD__(v79, 1);
              v80 = v79 + 1;
              v50 = (uint64_t)v161;
              if (v66)
                goto LABEL_93;
              *(_QWORD *)(v49 + 16) = v80;
            }
            OUTLINED_FUNCTION_36_2();
          }
          else
          {
            OUTLINED_FUNCTION_21_35();
            OUTLINED_FUNCTION_32_23();
            if (v66)
              goto LABEL_92;
            v46 = (unint64_t)v72;
            v74 = v73;
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, IDSCapabilitiesChecker.Capabilities>);
            if (OUTLINED_FUNCTION_12_43())
            {
              v75 = OUTLINED_FUNCTION_31_34();
              if ((v74 & 1) != (v76 & 1))
                goto LABEL_97;
              v46 = v75;
            }
            v49 = v170[0];
            isUniquelyReferenced_nonNull_native = (v63 & 0xFFFFFFFFFFFFuLL) >> 32;
            if ((v74 & 1) != 0)
            {
              OUTLINED_FUNCTION_17_37();
            }
            else
            {
              OUTLINED_FUNCTION_4_60(v170[0] + 8 * (v46 >> 6));
              OUTLINED_FUNCTION_9_48(v81 + v82 * v46);
              OUTLINED_FUNCTION_17_37();
              v83 = *(_QWORD *)(v49 + 16);
              v66 = __OFADD__(v83, 1);
              v84 = v83 + 1;
              if (v66)
                goto LABEL_94;
              *(_QWORD *)(v49 + 16) = v84;
            }
            OUTLINED_FUNCTION_36_2();
            v46 = (unint64_t)v165;
            isUniquelyReferenced_nonNull_native = v168;
            v50 = (uint64_t)v161;
          }
        }
        v48 = (_QWORD *)((char *)v48 + 1);
      }
      while (v48 != v159);
      swift_bridgeObjectRelease();
    }
    else
    {
      v49 = MEMORY[0x1E0DEE9E0];
    }
    v85 = *(_QWORD *)(v46 + 48);
    v86 = *(_QWORD *)(v85 + 16);
    v87 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v167 = (_QWORD *)v49;
    if (v86)
    {
      v170[0] = MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_124();
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      OUTLINED_FUNCTION_7_62();
      v89 = v85 + v88;
      v91 = *(_QWORD *)(v90 + 72);
      v87 = (_QWORD *)v170[0];
      do
      {
        v92 = v87;
        v93 = v166;
        outlined init with copy of Participant(v89, v166, (uint64_t (*)(_QWORD))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination);
        v94 = (uint64_t *)(v93 + *(int *)(isUniquelyReferenced_nonNull_native + 20));
        v96 = *v94;
        v95 = v94[1];
        swift_bridgeObjectRetain();
        v97 = v93;
        v87 = v92;
        outlined destroy of ConversationControlsAction(v97, (uint64_t (*)(_QWORD))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_15_45();
          v87 = (_QWORD *)v170[0];
        }
        v98 = v87[2];
        if (v98 >= v87[3] >> 1)
        {
          OUTLINED_FUNCTION_15_45();
          v87 = (_QWORD *)v170[0];
        }
        v87[2] = v98 + 1;
        v99 = &v87[2 * v98];
        v99[4] = v96;
        v99[5] = v95;
        v89 += v91;
        --v86;
        isUniquelyReferenced_nonNull_native = v168;
      }
      while (v86);
      OUTLINED_FUNCTION_13_3();
      v46 = (unint64_t)v165;
      v49 = (uint64_t)v167;
    }
    v100 = v87[2];
    if (v100)
    {
      v164 = (_QWORD *)(v46 + 56);
      OUTLINED_FUNCTION_5_0();
      v101 = MEMORY[0x1E0DEE9E0];
      v102 = v87 + 5;
      v163 = (void (**)(void))v87;
      while (1)
      {
        v104 = *(v102 - 1);
        v103 = *v102;
        v105 = *(_QWORD *)(v46 + 80);
        isUniquelyReferenced_nonNull_native = *(_QWORD *)(v46 + 88);
        __swift_project_boxed_opaque_existential_1(v164, v105);
        v106 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 16);
        OUTLINED_FUNCTION_33_1();
        v107 = v106(v104, v103, v105, isUniquelyReferenced_nonNull_native);
        v108 = v107 == 3 ? 0 : WORD2(v107);
        v109 = swift_isUniquelyReferenced_nonNull_native();
        v170[0] = v101;
        v110 = specialized __RawDictionaryStorage.find<A>(_:)(v104, v103);
        v112 = *(_QWORD *)(v101 + 16);
        v113 = (v111 & 1) == 0;
        v114 = v112 + v113;
        if (__OFADD__(v112, v113))
          break;
        v46 = v110;
        isUniquelyReferenced_nonNull_native = v111;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, IDSCapabilitiesChecker.Capabilities>);
        if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v109, v114))
        {
          v115 = OUTLINED_FUNCTION_28_32(v104);
          if ((isUniquelyReferenced_nonNull_native & 1) != (v116 & 1))
            goto LABEL_97;
          v46 = v115;
        }
        v101 = v170[0];
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          OUTLINED_FUNCTION_16_37(v108);
        }
        else
        {
          *(_QWORD *)(v170[0] + 8 * (v46 >> 6) + 64) |= 1 << v46;
          v117 = (uint64_t *)(*(_QWORD *)(v101 + 48) + 16 * v46);
          *v117 = v104;
          v117[1] = v103;
          OUTLINED_FUNCTION_16_37(v108);
          v118 = *(_QWORD *)(v101 + 16);
          v66 = __OFADD__(v118, 1);
          v119 = v118 + 1;
          if (v66)
            goto LABEL_90;
          *(_QWORD *)(v101 + 16) = v119;
          OUTLINED_FUNCTION_33_1();
        }
        v102 += 2;
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_36_2();
        --v100;
        v46 = (unint64_t)v165;
        if (!v100)
        {
          OUTLINED_FUNCTION_27();
          v49 = (uint64_t)v167;
          isUniquelyReferenced_nonNull_native = v168;
          goto LABEL_74;
        }
      }
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
    }
    else
    {
      v101 = MEMORY[0x1E0DEE9E0];
LABEL_74:
      OUTLINED_FUNCTION_27();
      v120 = OUTLINED_FUNCTION_34_19();
      v121 = specialized static Dictionary<>.== infix(_:_:)(v49, v120);
      OUTLINED_FUNCTION_27();
      if ((v121 & 1) != 0)
      {
        OUTLINED_FUNCTION_13_3();
LABEL_80:
        swift_bridgeObjectRelease();
        v132 = (_QWORD *)(v46 + 56);
        outlined init with copy of IDSLookupManager(v46 + 56, (uint64_t)v170);
        v133 = v171;
        v134 = v172;
        v135 = __swift_project_boxed_opaque_existential_1(v170, (uint64_t)v171);
        v136 = *(_QWORD *)(v46 + 48);
        v137 = *(_QWORD *)(v136 + 16);
        v138 = MEMORY[0x1E0DEE9D8];
        if (v137)
        {
          v161 = v135;
          v163 = v134;
          v164 = v133;
          v167 = v132;
          v169 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          OUTLINED_FUNCTION_7_62();
          v140 = v136 + v139;
          v142 = *(_QWORD *)(v141 + 72);
          v138 = v169;
          do
          {
            v143 = v166;
            outlined init with copy of Participant(v140, v166, (uint64_t (*)(_QWORD))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination);
            v144 = (uint64_t *)(v143 + *(int *)(isUniquelyReferenced_nonNull_native + 20));
            v146 = *v144;
            v145 = v144[1];
            swift_bridgeObjectRetain();
            outlined destroy of ConversationControlsAction(v143, (uint64_t (*)(_QWORD))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_15_45();
              v138 = v169;
            }
            v147 = *(_QWORD *)(v138 + 16);
            if (v147 >= *(_QWORD *)(v138 + 24) >> 1)
            {
              OUTLINED_FUNCTION_15_45();
              v138 = v169;
            }
            *(_QWORD *)(v138 + 16) = v147 + 1;
            v148 = v138 + 16 * v147;
            *(_QWORD *)(v148 + 32) = v146;
            *(_QWORD *)(v148 + 40) = v145;
            v140 += v142;
            --v137;
            isUniquelyReferenced_nonNull_native = v168;
          }
          while (v137);
          swift_bridgeObjectRelease();
          v132 = v167;
          v134 = v163;
        }
        specialized Set.init<A>(_:)(v138);
        v134[1]();
        OUTLINED_FUNCTION_2_1();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v170);
        v149 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
        v150 = *MEMORY[0x1E0DBD648];
        v151 = v165;
        __swift_project_boxed_opaque_existential_1(v132, v165[10]);
        objc_msgSend(v149, sel_addObserver_selector_name_object_, v151, sel_handleLookupManagerDidChangeNotification_, v150, _bridgeAnythingToObjectiveC<A>(_:)());

        swift_unknownObjectRelease();
        return;
      }
      OUTLINED_FUNCTION_2_0();
      *(_QWORD *)(v46 + 16) = v49;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_2_0();
      *(_QWORD *)(v46 + 24) = v101;
      v122 = swift_bridgeObjectRelease();
      if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v46 + 168))(v122))
      {
        v124 = v123;
        ObjectType = swift_getObjectType();
        OUTLINED_FUNCTION_34_19();
        specialized Set.init<A>(_:)();
        v126 = ObjectType;
        isUniquelyReferenced_nonNull_native = v168;
        (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v124 + 8))(v46, v127, v126, v124);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_79:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v128 = OUTLINED_FUNCTION_15();
        *(_OWORD *)(v128 + 16) = xmmword_1BD6441D0;
        v170[0] = OUTLINED_FUNCTION_34_19();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UUID : IDSCapabilitiesChecker.Capabilities]);
        v129 = String.init<A>(reflecting:)();
        v131 = v130;
        *(_QWORD *)(v128 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v128 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v128 + 32) = v129;
        *(_QWORD *)(v128 + 40) = v131;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        goto LABEL_80;
      }
    }
    swift_once();
    goto LABEL_79;
  }
  OUTLINED_FUNCTION_37_3();
  v24 = (char *)withParticipants._rawValue + v23;
  v152 = v5;
  v157 = *(_QWORD *)(v5 + 72);
  OUTLINED_FUNCTION_5_0();
  v25 = MEMORY[0x1E0DEE9D8];
  v26 = v22;
  v160 = v19;
  while (1)
  {
    v167 = v26;
    outlined init with copy of Participant((uint64_t)v24, v1, type metadata accessor for Participant);
    v27 = *(void **)(v1 + *(int *)(v4 + 28));
    if (!v27)
    {
      v39 = 1;
      goto LABEL_7;
    }
    v28 = v25;
    v29 = v4;
    v30 = v1;
    v31 = v1 + *(int *)(v4 + 20);
    v32 = v155;
    v33 = v156;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v155 + 16))(v164, v31, v156);
    v34 = v27;
    v35 = (id)TUCopyIDSCanonicalAddressForHandle();
    if (!v35)
      break;
    v36 = v35;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v163 = v38;

    v19 = v160;
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v32 + 32))(v160, v164, v33);
    v39 = 0;
    isUniquelyReferenced_nonNull_native = v168;
    v40 = (uint64_t *)(v19 + *(int *)(v168 + 20));
    v41 = v163;
    *v40 = v37;
    v40[1] = (uint64_t)v41;
    v4 = v29;
    v1 = v30;
    v25 = v28;
LABEL_7:
    __swift_storeEnumTagSinglePayload(v19, v39, 1, isUniquelyReferenced_nonNull_native);
    outlined destroy of ConversationControlsAction(v1, type metadata accessor for Participant);
    if (__swift_getEnumTagSinglePayload(v19, 1, isUniquelyReferenced_nonNull_native) == 1)
    {
      outlined destroy of IDSCapabilitiesChecker.ParticipantDestination?(v19);
    }
    else
    {
      v42 = v154;
      outlined init with take of IDSCapabilitiesChecker.ParticipantDestination(v19, v154);
      outlined init with take of IDSCapabilitiesChecker.ParticipantDestination(v42, (uint64_t)v158);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v25 = OUTLINED_FUNCTION_29_28();
      v43 = *(_QWORD *)(v25 + 16);
      if (v43 >= *(_QWORD *)(v25 + 24) >> 1)
        v25 = OUTLINED_FUNCTION_29_28();
      *(_QWORD *)(v25 + 16) = v43 + 1;
      OUTLINED_FUNCTION_7_62();
      outlined init with take of IDSCapabilitiesChecker.ParticipantDestination((uint64_t)v158, v25 + v44 + *(_QWORD *)(v45 + 72) * v43);
      v19 = v160;
    }
    v24 += v157;
    v26 = (_QWORD *)((char *)v167 - 1);
    if (v167 == (_QWORD *)1)
    {
      withParticipants._rawValue = rawValue;
      OUTLINED_FUNCTION_27();
      v22 = v159;
      v5 = v152;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_97:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

uint64_t IDSCapabilitiesChecker.handleLookupManagerDidChangeNotification(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, unint64_t, uint64_t);
  unint64_t v26;
  uint64_t v27;
  char v28;
  int8x16_t v29;
  int8x16_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  _BOOL8 v37;
  Swift::Int v38;
  unint64_t v39;
  char v40;
  Swift::Bool v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  _BOOL8 v59;
  Swift::Int v60;
  unint64_t v61;
  char v62;
  unint64_t v63;
  char v64;
  char v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t ObjectType;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t result;
  void (*v82)(uint64_t, uint64_t);
  int isUniquelyReferenced_nonNull_native;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  int8x16_t v94;
  int8x16_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;

  v2 = v0;
  v3 = OUTLINED_FUNCTION_33_0();
  v4 = *(_QWORD **)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_79();
  v7 = v5 - v6;
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v82 - v10;
  MEMORY[0x1E0C80A78](v9);
  v93 = (uint64_t)&v82 - v12;
  v101 = type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination();
  v13 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  OUTLINED_FUNCTION_77_1();
  v104 = MEMORY[0x1E0DEE9E8];
  v14 = *(_QWORD *)(v2[6] + 16);
  if (v14)
  {
    v86 = v11;
    v87 = v7;
    v90 = v4;
    v99 = v2 + 7;
    v88 = v2 + 2;
    v89 = v2 + 3;
    OUTLINED_FUNCTION_37_3();
    v98 = v15 + v16;
    v17 = swift_bridgeObjectRetain();
    LODWORD(v92) = 0;
    v18 = 0;
    v85 = v14 - 1;
    v95 = (int8x16_t)xmmword_1BD64CB30;
    v94 = (int8x16_t)xmmword_1BD64CB40;
    v91 = v3;
    v96 = v17;
    v97 = v13;
    v100 = v14;
LABEL_3:
    v19 = v18;
    do
    {
      if (v19 >= *(_QWORD *)(v17 + 16))
      {
        __break(1u);
        goto LABEL_45;
      }
      outlined init with copy of Participant(v98 + *(_QWORD *)(v13 + 72) * v19, v1, (uint64_t (*)(_QWORD))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination);
      v20 = v2[10];
      v21 = v2[11];
      __swift_project_boxed_opaque_existential_1(v99, v20);
      v22 = (uint64_t *)(v1 + *(int *)(v101 + 20));
      v23 = *v22;
      v24 = v22[1];
      v25 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t))(v21 + 16);
      swift_bridgeObjectRetain();
      v26 = v25(v23, v24, v20, v21);
      v27 = v100;
      swift_bridgeObjectRelease();
      if (v26 != 3)
      {
        if (*(_QWORD *)(OUTLINED_FUNCTION_14_49() + 16)
          && (specialized __RawDictionaryStorage.find<A>(_:)(v1), (v28 & 1) != 0))
        {
          OUTLINED_FUNCTION_10_51();
          OUTLINED_FUNCTION_27();
          if (v26 == 2)
          {
            if (v20 != 2)
              goto LABEL_18;
          }
          else if (v20 == 2
                 || ((v26 & 1) == 0) == (v20 & 1)
                 || (v29 = (int8x16_t)vdupq_n_s64(v26),
                     v30 = (int8x16_t)vdupq_n_s64(v20),
                     *(int8x8_t *)v29.i8 = vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8(veorq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v30, v95)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v30, v94))), (int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v29, v95)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v29, v94)))))), 0xFuLL)), (int8x8_t)0x8000400020001), v29.i16[0] = vaddv_s16(*(int16x4_t *)v29.i8), (~v29.i32[0] & 0xF) != 0)|| ((v26 & 0x100) == 0) == ((v20 >> 8) & 1))
          {
LABEL_18:
            v31 = v93;
            v92 = (void (*)(uint64_t, uint64_t, uint64_t))v90[2];
            v92(v93, v1, v91);
            v32 = v88;
            OUTLINED_FUNCTION_2_0();
            LODWORD(v84) = swift_isUniquelyReferenced_nonNull_native();
            v102 = (_QWORD *)*v32;
            v33 = v102;
            *v32 = 0x8000000000000000;
            v34 = specialized __RawDictionaryStorage.find<A>(_:)(v31);
            v36 = v33[2];
            v37 = (v35 & 1) == 0;
            v38 = v36 + v37;
            if (!__OFADD__(v36, v37))
            {
              v39 = v34;
              v40 = v35;
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<UUID, IDSCapabilitiesChecker.Capabilities>);
              v41 = _NativeDictionary.ensureUnique(isUnique:capacity:)(v84, v38);
              v42 = v91;
              if (!v41)
                goto LABEL_22;
              v43 = specialized __RawDictionaryStorage.find<A>(_:)(v93);
              if ((v40 & 1) != (v44 & 1))
                goto LABEL_50;
              v39 = v43;
LABEL_22:
              v45 = v102;
              v84 = HIDWORD(v26);
              if ((v40 & 1) != 0)
              {
                v46 = v102[7] + 6 * v39;
                *(_WORD *)(v46 + 4) = WORD2(v26);
                *(_DWORD *)v46 = v26;
                goto LABEL_26;
              }
              v102[(v39 >> 6) + 8] |= 1 << v39;
              v92(v45[6] + v90[9] * v39, v93, v42);
              v47 = v45[7] + 6 * v39;
              *(_WORD *)(v47 + 4) = v84;
              *(_DWORD *)v47 = v26;
              v48 = v45[2];
              v49 = __OFADD__(v48, 1);
              v50 = v48 + 1;
              if (!v49)
              {
                v45[2] = v50;
LABEL_26:
                *v32 = v45;
                swift_bridgeObjectRelease();
                v82 = (void (*)(uint64_t, uint64_t))v90[1];
                v82(v93, v42);
                swift_endAccess();
                v51 = *v22;
                v52 = v22[1];
                v53 = v89;
                OUTLINED_FUNCTION_2_0();
                OUTLINED_FUNCTION_33_1();
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v102 = (_QWORD *)*v53;
                v54 = v102;
                *v53 = 0x8000000000000000;
                v55 = v51;
                v56 = OUTLINED_FUNCTION_28_32(v51);
                v58 = v54[2];
                v59 = (v57 & 1) == 0;
                v60 = v58 + v59;
                if (!__OFADD__(v58, v59))
                {
                  v61 = v56;
                  v62 = v57;
                  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, IDSCapabilitiesChecker.Capabilities>);
                  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v60))
                    goto LABEL_30;
                  v63 = OUTLINED_FUNCTION_28_32(v55);
                  if ((v62 & 1) == (v64 & 1))
                  {
                    v61 = v63;
LABEL_30:
                    v65 = v62;
                    v66 = v102;
                    if ((v65 & 1) != 0)
                    {
                      OUTLINED_FUNCTION_6_47();
                      goto LABEL_34;
                    }
                    v102[(v61 >> 6) + 8] |= 1 << v61;
                    v67 = (uint64_t *)(v66[6] + 16 * v61);
                    *v67 = v55;
                    v67[1] = v52;
                    OUTLINED_FUNCTION_6_47();
                    v68 = v66[2];
                    v49 = __OFADD__(v68, 1);
                    v69 = v68 + 1;
                    if (!v49)
                    {
                      v66[2] = v69;
                      OUTLINED_FUNCTION_33_1();
LABEL_34:
                      v70 = v91;
                      v71 = (void (*)(char *, uint64_t))v82;
                      v18 = v19 + 1;
                      *v89 = v66;
                      swift_bridgeObjectRelease();
                      OUTLINED_FUNCTION_27();
                      swift_endAccess();
                      v92(v87, v1, v70);
                      v72 = v86;
                      specialized Set._Variant.insert(_:)();
                      v71(v72, v70);
                      outlined destroy of ConversationControlsAction(v1, (uint64_t (*)(_QWORD))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination);
                      LODWORD(v92) = 1;
                      v17 = v96;
                      v13 = v97;
                      if (v85 != v19)
                        goto LABEL_3;
                      v73 = swift_bridgeObjectRelease();
LABEL_37:
                      if ((*(uint64_t (**)(uint64_t))(*v2 + 168))(v73))
                      {
                        v75 = v74;
                        ObjectType = swift_getObjectType();
                        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v75 + 8))(v2, v104, ObjectType, v75);
                        swift_bridgeObjectRelease();
                        swift_unknownObjectRelease();
                      }
                      else
                      {
                        swift_bridgeObjectRelease();
                      }
                      if (one-time initialization token for conversationKit == -1)
                      {
LABEL_42:
                        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                        v77 = OUTLINED_FUNCTION_15();
                        *(_OWORD *)(v77 + 16) = xmmword_1BD6441D0;
                        v103 = OUTLINED_FUNCTION_14_49();
                        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UUID : IDSCapabilitiesChecker.Capabilities]);
                        v78 = String.init<A>(reflecting:)();
                        v80 = v79;
                        *(_QWORD *)(v77 + 56) = MEMORY[0x1E0DEA968];
                        *(_QWORD *)(v77 + 64) = lazy protocol witness table accessor for type String and conformance String();
                        *(_QWORD *)(v77 + 32) = v78;
                        *(_QWORD *)(v77 + 40) = v80;
                        static os_log_type_t.default.getter();
                        os_log(_:dso:log:type:_:)();
                        return OUTLINED_FUNCTION_2_1();
                      }
LABEL_45:
                      swift_once();
                      goto LABEL_42;
                    }
LABEL_49:
                    __break(1u);
                  }
LABEL_50:
                  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
                  __break(1u);
                  return result;
                }
LABEL_47:
                __break(1u);
              }
              __break(1u);
              goto LABEL_49;
            }
            __break(1u);
            goto LABEL_47;
          }
        }
        else
        {
          OUTLINED_FUNCTION_27();
        }
      }
      ++v19;
      outlined destroy of ConversationControlsAction(v1, (uint64_t (*)(_QWORD))type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination);
      v17 = v96;
      v13 = v97;
    }
    while (v27 != v19);
    v73 = swift_bridgeObjectRelease();
    if ((v92 & 1) != 0)
      goto LABEL_37;
  }
  return OUTLINED_FUNCTION_2_1();
}

uint64_t IDSCapabilitiesChecker.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 32);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t IDSCapabilitiesChecker.__deallocating_deinit()
{
  IDSCapabilitiesChecker.deinit();
  return swift_deallocClassInstance();
}

uint64_t TUIDSLookupManager.capabilities(for:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  Class isa;
  Class v7;
  unsigned int v8;
  Class v9;
  unsigned int v10;
  Class v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  v5 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v5 + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  swift_bridgeObjectRetain();
  isa = OUTLINED_FUNCTION_3_61().super.isa;
  LODWORD(a2) = OUTLINED_FUNCTION_13_1((uint64_t)isa, sel_isFaceTimeAudioAvailableForAnyDestinationInDestinations_);

  v7 = OUTLINED_FUNCTION_3_61().super.isa;
  v8 = OUTLINED_FUNCTION_13_1((uint64_t)v7, sel_isFaceTimeVideoAvailableForAnyDestinationInDestinations_);

  v9 = OUTLINED_FUNCTION_3_61().super.isa;
  v10 = OUTLINED_FUNCTION_13_1((uint64_t)v9, sel_isFaceTimeMultiwayAvailableForAnyDestinationInDestinations_);

  v11 = OUTLINED_FUNCTION_3_61().super.isa;
  OUTLINED_FUNCTION_13_3();
  v12 = objc_msgSend(v2, sel_isVideoMessagingAvailableForAnyDestinationInDestinations_, v11);

  v13 = 256;
  if (!(_DWORD)a2)
    v13 = 0;
  v14 = 0x10000;
  if (!v8)
    v14 = 0;
  v15 = v14 | v13;
  v16 = 0x1000000;
  if (!v10)
    v16 = 0;
  v17 = 0x10000000000;
  if (!v12)
    v17 = 0;
  return v15 | v16 | v17;
}

void protocol witness for IDSLookupManager.beginQuery(withDestinations:) in conformance TUIDSLookupManager()
{
  @nonobjc TUIDSLookupManager.beginQuery(withDestinations:)();
}

void @nonobjc TUIDSLookupManager.beginQuery(withDestinations:)()
{
  void *v0;
  Class isa;

  isa = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, sel_beginQueryWithDestinations_, isa);

}

uint64_t protocol witness for IDSLookupManager.capabilities(for:) in conformance TUIDSLookupManager(uint64_t a1, uint64_t a2)
{
  return TUIDSLookupManager.capabilities(for:)(a1, a2);
}

uint64_t specialized static Dictionary<>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  int8x16_t v46;
  int8x16_t v47;
  int64_t v48;
  uint64_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int64_t v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;

  v4 = type metadata accessor for UUID();
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  MEMORY[0x1E0C80A78](v4);
  v55 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (key: UUID, value: IDSCapabilitiesChecker.Capabilities)?);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v48 - v11;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v56 = 0;
  v53 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v49 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v52 = (unint64_t)(v14 + 63) >> 6;
  v48 = v52 - 1;
  v51 = (int8x16_t)xmmword_1BD64CB50;
  v50 = (int8x16_t)xmmword_1BD64CB30;
  v54 = v9;
  v17 = (uint64_t)v55;
  while (v16)
  {
    v18 = __clz(__rbit64(v16));
    v19 = (v16 - 1) & v16;
    v20 = v18 | (v56 << 6);
LABEL_8:
    v21 = v53;
    (*(void (**)(char *, unint64_t, uint64_t))(v58 + 16))(v9, *(_QWORD *)(v53 + 48) + *(_QWORD *)(v58 + 72) * v20, v59);
    v22 = *(_QWORD *)(v21 + 56) + 6 * v20;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (key: UUID, value: IDSCapabilitiesChecker.Capabilities));
    v24 = &v9[*(int *)(v23 + 48)];
    v25 = *(_DWORD *)v22;
    *((_WORD *)v24 + 2) = *(_WORD *)(v22 + 4);
    *(_DWORD *)v24 = v25;
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v23);
LABEL_30:
    outlined init with take of (key: UUID, value: IDSCapabilitiesChecker.Capabilities)?((uint64_t)v9, (uint64_t)v12);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (key: UUID, value: IDSCapabilitiesChecker.Capabilities));
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v30);
    v57 = EnumTagSinglePayload == 1;
    if (EnumTagSinglePayload == 1)
      return v57;
    v32 = v19;
    v33 = &v12[*(int *)(v30 + 48)];
    v34 = v58;
    v35 = v12;
    v36 = v12;
    v37 = v59;
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v17, v36, v59);
    v38 = *((unsigned __int16 *)v33 + 2);
    v39 = *(unsigned int *)v33;
    v40 = specialized __RawDictionaryStorage.find<A>(_:)(v17);
    v42 = v41;
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v17, v37);
    if ((v42 & 1) == 0)
      return v57;
    v43 = v39 | (v38 << 32);
    v44 = *(unsigned int *)(*(_QWORD *)(a2 + 56) + 6 * v40) | ((unint64_t)*(unsigned __int16 *)(*(_QWORD *)(a2 + 56) + 6 * v40 + 4) << 32);
    v45 = v39;
    v16 = v32;
    if (*(_DWORD *)(*(_QWORD *)(a2 + 56) + 6 * v40) == 2)
    {
      v9 = v54;
      v12 = v35;
      if (v45 != 2)
        return v57;
    }
    else
    {
      v9 = v54;
      if (v45 == 2)
        return v57;
      v46 = (int8x16_t)vdupq_n_s64(v44);
      v47 = (int8x16_t)vdupq_n_s64(v43);
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8(veorq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v47, v51)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v47, v50))), (int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v46, v51)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v46, v50)))))), 0xFuLL))) & 1) == 0)return v57;
      if ((BYTE4(v43) & 1) == ((v44 & 0x100000000) == 0))
        return v57;
      v12 = v35;
      if (((v43 >> 40) & 1) == ((v44 & 0x10000000000) == 0))
        return v57;
    }
  }
  v26 = v56 + 1;
  if (__OFADD__(v56, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v26 >= v52)
  {
LABEL_29:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (key: UUID, value: IDSCapabilitiesChecker.Capabilities));
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v29);
    v19 = 0;
    goto LABEL_30;
  }
  v27 = *(_QWORD *)(v49 + 8 * v26);
  if (v27)
  {
LABEL_12:
    v19 = (v27 - 1) & v27;
    v20 = __clz(__rbit64(v27)) + (v26 << 6);
    v56 = v26;
    goto LABEL_8;
  }
  v28 = v56 + 2;
  ++v56;
  if (v26 + 1 >= v52)
    goto LABEL_29;
  v27 = *(_QWORD *)(v49 + 8 * v28);
  if (v27)
    goto LABEL_15;
  v56 = v26 + 1;
  if (v26 + 2 >= v52)
    goto LABEL_29;
  v27 = *(_QWORD *)(v49 + 8 * (v26 + 2));
  if (v27)
  {
    v26 += 2;
    goto LABEL_12;
  }
  v56 = v26 + 2;
  if (v26 + 3 >= v52)
    goto LABEL_29;
  v27 = *(_QWORD *)(v49 + 8 * (v26 + 3));
  if (v27)
  {
    v26 += 3;
    goto LABEL_12;
  }
  v28 = v26 + 4;
  v56 = v26 + 3;
  if (v26 + 4 >= v52)
    goto LABEL_29;
  v27 = *(_QWORD *)(v49 + 8 * v28);
  if (v27)
  {
LABEL_15:
    v26 = v28;
    goto LABEL_12;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v52)
    {
      v56 = v48;
      goto LABEL_29;
    }
    v27 = *(_QWORD *)(v49 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_12;
  }
LABEL_44:
  __break(1u);
  return result;
}

_QWORD *specialized IDSCapabilitiesChecker.init(participants:lookupManager:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v12[5];

  v12[3] = a4;
  v12[4] = a5;
  __swift_allocate_boxed_opaque_existential_1(v12);
  (*(void (**)(void))(*(_QWORD *)(a4 - 8) + 32))();
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type UUID and conformance UUID();
  v8 = MEMORY[0x1E0DEE9D8];
  a3[2] = Dictionary.init(dictionaryLiteral:)();
  a3[3] = Dictionary.init(dictionaryLiteral:)();
  a3[5] = 0;
  swift_unknownObjectWeakInit();
  a3[6] = v8;
  outlined init with copy of IDSLookupManager((uint64_t)v12, (uint64_t)(a3 + 7));
  if (a1)
  {
    (*(void (**)(uint64_t))(*a3 + 232))(a1);
    swift_bridgeObjectRelease();
  }
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v10 = *MEMORY[0x1E0DBD648];
  swift_retain();
  objc_msgSend(v9, sel_addObserver_selector_name_object_, a3, sel_handleLookupManagerDidChangeNotification_, v10, _bridgeAnythingToObjectiveC<A>(_:)());

  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return a3;
}

uint64_t type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination()
{
  uint64_t result;

  result = type metadata singleton initialization cache for IDSCapabilitiesChecker.ParticipantDestination;
  if (!type metadata singleton initialization cache for IDSCapabilitiesChecker.ParticipantDestination)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t outlined destroy of IDSCapabilitiesChecker.ParticipantDestination?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IDSCapabilitiesChecker.ParticipantDestination?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with take of IDSCapabilitiesChecker.ParticipantDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IDSCapabilitiesChecker.ParticipantDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD18468C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 120))();
  *a2 = result;
  return result;
}

uint64_t sub_1BD1846C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 168))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t dispatch thunk of IDSCapabilitiesCheckerDelegate.idsCapabilitiesChecker(_:didUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for IDSCapabilitiesChecker()
{
  return objc_opt_self();
}

uint64_t method lookup function for IDSCapabilitiesChecker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IDSCapabilitiesChecker.participantCapabilities.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of IDSCapabilitiesChecker.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of IDSCapabilitiesChecker.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of IDSCapabilitiesChecker.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of IDSCapabilitiesChecker.__allocating_init(participants:lookupManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of IDSCapabilitiesChecker.capabilitiesForHandle(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))() & 0xFFFFFFFFFFFFLL;
}

uint64_t dispatch thunk of IDSCapabilitiesChecker.update(withParticipants:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t getEnumTagSinglePayload for IDSCapabilitiesChecker.Capabilities(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[6])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  if (v5 + 1 >= 2)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IDSCapabilitiesChecker.Capabilities(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 6) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 6) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

uint64_t getEnumTag for IDSCapabilitiesChecker.Capabilities(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

uint64_t destructiveInjectEnumTag for IDSCapabilitiesChecker.Capabilities(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSCapabilitiesChecker.Capabilities()
{
  return &type metadata for IDSCapabilitiesChecker.Capabilities;
}

uint64_t dispatch thunk of IDSLookupManager.beginQuery(withDestinations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of IDSLookupManager.capabilities(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))() & 0xFFFFFFFFFFFFLL;
}

uint64_t getEnumTagSinglePayload for IDSCapabilitiesChecker.ParticipantDestination()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1848A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSCapabilitiesChecker.ParticipantDestination()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD18492C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for IDSCapabilitiesChecker.ParticipantDestination()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t outlined init with take of (key: UUID, value: IDSCapabilitiesChecker.Capabilities)?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (key: UUID, value: IDSCapabilitiesChecker.Capabilities)?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type UUID and conformance UUID()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    v1 = type metadata accessor for UUID();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    v1 = type metadata accessor for UUID();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CB09F0], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    v1 = type metadata accessor for UUID();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CB09D0], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

id ConversationControlsLagunaMenuButtonProvider.activity.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  unsigned __int8 v8;

  v1 = *(void **)(v0 + 160);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_activity);
    if (v2)
      return v2;
  }
  v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 136)) + 0x8D0))();
  if (!v4)
    return 0;
  v5 = v4;
  v3 = objc_msgSend(v4, sel_activity);

  if (v3)
  {
    v6 = objc_msgSend(v3, sel_metadata);
    if (!v6
      || (v7 = v6, v8 = objc_msgSend(v6, sel_supportsContinuationOnTV), v7, (v8 & 1) == 0))
    {

      return 0;
    }
  }
  return v3;
}

uint64_t ConversationControlsLagunaMenuButtonProvider.__allocating_init(controlsManager:context:menuHostViewController:suggestion:isInSecondaryBanner:)(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, char a6)
{
  OUTLINED_FUNCTION_15();
  return ConversationControlsLagunaMenuButtonProvider.init(controlsManager:context:menuHostViewController:suggestion:isInSecondaryBanner:)(a1, a2, a3, a4, a5, a6);
}

uint64_t ConversationControlsLagunaMenuButtonProvider.init(controlsManager:context:menuHostViewController:suggestion:isInSecondaryBanner:)(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, char a6)
{
  uint64_t v6;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  objc_class *v25;
  NSBundle v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)(v6 + 160) = 0;
  *(_BYTE *)(v6 + 169) = 0;
  *(_QWORD *)(v6 + 176) = 0;
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_61();
  *(_QWORD *)(v6 + 184) = MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_61();
  *(_QWORD *)(v6 + 192) = MEMORY[0x1C3B72E00](0xD00000000000001ALL);
  v11 = *(void **)(v6 + 160);
  *(_QWORD *)(v6 + 160) = a5;
  v12 = a5;

  *(_BYTE *)(v6 + 168) = a6;
  OUTLINED_FUNCTION_43();
  v13 = a3;
  v14 = a1;
  ConversationControlsMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)();
  v16 = v15;
  LODWORD(a3) = *(unsigned __int8 *)(v15 + 168);
  objc_opt_self();
  v17 = (id)partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  if ((_DWORD)a3 != 1)
    goto LABEL_4;
  v18 = OUTLINED_FUNCTION_2_11((uint64_t)v17, sel_whiteColor);
  OUTLINED_FUNCTION_17_38(v18);
  v19 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v20 = OUTLINED_FUNCTION_2_11(v19, sel_systemBlackColor);
  ControlsButtonProvider.foregroundColor.setter(v20);
  OUTLINED_FUNCTION_43();
  v21 = (void *)objc_opt_self();
  v22 = *MEMORY[0x1E0DC4A90];
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v17 = objc_msgSend(v21, sel__preferredFontForTextStyle_variant_, v22, 264);
  if (!v17)
  {
    __break(1u);
LABEL_4:
    v23 = OUTLINED_FUNCTION_2_11((uint64_t)v17, sel_systemGreenColor);
    OUTLINED_FUNCTION_17_38(v23);
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    ControlsButtonProvider.prominentTitleFont.getter();
  }
  ControlsButtonProvider.titleFont.setter(v17);
  OUTLINED_FUNCTION_43();
  objc_opt_self();
  v24 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v25 = (objc_class *)OUTLINED_FUNCTION_2_11(v24, sel_conversationKit);
  OUTLINED_FUNCTION_7_14();
  v26.super.isa = v25;
  v31 = OUTLINED_FUNCTION_49_2(v27, v28, v29, v30, v26);
  v33 = v32;

  ControlsButtonProvider.title.setter(v31, v33);
  swift_release_n();

  return v16;
}

Swift::Void __swiftcall ConversationControlsLagunaMenuButtonProvider.buttonChanged()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  ControlsButtonProvider.buttonChanged()();
  OUTLINED_FUNCTION_10_7();
  v1 = MEMORY[0x1C3B752C0]();
  if (v1)
  {
    v2 = (void *)v1;
    ConversationControlsLagunaMenuButtonProvider.updateButtonLabelVisibility()();
    OUTLINED_FUNCTION_61();
    outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD000000000000013, v3, v2);
    objc_msgSend(v2, sel_addTarget_action_forControlEvents_, v0, sel_lagunaHandoffButtonTapped, 0x2000);

  }
  OUTLINED_FUNCTION_32();
}

void ConversationControlsLagunaMenuButtonProvider.updateButtonLabelVisibility()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v3;
  id v4;
  void *v5;
  double v6;

  swift_beginAccess();
  v1 = (void *)MEMORY[0x1C3B752C0](v0 + 16);
  if (v1)
  {
    v2 = v1;
    v3 = *(unsigned __int8 *)(v0 + 169);
    v4 = objc_msgSend(v1, sel_titleLabel);
    if (v4)
    {
      v5 = v4;
      v6 = 1.0;
      if (v3)
        v6 = 0.0;
      objc_msgSend(v4, sel_setAlpha_, v6);

    }
  }
}

uint64_t ConversationControlsLagunaMenuButtonProvider.buttonConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for UIButton.Configuration.Size();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ConversationControlsMenuButtonProvider.buttonConfiguration.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DC3198], v0);
  return UIButton.Configuration.buttonSize.setter();
}

Swift::Bool __swiftcall ConversationControlsLagunaMenuButtonProvider.shouldEnableMenu()()
{
  uint64_t v0;
  id v1;
  char v2;

  v1 = ConversationControlsLagunaMenuButtonProvider.activity.getter();

  if (v1)
    v2 = *(_BYTE *)(v0 + 169) ^ 1;
  else
    v2 = 0;
  return v2 & 1;
}

id ConversationControlsLagunaMenuButtonProvider.spinnerView.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  UIActivityIndicatorView *v4;
  void *v5;
  void *v6;
  id v7;

  v1 = *(void **)(v0 + 176);
  if (v1)
  {
    v2 = *(id *)(v0 + 176);
  }
  else
  {
    v3 = v0;
    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIActivityIndicatorView);
    UIActivityIndicatorView.init(style:size:)(v4, ConversationKit_PlatformActivityIndicatorStyle_spinner, ConversationKit_PlatformActivityIndicatorSize_medium);
    v5 = *(void **)(v0 + 176);
    *(_QWORD *)(v3 + 176) = v6;
    v2 = v6;

    v1 = 0;
  }
  v7 = v1;
  return v2;
}

Swift::Void __swiftcall ConversationControlsLagunaMenuButtonProvider.lagunaHandoffButtonTapped()()
{
  uint64_t v0;
  void *v1;
  id v2;

  OUTLINED_FUNCTION_10_7();
  v1 = (void *)MEMORY[0x1C3B752C0]();

  if (v1 && (*(_BYTE *)(v0 + 169) & 1) == 0 && !ConversationControlsLagunaMenuButtonProvider.shouldEnableMenu()())
  {
    v2 = ConversationControlsLagunaMenuButtonProvider.activity.getter();
    ConversationControlsLagunaMenuButtonProvider.pushSelected(lightweightHandoff:selectedActivity:)(0, v2);

  }
  OUTLINED_FUNCTION_32();
}

#error "1BD185180: call analysis failed (funcsize=62)"

void ConversationControlsLagunaMenuButtonProvider.showLoading()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  int v11;
  void *v12;
  char **v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  Class isa;

  v1 = v0;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v0 + 16);
  if (v2)
  {
    v3 = (id)v2;
    v4 = ConversationControlsLagunaMenuButtonProvider.spinnerView.getter();
    v5 = objc_msgSend(v4, sel_superview);

    if (!v5)
    {
      objc_msgSend(v3, sel_intrinsicContentSize);
      v7 = v6;
      v9 = v8;
      ConversationControlsLagunaMenuButtonProvider.updateButtonLabelVisibility()();
      v10 = ConversationControlsLagunaMenuButtonProvider.spinnerView.getter();
      v11 = *(unsigned __int8 *)(v1 + 168);
      v12 = (void *)objc_opt_self();
      v13 = &selRef_systemGrayColor;
      if (!v11)
        v13 = &selRef_whiteColor;
      v14 = objc_msgSend(v12, *v13);
      objc_msgSend(v10, sel_setColor_, v14);

      v15 = ConversationControlsLagunaMenuButtonProvider.spinnerView.getter();
      objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      v16 = v3;
      v17 = ConversationControlsLagunaMenuButtonProvider.spinnerView.getter();
      objc_msgSend(v16, sel_addSubview_, v17);

      v18 = (void *)objc_opt_self();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1BD644140;
      v20 = ConversationControlsLagunaMenuButtonProvider.spinnerView.getter();
      v21 = objc_msgSend(v20, sel_centerYAnchor);

      v22 = objc_msgSend(v16, sel_centerYAnchor);
      v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

      *(_QWORD *)(v19 + 32) = v23;
      v24 = ConversationControlsLagunaMenuButtonProvider.spinnerView.getter();
      v25 = objc_msgSend(v24, sel_centerXAnchor);

      v26 = objc_msgSend(v16, sel_centerXAnchor);
      v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

      *(_QWORD *)(v19 + 40) = v27;
      v28 = ConversationControlsLagunaMenuButtonProvider.spinnerView.getter();
      v29 = objc_msgSend(v28, sel_widthAnchor);

      v30 = objc_msgSend(v29, sel_constraintEqualToConstant_, v7);
      *(_QWORD *)(v19 + 48) = v30;
      v31 = ConversationControlsLagunaMenuButtonProvider.spinnerView.getter();
      v32 = objc_msgSend(v31, sel_heightAnchor);

      v33 = objc_msgSend(v32, sel_constraintEqualToConstant_, v9);
      *(_QWORD *)(v19 + 56) = v33;
      specialized Array._endMutation()();
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v18, sel_activateConstraints_, isa, v19);

      v3 = ConversationControlsLagunaMenuButtonProvider.spinnerView.getter();
      objc_msgSend(v3, sel_startAnimating);

    }
  }
}

uint64_t closure #1 in ConversationControlsLagunaMenuButtonProvider.pushSelected(lightweightHandoff:selectedActivity:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD aBlock[6];

  v0 = type metadata accessor for DispatchWorkItemFlags();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&aBlock[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v10 = static OS_dispatch_queue.main.getter();
    v13 = v1;
    v11 = (void *)v10;
    aBlock[4] = partial apply for closure #1 in closure #1 in ConversationControlsLagunaMenuButtonProvider.pushSelected(lightweightHandoff:selectedActivity:);
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_28;
    v12 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B7361C](0, v7, v3, v12);
    _Block_release(v12);
    swift_release();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

void closure #1 in closure #1 in ConversationControlsLagunaMenuButtonProvider.pushSelected(lightweightHandoff:selectedActivity:)(uint64_t a1)
{
  Swift::String v1;

  *(_BYTE *)(a1 + 169) = 0;
  ConversationControlsLagunaMenuButtonProvider.hideLoading()();
  v1._countAndFlagsBits = 0x6D6F432068737550;
  v1._object = (void *)0xED00006574656C70;
  ConversationControlsMenuButtonProvider.dismissMenu(context:)(v1);
}

void ConversationControlsLagunaMenuButtonProvider.hideLoading()()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  swift_beginAccess();
  v1 = (void *)MEMORY[0x1C3B752C0](v0 + 16);

  if (v1)
  {
    v2 = ConversationControlsLagunaMenuButtonProvider.spinnerView.getter();
    objc_msgSend(v2, sel_stopAnimating);

    v3 = ConversationControlsLagunaMenuButtonProvider.spinnerView.getter();
    objc_msgSend(v3, sel_removeFromSuperview);

    ConversationControlsLagunaMenuButtonProvider.updateButtonLabelVisibility()();
  }
}

id ConversationControlsLagunaMenuButtonProvider.shareplayActionIdentifier.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 184);
}

id ConversationControlsLagunaMenuButtonProvider.facetimeActionIdentifier.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 192);
}

Class ConversationControlsLagunaMenuButtonProvider.menu(for:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  id v7;
  id v8;
  objc_class *v9;
  NSBundle v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSBundle v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  _QWORD *v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  objc_class *v42;
  NSBundle v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  Swift::String v63;
  Swift::String_optional v64;
  Swift::OpaquePointer v65;
  UIMenuElementSize preferredElementSize;
  _QWORD v67[4];
  __int16 v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  UIImage_optional v72;

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 592))() & 1) == 0)
    return 0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "Displaying Laguna menu", v5, 2u);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  v6 = (_QWORD *)v1[17];
  preferredElementSize = MEMORY[0x1E0DEE9D8];
  v7 = ConversationControlsLagunaMenuButtonProvider.activity.getter();
  if (v7)
  {
    v8 = v7;
    v9 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_7_14();
    v10.super.isa = v9;
    OUTLINED_FUNCTION_49_2(v11, v12, v13, v14, v10);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v15 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v15 + 16) = xmmword_1BD6441D0;
    v16 = objc_msgSend(v8, sel_concatenatedDescription);
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v19 = v18;

    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v15 + 32) = v17;
    *(_QWORD *)(v15 + 40) = v19;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_7_12();
    OUTLINED_FUNCTION_7_14();
    v21.super.isa = (Class)v8;
    OUTLINED_FUNCTION_49_2(v22, v23, v24, v25, v21);
  }

  v26 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v6) + 0x320))();
  if ((v26 & 1) == 0)
  {
    OUTLINED_FUNCTION_17_8(v26, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v27 = @nonobjc UIImage.__allocating_init(systemName:)();
    OUTLINED_FUNCTION_17_8((uint64_t)v27, (unint64_t *)&lazy cache variable for type metadata for UIAction);
    v28 = (void *)v1[24];
    v29 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_7_4();
    v30 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v30 + 16) = v29;
    *(_QWORD *)(v30 + 24) = v6;
    v31 = v27;
    v32 = v28;
    v33 = v6;
    OUTLINED_FUNCTION_11_46();
    v34 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    OUTLINED_FUNCTION_14_50();
  }
  swift_bridgeObjectRelease();
  v35 = ConversationControlsLagunaMenuButtonProvider.activity.getter();
  if (v35)
  {
    v36 = v35;
    specialized static UIImage.image(named:)(0);
    v38 = v37;
    v39 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v40 = objc_msgSend(v38, sel_imageWithTintColor_, v39);

    OUTLINED_FUNCTION_17_8(v41, (unint64_t *)&lazy cache variable for type metadata for UIAction);
    v42 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_61();
    OUTLINED_FUNCTION_7_14();
    v43.super.isa = v42;
    OUTLINED_FUNCTION_49_2(v44, v45, v46, v47, v43);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v48 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v48 + 16) = xmmword_1BD6441D0;
    v49 = objc_msgSend(v36, sel_concatenatedDescription, 0xE000000000000000);
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v52 = v51;

    *(_QWORD *)(v48 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v48 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v48 + 32) = v50;
    *(_QWORD *)(v48 + 40) = v52;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v53 = (void *)v1[23];
    v54 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_7_4();
    v55 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v55 + 16) = v54;
    *(_QWORD *)(v55 + 24) = v36;
    v56 = v40;
    v57 = v53;
    v58 = v36;
    v59 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    OUTLINED_FUNCTION_14_50();
  }
  OUTLINED_FUNCTION_17_8(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v60 = (void *)*MEMORY[0x1E0DC4B60];
  v67[0] = 0xD000000000000017;
  v67[1] = 0x80000001BD678110;
  v67[2] = 2;
  v67[3] = v60;
  v68 = 0;
  v69 = 4;
  v70 = 0;
  v71 = 0;
  v61 = v60;
  static UIImage.symbolImage(for:)((uint64_t)v67);

  v62 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17_8(v62, &lazy cache variable for type metadata for UIMenu);
  OUTLINED_FUNCTION_11_46();
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v63, v64, v72, (UIMenuIdentifier_optional)33, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v65).super.super.isa;
}

void closure #1 in ConversationControlsLagunaMenuButtonProvider.menu(for:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = Strong;
    v6 = Strong + 16;
    swift_beginAccess();
    v7 = (void *)MEMORY[0x1C3B752C0](v6);

    if (v7 && (*(_BYTE *)(v5 + 169) & 1) == 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationControls);
      v9 = a3;
      v10 = Logger.logObject.getter();
      v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        v18 = v13;
        *(_DWORD *)v12 = 136315138;
        if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x290))())
        {
          _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
          v14 = String.init<A>(reflecting:)();
          v16 = v15;
        }
        else
        {
          v16 = 0xE300000000000000;
          v14 = 7104878;
        }
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, &v18);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v10, v11, "Laguna start handoff of facetime: %s", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v13, -1, -1);
        MEMORY[0x1C3B751B8](v12, -1, -1);

      }
      else
      {

      }
      v17 = ConversationControlsLagunaMenuButtonProvider.activity.getter();
      ConversationControlsLagunaMenuButtonProvider.pushSelected(lightweightHandoff:selectedActivity:)(0, v17);
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

uint64_t closure #2 in ConversationControlsLagunaMenuButtonProvider.menu(for:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6 = result + 16;
    swift_beginAccess();
    v7 = (void *)MEMORY[0x1C3B752C0](v6);

    if (v7 && (*(_BYTE *)(v5 + 169) & 1) == 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationControls);
      v9 = a3;
      v10 = Logger.logObject.getter();
      v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        v17 = v13;
        *(_DWORD *)v12 = 136315138;
        _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for TUConversationActivity);
        v14 = v9;
        v15 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v17);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v10, v11, "Laguna start handoff of activity: %s", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v13, -1, -1);
        MEMORY[0x1C3B751B8](v12, -1, -1);

      }
      else
      {

      }
      ConversationControlsLagunaMenuButtonProvider.pushSelected(lightweightHandoff:selectedActivity:)(1, v9);
    }
    return swift_release();
  }
  return result;
}

void ConversationControlsLagunaMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:)()
{
  OUTLINED_FUNCTION_8_53();
  __break(1u);
}

void ConversationControlsLagunaMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)()
{
  OUTLINED_FUNCTION_8_53();
  __break(1u);
}

void ConversationControlsLagunaMenuButtonProvider.__ivar_destroyer()
{
  id *v0;

}

id *ConversationControlsLagunaMenuButtonProvider.deinit()
{
  id *v0;

  v0 = (id *)ConversationControlsMenuButtonProvider.deinit();

  return v0;
}

uint64_t ConversationControlsLagunaMenuButtonProvider.__deallocating_deinit()
{
  ConversationControlsLagunaMenuButtonProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BD186428()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsLagunaMenuButtonProvider.menu(for:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in ConversationControlsLagunaMenuButtonProvider.menu(for:)(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t partial apply for closure #2 in ConversationControlsLagunaMenuButtonProvider.menu(for:)(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in ConversationControlsLagunaMenuButtonProvider.menu(for:)(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t type metadata accessor for ConversationControlsLagunaMenuButtonProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsLagunaMenuButtonProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsLagunaMenuButtonProvider.__allocating_init(controlsManager:context:menuHostViewController:suggestion:isInSecondaryBanner:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 632))();
}

uint64_t partial apply for closure #1 in ConversationControlsLagunaMenuButtonProvider.pushSelected(lightweightHandoff:selectedActivity:)()
{
  return closure #1 in ConversationControlsLagunaMenuButtonProvider.pushSelected(lightweightHandoff:selectedActivity:)();
}

void partial apply for closure #1 in closure #1 in ConversationControlsLagunaMenuButtonProvider.pushSelected(lightweightHandoff:selectedActivity:)()
{
  uint64_t v0;

  closure #1 in closure #1 in ConversationControlsLagunaMenuButtonProvider.pushSelected(lightweightHandoff:selectedActivity:)(v0);
}

uint64_t AnsweringMachineStatusService.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_1_62() + 20);
  v4 = OUTLINED_FUNCTION_17_2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AnsweringMachineStatusService()
{
  uint64_t result;

  result = type metadata singleton initialization cache for AnsweringMachineStatusService;
  if (!type metadata singleton initialization cache for AnsweringMachineStatusService)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AnsweringMachineStatusService.isInSupportedEnvirement.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_1_62() + 24));
  swift_retain();
  return v1;
}

Swift::Bool __swiftcall AnsweringMachineStatusService.isAvailable()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v13;
  os_log_type_t v14;
  _WORD *v15;
  os_log_type_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = OUTLINED_FUNCTION_17_2();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - v7;
  v9 = TUCallScreeningEnabled();
  v10 = OUTLINED_FUNCTION_1_62();
  v11 = v10;
  if (v9)
  {
    if (((*(uint64_t (**)(void))(v1 + *(int *)(v10 + 24)))() & 1) != 0)
      return 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v1 + *(int *)(v11 + 20), v2);
    v13 = Logger.logObject.getter();
    v16 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v13, v16))
    {
      v5 = v8;
      goto LABEL_10;
    }
    v15 = (_WORD *)OUTLINED_FUNCTION_7_8();
    *v15 = 0;
    OUTLINED_FUNCTION_2_29(&dword_1BD004000, v13, v16, "Answering Machine unavailable because we are not in a supported envirement");
    v5 = v8;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + *(int *)(v10 + 20), v2);
  v13 = Logger.logObject.getter();
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (_WORD *)OUTLINED_FUNCTION_7_8();
    *v15 = 0;
    OUTLINED_FUNCTION_2_29(&dword_1BD004000, v13, v14, "Answering Machine unavailable because TUCallScreeningEnabled is NO");
LABEL_8:
    MEMORY[0x1C3B751B8](v15, -1, -1);
  }
LABEL_10:

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

uint64_t AnsweringMachineStatusService.init(logger:isInSupportedEnvirement:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;

  *a4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v8 = OUTLINED_FUNCTION_1_62();
  v9 = (char *)a4 + *(int *)(v8 + 20);
  v10 = OUTLINED_FUNCTION_17_2();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a1, v10);
  v12 = (_QWORD *)((char *)a4 + *(int *)(v8 + 24));
  *v12 = a2;
  v12[1] = a3;
  return result;
}

void **initializeBufferWithCopyOfBuffer for AnsweringMachineStatusService(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Logger();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = (void **)((char *)v7 + v14);
    v16 = (void **)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
  }
  swift_retain();
  return v7;
}

uint64_t destroy for AnsweringMachineStatusService(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

void **initializeWithCopy for AnsweringMachineStatusService(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Logger();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = (void **)((char *)a1 + v13);
  v15 = (void **)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  return a1;
}

void **assignWithCopy for AnsweringMachineStatusService(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (void **)((char *)a1 + v13);
  v15 = (void **)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for AnsweringMachineStatusService(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void **assignWithTake for AnsweringMachineStatusService(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnsweringMachineStatusService()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD186AF8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_17_2();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AnsweringMachineStatusService()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1BD186B74(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_17_2();
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for AnsweringMachineStatusService()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ReactionsViewConstraintManager.__allocating_init(localParticipantView:reactionsView:)(void *a1, void *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  ReactionsViewConstraintManager.init(localParticipantView:reactionsView:)(a1, a2);
  return v4;
}

_QWORD *ReactionsViewConstraintManager.init(localParticipantView:reactionsView:)(void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v3;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;

  v2[6] = MEMORY[0x1E0DEE9D8];
  v6 = OUTLINED_FUNCTION_123((uint64_t)a1, sel_topAnchor);
  v7 = OUTLINED_FUNCTION_9((uint64_t)v6, sel_bottomAnchor);
  v8 = OUTLINED_FUNCTION_18_7((uint64_t)v7, sel_constraintGreaterThanOrEqualToAnchor_constant_);
  OUTLINED_FUNCTION_71_3();

  v2[2] = v3;
  v10 = OUTLINED_FUNCTION_123(v9, sel_bottomAnchor);
  v11 = OUTLINED_FUNCTION_9((uint64_t)v10, sel_topAnchor);
  v12 = OUTLINED_FUNCTION_18_7((uint64_t)v11, sel_constraintGreaterThanOrEqualToAnchor_constant_);
  OUTLINED_FUNCTION_71_3();

  v2[3] = v3;
  v14 = OUTLINED_FUNCTION_123(v13, sel_leadingAnchor);
  v15 = OUTLINED_FUNCTION_9((uint64_t)v14, sel_leadingAnchor);
  v16 = OUTLINED_FUNCTION_18_7((uint64_t)v15, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_71_3();

  v2[4] = v3;
  v18 = OUTLINED_FUNCTION_123(v17, sel_trailingAnchor);
  v19 = OUTLINED_FUNCTION_9((uint64_t)v18, sel_trailingAnchor);
  v20 = OUTLINED_FUNCTION_18_7((uint64_t)v19, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_71_3();

  v2[5] = v3;
  return v2;
}

uint64_t ReactionsViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;

  v2 = *(unsigned __int8 *)(a1 + 17);
  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  if (!(v2 >> 6))
LABEL_4:
    __asm { BR              X10 }
  if (v2 >> 6 == 1)
  {
    v2 &= 0x3Fu;
    goto LABEL_4;
  }
  return swift_bridgeObjectRetain();
}

id *ReactionsViewConstraintManager.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReactionsViewConstraintManager.__deallocating_deinit()
{
  ReactionsViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReactionsViewConstraintManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ReactionsViewConstraintManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReactionsViewConstraintManager.__allocating_init(localParticipantView:reactionsView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ReactionsViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

__int128 *BrandedIconView.Constants.iconSize.unsafeMutableAddressor()
{
  if (one-time initialization token for iconSize != -1)
    swift_once();
  return &static BrandedIconView.Constants.iconSize;
}

UIImage_optional __swiftcall UIImage.__allocating_init(contentsOfFile:)(Swift::String contentsOfFile)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v3;
  void *v4;
  objc_class *v5;
  Swift::Bool v6;
  UIImage_optional result;

  object = contentsOfFile._object;
  countAndFlagsBits = contentsOfFile._countAndFlagsBits;
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = (void *)MEMORY[0x1C3B72E00](countAndFlagsBits, object);
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_initWithContentsOfFile_, v4);

  OUTLINED_FUNCTION_18();
  result.value.super.isa = v5;
  result.is_nil = v6;
  return result;
}

__n128 one-time initialization function for iconSize()
{
  __n128 result;

  __asm { FMOV            V0.2D, #14.0 }
  static BrandedIconView.Constants.iconSize = (__int128)result;
  return result;
}

double static BrandedIconView.Constants.iconSize.getter()
{
  if (one-time initialization token for iconSize != -1)
    swift_once();
  return *(double *)&static BrandedIconView.Constants.iconSize;
}

void one-time initialization function for cornerRadius()
{
  static BrandedIconView.Constants.cornerRadius = 0x4010000000000000;
}

{
  static Layout.Captions.cornerRadius = 0x4024000000000000;
}

{
  static Layout.AnnotationDisc.cornerRadius = 0x4026000000000000;
}

uint64_t *BrandedIconView.Constants.cornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for cornerRadius != -1)
    swift_once();
  return &static BrandedIconView.Constants.cornerRadius;
}

double static BrandedIconView.Constants.cornerRadius.getter()
{
  if (one-time initialization token for cornerRadius != -1)
    swift_once();
  return *(double *)&static BrandedIconView.Constants.cornerRadius;
}

id BrandedIconView.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void BrandedIconView.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v2;
  objc_class *v4;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  objc_super v15;

  v4 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v5 = OBJC_IVAR____TtC15ConversationKit15BrandedIconView_icon;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
  v7 = v1;
  v8 = objc_msgSend(v6, sel_initWithImage_, 0);
  v9 = OUTLINED_FUNCTION_16_38(v8);
  objc_msgSend(v9, sel_setMasksToBounds_, 1);

  objc_msgSend(v8, sel_setContentMode_, 2);
  objc_msgSend(v8, sel_setAutoresizingMask_, 18);
  v10 = objc_msgSend(v8, (SEL)(v2 + 3656));
  if (one-time initialization token for cornerRadius != -1)
    swift_once();
  objc_msgSend(v10, sel_setCornerRadius_, *(double *)&static BrandedIconView.Constants.cornerRadius);

  *(_QWORD *)&v1[v5] = v8;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v11 = OUTLINED_FUNCTION_17_2();
  v12 = OUTLINED_FUNCTION_3(v11, (uint64_t)&static Logger.conversationControls);
  v13 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1BD004000, v12, v13, "Unavailable initializer used.", v14, 2u);
    OUTLINED_FUNCTION_60();
  }

  v15.receiver = v7;
  v15.super_class = v4;
  objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_6_2();
}

uint64_t BrandedIconView.__allocating_init(telephonyCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t ObjectType;
  void *v14;
  unsigned int v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  Swift::String v24;
  unint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(_BYTE *, uint64_t);
  _BYTE v39[12];
  int v40;
  uint64_t v41;
  Class v42;
  uint64_t v43;
  uint64_t v44;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for URL();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v39[-v11];
  ObjectType = swift_getObjectType();
  v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 160))(ObjectType, a2);
  v15 = objc_msgSend(v14, sel_isTelephonyProvider);

  if (v15)
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 80))(ObjectType, a2);
    if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
    {
      OUTLINED_FUNCTION_19_0();
      outlined destroy of URL?((uint64_t)v5);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v12, v5, v6);
      type metadata accessor for UIImage();
      v24._countAndFlagsBits = URL.path.getter();
      v25 = (unint64_t)UIImage.__allocating_init(contentsOfFile:)(v24);
      if (v25)
      {
        v26 = (void *)v25;
        v27 = objc_allocWithZone(v42);
        BrandedIconView.init(image:)(v26);
        v22 = v28;
        OUTLINED_FUNCTION_19_0();
        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
        return v22;
      }
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v29 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v29, (uint64_t)&static Logger.conversationControls);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v12, v6);
      v30 = Logger.logObject.getter();
      v31 = static os_log_type_t.fault.getter();
      v32 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        v33 = OUTLINED_FUNCTION_105();
        v41 = OUTLINED_FUNCTION_105();
        v44 = v41;
        *(_DWORD *)v33 = 136446466;
        v40 = v32;
        v34 = OUTLINED_FUNCTION_10_53();
        v43 = OUTLINED_FUNCTION_45_5(v34, v35);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 12) = 2080;
        lazy protocol witness table accessor for type URL and conformance URL();
        v36 = dispatch thunk of CustomStringConvertible.description.getter();
        v43 = OUTLINED_FUNCTION_45_5(v36, v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
        _os_log_impl(&dword_1BD004000, v30, (os_log_type_t)v40, "[%{public}s] Failed to load branded call image from file %s. ", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_19_0();
      v38 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
      v38(v10, v6);
      v38(v12, v6);
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v16 = OUTLINED_FUNCTION_17_2();
    v17 = OUTLINED_FUNCTION_3(v16, (uint64_t)&static Logger.conversationControls);
    v18 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)OUTLINED_FUNCTION_105();
      v44 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v19 = 136446210;
      v20 = OUTLINED_FUNCTION_10_53();
      v43 = OUTLINED_FUNCTION_45_5(v20, v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v17, v18, "[%{public}s] Non-telephony call passed into telephony initalizer", v19, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_0();
  }
  return 0;
}

void BrandedIconView.__allocating_init(image:)()
{
  void *v0;

  OUTLINED_FUNCTION_16_1();
  BrandedIconView.init(image:)(v0);
}

void BrandedIconView.init(image:)(void *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  double v12;
  objc_super *v13;
  SEL v14;
  char *v15;
  void *v16;
  char *v17;
  char *v18;
  id v19;

  v3 = v1;
  v5 = OUTLINED_FUNCTION_15_6();
  v6 = OBJC_IVAR____TtC15ConversationKit15BrandedIconView_icon;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
  v8 = v3;
  v9 = objc_msgSend(v7, sel_initWithImage_, 0);
  v10 = OUTLINED_FUNCTION_16_38(v9);
  objc_msgSend(v10, sel_setMasksToBounds_, 1);

  objc_msgSend(v9, sel_setContentMode_, 2);
  objc_msgSend(v9, sel_setAutoresizingMask_, 18);
  v11 = objc_msgSend(v9, (SEL)(v2 + 3656));
  if (one-time initialization token for cornerRadius != -1)
    swift_once();
  objc_msgSend(v11, sel_setCornerRadius_, *(double *)&static BrandedIconView.Constants.cornerRadius);

  *(_QWORD *)&v8[v6] = v9;
  v12 = OUTLINED_FUNCTION_7_63();
  v15 = (char *)objc_msgSendSuper2(v13, v14, v12, v8, v5);
  v16 = *(void **)&v15[OBJC_IVAR____TtC15ConversationKit15BrandedIconView_icon];
  v17 = v15;
  objc_msgSend(v16, sel_setImage_, a1);
  v18 = v17;
  v19 = v16;
  objc_msgSend(v18, sel_addSubview_, v19);

  OUTLINED_FUNCTION_6_2();
}

Swift::Void __swiftcall BrandedIconView.layoutSubviews()()
{
  char *v0;
  void *v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit15BrandedIconView_icon];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
}

CGSize __swiftcall BrandedIconView.sizeThatFits(_:)(CGSize a1)
{
  uint64_t v1;
  double v2;
  double v3;
  CGSize result;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit15BrandedIconView_icon), sel_sizeThatFits_, a1.width, a1.height);
  result.height = v3;
  result.width = v2;
  return result;
}

id BrandedIconView.intrinsicContentSize.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit15BrandedIconView_icon), sel_intrinsicContentSize);
}

void BrandedIconView.init(frame:)()
{
  ConversationControlsButton.init(frame:)();
}

void IncomingCallCombinedSubtitleBadgeView.__allocating_init(brandedIcon:multiSimBadge:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  IncomingCallCombinedSubtitleBadgeView.init(brandedIcon:multiSimBadge:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

objc_super *IncomingCallCombinedSubtitleBadgeView.init(brandedIcon:multiSimBadge:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  id v7;
  id v8;
  double v9;
  objc_super *v10;
  objc_super *v11;
  objc_super *v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  ObjectType = swift_getObjectType();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit37IncomingCallCombinedSubtitleBadgeView_horizontalSpacing) = 0x4010000000000000;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit37IncomingCallCombinedSubtitleBadgeView_brandedIcon) = a1;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit37IncomingCallCombinedSubtitleBadgeView_multiSimBadge) = a2;
  v14 = v3;
  v15 = ObjectType;
  v7 = a1;
  v8 = a2;
  v9 = OUTLINED_FUNCTION_7_63();
  v11 = -[objc_super initWithFrame:](v10, sel_initWithFrame_, v9, v14, v15);
  -[objc_super addSubview:](v11, sel_addSubview_, v7);
  if (a2)
  {
    v12 = v11;
    -[objc_super addSubview:](v12, sel_addSubview_, v8);

  }
  return v11;
}

void IncomingCallCombinedSubtitleBadgeView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit37IncomingCallCombinedSubtitleBadgeView_horizontalSpacing] = 0x4010000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

CGSize __swiftcall IncomingCallCombinedSubtitleBadgeView.sizeThatFits(_:)(CGSize a1)
{
  uint64_t v1;
  double height;
  double width;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  double v18;
  double v19;
  CGSize result;
  uint64_t v21;

  height = a1.height;
  width = a1.width;
  v4 = IncomingCallCombinedSubtitleBadgeView.badgeSizeFitting(_:)();
  v6 = v5;
  if (one-time initialization token for iconSize != -1)
    swift_once();
  v7 = 0.0;
  if (v4 > 2.22507386e-308)
    v7 = *(double *)(v1 + OBJC_IVAR____TtC15ConversationKit37IncomingCallCombinedSubtitleBadgeView_horizontalSpacing);
  if (*((double *)&static BrandedIconView.Constants.iconSize + 1) > v6)
    v6 = *((double *)&static BrandedIconView.Constants.iconSize + 1);
  v8 = v4 + *(double *)&static BrandedIconView.Constants.iconSize + v7;
  if (v8 > width || v6 > height)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v10 = OUTLINED_FUNCTION_17_2();
    v11 = OUTLINED_FUNCTION_3(v10, (uint64_t)&static Logger.conversationControls);
    v12 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = OUTLINED_FUNCTION_105();
      v21 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v13 = 136446466;
      type metadata accessor for CGSize(0);
      v14 = OUTLINED_FUNCTION_12_44();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v21);
      OUTLINED_FUNCTION_11_47();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2082;
      v16 = OUTLINED_FUNCTION_12_44();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v21);
      OUTLINED_FUNCTION_11_47();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v11, v12, "Returning a size %{public}s that is larger than the fitting size %{public}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

  }
  v18 = v8;
  v19 = v6;
  result.height = v19;
  result.width = v18;
  return result;
}

double IncomingCallCombinedSubtitleBadgeView.badgeSizeFitting(_:)()
{
  uint64_t v0;
  void *v1;
  double result;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit37IncomingCallCombinedSubtitleBadgeView_multiSimBadge);
  if (!v1)
    return 0.0;
  objc_msgSend(v1, sel_systemLayoutSizeFittingSize_);
  return result;
}

Swift::Void __swiftcall IncomingCallCombinedSubtitleBadgeView.layoutSubviews()()
{
  char *v0;
  char *v1;
  __int128 v2;
  void *v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  id v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  uint64_t inited;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  objc_super v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v1 = v0;
  v23.receiver = v0;
  v23.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v23, sel_layoutSubviews);
  if (one-time initialization token for iconSize != -1)
    swift_once();
  v2 = static BrandedIconView.Constants.iconSize;
  v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit37IncomingCallCombinedSubtitleBadgeView_brandedIcon];
  objc_msgSend(v3, sel_setBounds_, 0.0, 0.0, static BrandedIconView.Constants.iconSize);
  OUTLINED_FUNCTION_3_62();
  objc_msgSend(v3, sel_setCenter_, *(double *)&v2 * 0.5, CGRectGetHeight(v24) * 0.5);
  v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit37IncomingCallCombinedSubtitleBadgeView_multiSimBadge];
  if (v4)
  {
    v5 = v4;
    OUTLINED_FUNCTION_3_62();
    v6 = IncomingCallCombinedSubtitleBadgeView.badgeSizeFitting(_:)();
    objc_msgSend(v5, sel_setBounds_, 0.0, 0.0, v6, v7);
    v8 = v5;
    objc_msgSend(v3, sel_frame);
    v9 = CGRectGetMaxX(v25)
       + *(double *)&v1[OBJC_IVAR____TtC15ConversationKit37IncomingCallCombinedSubtitleBadgeView_horizontalSpacing];
    objc_msgSend(v8, sel_frame);
    v11 = v9 + v10 * 0.5;
    OUTLINED_FUNCTION_3_62();
    objc_msgSend(v8, sel_setCenter_, v11, CGRectGetHeight(v26) * 0.5);

  }
  if (objc_msgSend(v1, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD645380;
    *(_QWORD *)(inited + 32) = v3;
    *(_QWORD *)(inited + 40) = v4;
    v21 = inited;
    OUTLINED_FUNCTION_26_0();
    v13 = v21;
    v22 = MEMORY[0x1E0DEE9D8];
    v14 = *(void **)(v13 + 32);
    if (v14)
    {
      v15 = v14;
      v16 = v4;
      MEMORY[0x1C3B7301C](v3);
      if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        OUTLINED_FUNCTION_1_9();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      OUTLINED_FUNCTION_26_0();
    }
    else
    {
      v17 = v4;
      v18 = v3;
    }
    v19 = *(void **)(v13 + 40);
    if (v19)
    {
      v20 = v19;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        OUTLINED_FUNCTION_1_9();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      OUTLINED_FUNCTION_26_0();
    }
    swift_bridgeObjectRelease();
    specialized Sequence.forEach(_:)(v22, v1);
    swift_bridgeObjectRelease();
  }
}

id BrandedIconView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void IncomingCallCombinedSubtitleBadgeView.init(frame:)()
{
  ConversationControlsButton.init(frame:)();
}

unint64_t lazy protocol witness table accessor for type URL and conformance URL()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type URL and conformance URL;
  if (!lazy protocol witness table cache variable for type URL and conformance URL)
  {
    v1 = type metadata accessor for URL();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL);
  }
  return result;
}

uint64_t type metadata accessor for BrandedIconView()
{
  return objc_opt_self();
}

uint64_t method lookup function for BrandedIconView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BrandedIconView.__allocating_init(image:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for BrandedIconView.Constants()
{
  return &type metadata for BrandedIconView.Constants;
}

uint64_t type metadata accessor for IncomingCallCombinedSubtitleBadgeView()
{
  return objc_opt_self();
}

uint64_t method lookup function for IncomingCallCombinedSubtitleBadgeView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IncomingCallCombinedSubtitleBadgeView.__allocating_init(brandedIcon:multiSimBadge:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t GradientView.colors.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_bridgeObjectRetain();
}

uint64_t key path getter for GradientView.colors : GradientView@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit12GradientView_colors);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

void key path setter for GradientView.colors : GradientView()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  GradientView.colors.setter(v0);
}

void GradientView.colors.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit12GradientView_colors);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  swift_bridgeObjectRelease();
  GradientView.updateGradient()();
}

void GradientView.updateGradient()()
{
  char *v0;
  void *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = (void *)GradientView.gradientLayer.getter();
  v3 = &v0[OBJC_IVAR____TtC15ConversationKit12GradientView_colors];
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  if (!(*(_QWORD *)v3 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    outlined bridged method (mbnn) of @objc CAGradientLayer.colors.setter(v7, v2);

    objc_msgSend(v1, sel_setNeedsDisplay);
    return;
  }
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter();
  if (!v5)
    goto LABEL_13;
LABEL_3:
  v15 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = 0;
    v7 = v15;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1C3B73D18](v6, v4);
      else
        v8 = *(id *)(v4 + 8 * v6 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, sel_CGColor, (_QWORD)v13);
      type metadata accessor for CGColorRef(0);
      v14 = v11;

      *(_QWORD *)&v13 = v10;
      v15 = v7;
      v12 = *(_QWORD *)(v7 + 16);
      if (v12 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v7 = v15;
      }
      ++v6;
      *(_QWORD *)(v7 + 16) = v12 + 1;
      outlined init with take of Any(&v13, (_OWORD *)(v7 + 32 * v12 + 32));
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
}

void GradientView.colors.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void GradientView.colors.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    GradientView.updateGradient()();
  OUTLINED_FUNCTION_0();
}

uint64_t GradientView.interpolations.getter()
{
  void *v0;

  v0 = (void *)GradientView.gradientLayer.getter();
  return outlined bridged method (ob) of @objc CAGradientLayer.interpolations.getter(v0);
}

void key path setter for GradientView.interpolations : GradientView()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  GradientView.interpolations.setter(v0);
}

void GradientView.interpolations.setter(uint64_t a1)
{
  void *v2;
  NSArray v3;

  v2 = (void *)GradientView.gradientLayer.getter();
  if (a1)
  {
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CAMediaTimingFunction);
    v3.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v3.super.isa = 0;
  }
  objc_msgSend(v2, sel_setInterpolations_, v3.super.isa);

  OUTLINED_FUNCTION_0_77(v3.super.isa);
}

uint64_t GradientView.gradientLayer.getter()
{
  void *v0;
  id v1;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_layer);
  objc_opt_self();
  result = swift_dynamicCastObjCClass();
  if (!result)
  {

    result = OUTLINED_FUNCTION_3_63();
    __break(1u);
  }
  return result;
}

void GradientView.interpolations.modify(uint64_t *a1)
{
  uint64_t v1;
  void *v3;

  a1[1] = v1;
  v3 = (void *)GradientView.gradientLayer.getter();
  *a1 = outlined bridged method (ob) of @objc CAGradientLayer.interpolations.getter(v3);
  OUTLINED_FUNCTION_0();
}

void GradientView.interpolations.modify(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    GradientView.interpolations.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    GradientView.interpolations.setter(*a1);
    OUTLINED_FUNCTION_0();
  }
}

double GradientView.startPoint.getter()
{
  return GradientView.startPoint.getter((SEL *)&selRef_startPoint);
}

void key path setter for GradientView.startPoint : GradientView(double *a1)
{
  GradientView.startPoint.setter(*a1, a1[1]);
}

void GradientView.startPoint.setter(double a1, double a2)
{
  GradientView.startPoint.setter((SEL *)&selRef_setStartPoint_, a1, a2);
}

void GradientView.startPoint.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  objc_msgSend((id)OUTLINED_FUNCTION_5_58(a1), sel_startPoint);
  OUTLINED_FUNCTION_1_64();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_12_1();
}

void GradientView.startPoint.modify(double *a1, uint64_t a2)
{
  GradientView.startPoint.modify(a1, a2, (SEL *)&selRef_setStartPoint_);
}

double GradientView.endPoint.getter()
{
  return GradientView.startPoint.getter((SEL *)&selRef_endPoint);
}

double GradientView.startPoint.getter(SEL *a1)
{
  double v1;

  objc_msgSend((id)GradientView.gradientLayer.getter(), *a1);
  OUTLINED_FUNCTION_1_64();
  return v1;
}

void key path setter for GradientView.endPoint : GradientView(double *a1)
{
  GradientView.endPoint.setter(*a1, a1[1]);
}

void GradientView.endPoint.setter(double a1, double a2)
{
  GradientView.startPoint.setter((SEL *)&selRef_setEndPoint_, a1, a2);
}

void GradientView.startPoint.setter(SEL *a1, double a2, double a3)
{
  void *v6;

  v6 = (void *)GradientView.gradientLayer.getter();
  objc_msgSend(v6, *a1, a2, a3);
  OUTLINED_FUNCTION_0_77(v6);
}

void GradientView.endPoint.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  objc_msgSend((id)OUTLINED_FUNCTION_5_58(a1), sel_endPoint);
  OUTLINED_FUNCTION_1_64();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_12_1();
}

void GradientView.endPoint.modify(double *a1, uint64_t a2)
{
  GradientView.startPoint.modify(a1, a2, (SEL *)&selRef_setEndPoint_);
}

void GradientView.startPoint.modify(double *a1, uint64_t a2, SEL *a3)
{
  double v4;
  double v5;
  void *v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = (void *)GradientView.gradientLayer.getter();
  objc_msgSend(v6, *a3, v4, v5);
  OUTLINED_FUNCTION_0_77(v6);
}

id GradientView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id GradientView.init()()
{
  void *v0;

  return objc_msgSend(v0, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
}

id GradientView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id GradientView.init(frame:)()
{
  uint64_t v0;
  uint64_t ObjectType;
  double v2;
  objc_super *v3;
  SEL v4;
  id v5;
  uint64_t v7;

  OUTLINED_FUNCTION_17_7();
  ObjectType = swift_getObjectType();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit12GradientView_colors) = MEMORY[0x1E0DEE9D8];
  v7 = ObjectType;
  v2 = OUTLINED_FUNCTION_15_0();
  v5 = objc_msgSendSuper2(v3, v4, v2, v0, v7);
  GradientView.updateGradient()();

  return v5;
}

id GradientView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void GradientView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit12GradientView_colors] = MEMORY[0x1E0DEE9D8];

  OUTLINED_FUNCTION_3_63();
  __break(1u);
}

void static GradientView.layerClass.getter()
{
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CAGradientLayer);
}

id GradientView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t outlined bridged method (ob) of @objc CAGradientLayer.interpolations.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_interpolations);

  if (!v2)
    return 0;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CAMediaTimingFunction);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_1BD189068(uint64_t *a1@<X8>)
{
  *a1 = GradientView.interpolations.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD189090(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(double *)a1 = GradientView.startPoint.getter();
  *(_QWORD *)(a1 + 8) = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD1890B8(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(double *)a1 = GradientView.endPoint.getter();
  *(_QWORD *)(a1 + 8) = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for GradientView()
{
  return objc_opt_self();
}

void ConversationLocalParticipantStateProvider.localParticipant.getter()
{
  CurrentValueSubject.value.getter();
  OUTLINED_FUNCTION_0();
}

void ConversationLocalParticipantStateProvider.localParticipantPublisher.getter()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Participant, Never>>);
  OUTLINED_FUNCTION_13_47();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Participant, Never>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type CurrentValueSubject<Participant, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Participant, Never>, MEMORY[0x1E0C95FB8]);
  lazy protocol witness table accessor for type Participant and conformance Participant();
  OUTLINED_FUNCTION_5_59();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<Participant, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<Participant, Never>>, MEMORY[0x1E0C958E0]);
  OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_65_1();
}

unint64_t lazy protocol witness table accessor for type Participant and conformance Participant()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Participant and conformance Participant;
  if (!lazy protocol witness table cache variable for type Participant and conformance Participant)
  {
    v1 = type metadata accessor for Participant(255);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Participant, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant and conformance Participant);
  }
  return result;
}

void ConversationLocalParticipantStateProvider.cameraEffectsState.getter()
{
  CurrentValueSubject.value.getter();
  OUTLINED_FUNCTION_0();
}

void ConversationLocalParticipantStateProvider.cameraEffectsStatePublisher.getter()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<LocalParticipantCameraEffectsState, Never>>);
  OUTLINED_FUNCTION_13_47();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<LocalParticipantCameraEffectsState, Never>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type CurrentValueSubject<LocalParticipantCameraEffectsState, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<LocalParticipantCameraEffectsState, Never>, MEMORY[0x1E0C95FB8]);
  lazy protocol witness table accessor for type LocalParticipantCameraEffectsState and conformance LocalParticipantCameraEffectsState();
  OUTLINED_FUNCTION_5_59();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<LocalParticipantCameraEffectsState, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<LocalParticipantCameraEffectsState, Never>>, MEMORY[0x1E0C958E0]);
  OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_65_1();
}

unint64_t lazy protocol witness table accessor for type LocalParticipantCameraEffectsState and conformance LocalParticipantCameraEffectsState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalParticipantCameraEffectsState and conformance LocalParticipantCameraEffectsState;
  if (!lazy protocol witness table cache variable for type LocalParticipantCameraEffectsState and conformance LocalParticipantCameraEffectsState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LocalParticipantCameraEffectsState, &type metadata for LocalParticipantCameraEffectsState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalParticipantCameraEffectsState and conformance LocalParticipantCameraEffectsState);
  }
  return result;
}

uint64_t key path getter for ConversationLocalParticipantStateProvider.stateManager : ConversationLocalParticipantStateProvider@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 32;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v4);
  v6 = *(_QWORD *)(v3 + 40);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t key path setter for ConversationLocalParticipantStateProvider.stateManager : ConversationLocalParticipantStateProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v2;
  return swift_unknownObjectWeakAssign();
}

void ConversationLocalParticipantStateProvider.stateManager.getter()
{
  OUTLINED_FUNCTION_0_78();
  OUTLINED_FUNCTION_26();
}

void ConversationLocalParticipantStateProvider.stateManager.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 40) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void ConversationLocalParticipantStateProvider.stateManager.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  OUTLINED_FUNCTION_26();
}

void (*sub_1BD189488(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  return IDSCapabilitiesChecker.delegate.modify;
}

void ConversationLocalParticipantStateProvider.__allocating_init(localParticipant:localParticipantCameraEffectsState:)(uint64_t a1, _DWORD *a2)
{
  swift_allocObject();
  ConversationLocalParticipantStateProvider.init(localParticipant:localParticipantCameraEffectsState:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

void ConversationLocalParticipantStateProvider.init(localParticipant:localParticipantCameraEffectsState:)(uint64_t a1, _DWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _DWORD v10[4];

  v3 = v2;
  v6 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[5] = 0;
  swift_unknownObjectWeakInit();
  outlined init with copy of Participant(a1, (uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Participant, Never>);
  OUTLINED_FUNCTION_14_0();
  v3[2] = CurrentValueSubject.init(_:)();
  v10[3] = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<LocalParticipantCameraEffectsState, Never>);
  OUTLINED_FUNCTION_14_0();
  v9 = CurrentValueSubject.init(_:)();
  outlined destroy of Participant(a1);
  v3[3] = v9;
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall ConversationLocalParticipantStateProvider.toggleCinematicFramingEffectState()()
{
  OUTLINED_FUNCTION_0_78();
  OUTLINED_FUNCTION_26();
}

void sub_1BD1895E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_2_67();
    OUTLINED_FUNCTION_3_64(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ConversationLocalParticipantStateProvider.toggleCameraBlurEffectState()()
{
  OUTLINED_FUNCTION_0_78();
  OUTLINED_FUNCTION_26();
}

void sub_1BD18961C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_2_67();
    OUTLINED_FUNCTION_3_64(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ConversationLocalParticipantStateProvider.toggleStudioLightEffectState()()
{
  OUTLINED_FUNCTION_0_78();
  OUTLINED_FUNCTION_26();
}

void sub_1BD189654(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_2_67();
    OUTLINED_FUNCTION_3_64(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ConversationLocalParticipantStateProvider.toggleReactionsEffectState()()
{
  OUTLINED_FUNCTION_0_78();
  OUTLINED_FUNCTION_26();
}

void sub_1BD18968C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_2_67();
    OUTLINED_FUNCTION_3_64(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32));
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t ConversationLocalParticipantStateProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 32);
  return v0;
}

uint64_t ConversationLocalParticipantStateProvider.__deallocating_deinit()
{
  ConversationLocalParticipantStateProvider.deinit();
  return swift_deallocClassInstance();
}

void protocol witness for ConversationLocalParticipantStateProviding.localParticipantPublisher.getter in conformance ConversationLocalParticipantStateProvider()
{
  ConversationLocalParticipantStateProvider.localParticipantPublisher.getter();
}

void protocol witness for ConversationLocalParticipantStateProviding.localParticipant.getter in conformance ConversationLocalParticipantStateProvider()
{
  ConversationLocalParticipantStateProvider.localParticipant.getter();
}

void protocol witness for ConversationLocalParticipantStateProviding.cameraEffectsStatePublisher.getter in conformance ConversationLocalParticipantStateProvider()
{
  ConversationLocalParticipantStateProvider.cameraEffectsStatePublisher.getter();
}

void protocol witness for ConversationLocalParticipantStateProviding.cameraEffectsState.getter in conformance ConversationLocalParticipantStateProvider()
{
  ConversationLocalParticipantStateProvider.cameraEffectsState.getter();
}

void protocol witness for ConversationLocalParticipantStateProviding.toggleCinematicFramingEffectState() in conformance ConversationLocalParticipantStateProvider()
{
  ConversationLocalParticipantStateProvider.toggleCinematicFramingEffectState()();
}

void protocol witness for ConversationLocalParticipantStateProviding.toggleCameraBlurEffectState() in conformance ConversationLocalParticipantStateProvider()
{
  ConversationLocalParticipantStateProvider.toggleCameraBlurEffectState()();
}

void protocol witness for ConversationLocalParticipantStateProviding.toggleStudioLightEffectState() in conformance ConversationLocalParticipantStateProvider()
{
  ConversationLocalParticipantStateProvider.toggleStudioLightEffectState()();
}

void protocol witness for ConversationLocalParticipantStateProviding.toggleReactionsEffectState() in conformance ConversationLocalParticipantStateProvider()
{
  ConversationLocalParticipantStateProvider.toggleReactionsEffectState()();
}

void ConversationLocalParticipantStateProvider.onLocalParticipantChanged(_:)()
{
  CurrentValueSubject.send(_:)();
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationLocalParticipantStateProvider.onCameraEffectsStateChanged(_:)()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t dispatch thunk of ConversationLocalParticipantStateProviding.localParticipant.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConversationLocalParticipantStateProviding.cameraEffectsState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ConversationLocalParticipantStateProviding.toggleCinematicFramingEffectState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ConversationLocalParticipantStateProviding.toggleCameraBlurEffectState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ConversationLocalParticipantStateProviding.toggleStudioLightEffectState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ConversationLocalParticipantStateProviding.toggleReactionsEffectState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ConversationLocalParticipantStateManaging.toggleCameraBlurEffectState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConversationLocalParticipantStateManaging.toggleReactionsEffectState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata accessor for ConversationLocalParticipantStateProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationLocalParticipantStateProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationLocalParticipantStateProvider.__allocating_init(localParticipant:localParticipantCameraEffectsState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

NSLayoutConstraint __swiftcall NSLayoutConstraint.withPriority(_:)(__C::UILayoutPriority a1)
{
  void *v1;
  id v3;

  objc_msgSend(v1, sel_setPriority_, *(double *)&a1.rawValue);
  return (NSLayoutConstraint)v3;
}

void NSLayoutConstraint.setConstant(_:scaledToFont:)(void *a1, double a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v3 = objc_msgSend(a1, sel_fontDescriptor);
  v4 = objc_msgSend(v3, sel_objectForKey_, *MEMORY[0x1E0DC13B8]);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    type metadata accessor for UIFontTextStyle(0);
    v5 = swift_dynamicCast();
    if ((v5 & 1) != 0)
    {
      v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, v8);
      objc_msgSend(v6, sel_scaledValueForValue_, a2);

      OUTLINED_FUNCTION_0_79(v7, sel_setConstant_);
      return;
    }
  }
  else
  {
    v5 = outlined destroy of Any?((uint64_t)v10);
  }
  OUTLINED_FUNCTION_0_79(v5, sel_setConstant_);
}

id ScreeningTranscriptLabel.font.getter()
{
  id *v0;

  return *v0;
}

void ScreeningTranscriptLabel.text.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void ScreeningTranscriptLabel.lowConfidenceText.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

uint64_t ScreeningTranscriptLabel.lowConfidenceRanges.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ScreeningTranscriptLabel.underlineColor.getter()
{
  return swift_retain();
}

id ScreeningTranscriptLabel.textSize.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_pointSize);
}

uint64_t ScreeningTranscriptLabel.body.getter@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t KeyPath;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[4];
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = OUTLINED_FUNCTION_0_80();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = type metadata accessor for AttributedString();
  MEMORY[0x1E0C80A78](v6);
  ScreeningTranscriptLabel.attributedString.getter((uint64_t)&v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v8 = Text.init(_:)();
  v26 = v9;
  v27 = v8;
  v25 = v10;
  v28 = v11;
  KeyPath = swift_getKeyPath();
  v13 = *v1;
  v14 = Font.init(_:)();
  v15 = swift_getKeyPath();
  v16 = static Alignment.center.getter();
  v18 = v17;
  outlined init with copy of ScreeningTranscriptLabel((uint64_t)v1, (uint64_t)&v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v19 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v20 = swift_allocObject();
  result = outlined init with take of ScreeningTranscriptLabel((uint64_t)&v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v20 + v19);
  v22 = v28;
  v23 = v26;
  *(_QWORD *)a1 = v27;
  *(_QWORD *)(a1 + 8) = v23;
  *(_BYTE *)(a1 + 16) = v25 & 1;
  *(_QWORD *)(a1 + 24) = v22;
  *(_QWORD *)(a1 + 32) = closure #1 in ScreeningTranscriptLabel.body.getter;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = KeyPath;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 1;
  *(_QWORD *)(a1 + 72) = v15;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = partial apply for closure #1 in closure #2 in ScreeningTranscriptLabel.body.getter;
  *(_QWORD *)(a1 + 96) = v20;
  *(_QWORD *)(a1 + 104) = v16;
  *(_QWORD *)(a1 + 112) = v18;
  return result;
}

uint64_t type metadata accessor for ScreeningTranscriptLabel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ScreeningTranscriptLabel;
  if (!type metadata singleton initialization cache for ScreeningTranscriptLabel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ScreeningTranscriptLabel.attributedString.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  void (*v51)(void);
  char *v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, _QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char v82[40];

  v3 = type metadata accessor for Text.LineStyle.Pattern();
  MEMORY[0x1E0C80A78](v3);
  v77 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Text.LineStyle?);
  MEMORY[0x1E0C80A78](v5);
  v76 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (lower: AttributedString.Index, upper: AttributedString.Index));
  v7 = MEMORY[0x1E0C80A78](v75);
  v71 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v74 = (char *)&v61 - v9;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<AttributedString.Index>);
  v10 = MEMORY[0x1E0C80A78](v73);
  v72 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v70 = (uint64_t)&v61 - v12;
  v13 = type metadata accessor for AttributedString.Index();
  v69 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v81 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v61 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v61 - v19;
  v21 = type metadata accessor for RedactionReasons();
  v80 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v79 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v61 - v24;
  v64 = type metadata accessor for AttributedString.CharacterView();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v27 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v28);
  v78 = *(_QWORD *)(v1 + 8);
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  v29 = v1;
  AttributedString.init(_:attributes:)();
  v78 = a1;
  AttributedString.characters.getter();
  type metadata accessor for ScreeningTranscriptLabel();
  specialized Environment.wrappedValue.getter();
  v30 = (void (*)(uint64_t))MEMORY[0x1E0CDA008];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons, (void (*)(uint64_t))MEMORY[0x1E0CDA008]);
  v31 = v79;
  dispatch thunk of SetAlgebra.init()();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons, v30);
  v32 = v31;
  v33 = dispatch thunk of static Equatable.== infix(_:_:)();
  v34 = *(void (**)(char *, uint64_t))(v80 + 8);
  v34(v32, v21);
  v34(v25, v21);
  if ((v33 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v27, v64);
  v35 = *(_QWORD *)(*(_QWORD *)(v29 + 40) + 16);
  if (!v35)
    return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v27, v64);
  v68 = v29;
  v62 = swift_bridgeObjectRetain();
  v36 = (_QWORD *)(v62 + 40);
  v66 = v20;
  v67 = v18;
  v65 = v27;
  v37 = v81;
  while (1)
  {
    v39 = *(v36 - 1);
    v38 = *v36;
    AttributedString.CharacterView.startIndex.getter();
    result = AttributedString.CharacterView._index(_:offsetBy:)();
    if (__OFADD__(v39, v38))
      break;
    AttributedString.CharacterView._index(_:offsetBy:)();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AttributedString.Index and conformance AttributedString.Index, (void (*)(uint64_t))MEMORY[0x1E0CAF1B0]);
    result = dispatch thunk of static Comparable.<= infix(_:_:)();
    if ((result & 1) == 0)
      goto LABEL_10;
    v79 = (char *)(v36 + 2);
    v41 = v74;
    v42 = v75;
    v43 = &v74[*(int *)(v75 + 48)];
    v44 = v69;
    v45 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
    v45(v74, v18, v13);
    v45(v43, v37, v13);
    v46 = *(int *)(v42 + 48);
    v80 = v35;
    v47 = v71;
    v48 = &v71[v46];
    v45(v71, v41, v13);
    v45(v48, v43, v13);
    v49 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
    v50 = (uint64_t)v72;
    v49(v72, v47, v13);
    v51 = *(void (**)(void))(v44 + 8);
    ((void (*)(char *, uint64_t))v51)(v48, v13);
    v52 = &v47[*(int *)(v42 + 48)];
    v49(v47, v41, v13);
    v49(v52, v43, v13);
    v49((char *)(v50 + *(int *)(v73 + 36)), v52, v13);
    ((void (*)(char *, uint64_t))v51)(v47, v13);
    v53 = v70;
    outlined init with take of Range<AttributedString.Index>(v50, v70);
    KeyPath = swift_getKeyPath();
    *(&v61 - 2) = MEMORY[0x1E0C80A78](KeyPath);
    swift_getKeyPath();
    static Text.LineStyle.Pattern.solid.getter();
    swift_retain();
    v55 = (uint64_t)v76;
    Text.LineStyle.init(pattern:color:)();
    v56 = type metadata accessor for Text.LineStyle();
    __swift_storeEnumTagSinglePayload(v55, 0, 1, v56);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Range<AttributedString.Index> and conformance Range<A>, &demangling cache variable for type metadata for Range<AttributedString.Index>);
    v57 = v66;
    v58 = (void (*)(char *, _QWORD))AttributedString.subscript.modify();
    lazy protocol witness table accessor for type AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute and conformance AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute();
    v27 = v65;
    AttributedSubstring.subscript.setter();
    v58(v82, 0);
    v59 = v53;
    v60 = v80;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v59, &demangling cache variable for type metadata for Range<AttributedString.Index>);
    ((void (*)(char *, uint64_t))v51)(v37, v13);
    v18 = v67;
    v51();
    ((void (*)(char *, uint64_t))v51)(v57, v13);
    v36 = v79;
    v35 = v60 - 1;
    if (!v35)
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v27, v64);
    }
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t closure #1 in ScreeningTranscriptLabel.body.getter()
{
  return Transaction.animation.setter();
}

uint64_t closure #1 in closure #2 in ScreeningTranscriptLabel.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v15[2] = a3;
  v5 = type metadata accessor for GeometryProxy();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = type metadata accessor for ScreeningTranscriptLabel();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v15[3] = *(_QWORD *)(a2 + 40);
  v15[1] = swift_getKeyPath();
  outlined init with copy of ScreeningTranscriptLabel(a2, (uint64_t)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = (v10 + *(unsigned __int8 *)(v6 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  outlined init with take of ScreeningTranscriptLabel((uint64_t)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v11);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [_NSRange]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [_NSRange] and conformance [A], &demangling cache variable for type metadata for [_NSRange]);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type _NSRange and conformance _NSRange, type metadata accessor for _NSRange);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD90E0]);
  return ForEach<>.init(_:id:content:)();
}

void closure #1 in closure #1 in closure #2 in ScreeningTranscriptLabel.body.getter(Swift::Int *a1@<X0>, Class *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  Class v12;
  uint64_t v13;
  UIFont v14;
  Swift::OpaquePointer v15;
  __C::_NSRange v16;
  Swift::String v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v20[1] = a3;
  v33 = a4;
  v31 = type metadata accessor for BorderlessButtonMenuStyle();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v27 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<Color, Text>);
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v22 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.menuStyle<A>(_:)>>.0);
  v25 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v23 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>);
  MEMORY[0x1E0C80A78](v21);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = a1[1];
  if (one-time initialization token for shared != -1)
    swift_once();
  v13 = (uint64_t)a2[1];
  v12 = a2[2];
  v14.super.isa = *a2;
  v15._rawValue = a2[5];
  GeometryProxy.size.getter();
  v16.location = v10;
  v16.length = v11;
  v17._countAndFlagsBits = v13;
  v17._object = v12;
  TextLayoutEngine.frame(for:text:font:lowConfidenceRanges:viewSize:)(v16, v17, v14, v15, (CGSize)__PAIR128__(v19, v18));
}

uint64_t closure #1 in closure #1 in closure #1 in closure #2 in ScreeningTranscriptLabel.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  result = Text.init<A>(_:)();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t closure #2 in closure #1 in closure #1 in closure #2 in ScreeningTranscriptLabel.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static Color.clear.getter();
  *a1 = result;
  return result;
}

uint64_t key path index equality operator for (KeyPath<AttributeScopes.SwiftUIAttributes, AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute>)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyPath<AttributeScopes.SwiftUIAttributes, AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute>);
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t key path index hash operator for (KeyPath<AttributeScopes.SwiftUIAttributes, AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute>)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyPath<AttributeScopes.SwiftUIAttributes, AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute>);
  return dispatch thunk of Hashable.hashValue.getter();
}

void key path getter for AttributeDynamicLookup.subscript<A>(dynamicMember:) : AttributeDynamicLookupAttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute()
{
  lazy protocol witness table accessor for type AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute and conformance AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute();
  AttributeDynamicLookup.subscript.getter();
  __break(1u);
}

uint64_t ScreeningTranscriptLabel.init(font:text:lowConfidenceText:lowConfidenceRanges:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;

  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  static Color.white.getter();
  OUTLINED_FUNCTION_6_48();
  OUTLINED_FUNCTION_10_54();
  a7[6] = v7;
  v9 = OUTLINED_FUNCTION_0_80();
  v10 = (_QWORD *)((char *)a7 + *(int *)(v9 + 36));
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  OUTLINED_FUNCTION_4_62();
  v11 = (_QWORD *)((char *)a7 + *(int *)(v9 + 40));
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  return OUTLINED_FUNCTION_1_65();
}

uint64_t static ScreeningTranscriptLabel_Previews.previews.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;

  type metadata accessor for UIFont();
  v3 = static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(*MEMORY[0x1E0DC4B50], 0, 1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<_NSRange>);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BD6441D0;
  *(_OWORD *)(v4 + 32) = xmmword_1BD64CF40;
  *a1 = v3;
  a1[1] = 0xD000000000000024;
  a1[2] = 0x80000001BD678540;
  a1[3] = 0xD000000000000018;
  a1[4] = 0x80000001BD678570;
  a1[5] = v4;
  static Color.white.getter();
  OUTLINED_FUNCTION_6_48();
  OUTLINED_FUNCTION_10_54();
  a1[6] = v1;
  v5 = OUTLINED_FUNCTION_0_80();
  v6 = (_QWORD *)((char *)a1 + *(int *)(v5 + 36));
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  OUTLINED_FUNCTION_4_62();
  v7 = (_QWORD *)((char *)a1 + *(int *)(v5 + 40));
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  return OUTLINED_FUNCTION_1_65();
}

uint64_t protocol witness for static _PreviewProvider._previews.getter in conformance ScreeningTranscriptLabel_Previews()
{
  lazy protocol witness table accessor for type ScreeningTranscriptLabel_Previews and conformance ScreeningTranscriptLabel_Previews();
  return static PreviewProvider._previews.getter();
}

uint64_t protocol witness for static _PreviewProvider._platform.getter in conformance ScreeningTranscriptLabel_Previews()
{
  lazy protocol witness table accessor for type ScreeningTranscriptLabel_Previews and conformance ScreeningTranscriptLabel_Previews();
  return static PreviewProvider._platform.getter();
}

uint64_t key path getter for EnvironmentValues.lineLimit : EnvironmentValues, serialized@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t key path setter for EnvironmentValues.lineLimit : EnvironmentValues, serialized()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t outlined init with copy of ScreeningTranscriptLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScreeningTranscriptLabel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD18ADE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_0_80() - 8) + 80);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (OUTLINED_FUNCTION_121_0() == 1)
  {
    v2 = type metadata accessor for RedactionReasons();
    OUTLINED_FUNCTION_75(v2);
  }
  else
  {
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = type metadata accessor for DynamicTypeSize();
    OUTLINED_FUNCTION_17_1(v3);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t outlined init with take of ScreeningTranscriptLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScreeningTranscriptLabel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in closure #2 in ScreeningTranscriptLabel.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_0_80() - 8) + 80);
  return closure #1 in closure #2 in ScreeningTranscriptLabel.body.getter(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t associated type witness table accessor for View.Body : View in ScreeningTranscriptLabel()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ScreeningTranscriptLabel_Previews and conformance ScreeningTranscriptLabel_Previews()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreeningTranscriptLabel_Previews and conformance ScreeningTranscriptLabel_Previews;
  if (!lazy protocol witness table cache variable for type ScreeningTranscriptLabel_Previews and conformance ScreeningTranscriptLabel_Previews)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreeningTranscriptLabel_Previews, &type metadata for ScreeningTranscriptLabel_Previews);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreeningTranscriptLabel_Previews and conformance ScreeningTranscriptLabel_Previews);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreeningTranscriptLabel_Previews and conformance ScreeningTranscriptLabel_Previews;
  if (!lazy protocol witness table cache variable for type ScreeningTranscriptLabel_Previews and conformance ScreeningTranscriptLabel_Previews)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreeningTranscriptLabel_Previews, &type metadata for ScreeningTranscriptLabel_Previews);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreeningTranscriptLabel_Previews and conformance ScreeningTranscriptLabel_Previews);
  }
  return result;
}

uint64_t associated type witness table accessor for PreviewProvider.Previews : View in ScreeningTranscriptLabel_Previews()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for ScreeningTranscriptLabel(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = a2[4];
    *((_QWORD *)a1 + 3) = a2[3];
    *((_QWORD *)a1 + 4) = v9;
    v10 = a2[6];
    v11 = *(int *)(a3 + 36);
    v12 = &a1[v11];
    v13 = (char **)((char *)a2 + v11);
    *((_QWORD *)a1 + 5) = a2[5];
    *((_QWORD *)a1 + 6) = v10;
    v14 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = type metadata accessor for RedactionReasons();
      (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    }
    else
    {
      *(_QWORD *)v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v16 = *(int *)(a3 + 40);
    v17 = &a1[v16];
    v18 = (char **)((char *)a2 + v16);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *(_QWORD *)v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ScreeningTranscriptLabel(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for RedactionReasons();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = (char *)a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = type metadata accessor for DynamicTypeSize();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *initializeWithCopy for ScreeningTranscriptLabel(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  v9 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v9;
  v10 = *(int *)(a3 + 36);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  a1[6] = *(_QWORD *)(a2 + 48);
  v13 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = type metadata accessor for RedactionReasons();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v15 = *(int *)(a3 + 40);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ScreeningTranscriptLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 36);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v9, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for RedactionReasons();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = *(int *)(a3 + 40);
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v13, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ScreeningTranscriptLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 36);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 40);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

void **assignWithTake for ScreeningTranscriptLabel(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *a1;
  *a1 = *a2;

  v7 = a2[2];
  a1[1] = a2[1];
  a1[2] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_release();
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 36);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1 + v9, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = type metadata accessor for RedactionReasons();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    v14 = *(int *)(a3 + 40);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1 + v14, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreeningTranscriptLabel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD18B8A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 36);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
      v10 = *(int *)(a3 + 40);
    }
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ScreeningTranscriptLabel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1BD18B94C(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 36);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
      v10 = *(int *)(a4 + 40);
    }
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for ScreeningTranscriptLabel()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Environment<RedactionReasons>.Content(319, (unint64_t *)&lazy cache variable for type metadata for Environment<RedactionReasons>.Content, (void (*)(uint64_t))MEMORY[0x1E0CDA008]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Environment<RedactionReasons>.Content(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, (void (*)(uint64_t))MEMORY[0x1E0CD9958]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void type metadata accessor for Environment<RedactionReasons>.Content(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = type metadata accessor for Environment.Content();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_0();
}

ValueMetadata *type metadata accessor for ScreeningTranscriptLabel_Previews()
{
  return &type metadata for ScreeningTranscriptLabel_Previews;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], _NSRange, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], _NSRange, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], _NSRange, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>>>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], _NSRange, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>>>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<GeometryReader<ForEach<[_NSRange], _NSRange, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>>>> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<GeometryReader<ForEach<[_NSRange], _NSRange, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>>>>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], _NSRange, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Text, _TransactionModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _TransactionModifier>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _TransactionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Text, _TransactionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _TransactionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _TransactionModifier>);
    v2[0] = MEMORY[0x1E0CDDD58];
    v2[1] = MEMORY[0x1E0CDBC38];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _TransactionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void sub_1BD18BD10()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreeningTranscriptLabel and conformance ScreeningTranscriptLabel, (void (*)(uint64_t))type metadata accessor for ScreeningTranscriptLabel);
}

uint64_t sub_1BD18BD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = OUTLINED_FUNCTION_0_80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = *(_QWORD *)(v2 + 64);
  v4 = type metadata accessor for GeometryProxy();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v7 = v0 + v3 + *(int *)(v1 + 36);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = type metadata accessor for RedactionReasons();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (OUTLINED_FUNCTION_121_0() == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize();
    OUTLINED_FUNCTION_75(v9);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v11 + v6) & ~v6), v4);
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in closure #2 in ScreeningTranscriptLabel.body.getter(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(OUTLINED_FUNCTION_0_80() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeometryProxy() - 8) + 80);
  closure #1 in closure #1 in closure #2 in ScreeningTranscriptLabel.body.getter(a1, (Class *)(v2 + v6), v2 + ((v6 + v7 + v8) & ~v8), a2);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD8D70]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  _QWORD v10[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Menu<Color, Text>);
    v3 = type metadata accessor for BorderlessButtonMenuStyle();
    v4 = (void (*)(uint64_t))MEMORY[0x1E0CDC788];
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<Color, Text> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<Color, Text>);
    v6 = v5;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type BorderlessButtonMenuStyle and conformance BorderlessButtonMenuStyle, v4);
    v10[2] = v2;
    v10[3] = v3;
    v10[4] = v6;
    v10[5] = v7;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Visibility> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Visibility>);
    v10[0] = OpaqueTypeConformance2;
    v10[1] = v9;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v10);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.menuStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #2 in ScreeningTranscriptLabel.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in closure #1 in closure #2 in ScreeningTranscriptLabel.body.getter(a1);
}

uint64_t outlined init with take of Range<AttributedString.Index>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<AttributedString.Index>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BD18C0D4()
{
  AttributeScopes.SwiftUIAttributes.underlineStyle.getter();
  __break(1u);
}

unint64_t lazy protocol witness table accessor for type AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute and conformance AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute and conformance AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute;
  if (!lazy protocol witness table cache variable for type AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute and conformance AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD8120], MEMORY[0x1E0CD8130]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute and conformance AttributeScopes.SwiftUIAttributes.UnderlineStyleAttribute);
  }
  return result;
}

uint64_t sub_1BD18C130()
{
  return 8;
}

uint64_t sub_1BD18C13C()
{
  return swift_release();
}

uint64_t sub_1BD18C144(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BD18C158(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t InCallControlsIgnoreLMIRequestsCell.ViewModel.ignoreLMIRequests.getter(char a1)
{
  return a1 & 1;
}

ConversationKit::InCallControlsIgnoreLMIRequestsCell::ViewModel __swiftcall InCallControlsIgnoreLMIRequestsCell.ViewModel.init(ignoreLMIRequests:)(Swift::Bool ignoreLMIRequests)
{
  return (ConversationKit::InCallControlsIgnoreLMIRequestsCell::ViewModel)ignoreLMIRequests;
}

uint64_t key path setter for InCallControlsIgnoreLMIRequestsCell.delegate : InCallControlsIgnoreLMIRequestsCell(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x78);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t InCallControlsIgnoreLMIRequestsCell.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t InCallControlsIgnoreLMIRequestsCell.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*InCallControlsIgnoreLMIRequestsCell.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id InCallControlsIgnoreLMIRequestsCell.ignoreLMIRequestsSwitch.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell____lazy_storage___ignoreLMIRequestsSwitch;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell____lazy_storage___ignoreLMIRequestsSwitch);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell____lazy_storage___ignoreLMIRequestsSwitch);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D18]), sel_init);
    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_didToggleMuteState_, 4096);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t InCallControlsIgnoreLMIRequestsCell.switchAccessory.getter@<X0>(uint64_t a1@<X8>)
{
  return InCallControlsIgnoreLMIRequestsCell.switchAccessory.getter(&demangling cache variable for type metadata for UICellAccessory?, &OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell____lazy_storage___switchAccessory, (uint64_t (*)(_QWORD))MEMORY[0x1E0DC1D38], (void (*)(uint64_t))closure #1 in InCallControlsIgnoreLMIRequestsCell.switchAccessory.getter, a1);
}

uint64_t closure #1 in InCallControlsIgnoreLMIRequestsCell.switchAccessory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UICellAccessory.Placement();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  InCallControlsIgnoreLMIRequestsCell.ignoreLMIRequestsSwitch.getter();
  v12 = (uint64_t (**)())&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                   + 48)];
  v13 = *MEMORY[0x1E0DC1C20];
  v14 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v7, v13, v14);
  *v12 = OUTLINED_FUNCTION_28_0;
  v12[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DC1D18], v4);
  v15 = type metadata accessor for UICellAccessory.LayoutDimension();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v15);
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t InCallControlsIgnoreLMIRequestsCell.cellContentConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return InCallControlsIgnoreLMIRequestsCell.switchAccessory.getter(&demangling cache variable for type metadata for UIListContentConfiguration?, &OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell____lazy_storage___cellContentConfiguration, (uint64_t (*)(_QWORD))MEMORY[0x1E0DC23A0], (void (*)(uint64_t))closure #1 in InCallControlsIgnoreLMIRequestsCell.cellContentConfiguration.getter, a1);
}

uint64_t InCallControlsIgnoreLMIRequestsCell.switchAccessory.getter@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];

  v11 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v16 = &v20[-v15];
  v17 = v5 + *a2;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of FeatureEligibility?(v17, (uint64_t)v16, a1);
  v18 = a3(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v16, v18);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v16, a1);
  a4(v5);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, a5, v18);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v18);
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Participant?((uint64_t)v14, v17, a1);
  return swift_endAccess();
}

uint64_t closure #1 in InCallControlsIgnoreLMIRequestsCell.cellContentConfiguration.getter(void *a1)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  void *v6;
  uint64_t v7;
  id v8;
  void (*v9)(_BYTE *, _QWORD);
  id v10;
  void (*v11)(_BYTE *, _QWORD);
  void (*v12)(_BYTE *, _QWORD);
  id v13;
  Class isa;
  _BYTE v16[32];
  Swift::String v17;

  MEMORY[0x1C3B73748]();
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v17._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD6786A0;
  v3._countAndFlagsBits = 0xD000000000000019;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v17);

  UIListContentConfiguration.text.setter();
  v6 = (void *)objc_opt_self();
  v7 = *MEMORY[0x1E0DC4A88];
  v8 = objc_msgSend(v6, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  UIFont.caseSensitive()();

  v9 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v9(v16, 0);
  if (one-time initialization token for tableViewCellTitleLabel != -1)
    swift_once();
  v10 = (id)static Colors.InCallControls.tableViewCellTitleLabel;
  v11 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v11(v16, 0);
  v12 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.adjustsFontForContentSizeCategory.setter();
  v12(v16, 0);
  v13 = objc_msgSend(v6, sel_preferredFontForTextStyle_, v7);
  isa = UIFont.caseSensitive()().super.isa;

  InCallControlsIgnoreLMIRequestsCell.verticalInset(_:scaledToFont:)(isa, 18.5);
  objc_msgSend(a1, sel_effectiveUserInterfaceLayoutDirection);
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

id InCallControlsIgnoreLMIRequestsCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id InCallControlsIgnoreLMIRequestsCell.init(frame:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  objc_super *v4;
  SEL v5;
  id v6;
  uint64_t v8;

  OUTLINED_FUNCTION_17_7();
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell_delegate);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell____lazy_storage___ignoreLMIRequestsSwitch) = 0;
  v1 = OUTLINED_FUNCTION_8_54();
  OUTLINED_FUNCTION_0_10(v1);
  v2 = OUTLINED_FUNCTION_9_49();
  OUTLINED_FUNCTION_0_10(v2);
  v8 = type metadata accessor for InCallControlsIgnoreLMIRequestsCell();
  v3 = OUTLINED_FUNCTION_15_0();
  v6 = objc_msgSendSuper2(v4, v5, v3, v0, v8);
  InCallControlsIgnoreLMIRequestsCell.configureContent()();

  return v6;
}

uint64_t type metadata accessor for InCallControlsIgnoreLMIRequestsCell()
{
  uint64_t result;

  result = type metadata singleton initialization cache for InCallControlsIgnoreLMIRequestsCell;
  if (!type metadata singleton initialization cache for InCallControlsIgnoreLMIRequestsCell)
    return swift_getSingletonMetadata();
  return result;
}

void InCallControlsIgnoreLMIRequestsCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void InCallControlsIgnoreLMIRequestsCell.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell_delegate);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit35InCallControlsIgnoreLMIRequestsCell____lazy_storage___ignoreLMIRequestsSwitch] = 0;
  v1 = OUTLINED_FUNCTION_8_54();
  OUTLINED_FUNCTION_0_10(v1);
  v2 = OUTLINED_FUNCTION_9_49();
  OUTLINED_FUNCTION_0_10(v2);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void InCallControlsIgnoreLMIRequestsCell.configureContent()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[5];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listGroupedCell()();
  v4 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  type metadata accessor for UIVibrancyEffect();
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  v5 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v5);
  MEMORY[0x1C3B7370C](v3);
  objc_msgSend(v0, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  v11[3] = type metadata accessor for UIListContentConfiguration();
  v11[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  InCallControlsIgnoreLMIRequestsCell.cellContentConfiguration.getter((uint64_t)boxed_opaque_existential_1);
  MEMORY[0x1C3B73700](v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UICellAccessory() - 8) + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
  InCallControlsIgnoreLMIRequestsCell.switchAccessory.getter(v9 + v8);
  UICollectionViewListCell.accessories.setter();
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall InCallControlsIgnoreLMIRequestsCell.configure(with:)(ConversationKit::InCallControlsIgnoreLMIRequestsCell::ViewModel with)
{
  id v2;

  v2 = InCallControlsIgnoreLMIRequestsCell.ignoreLMIRequestsSwitch.getter();
  objc_msgSend(v2, sel_setOn_animated_, with.ignoreLMIRequests, 0);

}

double InCallControlsIgnoreLMIRequestsCell.verticalInset(_:scaledToFont:)(void *a1, double a2)
{
  id v3;
  id v4;
  id v5;
  double v6;
  void *v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v3 = objc_msgSend(a1, sel_fontDescriptor);
  v4 = objc_msgSend(v3, sel_objectForKey_, *MEMORY[0x1E0DC13B8]);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    type metadata accessor for UIFontTextStyle(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, v8);
      objc_msgSend(v5, sel_scaledValueForValue_, a2);
      a2 = v6;

    }
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, &demangling cache variable for type metadata for Any?);
  }
  return a2;
}

void InCallControlsIgnoreLMIRequestsCell.didToggleMuteState(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  if (OUTLINED_FUNCTION_19_15(*v0))
  {
    v2 = v1;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 8))(v0, ObjectType, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

id InCallControlsIgnoreLMIRequestsCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsIgnoreLMIRequestsCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD18CF74@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = OUTLINED_FUNCTION_19_15(**a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t dispatch thunk of InCallControlsIgnoreLMIRequestsCellDelegate.inCallControlsDidToggleIgnoreLMIRequestsCell(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t ObjC metadata update function for InCallControlsIgnoreLMIRequestsCell()
{
  return type metadata accessor for InCallControlsIgnoreLMIRequestsCell();
}

void type metadata completion function for InCallControlsIgnoreLMIRequestsCell()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Participant?(319, &lazy cache variable for type metadata for UICellAccessory?, (void (*)(uint64_t))MEMORY[0x1E0DC1D38]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Participant?(319, (unint64_t *)&lazy cache variable for type metadata for UIListContentConfiguration?, (void (*)(uint64_t))MEMORY[0x1E0DC23A0]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for InCallControlsIgnoreLMIRequestsCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsIgnoreLMIRequestsCell.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InCallControlsIgnoreLMIRequestsCell.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of InCallControlsIgnoreLMIRequestsCell.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of InCallControlsIgnoreLMIRequestsCell.configure(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t getEnumTagSinglePayload for InCallControlsIgnoreLMIRequestsCell.ViewModel(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for InCallControlsIgnoreLMIRequestsCell.ViewModel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD18D1DC + 4 * byte_1BD64D225[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD18D210 + 4 * byte_1BD64D220[v4]))();
}

uint64_t sub_1BD18D210(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD18D218(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD18D220);
  return result;
}

uint64_t sub_1BD18D22C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD18D234);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD18D238(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD18D240(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsIgnoreLMIRequestsCell.ViewModel()
{
  return &type metadata for InCallControlsIgnoreLMIRequestsCell.ViewModel;
}

void UIControl.addAction(for:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v8;

  v4 = v3;
  type metadata accessor for UIAction();
  swift_retain();
  v8 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  objc_msgSend(v4, sel_addAction_forControlEvents_, v8, a1, 0, 0, 0, a2, a3);

}

unint64_t type metadata accessor for UIAction()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UIAction;
  if (!lazy cache variable for type metadata for UIAction)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  }
  return result;
}

uint64_t Lock.__allocating_init()()
{
  uint64_t v0;
  _DWORD *v1;

  v0 = swift_allocObject();
  v1 = (_DWORD *)OUTLINED_FUNCTION_1_66();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = 0;
  return v0;
}

Swift::Void __swiftcall Lock.lock()()
{
  uint64_t v0;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 16));
}

uint64_t Lock.init()()
{
  uint64_t v0;
  _DWORD *v1;

  v1 = (_DWORD *)OUTLINED_FUNCTION_1_66();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = 0;
  return v0;
}

void Lock.deinit()
{
  OUTLINED_FUNCTION_0_81();
}

uint64_t sub_1BD18D3B0()
{
  uint64_t v0;

  return v0;
}

void Lock.__deallocating_deinit()
{
  OUTLINED_FUNCTION_0_81();
}

uint64_t sub_1BD18D3C8()
{
  return swift_deallocClassInstance();
}

Swift::Bool __swiftcall Lock.tryLock()()
{
  uint64_t v0;

  return os_unfair_lock_trylock(*(os_unfair_lock_t *)(v0 + 16));
}

Swift::Void __swiftcall Lock.unlock()()
{
  uint64_t v0;

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
}

void Lock.withLock<A>(_:)(void (*a1)(void))
{
  uint64_t v1;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  a1();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

Swift::Void __swiftcall Lock.assertOwned()()
{
  uint64_t v0;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v0 + 16));
}

Swift::Void __swiftcall Lock.assertNotOwned()()
{
  uint64_t v0;

  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(v0 + 16));
}

uint64_t type metadata accessor for Lock()
{
  return objc_opt_self();
}

uint64_t method lookup function for Lock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Lock.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void String.localized.getter()
{
  OUTLINED_FUNCTION_7_14();
  String.localized.getter();
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;

  OUTLINED_FUNCTION_13_48();
  v4 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v8._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = v3;
  v5._object = v2;
  v6.value._countAndFlagsBits = v1;
  v6.value._object = v0;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v8._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v8);
  OUTLINED_FUNCTION_15_47();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_49_0();
}

void String.localizedCallRecording.getter()
{
  OUTLINED_FUNCTION_2_68();
}

void localized(_:locale:source:value:comment:_:)(uint64_t a1, uint64_t a2, int a3, NSBundle a4, Swift::String_optional a5, Swift::String a6)
{
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_1_67(a1, a2, a3, a4, a5, a6, v7);
  if (*(_QWORD *)(v6 + 16))
  {
    OUTLINED_FUNCTION_12_45();
    OUTLINED_FUNCTION_11_15();
    OUTLINED_FUNCTION_50();
  }
  OUTLINED_FUNCTION_45_0();
}

uint64_t String.deviceAdjustedLocalizedKey(forDeviceFamily:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  BOOL v6;
  BOOL v7;

  if ((a2 & 1) != 0
    || a1 != 4
    || (a3 == 0x535F4E4545524353 ? (v6 = a4 == 0xEE00474E49524148) : (v6 = 0),
        !v6
     && (OUTLINED_FUNCTION_0_82() & 1) == 0
     && (a3 != 0xD000000000000011 || (OUTLINED_FUNCTION_4_63(), !v6))
     && (OUTLINED_FUNCTION_0_82() & 1) == 0
     && (a3 == 0x20676E6972616853 ? (v7 = a4 == 0xEE006E6565726353) : (v7 = 0),
         !v7
      && (OUTLINED_FUNCTION_0_82() & 1) == 0
      && (a3 != 0xD000000000000018 || (OUTLINED_FUNCTION_4_63(), !v6))
      && (OUTLINED_FUNCTION_0_82() & 1) == 0
      && (a3 != 0xD000000000000028 || (OUTLINED_FUNCTION_4_63(), !v6))
      && (OUTLINED_FUNCTION_0_82() & 1) == 0
      && (a3 != 0xD000000000000026 || (OUTLINED_FUNCTION_4_63(), !v6))
      && (OUTLINED_FUNCTION_0_82() & 1) == 0)))
  {
    swift_bridgeObjectRetain();
  }
  return OUTLINED_FUNCTION_50();
}

uint64_t *LocalizationSource.conversationControls.unsafeMutableAddressor()
{
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  return &static LocalizationSource.conversationControls;
}

Swift::String __swiftcall String.localizedWithComment(_:)(Swift::String a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String_optional v6;
  uint64_t v7;
  void *v8;
  Swift::String result;
  Swift::String v10;

  OUTLINED_FUNCTION_13_48();
  v3 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v10._object = v1;
  OUTLINED_FUNCTION_7_14();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = v2;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v3, v4, v10);
  OUTLINED_FUNCTION_15_47();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_49_0();
  result._object = v8;
  result._countAndFlagsBits = v7;
  return result;
}

uint64_t String.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (!a4)
    return 0;
  v4 = MEMORY[0x1C3B72EA8]();
  swift_bridgeObjectRelease();
  return v4;
}

void String.localizedHidden.getter()
{
  OUTLINED_FUNCTION_2_68();
}

void String.localizedAlerts.getter()
{
  OUTLINED_FUNCTION_2_68();
}

void String.localizedCallStatus.getter()
{
  String.localized.getter();
}

Swift::tuple_title_String_subtitle_String_optional __swiftcall String.splitForTitleAndSubtitle()()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  Swift::tuple_title_String_subtitle_String_optional result;

  v0 = lazy protocol witness table accessor for type String and conformance String();
  v1 = MEMORY[0x1C3B73B2C](10, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x1E0DEA968], v0);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    v2 = OUTLINED_FUNCTION_50();
    MEMORY[0x1C3B72EA8](v2);
    swift_bridgeObjectRelease();
  }
  v3 = specialized BidirectionalCollection.last.getter(v1);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    MEMORY[0x1C3B72EA8](v3, v5, v7, v9);
    v11 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v12 = OUTLINED_FUNCTION_3_65();
  v15 = v11;
  result.subtitle.value._object = v15;
  result.subtitle.value._countAndFlagsBits = v14;
  result.title._object = v13;
  result.title._countAndFlagsBits = v12;
  return result;
}

uint64_t LocalizationSource.table.getter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  return a2;
}

id one-time initialization function for conversationKit()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  static LocalizationSource.conversationKit = (uint64_t)result;
  unk_1EF4FCB30 = 0x61737265766E6F43;
  qword_1EF4FCB38 = 0xEF74694B6E6F6974;
  return result;
}

uint64_t *LocalizationSource.conversationKit.unsafeMutableAddressor()
{
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  return &static LocalizationSource.conversationKit;
}

void static LocalizationSource.conversationKit.getter()
{
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  OUTLINED_FUNCTION_7_64((id *)&static LocalizationSource.conversationKit);
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_3_65();
  OUTLINED_FUNCTION_18();
}

id one-time initialization function for conversationControls()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  static LocalizationSource.conversationControls = (uint64_t)result;
  *(_QWORD *)algn_1EF4FCB48 = 0xD000000000000014;
  qword_1EF4FCB50 = 0x80000001BD66D470;
  return result;
}

void static LocalizationSource.conversationControls.getter()
{
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  OUTLINED_FUNCTION_7_64((id *)&static LocalizationSource.conversationControls);
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_3_65();
  OUTLINED_FUNCTION_18();
}

id one-time initialization function for systemAperture()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  static LocalizationSource.systemAperture = (uint64_t)result;
  unk_1EF4FCB60 = 0xD00000000000001ELL;
  qword_1EF4FCB68 = 0x80000001BD678920;
  return result;
}

uint64_t *LocalizationSource.systemAperture.unsafeMutableAddressor()
{
  if (one-time initialization token for systemAperture != -1)
    swift_once();
  return &static LocalizationSource.systemAperture;
}

void static LocalizationSource.systemAperture.getter()
{
  if (one-time initialization token for systemAperture != -1)
    swift_once();
  OUTLINED_FUNCTION_7_64((id *)&static LocalizationSource.systemAperture);
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_3_65();
  OUTLINED_FUNCTION_18();
}

void localized(_:locale:source:value:comment:arguments:)(uint64_t a1, uint64_t a2, int a3, NSBundle a4, Swift::String_optional a5, Swift::String a6)
{
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_1_67(a1, a2, a3, a4, a5, a6, v7);
  if (*(_QWORD *)(v6 + 16))
  {
    OUTLINED_FUNCTION_12_45();
    OUTLINED_FUNCTION_11_15();
    OUTLINED_FUNCTION_50();
  }
  OUTLINED_FUNCTION_45_0();
}

uint64_t destroy for LocalizationSource(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *initializeBufferWithCopyOfBuffer for LocalizationSource(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocalizationSource(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LocalizationSource(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LocalizationSource()
{
  return &type metadata for LocalizationSource;
}

ValueMetadata *type metadata accessor for CallScreening()
{
  return &type metadata for CallScreening;
}

uint64_t key path index equality operator for (KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.FontAttribute>)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.FontAttribute>);
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t key path index hash operator for (KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.FontAttribute>)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.FontAttribute>);
  return dispatch thunk of Hashable.hashValue.getter();
}

void key path getter for AttributeDynamicLookup.subscript<A>(dynamicMember:) : AttributeDynamicLookupAttributeScopes.UIKitAttributes.FontAttribute()
{
  lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
  AttributeDynamicLookup.subscript.getter();
  __break(1u);
}

void key path getter for AttributeScopes.UIKitAttributes.font : AttributeScopes.UIKitAttributes()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

void key path setter for InCallControlsPTTLeaveChannelCell.leaveChannelButton : InCallControlsPTTLeaveChannelCell(id *a1)
{
  InCallControlsPTTLeaveChannelCell.leaveChannelButton.setter(*a1);
}

id InCallControlsPTTLeaveChannelCell.leaveChannelButton.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell_leaveChannelButton);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

void InCallControlsPTTLeaveChannelCell.leaveChannelButton.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell_leaveChannelButton);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

}

uint64_t InCallControlsPTTLeaveChannelCell.leaveChannelButtonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_BYTE *, _QWORD);
  uint64_t v26;
  uint64_t KeyPath;
  id v28;
  Class isa;
  Class v30;
  id v31;
  void (*v32)(_BYTE *, _QWORD);
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Class v46;
  _BYTE v47[32];
  Swift::String v48;

  v4 = type metadata accessor for UIButton.Configuration.CornerStyle();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v42 = v6 - v5;
  type metadata accessor for AttributeContainer();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v9 = OUTLINED_FUNCTION_10_55();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  OUTLINED_FUNCTION_1_1();
  v12 = MEMORY[0x1E0C80A78](v11);
  v45 = (uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v40 - v14;
  v16 = v1
      + OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell____lazy_storage___leaveChannelButtonConfiguration;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of FeatureEligibility?(v16, (uint64_t)v15, &demangling cache variable for type metadata for UIButton.Configuration?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9) != 1)
    return OUTLINED_FUNCTION_8_7(a1, (uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
  v41 = v10;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for UIButton.Configuration?);
  static UIButton.Configuration.filled()();
  v17 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v48._object = (void *)0xE000000000000000;
  v18._countAndFlagsBits = 0x657661654CLL;
  v18._object = (void *)0xE500000000000000;
  v19.value._countAndFlagsBits = 0x61737265766E6F43;
  v19.value._object = (void *)0xEF74694B6E6F6974;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v48._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v48);

  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  v21 = type metadata accessor for AttributedString();
  OUTLINED_FUNCTION_80_0();
  __swift_storeEnumTagSinglePayload(v22, v23, v24, v21);
  UIButton.Configuration.attributedTitle.setter();
  v25 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.attributedTitle.modify();
  if (!__swift_getEnumTagSinglePayload(v26, 1, v21))
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    swift_getKeyPath();
    v28 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
    isa = UIFont.withTraits(_:)(0x8002u).super.isa;

    v30 = UIFont.caseSensitive()().super.isa;
    v46 = v30;
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
    AttributedString.subscript.setter();
  }
  v25(v47, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v43 + 104))(v42, *MEMORY[0x1E0DC3060], v44);
  UIButton.Configuration.cornerStyle.setter();
  UIButton.Configuration.contentInsets.setter();
  v31 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
  v32 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.backgroundColor.setter();
  v32(v47, 0);
  v33 = v41;
  OUTLINED_FUNCTION_8_7(a1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32));
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  v35 = v45;
  OUTLINED_FUNCTION_8_7(v45, a1, v34);
  OUTLINED_FUNCTION_80_0();
  __swift_storeEnumTagSinglePayload(v36, v37, v38, v9);
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Participant?(v35, v16, &demangling cache variable for type metadata for UIButton.Configuration?);
  return swift_endAccess();
}

void InCallControlsPTTLeaveChannelCell.leaveButtonAccessory.getter(uint64_t a1@<X8>)
{
  InCallControlsPTTLeaveChannelCell.leaveButtonAccessory.getter(&demangling cache variable for type metadata for UICellAccessory?, &OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell____lazy_storage___leaveButtonAccessory, (uint64_t (*)(_QWORD))MEMORY[0x1E0DC1D38], (void (*)(uint64_t))closure #1 in InCallControlsPTTLeaveChannelCell.leaveButtonAccessory.getter, a1);
}

uint64_t closure #1 in InCallControlsPTTLeaveChannelCell.leaveButtonAccessory.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(void);
  void *v18;
  uint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UICellAccessory.Placement();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  v27 = *(_QWORD *)(v10 - 8);
  v28 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x70);
  v18 = (void *)((uint64_t (*)(uint64_t))v17)(v14);
  InCallControlsPTTLeaveChannelCell.leaveChannelButtonConfiguration.getter((uint64_t)v16);
  v19 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v19);
  UIButton.configuration.setter();

  v17();
  v20 = (uint64_t (**)())&v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                   + 48)];
  v21 = *MEMORY[0x1E0DC1C20];
  v22 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v9, v21, v22);
  *v20 = OUTLINED_FUNCTION_28_0;
  v20[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DC1D18], v6);
  v23 = *MEMORY[0x1E0DC1C48];
  v24 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v5, v23, v24);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v24);
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v12, v28);
}

void InCallControlsPTTLeaveChannelCell.cellContentConfiguration.getter(uint64_t a1@<X8>)
{
  InCallControlsPTTLeaveChannelCell.leaveButtonAccessory.getter(&demangling cache variable for type metadata for UIListContentConfiguration?, &OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell____lazy_storage___cellContentConfiguration, (uint64_t (*)(_QWORD))MEMORY[0x1E0DC23A0], (void (*)(uint64_t))closure #1 in InCallControlsPTTLeaveChannelCell.cellContentConfiguration.getter, a1);
}

void InCallControlsPTTLeaveChannelCell.leaveButtonAccessory.getter(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_1_1();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v16 = &v22[-v15];
  v17 = v5 + *a2;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of FeatureEligibility?(v17, (uint64_t)v16, a1);
  v18 = a3(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v16, a1);
    a4(v5);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, a5, v18);
    OUTLINED_FUNCTION_80_0();
    __swift_storeEnumTagSinglePayload(v19, v20, v21, v18);
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of Participant?((uint64_t)v14, v17, a1);
    swift_endAccess();
  }
  else
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v16, v18);
  }
  OUTLINED_FUNCTION_65_1();
}

uint64_t closure #1 in InCallControlsPTTLeaveChannelCell.cellContentConfiguration.getter()
{
  void *v0;
  id v1;
  void (*v2)(_BYTE *, _QWORD);
  id v3;
  void (*v4)(_BYTE *, _QWORD);
  void (*v5)(_BYTE *, _QWORD);
  id v6;
  Class isa;
  _BYTE v9[32];

  MEMORY[0x1C3B73748]();
  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AD0]);
  v2 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v2(v9, 0);
  if (one-time initialization token for tableViewCellTitleLabel != -1)
    swift_once();
  v3 = (id)static Colors.InCallControls.tableViewCellTitleLabel;
  v4 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v4(v9, 0);
  v5 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.adjustsFontForContentSizeCategory.setter();
  v5(v9, 0);
  v6 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  isa = UIFont.caseSensitive()().super.isa;

  InCallControlsPTTLeaveChannelCell.verticalInset(_:scaledToFont:)(isa, 18.5);
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

id InCallControlsPTTLeaveChannelCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id InCallControlsPTTLeaveChannelCell.init(frame:)()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  objc_super *v17;
  SEL v18;
  uint64_t v20;

  OUTLINED_FUNCTION_17_7();
  v1 = OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell_leaveChannelButton;
  v2 = (void *)objc_opt_self();
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_buttonWithType_, 1);
  v4 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell____lazy_storage___leaveChannelButtonConfiguration];
  v5 = OUTLINED_FUNCTION_10_55();
  OUTLINED_FUNCTION_77_0(v4, v6, v7, v5);
  v8 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell____lazy_storage___leaveButtonAccessory];
  v9 = OUTLINED_FUNCTION_9_50();
  OUTLINED_FUNCTION_77_0(v8, v10, v11, v9);
  v12 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell____lazy_storage___cellContentConfiguration];
  v13 = OUTLINED_FUNCTION_11_49();
  OUTLINED_FUNCTION_77_0(v12, v14, v15, v13);

  v20 = type metadata accessor for InCallControlsPTTLeaveChannelCell();
  v16 = OUTLINED_FUNCTION_15_0();
  return objc_msgSendSuper2(v17, v18, v16, v3, v20);
}

uint64_t type metadata accessor for InCallControlsPTTLeaveChannelCell()
{
  uint64_t result;

  result = type metadata singleton initialization cache for InCallControlsPTTLeaveChannelCell;
  if (!type metadata singleton initialization cache for InCallControlsPTTLeaveChannelCell)
    return swift_getSingletonMetadata();
  return result;
}

void InCallControlsPTTLeaveChannelCell.configure(with:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[5];

  v2 = OUTLINED_FUNCTION_11_49();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_0_7();
  static UIBackgroundConfiguration.listGroupedCell()();
  v8 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  type metadata accessor for UIVibrancyEffect();
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  type metadata accessor for UIBackgroundConfiguration();
  OUTLINED_FUNCTION_80_0();
  __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  MEMORY[0x1C3B7370C](v1);
  objc_msgSend(v0, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  InCallControlsPTTLeaveChannelCell.cellContentConfiguration.getter(v6);
  swift_bridgeObjectRetain();
  UIListContentConfiguration.text.setter();
  v17[3] = v2;
  v17[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  OUTLINED_FUNCTION_8_7((uint64_t)boxed_opaque_existential_1, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  MEMORY[0x1C3B73700](v17);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_9_50() - 8) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BD6441D0;
  InCallControlsPTTLeaveChannelCell.leaveButtonAccessory.getter(v16 + v15);
  UICollectionViewListCell.accessories.setter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  OUTLINED_FUNCTION_65_1();
}

void InCallControlsPTTLeaveChannelCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void InCallControlsPTTLeaveChannelCell.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell_leaveChannelButton;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell____lazy_storage___leaveChannelButtonConfiguration];
  v3 = OUTLINED_FUNCTION_10_55();
  OUTLINED_FUNCTION_77_0(v2, v4, v5, v3);
  v6 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell____lazy_storage___leaveButtonAccessory];
  v7 = OUTLINED_FUNCTION_9_50();
  OUTLINED_FUNCTION_77_0(v6, v8, v9, v7);
  v10 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit33InCallControlsPTTLeaveChannelCell____lazy_storage___cellContentConfiguration];
  v11 = OUTLINED_FUNCTION_11_49();
  OUTLINED_FUNCTION_77_0(v10, v12, v13, v11);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double InCallControlsPTTLeaveChannelCell.verticalInset(_:scaledToFont:)(void *a1, double a2)
{
  id v3;
  id v4;
  id v5;
  double v6;
  void *v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v3 = objc_msgSend(a1, sel_fontDescriptor);
  v4 = objc_msgSend(v3, sel_objectForKey_, *MEMORY[0x1E0DC13B8]);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    type metadata accessor for UIFontTextStyle(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, v8);
      objc_msgSend(v5, sel_scaledValueForValue_, a2);
      a2 = v6;

    }
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, &demangling cache variable for type metadata for Any?);
  }
  return a2;
}

id InCallControlsPTTLeaveChannelCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsPTTLeaveChannelCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD18F00C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x70))();
  *a2 = result;
  return result;
}

uint64_t ObjC metadata update function for InCallControlsPTTLeaveChannelCell()
{
  return type metadata accessor for InCallControlsPTTLeaveChannelCell();
}

void type metadata completion function for InCallControlsPTTLeaveChannelCell()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Participant?(319, (unint64_t *)&lazy cache variable for type metadata for UIButton.Configuration?, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Participant?(319, &lazy cache variable for type metadata for UICellAccessory?, (void (*)(uint64_t))MEMORY[0x1E0DC1D38]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Participant?(319, (unint64_t *)&lazy cache variable for type metadata for UIListContentConfiguration?, (void (*)(uint64_t))MEMORY[0x1E0DC23A0]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for InCallControlsPTTLeaveChannelCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsPTTLeaveChannelCell.leaveChannelButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InCallControlsPTTLeaveChannelCell.configure(with:)(uint64_t a1)
{
  _QWORD *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_OWORD *);
  _OWORD v6[2];
  uint64_t v7;
  __int128 v8;

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xD0);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v2;
  v7 = v3;
  v8 = *(_OWORD *)(a1 + 40);
  return v4(v6);
}

void sub_1BD18F1B4()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

uint64_t sub_1BD18F1D4()
{
  return 8;
}

uint64_t sub_1BD18F1E0()
{
  return swift_release();
}

uint64_t sub_1BD18F1E8(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BD18F1FC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void specialized Dictionary.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  if (__swift_getEnumTagSinglePayload(a1, 1, v7) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
    specialized Dictionary._Variant.removeValue(forKey:)(a2, (uint64_t)v6);
    v12 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_17_1(v12);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, a1, v7);
    specialized Dictionary._Variant.setValue(_:forKey:)();
    v13 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_17_1(v13);
  }
  OUTLINED_FUNCTION_65_1();
}

{
  _OWORD v3[2];

  if (*(_QWORD *)(a1 + 24))
  {
    outlined init with take of Any((_OWORD *)a1, v3);
    specialized Dictionary._Variant.setValue(_:forKey:)();
    outlined destroy of AnyHashable(a2);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, &demangling cache variable for type metadata for Any?);
    specialized Dictionary._Variant.removeValue(forKey:)(a2, v3);
    outlined destroy of AnyHashable(a2);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v3, &demangling cache variable for type metadata for Any?);
  }
  OUTLINED_FUNCTION_9_0();
}

void specialized Dictionary.subscript.setter(uint64_t a1)
{
  uint64_t *v1;
  char v2;
  char v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, &demangling cache variable for type metadata for ScreenSharingStateMonitor.Observation?);
    specialized __RawDictionaryStorage.find<A>(_:)();
    v3 = v2;
    if ((v2 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v7 = *v1;
      v5 = *v1;
      *v1 = 0x8000000000000000;
      v6 = *(_QWORD *)(v5 + 24);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<ObjectIdentifier, ScreenSharingStateMonitor.Observation>);
      _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v6);
      outlined init with take of ScreenSharingStateMonitor.Observation();
      _NativeDictionary._delete(at:)();
      *v1 = v7;
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = 0;
    }
    v9 = (v3 & 1) == 0;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v8, &demangling cache variable for type metadata for ScreenSharingStateMonitor.Observation?);
  }
  else
  {
    outlined init with take of ScreenSharingStateMonitor.Observation();
    specialized Dictionary._Variant.setValue(_:forKey:)();
  }
}

{
  _OWORD v1[2];

  if (*(_QWORD *)(a1 + 24))
  {
    outlined init with take of Any((_OWORD *)a1, v1);
    specialized Dictionary._Variant.setValue(_:forKey:)();
  }
  else
  {
    OUTLINED_FUNCTION_25_0(a1);
    specialized Dictionary._Variant.removeValue(forKey:)(v1);
    OUTLINED_FUNCTION_25_0((uint64_t)v1);
  }
  OUTLINED_FUNCTION_32();
}

void specialized Dictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD v8[2];

  if (*(_QWORD *)(a1 + 24))
  {
    outlined init with take of Any((_OWORD *)a1, v8);
    specialized Dictionary._Variant.setValue(_:forKey:)(v8, a2, a3);
    OUTLINED_FUNCTION_13_3();
  }
  else
  {
    OUTLINED_FUNCTION_18_18(a1);
    v5 = OUTLINED_FUNCTION_124_0();
    specialized Dictionary._Variant.removeValue(forKey:)(v5, v6, v7);
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_18_18((uint64_t)v8);
  }
  OUTLINED_FUNCTION_9_0();
}

void CNKScreenSharingStateMonitorFactory.makeScreenSharingStateMonitor(using:)(void *a1)
{
  id v2;
  id v3;

  v2 = objc_allocWithZone((Class)ObjC metadata update function for ScreenSharingStateMonitor());
  v3 = a1;
  ScreenSharingStateMonitor.init(activeCall:conversationControllerProvider:)(a1, 0, 0);
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingStateMonitor.__allocating_init(activeCall:)(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v1 + 336))(a1, 0, 0);
}

CNKScreenSharingStateMonitorFactory __swiftcall CNKScreenSharingStateMonitorFactory.init()()
{
  return (CNKScreenSharingStateMonitorFactory)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id CNKScreenSharingStateMonitorFactory.init()()
{
  objc_super v1;

  v1.super_class = (Class)CNKScreenSharingStateMonitorFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

id one-time initialization function for sharedMonitor()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)ObjC metadata update function for ScreenSharingStateMonitor()), sel_init);
  static ScreenSharingStateMonitor.sharedMonitor = result;
  return result;
}

id ScreenSharingStateMonitor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void *CNKScreenSharingStateMonitorFactory.sharedMonitor.getter()
{
  if (one-time initialization token for sharedMonitor != -1)
    swift_once();
  return static ScreenSharingStateMonitor.sharedMonitor;
}

uint64_t ScreenSharingStateMonitor.isBroadcastingScreenSharing.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_isBroadcastingScreenSharing);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

void ScreenSharingStateMonitor.isBroadcastingScreenSharing.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_isBroadcastingScreenSharing);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void ScreenSharingStateMonitor.isBroadcastingScreenSharing.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

BOOL ScreenSharingStateMonitor.isParticipantCurrentlySharing.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL8 v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_34_20(v2);
  v3 = OUTLINED_FUNCTION_14_2();
  v4 = __swift_getEnumTagSinglePayload(v0, 1, v3) != 1;
  OUTLINED_FUNCTION_25_0(v0);
  return v4;
}

void key path setter for ScreenSharingStateMonitor.currentlySharingParticipant : ScreenSharingStateMonitor(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(a1, (uint64_t)v4, &demangling cache variable for type metadata for Participant?);
  ScreenSharingStateMonitor.currentlySharingParticipant.setter((uint64_t)v4);
}

void ScreenSharingStateMonitor.currentlySharingParticipant.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;

  v3 = type metadata accessor for Participant(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v52 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v54 = (uint64_t)&v52 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v53 = (uint64_t)&v52 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v52 - v11;
  MEMORY[0x1E0C80A78](v10);
  v55 = (uint64_t)&v52 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v15 = MEMORY[0x1E0C80A78](v14);
  v56 = (uint64_t)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v52 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v52 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant?, Participant?));
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = v1;
  v25 = v1 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_currentlySharingParticipant;
  swift_beginAccess();
  v26 = (uint64_t)&v24[*(int *)(v22 + 48)];
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(a1, (uint64_t)v24, &demangling cache variable for type metadata for Participant?);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v25, v26, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v3) == 1)
  {
    if (__swift_getEnumTagSinglePayload(v26, 1, v3) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, &demangling cache variable for type metadata for Participant?);
      return;
    }
  }
  else
  {
    outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v24, (uint64_t)v21, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v26, 1, v3) != 1)
    {
      v27 = v55;
      outlined init with take of Participant(v26, v55);
      static Participant.== infix(_:_:)();
      v29 = v28;
      outlined destroy of Participant(v27);
      outlined destroy of Participant((uint64_t)v21);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, &demangling cache variable for type metadata for Participant?);
      if ((v29 & 1) != 0)
        return;
      goto LABEL_8;
    }
    outlined destroy of Participant((uint64_t)v21);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, &demangling cache variable for type metadata for (Participant?, Participant?));
LABEL_8:
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(a1, (uint64_t)v19, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v3) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for Participant?);
    v30 = 0;
  }
  else
  {
    Participant.screenState.getter();
    v32 = v31;
    outlined init with copy of Participant((uint64_t)v19, (uint64_t)v12);
    if (v32 == 2)
    {
      v30 = 0;
    }
    else
    {
      Participant.isReceivingScreenFrames.getter();
      v30 = v33;
    }
    outlined destroy of Participant((uint64_t)v12);
    outlined destroy of Participant((uint64_t)v19);
  }
  if (__swift_getEnumTagSinglePayload(v25, 1, v3))
  {
    v34 = 0;
  }
  else
  {
    v35 = v53;
    outlined init with copy of Participant(v25, v53);
    Participant.screenState.getter();
    v37 = v36;
    v38 = v35;
    v39 = v54;
    outlined init with copy of Participant(v38, v54);
    if (v37 == 2)
    {
      v34 = 0;
    }
    else
    {
      Participant.isReceivingScreenFrames.getter();
      v39 = v54;
      v34 = v40;
    }
    outlined destroy of Participant(v39);
    outlined destroy of Participant(v53);
  }
  if (__swift_getEnumTagSinglePayload(v25, 1, v3))
  {
    v41 = (v30 ^ 1) & v34;
  }
  else
  {
    v42 = v55;
    outlined init with copy of Participant(v25, v55);
    Participant.screenState.getter();
    v44 = v43 != 2;
    outlined destroy of Participant(v42);
    if ((v30 & 1) != 0)
      v41 = v44;
    else
      v41 = v34;
  }
  if ((v30 & 1) != (v41 & 1))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1BD6441D0;
    v58 = v41 & 1;
    v46 = String.init<A>(reflecting:)();
    v48 = v47;
    *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v45 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v45 + 32) = v46;
    *(_QWORD *)(v45 + 40) = v48;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    ScreenSharingStateMonitor.didChangeScreenSharingState(_:)();
  }
  v49 = v56;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v25, v56, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v49, 1, v3) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v49, &demangling cache variable for type metadata for Participant?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    v50 = v49;
    v51 = v52;
    outlined init with take of Participant(v50, v52);
    ScreenSharingStateMonitor.didUpdateScreenInfoForParticipant(_:)(v51);
    outlined destroy of Participant(v51);
  }
}

void ScreenSharingStateMonitor.currentlySharingParticipant.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_38_24(v0, v1, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_32();
}

void ScreenSharingStateMonitor.currentlySharingParticipant.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  v5 = v1 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_currentlySharingParticipant;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v5, v2, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of Participant?(a1, v5);
  swift_endAccess();
  ScreenSharingStateMonitor.currentlySharingParticipant.didset(v2);
  OUTLINED_FUNCTION_25_0(a1);
  OUTLINED_FUNCTION_25_0(v2);
}

double ScreenSharingStateMonitor.currentlySharingParticipantContentsSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  _BYTE v14[24];
  uint64_t v15;

  v1 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_34_20(v7);
  if (__swift_getEnumTagSinglePayload(v0, 1, v1))
  {
    v8 = &demangling cache variable for type metadata for Participant?;
    v9 = (_BYTE *)v0;
  }
  else
  {
    v10 = OUTLINED_FUNCTION_124_0();
    outlined init with copy of Participant(v10, v11);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, &demangling cache variable for type metadata for Participant?);
    Participant.screenInfo.getter();
    outlined destroy of Participant(v5);
    if (v15 != 1)
    {
      v12 = Participant.ScreenInfo.contentsSize.getter();
      outlined destroy of Participant.ScreenInfo((uint64_t)v14);
      return v12;
    }
    v8 = (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?;
    v9 = v14;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, v8);
  return 0.0;
}

void *ScreenSharingStateMonitor.call.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_call);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void ScreenSharingStateMonitor.call.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_call);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  ScreenSharingStateMonitor.call.didset();
  OUTLINED_FUNCTION_9_0();
}

uint64_t key path setter for ScreenSharingStateMonitor.call : ScreenSharingStateMonitor(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x130);
  v4 = *a1;
  return v3(v2);
}

void ScreenSharingStateMonitor.call.didset()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_call);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  ScreenSharingStateMonitor.updateConversationController(using:)(v2);

}

void ScreenSharingStateMonitor.call.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingStateMonitor.call.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    ScreenSharingStateMonitor.call.didset();
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingStateMonitor.addObserver(_:)(void *a1)
{
  _BYTE v3[16];

  swift_unknownObjectWeakInit();
  v3[8] = 0;
  OUTLINED_FUNCTION_2_0();
  specialized Dictionary.subscript.setter((uint64_t)v3);
  swift_endAccess();
  return ScreenSharingStateMonitor.notifyNewObserverIfScreenSharingIsActive(_:)(a1);
}

uint64_t ScreenSharingStateMonitor.removeObserver(_:)()
{
  _BYTE v1[16];

  OUTLINED_FUNCTION_2_0();
  specialized Dictionary.removeValue(forKey:)((uint64_t)v1);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v1, &demangling cache variable for type metadata for ScreenSharingStateMonitor.Observation?);
  return swift_endAccess();
}

void specialized Dictionary.removeValue(forKey:)(uint64_t a1@<X8>)
{
  uint64_t *v1;
  char v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;

  specialized __RawDictionaryStorage.find<A>(_:)();
  v4 = v3;
  if ((v3 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v1;
    v6 = *v1;
    *v1 = 0x8000000000000000;
    v7 = *(_QWORD *)(v6 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<ObjectIdentifier, ScreenSharingStateMonitor.Observation>);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v7);
    outlined init with take of ScreenSharingStateMonitor.Observation();
    _NativeDictionary._delete(at:)();
    *v1 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a1 = 0;
  }
  *(_BYTE *)(a1 + 8) = (v4 & 1) == 0;
}

uint64_t @objc ScreenSharingStateMonitor.addObserver(_:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;

  swift_unknownObjectRetain();
  v7 = a1;
  a4(a3);

  return swift_unknownObjectRelease();
}

void ScreenSharingStateMonitor.init()()
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD, _QWORD, _QWORD))(ObjectType + 336))(0, 0, 0);
  swift_deallocPartialClassInstance();
  OUTLINED_FUNCTION_18();
}

void ScreenSharingStateMonitor.__allocating_init(activeCall:conversationControllerProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  ScreenSharingStateMonitor.init(activeCall:conversationControllerProvider:)(a1, a2, a3);
  OUTLINED_FUNCTION_18();
}

uint64_t type metadata accessor for ScreenSharingStateMonitor()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ScreenSharingStateMonitor;
  if (!type metadata singleton initialization cache for ScreenSharingStateMonitor)
    return swift_getSingletonMetadata();
  return result;
}

id ScreenSharingStateMonitor.init(activeCall:conversationControllerProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  void **v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  objc_super v20;

  v7 = &v3[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationController];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  v8 = OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_observations;
  v9 = v3;
  *(_QWORD *)&v3[v8] = Dictionary.init(dictionaryLiteral:)();
  v10 = (uint64_t *)&v9[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationControllerProvider];
  *v10 = 0;
  v10[1] = 0;
  v9[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_isBroadcastingScreenSharing] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_screenSharingRemoteControllerObservation] = 0;
  v11 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_12_7(v11);
  v12 = (void **)&v9[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_call];
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_call] = 0;
  OUTLINED_FUNCTION_2_0();
  v13 = *v12;
  *v12 = a1;
  v14 = a1;

  v15 = *v10;
  *v10 = a2;
  v10[1] = a3;
  v16 = OUTLINED_FUNCTION_124_0();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v16);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v15);

  v20.receiver = v9;
  v20.super_class = (Class)ObjC metadata update function for ScreenSharingStateMonitor();
  v17 = objc_msgSendSuper2(&v20, sel_init);
  ScreenSharingStateMonitor.updateConversationController(using:)(a1);
  v18 = OUTLINED_FUNCTION_124_0();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v18);

  return v17;
}

uint64_t ScreenSharingStateMonitor.currentObservers()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char v39[8];
  uint64_t v40;
  uint64_t v41;

  v41 = MEMORY[0x1E0DEE9D8];
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_observations);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v30 = *v1 + 64;
  v3 = 1 << *(_BYTE *)(*v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(*v1 + 64);
  v33 = (unint64_t)(v3 + 63) >> 6;
  result = OUTLINED_FUNCTION_8_8();
  v7 = 0;
  v29 = v2 + 104;
  v32 = v1;
  v31 = v2;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_6;
    }
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
      break;
    if (v10 >= v33)
    {
      v12 = v7;
    }
    else
    {
      v11 = *(_QWORD *)(v30 + 8 * v10);
      if (v11)
        goto LABEL_10;
      v12 = v7 + 1;
      if (v7 + 2 < v33)
      {
        v11 = *(_QWORD *)(v30 + 8 * (v7 + 2));
        if (v11)
        {
          v10 = v7 + 2;
          goto LABEL_10;
        }
        v12 = v7 + 2;
        if (v7 + 3 < v33)
        {
          v11 = *(_QWORD *)(v30 + 8 * (v7 + 3));
          if (v11)
          {
            v10 = v7 + 3;
LABEL_10:
            v5 = (v11 - 1) & v11;
            v9 = __clz(__rbit64(v11)) + (v10 << 6);
            v7 = v10;
LABEL_6:
            v35 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9);
            outlined init with copy of ScreenSharingStateMonitor.Observation();
            goto LABEL_13;
          }
          v10 = v7 + 4;
          v12 = v7 + 3;
          if (v7 + 4 < v33)
          {
            v11 = *(_QWORD *)(v30 + 8 * v10);
            if (v11)
              goto LABEL_10;
            while (v7 + 5 < v33)
            {
              v11 = *(_QWORD *)(v29 + 8 * v7++);
              if (v11)
              {
                v10 = v7 + 4;
                goto LABEL_10;
              }
            }
            v12 = v33 - 1;
          }
        }
      }
    }
    v5 = 0;
    v35 = 0;
    v36 = 0;
    v7 = v12;
LABEL_13:
    outlined init with take of (key: ObjectIdentifier, value: ScreenSharingStateMonitor.Observation)?((uint64_t)&v35, (uint64_t)&v40);
    if (!v40)
    {
      swift_release();
      return v41;
    }
    outlined init with take of ScreenSharingStateMonitor.Observation();
    if (MEMORY[0x1C3B752C0](v39))
    {
      v13 = swift_unknownObjectRetain();
      MEMORY[0x1C3B7301C](v13);
      if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_unknownObjectRelease();
      result = outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?((uint64_t)v39);
    }
    else
    {
      OUTLINED_FUNCTION_2_0();
      specialized __RawDictionaryStorage.find<A>(_:)();
      v15 = v14;
      if ((v14 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v34 = *v1;
        v17 = v34;
        *v1 = 0x8000000000000000;
        v18 = *(_QWORD *)(v17 + 24);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<ObjectIdentifier, ScreenSharingStateMonitor.Observation>);
        _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v18);
        v19 = v34;
        outlined init with take of ScreenSharingStateMonitor.Observation();
        _NativeDictionary._delete(at:)();
        *v1 = v19;
        swift_bridgeObjectRelease();
      }
      else
      {
        v37 = 0;
      }
      v38 = (v15 & 1) == 0;
      OUTLINED_FUNCTION_18_18((uint64_t)&v37);
      swift_endAccess();
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.debug.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v20 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v20 + 16) = xmmword_1BD645380;
      outlined init with copy of ScreenSharingStateMonitor.Observation();
      LOBYTE(v36) = 0;
      outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)&v35, (uint64_t)&v37, &demangling cache variable for type metadata for ScreenSharingStateMonitor.Observation?);
      if (v38)
      {
        OUTLINED_FUNCTION_18_18((uint64_t)&v37);
        v21 = 0xE300000000000000;
        v22 = 7104878;
      }
      else
      {
        outlined init with take of ScreenSharingStateMonitor.Observation();
        outlined init with copy of ScreenSharingStateMonitor.Observation();
        v22 = String.init<A>(reflecting:)();
        v21 = v23;
        outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?((uint64_t)&v34);
      }
      OUTLINED_FUNCTION_18_18((uint64_t)&v35);
      v24 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
      v25 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v20 + 64) = v25;
      *(_QWORD *)(v20 + 32) = v22;
      *(_QWORD *)(v20 + 40) = v21;
      v35 = ObjectIdentifier.debugDescription.getter();
      v36 = v26;
      v27 = String.init<A>(reflecting:)();
      *(_QWORD *)(v20 + 96) = v24;
      *(_QWORD *)(v20 + 104) = v25;
      *(_QWORD *)(v20 + 72) = v27;
      *(_QWORD *)(v20 + 80) = v28;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      result = outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?((uint64_t)v39);
      v1 = v32;
      v2 = v31;
    }
  }
  __break(1u);
  return result;
}

void ScreenSharingStateMonitor.didChangeScreenSharingState(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = ScreenSharingStateMonitor.currentObservers()();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v1 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v1 + 16) = xmmword_1BD645380;
  String.init<A>(reflecting:)();
  v3 = v2;
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  v4 = lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_52_17(v4);
  if (v3)
  {
    OUTLINED_FUNCTION_8_8();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_2_1();
  }
  v5 = String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_48_22(v5, v6);
  OUTLINED_FUNCTION_32_24();
  swift_bridgeObjectRelease();
  if (v3)
  {
    OUTLINED_FUNCTION_8_8();
    v7 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_2_1();
    if (!v7)
    {
LABEL_15:
      OUTLINED_FUNCTION_2_1();
      OUTLINED_FUNCTION_9_5();
      return;
    }
  }
  else
  {
    v7 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      goto LABEL_15;
  }
  if (v7 >= 1)
  {
    while ((v0 & 0xC000000000000001) == 0)
    {
      OUTLINED_FUNCTION_29_29();
      v8 = (uint64_t)OUTLINED_FUNCTION_40_22();
      if ((v8 & 1) != 0)
        OUTLINED_FUNCTION_28_33(v8, sel_screenSharingStateMonitor_didUpdateScreenSharingState_);
      OUTLINED_FUNCTION_39_27();
    }
    OUTLINED_FUNCTION_1_14();
  }
  __break(1u);
}

void ScreenSharingStateMonitor.didChangeScreenSharingBroadcastingState(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_50_4(*v0);
  v1 = ScreenSharingStateMonitor.currentObservers()();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v2 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v2 + 16) = xmmword_1BD645380;
  String.init<A>(reflecting:)();
  v4 = v3;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v5 = lazy protocol witness table accessor for type String and conformance String();
  OUTLINED_FUNCTION_52_17(v5);
  if (v4)
  {
    OUTLINED_FUNCTION_8_8();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_2_1();
  }
  v6 = String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_48_22(v6, v7);
  OUTLINED_FUNCTION_32_24();
  swift_bridgeObjectRelease();
  if (v4)
  {
    OUTLINED_FUNCTION_8_8();
    v8 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_2_1();
    if (!v8)
    {
LABEL_15:
      OUTLINED_FUNCTION_2_1();
      OUTLINED_FUNCTION_9_5();
      return;
    }
  }
  else
  {
    v8 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
      goto LABEL_15;
  }
  if (v8 >= 1)
  {
    while ((v1 & 0xC000000000000001) == 0)
    {
      OUTLINED_FUNCTION_29_29();
      v9 = (uint64_t)OUTLINED_FUNCTION_40_22();
      if ((v9 & 1) != 0)
        OUTLINED_FUNCTION_28_33(v9, sel_screenSharingStateMonitor_didUpdateScreenSharingBroadcastingState_);
      OUTLINED_FUNCTION_39_27();
    }
    OUTLINED_FUNCTION_1_14();
  }
  __break(1u);
}

void ScreenSharingStateMonitor.didUpdateScreenInfoForParticipant(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  void *v20;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = ScreenSharingStateMonitor.currentObservers()();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v8 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v8 + 16) = xmmword_1BD645380;
  OUTLINED_FUNCTION_43_25(a1);
  v9 = OUTLINED_FUNCTION_14_2();
  __swift_storeEnumTagSinglePayload(v6, 0, 1, v9);
  specialized >> prefix<A>(_:)(v6);
  v11 = v10;
  v13 = v12;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v6, &demangling cache variable for type metadata for Participant?);
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v15 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v8 + 64) = v15;
  *(_QWORD *)(v8 + 32) = v11;
  *(_QWORD *)(v8 + 40) = v13;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_13_3();
  }
  v16 = String.init<A>(reflecting:)();
  *(_QWORD *)(v8 + 96) = v14;
  *(_QWORD *)(v8 + 104) = v15;
  *(_QWORD *)(v8 + 72) = v16;
  *(_QWORD *)(v8 + 80) = v17;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_13_3();
    if (!v18)
    {
LABEL_17:
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_65_1();
      return;
    }
  }
  else
  {
    v18 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v18)
      goto LABEL_17;
  }
  if (v18 >= 1)
  {
    for (i = 0; i != v18; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v20 = (void *)MEMORY[0x1C3B73D18](i, v7);
      }
      else
      {
        v20 = *(void **)(v7 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      if ((objc_msgSend(v20, sel_respondsToSelector_, sel_screenSharingStateMonitorDidUpdateScreenInfoForParticipant_) & 1) != 0)objc_msgSend(v20, sel_screenSharingStateMonitorDidUpdateScreenInfoForParticipant_, v1);
      swift_unknownObjectRelease();
    }
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t ScreenSharingStateMonitor.notifyNewObserverIfScreenSharingIsActive(_:)(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD *__return_ptr);
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  char v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;

  v4 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v40[-1] - v10;
  v12 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_16_2();
  v14 = *(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x190);
  v14(v40);
  v15 = v41;
  if (v41)
  {
    OUTLINED_FUNCTION_26_25();
    (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v15, v3);
    v3 = v16;
    ObjectType = swift_getObjectType();
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 328))(ObjectType, v3);
    swift_unknownObjectRelease();
    v19 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v40, &demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?);
    v18 = 0;
  }
  v20 = OUTLINED_FUNCTION_9(v19, sel_respondsToSelector_);
  if ((v20 & 1) != 0)
    v20 = objc_msgSend(a1, sel_screenSharingStateMonitor_didUpdateScreenSharingBroadcastingState_, v4, v18 & 1);
  ((void (*)(_QWORD *__return_ptr, id))v14)(v40, v20);
  v21 = v41;
  if (!v41)
  {
    v22 = &demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?;
    v23 = v40;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_26_25();
  (*(void (**)(uint64_t, uint64_t))(v3 + 40))(v21, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  Array<A>.screenSharingParticipant.getter();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12) == 1)
  {
    v22 = &demangling cache variable for type metadata for Participant?;
    v23 = v11;
LABEL_10:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v23, v22);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    return OUTLINED_FUNCTION_55_0();
  }
  outlined init with take of Participant((uint64_t)v11, v2);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v39 = static OS_os_log.conversationKit;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v25 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v25 + 16) = xmmword_1BD645380;
  v40[0] = a1;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNKScreenSharingStateObserving);
  v26 = String.init<A>(reflecting:)();
  v28 = v27;
  v29 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
  v30 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v25 + 64) = v30;
  *(_QWORD *)(v25 + 32) = v26;
  *(_QWORD *)(v25 + 40) = v28;
  OUTLINED_FUNCTION_43_25(v2);
  v31 = OUTLINED_FUNCTION_45_23();
  specialized >> prefix<A>(_:)(v31);
  v33 = v32;
  v35 = v34;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v25 + 96) = v29;
  *(_QWORD *)(v25 + 104) = v30;
  *(_QWORD *)(v25 + 72) = v33;
  *(_QWORD *)(v25 + 80) = v35;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_43_25(v2);
  v36 = OUTLINED_FUNCTION_45_23();
  ScreenSharingStateMonitor.currentlySharingParticipant.setter(v36);
  v38 = (uint64_t)OUTLINED_FUNCTION_9(v37, sel_respondsToSelector_);
  if ((v38 & 1) != 0)
    v38 = (uint64_t)objc_msgSend(a1, sel_screenSharingStateMonitor_didUpdateScreenSharingState_, v4, 1);
  if ((OUTLINED_FUNCTION_9(v38, sel_respondsToSelector_) & 1) != 0)
    objc_msgSend(a1, sel_screenSharingStateMonitorDidUpdateScreenInfoForParticipant_, v4);
  return outlined destroy of Participant(v2);
}

void ScreenSharingStateMonitor.updateConversationController(using:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(id);
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  _BYTE v39[8];
  _QWORD v40[5];
  _BYTE v41[24];
  _BYTE v42[24];
  __int128 v43;
  __int128 v44;
  _UNKNOWN **v45;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  if (a1)
  {
    v8 = *(uint64_t (**)(id))(v2
                                      + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationControllerProvider);
    if (v8)
    {
      v9 = a1;
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v8);
      v10 = (void *)v8(v9);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v8);
    }
    else
    {
      v45 = 0;
      v43 = 0u;
      v44 = 0u;
      v13 = (void *)objc_opt_self();
      v14 = a1;
      v15 = objc_msgSend(v13, sel_sharedInstance);
      if (one-time initialization token for shared != -1)
        swift_once();
      v16 = (void *)static PlaceholderCallCenter.shared;
      v17 = objc_allocWithZone((Class)type metadata accessor for CallCenter());
      v18 = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v15, v16, 0, 0);
      v19 = OUTLINED_FUNCTION_54();
      outlined init with take of DefaultParticipantMediaProviderCreator(v19, (uint64_t)v41);
      v40[1] = 0;
      v20 = OUTLINED_FUNCTION_54();
      outlined init with take of DefaultParticipantCaptionsProviderCreator(v20, (uint64_t)v42);
      v21 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
      type metadata accessor for IDSCapabilitiesChecker();
      v22 = (_QWORD *)OUTLINED_FUNCTION_15();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
      v40[3] = v23;
      v40[4] = &protocol witness table for TUIDSLookupManager;
      v40[0] = v21;
      OUTLINED_FUNCTION_33_0();
      lazy protocol witness table accessor for type UUID and conformance UUID();
      v24 = MEMORY[0x1E0DEE9D8];
      v22[2] = Dictionary.init(dictionaryLiteral:)();
      v22[3] = Dictionary.init(dictionaryLiteral:)();
      v22[5] = 0;
      OUTLINED_FUNCTION_54();
      v22[6] = v24;
      outlined init with copy of IDSLookupManager((uint64_t)v40, (uint64_t)(v22 + 7));
      v25 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      objc_msgSend(v25, sel_addObserver_selector_name_object_, v22, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E0DBD648], v40[0]);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      if (one-time initialization token for shared != -1)
        swift_once();
      v26 = static Defaults.shared;
      outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)v41, (uint64_t)v39);
      outlined init with copy of DefaultParticipantCaptionsProviderCreator((uint64_t)v42, (uint64_t)v40);
      swift_retain();
      v27 = v18;
      v10 = (void *)specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)((uint64_t)v14, (uint64_t)v27, (uint64_t)v39, (uint64_t)v40, 0, (uint64_t)&v43, 2, (uint64_t)v22, v26);
      outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v42);
      outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)v41);

    }
    *((_QWORD *)&v44 + 1) = type metadata accessor for ConversationController(0);
    v45 = &protocol witness table for ConversationController;
    *(_QWORD *)&v43 = v10;
    v28 = v2 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationController;
    OUTLINED_FUNCTION_2_0();
    v29 = v10;
    outlined assign with take of ScreenSharingStateMonitorConversationProviderProtocol?((uint64_t)&v43, v28);
    swift_endAccess();

    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_10_56();
    v30 = (uint64_t *)&v29[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo];
    OUTLINED_FUNCTION_2_0();
    v31 = *v30;
    *v30 = (uint64_t)partial apply for closure #1 in ScreenSharingStateMonitor.updateConversationController(using:);
    v30[1] = v28;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v31);
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_10_56();
    v32 = (uint64_t *)&v29[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange];
    OUTLINED_FUNCTION_2_0();
    v33 = *v32;
    *v32 = (uint64_t)partial apply for closure #2 in ScreenSharingStateMonitor.updateConversationController(using:);
    v32[1] = v28;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v33);
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_10_56();
    v34 = (uint64_t *)&v29[OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing];
    OUTLINED_FUNCTION_2_0();
    v35 = *v34;
    *v34 = (uint64_t)partial apply for closure #3 in ScreenSharingStateMonitor.updateConversationController(using:);
    v34[1] = v28;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v35);
    v36 = OUTLINED_FUNCTION_15();
    swift_unknownObjectWeakInit();
    v37 = (uint64_t *)&v29[OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange];
    OUTLINED_FUNCTION_2_0();
    v38 = *v37;
    *v37 = (uint64_t)partial apply for closure #4 in ScreenSharingStateMonitor.updateConversationController(using:);
    v37[1] = v36;
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v38);

  }
  else
  {
    v11 = OUTLINED_FUNCTION_14_2();
    OUTLINED_FUNCTION_12_7(v11);
    ScreenSharingStateMonitor.currentlySharingParticipant.setter(v7);
    v45 = 0;
    v43 = 0u;
    v44 = 0u;
    v12 = v2 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationController;
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of ScreenSharingStateMonitorConversationProviderProtocol?((uint64_t)&v43, v12);
    swift_endAccess();
    ScreenSharingStateMonitor.didChangeScreenSharingState(_:)();
    ScreenSharingStateMonitor.didChangeScreenSharingBroadcastingState(_:)();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_55_0();
  }
  OUTLINED_FUNCTION_65_1();
}

void closure #1 in ScreenSharingStateMonitor.updateConversationController(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  unint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Participant(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v17 = a3 + 16;
  swift_beginAccess();
  v18 = (_QWORD *)MEMORY[0x1C3B752C0](v17);
  if (!v18
    || (v19 = v18,
        v20 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v18) + 0x128))(),
        v19,
        !v20))
  {
LABEL_9:
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_10:
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      return;
    }
LABEL_24:
    swift_once();
    goto LABEL_10;
  }
  if (!objc_msgSend(v20, sel_isConnected))
  {

    goto LABEL_9;
  }
  swift_beginAccess();
  v21 = MEMORY[0x1C3B752C0](v17);
  if (!v21)
  {
LABEL_12:
    v30 = MEMORY[0x1E0DEE9D8];
    goto LABEL_13;
  }
  v22 = (void *)v21;
  v23 = v21 + OBJC_IVAR____TtC15ConversationKit25ScreenSharingStateMonitor_conversationController;
  swift_beginAccess();
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v23, (uint64_t)v39, &demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?);

  v24 = v40;
  if (!v40)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v39, &demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?);
    goto LABEL_12;
  }
  v25 = v41;
  v26 = __swift_project_boxed_opaque_existential_1(v39, v40);
  v37 = (uint64_t)&v37;
  v38 = a1;
  v27 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v27 + 16))(v29);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v39, &demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(v24, v25);
  v31 = *(void (**)(char *, uint64_t))(v27 + 8);
  a1 = v38;
  v31(v29, v24);
LABEL_13:
  outlined init with copy of Participant(a1, (uint64_t)v11);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  v32 = *(_QWORD *)(v30 + 16);
  if (v32 >= *(_QWORD *)(v30 + 24) >> 1)
    v30 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  *(_QWORD *)(v30 + 16) = v32 + 1;
  outlined init with take of Participant((uint64_t)v11, v30+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v32);
  swift_beginAccess();
  v33 = MEMORY[0x1C3B752C0](v17);
  if (v33)
  {
    v34 = (void *)v33;
    Array<A>.screenSharingParticipant.getter();
    swift_bridgeObjectRelease();
    ScreenSharingStateMonitor.currentlySharingParticipant.setter((uint64_t)v7);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v35 = MEMORY[0x1C3B752C0](v17);
  if (v35)
  {
    v36 = (void *)v35;
    ScreenSharingStateMonitor.didUpdateScreenInfoForParticipant(_:)(a1);

  }
  else
  {

  }
}

void closure #2 in ScreenSharingStateMonitor.updateConversationController(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE v19[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for DispatchPredicate();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)&v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  a3 += 16;
  if (a2 != 3)
  {
    if (a2 != 4)
      return;
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_5:
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_beginAccess();
      v13 = MEMORY[0x1C3B752C0](a3);
      if (v13)
      {
        v14 = (void *)v13;
        v15 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v15);
        ScreenSharingStateMonitor.currentlySharingParticipant.setter((uint64_t)v7);

      }
      swift_beginAccess();
      v16 = MEMORY[0x1C3B752C0](a3);
      if (v16)
      {
        v17 = (void *)v16;
        ScreenSharingStateMonitor.didChangeScreenSharingBroadcastingState(_:)();
LABEL_13:

        return;
      }
      return;
    }
LABEL_16:
    swift_once();
    goto LABEL_5;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_beginAccess();
  v18 = MEMORY[0x1C3B752C0](a3);
  if (v18)
  {
    v17 = (void *)v18;
    ScreenSharingStateMonitor.updateCurrentSharingParticipant()();
    goto LABEL_13;
  }
}

uint64_t ScreenSharingStateMonitor.updateCurrentSharingParticipant()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v17[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v17[-1] - v5;
  v7 = type metadata accessor for Participant(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))(v17, v8);
  v11 = v18;
  if (!v18)
  {
    v13 = &demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?;
    v14 = v17;
    goto LABEL_5;
  }
  v12 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(v11, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  Array<A>.screenSharingParticipant.getter();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    v13 = &demangling cache variable for type metadata for Participant?;
    v14 = v6;
LABEL_5:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v7);
    ScreenSharingStateMonitor.currentlySharingParticipant.setter((uint64_t)v4);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    return os_log(_:dso:log:type:_:)();
  }
  outlined init with take of Participant((uint64_t)v6, (uint64_t)v10);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  outlined init with copy of Participant((uint64_t)v10, (uint64_t)v4);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v7);
  ScreenSharingStateMonitor.currentlySharingParticipant.setter((uint64_t)v4);
  return outlined destroy of Participant((uint64_t)v10);
}

void closure #3 in ScreenSharingStateMonitor.updateConversationController(using:)(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BYTE v15[32];

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v8 = a2 + 16;
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
  v15[8] = a1 & 1;
  v10 = String.init<A>(reflecting:)();
  v12 = v11;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v12;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v13 = MEMORY[0x1C3B752C0](v8);
  if (v13)
  {
    v14 = (void *)v13;
    ScreenSharingStateMonitor.didChangeScreenSharingBroadcastingState(_:)();

  }
}

void closure #4 in ScreenSharingStateMonitor.updateConversationController(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  uint64_t ObjectType;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    swift_once();
    goto LABEL_4;
  }
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(ObjectType, a2) & 1) == 0)
    return;
  a3 += 16;
  if (one-time initialization token for conversationKit != -1)
    goto LABEL_8;
LABEL_4:
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_beginAccess();
  v11 = MEMORY[0x1C3B752C0](a3);
  if (v11)
  {
    v12 = (void *)v11;
    ScreenSharingStateMonitor.updateCurrentSharingParticipant()();

  }
}

void ScreenSharingStateMonitor.activeConversationController.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_38_24(v0, v1, &demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?);
  OUTLINED_FUNCTION_32();
}

id ScreenSharingStateMonitor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for ScreenSharingStateMonitor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BD192A00(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xD0))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD192A40(uint64_t a1, uint64_t **a2)
{
  OUTLINED_FUNCTION_50_4(**a2);
  OUTLINED_FUNCTION_0();
}

void sub_1BD192A70(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x108))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD192AA8(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x128))();
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for CNKScreenSharingStateMonitorFactory(uint64_t a1)
{
  type metadata accessor for NSObject(a1, (unint64_t *)&lazy cache variable for type metadata for CNKScreenSharingStateMonitorFactory);
}

void type metadata completion function for ScreenSharingStateMonitor()
{
  unint64_t v0;

  type metadata accessor for Participant?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ScreenSharingStateMonitor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.isBroadcastingScreenSharing.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.isBroadcastingScreenSharing.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.isBroadcastingScreenSharing.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.isParticipantCurrentlySharing.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.currentlySharingParticipant.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.currentlySharingParticipantContentsSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.call.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.call.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.call.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.addObserver(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.removeObserver(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.__allocating_init(activeCall:conversationControllerProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitor.activeConversationController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

void type metadata accessor for Participant?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Participant?)
  {
    type metadata accessor for Participant(255);
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Participant?);
  }
}

uint64_t dispatch thunk of ScreenSharingStateMonitorConversationProviderProtocol.didUpdateVisibleParticipantScreenInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitorConversationProviderProtocol.didUpdateVisibleParticipantScreenInfo.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitorConversationProviderProtocol.didUpdateVisibleParticipantScreenInfo.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitorConversationProviderProtocol.call.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitorConversationProviderProtocol.remoteParticipants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitorConversationProviderProtocol.lookupActiveParticipant(correspondingTo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ScreenSharingStateMonitorConversationProviderProtocol.lookupActiveParticipant(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t getEnumTagSinglePayload for ScreenSharingStateMonitor.Observation(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScreenSharingStateMonitor.Observation(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScreenSharingStateMonitor.Observation()
{
  return &type metadata for ScreenSharingStateMonitor.Observation;
}

uint64_t outlined init with copy of ScreenSharingStateMonitor.Observation()
{
  return swift_unknownObjectWeakCopyInit();
}

uint64_t outlined init with take of (key: ObjectIdentifier, value: ScreenSharingStateMonitor.Observation)?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (key: ObjectIdentifier, value: ScreenSharingStateMonitor.Observation)?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of ScreenSharingStateMonitor.Observation()
{
  return swift_unknownObjectWeakTakeInit();
}

uint64_t specialized Dictionary._Variant.removeValue(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    v9 = *v3;
    *v3 = 0x8000000000000000;
    v10 = *(_QWORD *)(v9 + 24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<UUID, Date>);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);
    v11 = *(_QWORD *)(v17 + 48);
    v12 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v6, v12);
    v13 = *(_QWORD *)(v17 + 56);
    v14 = type metadata accessor for Date();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a2, v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * v6, v14);
    lazy protocol witness table accessor for type UUID and conformance UUID();
    _NativeDictionary._delete(at:)();
    *v3 = v17;
    swift_bridgeObjectRelease();
    return __swift_storeEnumTagSinglePayload(a2, 0, 1, v14);
  }
  else
  {
    v16 = type metadata accessor for Date();
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v16);
  }
}

double specialized Dictionary._Variant.removeValue(forKey:)@<D0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  Swift::Int v9;
  double result;
  uint64_t v11;

  swift_bridgeObjectRetain();
  specialized __RawDictionaryStorage.find<A>(_:)();
  v4 = v3;
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v1;
    v8 = *v1;
    *v1 = 0x8000000000000000;
    v9 = *(_QWORD *)(v8 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<ContextMenuNotificationUserInfoKey, Any>);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v9);
    outlined init with take of Any((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v4), a1);
    lazy protocol witness table accessor for type ContextMenuNotificationUserInfoKey and conformance ContextMenuNotificationUserInfoKey();
    _NativeDictionary._delete(at:)();
    *v1 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

double specialized Dictionary._Variant.removeValue(forKey:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  Swift::Int v12;
  double result;
  uint64_t v14;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v4;
    v11 = *v4;
    *v4 = 0x8000000000000000;
    v12 = *(_QWORD *)(v11 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Any>);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v12);
    swift_bridgeObjectRelease();
    outlined init with take of Any((_OWORD *)(*(_QWORD *)(v14 + 56) + 32 * v8), a3);
    _NativeDictionary._delete(at:)();
    *v4 = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double specialized Dictionary._Variant.removeValue(forKey:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  Swift::Int v10;
  double result;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v3;
    v9 = *v3;
    *v3 = 0x8000000000000000;
    v10 = *(_QWORD *)(v9 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<AnyHashable, Any>);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);
    outlined destroy of AnyHashable(*(_QWORD *)(v12 + 48) + 40 * v6);
    outlined init with take of Any((_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v6), a2);
    _NativeDictionary._delete(at:)();
    *v3 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

void specialized Dictionary._Variant.removeValue(forKey:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v3 = v1;
  v5 = *v3;
  swift_bridgeObjectRetain();
  specialized __RawDictionaryStorage.find<A>(_:)(a1);
  OUTLINED_FUNCTION_9_51();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_51_4();
    OUTLINED_FUNCTION_3_66();
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<UUID, Set<String>>);
    OUTLINED_FUNCTION_5_60(v6, v7, v8, v9, v10, v11, v12, v13, v16, v17);
    v14 = *(_QWORD *)(v18 + 48);
    v15 = OUTLINED_FUNCTION_33_0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v2, v15);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<String>);
    lazy protocol witness table accessor for type UUID and conformance UUID();
    _NativeDictionary._delete(at:)();
    OUTLINED_FUNCTION_25_31();
  }
  OUTLINED_FUNCTION_49_0();
}

uint64_t specialized Dictionary._Variant.removeValue(forKey:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  v3 = specialized __RawDictionaryStorage.find<A>(_:)(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v1;
  v7 = *v1;
  *v1 = 0x8000000000000000;
  v8 = *(_QWORD *)(v7 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<LayoutPosition, CGSize>);
  _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v8);
  v9 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 16 * v5);
  type metadata accessor for CGSize(0);
  lazy protocol witness table accessor for type LayoutPosition and conformance LayoutPosition();
  _NativeDictionary._delete(at:)();
  *v2 = v11;
  swift_bridgeObjectRelease();
  return v9;
}

void specialized Dictionary._Variant.removeValue(forKey:)()
{
  char v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_14_51();
  OUTLINED_FUNCTION_27_23();
  OUTLINED_FUNCTION_9_51();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_51_4();
    OUTLINED_FUNCTION_3_66();
    v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _NativeDictionary<String, [TranscriptionViewModel.Caption]>);
    OUTLINED_FUNCTION_5_60(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
    OUTLINED_FUNCTION_23_35();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [TranscriptionViewModel.Caption]);
    OUTLINED_FUNCTION_37_24();
    OUTLINED_FUNCTION_25_31();
  }
  OUTLINED_FUNCTION_49_0();
}

{
  char v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_14_51();
  OUTLINED_FUNCTION_27_23();
  OUTLINED_FUNCTION_9_51();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_51_4();
    OUTLINED_FUNCTION_3_66();
    v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, UIImage?>);
    OUTLINED_FUNCTION_5_60(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
    OUTLINED_FUNCTION_23_35();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIImage?);
    OUTLINED_FUNCTION_37_24();
    OUTLINED_FUNCTION_25_31();
  }
  OUTLINED_FUNCTION_49_0();
}

uint64_t outlined assign with copy of Participant?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ContextMenuNotificationUserInfoKey and conformance ContextMenuNotificationUserInfoKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContextMenuNotificationUserInfoKey and conformance ContextMenuNotificationUserInfoKey;
  if (!lazy protocol witness table cache variable for type ContextMenuNotificationUserInfoKey and conformance ContextMenuNotificationUserInfoKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContextMenuNotificationUserInfoKey, &type metadata for ContextMenuNotificationUserInfoKey);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContextMenuNotificationUserInfoKey and conformance ContextMenuNotificationUserInfoKey);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContextMenuNotificationUserInfoKey and conformance ContextMenuNotificationUserInfoKey;
  if (!lazy protocol witness table cache variable for type ContextMenuNotificationUserInfoKey and conformance ContextMenuNotificationUserInfoKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContextMenuNotificationUserInfoKey, &type metadata for ContextMenuNotificationUserInfoKey);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContextMenuNotificationUserInfoKey and conformance ContextMenuNotificationUserInfoKey);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LayoutPosition and conformance LayoutPosition()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LayoutPosition and conformance LayoutPosition;
  if (!lazy protocol witness table cache variable for type LayoutPosition and conformance LayoutPosition)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LayoutPosition, &type metadata for LayoutPosition);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LayoutPosition and conformance LayoutPosition);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LayoutPosition and conformance LayoutPosition;
  if (!lazy protocol witness table cache variable for type LayoutPosition and conformance LayoutPosition)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LayoutPosition, &type metadata for LayoutPosition);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LayoutPosition and conformance LayoutPosition);
  }
  return result;
}

uint64_t outlined assign with take of ScreenSharingStateMonitorConversationProviderProtocol?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScreenSharingStateMonitorConversationProviderProtocol?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD1936D8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ScreenSharingStateMonitor.updateConversationController(using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in ScreenSharingStateMonitor.updateConversationController(using:)(a1, a2, v2);
}

void partial apply for closure #2 in ScreenSharingStateMonitor.updateConversationController(using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #2 in ScreenSharingStateMonitor.updateConversationController(using:)(a1, a2, v2);
}

void partial apply for closure #3 in ScreenSharingStateMonitor.updateConversationController(using:)(char a1)
{
  uint64_t v1;

  closure #3 in ScreenSharingStateMonitor.updateConversationController(using:)(a1, v1);
}

void partial apply for closure #4 in ScreenSharingStateMonitor.updateConversationController(using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #4 in ScreenSharingStateMonitor.updateConversationController(using:)(a1, a2, v2);
}

uint64_t outlined init with copy of DefaultParticipantMediaProviderCreator(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DefaultParticipantMediaProviderCreator(a2, a1);
  return a2;
}

uint64_t outlined init with copy of DefaultParticipantCaptionsProviderCreator(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DefaultParticipantCaptionsProviderCreator(a2, a1);
  return a2;
}

uint64_t outlined destroy of DefaultParticipantCaptionsProviderCreator(uint64_t a1)
{
  destroy for DefaultParticipantCaptionsProviderCreator();
  return a1;
}

uint64_t outlined destroy of DefaultParticipantMediaProviderCreator(uint64_t a1)
{
  destroy for DefaultParticipantMediaProviderCreator();
  return a1;
}

uint64_t OUTLINED_FUNCTION_39_27()
{
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall CallControlsSidebarViewController.captioningStateDidChange()()
{
  void *v0;
  void *v1;
  id v2;

  if (objc_msgSend(v0, sel_isViewLoaded))
  {
    CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___detailsViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.detailsViewController.getter);
    v2 = v1;
    ConversationHUDDetailsViewController.captioningStateDidChange()();

  }
}

id CallControlsSidebarViewController.__allocating_init(captionsStateController:controlsManager:sidebarStateStream:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_14());
  return CallControlsSidebarViewController.init(captionsStateController:controlsManager:sidebarStateStream:)();
}

void CallControlsSidebarViewController.updateSidebarInsets(_:)(double a1)
{
  _QWORD *v2;
  id v3;

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___detailsViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.detailsViewController.getter);
  v3 = v2;
  (*(void (**)(double, double, double, double))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x100))(0.0, 0.0, a1, 0.0);

}

id CallControlsSidebarViewController.init(captionsStateController:controlsManager:sidebarStateStream:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *ObjectType;
  id v5;
  objc_super v7;

  OUTLINED_FUNCTION_0_14();
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___detailsViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___topConverView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___bottomBlurView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController_cancellables] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController_captionsStateController)
            + 8) = v3;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController_controlsManager] = v2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController_sidebarStateStream] = v0;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, sel_initWithNibName_bundle_, 0, 0);
  swift_unknownObjectRelease();
  return v5;
}

id CallControlsSidebarViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CallControlsSidebarViewController.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___detailsViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___topConverView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___bottomBlurView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController_cancellables] = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController_captionsStateController);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall CallControlsSidebarViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  CallControlsSidebarViewController.setupConstraints()();
  CallControlsSidebarViewController.observeContentOffset()();
}

void CallControlsSidebarViewController.setupConstraints()()
{
  void *v0;
  void *v1;
  unint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  void *v70;
  void *v71;
  id v72;
  void *v73;
  void *v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  void *v80;
  void *v81;
  char **v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  id v87;
  void *v88;
  void *v89;
  id v90;
  id v91;
  void *v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  void *v101;
  id v102;
  void *v103;
  void *v104;
  id v105;
  void *v106;
  void *v107;
  id v108;
  void *v109;
  void *v110;
  char **v111;
  id v112;
  id v113;
  void *v114;
  void *v115;
  id v116;
  void *v117;
  void *v118;
  id v119;
  id v120;
  void *v121;
  void *v122;
  id v123;
  id v124;
  uint64_t v125;
  id v126;
  id v127;
  id v128;
  void *v129;
  id v130;
  id v131;
  Class isa;
  unint64_t v133;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD644140;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v4 = v3;
  v5 = objc_msgSend(v3, sel_topAnchor);

  v6 = objc_msgSend(v1, sel_view);
  if (!v6)
  {
    __break(1u);
    goto LABEL_51;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_topAnchor);

  v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v8);
  *(_QWORD *)(v2 + 32) = v9;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v11 = v10;
  v12 = objc_msgSend(v10, sel_bottomAnchor);

  v13 = objc_msgSend(v1, sel_view);
  if (!v13)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, sel_bottomAnchor);

  v16 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v15);
  *(_QWORD *)(v2 + 40) = v16;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v18 = v17;
  v19 = objc_msgSend(v17, sel_leadingAnchor);

  v20 = objc_msgSend(v1, sel_view);
  if (!v20)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, sel_leadingAnchor);

  v23 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v2 + 48) = v23;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v25 = v24;
  v26 = objc_msgSend(v24, sel_trailingAnchor);

  v27 = objc_msgSend(v1, sel_view);
  if (!v27)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, sel_trailingAnchor);

  v30 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v29);
  *(_QWORD *)(v2 + 56) = v30;
  v133 = v2;
  specialized Array._endMutation()();
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___detailsViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.detailsViewController.getter);
  v32 = v31;
  v33 = objc_msgSend(v31, sel_view);

  if (!v33)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v34 = objc_msgSend(v33, sel_topAnchor);

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v36 = v35;
  v37 = objc_msgSend(v35, sel_topAnchor);

  v38 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v37);
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___detailsViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.detailsViewController.getter);
  v40 = v39;
  v41 = objc_msgSend(v39, sel_view);

  if (!v41)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v42 = objc_msgSend(v41, sel_leadingAnchor);

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v44 = v43;
  v45 = objc_msgSend(v43, sel_leadingAnchor);

  v46 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v45);
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___detailsViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.detailsViewController.getter);
  v48 = v47;
  v49 = objc_msgSend(v47, sel_view);

  if (!v49)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v50 = objc_msgSend(v49, sel_trailingAnchor);

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v52 = v51;
  v53 = objc_msgSend(v51, sel_trailingAnchor);

  v54 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v53);
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___detailsViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.detailsViewController.getter);
  v56 = v55;
  v57 = objc_msgSend(v55, sel_view);

  if (!v57)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    return;
  }
  v58 = objc_msgSend(v57, sel_bottomAnchor);

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v60 = v59;
  v61 = objc_msgSend(v59, sel_bottomAnchor);

  v62 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v61);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v63 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v63 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v63, 4))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v63 + 4, 1);
    specialized Array._endMutation()();
    v2 = (unint64_t)v38;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_13;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_13:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v64 = v46;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v65 = v54;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v66 = v62;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___topConverView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.topConverView.getter);
  v68 = v67;
  v69 = objc_msgSend(v67, sel_topAnchor);

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v71 = v70;
  v72 = objc_msgSend(v70, sel_topAnchor);

  v130 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v72);
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___topConverView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.topConverView.getter);
  v74 = v73;
  v75 = objc_msgSend(v73, sel_leadingAnchor);

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v77 = v76;
  v78 = objc_msgSend(v76, sel_leadingAnchor);

  v79 = objc_msgSend(v75, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v78);
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___topConverView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.topConverView.getter);
  v81 = v80;
  v82 = &selRef_associatedAppBundleIdentifier;
  v83 = objc_msgSend(v80, sel_trailingAnchor);

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v85 = v84;
  v86 = objc_msgSend(v84, sel_trailingAnchor);

  v87 = objc_msgSend(v83, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v86);
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___topConverView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.topConverView.getter);
  v89 = v88;
  v90 = objc_msgSend(v88, sel_bottomAnchor);

  v91 = objc_msgSend(v1, sel_view);
  if (!v91)
    goto LABEL_58;
  v92 = v91;
  v93 = objc_msgSend(v91, sel_safeAreaLayoutGuide);

  v94 = objc_msgSend(v93, sel_topAnchor);
  v95 = objc_msgSend(v90, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v94);

  if (v133 >> 62)
  {
    swift_bridgeObjectRetain();
    v96 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v96 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v96, 4))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v96 + 4, 1);
    specialized Array._endMutation()();
    v82 = (char **)v130;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_24;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_24:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v97 = v79;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v98 = v87;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v99 = v95;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___bottomBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.bottomBlurView.getter);
  v101 = v100;
  v102 = objc_msgSend(v100, sel_bottomAnchor);

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v104 = v103;
  v105 = objc_msgSend(v103, sel_bottomAnchor);

  v131 = objc_msgSend(v102, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v105);
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___bottomBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.bottomBlurView.getter);
  v107 = v106;
  v108 = objc_msgSend(v106, sel_leadingAnchor);

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v110 = v109;
  v111 = &selRef_associatedAppBundleIdentifier;
  v112 = objc_msgSend(v109, sel_leadingAnchor);

  v113 = objc_msgSend(v108, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v112);
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___bottomBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.bottomBlurView.getter);
  v115 = v114;
  v116 = objc_msgSend(v114, sel_trailingAnchor);

  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
  v118 = v117;
  v119 = objc_msgSend(v117, sel_trailingAnchor);

  v120 = objc_msgSend(v116, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v119);
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___bottomBlurView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.bottomBlurView.getter);
  v122 = v121;
  v123 = objc_msgSend(v121, sel_heightAnchor);

  v124 = objc_msgSend(v123, sel_constraintEqualToConstant_, 100.0);
  if (v133 >> 62)
  {
    swift_bridgeObjectRetain();
    v125 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v125 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v125, 4))
  {
    __break(1u);
    goto LABEL_49;
  }
  specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v125 + 4, 1);
  specialized Array._endMutation()();
  v111 = (char **)v131;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_49:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v126 = v113;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v127 = v120;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v128 = v124;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  v129 = (void *)objc_opt_self();
  type metadata accessor for NSLayoutConstraint();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v129, sel_activateConstraints_, isa);

}

void CallControlsSidebarViewController.observeContentOffset()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject.KeyValueObservingPublisher<UICollectionView, CGPoint>);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<NSObject.KeyValueObservingPublisher<UICollectionView, CGPoint>, CGFloat>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.Map<NSObject.KeyValueObservingPublisher<UICollectionView, CGPoint>, CGFloat>>);
  v16 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v0;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___detailsViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.detailsViewController.getter);
  v13 = v12;
  v14 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x108))();

  if (v14)
  {
    swift_getKeyPath();
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();

    swift_release();
    lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type NSObject.KeyValueObservingPublisher<UICollectionView, CGPoint> and conformance NSObject.KeyValueObservingPublisher<A, B>, &demangling cache variable for type metadata for NSObject.KeyValueObservingPublisher<UICollectionView, CGPoint>, MEMORY[0x1E0CB2118]);
    Publisher.map<A>(_:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.Map<NSObject.KeyValueObservingPublisher<UICollectionView, CGPoint>, CGFloat> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<NSObject.KeyValueObservingPublisher<UICollectionView, CGPoint>, CGFloat>, MEMORY[0x1E0C95950]);
    lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
    Publisher<>.removeDuplicates()();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Publishers.Map<NSObject.KeyValueObservingPublisher<UICollectionView, CGPoint>, CGFloat>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.Map<NSObject.KeyValueObservingPublisher<UICollectionView, CGPoint>, CGFloat>>, MEMORY[0x1E0C958E0]);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v9);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
    lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable], MEMORY[0x1E0DEAF58]);
    AnyCancellable.store<A>(in:)();
    swift_endAccess();
    swift_release();
  }
}

void CallControlsSidebarViewController.detailsViewController.getter()
{
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___detailsViewController, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.detailsViewController.getter);
}

id closure #1 in CallControlsSidebarViewController.contentView.getter(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id result;
  void *v6;
  id v7;
  void *v8;

  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 320))() & 1) != 0)
  {
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    v3 = one-time initialization token for background;
    v4 = v2;
    if (v3 != -1)
      swift_once();
    objc_msgSend(v4, sel_setBackgroundColor_, static Colors.InCallControls.background);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    result = objc_msgSend(a1, sel_view);
    if (result)
    {
      v6 = result;
      objc_msgSend(result, sel_addSubview_, v4);

      v7 = v4;
LABEL_12:

      return v7;
    }
    __break(1u);
  }
  else
  {
    if (one-time initialization token for backgroundBlurEffect != -1)
      swift_once();
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, static Colors.InCallControls.backgroundBlurEffect);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    result = objc_msgSend(a1, sel_view);
    if (result)
    {
      v8 = result;
      objc_msgSend(result, sel_addSubview_, v4);

      v7 = objc_msgSend(v4, sel_contentView);
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

_QWORD *closure #1 in CallControlsSidebarViewController.detailsViewController.getter(char *a1)
{
  void *v2;
  id v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  void (*v9)(_QWORD *, _UNKNOWN **);
  _QWORD *v10;
  _QWORD *result;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v2 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController_controlsManager];
  v3 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDDetailsViewController());
  v4 = v2;
  v5 = ConversationHUDDetailsViewController.init(controlsManager:)((uint64_t)v4);
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v7 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x88);
  v8 = swift_unknownObjectRetain();
  v7(v8);
  v9 = *(void (**)(_QWORD *, _UNKNOWN **))((*v6 & *v4) + 0x450);
  v10 = v5;
  v9(v5, &protocol witness table for ConversationHUDDetailsViewController);
  objc_msgSend(a1, sel_addChildViewController_, v10);
  result = objc_msgSend(v10, sel_view);
  if (result)
  {
    v12 = result;
    objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

    CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___contentView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.contentView.getter);
    v14 = v13;
    result = objc_msgSend(v10, sel_view);
    if (result)
    {
      v15 = result;
      objc_msgSend(v14, sel_addSubview_, result);

      objc_msgSend(v10, sel_didMoveToParentViewController_, a1);
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id closure #1 in CallControlsSidebarViewController.topConverView.getter(void *a1)
{
  id v2;
  id v3;
  id result;
  void *v5;

  v2 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 6);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v2);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setHidden_, 1);
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v5 = result;
    objc_msgSend(result, sel_addSubview_, v3);

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id closure #1 in CallControlsSidebarViewController.bottomBlurView.getter(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  static UnitPoint.top.getter();
  v3 = v2;
  v5 = v4;
  static UnitPoint.bottom.getter();
  v12 = v3;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = 0;
  LOBYTE(v17) = 1;
  v8 = objc_allocWithZone((Class)type metadata accessor for VariableBlurUIView());
  v9 = VariableBlurUIView.init(radius:blurMask:)((uint64_t)&v12, 4.0);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, v12, v13, v14, v15, v16, v17);
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v11 = result;
    objc_msgSend(result, sel_addSubview_, v9);

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double closure #1 in CallControlsSidebarViewController.observeContentOffset()@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

void closure #2 in CallControlsSidebarViewController.observeContentOffset()(double *a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_view);

    if (v6)
    {
      objc_msgSend(v6, sel_safeAreaInsets);
      v8 = v7;

      swift_beginAccess();
      v9 = MEMORY[0x1C3B752C0](v3);
      if (v9)
      {
        v10 = (void *)v9;
        CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController____lazy_storage___topConverView, (uint64_t (*)(uint64_t))closure #1 in CallControlsSidebarViewController.topConverView.getter);
        v12 = v11;

        objc_msgSend(v12, sel_setHidden_, v2 + v8 <= 0.0);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void CallControlsSidebarViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void CallControlsSidebarViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CallControlsSidebarViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t CallControlsSidebarViewController.isCaptioningEnabled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController_captionsStateController;
  result = MEMORY[0x1C3B752C0](v0 + OBJC_IVAR____TtC15ConversationKit33CallControlsSidebarViewController_captionsStateController);
  if (result)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(ObjectType, v3);
    swift_unknownObjectRelease();
    return v3 & 1;
  }
  return result;
}

Swift::Void __swiftcall CallControlsSidebarViewController.wantsDismissal()()
{
  SidebarStateStream.update(_:)(ConversationKit_SidebarState_hidden);
}

uint64_t type metadata accessor for CallControlsSidebarViewController()
{
  return objc_opt_self();
}

uint64_t method lookup function for CallControlsSidebarViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallControlsSidebarViewController.__allocating_init(captionsStateController:controlsManager:sidebarStateStream:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

char *keypath_get_selector_contentOffset()
{
  return sel_contentOffset;
}

id sub_1BD1956BC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, sel_contentOffset);
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1BD1956EC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContentOffset_, *a1, a1[1]);
}

uint64_t sub_1BD19573C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #2 in CallControlsSidebarViewController.observeContentOffset()(double *a1)
{
  uint64_t v1;

  closure #2 in CallControlsSidebarViewController.observeContentOffset()(a1, v1);
}

BOOL static RemoteControlParticipant.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void RemoteControlParticipant.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int RemoteControlParticipant.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unint64_t lazy protocol witness table accessor for type RemoteControlParticipant and conformance RemoteControlParticipant()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RemoteControlParticipant and conformance RemoteControlParticipant;
  if (!lazy protocol witness table cache variable for type RemoteControlParticipant and conformance RemoteControlParticipant)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemoteControlParticipant, &type metadata for RemoteControlParticipant);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlParticipant and conformance RemoteControlParticipant);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RemoteControlParticipant(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD195880 + 4 * byte_1BD64D5A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD1958B4 + 4 * byte_1BD64D5A0[v4]))();
}

uint64_t sub_1BD1958B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1958BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1958C4);
  return result;
}

uint64_t sub_1BD1958D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1958D8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD1958DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1958E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteControlParticipant()
{
  return &type metadata for RemoteControlParticipant;
}

BOOL CGSize.isLandscape.getter(double a1, double a2)
{
  return a2 < a1;
}

void CGSize.adjustedPoints(with:scaleFactor:)()
{
  type metadata accessor for UIView();
  static UIView.screenScale.getter();
  static UIView.screenScale.getter();
  OUTLINED_FUNCTION_12_1();
}

void CGSize.roundedToDisplay.getter()
{
  type metadata accessor for UIView();
  static UIView.screenScale.getter();
  static UIView.screenScale.getter();
  OUTLINED_FUNCTION_12_1();
}

double CGSize.min.getter(double result, double a2)
{
  if (a2 < result)
    return a2;
  return result;
}

double CGSize.max.getter(double result, double a2)
{
  if (result <= a2)
    return a2;
  return result;
}

BOOL CGSize.isSquare.getter(double a1, double a2)
{
  return a1 == a2;
}

BOOL CGSize.isPortrait.getter(double a1, double a2)
{
  return a1 < a2;
}

double CGSize.swapped.getter(double a1, double a2)
{
  return a2;
}

double CGSize.asPortrait.getter(double a1, double a2)
{
  if (a2 >= a1)
    return a1;
  else
    return a2;
}

double CGSize.asLandscape.getter(double a1, double a2)
{
  if (a1 >= a2)
    return a1;
  else
    return a2;
}

double CGSize.heightFromBottom(for:)(double a1, double a2, double a3)
{
  return a3 - (1.0 - a1) * a3;
}

void CGSize.rounded(_:toScale:)(uint64_t a1, double a2, double a3, double a4)
{
  CGFloat.rounded(_:toScale:)(a1, a2, a3);
  CGFloat.rounded(_:toScale:)(a1, a2, a4);
  OUTLINED_FUNCTION_0_75();
}

void CGSize.rounded(_:toScaleOf:)()
{
  id v0;
  double v1;

  OUTLINED_FUNCTION_3_8();
  objc_msgSend(v0, sel_displayScale);
  OUTLINED_FUNCTION_2_66(v1);
  OUTLINED_FUNCTION_1_60();
  OUTLINED_FUNCTION_0_75();
}

{
  id v0;
  id v1;
  double v2;

  OUTLINED_FUNCTION_3_8();
  v1 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v1, sel_displayScale);
  OUTLINED_FUNCTION_2_66(v2);
  OUTLINED_FUNCTION_1_60();

  OUTLINED_FUNCTION_0_75();
}

double CGSize.rounded(_:toScaleOf:)(uint64_t a1, void *a2, double a3, double a4)
{
  swift_getObjectType();
  return specialized CGPoint.rounded(_:toScaleOf:)(a1, a2, a3, a4);
}

uint64_t default argument 1 of View.clipShape<A>(_:style:)()
{
  return 256;
}

uint64_t DropdownMenuButtonStyle.labelColor.getter()
{
  return swift_retain();
}

void DropdownMenuButtonStyle.labelColor.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*DropdownMenuButtonStyle.labelColor.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t DropdownMenuButtonStyle.appearance.getter()
{
  return swift_retain();
}

void DropdownMenuButtonStyle.appearance.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_53_2();
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*DropdownMenuButtonStyle.appearance.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t DropdownMenuButtonStyle.shape.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t DropdownMenuButtonStyle.shape.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*DropdownMenuButtonStyle.shape.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t DropdownMenuButtonStyle.size.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 48));
}

uint64_t DropdownMenuButtonStyle.size.setter(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = v4 + *(int *)(a4 + 48);
  *(_QWORD *)v5 = result;
  *(_QWORD *)(v5 + 8) = a2;
  *(_BYTE *)(v5 + 16) = a3 & 1;
  return result;
}

uint64_t (*DropdownMenuButtonStyle.size.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double DropdownMenuButtonStyle.padding.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 52));
}

uint64_t DropdownMenuButtonStyle.padding.setter(uint64_t result, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  double *v6;

  v6 = (double *)(v5 + *(int *)(result + 52));
  *v6 = a2;
  v6[1] = a3;
  v6[2] = a4;
  v6[3] = a5;
  return result;
}

uint64_t (*DropdownMenuButtonStyle.padding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void DropdownMenuButtonStyle.makeBody(configuration:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  _OWORD *v50;
  __int128 v51;
  __int128 *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD v88[2];
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v3 = v2;
  v85 = a2;
  v72 = type metadata accessor for ButtonStyleConfiguration.Label();
  v5 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  *(_QWORD *)&v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v16 = v15 - v14;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_77();
  v20 = v19 - v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_77();
  v25 = v24 - v23;
  v70 = a1;
  v26 = *(_QWORD *)(a1 + 24);
  v76 = *(_QWORD *)(a1 + 16);
  v75 = v26;
  type metadata accessor for _ClipEffect();
  OUTLINED_FUNCTION_46_19();
  v77 = v21;
  v78 = v27;
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_23_36();
  OUTLINED_FUNCTION_2_69(v28);
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_39_28();
  OUTLINED_FUNCTION_33_18(v30);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  OUTLINED_FUNCTION_46_19();
  v31 = OUTLINED_FUNCTION_17_39((uint64_t)&v92);
  OUTLINED_FUNCTION_2_69(*(_QWORD *)(v31 - 8));
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_39_28();
  OUTLINED_FUNCTION_33_18(v33);
  v82 = v34;
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_23_36();
  OUTLINED_FUNCTION_2_69(v35);
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_39_28();
  OUTLINED_FUNCTION_33_18(v37);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnimationModifier<Color>);
  OUTLINED_FUNCTION_46_19();
  OUTLINED_FUNCTION_17_39((uint64_t)&v93);
  OUTLINED_FUNCTION_23_36();
  OUTLINED_FUNCTION_2_69(v38);
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_39_28();
  OUTLINED_FUNCTION_33_18(v40);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayModifier<AcceptFirstMouseView>);
  OUTLINED_FUNCTION_46_19();
  OUTLINED_FUNCTION_17_39((uint64_t)&v94);
  OUTLINED_FUNCTION_23_36();
  v84 = v41;
  v43 = MEMORY[0x1E0C80A78](v42);
  v83 = (char *)&v69 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_33_18((uint64_t)&v69 - v45);
  ButtonStyleConfiguration.label.getter();
  v46 = *(_QWORD *)(v2 + 16);
  v47 = v72;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v12, v8, v72);
  *(_QWORD *)(v12 + *(int *)(v71 + 36)) = v46;
  v48 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v48(v8, v47);
  v49 = v70;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of FeatureEligibility?(v12, v16, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>);
  v50 = (_OWORD *)(v16 + *(int *)(v73 + 36));
  v51 = v90;
  *v50 = v89;
  v50[1] = v51;
  v50[2] = v91;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v12, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>);
  v52 = (__int128 *)(v3 + *(int *)(v49 + 52));
  v73 = *v52;
  v53 = *((_QWORD *)v52 + 2);
  v54 = *((_QWORD *)v52 + 3);
  LOBYTE(v46) = static Edge.Set.all.getter();
  outlined init with copy of FeatureEligibility?(v16, v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>);
  v55 = v20 + *(int *)(v74 + 36);
  *(_BYTE *)v55 = v46;
  *(_OWORD *)(v55 + 8) = v73;
  *(_QWORD *)(v55 + 24) = v53;
  *(_QWORD *)(v55 + 32) = v54;
  *(_BYTE *)(v55 + 40) = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>);
  v56 = *(_QWORD *)(v3 + 24);
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  LOBYTE(v48) = static Edge.Set.all.getter();
  outlined init with copy of FeatureEligibility?(v20, v25, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>);
  v57 = v25 + *(int *)(v77 + 36);
  *(_QWORD *)v57 = v56;
  *(_BYTE *)(v57 + 8) = (_BYTE)v48;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>);
  v58 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
  v59 = v79;
  View.clipShape<A>(_:style:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v25, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  v60 = OUTLINED_FUNCTION_50();
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v60, v61);
  OUTLINED_FUNCTION_50();
  specialized Environment.wrappedValue.getter();
  v62 = OUTLINED_FUNCTION_50();
  outlined consume of Environment<CGFloat>.Content(v62, v63);
  v64 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD89F0], v78);
  v88[0] = v58;
  v88[1] = v64;
  v65 = v81;
  v66 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v81, v88);
  View.disabled(_:)();
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v59, v65);
  v67 = *(_QWORD *)v3;
  LOBYTE(v25) = *(_BYTE *)(v3 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)v3, v25);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v67, v25);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>);
  v86 = v66;
  v87 = v68;
  OUTLINED_FUNCTION_38_25();
}

void sub_1BD196254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  View.opacity(_:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 336) + 8))(v3, v2);
  *(_QWORD *)(v4 - 192) = *(_QWORD *)(v1 + 24);
  v6 = MEMORY[0x1E0CD9728];
  *(_QWORD *)(v4 - 208) = a1;
  *(_QWORD *)(v4 - 200) = v6;
  swift_retain();
  OUTLINED_FUNCTION_38_25();
}

void sub_1BD1962BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  lazy protocol witness table accessor for type Color and conformance Color();
  v6 = *(_QWORD *)(v4 - 312);
  View.animation<A>(_:value:)();
  OUTLINED_FUNCTION_11_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 304) + 8))(v3, v2);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _AnimationModifier<Color> and conformance _AnimationModifier<A>);
  *(_QWORD *)(v4 - 224) = a1;
  *(_QWORD *)(v4 - 216) = v7;
  v8 = *(_QWORD *)(v4 - 264);
  v9 = MEMORY[0x1C3B750C8](v1, v8, v4 - 224);
  View.acceptsFirstMouse()();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 280) + 8))(v6, v8);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _OverlayModifier<AcceptFirstMouseView> and conformance _OverlayModifier<A>);
  *(_QWORD *)(v4 - 240) = v9;
  *(_QWORD *)(v4 - 232) = v10;
  OUTLINED_FUNCTION_45_3();
}

uint64_t sub_1BD1963AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  v4 = *(_QWORD *)(v3 - 272);
  static ViewBuilder.buildExpression<A>(_:)(v2, v1, a1);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 256) + 8);
  v5(v2, v1);
  static ViewBuilder.buildBlock<A>(_:)(v4, v1, *(_QWORD *)(v3 - 248));
  return v5(v4, v1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    v3 = v2;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
}

void lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(uint64_t a1)
{
  void (*v1)(void);
  uint64_t *v2;

  if (!OUTLINED_FUNCTION_44_19(a1))
  {
    OUTLINED_FUNCTION_24_31(0, v2);
    v1();
    OUTLINED_FUNCTION_45_3();
  }
  OUTLINED_FUNCTION_43_1();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label);
    v3 = v2;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Color and conformance Color()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Color and conformance Color;
  if (!lazy protocol witness table cache variable for type Color and conformance Color)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDF5E8], MEMORY[0x1E0CDF5D0]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Color and conformance Color);
  }
  return result;
}

double default argument 4 of DropdownMenuButtonStyle.init(labelColor:appearance:shape:size:padding:)()
{
  return 0.0;
}

uint64_t DropdownMenuButtonStyle.init(labelColor:appearance:shape:size:padding:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>)
{
  uint64_t v26;
  int *v27;
  uint64_t result;
  uint64_t v29;
  double *v30;

  *(_QWORD *)a9 = swift_getKeyPath();
  *(_BYTE *)(a9 + 8) = 0;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  v27 = (int *)type metadata accessor for DropdownMenuButtonStyle(0, a7, a8, v26);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(a9 + v27[11], a3, a7);
  v29 = a9 + v27[12];
  *(_QWORD *)v29 = a4;
  *(_QWORD *)(v29 + 8) = a5;
  *(_BYTE *)(v29 + 16) = a6 & 1;
  v30 = (double *)(a9 + v27[13]);
  *v30 = a10;
  v30[1] = a11;
  v30[2] = a12;
  v30[3] = a13;
  return result;
}

void key path getter for EnvironmentValues.isEnabled : EnvironmentValues()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_35_18() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD196730()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_35_18() & 1;
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.isEnabled : EnvironmentValues()
{
  OUTLINED_FUNCTION_33_23();
  OUTLINED_FUNCTION_0();
}

void sub_1BD196768()
{
  OUTLINED_FUNCTION_33_23();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for DropdownMenuButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DropdownMenuButtonStyle);
}

uint64_t DropdownViewModel.MenuItem.id.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_50();
  return v1(v0);
}

void DropdownViewModel.MenuItem.label.getter()
{
  type metadata accessor for DropdownViewModel.MenuItem(0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for DropdownViewModel.MenuItem(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for DropdownViewModel.MenuItem);
}

void DropdownViewModel.MenuItem.onAction.getter()
{
  OUTLINED_FUNCTION_10_57();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void DropdownViewModel.MenuItem.accessibilityIdentifier.getter()
{
  OUTLINED_FUNCTION_10_57();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t DropdownViewModel.MenuItem.isEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DropdownViewModel.MenuItem(0) + 32));
}

void DropdownViewModel.MenuItem.isEnabled.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for DropdownViewModel.MenuItem(0) + 32)) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*DropdownViewModel.MenuItem.isEnabled.modify())(_QWORD)
{
  type metadata accessor for DropdownViewModel.MenuItem(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t one-time initialization function for separatorMenuItem()
{
  int *v0;
  uint64_t v1;
  uint64_t result;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v0 = (int *)type metadata accessor for DropdownViewModel.MenuItem(0);
  __swift_allocate_value_buffer((uint64_t)v0, static DropdownViewModel.MenuItem.separatorMenuItem);
  v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)static DropdownViewModel.MenuItem.separatorMenuItem);
  result = UUID.init()();
  v3 = (_QWORD *)(v1 + v0[5]);
  *v3 = 0x6F74617261706573;
  v3[1] = 0xE900000000000072;
  v4 = (_QWORD *)(v1 + v0[6]);
  *v4 = TPNumberPadCharacter.rawValue.getter;
  v4[1] = 0;
  v5 = (_QWORD *)(v1 + v0[7]);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  *(_BYTE *)(v1 + v0[8]) = 1;
  return result;
}

uint64_t default argument 3 of DropdownViewModel.MenuItem.init(label:onAction:accessibilityIdentifier:isEnabled:)()
{
  return 1;
}

int *DropdownViewModel.MenuItem.init(label:onAction:accessibilityIdentifier:isEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *result;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;

  OUTLINED_FUNCTION_26_26();
  UUID.init()();
  result = (int *)type metadata accessor for DropdownViewModel.MenuItem(0);
  v16 = (_QWORD *)(v11 + result[5]);
  *v16 = v10;
  v16[1] = v9;
  v17 = (_QWORD *)(v11 + result[6]);
  *v17 = v8;
  v17[1] = v7;
  v18 = (_QWORD *)(v11 + result[7]);
  *v18 = a5;
  v18[1] = a6;
  *(_BYTE *)(v11 + result[8]) = a7;
  return result;
}

uint64_t DropdownViewModel.MenuItem.separatorMenuItem.unsafeMutableAddressor()
{
  uint64_t v0;

  if (one-time initialization token for separatorMenuItem != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_10_57();
  return __swift_project_value_buffer(v0, (uint64_t)static DropdownViewModel.MenuItem.separatorMenuItem);
}

void static DropdownViewModel.MenuItem.separatorMenuItem.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for separatorMenuItem != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_10_57();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static DropdownViewModel.MenuItem.separatorMenuItem);
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of DropdownViewModel.MenuItem(v3, a1);
  OUTLINED_FUNCTION_32();
}

uint64_t outlined init with copy of DropdownViewModel.MenuItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DropdownViewModel.MenuItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static DropdownViewModel.MenuItem.separatorMenuItem.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (one-time initialization token for separatorMenuItem != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_10_57();
  __swift_project_value_buffer(v2, (uint64_t)static DropdownViewModel.MenuItem.separatorMenuItem);
  OUTLINED_FUNCTION_60_0();
  v3 = OUTLINED_FUNCTION_50();
  outlined assign with copy of DropdownViewModel.MenuItem(v3, v4);
  swift_endAccess();
  outlined destroy of DropdownViewModel.MenuItem(a1);
  OUTLINED_FUNCTION_32();
}

uint64_t outlined assign with copy of DropdownViewModel.MenuItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DropdownViewModel.MenuItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of DropdownViewModel.MenuItem(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DropdownViewModel.MenuItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static DropdownViewModel.MenuItem.separatorMenuItem.modify()
{
  uint64_t v0;

  if (one-time initialization token for separatorMenuItem != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_10_57();
  __swift_project_value_buffer(v0, (uint64_t)static DropdownViewModel.MenuItem.separatorMenuItem);
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for Identifiable.id.getter in conformance DropdownViewModel.MenuItem@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void DropdownViewModel.primaryText.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t DropdownViewModel.primaryColor.getter()
{
  return swift_retain();
}

void DropdownViewModel.symbolName.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void DropdownViewModel.primaryAction.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void DropdownViewModel._menuItems.modify()
{
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for DropdownViewModel.menuItems : DropdownViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
  *a2 = result;
  return result;
}

uint64_t key path setter for DropdownViewModel.menuItems : DropdownViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 168);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void DropdownViewModel.menuItems.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_30();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_2_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_43_1();
}

void sub_1BD196DBC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
  OUTLINED_FUNCTION_0();
}

void DropdownViewModel.menuItems.setter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_34_3(KeyPath, (uint64_t)partial apply for closure #1 in DropdownViewModel.menuItems.setter, *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v0 + 248), v2);
  OUTLINED_FUNCTION_22();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in DropdownViewModel.menuItems.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 72) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t partial apply for closure #1 in DropdownViewModel.menuItems.setter()
{
  uint64_t v0;

  return closure #1 in DropdownViewModel.menuItems.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void DropdownViewModel.menuItems.modify()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_25_10();
  *v1 = v2;
  v2[4] = v0;
  swift_getKeyPath();
  OUTLINED_FUNCTION_14_52();
  swift_release();
  OUTLINED_FUNCTION_15_8(OBJC_IVAR____TtC15ConversationKit17DropdownViewModel___observationRegistrar);
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DropdownViewModel and conformance DropdownViewModel);
  OUTLINED_FUNCTION_18_8(v3);
  OUTLINED_FUNCTION_22();
  DropdownViewModel._menuItems.modify();
  v2[7] = v4;
  OUTLINED_FUNCTION_91();
}

void DropdownViewModel.menuItems.modify(_QWORD *a1)
{
  DropdownViewModel.menuItems.modify(a1);
}

{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_19();
  free(v1);
}

void lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_44_19(a1))
  {
    v1(255);
    OUTLINED_FUNCTION_52_0();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for DropdownViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for DropdownViewModel);
}

void DropdownViewModel._isEnabled.modify()
{
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for DropdownViewModel.isEnabled : DropdownViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 208))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for DropdownViewModel.isEnabled : DropdownViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 216))(*a1);
}

uint64_t DropdownViewModel.isEnabled.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_29_30();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 80);
}

void sub_1BD197084(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 208))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD1970B4(unsigned __int8 *a1, uint64_t a2)
{
  (*(void (**)(_QWORD))(**(_QWORD **)a2 + 216))(*a1);
  OUTLINED_FUNCTION_0();
}

void DropdownViewModel.isEnabled.setter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_34_3(KeyPath, (uint64_t)partial apply for closure #1 in DropdownViewModel.isEnabled.setter, *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v0 + 248), v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in DropdownViewModel.isEnabled.setter(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(a1 + 80) = a2;
  return result;
}

uint64_t partial apply for closure #1 in DropdownViewModel.isEnabled.setter()
{
  uint64_t v0;

  return closure #1 in DropdownViewModel.isEnabled.setter(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void DropdownViewModel.isEnabled.modify()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_25_10();
  *v1 = v2;
  v2[4] = v0;
  swift_getKeyPath();
  OUTLINED_FUNCTION_14_52();
  swift_release();
  OUTLINED_FUNCTION_15_8(OBJC_IVAR____TtC15ConversationKit17DropdownViewModel___observationRegistrar);
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DropdownViewModel and conformance DropdownViewModel);
  OUTLINED_FUNCTION_18_8(v3);
  OUTLINED_FUNCTION_22();
  DropdownViewModel._isEnabled.modify();
  v2[7] = v4;
  OUTLINED_FUNCTION_91();
}

void DropdownViewModel.isEnabled.modify(_QWORD *a1)
{
  DropdownViewModel.menuItems.modify(a1);
}

uint64_t DropdownViewModel.__allocating_init(primaryText:primaryColor:symbolName:primaryAction:menuItems:isEnabled:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_64();
  v0 = swift_allocObject();
  DropdownViewModel.init(primaryText:primaryColor:symbolName:primaryAction:menuItems:isEnabled:)();
  return v0;
}

uint64_t DropdownViewModel.init(primaryText:primaryColor:symbolName:primaryAction:menuItems:isEnabled:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_4_64();
  ObservationRegistrar.init()();
  *(_QWORD *)(v1 + 16) = v8;
  *(_QWORD *)(v1 + 24) = v7;
  *(_QWORD *)(v1 + 32) = v6;
  *(_QWORD *)(v1 + 40) = v5;
  *(_QWORD *)(v1 + 48) = v4;
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v0;
  *(_BYTE *)(v1 + 80) = v9;
  return v1;
}

uint64_t DropdownViewModel.access<A>(keyPath:)()
{
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DropdownViewModel and conformance DropdownViewModel);
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t DropdownViewModel.withMutation<A, B>(keyPath:_:)()
{
  OUTLINED_FUNCTION_26_26();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DropdownViewModel and conformance DropdownViewModel);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void DropdownViewModel.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v0 = type metadata accessor for ObservationRegistrar();
  OUTLINED_FUNCTION_17_1(v0);
  OUTLINED_FUNCTION_0();
}

uint64_t DropdownViewModel.__deallocating_deinit()
{
  DropdownViewModel.deinit();
  return swift_deallocClassInstance();
}

void DropdownMenuButton.viewModel.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<DropdownViewModel>);
  State.wrappedValue.getter();
  OUTLINED_FUNCTION_43_1();
}

void key path getter for DropdownMenuButton.viewModel : DropdownMenuButton(_QWORD *a1@<X8>)
{
  uint64_t v2;

  DropdownMenuButton.viewModel.getter();
  *a1 = v2;
}

void key path setter for DropdownMenuButton.viewModel : DropdownMenuButton()
{
  swift_retain();
  DropdownMenuButton.viewModel.setter();
}

void DropdownMenuButton.viewModel.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<DropdownViewModel>);
  State.wrappedValue.setter();
  OUTLINED_FUNCTION_32();
}

void (*DropdownMenuButton.viewModel.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  _QWORD *v6;

  v6 = malloc(0x38uLL);
  *a1 = v6;
  v6[4] = a2;
  v6[5] = a3;
  *v6 = a2;
  v6[1] = a3;
  swift_retain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v6[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<DropdownViewModel>);
  State.wrappedValue.getter();
  return DropdownMenuButton.viewModel.modify;
}

void DropdownMenuButton.viewModel.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)a1;
  v2[3] = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v3 = v2[5];
  *v2 = v2[4];
  v2[1] = v3;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    OUTLINED_FUNCTION_41_5();
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_19();
  }
  else
  {
    OUTLINED_FUNCTION_41_5();
    OUTLINED_FUNCTION_11_0();
  }
  swift_release();
  free(v2);
}

uint64_t DropdownMenuButton.$viewModel.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<DropdownViewModel>);
  State.projectedValue.getter();
  return v1;
}

void DropdownMenuButton.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;

  *(_QWORD *)a3 = static VerticalAlignment.center.getter();
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Color?>>?>>>);
  closure #1 in DropdownMenuButton.body.getter(a1, a2, a3 + *(int *)(v10 + 44), a4, a5);
}

void closure #1 in DropdownMenuButton.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  v45 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v42 = *(_QWORD *)(v9 - 8);
  v43 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v13);
  v44 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a1;
  v47 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<DropdownViewModel>);
  State.wrappedValue.getter();
  v16 = v48[7];
  v15 = v48[8];
  swift_retain();
  swift_release();
  v46 = a1;
  v47 = a2;
  State.wrappedValue.getter();
  swift_bridgeObjectRetain();
  swift_release();
  v46 = a1;
  v47 = a2;
  State.wrappedValue.getter();
  v17 = v48[4];
  swift_retain();
  swift_release();
  DropdownMenuButton.primaryButton(action:text:color:)(v16, v15, v17, a1, a2, (uint64_t)v11, a4, a5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v46 = a1;
  v47 = a2;
  v18 = State.wrappedValue.getter();
  LOBYTE(v15) = (*(uint64_t (**)(uint64_t))(*v48 + 208))(v18);
  swift_release();
  KeyPath = swift_getKeyPath();
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 16) = (v15 & 1) == 0;
  v22 = v42;
  v21 = v43;
  v23 = (uint64_t)v40;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v40, v11, v43);
  v24 = (uint64_t *)(v23 + *(int *)(v41 + 36));
  *v24 = KeyPath;
  v24[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
  v24[2] = v20;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v21);
  v46 = a1;
  v47 = a2;
  State.wrappedValue.getter();
  v26 = v48[2];
  v25 = v48[3];
  swift_bridgeObjectRetain();
  swift_release();
  v46 = v26;
  v47 = v25;
  lazy protocol witness table accessor for type String and conformance String();
  v27 = Text.init<A>(_:)();
  v29 = v28;
  v31 = v30 & 1;
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  v32 = (uint64_t)v44;
  View.accessibilityLabel(_:)();
  outlined consume of Text.Storage(v27, v29, v31);
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v23, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
  v33 = static Alignment.trailing.getter();
  v35 = v34;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Color?>>?>>);
  v37 = v45;
  v38 = v45 + *(int *)(v36 + 36);
  closure #1 in closure #1 in DropdownMenuButton.body.getter(a1, a2, v38, a4, a5);
  v39 = (uint64_t *)(v38
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Color?>>?>)
                           + 36));
  *v39 = v33;
  v39[1] = v35;
  outlined init with take of Any?(v32, v37, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>);
}

uint64_t DropdownMenuButton.primaryButton(action:text:color:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;

  v36 = a5;
  v37 = a3;
  v39 = a6;
  v13 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v13);
  v15 = (_OWORD *)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DropdownMenuButtonStyle<RoundedRectangle>);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Group<_ConditionalContent<Image, Text>>>);
  v38 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  v40 = a4;
  v41 = v36;
  v42 = a7;
  v43 = a8;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<Image, Text>>);
  lazy protocol witness table accessor for type ForEach<[DropdownViewModel.MenuItem], UUID, _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> ForEach<A, B, C>((uint64_t)&lazy protocol witness table cache variable for type Group<_ConditionalContent<Image, Text>> and conformance <A> Group<A>);
  Button.init(action:label:)();
  v23 = static Color.white.getter();
  v24 = (char *)v15 + *(int *)(v13 + 20);
  v25 = *MEMORY[0x1E0CDB0C0];
  v26 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v24, v25, v26);
  __asm { FMOV            V0.2D, #6.0 }
  *v15 = _Q0;
  *(_QWORD *)v18 = swift_getKeyPath();
  v18[8] = 0;
  v32 = v37;
  *((_QWORD *)v18 + 2) = v23;
  *((_QWORD *)v18 + 3) = v32;
  outlined init with take of RoundedRectangle((uint64_t)v15, (uint64_t)&v18[v16[11]]);
  v33 = &v18[v16[12]];
  *(double *)v33 = a7;
  *((double *)v33 + 1) = a8;
  v33[16] = 0;
  v34 = &v18[v16[13]];
  *(_OWORD *)v34 = 0u;
  *((_OWORD *)v34 + 1) = 0u;
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Button<Group<_ConditionalContent<Image, Text>>> and conformance Button<A>);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type DropdownMenuButtonStyle<RoundedRectangle> and conformance DropdownMenuButtonStyle<A>);
  swift_retain();
  View.buttonStyle<A>(_:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for DropdownMenuButtonStyle<RoundedRectangle>);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v21, v19);
}

uint64_t closure #1 in closure #1 in DropdownMenuButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v50 = a3;
  v9 = type metadata accessor for BorderlessButtonStyle();
  v44 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<EmptyView, ForEach<[DropdownViewModel.MenuItem], UUID, _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>>>>);
  v43 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v17);
  v47 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1E0C80A78](v49);
  v45 = (uint64_t)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a1;
  v52 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<DropdownViewModel>);
  v20 = State.wrappedValue.getter();
  v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v55 + 160))(v20);
  swift_release();
  v22 = *(_QWORD *)(v21 + 16);
  swift_bridgeObjectRelease();
  if (v22)
  {
    v51 = a1;
    v52 = a2;
    v23 = State.wrappedValue.getter();
    v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v55 + 160))(v23);
    v42 = v24;
    v25 = swift_release();
    MEMORY[0x1E0C80A78](v25);
    *(&v42 - 6) = v24;
    *(&v42 - 5) = a1;
    *(&v42 - 4) = a2;
    *((double *)&v42 - 3) = a4;
    *((double *)&v42 - 2) = a5;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[DropdownViewModel.MenuItem], UUID, _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>>>);
    lazy protocol witness table accessor for type ForEach<[DropdownViewModel.MenuItem], UUID, _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> ForEach<A, B, C>((uint64_t)&lazy protocol witness table cache variable for type ForEach<[DropdownViewModel.MenuItem], UUID, _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> ForEach<A, B, C>);
    Menu.init(content:label:)();
    BorderlessButtonStyle.init()();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Menu<EmptyView, ForEach<[DropdownViewModel.MenuItem], UUID, _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>>>> and conformance Menu<A, B>);
    v27 = v26;
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type BorderlessButtonStyle and conformance BorderlessButtonStyle);
    v29 = v28;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v12);
    LocalizedStringKey.init(stringLiteral:)();
    v51 = v12;
    v52 = v9;
    v53 = v27;
    v54 = v29;
    swift_getOpaqueTypeConformance2();
    v30 = (uint64_t)v47;
    v31 = v48;
    View.accessibilityLabel(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v31);
    v32 = static Color.white.getter();
    KeyPath = swift_getKeyPath();
    v34 = v45;
    outlined init with copy of FeatureEligibility?(v30, v45, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>);
    v35 = v49;
    v36 = (uint64_t *)(v34 + *(int *)(v49 + 36));
    *v36 = KeyPath;
    v36[1] = v32;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v30, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>);
    swift_bridgeObjectRelease();
    v37 = v50;
    outlined init with take of Any?(v34, v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Color?>>);
    v38 = 0;
    v39 = v37;
    v40 = v35;
  }
  else
  {
    v38 = 1;
    v40 = v49;
    v39 = v50;
  }
  return __swift_storeEnumTagSinglePayload(v39, v38, 1, v40);
}

double closure #2 in DropdownMenuButton.primaryButton(action:text:color:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  double result;
  __int128 v6;
  _OWORD v7[2];
  char v8;

  closure #1 in closure #2 in DropdownMenuButton.primaryButton(action:text:color:)(a1, a2, (uint64_t)v7);
  v4 = v8;
  result = *(double *)v7;
  v6 = v7[1];
  *(_OWORD *)a3 = v7[0];
  *(_OWORD *)(a3 + 16) = v6;
  *(_BYTE *)(a3 + 32) = v4;
  return result;
}

double closure #1 in closure #2 in DropdownMenuButton.primaryButton(action:text:color:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _QWORD *v8;
  __int128 v9;
  __int128 v10;
  char v11;

  *(_QWORD *)&v9 = a1;
  *((_QWORD *)&v9 + 1) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<DropdownViewModel>);
  State.wrappedValue.getter();
  v4 = v8[6];
  swift_bridgeObjectRetain();
  swift_release();
  if (v4)
  {
    Image.init(systemName:)();
  }
  else
  {
    State.wrappedValue.getter();
    v6 = v8[2];
    v5 = v8[3];
    swift_bridgeObjectRetain();
    swift_release();
    *(_QWORD *)&v9 = v6;
    *((_QWORD *)&v9 + 1) = v5;
    lazy protocol witness table accessor for type String and conformance String();
    Text.init<A>(_:)();
  }
  _ConditionalContent<>.init(storage:)();
  result = *(double *)&v9;
  *(_OWORD *)a3 = v9;
  *(_OWORD *)(a3 + 16) = v10;
  *(_BYTE *)(a3 + 32) = v11;
  return result;
}

uint64_t closure #1 in DropdownMenuButton.menu(items:)(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a4;
  *(_QWORD *)(v9 + 24) = a5;
  *(double *)(v9 + 32) = a1;
  *(double *)(v9 + 40) = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DropdownViewModel.MenuItem]);
  type metadata accessor for UUID();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>>);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DropdownViewModel.MenuItem] and conformance [A]);
  lazy protocol witness table accessor for type _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DropdownViewModel.MenuItem and conformance DropdownViewModel.MenuItem);
  return ForEach<>.init(_:content:)();
}

void closure #1 in closure #1 in DropdownMenuButton.menu(items:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  int *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _QWORD v34[3];
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v6);
  v38 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1E0C80A78](v40);
  v39 = (uint64_t)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>>.Storage);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Divider();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DropdownViewModel.MenuItem(0);
  v17 = (uint64_t *)(a1 + *(int *)(v16 + 20));
  v18 = *v17;
  v19 = v17[1];
  v20 = *v17 == 0x6F74617261706573 && v19 == 0xE900000000000072;
  if (v20 || (v21 = (int *)v16, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    Divider.init()();
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v15, v12);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type Divider and conformance Divider);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v22 = v21[7];
    v23 = (uint64_t *)(a1 + v21[6]);
    v25 = *v23;
    v24 = v23[1];
    v35 = *(unsigned __int8 *)(a1 + v21[8]);
    v26 = *(_QWORD *)(a1 + v22 + 8);
    v34[1] = *(_QWORD *)(a1 + v22);
    v34[2] = v26;
    v27 = swift_allocObject();
    v34[0] = v34;
    *(_QWORD *)(v27 + 16) = v25;
    *(_QWORD *)(v27 + 24) = v24;
    MEMORY[0x1E0C80A78](v27);
    v34[-2] = v18;
    v34[-1] = v19;
    swift_retain();
    Button.init(action:label:)();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>);
    v28 = v37;
    v29 = (uint64_t)v38;
    View.accessibilityIdentifier(_:)();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v28);
    KeyPath = swift_getKeyPath();
    v31 = swift_allocObject();
    *(_BYTE *)(v31 + 16) = (v35 & 1) == 0;
    v32 = v39;
    outlined init with copy of FeatureEligibility?(v29, v39, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>);
    v33 = (uint64_t *)(v32 + *(int *)(v40 + 36));
    *v33 = KeyPath;
    v33[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
    v33[2] = v31;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>);
    outlined init with copy of FeatureEligibility?(v32, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type Divider and conformance Divider);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v32, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>);
  }
}

uint64_t closure #2 in DropdownMenuButton.menuButton(action:title:enabled:accessibilityIdentifier:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  result = Text.init<A>(_:)();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

double DropdownMenuButton.init(viewModel:)()
{
  type metadata accessor for DropdownViewModel(0);
  State.init(wrappedValue:)();
  return 70.0;
}

void protocol witness for View.body.getter in conformance DropdownMenuButton(uint64_t a1@<X8>)
{
  uint64_t v1;

  DropdownMenuButton.body.getter(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

unint64_t static $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC07059Ll7PreviewfMf_15PreviewRegistryfMu_.fileID.getter()
{
  return 0xD000000000000028;
}

uint64_t static $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC07059Ll7PreviewfMf_15PreviewRegistryfMu_.line.getter()
{
  return 152;
}

uint64_t static $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC07059Ll7PreviewfMf_15PreviewRegistryfMu_.column.getter()
{
  return 1;
}

uint64_t static $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC07059Ll7PreviewfMf_15PreviewRegistryfMu_.makePreview()()
{
  return Preview.init(_:traits:body:)();
}

uint64_t closure #1 in closure #1 in static $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC07059Ll7PreviewfMf_15PreviewRegistryfMu_.makePreview()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;

  v19 = static HorizontalAlignment.center.getter();
  closure #1 in closure #1 in closure #1 in static $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC070597PreviewfMf_15PreviewRegistryfMu_.makePreview()((uint64_t)&v20);
  v2 = v21;
  v18 = v20;
  v3 = v22;
  v4 = v23;
  v5 = v24;
  v6 = v25;
  v7 = v26;
  v8 = v27;
  v9 = v28;
  v10 = v29;
  v11 = v30;
  v12 = v31;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v13 = v20;
  v14 = v22;
  v15 = v24;
  v16 = v25;
  v34 = 1;
  v33 = v21;
  v32 = v23;
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(DropdownMenuButton, DropdownMenuButton, DropdownMenuButton)>>, _FrameLayout>);
  a1[4] = lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(DropdownMenuButton, DropdownMenuButton, DropdownMenuButton)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  result = swift_allocObject();
  *a1 = result;
  *(_QWORD *)(result + 16) = v19;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = v34;
  *(_QWORD *)(result + 40) = v18;
  *(_QWORD *)(result + 48) = v2;
  *(_QWORD *)(result + 56) = v3;
  *(_QWORD *)(result + 64) = v4;
  *(_QWORD *)(result + 72) = v5;
  *(_QWORD *)(result + 80) = v6;
  *(_QWORD *)(result + 88) = v7;
  *(_QWORD *)(result + 96) = v8;
  *(_QWORD *)(result + 104) = v9;
  *(_QWORD *)(result + 112) = v10;
  *(_QWORD *)(result + 120) = v11;
  *(_QWORD *)(result + 128) = v12;
  *(_QWORD *)(result + 136) = v13;
  *(_BYTE *)(result + 144) = v33;
  *(_QWORD *)(result + 152) = v14;
  *(_BYTE *)(result + 160) = v32;
  *(_QWORD *)(result + 168) = v15;
  *(_QWORD *)(result + 176) = v16;
  return result;
}

uint64_t closure #1 in closure #1 in closure #1 in static $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC07059Ll7PreviewfMf_15PreviewRegistryfMu_.makePreview()@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  static Color.green.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<DropdownViewModel.MenuItem>);
  v2 = (int *)type metadata accessor for DropdownViewModel.MenuItem(0);
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD645380;
  v7 = v6 + v5;
  UUID.init()();
  v8 = (char *)(v7 + v2[5]);
  strcpy(v8, "FaceTime Audio");
  v8[15] = -18;
  v9 = (_QWORD *)(v7 + v2[6]);
  *v9 = TPNumberPadCharacter.rawValue.getter;
  v9[1] = 0;
  v10 = (char *)(v7 + v2[7]);
  strcpy(v10, "facetime-audio");
  v10[15] = -18;
  *(_BYTE *)(v7 + v2[8]) = 1;
  v11 = v7 + v4;
  UUID.init()();
  v12 = (_QWORD *)(v11 + v2[5]);
  *v12 = 0x32756E654DLL;
  v12[1] = 0xE500000000000000;
  v13 = (_QWORD *)(v11 + v2[6]);
  *v13 = TPNumberPadCharacter.rawValue.getter;
  v13[1] = 0;
  v14 = (_QWORD *)(v11 + v2[7]);
  *v14 = 0x32756E656DLL;
  v14[1] = 0xE500000000000000;
  *(_BYTE *)(v11 + v2[8]) = 1;
  type metadata accessor for DropdownViewModel(0);
  swift_allocObject();
  DropdownViewModel.init(primaryText:primaryColor:symbolName:primaryAction:menuItems:isEnabled:)();
  State.init(wrappedValue:)();
  static Color.green.getter();
  swift_allocObject();
  DropdownViewModel.init(primaryText:primaryColor:symbolName:primaryAction:menuItems:isEnabled:)();
  State.init(wrappedValue:)();
  static Color.green.getter();
  swift_allocObject();
  DropdownViewModel.init(primaryText:primaryColor:symbolName:primaryAction:menuItems:isEnabled:)();
  State.init(wrappedValue:)();
  *(_QWORD *)a1 = v16;
  *(_QWORD *)(a1 + 8) = v17;
  *(_OWORD *)(a1 + 16) = xmmword_1BD64D660;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v17;
  *(_OWORD *)(a1 + 48) = xmmword_1BD64D660;
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v17;
  *(_OWORD *)(a1 + 80) = xmmword_1BD64D660;
  swift_retain();
  return swift_release();
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in DropdownMenuButtonStyle<A>()
{
  return swift_getOpaqueTypeConformance2();
}

void associated type witness table accessor for Identifiable.ID : Hashable in DropdownViewModel.MenuItem()
{
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
}

uint64_t associated type witness table accessor for View.Body : View in DropdownMenuButton()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t protocol witness for static PreviewRegistry.fileID.getter in conformance $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC07059Ll7PreviewfMf_15PreviewRegistryfMu_()
{
  static $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC070597PreviewfMf_15PreviewRegistryfMu_.fileID.getter();
  return 0xD000000000000028;
}

uint64_t protocol witness for static PreviewRegistry.line.getter in conformance $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC07059Ll7PreviewfMf_15PreviewRegistryfMu_()
{
  return 152;
}

uint64_t protocol witness for static PreviewRegistry.makePreview() in conformance $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC07059Ll7PreviewfMf_15PreviewRegistryfMu_()
{
  return static $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC070597PreviewfMf_15PreviewRegistryfMu_.makePreview()();
}

uint64_t type metadata instantiation function for DropdownMenuButtonStyle()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata completion function for DropdownMenuButtonStyle()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DropdownMenuButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  unint64_t v19;
  unint64_t v20;
  __int128 v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v8 + ((v7 + 32) & ~v7) + 31) & 0xFFFFFFFFFFFFFFF8) + 32 > 0x18)
  {
    v11 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    v12 = *(_QWORD *)a2;
    v13 = *(_BYTE *)(a2 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v13);
    *(_QWORD *)a1 = v12;
    *(_BYTE *)(a1 + 8) = v13;
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
    v14 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v15;
    v16 = ((unint64_t)v14 + v7 + 8) & ~v7;
    v17 = ((unint64_t)v15 + v7 + 8) & ~v7;
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_retain();
    swift_retain();
    v18(v16, v17, v5);
    v19 = (v16 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = (v17 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = *(_OWORD *)v20;
    *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
    *(_OWORD *)v19 = v21;
    v22 = (_OWORD *)((v16 + v8 + 31) & 0xFFFFFFFFFFFFFFF8);
    v23 = (_OWORD *)((v17 + v8 + 31) & 0xFFFFFFFFFFFFFFF8);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
  }
  return a1;
}

uint64_t destroy for DropdownMenuButtonStyle(uint64_t a1, uint64_t a2)
{
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  swift_release();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t initializeWithCopy for DropdownMenuButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __int128 v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v8 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v8 + v12 + 8) & ~v12;
  v14 = ((unint64_t)v9 + v12 + 8) & ~v12;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  swift_retain();
  swift_retain();
  v15(v13, v14, v10);
  v16 = *(_QWORD *)(v11 + 64);
  v17 = v13 + v16;
  v18 = v14 + v16;
  v19 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  *(_OWORD *)v19 = v21;
  v22 = (_OWORD *)((v17 + 31) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_OWORD *)((v18 + 31) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  return a1;
}

uint64_t assignWithCopy for DropdownMenuButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  _QWORD *v23;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_retain();
  swift_release();
  v10 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  swift_retain();
  swift_release();
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)v10 + v13 + 8) & ~v13;
  v15 = ((unint64_t)v11 + v13 + 8) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64);
  v17 = v14 + v16;
  v18 = v15 + v16;
  v19 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_BYTE *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = v21;
  v22 = (_QWORD *)((v17 + 31) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v18 + 31) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v22[1] = v23[1];
  v22[2] = v23[2];
  v22[3] = v23[3];
  return a1;
}

uint64_t initializeWithTake for DropdownMenuButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v4 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((a2 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 8) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = v8 + v10;
  v12 = v9 + v10;
  v13 = (v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_OWORD *)v14;
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  *(_OWORD *)v13 = v15;
  v16 = (_OWORD *)((v11 + 31) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_OWORD *)((v12 + 31) & 0xFFFFFFFFFFFFFFF8);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  return a1;
}

uint64_t assignWithTake for DropdownMenuButtonStyle(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  _QWORD *v23;

  v4 = a2;
  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  v4 = (uint64_t *)((unint64_t)v4 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = v4[2];
  swift_release();
  v10 = (_QWORD *)(((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v4 + 31) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  swift_release();
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)v10 + v13 + 8) & ~v13;
  v15 = ((unint64_t)v11 + v13 + 8) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64);
  v17 = v14 + v16;
  v18 = v15 + v16;
  v19 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_BYTE *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = v21;
  v22 = (_QWORD *)((v17 + 31) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v18 + 31) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v22[1] = v23[1];
  v22[2] = v23[2];
  v22[3] = v23[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for DropdownMenuButtonStyle(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t v14;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    v13 = a1 & 0xFFFFFFFFFFFFFFF8;
    if ((v6 & 0x80000000) != 0)
    {
      return __swift_getEnumTagSinglePayload((((v13 + 31) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8, v6, v4);
    }
    else
    {
      v14 = *(_QWORD *)(v13 + 16);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v5 + 64) + ((v8 + 32) & ~v8) + 31) & 0xFFFFFFFFFFFFFFF8) + 32) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BD1996BC + 4 * byte_1BD64D670[v11]))();
  }
}

void storeEnumTagSinglePayload for DropdownMenuButtonStyle(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64)
       + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
       + 31) & 0xFFFFFFFFFFFFFFF8)
     + 32;
  if (v6 >= a3)
  {
    v10 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~*(unsigned __int8 *)(v5 + 80)) + 31) & 0xFFFFFFF8) == 0xFFFFFFE0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (a2 > v6)
  {
    if ((_DWORD)v7)
    {
      v11 = ~v6 + a2;
      bzero(a1, v7);
      *a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_1BD199844@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a1)
  {
    v7 = v5 & 0xFFFFFFFFFFFFFFF8;
    if ((a2 & 0x80000000) != 0)
    {
      return __swift_storeEnumTagSinglePayload((((v7 + 31) & 0xFFFFFFFFFFFFFFF8) + v4 + 8) & a4, a1, a2, a3);
    }
    else
    {
      if ((a1 & 0x80000000) != 0)
        v8 = a1 ^ 0x80000000;
      else
        v8 = (a1 - 1);
      *(_QWORD *)(v7 + 16) = v8;
    }
  }
  return result;
}

uint64_t ObjC metadata update function for DropdownViewModel()
{
  return type metadata accessor for DropdownViewModel(0);
}

uint64_t type metadata completion function for DropdownViewModel()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DropdownViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DropdownViewModel.menuItems.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DropdownViewModel.menuItems.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DropdownViewModel.menuItems.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DropdownViewModel.isEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DropdownViewModel.isEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DropdownViewModel.isEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DropdownViewModel.__allocating_init(primaryText:primaryColor:symbolName:primaryAction:menuItems:isEnabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of DropdownViewModel.access<A>(keyPath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DropdownViewModel.withMutation<A, B>(keyPath:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

_QWORD *initializeBufferWithCopyOfBuffer for DropdownViewModel.MenuItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (_QWORD *)((char *)a1 + v16);
    v19 = (_QWORD *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DropdownViewModel.MenuItem(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DropdownViewModel.MenuItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DropdownViewModel.MenuItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for DropdownViewModel.MenuItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for DropdownViewModel.MenuItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  swift_release();
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for DropdownViewModel.MenuItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD199DFC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  if (*(_DWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8) + 84) == a2)
  {
    v5 = OUTLINED_FUNCTION_50();
    return __swift_getEnumTagSinglePayload(v5, v6, v7);
  }
  else
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DropdownViewModel.MenuItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD199E7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for DropdownViewModel.MenuItem()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for DropdownMenuButton()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for DropdownMenuButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for DropdownMenuButton(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_OWORD *assignWithTake for DropdownMenuButton(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for DropdownMenuButton()
{
  return &type metadata for DropdownMenuButton;
}

ValueMetadata *type metadata accessor for $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC07059Ll7PreviewfMf_15PreviewRegistryfMu_()
{
  return &type metadata for $s15ConversationKit0029DropdownMenuButtonswift_tAFJhfMX151_0_33_145CC22525012368AB9D61C69EC070597PreviewfMf_15PreviewRegistryfMu_;
}

uint64_t sub_1BD19A0B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  v0 = type metadata accessor for _ClipEffect();
  v1 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v2 = type metadata accessor for ModifiedContent();
  v3 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnimationModifier<Color>);
  v4 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayModifier<AcceptFirstMouseView>);
  v5 = type metadata accessor for ModifiedContent();
  v18[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ButtonStyleConfiguration.Label, _ForegroundStyleModifier<Color>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
  v18[1] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD89F0], v0);
  v6 = MEMORY[0x1E0CD9C20];
  v7 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v18);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>);
  v17[0] = v7;
  v17[1] = v8;
  v16[0] = MEMORY[0x1C3B750C8](v6, v2, v17);
  v16[1] = MEMORY[0x1E0CD9728];
  v9 = MEMORY[0x1C3B750C8](v6, v3, v16);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _AnimationModifier<Color> and conformance _AnimationModifier<A>);
  v15[0] = v9;
  v15[1] = v10;
  v11 = MEMORY[0x1C3B750C8](v6, v4, v15);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _OverlayModifier<AcceptFirstMouseView> and conformance _OverlayModifier<A>);
  v14[0] = v11;
  v14[1] = v12;
  return MEMORY[0x1C3B750C8](v6, v5, v14);
}

void sub_1BD19A290()
{
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type HStack<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Color?>>?>>> and conformance HStack<A>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(DropdownMenuButton, DropdownMenuButton, DropdownMenuButton)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(DropdownMenuButton, DropdownMenuButton, DropdownMenuButton)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(DropdownMenuButton, DropdownMenuButton, DropdownMenuButton)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(DropdownMenuButton, DropdownMenuButton, DropdownMenuButton)>>, _FrameLayout>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type VStack<TupleView<(DropdownMenuButton, DropdownMenuButton, DropdownMenuButton)>> and conformance VStack<A>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(DropdownMenuButton, DropdownMenuButton, DropdownMenuButton)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD19A340()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

_BYTE *partial apply for closure #1 in View.disabled(_:)(_BYTE *a1)
{
  uint64_t v1;

  return closure #1 in View.disabled(_:)(a1, *(_BYTE *)(v1 + 16));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  _QWORD v9[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Group<_ConditionalContent<Image, Text>>>);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for DropdownMenuButtonStyle<RoundedRectangle>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Button<Group<_ConditionalContent<Image, Text>>> and conformance Button<A>);
    v5 = v4;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type DropdownMenuButtonStyle<RoundedRectangle> and conformance DropdownMenuButtonStyle<A>);
    v9[2] = v2;
    v9[3] = v3;
    v9[4] = v5;
    v9[5] = v6;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>);
    v9[0] = OpaqueTypeConformance2;
    v9[1] = v8;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v9);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  _QWORD v6[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Image>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Image> and conformance Button<A>, &demangling cache variable for type metadata for Button<Image>);
    v6[2] = v2;
    v6[3] = &type metadata for ScreenSharingToolbarButtonStyle;
    v6[4] = v3;
    v6[5] = lazy protocol witness table accessor for type ScreenSharingToolbarButtonStyle and conformance ScreenSharingToolbarButtonStyle();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v6[0] = OpaqueTypeConformance2;
    v6[1] = v5;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v6);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  _QWORD v6[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<VStack<TupleView<(ModifiedContent<HStack<TupleView<(ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>??, ModifiedContent<Text, _FixedSizeLayout>)>>, _FlexFrameLayout>, Text?)>>>);
    v6[2] = v2;
    v6[3] = &type metadata for ShareCardButtonStyle;
    v6[4] = v3;
    v6[5] = lazy protocol witness table accessor for type ShareCardButtonStyle and conformance ShareCardButtonStyle();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v6[0] = OpaqueTypeConformance2;
    v6[1] = v5;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v6);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  _QWORD v9[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Text>);
    v3 = type metadata accessor for CallControlTextButtonStyle(255);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
    v5 = v4;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlTextButtonStyle and conformance CallControlTextButtonStyle, (void (*)(uint64_t))type metadata accessor for CallControlTextButtonStyle);
    v9[2] = v2;
    v9[3] = v3;
    v9[4] = v5;
    v9[5] = v6;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    v9[0] = OpaqueTypeConformance2;
    v9[1] = v8;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v9);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in DropdownMenuButton.menu(items:)()
{
  uint64_t v0;

  return closure #1 in DropdownMenuButton.menu(items:)(*(double *)(v0 + 40), *(double *)(v0 + 48), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>>);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type Divider and conformance Divider);
    v3[0] = v2;
    v3[1] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Button<Text>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<Text>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>);
    v3 = v2;
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD19A664()
{
  swift_release();
  OUTLINED_FUNCTION_53_2();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in DropdownMenuButton.menu(items:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  closure #1 in closure #1 in DropdownMenuButton.menu(items:)(a1, a2);
}

void lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_44_19(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v1);
    OUTLINED_FUNCTION_52_0();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD19A6C8()
{
  OUTLINED_FUNCTION_53_2();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in DropdownMenuButton.menuButton(action:title:enabled:accessibilityIdentifier:)@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in DropdownMenuButton.menuButton(action:title:enabled:accessibilityIdentifier:)(a1);
}

double partial apply for closure #2 in DropdownMenuButton.primaryButton(action:text:color:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #2 in DropdownMenuButton.primaryButton(action:text:color:)(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void lazy protocol witness table accessor for type ForEach<[DropdownViewModel.MenuItem], UUID, _ConditionalContent<Divider, ModifiedContent<ModifiedContent<Button<Text>, AccessibilityAttachmentModifier>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> ForEach<A, B, C>(uint64_t a1)
{
  void (*v1)(void);
  uint64_t *v2;

  if (!OUTLINED_FUNCTION_44_19(a1))
  {
    OUTLINED_FUNCTION_24_31(0, v2);
    v1();
    OUTLINED_FUNCTION_45_3();
  }
  OUTLINED_FUNCTION_43_1();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<Image, Text> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<Image, Text> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<Image, Text> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<Image, Text>);
    v2[0] = MEMORY[0x1E0CDF820];
    v2[1] = MEMORY[0x1E0CDDD58];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<Image, Text> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t outlined init with take of RoundedRectangle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static MomentsIndicatorViewDisplayStyle.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void MomentsIndicatorViewDisplayStyle.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

void MomentsIndicatorViewDisplayStyle.hashValue.getter()
{
  char v0;

  OUTLINED_FUNCTION_7_65();
  Hasher._combine(_:)(v0 & 1);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MomentsIndicatorViewDisplayStyle(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MomentsIndicatorViewDisplayStyle.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance MomentsIndicatorViewDisplayStyle()
{
  MomentsIndicatorViewDisplayStyle.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance MomentsIndicatorViewDisplayStyle(uint64_t a1)
{
  char *v1;

  MomentsIndicatorViewDisplayStyle.hash(into:)(a1, *v1);
}

BOOL static MomentsIndicatorType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void MomentsIndicatorType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

BOOL static MomentsIndicatorType.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

void MomentsIndicatorType.hashValue.getter()
{
  unsigned __int8 v0;

  OUTLINED_FUNCTION_7_65();
  Hasher._combine(_:)(v0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MomentsIndicatorType(char *a1, char *a2)
{
  return static MomentsIndicatorType.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance MomentsIndicatorType()
{
  MomentsIndicatorType.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance MomentsIndicatorType(uint64_t a1)
{
  unsigned __int8 *v1;

  MomentsIndicatorType.hash(into:)(a1, *v1);
}

BOOL protocol witness for static Comparable.< infix(_:_:) in conformance MomentsIndicatorType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MomentsIndicatorType.< infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for static Comparable.<= infix(_:_:) in conformance MomentsIndicatorType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized static Comparable.<= infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for static Comparable.>= infix(_:_:) in conformance MomentsIndicatorType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized static Comparable.>= infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for static Comparable.> infix(_:_:) in conformance MomentsIndicatorType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized static Comparable.> infix(_:_:)(*a1, *a2);
}

void MomentsIndicatorView.displayStyle.didset(char a1)
{
  uint64_t v1;
  unsigned __int8 *v3;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit20MomentsIndicatorView_displayStyle);
  swift_beginAccess();
  if (((((a1 & 1) == 0) ^ *v3) & 1) == 0)
    MomentsIndicatorView.refreshLayout()();
}

uint64_t MomentsIndicatorView.displayStyle.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit20MomentsIndicatorView_displayStyle);
  OUTLINED_FUNCTION_1();
  return *v1;
}

void MomentsIndicatorView.displayStyle.setter(char a1)
{
  uint64_t v1;
  char v2;
  char *v3;
  char v4;

  v2 = a1 & 1;
  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit20MomentsIndicatorView_displayStyle);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = v2;
  MomentsIndicatorView.displayStyle.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void (*MomentsIndicatorView.displayStyle.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit20MomentsIndicatorView_displayStyle);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v3 + 32) = *v4;
  return MomentsIndicatorView.displayStyle.modify;
}

void MomentsIndicatorView.displayStyle.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  MomentsIndicatorView.displayStyle.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

uint64_t MomentsIndicatorView.bubblesByType.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit20MomentsIndicatorView_bubblesByType);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

id MomentsIndicatorView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id MomentsIndicatorView.init(frame:)()
{
  _BYTE *v0;
  uint64_t v1;
  _BYTE *v2;
  id v3;
  objc_super v5;

  v0[OBJC_IVAR____TtC15ConversationKit20MomentsIndicatorView_displayStyle] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit20MomentsIndicatorView_bubblesByType;
  OUTLINED_FUNCTION_6_49();
  lazy protocol witness table accessor for type MomentsIndicatorType and conformance MomentsIndicatorType();
  v2 = v0;
  *(_QWORD *)&v0[v1] = Dictionary.init(dictionaryLiteral:)();

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for MomentsIndicatorView();
  v3 = objc_msgSendSuper2(&v5, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, sel_setUserInteractionEnabled_, 0);
  return v3;
}

unint64_t lazy protocol witness table accessor for type MomentsIndicatorType and conformance MomentsIndicatorType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MomentsIndicatorType and conformance MomentsIndicatorType;
  if (!lazy protocol witness table cache variable for type MomentsIndicatorType and conformance MomentsIndicatorType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MomentsIndicatorType, &type metadata for MomentsIndicatorType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MomentsIndicatorType and conformance MomentsIndicatorType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MomentsIndicatorType and conformance MomentsIndicatorType;
  if (!lazy protocol witness table cache variable for type MomentsIndicatorType and conformance MomentsIndicatorType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MomentsIndicatorType, &type metadata for MomentsIndicatorType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MomentsIndicatorType and conformance MomentsIndicatorType);
  }
  return result;
}

uint64_t type metadata accessor for MomentsIndicatorView()
{
  return objc_opt_self();
}

id MomentsIndicatorView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void MomentsIndicatorView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;

  v0[OBJC_IVAR____TtC15ConversationKit20MomentsIndicatorView_displayStyle] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit20MomentsIndicatorView_bubblesByType;
  OUTLINED_FUNCTION_6_49();
  lazy protocol witness table accessor for type MomentsIndicatorType and conformance MomentsIndicatorType();
  *(_QWORD *)&v0[v1] = Dictionary.init(dictionaryLiteral:)();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void MomentsIndicatorView.didTimeOut(for:)(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_1();
  v2 = a1;
  v3 = OUTLINED_FUNCTION_16_39();
  v4 = specialized _NativeDictionary.filter(_:)(v3, a1);
  OUTLINED_FUNCTION_53();
  MomentsIndicatorView.bubblesByType.setter(v4);
  objc_msgSend(a1, sel_removeFromSuperview);
  MomentsIndicatorView.refreshLayout()();
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall MomentsIndicatorView.presentCaptureIndicator(type:remoteParticipantName:)(ConversationKit::MomentsIndicatorType type, Swift::String remoteParticipantName)
{
  char *v2;
  char *v3;
  char *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  void (*v19)(_QWORD *);
  id v20;
  uint64_t v21;
  Class isa;
  _QWORD v23[5];

  v3 = v2;
  object = (char *)remoteParticipantName._object;
  countAndFlagsBits = remoteParticipantName._countAndFlagsBits;
  v6 = type;
  v7 = (char *)type metadata accessor for DispatchPredicate();
  v8 = *((_QWORD *)v7 - 1);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_17_8(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, char *))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7);
  v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, char *))(v8 + 8))(v11, v7);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = (uint64_t *)&v3[OBJC_IVAR____TtC15ConversationKit20MomentsIndicatorView_bubblesByType];
  OUTLINED_FUNCTION_1();
  specialized Dictionary.subscript.getter(v6, *v13);
  if (!v14)
  {
    type metadata accessor for MomentsIndicatorViewModel();
    OUTLINED_FUNCTION_15();
    MomentsIndicatorViewModel.init(type:remoteParticipantName:)(v6, countAndFlagsBits, (uint64_t)object);
    v16 = objc_allocWithZone((Class)OUTLINED_FUNCTION_6_49());
    swift_bridgeObjectRetain();
    v17 = swift_retain();
    v18 = MomentsIndicatorBubble.init(model:)(v17);
    objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v23[3] = type metadata accessor for MomentsIndicatorView();
    v23[4] = &protocol witness table for MomentsIndicatorView;
    v23[0] = v3;
    v19 = *(void (**)(_QWORD *))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v18) + 0x98);
    object = v3;
    v19(v23);
    objc_msgSend(v18, sel_setAlpha_, 0.0);
    OUTLINED_FUNCTION_2_0();
    v7 = v18;
    specialized Dictionary._Variant.setValue(_:forKey:)((uint64_t)v7, v6);
    swift_endAccess();
    objc_msgSend(object, sel_addSubview_, v7);
    v23[0] = MomentsIndicatorView.makeCommonConstraints(for:)(v7);
    swift_bridgeObjectRetain();
    v20 = MomentsIndicatorView.makeBottomConstraint(for:in:)(v7);
    v21 = swift_bridgeObjectRelease();
    if (!v20)
    {
LABEL_7:
      OUTLINED_FUNCTION_17_8(v21, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      isa = Array._bridgeToObjectiveC()().super.isa;
      OUTLINED_FUNCTION_53();
      objc_msgSend(object, sel_addConstraints_, isa);

      objc_msgSend(object, sel_setNeedsLayout);
      objc_msgSend(object, sel_layoutIfNeeded);
      objc_msgSend(v7, sel_start);

      OUTLINED_FUNCTION_11_0();
      goto LABEL_8;
    }
    v6 = (uint64_t)v20;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v23[0] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v23[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_6:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      goto LABEL_7;
    }
LABEL_10:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_6;
  }
  v15 = v14;
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v14) + 0xE0))();

LABEL_8:
  MomentsIndicatorView.refreshLayout()();
}

void MomentsIndicatorView.refreshLayout()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  char *v18;
  _QWORD aBlock[6];
  _QWORD v20[6];

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit20MomentsIndicatorView_bubblesByType];
  OUTLINED_FUNCTION_1();
  specialized _NativeDictionary.makeIterator()(v20, *(_QWORD *)v1);
  v2 = v20[0];
  v3 = v20[1];
  v4 = v20[3];
  v5 = v20[4];
  v6 = (unint64_t)(v20[2] + 64) >> 6;
  swift_bridgeObjectRetain_n();
  if (!v5)
    goto LABEL_3;
LABEL_2:
  v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v8 = v7 | (v4 << 6);
  while (1)
  {
    v13 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v8);
    v14 = (void *)objc_opt_self();
    v15 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v15 + 16) = v0;
    *(_OWORD *)(v15 + 24) = xmmword_1BD64DAB0;
    *(_QWORD *)(v15 + 40) = v13;
    aBlock[4] = partial apply for closure #1 in closure #1 in MomentsIndicatorView.refreshLayout();
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_29;
    v16 = _Block_copy(aBlock);
    v17 = v13;
    v18 = v0;
    swift_release();
    objc_msgSend(v14, sel_animateKeyframesWithDuration_delay_options_animations_completion_, 0, v16, 0, 0.25, 0.0);
    _Block_release(v16);

    if (v5)
      goto LABEL_2;
LABEL_3:
    v9 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v9 >= v6)
      goto LABEL_23;
    v10 = *(_QWORD *)(v3 + 8 * v9);
    v11 = v4 + 1;
    if (!v10)
    {
      v11 = v4 + 2;
      if (v4 + 2 >= v6)
        goto LABEL_23;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (!v10)
      {
        v11 = v4 + 3;
        if (v4 + 3 >= v6)
          goto LABEL_23;
        v10 = *(_QWORD *)(v3 + 8 * v11);
        if (!v10)
        {
          v11 = v4 + 4;
          if (v4 + 4 >= v6)
            goto LABEL_23;
          v10 = *(_QWORD *)(v3 + 8 * v11);
          if (!v10)
          {
            v11 = v4 + 5;
            if (v4 + 5 >= v6)
              goto LABEL_23;
            v10 = *(_QWORD *)(v3 + 8 * v11);
            if (!v10)
            {
              v11 = v4 + 6;
              if (v4 + 6 >= v6)
                goto LABEL_23;
              v10 = *(_QWORD *)(v3 + 8 * v11);
              if (!v10)
              {
                v12 = v4 + 7;
                while (v12 < v6)
                {
                  v10 = *(_QWORD *)(v3 + 8 * v12++);
                  if (v10)
                  {
                    v11 = v12 - 1;
                    goto LABEL_20;
                  }
                }
LABEL_23:
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_11_0();
                return;
              }
            }
          }
        }
      }
    }
LABEL_20:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
    v4 = v11;
  }
  __break(1u);
}

void animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout()(void *a1, void *a2, double a3, double a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  void *v21;
  id (*v22)();
  uint64_t v23;

  v8 = (void *)objc_opt_self();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v22 = partial apply for closure #1 in animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout();
  v23 = v9;
  v10 = MEMORY[0x1E0C809B0];
  v18 = MEMORY[0x1E0C809B0];
  v19 = 1107296256;
  v20 = thunk for @escaping @callee_guaranteed () -> ();
  v21 = &block_descriptor_6_1;
  v11 = _Block_copy(&v18);
  v12 = a1;
  v13 = a2;
  swift_release();
  objc_msgSend(v8, sel_addKeyframeWithRelativeStartTime_relativeDuration_animations_, v11, 0.0, 1.0);
  _Block_release(v11);
  objc_msgSend(v12, sel_alpha);
  if ((v14 & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v12;
    v22 = partial apply for closure #2 in animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout();
    v23 = v15;
    v18 = v10;
    v19 = 1107296256;
    v20 = thunk for @escaping @callee_guaranteed () -> ();
    v21 = &block_descriptor_12_0;
    v16 = _Block_copy(&v18);
    v17 = v12;
    swift_release();
    objc_msgSend(v8, sel_addKeyframeWithRelativeStartTime_relativeDuration_animations_, v16, a3, a4);
    _Block_release(v16);
  }
}

id closure #1 in animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout()(_QWORD *a1, void *a2)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void (*v8)(id);
  id v9;

  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xA8))();
  if (v5)
  {
    v6 = (void *)v5;
    objc_msgSend(a2, sel_removeConstraint_, v5);

  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v7 = MomentsIndicatorView.makeBottomConstraint(for:in:)(a1);
  swift_bridgeObjectRelease();
  if (v7)
  {
    v8 = *(void (**)(id))((*v4 & *a1) + 0xB0);
    v9 = v7;
    v8(v7);
    objc_msgSend(a2, sel_addConstraint_, v9);

  }
  else
  {
    (*(void (**)(_QWORD))((*v4 & *a1) + 0xB0))(0);
  }
  objc_msgSend(a2, sel_setNeedsLayout);
  return objc_msgSend(a2, sel_layoutIfNeeded);
}

id MomentsIndicatorView.makeCommonConstraints(for:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  double v8;
  _QWORD *v9;
  _QWORD *v10;
  double v11;
  id v12;
  id v13;
  id result;
  id v15;
  __int128 v16;
  __int128 v17;
  _QWORD v18[3];
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v3 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v3 + 16) = xmmword_1BD644B60;
  OUTLINED_FUNCTION_17_8(v3, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  v4 = OUTLINED_FUNCTION_6_49();
  v5 = type metadata accessor for MomentsIndicatorView();
  v6 = a1;
  v7 = v1;
  v8 = OUTLINED_FUNCTION_14_53();
  *(_QWORD *)(v3 + 32) = @nonobjc NSLayoutConstraint.__allocating_init(item:attribute:relatedBy:toItem:attribute:multiplier:constant:)(v9, 9, 0, v10, 9, v8, v11);
  v19 = v4;
  *((_QWORD *)&v17 + 1) = v5;
  v18[0] = v6;
  *(_QWORD *)&v16 = v7;
  v12 = v6;
  v13 = v7;
  result = @nonobjc NSLayoutConstraint.init(item:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:)(v18, 7, -1, &v16, 7, 0.85, 0.0, 750.0);
  if (result)
  {
    *(_QWORD *)(v3 + 40) = result;
    v19 = v4;
    v18[0] = v12;
    v16 = 0u;
    v17 = 0u;
    v15 = v12;
    result = @nonobjc NSLayoutConstraint.init(item:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:)(v18, 7, -1, &v16, 0, 1.0, 500.0, 1000.0);
    if (result)
    {
      *(_QWORD *)(v3 + 48) = result;
      v18[0] = v3;
      specialized Array._endMutation()();
      return (id)v18[0];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id @nonobjc NSLayoutConstraint.__allocating_init(item:attribute:relatedBy:toItem:attribute:multiplier:constant:)(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  id v23;
  uint64_t v25;
  uint64_t v26;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = _bridgeAnythingToObjectiveC<A>(_:)();
  v15 = a4[3];
  if (v15)
  {
    v16 = __swift_project_boxed_opaque_existential_1(a4, a4[3]);
    v25 = a5;
    v26 = a2;
    v17 = a3;
    v18 = *(_QWORD *)(v15 - 8);
    MEMORY[0x1E0C80A78](v16);
    v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    v21 = _bridgeAnythingToObjectiveC<A>(_:)();
    v22 = *(void (**)(char *, uint64_t))(v18 + 8);
    a3 = v17;
    v22(v20, v15);
    a5 = v25;
    a2 = v26;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
  }
  else
  {
    v21 = 0;
  }
  v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_, v14, a2, a3, v21, a5, a6, a7);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v23;
}

id @nonobjc NSLayoutConstraint.init(item:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:)(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, double a6, double a7, float a8)
{
  uint64_t v14;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *ObjCClassFromMetadata;
  double v28;
  id v29;
  uint64_t v31;
  uint64_t v32;

  v32 = a5;
  v14 = a1[3];
  if (v14)
  {
    v16 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v17 = *(_QWORD *)(v14 - 8);
    MEMORY[0x1E0C80A78](v16);
    v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v17 + 16))(v19);
    v20 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v20 = 0;
  }
  v21 = a4[3];
  if (v21)
  {
    v22 = __swift_project_boxed_opaque_existential_1(a4, a4[3]);
    v23 = *(_QWORD *)(v21 - 8);
    MEMORY[0x1E0C80A78](v22);
    v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v25);
    v26 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
  }
  else
  {
    v26 = 0;
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  *(float *)&v28 = a8;
  v29 = objc_msgSend(ObjCClassFromMetadata, sel_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_priority_, v20, a2, a3, v26, v32, a6, a7, v28);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v29;
}

id MomentsIndicatorView.makeBottomConstraint(for:in:)(void *a1)
{
  void *v1;
  uint64_t *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  char v18;
  _QWORD v19[4];
  uint64_t v20[3];
  uint64_t v21;

  v3 = a1;
  v4 = OUTLINED_FUNCTION_16_39();
  v20[0] = specialized _copyCollectionToContiguousArray<A>(_:)(v4);
  specialized MutableCollection<>.sort(by:)(v20, v1);
  OUTLINED_FUNCTION_53();
  v5 = v20[0];
  v6 = specialized Collection<>.firstIndex(of:)(v1, v20[0]);
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationKit);
    v15 = Logger.logObject.getter();
    v16 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1BD004000, v15, v16, "bubble is missing from bubblesByType", v17, 2u);
      MEMORY[0x1C3B751B8](v17, -1, -1);
    }

    return 0;
  }
  else
  {
    if (v6)
    {
      v8 = v6 - 1;
      if (__OFSUB__(v6, 1))
      {
        __break(1u);
      }
      else
      {
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v6 - 1, (v5 & 0xC000000000000001) == 0, v5);
        if ((v5 & 0xC000000000000001) == 0)
        {
          v9 = *(id *)(v5 + 8 * v8 + 32);
LABEL_6:
          v10 = v9;
          v11 = OUTLINED_FUNCTION_11_0();
          OUTLINED_FUNCTION_17_8(v11, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
          v21 = OUTLINED_FUNCTION_6_49();
          v19[3] = v21;
          v20[0] = (uint64_t)v1;
          v19[0] = v10;
          v12 = v1;
          return @nonobjc NSLayoutConstraint.__allocating_init(item:attribute:relatedBy:toItem:attribute:multiplier:constant:)(v20, 4, 0, v19, 3, 1.0, -10.0);
        }
      }
      v9 = (id)MEMORY[0x1C3B73D18](v8, v5);
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_11_0();
    v18 = OUTLINED_FUNCTION_3_67(*v2);
    return MomentsIndicatorView.makeBottomConstraint(for:style:)((uint64_t)v1, v18 & 1);
  }
}

id MomentsIndicatorView.makeBottomConstraint(for:style:)(uint64_t a1, char a2)
{
  void *v2;
  id v4;
  char *v5;
  uint64_t *v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  OUTLINED_FUNCTION_17_8(a1, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  type metadata accessor for MomentsIndicatorBubble();
  OUTLINED_FUNCTION_17_40();
  OUTLINED_FUNCTION_15_48();
  v4 = v2;
  if ((a2 & 1) != 0)
  {
    v7 = OUTLINED_FUNCTION_14_53();
    v9 = 10;
  }
  else
  {
    v5 = &v12;
    v6 = &v11;
    v7 = 0.75;
    v8 = 0.0;
    v9 = 4;
  }
  return @nonobjc NSLayoutConstraint.__allocating_init(item:attribute:relatedBy:toItem:attribute:multiplier:constant:)(v5, 10, 0, v6, v9, v7, v8);
}

id MomentsIndicatorView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MomentsIndicatorView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for MomentsIndicatorBubbleDelegate.didTimeOut(for:) in conformance MomentsIndicatorView()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x90))();
}

void specialized MutableCollection<>.sort(by:)(uint64_t *a1, void *a2)
{
  uint64_t v3;
  id v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  id v7;
  uint64_t v8[2];

  v3 = *a1;
  v4 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    specialized _ContiguousArrayBuffer._consumeAndCreateNew()();
  v6 = *(_QWORD *)(v3 + 16);
  v8[0] = v3 + 32;
  v8[1] = v6;
  v7 = v4;
  specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(v8, v7);
  specialized ContiguousArray._endMutation()();

}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(uint64_t *a1, void *a2)
{
  uint64_t v2;
  Swift::Int v4;
  _QWORD *v5;
  Swift::Int v6;
  Swift::Int v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  uint64_t (*v18)(void);
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  unsigned int v23;
  Swift::Int v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t (*v28)(void);
  _QWORD *v29;
  id v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  Swift::Int v36;
  Swift::Int v37;
  uint64_t *v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  _QWORD *v43;
  Swift::Int v44;
  Swift::Int v45;
  void *v46;
  uint64_t (*v47)(void);
  _QWORD *v48;
  id v49;
  uint64_t v50;
  unsigned int v51;
  void *v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  Swift::Int *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  char v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  Swift::Int v116;
  uint64_t v117;
  uint64_t v118;
  Swift::Int v119;
  uint64_t v120;
  uint64_t v121;
  Swift::Int v122;
  void **v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;

  v4 = a1[1];
  v5 = a2;
  v6 = _minimumMergeRunLength(_:)(v4);
  if (v6 >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v4, 1, a1, v5);
      else

      goto LABEL_113;
    }
    goto LABEL_136;
  }
  v7 = v6;
  v126 = v2;
  v129 = v5;
  specialized static Array._allocateUninitialized(_:)(v4 / 2);
  v123 = v8;
  v130 = v9;
  v121 = v4;
  v115 = a1;
  if (v4 <= 0)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    v55 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_97:
    if (v55 < 2)
    {
LABEL_111:
      swift_bridgeObjectRelease();
      if (v4 >= -1)
        goto LABEL_112;
      goto LABEL_141;
    }
    v107 = *v115;
    v128 = *v115;
    while (1)
    {
      v108 = v55 - 2;
      if (v55 < 2)
        break;
      if (!v107)
        goto LABEL_145;
      v109 = *(_QWORD *)(v12 + 32 + 16 * v108);
      v110 = *(_QWORD *)(v12 + 32 + 16 * (v55 - 1) + 8);
      specialized _merge<A>(low:mid:high:buffer:by:)((void **)(v107 + 8 * v109), (id *)(v107 + 8 * *(_QWORD *)(v12 + 32 + 16 * (v55 - 1))), v107 + 8 * v110, v123, v129);
      if (v126)
        goto LABEL_94;
      if (v110 < v109)
        goto LABEL_131;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew()(v12);
        v12 = v113;
      }
      if (v108 >= *(_QWORD *)(v12 + 16))
        goto LABEL_132;
      v111 = (_QWORD *)(v12 + 32 + 16 * v108);
      *v111 = v109;
      v111[1] = v110;
      v112 = *(_QWORD *)(v12 + 16);
      if (v55 > v112)
        goto LABEL_133;
      memmove((void *)(v12 + 32 + 16 * (v55 - 1)), (const void *)(v12 + 32 + 16 * v55), 16 * (v112 - v55));
      *(_QWORD *)(v12 + 16) = v112 - 1;
      v55 = v112 - 1;
      v86 = v112 > 2;
      v4 = v121;
      v107 = v128;
      if (!v86)
        goto LABEL_111;
    }
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:

    __break(1u);
LABEL_143:
    v34 = v129;

    __break(1u);
LABEL_144:

    __break(1u);
LABEL_145:

    __break(1u);
    return;
  }
  v116 = v7;
  v10 = 0;
  v11 = *a1;
  v114 = *a1 - 8;
  v12 = MEMORY[0x1E0DEE9D8];
  v127 = *a1;
  while (1)
  {
    v13 = v10;
    v14 = v10 + 1;
    v122 = v10;
    if (v10 + 1 >= v4)
    {
      v34 = v129;
    }
    else
    {
      v117 = v12;
      v15 = *(_QWORD **)(v11 + 8 * v14);
      v16 = *(void **)(v11 + 8 * v10);
      v17 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v18 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v15) + 0x78);
      v19 = v15;
      v20 = v16;
      v124 = *(unsigned __int8 *)(v18() + 16);
      v21 = swift_release();
      v22 = *(uint64_t (**)(uint64_t))((*v17 & *v129) + 0x78);
      v23 = *(unsigned __int8 *)(v22(v21) + 16);

      swift_release();
      v14 = v13 + 2;
      if (v13 + 2 < v4)
      {
        v24 = v13;
        while (1)
        {
          v25 = v127 + 8 * v24;
          v27 = *(void **)(v25 + 8);
          v26 = *(_QWORD **)(v25 + 16);
          v28 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v26) + 0x78);
          v29 = v26;
          v30 = v27;
          LODWORD(v28) = *(unsigned __int8 *)(v28() + 16);
          v31 = swift_release();
          v32 = *(unsigned __int8 *)(v22(v31) + 16);

          swift_release();
          if (v23 < v124 == v32 >= v28)
            break;
          v33 = v24 + 3;
          ++v24;
          if (v33 >= v121)
          {
            v14 = v121;
            goto LABEL_12;
          }
        }
        v14 = v24 + 2;
LABEL_12:
        v13 = v122;
      }
      v11 = v127;
      v34 = v129;
      v12 = v117;
      if (v23 >= v124)
      {
        v4 = v121;
      }
      else
      {
        v4 = v121;
        if (v14 < v13)
          goto LABEL_138;
        if (v13 < v14)
        {
          v35 = (uint64_t *)(v114 + 8 * v14);
          v36 = v14;
          v37 = v13;
          v38 = (uint64_t *)(v127 + 8 * v13);
          do
          {
            if (v37 != --v36)
            {
              if (!v127)
                goto LABEL_144;
              v39 = *v38;
              *v38 = *v35;
              *v35 = v39;
            }
            ++v37;
            --v35;
            ++v38;
          }
          while (v37 < v36);
        }
      }
    }
    if (v14 < v4)
    {
      if (__OFSUB__(v14, v13))
        goto LABEL_135;
      if (v14 - v13 < v116)
      {
        if (__OFADD__(v13, v116))
          goto LABEL_139;
        if (v13 + v116 >= v4)
          v40 = v4;
        else
          v40 = v13 + v116;
        if (v40 < v13)
          goto LABEL_140;
        if (v14 != v40)
        {
          v118 = v12;
          v41 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v34) + 0x78);
          v42 = v114 + 8 * v14;
          v119 = v40;
          do
          {
            v43 = *(_QWORD **)(v11 + 8 * v14);
            v44 = v13;
            v125 = v42;
            while (1)
            {
              v45 = v14;
              v46 = *(void **)v42;
              v47 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v43) + 0x78);
              v48 = v43;
              v49 = v46;
              LODWORD(v47) = *(unsigned __int8 *)(v47() + 16);
              v50 = swift_release();
              v51 = *(unsigned __int8 *)(v41(v50) + 16);

              swift_release();
              if (v51 >= v47)
                break;
              v11 = v127;
              if (!v127)
                goto LABEL_142;
              v14 = v45;
              v52 = *(void **)v42;
              v43 = *(_QWORD **)(v42 + 8);
              *(_QWORD *)v42 = v43;
              *(_QWORD *)(v42 + 8) = v52;
              v42 -= 8;
              if (v45 == ++v44)
                goto LABEL_39;
            }
            v11 = v127;
            v14 = v45;
LABEL_39:
            ++v14;
            v42 = v125 + 8;
            v13 = v122;
          }
          while (v14 != v119);
          v14 = v119;
          v12 = v118;
        }
      }
    }
    if (v14 < v13)
      goto LABEL_134;
    v120 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v12 + 16) + 1, 1, (char *)v12);
      v12 = v105;
    }
    v54 = *(_QWORD *)(v12 + 16);
    v53 = *(_QWORD *)(v12 + 24);
    v55 = v54 + 1;
    if (v54 >= v53 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1, (char *)v12);
      v12 = v106;
    }
    *(_QWORD *)(v12 + 16) = v55;
    v56 = v12 + 32;
    v57 = (Swift::Int *)(v12 + 32 + 16 * v54);
    *v57 = v13;
    v57[1] = v120;
    if (v54)
      break;
    v55 = 1;
LABEL_89:
    v10 = v120;
    v4 = v121;
    if (v120 >= v121)
      goto LABEL_97;
  }
  while (1)
  {
    v58 = v55 - 1;
    if (v55 >= 4)
    {
      v63 = v56 + 16 * v55;
      v64 = *(_QWORD *)(v63 - 64);
      v65 = *(_QWORD *)(v63 - 56);
      v69 = __OFSUB__(v65, v64);
      v66 = v65 - v64;
      if (v69)
        goto LABEL_119;
      v68 = *(_QWORD *)(v63 - 48);
      v67 = *(_QWORD *)(v63 - 40);
      v69 = __OFSUB__(v67, v68);
      v61 = v67 - v68;
      v62 = v69;
      if (v69)
        goto LABEL_120;
      v70 = v55 - 2;
      v71 = (uint64_t *)(v56 + 16 * (v55 - 2));
      v73 = *v71;
      v72 = v71[1];
      v69 = __OFSUB__(v72, v73);
      v74 = v72 - v73;
      if (v69)
        goto LABEL_121;
      v69 = __OFADD__(v61, v74);
      v75 = v61 + v74;
      if (v69)
        goto LABEL_123;
      if (v75 >= v66)
      {
        v93 = (uint64_t *)(v56 + 16 * v58);
        v95 = *v93;
        v94 = v93[1];
        v69 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v69)
          goto LABEL_129;
        v86 = v61 < v96;
        goto LABEL_78;
      }
    }
    else
    {
      if (v55 != 3)
      {
        v87 = *(_QWORD *)(v12 + 32);
        v88 = *(_QWORD *)(v12 + 40);
        v69 = __OFSUB__(v88, v87);
        v80 = v88 - v87;
        v81 = v69;
        goto LABEL_72;
      }
      v60 = *(_QWORD *)(v12 + 32);
      v59 = *(_QWORD *)(v12 + 40);
      v69 = __OFSUB__(v59, v60);
      v61 = v59 - v60;
      v62 = v69;
    }
    if ((v62 & 1) != 0)
      goto LABEL_122;
    v70 = v55 - 2;
    v76 = (uint64_t *)(v56 + 16 * (v55 - 2));
    v78 = *v76;
    v77 = v76[1];
    v79 = __OFSUB__(v77, v78);
    v80 = v77 - v78;
    v81 = v79;
    if (v79)
      goto LABEL_124;
    v82 = (uint64_t *)(v56 + 16 * v58);
    v84 = *v82;
    v83 = v82[1];
    v69 = __OFSUB__(v83, v84);
    v85 = v83 - v84;
    if (v69)
      goto LABEL_126;
    if (__OFADD__(v80, v85))
      goto LABEL_128;
    if (v80 + v85 >= v61)
    {
      v86 = v61 < v85;
LABEL_78:
      if (v86)
        v58 = v70;
      goto LABEL_80;
    }
LABEL_72:
    if ((v81 & 1) != 0)
      goto LABEL_125;
    v89 = (uint64_t *)(v56 + 16 * v58);
    v91 = *v89;
    v90 = v89[1];
    v69 = __OFSUB__(v90, v91);
    v92 = v90 - v91;
    if (v69)
      goto LABEL_127;
    if (v92 < v80)
      goto LABEL_89;
LABEL_80:
    v97 = v58 - 1;
    if (v58 - 1 >= v55)
    {
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
      goto LABEL_130;
    }
    if (!v11)
      goto LABEL_143;
    v98 = (uint64_t *)(v56 + 16 * v97);
    v99 = v56;
    v100 = *v98;
    v101 = v58;
    v102 = (_QWORD *)(v99 + 16 * v58);
    v103 = v102[1];
    specialized _merge<A>(low:mid:high:buffer:by:)((void **)(v11 + 8 * *v98), (id *)(v11 + 8 * *v102), v11 + 8 * v103, v123, v129);
    if (v126)
      break;
    if (v103 < v100)
      goto LABEL_116;
    if (v101 > *(_QWORD *)(v12 + 16))
      goto LABEL_117;
    *v98 = v100;
    v56 = v12 + 32;
    *(_QWORD *)(v12 + 32 + 16 * v97 + 8) = v103;
    v104 = *(_QWORD *)(v12 + 16);
    if (v101 >= v104)
      goto LABEL_118;
    v126 = 0;
    v55 = v104 - 1;
    memmove(v102, v102 + 2, 16 * (v104 - 1 - v101));
    *(_QWORD *)(v12 + 16) = v104 - 1;
    v11 = v127;
    if (v104 <= 2)
      goto LABEL_89;
  }
LABEL_94:
  swift_bridgeObjectRelease();
  if (v121 < -1)
    goto LABEL_137;
LABEL_112:
  *(_QWORD *)((v130 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()();
  v5 = v129;

  swift_bridgeObjectRelease();
LABEL_113:

}

void specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  id v13;
  uint64_t v14;
  unsigned int v15;
  void *v16;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);

  if (a3 != a2)
  {
    v5 = a3;
    v20 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a5) + 0x78);
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v8 = *(_QWORD **)(v6 + 8 * v5);
      v9 = a1;
      v19 = v7;
      do
      {
        v10 = *(void **)v7;
        v11 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v8) + 0x78);
        v12 = v8;
        v13 = v10;
        LODWORD(v11) = *(unsigned __int8 *)(v11() + 16);
        v14 = swift_release();
        v15 = *(unsigned __int8 *)(v20(v14) + 16);

        swift_release();
        if (v15 >= v11)
          break;
        if (!v6)
        {
          __break(1u);
          return;
        }
        v16 = *(void **)v7;
        v8 = *(_QWORD **)(v7 + 8);
        *(_QWORD *)v7 = v8;
        *(_QWORD *)(v7 + 8) = v16;
        v7 -= 8;
        ++v9;
      }
      while (v5 != v9);
      ++v5;
      v7 = v19 + 8;
      if (v5 != a2)
        continue;
      break;
    }
  }

}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(void **a1, id *a2, unint64_t a3, void **a4, _QWORD *a5)
{
  void **v5;
  id *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  unint64_t v15;
  void *v16;
  uint64_t (*v17)(void);
  id v18;
  id v19;
  uint64_t v20;
  void **v21;
  BOOL v22;
  id *v25;
  _QWORD *v26;
  id *v27;
  id *v28;
  void *v29;
  uint64_t (*v30)(void);
  _QWORD *v31;
  id v32;
  uint64_t v33;
  unsigned int v34;
  BOOL v35;
  BOOL v36;
  void **v39;
  uint64_t (*v40)(uint64_t);
  id *v41;
  unint64_t v42;
  id *v43;
  uint64_t (*v44)(uint64_t);
  unint64_t v45;

  v5 = a4;
  v7 = a2;
  v8 = a1;
  v9 = (char *)a2 - (char *)a1;
  v10 = a2 - a1;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v10 >= v12)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v13 = &v5[v12];
    if (v8 >= v7 || v11 <= 7)
      goto LABEL_39;
    v39 = v5;
    v40 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a5) + 0x78);
    v25 = (id *)(a3 - 8);
    while (1)
    {
      v43 = v7;
      v45 = (unint64_t)v13;
      v41 = v25 + 1;
      v27 = v13 - 1;
      v26 = *(v13 - 1);
      v28 = v7 - 1;
      v29 = *(v7 - 1);
      v30 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v26) + 0x78);
      v31 = v26;
      v32 = v29;
      LODWORD(v30) = *(unsigned __int8 *)(v30() + 16);
      v33 = swift_release();
      v34 = *(unsigned __int8 *)(v40(v33) + 16);

      swift_release();
      if (v34 >= v30)
      {
        v7 = v43;
        v36 = v41 != (id *)v45 || (unint64_t)v25 >= v45;
        v28 = v27;
        v13 = v27;
        v5 = v39;
        if (!v36)
          goto LABEL_35;
      }
      else
      {
        v35 = v41 != v43 || v25 >= v43;
        v7 = v28;
        v5 = v39;
        v13 = (void **)v45;
        if (!v35)
          goto LABEL_35;
      }
      *v25 = *v28;
LABEL_35:
      --v25;
      if (v7 <= v8 || v13 <= v5)
        goto LABEL_39;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2 - a1, a4);
  v13 = &v5[v10];
  if ((unint64_t)v7 < a3 && v9 > 7)
  {
    v42 = a3;
    v44 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a5) + 0x78);
    do
    {
      v15 = (unint64_t)v13;
      v16 = *v5;
      v17 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v7) + 0x78);
      v18 = *v7;
      v19 = v16;
      LODWORD(v16) = *(unsigned __int8 *)(v17() + 16);
      v20 = swift_release();
      LODWORD(v17) = *(unsigned __int8 *)(v44(v20) + 16);

      swift_release();
      if (v17 >= v16)
      {
        v21 = v5;
        v22 = v8 == v5++;
      }
      else
      {
        v21 = v7;
        v22 = v8 == v7++;
      }
      v13 = (void **)v15;
      if (!v22)
        *v8 = *v21;
      ++v8;
    }
    while ((unint64_t)v5 < v15 && (unint64_t)v7 < v42);
  }
  v7 = v8;
LABEL_39:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v5, v13 - v5, v7);

  return 1;
}

uint64_t specialized _NativeDictionary.filter(_:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t isStackAllocationSafe;
  void *v8;
  unint64_t *v9;
  id v10;
  uint64_t v11;
  unint64_t *v12;
  id v13;
  uint64_t v14;
  _QWORD v16[2];

  v3 = a1;
  v16[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  isStackAllocationSafe = a2;
  v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v16 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v6, v9);
    v10 = v8;
    specialized closure #1 in _NativeDictionary.filter(_:)(v9, v6, v3, v10);
    if (v2)
      swift_willThrow();
    else
      v3 = v11;

  }
  else
  {
    v12 = (unint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v6, v12);
    v13 = v8;
    specialized closure #1 in _NativeDictionary.filter(_:)(v12, v6, v3, v13);
    v3 = v14;
    MEMORY[0x1C3B751B8](v12, -1, -1);

  }
  return v3;
}

unint64_t lazy protocol witness table accessor for type MomentsIndicatorViewDisplayStyle and conformance MomentsIndicatorViewDisplayStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MomentsIndicatorViewDisplayStyle and conformance MomentsIndicatorViewDisplayStyle;
  if (!lazy protocol witness table cache variable for type MomentsIndicatorViewDisplayStyle and conformance MomentsIndicatorViewDisplayStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MomentsIndicatorViewDisplayStyle, &type metadata for MomentsIndicatorViewDisplayStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MomentsIndicatorViewDisplayStyle and conformance MomentsIndicatorViewDisplayStyle);
  }
  return result;
}

void sub_1BD19CD58(uint64_t **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = OUTLINED_FUNCTION_3_67(**a1) & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD19CD90(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x68))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for MomentsIndicatorViewDisplayStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD19CE14 + 4 * byte_1BD64DAD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD19CE48 + 4 * byte_1BD64DAD0[v4]))();
}

uint64_t sub_1BD19CE48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD19CE50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD19CE58);
  return result;
}

uint64_t sub_1BD19CE64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD19CE6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD19CE70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD19CE78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MomentsIndicatorViewDisplayStyle()
{
  return &type metadata for MomentsIndicatorViewDisplayStyle;
}

uint64_t storeEnumTagSinglePayload for MomentsIndicatorType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD19CEE0 + 4 * byte_1BD64DADF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD19CF14 + 4 * byte_1BD64DADA[v4]))();
}

uint64_t sub_1BD19CF14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD19CF1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD19CF24);
  return result;
}

uint64_t sub_1BD19CF30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD19CF38);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD19CF3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD19CF44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MomentsIndicatorType()
{
  return &type metadata for MomentsIndicatorType;
}

uint64_t method lookup function for MomentsIndicatorView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MomentsIndicatorView.displayStyle.getter()
{
  uint64_t *v0;

  return OUTLINED_FUNCTION_3_67(*v0) & 1;
}

uint64_t dispatch thunk of MomentsIndicatorView.displayStyle.setter(char a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68))(a1 & 1);
}

uint64_t dispatch thunk of MomentsIndicatorView.displayStyle.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MomentsIndicatorView.didTimeOut(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MomentsIndicatorView.presentCaptureIndicator(type:remoteParticipantName:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

void specialized closure #1 in _NativeDictionary.filter(_:)(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  char v19;
  uint64_t v23;

  v23 = 0;
  v6 = 0;
  v7 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_20;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_19:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_20:
    v17 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v13);
    type metadata accessor for MomentsIndicatorBubble();
    v18 = v17;
    v19 = static NSObject.== infix(_:_:)();

    if ((v19 & 1) == 0)
    {
      *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
LABEL_24:
        specialized _NativeDictionary.extractDictionary(using:count:)(a1, a2, v23, a3);

        return;
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_24;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t specialized _NativeDictionary.extractDictionary(using:count:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::UInt v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;
  uint64_t v30;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MomentsIndicatorType, MomentsIndicatorBubble>);
  result = static _DictionaryStorage.allocate(capacity:)();
  v9 = result;
  v29 = a1;
  v30 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v30)
        return v9;
      v16 = v29[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v30)
          return v9;
        v16 = v29[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v30)
            return v9;
          v16 = v29[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v30)
              return v9;
            v16 = v29[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v30)
                  return v9;
                v16 = v29[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v14);
    v19 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v14);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v18);
    result = Hasher._finalize()();
    v20 = -1 << *(_BYTE *)(v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) == 0)
      break;
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v23) = v18;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v23) = v19;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_39;
    result = v19;
    if (!v5)
      return v9;
  }
  v24 = 0;
  v25 = (unint64_t)(63 - v20) >> 6;
  while (++v22 != v25 || (v24 & 1) == 0)
  {
    v26 = v22 == v25;
    if (v22 == v25)
      v22 = 0;
    v24 |= v26;
    v27 = *(_QWORD *)(v12 + 8 * v22);
    if (v27 != -1)
    {
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BD19D448()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();

  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in MomentsIndicatorView.refreshLayout()()
{
  uint64_t v0;

  animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout()(*(void **)(v0 + 40), *(void **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1BD19D480()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();

  return swift_deallocObject();
}

id partial apply for closure #1 in animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout()()
{
  uint64_t v0;

  return closure #1 in animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout()(*(_QWORD **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1BD19D4B0()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

id partial apply for closure #2 in animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout()()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
}

uint64_t key path setter for InCallControlsActivityCell.delegate : InCallControlsActivityCell(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA0);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t InCallControlsActivityCell.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t InCallControlsActivityCell.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*InCallControlsActivityCell.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id InCallControlsActivityCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

char *InCallControlsActivityCell.init(frame:)()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  double v9;
  objc_super *v10;
  SEL v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  double v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  Class isa;
  _QWORD v48[4];

  OUTLINED_FUNCTION_17_7();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_linkView;
  v6 = objc_allocWithZone(MEMORY[0x1E0CC11C8]);
  v7 = v0;
  *(_QWORD *)&v0[v5] = objc_msgSend(v6, sel_init);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_linkViewHeightConstraint] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v7[OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_delegate]);

  v8 = type metadata accessor for InCallControlsActivityCell();
  v48[2] = v7;
  v48[3] = v8;
  v9 = OUTLINED_FUNCTION_15_0();
  v12 = (char *)objc_msgSendSuper2(v10, v11, v9);
  static UIBackgroundConfiguration.listGroupedCell()();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIVibrancyEffect);
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  v15 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v15);
  MEMORY[0x1C3B7370C](v4);
  OUTLINED_FUNCTION_18_4(v12, sel_setAutomaticallyUpdatesBackgroundConfiguration_);
  v16 = OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_linkView;
  v17 = *(id *)&v12[OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_linkView];
  v18 = objc_msgSend(v13, sel_clearColor);
  objc_msgSend(v17, sel__setOverrideBackgroundColor_, v18);

  OUTLINED_FUNCTION_18_4(*(id *)&v12[v16], sel__setApplyCornerRadius_);
  v19 = *(id *)&v12[v16];
  objc_msgSend(v12, sel__cornerRadius);
  objc_msgSend(v19, sel__setCornerRadius_);

  OUTLINED_FUNCTION_40_3(*(id *)&v12[v16], sel__setDisableLinkFollowing_);
  OUTLINED_FUNCTION_40_3(*(id *)&v12[v16], sel__setDisableTapGesture_);
  objc_msgSend(*(id *)&v12[v16], sel__setPreferredSizeClass_, 11);
  OUTLINED_FUNCTION_18_4(*(id *)&v12[v16], sel_setTranslatesAutoresizingMaskIntoConstraints_);
  LODWORD(v20) = 1148846080;
  objc_msgSend(*(id *)&v12[v16], sel_setContentHuggingPriority_forAxis_, 1, v20);
  v21 = objc_msgSend(v12, sel_contentView);
  objc_msgSend(v21, sel_addSubview_, *(_QWORD *)&v12[v16]);

  v22 = objc_msgSend(*(id *)&v12[v16], sel_heightAnchor);
  v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, 173.0);

  v24 = *(void **)&v12[OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_linkViewHeightConstraint];
  *(_QWORD *)&v12[OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_linkViewHeightConstraint] = v23;
  v25 = v23;

  v26 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BD644E30;
  *(_QWORD *)(v27 + 32) = v25;
  v28 = *(void **)&v12[v16];
  v29 = v25;
  v30 = objc_msgSend(v28, sel_leadingAnchor);
  v31 = OUTLINED_FUNCTION_1_68();
  v32 = objc_msgSend(v31, sel_leadingAnchor);
  OUTLINED_FUNCTION_40_1();
  v33 = OUTLINED_FUNCTION_0_83();
  OUTLINED_FUNCTION_8_10();

  *(_QWORD *)(v27 + 40) = v31;
  v34 = objc_msgSend(*(id *)&v12[v16], sel_topAnchor);
  v35 = OUTLINED_FUNCTION_1_68();
  v36 = objc_msgSend(v35, sel_topAnchor);
  OUTLINED_FUNCTION_40_1();
  v37 = OUTLINED_FUNCTION_0_83();
  OUTLINED_FUNCTION_8_10();

  *(_QWORD *)(v27 + 48) = v35;
  v38 = objc_msgSend(*(id *)&v12[v16], sel_trailingAnchor);
  v39 = OUTLINED_FUNCTION_1_68();
  v40 = objc_msgSend(v39, sel_trailingAnchor);
  OUTLINED_FUNCTION_40_1();
  v41 = OUTLINED_FUNCTION_0_83();
  OUTLINED_FUNCTION_8_10();

  *(_QWORD *)(v27 + 56) = v39;
  v42 = objc_msgSend(*(id *)&v12[v16], sel_bottomAnchor);
  v43 = OUTLINED_FUNCTION_1_68();
  v44 = objc_msgSend(v43, sel_bottomAnchor);
  OUTLINED_FUNCTION_40_1();
  v45 = OUTLINED_FUNCTION_0_83();
  OUTLINED_FUNCTION_8_10();

  *(_QWORD *)(v27 + 64) = v43;
  v48[1] = v27;
  specialized Array._endMutation()();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, isa);

  return v12;
}

uint64_t type metadata accessor for InCallControlsActivityCell()
{
  return objc_opt_self();
}

id InCallControlsActivityCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsActivityCell.init(coder:)()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_linkView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC11C8]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_linkViewHeightConstraint] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_delegate]);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id InCallControlsActivityCell.configure(with:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  char v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSArray v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  void *v33;
  id v34;
  double v35;
  void *v36;
  double v37;
  id v38;
  double v39;
  _QWORD aBlock[6];
  Swift::String v42;

  v2 = v1;
  v4 = OUTLINED_FUNCTION_15_49();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_linkView;
  v9 = *(id *)(v1 + OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_linkView);
  InCallControlsActivityCellViewModel.cellStyle.getter();
  if ((v10 & 1) != 0)
    v11 = 10;
  else
    v11 = 11;
  objc_msgSend(v9, sel__setPreferredSizeClass_, v11);

  v12 = *(id *)(v1 + v8);
  InCallControlsActivityCellViewModel.activityMetadata.getter();
  v14 = v13;
  OUTLINED_FUNCTION_48_1(v12, sel_setMetadata_);

  v15 = *(id *)(v2 + v8);
  InCallControlsActivityCellViewModel.contacts.getter();
  if (v16)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
    v17.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v17.super.isa = 0;
  }
  OUTLINED_FUNCTION_48_1(v15, sel__setContactsForAttribution_);

  v18 = a1[5];
  v19 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v18);
  if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19) == 2)
  {
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC11B0]), sel_init);
    OUTLINED_FUNCTION_40_3(v20, sel_setPreserveIconAspectRatioAndAlignmentWhenScaling_);
    OUTLINED_FUNCTION_48_1(*(id *)(v2 + v8), sel__setSizeClassParameters_);

  }
  InCallControlsActivityCellViewModel.shouldShowActionButton.getter();
  v21 = *(void **)(v2 + v8);
  if ((v22 & 1) != 0)
  {
    v23 = swift_allocObject();
    swift_unknownObjectWeakInit();
    outlined init with copy of InCallControlsActivityCellViewModel((uint64_t)a1, (uint64_t)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    v24 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v23;
    outlined init with take of InCallControlsActivityCellViewModel((uint64_t)v7, v25 + v24);
    aBlock[4] = partial apply for closure #1 in InCallControlsActivityCell.configure(with:);
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_30;
    v26 = _Block_copy(aBlock);
    v27 = v21;
    swift_release();
    v28 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v42._object = (void *)0xE000000000000000;
    v29._countAndFlagsBits = 1852141647;
    v29._object = (void *)0xE400000000000000;
    v30.value._countAndFlagsBits = 0x61737265766E6F43;
    v30.value._object = (void *)0xEF74694B6E6F6974;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v42._countAndFlagsBits = 0;
    v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v42);

    v33 = (void *)MEMORY[0x1C3B72E00](v32._countAndFlagsBits, v32._object);
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel__setAction_withText_buttonType_, v26, v33, 1);

    _Block_release(v26);
  }
  else
  {
    v34 = v21;
    v27 = (id)MEMORY[0x1C3B72E00](0, 0xE000000000000000);
    objc_msgSend(v34, sel__setAction_withText_, 0, v27);

  }
  objc_msgSend(*(id *)(v2 + v8), sel_sizeThatFits_, 0.0, 0.0);
  v36 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit26InCallControlsActivityCell_linkViewHeightConstraint);
  if (v36)
  {
    v37 = v35;
    v38 = v36;
    v39 = InCallControlsActivityCellViewModel.activityCellHeight.getter();
    if (v37 > v39)
      v39 = v37;
    objc_msgSend(v38, sel_setConstant_, v39);

  }
  return objc_msgSend(*(id *)(v2 + v8), sel_setNeedsUpdateConstraints);
}

void closure #1 in InCallControlsActivityCell.configure(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x98))())
    {
      v7 = v6;
      ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v7 + 8))(v5, a2 + 16, ObjectType, v7);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

id InCallControlsActivityCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsActivityCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD19E1F0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t outlined init with copy of InCallControlsActivityCellViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InCallControlsActivityCellViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD19E258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = OUTLINED_FUNCTION_15_49();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  v4 = v3 + *(int *)(v1 + 24);
  v5 = (int *)type metadata accessor for Participant(0);
  if (!OUTLINED_FUNCTION_14_17(v4))
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v6 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_2_18(v6);
        break;
      case 4u:
        v15 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_2_18(v15);
        v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v17 = v4 + *(int *)(v16 + 48);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v17 + 120) >= 2uLL)
          __swift_destroy_boxed_opaque_existential_1(v17 + 96);
        if (*(_QWORD *)(v17 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)(v4 + *(int *)(v16 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    v7 = v4 + v5[5];
    v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = (id *)(v4 + v5[7]);
    if (*v9)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_33();
    if (!OUTLINED_FUNCTION_10_4())
      OUTLINED_FUNCTION_11_3();
    type metadata accessor for Participant.CountdownInfo(0);
    if (!OUTLINED_FUNCTION_10_4())
      OUTLINED_FUNCTION_11_3();
    swift_release();
  }
  swift_bridgeObjectRelease();
  v10 = v3 + *(int *)(v1 + 32);
  if (!OUTLINED_FUNCTION_14_17(v10))
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v11 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_75(v11);
        break;
      case 4u:
        v18 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_75(v18);
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v20 = v10 + *(int *)(v19 + 48);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v20 + 120) >= 2uLL)
          __swift_destroy_boxed_opaque_existential_1(v20 + 96);
        if (*(_QWORD *)(v20 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)(v10 + *(int *)(v19 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    v12 = type metadata accessor for UUID();
    OUTLINED_FUNCTION_2_18(v12);
    v13 = (id *)(v10 + v5[7]);
    if (*v13)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_33();
    if (!OUTLINED_FUNCTION_7_23())
      OUTLINED_FUNCTION_5_62();
    type metadata accessor for Participant.CountdownInfo(0);
    if (!OUTLINED_FUNCTION_7_23())
      OUTLINED_FUNCTION_5_62();
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t outlined init with take of InCallControlsActivityCellViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InCallControlsActivityCellViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void partial apply for closure #1 in InCallControlsActivityCell.configure(with:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_15_49() - 8) + 80);
  closure #1 in InCallControlsActivityCell.configure(with:)(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1BD19E658@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x98))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t dispatch thunk of InCallControlsActivityCellDelegate.inCallControlsActivityCell(_:didTap:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for InCallControlsActivityCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsActivityCell.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of InCallControlsActivityCell.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of InCallControlsActivityCell.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of InCallControlsActivityCell.configure(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSD6ValuesVy15ConversationKit14LayoutPosition33_CB5716349B733E4BD07C5ACF0D02830DLLOSo6CGSizeV_G_12CoreGraphics7CGFloatVs5NeverOTg504_s15e25Kit26ScreenSharingToolbarg42V12sizeThatFits8proposal8subviews5cacheSo6p57V7SwiftUI16ProposedViewSizeV_AJ0F8SubviewsVAC5CacheVztF12q9Graphics7S8VAIXEfU_Tf1cn_n(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v3 = specialized Dictionary.Values.startIndex.getter(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = v4;
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v5);
          v9 = *(_QWORD *)(v13 + 16);
          if (v9 >= *(_QWORD *)(v13 + 24) >> 1)
          {
            v12 = v7;
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            v7 = v12;
          }
          *(_QWORD *)(v13 + 16) = v9 + 1;
          *(_QWORD *)(v13 + 8 * v9 + 32) = v8;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          if ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v10 = v7;
          v11 = _HashTable.occupiedBucket(after:)();
          if (!--v1)
            return;
          v5 = v11;
          if ((v11 & 0x8000000000000000) == 0)
          {
            v7 = v10;
            v6 = *(_DWORD *)(a1 + 36);
            if (v11 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSD6ValuesVy15ConversationKit14LayoutPosition33_CB5716349B733E4BD07C5ACF0D02830DLLOSo6CGSizeV_G_12CoreGraphics7CGFloatVs5NeverOTg504_s15e25Kit26ScreenSharingToolbarg42V12sizeThatFits8proposal8subviews5cacheSo6p57V7SwiftUI16ProposedViewSizeV_AJ0F8SubviewsVAC5CacheVztF12q9Graphics7S9VAIXEfU0_Tf1cn_n(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v3 = specialized Dictionary.Values.startIndex.getter(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = v4;
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v5 + 8);
          v9 = *(_QWORD *)(v13 + 16);
          if (v9 >= *(_QWORD *)(v13 + 24) >> 1)
          {
            v12 = v7;
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            v7 = v12;
          }
          *(_QWORD *)(v13 + 16) = v9 + 1;
          *(_QWORD *)(v13 + 8 * v9 + 32) = v8;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          if ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v10 = v7;
          v11 = _HashTable.occupiedBucket(after:)();
          if (!--v1)
            return;
          v5 = v11;
          if ((v11 & 0x8000000000000000) == 0)
          {
            v7 = v10;
            v6 = *(_DWORD *)(a1 + 36);
            if (v11 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t ScreenSharingToolbarLayout.Cache.updateIdealSize(for:in:)(unsigned int a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t *, _QWORD);
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  char v32;
  char v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  unsigned int v45;
  char v46;
  uint64_t v47[4];

  v45 = a1;
  v3 = type metadata accessor for LayoutSubview();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v42 = (char *)&v38 - v7;
  v8 = type metadata accessor for LayoutSubviews();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LayoutSubview?);
  v16 = MEMORY[0x1E0C80A78](v15);
  v40 = (uint64_t)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v38 - v19;
  MEMORY[0x1E0C80A78](v18);
  v41 = (char *)&v38 - v21;
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v44 = v9;
  v43(v11, a2, v8);
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews);
  dispatch thunk of Sequence.makeIterator()();
  v22 = &v14[*(int *)(v12 + 36)];
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews);
  while (1)
  {
    v23 = *(_QWORD *)v22;
    dispatch thunk of Collection.endIndex.getter();
    if (v23 == v47[0])
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v3);
LABEL_7:
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v14, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
      v27 = 1;
      v28 = (uint64_t)v41;
      goto LABEL_8;
    }
    v24 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read();
    (*(void (**)(char *))(v4 + 16))(v20);
    v24(v47, 0);
    v43(v11, (uint64_t)v14, v8);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v3);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v3) == 1)
      goto LABEL_7;
    v25 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v26 = v42;
    v25(v42, v20, v3);
    lazy protocol witness table accessor for type LayoutPositionKey and conformance LayoutPositionKey();
    LayoutSubview.subscript.getter();
    if (LOBYTE(v47[0]) == v45)
      break;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v26, v3);
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v14, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  v28 = (uint64_t)v41;
  v25(v41, v26, v3);
  v27 = 0;
LABEL_8:
  __swift_storeEnumTagSinglePayload(v28, v27, 1, v3);
  v29 = v40;
  outlined init with copy of LayoutSubview?(v28, v40);
  if (__swift_getEnumTagSinglePayload(v29, 1, v3) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v28, &demangling cache variable for type metadata for LayoutSubview?);
    return specialized Dictionary._Variant.removeValue(forKey:)(v45);
  }
  else
  {
    v31 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v39, v29, v3);
    static ProposedViewSize.unspecified.getter();
    LOBYTE(v47[0]) = v32 & 1;
    v46 = v33 & 1;
    LayoutSubview.sizeThatFits(_:)();
    v35 = v34;
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v31, v3);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v28, &demangling cache variable for type metadata for LayoutSubview?);
    return specialized Dictionary._Variant.setValue(_:forKey:)(v45, v35, v37);
  }
}

ConversationKit::ScreenSharingToolbarLayout::Cache __swiftcall ScreenSharingToolbarLayout.Cache.init()()
{
  type metadata accessor for CGSize(0);
  lazy protocol witness table accessor for type LayoutPosition and conformance LayoutPosition();
  return (ConversationKit::ScreenSharingToolbarLayout::Cache)Dictionary.init(dictionaryLiteral:)();
}

uint64_t ScreenSharingToolbarLayout.makeCache(subviews:)()
{
  uint64_t v1;

  type metadata accessor for CGSize(0);
  lazy protocol witness table accessor for type LayoutPosition and conformance LayoutPosition();
  v1 = Dictionary.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_13_49(0);
  OUTLINED_FUNCTION_13_49(1u);
  OUTLINED_FUNCTION_13_49(2u);
  return v1;
}

uint64_t ScreenSharingToolbarLayout.updateCache(_:subviews:)(uint64_t a1, uint64_t a2)
{
  ScreenSharingToolbarLayout.Cache.updateIdealSize(for:in:)(0, a2);
  OUTLINED_FUNCTION_13_49(1u);
  return OUTLINED_FUNCTION_13_49(2u);
}

double ScreenSharingToolbarLayout.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int v15;
  unsigned __int8 v16;
  double v17;
  double v18;
  double v19;

  v8 = *a6;
  v9 = swift_bridgeObjectRetain();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSD6ValuesVy15ConversationKit14LayoutPosition33_CB5716349B733E4BD07C5ACF0D02830DLLOSo6CGSizeV_G_12CoreGraphics7CGFloatVs5NeverOTg504_s15e25Kit26ScreenSharingToolbarg42V12sizeThatFits8proposal8subviews5cacheSo6p57V7SwiftUI16ProposedViewSizeV_AJ0F8SubviewsVAC5CacheVztF12q9Graphics7S8VAIXEfU_Tf1cn_n(v9);
  v11 = specialized Sequence<>.max()(v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSD6ValuesVy15ConversationKit14LayoutPosition33_CB5716349B733E4BD07C5ACF0D02830DLLOSo6CGSizeV_G_12CoreGraphics7CGFloatVs5NeverOTg504_s15e25Kit26ScreenSharingToolbarg42V12sizeThatFits8proposal8subviews5cacheSo6p57V7SwiftUI16ProposedViewSizeV_AJ0F8SubviewsVAC5CacheVztF12q9Graphics7S9VAIXEfU0_Tf1cn_n(v8);
  specialized Sequence<>.max()(v14);
  swift_bridgeObjectRelease();
  v15 = Axis.rawValue.getter();
  v16 = Axis.rawValue.getter();
  v17 = *(double *)&a1;
  if ((a2 & 1) != 0)
    v17 = 10.0;
  v18 = *(double *)&v11;
  if ((v13 & 1) != 0)
    v18 = 0.0;
  if (v15 == v16)
    v19 = v17;
  else
    v19 = v18;
  Axis.rawValue.getter();
  OUTLINED_FUNCTION_26_27();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t specialized Sequence<>.max()(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v2 < v5)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

void ScreenSharingToolbarLayout.placeSubviews(in:proposal:subviews:cache:)(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, int a11)
{
  unint64_t v11;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(_QWORD, _QWORD, _QWORD);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t *, _QWORD);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  unint64_t *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char v88;
  unint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  unint64_t *v93;
  unint64_t v94;
  unint64_t v95;
  void (*v96)(_QWORD, _QWORD, _QWORD);
  __n128 v97;
  __n128 v98;
  __n128 v99;
  __n128 v100;
  __n128 v101;
  __n128 v102;
  __n128 v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  __n128 v107;
  __n128 v108;
  __n128 v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  __n128 v114;
  __n128 v115;
  __n128 v116;
  __n128 v117;
  __n128 v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  __n128 v122;
  __n128 v123;
  __n128 v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  int v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  void (*v143)(_QWORD, _QWORD, _QWORD);
  uint64_t v144[5];

  v128 = a11;
  v126 = a10;
  v16 = type metadata accessor for LayoutSubview();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_5_27();
  v137 = v18;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  v136 = v20;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v21);
  v135 = (char *)&v125 - v22;
  v23 = type metadata accessor for LayoutSubviews();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_5_27();
  v141 = v28;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_18_0();
  v140 = v30;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v125 - v32;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LayoutSubview?);
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_5_27();
  v139 = v35;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_18_0();
  v127 = v37;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_18_0();
  v138 = v39;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_18_0();
  v130 = v41;
  OUTLINED_FUNCTION_8_4();
  v43 = MEMORY[0x1E0C80A78](v42);
  v45 = (char *)&v125 - v44;
  MEMORY[0x1E0C80A78](v43);
  v134 = (char *)&v125 - v46;
  v142 = v24;
  v47 = *(void (**)(_QWORD, _QWORD, _QWORD))(v24 + 16);
  v133 = a9;
  v143 = v47;
  v47(v26, a9, v23);
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews);
  v131 = v48;
  dispatch thunk of Sequence.makeIterator()();
  v132 = v27;
  v49 = &v33[*(int *)(v27 + 36)];
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews);
  while (1)
  {
    v50 = *(_QWORD *)v49;
    OUTLINED_FUNCTION_1_69();
    if (v50 == v144[0])
    {
      OUTLINED_FUNCTION_3_68((uint64_t)v45, 1);
LABEL_7:
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v33, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
      v53 = 1;
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_11_50();
    (*(void (**)(char *))(v17 + 16))(v45);
    OUTLINED_FUNCTION_24_32();
    OUTLINED_FUNCTION_2_70((uint64_t)v26, (uint64_t)v33);
    OUTLINED_FUNCTION_4_65();
    OUTLINED_FUNCTION_0_84();
    OUTLINED_FUNCTION_3_68((uint64_t)v45, 0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v16) == 1)
      goto LABEL_7;
    v51 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v52 = v135;
    v51(v135, v45, v16);
    lazy protocol witness table accessor for type LayoutPositionKey and conformance LayoutPositionKey();
    LayoutSubview.subscript.getter();
    if (LOBYTE(v144[0]) == 1)
      break;
    OUTLINED_FUNCTION_6_50();
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v33, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  v51(v134, v52, v16);
  v53 = 0;
LABEL_8:
  v54 = v140;
  __swift_storeEnumTagSinglePayload((uint64_t)v134, v53, 1, v16);
  OUTLINED_FUNCTION_2_70((uint64_t)v26, v133);
  OUTLINED_FUNCTION_10_58();
  v55 = (uint64_t *)(v54 + *(int *)(v132 + 36));
  v56 = *v55;
  OUTLINED_FUNCTION_1_69();
  if (v56 == v144[0])
  {
LABEL_14:
    OUTLINED_FUNCTION_3_68(v138, 1);
  }
  else
  {
    v57 = v138;
    while (1)
    {
      v58 = OUTLINED_FUNCTION_11_50();
      OUTLINED_FUNCTION_16_40(v58, v59);
      OUTLINED_FUNCTION_24_32();
      OUTLINED_FUNCTION_2_70((uint64_t)v26, v54);
      OUTLINED_FUNCTION_4_65();
      OUTLINED_FUNCTION_0_84();
      OUTLINED_FUNCTION_5_63();
      if (v60)
        break;
      v61 = v136;
      OUTLINED_FUNCTION_15_50(v136, v57);
      lazy protocol witness table accessor for type LayoutPositionKey and conformance LayoutPositionKey();
      OUTLINED_FUNCTION_12_46();
      if (LOBYTE(v144[0]) == 2)
      {
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v140, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
        v66 = v130;
        OUTLINED_FUNCTION_15_50(v130, v61);
        v64 = 0;
        v65 = v141;
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_6_50();
      v62 = *v55;
      v63 = v140;
      OUTLINED_FUNCTION_1_69();
      v60 = v62 == v144[0];
      v54 = v63;
      if (v60)
        goto LABEL_14;
    }
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v54, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  v64 = 1;
  v65 = v141;
  v66 = v130;
LABEL_16:
  __swift_storeEnumTagSinglePayload(v66, v64, 1, v16);
  OUTLINED_FUNCTION_2_70((uint64_t)v26, v133);
  OUTLINED_FUNCTION_10_58();
  v67 = v65;
  v68 = (uint64_t *)(v65 + *(int *)(v132 + 36));
  v69 = *v68;
  OUTLINED_FUNCTION_1_69();
  if (v69 == v144[0])
  {
LABEL_21:
    OUTLINED_FUNCTION_3_68(v139, 1);
  }
  else
  {
    v70 = v139;
    while (1)
    {
      v71 = (void (*)(uint64_t *, _QWORD))OUTLINED_FUNCTION_11_50();
      OUTLINED_FUNCTION_16_40((uint64_t)v71, v72);
      v71(v144, 0);
      OUTLINED_FUNCTION_2_70((uint64_t)v26, v67);
      OUTLINED_FUNCTION_4_65();
      OUTLINED_FUNCTION_0_84();
      OUTLINED_FUNCTION_5_63();
      if (v60)
        break;
      v73 = v137;
      OUTLINED_FUNCTION_15_50(v137, v70);
      lazy protocol witness table accessor for type LayoutPositionKey and conformance LayoutPositionKey();
      OUTLINED_FUNCTION_12_46();
      if (!LOBYTE(v144[0]))
      {
        outlined destroy of OS_dispatch_queue.SchedulerOptions?(v141, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
        v76 = v127;
        OUTLINED_FUNCTION_15_50(v127, v73);
        v75 = 0;
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_6_50();
      v74 = *v68;
      v67 = v141;
      OUTLINED_FUNCTION_1_69();
      if (v74 == v144[0])
        goto LABEL_21;
    }
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v141, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  v75 = 1;
  v76 = v127;
LABEL_23:
  v77 = v126;
  v78 = v130;
  OUTLINED_FUNCTION_3_68(v76, v75);
  v79 = *v77;
  v80 = *(_QWORD *)(*v77 + 16);
  v129 = *(_QWORD *)&a4;
  if (!v80)
  {
    OUTLINED_FUNCTION_14_54();
    v139 = 0;
    v140 = 0;
    v95 = 0;
    v141 = 0;
LABEL_34:
    v94 = 0;
    v96 = 0;
    goto LABEL_36;
  }
  v81 = specialized __RawDictionaryStorage.find<A>(_:)(0);
  v11 = 0;
  v82 = 0;
  if ((v83 & 1) != 0)
  {
    v84 = (unint64_t *)(*(_QWORD *)(v79 + 56) + 16 * v81);
    v11 = *v84;
    v82 = v84[1];
  }
  v140 = v82;
  v141 = v11;
  if (!*(_QWORD *)(v79 + 16))
  {
    OUTLINED_FUNCTION_14_54();
    v95 = 0;
    v94 = 0;
    v96 = 0;
    v139 = 0;
    goto LABEL_36;
  }
  v85 = specialized __RawDictionaryStorage.find<A>(_:)(1);
  v86 = 0;
  v87 = 0;
  if ((v88 & 1) != 0)
  {
    v89 = (unint64_t *)(*(_QWORD *)(v79 + 56) + 16 * v85);
    v86 = *v89;
    v87 = v89[1];
  }
  v139 = v87;
  OUTLINED_FUNCTION_14_54();
  if (!v90 || (v91 = specialized __RawDictionaryStorage.find<A>(_:)(2), (v92 & 1) == 0))
  {
    v95 = v86;
    goto LABEL_34;
  }
  v93 = (unint64_t *)(*(_QWORD *)(v79 + 56) + 16 * v91);
  v94 = *v93;
  v95 = v86;
  v96 = (void (*)(_QWORD, _QWORD, _QWORD))v93[1];
LABEL_36:
  v142 = v94;
  Axis.rawValue.getter();
  OUTLINED_FUNCTION_26_27();
  Axis.rawValue.getter();
  OUTLINED_FUNCTION_26_27();
  v143 = v96;
  v97.n128_u64[0] = v11;
  v98.n128_f64[0] = a1;
  v99.n128_f64[0] = a2;
  v100.n128_u64[0] = v129;
  v102.n128_u64[0] = v140;
  v101.n128_u64[0] = v141;
  v103.n128_u64[0] = v95;
  v104 = v139;
  OUTLINED_FUNCTION_9_52(v76, 0, v97, v98, v99, v100, v101, v102, v103);
  v105 = v142;
  v106 = (uint64_t)v134;
  v107.n128_f64[0] = OUTLINED_FUNCTION_25_32();
  v108.n128_u64[0] = v95;
  v109.n128_u64[0] = v104;
  v110.n128_u64[0] = v95;
  OUTLINED_FUNCTION_9_52(v111, v112, v107, v113, v114, v115, v108, v109, v110);
  v116.n128_f64[0] = OUTLINED_FUNCTION_25_32();
  v117.n128_u64[0] = v105;
  v118.n128_u64[0] = v95;
  OUTLINED_FUNCTION_9_52(v119, v120, v116, v121, v122, v123, v117, v124, v118);
  OUTLINED_FUNCTION_27_24(v76);
  OUTLINED_FUNCTION_27_24(v78);
  OUTLINED_FUNCTION_27_24(v106);
}

void lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(_QWORD *a1)
{
  if (!*a1)
  {
    type metadata accessor for LayoutSubviews();
    OUTLINED_FUNCTION_52_0();
  }
  OUTLINED_FUNCTION_0();
}

#error "1BD19FC50: switch analysis failed: failed to propagate the switch expression (funcsize=320)"

double ScreenSharingToolbarLayout.init(toolbarPlacement:)()
{
  return 15.0;
}

uint64_t protocol witness for Layout.makeCache(subviews:) in conformance ScreenSharingToolbarLayout@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ScreenSharingToolbarLayout.makeCache(subviews:)();
  *a1 = result;
  return result;
}

double protocol witness for Layout.sizeThatFits(proposal:subviews:cache:) in conformance ScreenSharingToolbarLayout(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t *a6)
{
  return ScreenSharingToolbarLayout.sizeThatFits(proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5, a6);
}

void protocol witness for Layout.placeSubviews(in:proposal:subviews:cache:) in conformance ScreenSharingToolbarLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, double a7, double a8, double a9, double a10)
{
  uint64_t v10;

  ScreenSharingToolbarLayout.placeSubviews(in:proposal:subviews:cache:)(a7, a8, a9, a10, a1, a2, a3, a4, a5, a6, *(unsigned __int8 *)(v10 + 8));
}

uint64_t protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance ScreenSharingToolbarLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance ScreenSharingToolbarLayout(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x1E0CDFB58]);
}

{
  return protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance ScreenSharingToolbarLayout(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x1E0CDFB60]);
}

uint64_t protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance ScreenSharingToolbarLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

Swift::Int LayoutPosition.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

uint64_t protocol witness for Animatable.animatableData.getter in conformance ScreenSharingToolbarLayout()
{
  uint64_t v0;

  return TPNumberPadCharacter.rawValue.getter(*(unsigned __int8 *)(v0 + 8));
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance LayoutPosition()
{
  unsigned __int8 *v0;

  return LayoutPosition.hashValue.getter(*v0);
}

void protocol witness for static LayoutValueKey.defaultValue.getter in conformance LayoutPositionKey(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ScreenSharingToolbarLayout.callAsFunction<A, B, C>(_:leadingActions:trailingActions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, __int128 a13, uint64_t a14)
{
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[5];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  char v29;

  v28 = a10;
  v29 = a7;
  v19[2] = a8;
  v19[3] = a11;
  v19[4] = a12;
  v20 = a13;
  v21 = a14;
  v22 = a1;
  v23 = a2;
  v24 = a3;
  v25 = a4;
  v26 = a5;
  v27 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutPositionKey>>);
  OUTLINED_FUNCTION_20_39();
  OUTLINED_FUNCTION_23_37();
  OUTLINED_FUNCTION_23_37();
  OUTLINED_FUNCTION_23_37();
  OUTLINED_FUNCTION_20_39();
  OUTLINED_FUNCTION_44_12();
  v15 = type metadata accessor for TupleView();
  v16 = lazy protocol witness table accessor for type ScreenSharingToolbarLayout and conformance ScreenSharingToolbarLayout();
  v17 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v15);
  return Layout.callAsFunction<A>(_:)((uint64_t)partial apply for closure #1 in ScreenSharingToolbarLayout.callAsFunction<A, B, C>(_:leadingActions:trailingActions:), (uint64_t)v19, (uint64_t)&type metadata for ScreenSharingToolbarLayout, v15, v16, v17, a9);
}

uint64_t closure #1 in ScreenSharingToolbarLayout.callAsFunction<A, B, C>(_:leadingActions:trailingActions:)@<X0>(void (*a1)(uint64_t)@<X0>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X3>, void (*a4)(uint64_t)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, void (*a11)(_QWORD, _QWORD), uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t (*v62)(char *, uint64_t);
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  void (*v74)(uint64_t);
  void (*v75)(_QWORD, _QWORD);
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void (*v93)(uint64_t);
  uint64_t v94;
  _QWORD v95[3];
  uint64_t v96[3];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];

  v81 = a5;
  v82 = a4;
  v73 = a3;
  v74 = a2;
  v72 = a1;
  v86 = a8;
  v85 = a12;
  v75 = a11;
  v84 = *(_QWORD *)(a9 - 8);
  v78 = a9;
  MEMORY[0x1E0C80A78](a1);
  v77 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutPositionKey>>);
  v80 = type metadata accessor for ModifiedContent();
  v83 = *(_QWORD *)(v80 - 8);
  v15 = MEMORY[0x1E0C80A78](v80);
  v76 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v79 = (char *)&v64 - v18;
  v70 = a7;
  v71 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v17);
  v68 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ModifiedContent();
  v21 = *(_QWORD *)(v20 - 8);
  v89 = v20;
  v90 = v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v67 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v91 = (char *)&v64 - v25;
  v26 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for ModifiedContent();
  v65 = *(_QWORD *)(v29 - 8);
  v30 = v65;
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v64 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v31);
  v88 = (char *)&v64 - v35;
  v72(v34);
  LOBYTE(v96[0]) = 0;
  v64 = lazy protocol witness table accessor for type LayoutPositionKey and conformance LayoutPositionKey();
  View.layoutValue<A>(key:value:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, a6);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _TraitWritingModifier<_LayoutTrait<LayoutPositionKey>> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutPositionKey>>);
  v37 = v36;
  v99[0] = a10;
  v99[1] = v36;
  v38 = MEMORY[0x1E0CD9C20];
  v66 = v29;
  v69 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v29, v99);
  v87 = v33;
  static ViewBuilder.buildExpression<A>(_:)(v33, v29, v69);
  v72 = *(void (**)(uint64_t))(v30 + 8);
  v39 = ((uint64_t (*)(char *, uint64_t))v72)(v33, v29);
  v40 = v68;
  v74(v39);
  LOBYTE(v96[0]) = 1;
  v41 = (uint64_t)v67;
  v42 = v70;
  v43 = v75;
  View.layoutValue<A>(key:value:)();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v40, v42);
  v98[0] = v43;
  v98[1] = v37;
  v44 = v38;
  v45 = v89;
  v74 = (void (*)(uint64_t))MEMORY[0x1C3B750C8](v38, v89, v98);
  static ViewBuilder.buildExpression<A>(_:)(v41, v45, v74);
  v75 = *(void (**)(_QWORD, _QWORD))(v90 + 8);
  v46 = ((uint64_t (*)(uint64_t, uint64_t))v75)(v41, v45);
  v47 = v77;
  v82(v46);
  LOBYTE(v96[0]) = 2;
  v48 = (uint64_t)v76;
  v49 = v78;
  v50 = v85;
  View.layoutValue<A>(key:value:)();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v47, v49);
  v97[0] = v50;
  v97[1] = v37;
  v51 = v80;
  v52 = MEMORY[0x1C3B750C8](v44, v80, v97);
  v53 = v79;
  static ViewBuilder.buildExpression<A>(_:)(v48, v51, v52);
  v54 = v83;
  v55 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
  v55(v48, v51);
  v56 = (uint64_t)v87;
  v57 = v66;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v87, v88, v66);
  v96[0] = v56;
  v58 = v91;
  v59 = v89;
  (*(void (**)(uint64_t, char *, uint64_t))(v90 + 16))(v41, v91, v89);
  v96[1] = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v48, v53, v51);
  v96[2] = v48;
  v95[0] = v57;
  v95[1] = v59;
  v95[2] = v51;
  v92 = v69;
  v93 = v74;
  v94 = v52;
  static ViewBuilder.buildBlock<each A>(_:)(v96, 3, (uint64_t)v95);
  v55((uint64_t)v53, v51);
  v60 = v58;
  v61 = v75;
  v75(v60, v59);
  v62 = (uint64_t (*)(char *, uint64_t))v72;
  ((void (*)(char *, uint64_t))v72)(v88, v57);
  v55(v48, v51);
  v61(v41, v59);
  return v62(v87, v57);
}

unint64_t lazy protocol witness table accessor for type LayoutPositionKey and conformance LayoutPositionKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LayoutPositionKey and conformance LayoutPositionKey;
  if (!lazy protocol witness table cache variable for type LayoutPositionKey and conformance LayoutPositionKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LayoutPositionKey, &unk_1E761F8F0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LayoutPositionKey and conformance LayoutPositionKey);
  }
  return result;
}

uint64_t partial apply for closure #1 in ScreenSharingToolbarLayout.callAsFunction<A, B, C>(_:leadingActions:trailingActions:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in ScreenSharingToolbarLayout.callAsFunction<A, B, C>(_:leadingActions:trailingActions:)(*(void (**)(uint64_t))(v1 + 64), *(void (**)(uint64_t))(v1 + 80), *(_QWORD *)(v1 + 88), *(void (**)(uint64_t))(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(_QWORD, _QWORD))(v1 + 48), *(_QWORD *)(v1 + 56));
}

unint64_t lazy protocol witness table accessor for type ScreenSharingToolbarLayout and conformance ScreenSharingToolbarLayout()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingToolbarLayout and conformance ScreenSharingToolbarLayout;
  if (!lazy protocol witness table cache variable for type ScreenSharingToolbarLayout and conformance ScreenSharingToolbarLayout)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingToolbarLayout, &type metadata for ScreenSharingToolbarLayout);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingToolbarLayout and conformance ScreenSharingToolbarLayout);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingToolbarLayout and conformance ScreenSharingToolbarLayout;
  if (!lazy protocol witness table cache variable for type ScreenSharingToolbarLayout and conformance ScreenSharingToolbarLayout)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingToolbarLayout, &type metadata for ScreenSharingToolbarLayout);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingToolbarLayout and conformance ScreenSharingToolbarLayout);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScreenSharingToolbarLayout(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      v4 = v3 >= 4;
      v2 = v3 - 4;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingToolbarLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenSharingToolbarLayout()
{
  return &type metadata for ScreenSharingToolbarLayout;
}

ValueMetadata *type metadata accessor for ScreenSharingToolbarLayout.Cache()
{
  return &type metadata for ScreenSharingToolbarLayout.Cache;
}

uint64_t sub_1BD1A08D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<ScreenSharingToolbarLayout>);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutPositionKey>>);
  OUTLINED_FUNCTION_20_39();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_20_39();
  OUTLINED_FUNCTION_44_12();
  v0 = type metadata accessor for TupleView();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingToolbarLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingToolbarLayout>);
  v1 = type metadata accessor for _VariadicView.Tree();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingToolbarLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingToolbarLayout>);
  v4[0] = v2;
  v4[1] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v0);
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CD91E0], v1, v4);
}

void *type metadata accessor for LayoutPositionKey()
{
  return &unk_1E761F8F0;
}

uint64_t storeEnumTagSinglePayload for LayoutPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD1A0A48 + 4 * byte_1BD64DD19[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD1A0A7C + 4 * byte_1BD64DD14[v4]))();
}

uint64_t sub_1BD1A0A7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1A0A84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1A0A8CLL);
  return result;
}

uint64_t sub_1BD1A0A98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1A0AA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD1A0AA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1A0AAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayoutPosition()
{
  return &type metadata for LayoutPosition;
}

uint64_t outlined init with copy of LayoutSubview?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LayoutSubview?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t specialized Dictionary.Values.startIndex.getter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t Edge.axis.getter(char a1)
{
  return a1 & 1;
}

uint64_t View.toolbarPlacement(_:)()
{
  swift_getKeyPath();
  View.environment<A>(_:_:)();
  return swift_release();
}

void ScreenSharingToolbar.toolbarPlacement.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v1, v2);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v1, v2);
  OUTLINED_FUNCTION_18();
}

void ScreenSharingToolbar.title.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingToolbar.leadingActions.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingToolbar.centerActions.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

void ScreenSharingToolbar.trailingActions.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingToolbar.actionsContainer.getter()
{
  int v0;

  ScreenSharingToolbar.toolbarPlacement.getter();
  v0 = Axis.rawValue.getter();
  if (v0 == Axis.rawValue.getter())
  {
    static VerticalAlignment.center.getter();
    lazy protocol witness table accessor for type HStackLayout and conformance HStackLayout();
  }
  else
  {
    static HorizontalAlignment.center.getter();
    lazy protocol witness table accessor for type VStackLayout and conformance VStackLayout();
  }
  return AnyLayout.init<A>(_:)();
}

void ScreenSharingToolbar.body.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t (*v18)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X3>, uint64_t@<X4>, uint64_t@<X5>, uint64_t@<X8>);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[12];
  _QWORD v38[12];
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];

  v36 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<ScreenSharingToolbarLayout>);
  v35 = a1[2];
  OUTLINED_FUNCTION_14_55();
  v34 = a1[4];
  OUTLINED_FUNCTION_14_55();
  OUTLINED_FUNCTION_6_51();
  v4 = OUTLINED_FUNCTION_41_0();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v4);
  OUTLINED_FUNCTION_15_51();
  type metadata accessor for VStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutPositionKey>>);
  OUTLINED_FUNCTION_15_51();
  v33 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  v32 = a1[3];
  OUTLINED_FUNCTION_14_55();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  OUTLINED_FUNCTION_15_51();
  type metadata accessor for _VariadicView.Tree();
  OUTLINED_FUNCTION_11_51();
  v28 = a1[5];
  OUTLINED_FUNCTION_14_55();
  OUTLINED_FUNCTION_15_51();
  type metadata accessor for _VariadicView.Tree();
  OUTLINED_FUNCTION_11_51();
  OUTLINED_FUNCTION_10_59();
  v30 = OUTLINED_FUNCTION_41_0();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingToolbarLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingToolbarLayout>);
  v31 = type metadata accessor for _VariadicView.Tree();
  v33 = *(_QWORD *)(v31 - 8);
  v5 = MEMORY[0x1E0C80A78](v31);
  v27 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)&v27 - v7;
  v8 = v2;
  ScreenSharingToolbar.toolbarPlacement.getter();
  v9 = a1[6];
  v10 = a1[7];
  v12 = a1[8];
  v11 = a1[9];
  v14 = v34;
  v13 = v35;
  v15 = v32;
  v16 = v28;
  v18 = implicit closure #1 in ScreenSharingToolbar.body.getter(v17, v35, v32, v34, v28, v9, v10, v12, 15.0, v11);
  v40 = v13;
  v41 = v15;
  v42 = v14;
  v43 = v16;
  v44 = v9;
  v45 = v10;
  v46 = v12;
  v47 = v11;
  v48 = v8;
  v38[2] = v13;
  v38[3] = v15;
  v38[4] = v14;
  v38[5] = v16;
  v38[6] = v9;
  v38[7] = v10;
  v38[8] = v12;
  v38[9] = v11;
  v38[10] = v8;
  v37[2] = v13;
  v37[3] = v15;
  v37[4] = v14;
  v37[5] = v16;
  v37[6] = v9;
  v37[7] = v10;
  v37[8] = v12;
  v37[9] = v11;
  v37[10] = v8;
  v19 = v27;
  ((void (*)(uint64_t (*)(), _BYTE *, uint64_t (*)(), _QWORD *, uint64_t (*)(), _QWORD *))v18)(partial apply for closure #1 in ScreenSharingToolbar.body.getter, v39, partial apply for closure #2 in ScreenSharingToolbar.body.getter, v38, partial apply for closure #3 in ScreenSharingToolbar.body.getter, v37);
  swift_release();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingToolbarLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingToolbarLayout>);
  v21 = v20;
  v22 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v30);
  v49[0] = v21;
  v49[1] = v22;
  v23 = v31;
  v24 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD91E0], v31, v49);
  v25 = (uint64_t)v29;
  static ViewBuilder.buildExpression<A>(_:)(v19, v23, v24);
  v26 = *(void (**)(char *, uint64_t))(v33 + 8);
  v26(v19, v23);
  static ViewBuilder.buildBlock<A>(_:)(v25, v23, v36);
  v26((char *)v25, v23);
  OUTLINED_FUNCTION_52_1();
}

uint64_t (*implicit closure #1 in ScreenSharingToolbar.body.getter(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v19;
  uint64_t (*result)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X3>, uint64_t@<X4>, uint64_t@<X5>, uint64_t@<X8>);

  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  *(_QWORD *)(v19 + 32) = a4;
  *(_QWORD *)(v19 + 40) = a5;
  *(_QWORD *)(v19 + 48) = a6;
  *(_QWORD *)(v19 + 56) = a7;
  *(_QWORD *)(v19 + 64) = a8;
  *(_QWORD *)(v19 + 72) = a10;
  result = partial apply for implicit closure #2 in implicit closure #1 in ScreenSharingToolbar.body.getter;
  *(double *)(v19 + 80) = a9;
  *(_BYTE *)(v19 + 88) = a1;
  return result;
}

uint64_t implicit closure #2 in implicit closure #1 in ScreenSharingToolbar.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>, double a9@<D0>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  _QWORD v37[2];
  _QWORD v38[3];
  uint64_t v39;
  va_list va;
  uint64_t v41;
  va_list va1;

  va_start(va1, a13);
  va_start(va, a13);
  v39 = va_arg(va1, _QWORD);
  v41 = va_arg(va1, _QWORD);
  type metadata accessor for Optional();
  type metadata accessor for Optional();
  swift_getTupleTypeMetadata2();
  v15 = type metadata accessor for TupleView();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v15);
  v16 = type metadata accessor for VStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  v17 = type metadata accessor for Optional();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  v18 = type metadata accessor for _VariadicView.Tree();
  v19 = type metadata accessor for Optional();
  v20 = type metadata accessor for _VariadicView.Tree();
  v21 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v16);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  v23 = v22;
  v24 = MEMORY[0x1E0CE0798];
  v38[0] = v22;
  v38[1] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v17, (uint64_t *)va);
  v25 = MEMORY[0x1E0CD91E0];
  v26 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD91E0], v18, v38);
  v37[0] = v23;
  v37[1] = MEMORY[0x1C3B750C8](v24, v19, va1);
  v27 = MEMORY[0x1C3B750C8](v25, v20, v37);
  *((_QWORD *)&v29 + 1) = v26;
  *(_QWORD *)&v29 = v21;
  return ScreenSharingToolbarLayout.callAsFunction<A, B, C>(_:leadingActions:trailingActions:)(a1, a2, a3, a4, a5, a6, a7, v16, a8, a9, v18, v20, v29, v27);
}

uint64_t closure #1 in ScreenSharingToolbar.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v28 = a7;
  v29 = a8;
  v26 = a1;
  v27 = a6;
  v25 = a5;
  v30 = a9;
  type metadata accessor for Optional();
  type metadata accessor for Optional();
  swift_getTupleTypeMetadata2();
  v13 = type metadata accessor for TupleView();
  v14 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v13);
  v15 = type metadata accessor for VStack();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v25 - v20;
  v31 = a2;
  v32 = a3;
  v33 = a4;
  v34 = v25;
  v35 = v27;
  v36 = v28;
  v37 = v29;
  v38 = a10;
  v39 = v26;
  default argument 0 of VStack.init(alignment:spacing:content:)(v13, v14);
  VStack.init(alignment:spacing:content:)();
  v22 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v15);
  static ViewBuilder.buildExpression<A>(_:)(v19, v15, v22);
  v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v19, v15);
  static ViewBuilder.buildBlock<A>(_:)((uint64_t)v21, v15, v30);
  return ((uint64_t (*)(char *, uint64_t))v23)(v21, v15);
}

void closure #1 in closure #1 in ScreenSharingToolbar.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v32 = a7;
  v27 = a3;
  v31 = a1;
  v33 = a9;
  v28 = a10;
  v25[4] = *(_QWORD *)(a4 - 8);
  v15 = MEMORY[0x1E0C80A78](a1);
  v25[2] = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v25[3] = (char *)v25 - v17;
  v26 = type metadata accessor for Optional();
  v29 = *(_QWORD *)(v26 - 8);
  v18 = MEMORY[0x1E0C80A78](v26);
  v19 = MEMORY[0x1E0C80A78](v18);
  v30 = (char *)v25 - v20;
  v25[1] = *(_QWORD *)(a2 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v21);
  v22 = type metadata accessor for Optional();
  v34 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  v35 = (char *)v25 - v24;
  v36 = a2;
  v37 = v27;
  v38 = a4;
  v39 = a5;
  v40 = a6;
  v41 = v32;
  v32 = a8;
  v42 = a8;
  v43 = v28;
  type metadata accessor for ScreenSharingToolbar();
}

uint64_t sub_1BD1A1734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;

  v9 = *(_QWORD *)(v8 - 240);
  ScreenSharingToolbar.toolbarPlacement.getter();
  v10 = Axis.rawValue.getter();
  if (v10 == Axis.rawValue.getter())
  {
    (*(void (**)(void))(v9 + 16))();
    static ViewBuilder.buildExpression<A>(_:)(v0, v3, v1);
    v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 312) + 8);
    v11(v0, v3);
    static ViewBuilder.buildBlock<A>(_:)(v4, v3, v7);
    v11(v4, v3);
    v12 = 0;
  }
  else
  {
    v12 = 1;
  }
  v13 = v1;
  v14 = v9;
  v15 = *(_QWORD *)(v8 - 280);
  v16 = 1;
  __swift_storeEnumTagSinglePayload(v7, v12, 1, v3);
  v17 = *(_QWORD *)(v8 - 208);
  *(_QWORD *)(v8 - 240) = v13;
  static ViewBuilder.buildIf<A>(_:)(v7, v17);
  v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 216) + 8);
  v18(v7, v5);
  v19 = *(void (**)(uint64_t))(v14 + 48);
  if (v19)
  {
    v20 = swift_retain();
    v21 = *(_QWORD *)(v8 - 304);
    v19(v20);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v19);
    v22 = *(_QWORD *)(v8 - 296);
    v23 = *(_QWORD *)(v8 - 232);
    static ViewBuilder.buildExpression<A>(_:)(v21, v6, v23);
    v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 288) + 8);
    v24(v21, v6);
    static ViewBuilder.buildBlock<A>(_:)(v22, v6, v2);
    v24(v22, v6);
    v16 = 0;
  }
  else
  {
    v23 = *(_QWORD *)(v8 - 232);
  }
  __swift_storeEnumTagSinglePayload(v2, v16, 1, v6);
  v25 = *(_QWORD *)(v8 - 248);
  static ViewBuilder.buildIf<A>(_:)(v2, v25);
  v26 = *(_QWORD *)(v8 - 256);
  v27 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v27(v2, v15);
  v28 = *(_QWORD *)(v8 - 208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 216) + 16))(v7, v28, v5);
  *(_QWORD *)(v8 - 152) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v2, v25, v15);
  *(_QWORD *)(v8 - 144) = v2;
  *(_QWORD *)(v8 - 168) = v5;
  *(_QWORD *)(v8 - 160) = v15;
  *(_QWORD *)(v8 - 192) = *(_QWORD *)(v8 - 240);
  v29 = MEMORY[0x1E0CE0798];
  *(_QWORD *)(v8 - 184) = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v5, v8 - 192);
  *(_QWORD *)(v8 - 200) = v23;
  *(_QWORD *)(v8 - 176) = MEMORY[0x1C3B750C8](v29, v15, v8 - 200);
  static ViewBuilder.buildBlock<each A>(_:)((uint64_t *)(v8 - 152), 2, v8 - 168);
  v27(v25, v15);
  v18(v28, v5);
  v27(v2, v15);
  return ((uint64_t (*)(uint64_t, uint64_t))v18)(v7, v5);
}

void closure #2 in ScreenSharingToolbar.body.getter(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v21 = a7;
  v19 = a6;
  v25 = a8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  v20 = type metadata accessor for Optional();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  v14 = type metadata accessor for _VariadicView.Tree();
  v24 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v22 = (char *)&v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v23 = (char *)&v18 - v17;
  v26 = a1;
  v27 = a2;
  v28 = a3;
  v29 = a4;
  v30 = a5;
  v31 = v19;
  v32 = v21;
  v33 = a9;
  type metadata accessor for ScreenSharingToolbar();
}

uint64_t sub_1BD1A1B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);

  *(_QWORD *)(v10 - 152) = ScreenSharingToolbar.actionsContainer.getter();
  *(_QWORD *)(v10 - 256) = v5;
  *(_QWORD *)(v10 - 248) = v8;
  *(_QWORD *)(v10 - 240) = v6;
  *(_QWORD *)(v10 - 232) = v9;
  *(_QWORD *)(v10 - 224) = v4;
  *(_QWORD *)(v10 - 216) = v3;
  *(_QWORD *)(v10 - 208) = v0;
  *(_QWORD *)(v10 - 200) = v7;
  *(_QWORD *)(v10 - 192) = v1;
  v11 = lazy protocol witness table accessor for type AnyLayout and conformance AnyLayout();
  *(_QWORD *)(v10 - 160) = v3;
  v12 = *(_QWORD *)(v10 - 320);
  v13 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v12, v10 - 160);
  v14 = *(_QWORD *)(v10 - 304);
  Layout.callAsFunction<A>(_:)((uint64_t)partial apply for closure #1 in closure #2 in ScreenSharingToolbar.body.getter, v10 - 272, MEMORY[0x1E0CE0328], v12, v11, v13, v14);
  swift_release();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  *(_QWORD *)(v10 - 176) = v15;
  *(_QWORD *)(v10 - 168) = v13;
  v16 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD91E0], v2, v10 - 176);
  v17 = *(_QWORD *)(v10 - 296);
  static ViewBuilder.buildExpression<A>(_:)(v14, v2, v16);
  v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 288) + 8);
  v18(v14, v2);
  static ViewBuilder.buildBlock<A>(_:)(v17, v2, *(_QWORD *)(v10 - 280));
  return ((uint64_t (*)(uint64_t, uint64_t))v18)(v17, v2);
}

uint64_t closure #1 in closure #2 in ScreenSharingToolbar.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a4;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - v11;
  v13 = type metadata accessor for Optional();
  v26 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v25 - v17;
  v19 = *(void (**)(uint64_t))(a1 + 32);
  if (v19)
  {
    v20 = swift_retain();
    v19(v20);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v19);
    static ViewBuilder.buildExpression<A>(_:)(v10, a2, a3);
    v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v10, a2);
    static ViewBuilder.buildBlock<A>(_:)((uint64_t)v12, a2, (uint64_t)v16);
    v21(v12, a2);
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v16, v22, 1, a2);
  static ViewBuilder.buildIf<A>(_:)((uint64_t)v16, (uint64_t)v18);
  v23 = *(void (**)(char *, uint64_t))(v26 + 8);
  v23(v16, v13);
  v28 = a3;
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v13, &v28);
  static ViewBuilder.buildBlock<A>(_:)((uint64_t)v18, v13, v27);
  return ((uint64_t (*)(char *, uint64_t))v23)(v18, v13);
}

void closure #3 in ScreenSharingToolbar.body.getter(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v23 = a7;
  v26 = a8;
  v20 = a9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  v21 = type metadata accessor for Optional();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  v15 = type metadata accessor for _VariadicView.Tree();
  v25 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v22 = (char *)&v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v24 = (char *)&v19 - v18;
  v27 = a1;
  v28 = a2;
  v29 = a3;
  v30 = a4;
  v31 = a5;
  v32 = a6;
  v33 = v23;
  v34 = v20;
  type metadata accessor for ScreenSharingToolbar();
}

uint64_t sub_1BD1A1F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);

  *(_QWORD *)(v10 - 152) = ScreenSharingToolbar.actionsContainer.getter();
  *(_QWORD *)(v10 - 240) = v4;
  *(_QWORD *)(v10 - 232) = v8;
  *(_QWORD *)(v10 - 224) = v7;
  *(_QWORD *)(v10 - 216) = v0;
  *(_QWORD *)(v10 - 208) = v3;
  *(_QWORD *)(v10 - 200) = v5;
  *(_QWORD *)(v10 - 192) = v9;
  *(_QWORD *)(v10 - 184) = v6;
  *(_QWORD *)(v10 - 176) = v1;
  v11 = lazy protocol witness table accessor for type AnyLayout and conformance AnyLayout();
  v12 = *(_QWORD *)(v10 - 304);
  v13 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v12, v10 + 16);
  v14 = *(_QWORD *)(v10 - 296);
  Layout.callAsFunction<A>(_:)((uint64_t)partial apply for closure #1 in closure #3 in ScreenSharingToolbar.body.getter, v10 - 256, MEMORY[0x1E0CE0328], v12, v11, v13, v14);
  swift_release();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  *(_QWORD *)(v10 - 168) = v15;
  *(_QWORD *)(v10 - 160) = v13;
  v16 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD91E0], v2, v10 - 168);
  v17 = *(_QWORD *)(v10 - 280);
  static ViewBuilder.buildExpression<A>(_:)(v14, v2, v16);
  v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 272) + 8);
  v18(v14, v2);
  static ViewBuilder.buildBlock<A>(_:)(v17, v2, *(_QWORD *)(v10 - 264));
  return ((uint64_t (*)(uint64_t, uint64_t))v18)(v17, v2);
}

uint64_t closure #1 in closure #3 in ScreenSharingToolbar.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a3;
  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v24 - v10;
  v12 = type metadata accessor for Optional();
  v25 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v24 - v16;
  v18 = *(void (**)(uint64_t))(a1 + 64);
  if (v18)
  {
    v19 = swift_retain();
    v18(v19);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v18);
    static ViewBuilder.buildExpression<A>(_:)(v9, a2, a4);
    v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    v20(v9, a2);
    static ViewBuilder.buildBlock<A>(_:)((uint64_t)v11, a2, (uint64_t)v15);
    v20(v11, a2);
    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v15, v21, 1, a2);
  static ViewBuilder.buildIf<A>(_:)((uint64_t)v15, (uint64_t)v17);
  v22 = *(void (**)(char *, uint64_t))(v25 + 8);
  v22(v15, v12);
  v27 = a4;
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v12, &v27);
  static ViewBuilder.buildBlock<A>(_:)((uint64_t)v17, v12, v26);
  return ((uint64_t (*)(char *, uint64_t))v22)(v17, v12);
}

uint64_t default argument 0 of ScreenSharingToolbar.init(toolbarPlacement:title:leadingActions:centerActions:trailingActions:)()
{
  return swift_getKeyPath();
}

uint64_t ScreenSharingToolbar.init(toolbarPlacement:title:leadingActions:centerActions:trailingActions:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(_QWORD *)a9 = result;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  return result;
}

void protocol witness for View.body.getter in conformance ScreenSharingToolbar<A, B, C, D>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;
  _BYTE v5[80];

  memcpy(v5, v2, sizeof(v5));
  ScreenSharingToolbar.body.getter(a1, a2);
}

void ScreenSharingToolbar.init(_:leadingActions:centerActions:trailingActions:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = swift_getKeyPath();
  *(_BYTE *)(a9 + 8) = 0;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = a8;
  OUTLINED_FUNCTION_52_1();
}

uint64_t ScreenSharingToolbar.init<>(_:leadingActions:trailingActions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_QWORD *)a7 = result;
  *(_BYTE *)(a7 + 8) = 0;
  *(_QWORD *)(a7 + 16) = a1;
  *(_QWORD *)(a7 + 24) = a2;
  *(_QWORD *)(a7 + 32) = a3;
  *(_QWORD *)(a7 + 40) = a4;
  *(_QWORD *)(a7 + 48) = 0;
  *(_QWORD *)(a7 + 56) = 0;
  *(_QWORD *)(a7 + 64) = a5;
  *(_QWORD *)(a7 + 72) = a6;
  return result;
}

void ScreenSharingToolbar.init<>(_:leadingActions:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_18_43();
  *(_QWORD *)v4 = swift_getKeyPath();
  *(_BYTE *)(v4 + 8) = 0;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  *(_QWORD *)(v4 + 32) = v1;
  *(_QWORD *)(v4 + 40) = v0;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  OUTLINED_FUNCTION_91();
}

void ScreenSharingToolbar.init<>(_:trailingActions:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_18_43();
  *(_QWORD *)v4 = swift_getKeyPath();
  *(_BYTE *)(v4 + 8) = 0;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_QWORD *)(v4 + 64) = v1;
  *(_QWORD *)(v4 + 72) = v0;
  OUTLINED_FUNCTION_91();
}

void ScreenSharingToolbar.init<>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = swift_getKeyPath();
  *(_BYTE *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  OUTLINED_FUNCTION_18();
}

void *ToolbarPlacementKey.defaultValue.unsafeMutableAddressor()
{
  return &static ToolbarPlacementKey.defaultValue;
}

uint64_t static ToolbarPlacementKey.defaultValue.getter()
{
  return 2;
}

void protocol witness for static EnvironmentKey.defaultValue.getter in conformance ToolbarPlacementKey(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t protocol witness for static EnvironmentKey._valuesEqual(_:_:) in conformance ToolbarPlacementKey()
{
  lazy protocol witness table accessor for type Edge and conformance Edge();
  return static EnvironmentKey<>._valuesEqual(_:_:)();
}

uint64_t EnvironmentValues.toolbarPlacement.getter()
{
  unsigned __int8 v1;

  lazy protocol witness table accessor for type ToolbarPlacementKey and conformance ToolbarPlacementKey();
  EnvironmentValues.subscript.getter();
  return v1;
}

void key path getter for EnvironmentValues.toolbarPlacement : EnvironmentValues()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_26_28();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1A2578()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_26_28();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.toolbarPlacement : EnvironmentValues()
{
  OUTLINED_FUNCTION_25_33();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1A25AC()
{
  OUTLINED_FUNCTION_25_33();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in ScreenSharingToolbar.body.getter()
{
  return partial apply for closure #1 in ScreenSharingToolbar.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in ScreenSharingToolbar.body.getter);
}

uint64_t partial apply for closure #2 in ScreenSharingToolbar.body.getter()
{
  return partial apply for closure #1 in ScreenSharingToolbar.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #2 in ScreenSharingToolbar.body.getter);
}

uint64_t partial apply for closure #3 in ScreenSharingToolbar.body.getter()
{
  return partial apply for closure #1 in ScreenSharingToolbar.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #3 in ScreenSharingToolbar.body.getter);
}

unint64_t lazy protocol witness table accessor for type ToolbarPlacementKey and conformance ToolbarPlacementKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ToolbarPlacementKey and conformance ToolbarPlacementKey;
  if (!lazy protocol witness table cache variable for type ToolbarPlacementKey and conformance ToolbarPlacementKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ToolbarPlacementKey, &type metadata for ToolbarPlacementKey);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ToolbarPlacementKey and conformance ToolbarPlacementKey);
  }
  return result;
}

uint64_t EnvironmentValues.toolbarPlacement.setter()
{
  lazy protocol witness table accessor for type ToolbarPlacementKey and conformance ToolbarPlacementKey();
  return EnvironmentValues.subscript.setter();
}

void (*EnvironmentValues.toolbarPlacement.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = lazy protocol witness table accessor for type ToolbarPlacementKey and conformance ToolbarPlacementKey();
  EnvironmentValues.subscript.getter();
  return EnvironmentValues.toolbarPlacement.modify;
}

void EnvironmentValues.toolbarPlacement.modify(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  EnvironmentValues.subscript.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t specialized ScreenSharingToolbarButtonStyleModifier.foregroundStyle.getter(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if ((a4 & 0x100) != 0)
    static Color.black.getter();
  else
    static HierarchicalShapeStyle.primary.getter();
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t specialized ScreenSharingToolbarButtonStyleModifier.foregroundStyle.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + *(int *)(type metadata accessor for ScreenSharingToolbarTitleButton() + 28)) == 1)
    static Color.black.getter();
  else
    static HierarchicalShapeStyle.primary.getter();
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t ScreenSharingToolbarButtonStyleModifier.foregroundStyle.getter(uint64_t a1, uint64_t a2)
{
  if (((*(uint64_t (**)(void))(a2 + 24))() & 1) != 0)
    static Color.black.getter();
  else
    static HierarchicalShapeStyle.primary.getter();
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t specialized ScreenSharingToolbarButtonStyleModifier.backgroundStyle.getter(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  int v14;
  _DWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HierarchicalShapeStyleModifier<Material>);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Material();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 0x100) != 0)
  {
    v16[2] = static HierarchicalShapeStyle.primary.getter();
  }
  else
  {
    v13 = a4 & 1;
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a3, v13);
    specialized Environment.wrappedValue.getter();
    outlined consume of Environment<CGFloat>.Content(a3, v13);
    v14 = Axis.rawValue.getter();
    if (v14 == Axis.rawValue.getter())
    {
      static Material.thin.getter();
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
      *(_QWORD *)&v8[*(int *)(v6 + 36)] = 3;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HierarchicalShapeStyleModifier<Material> and conformance HierarchicalShapeStyleModifier<A>, &demangling cache variable for type metadata for HierarchicalShapeStyleModifier<Material>);
    }
    else
    {
      v16[3] = static HierarchicalShapeStyle.quaternary.getter();
    }
  }
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t specialized ScreenSharingToolbarButtonStyleModifier.backgroundStyle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _DWORD v13[4];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HierarchicalShapeStyleModifier<Material>);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Material();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ScreenSharingToolbarTitleButton();
  if (*(_BYTE *)(v0 + *(int *)(v8 + 28)) == 1)
  {
    v13[2] = static HierarchicalShapeStyle.primary.getter();
  }
  else
  {
    v9 = v0 + *(int *)(v8 + 24);
    v10 = *(_QWORD *)v9;
    v11 = *(_BYTE *)(v9 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)v9, v11);
    specialized Environment.wrappedValue.getter();
    outlined consume of Environment<CGFloat>.Content(v10, v11);
    LODWORD(v10) = Axis.rawValue.getter();
    if ((_DWORD)v10 == Axis.rawValue.getter())
    {
      static Material.thin.getter();
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
      *(_QWORD *)&v3[*(int *)(v1 + 36)] = 3;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HierarchicalShapeStyleModifier<Material> and conformance HierarchicalShapeStyleModifier<A>, &demangling cache variable for type metadata for HierarchicalShapeStyleModifier<Material>);
    }
    else
    {
      v13[3] = static HierarchicalShapeStyle.quaternary.getter();
    }
  }
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t ScreenSharingToolbarButtonStyleModifier.backgroundStyle.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HierarchicalShapeStyleModifier<Material>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_1();
  v7 = type metadata accessor for Material();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  if ((OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24)) & 1) != 0)
  {
    static HierarchicalShapeStyle.primary.getter();
  }
  else
  {
    OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16));
    v9 = Axis.rawValue.getter();
    if (v9 == Axis.rawValue.getter())
    {
      static Material.thin.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v2, v3, v7);
      *(_QWORD *)(v2 + *(int *)(v5 + 36)) = 3;
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v7);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HierarchicalShapeStyleModifier<Material> and conformance HierarchicalShapeStyleModifier<A>, &demangling cache variable for type metadata for HierarchicalShapeStyleModifier<Material>);
    }
    else
    {
      static HierarchicalShapeStyle.quaternary.getter();
    }
  }
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t ScreenSharingToolbarIconButton.toolbarPlacement.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a4 & 1;
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a3, a4 & 1);
  specialized Environment.wrappedValue.getter();
  v7 = v6;
  outlined consume of Environment<CGFloat>.Content(a3, v5);
  return v7;
}

void ScreenSharingToolbarIconButton.body(content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char v80;
  char v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;

  v76 = a5;
  v77 = a4;
  v72 = a2;
  v65 = a1;
  v79 = a6;
  v6 = a3 & 1;
  v78 = a5 & 0x100;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolRenderingMode?);
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for Image.Scale();
  v61 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IconOnlyLabelStyle();
  v58 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
  v59 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>);
  MEMORY[0x1E0C80A78](v57);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>);
  MEMORY[0x1E0C80A78](v60);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>);
  MEMORY[0x1E0C80A78](v64);
  v21 = (uint64_t)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v67);
  v66 = (uint64_t)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>);
  MEMORY[0x1E0C80A78](v70);
  v68 = (uint64_t)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>>);
  MEMORY[0x1E0C80A78](v73);
  v71 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>>, _OpacityEffect>);
  MEMORY[0x1E0C80A78](v75);
  v74 = (uint64_t)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  IconOnlyLabelStyle.init()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingToolbarIconButton>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ViewModifier_Content<ScreenSharingToolbarIconButton> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingToolbarIconButton>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type IconOnlyLabelStyle and conformance IconOnlyLabelStyle, (void (*)(uint64_t))MEMORY[0x1E0CDAF30]);
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v11);
  v26 = v61;
  v27 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v10, *MEMORY[0x1E0CDF7D8], v63);
  KeyPath = swift_getKeyPath();
  v29 = (uint64_t *)&v17[*(int *)(v57 + 36)];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)v29 + *(int *)(v30 + 28), v10, v27);
  *v29 = KeyPath;
  v31 = v59;
  v32 = v62;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v17, v15, v62);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
  v33 = static Font.body.getter();
  v34 = swift_getKeyPath();
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v17, (uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>);
  v35 = (uint64_t *)&v19[*(int *)(v60 + 36)];
  *v35 = v34;
  v35[1] = v33;
  v36 = (uint64_t)v17;
  v37 = v72;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v36, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>);
  v38 = (uint64_t)v69;
  static SymbolRenderingMode.monochrome.getter();
  v39 = type metadata accessor for SymbolRenderingMode();
  __swift_storeEnumTagSinglePayload(v38, 0, 1, v39);
  v40 = swift_getKeyPath();
  v41 = (uint64_t *)(v21 + *(int *)(v64 + 36));
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<SymbolRenderingMode?>);
  outlined init with copy of Participant.ScreenInfo?(v38, (uint64_t)v41 + *(int *)(v42 + 28), &demangling cache variable for type metadata for SymbolRenderingMode?);
  *v41 = v40;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v19, v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, &demangling cache variable for type metadata for SymbolRenderingMode?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v43 = v66;
  outlined init with copy of Participant.ScreenInfo?(v21, v66, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>);
  v44 = (_OWORD *)(v43 + *(int *)(v67 + 36));
  v45 = v83;
  *v44 = v82;
  v44[1] = v45;
  v44[2] = v84;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v37, v6);
  LOWORD(v21) = v76;
  LOBYTE(v40) = v76 & 1;
  v46 = v77;
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v77, v76 & 1);
  v81 = v6;
  v80 = v40;
  LOWORD(v38) = v78;
  v47 = specialized ScreenSharingToolbarButtonStyleModifier.foregroundStyle.getter(v37, v6, v46, (unsigned __int16)v78 | v40);
  outlined consume of Environment<CGFloat>.Content(v37, v6);
  outlined consume of Environment<CGFloat>.Content(v46, v21 & 1);
  v48 = v68;
  outlined init with copy of Participant.ScreenInfo?(v43, v68, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>);
  *(_QWORD *)(v48 + *(int *)(v70 + 36)) = v47;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v43, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v37, v6);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v46, v21 & 1);
  v81 = v6;
  v80 = v40;
  v49 = specialized ScreenSharingToolbarButtonStyleModifier.backgroundStyle.getter(v37, v6, v46, (unsigned __int16)v38 | v40);
  outlined consume of Environment<CGFloat>.Content(v37, v6);
  v50 = v46;
  v51 = (uint64_t)v71;
  outlined consume of Environment<CGFloat>.Content(v50, v21 & 1);
  outlined init with copy of Participant.ScreenInfo?(v48, v51, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>);
  v52 = v51 + *(int *)(v73 + 36);
  *(_QWORD *)v52 = v49;
  *(_WORD *)(v52 + 8) = 256;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v48, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>);
  v53 = 1.0;
  if ((v21 & 0x100) == 0)
  {
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v37, v6);
    specialized Environment.wrappedValue.getter();
    v55 = v54;
    outlined consume of Environment<CGFloat>.Content(v37, v6);
    if ((v55 & 1) != 0)
      v53 = 1.0;
    else
      v53 = 0.3;
  }
  v56 = v74;
  outlined init with copy of Participant.ScreenInfo?(v51, v74, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>>);
  *(double *)(v56 + *(int *)(v75 + 36)) = v53;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v51, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>>);
  outlined init with take of Participant.VideoInfo?(v56, v79, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>>, _OpacityEffect>);
}

uint64_t protocol witness for ScreenSharingToolbarButtonStyleModifier.toolbarPlacement.getter in conformance ScreenSharingToolbarIconButton()
{
  uint64_t v0;

  return ScreenSharingToolbarIconButton.toolbarPlacement.getter(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t protocol witness for ScreenSharingToolbarButtonStyleModifier.isSelected.getter in conformance ScreenSharingToolbarIconButton()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t protocol witness for static ViewModifier._viewListCount(inputs:body:) in conformance ScreenSharingToolbarIconButton()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t ScreenSharingToolbarTitleButton.toolbarPlacement.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + *(int *)(type metadata accessor for ScreenSharingToolbarTitleButton() + 24);
  v2 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)v1, v3);
  specialized Environment.wrappedValue.getter();
  v5 = v4;
  outlined consume of Environment<CGFloat>.Content(v2, v3);
  return v5;
}

void protocol witness for ViewModifier.body(content:) in conformance ScreenSharingToolbarIconButton(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;

  if (*(_BYTE *)(v2 + 25))
    v3 = 256;
  else
    v3 = 0;
  ScreenSharingToolbarIconButton.body(content:)(a1, *(_QWORD *)v2, *(_BYTE *)(v2 + 8), *(_QWORD *)(v2 + 16), v3 | *(unsigned __int8 *)(v2 + 24), a2);
}

double ScreenSharingToolbarTitleButton.horizontalPadding.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double result;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;

  v0 = type metadata accessor for UserInterfaceSizeClass();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v20 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v20 - v14;
  if (static Platform.current.getter() == 1)
  {
    type metadata accessor for ScreenSharingToolbarTitleButton();
    specialized Environment.wrappedValue.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v13, *MEMORY[0x1E0CDC160], v0);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v0);
    v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v15, (uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v13, v16, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v0) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if (__swift_getEnumTagSinglePayload(v16, 1, v0) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        return 19.0;
      }
    }
    else
    {
      outlined init with copy of Participant.ScreenInfo?((uint64_t)v6, (uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if (__swift_getEnumTagSinglePayload(v16, 1, v0) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
        v18 = dispatch thunk of static Equatable.== infix(_:_:)();
        v19 = *(void (**)(char *, uint64_t))(v1 + 8);
        v19(v3, v0);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        v19(v10, v0);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
        result = 19.0;
        if ((v18 & 1) != 0)
          return result;
        return 12.0;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  }
  return 12.0;
}

void ScreenSharingToolbarTitleButton.body(content:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v59;
  uint64_t v60;
  uint64_t (*v61)(void);
  double v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;

  v79 = a1;
  v88 = a2;
  v87 = type metadata accessor for ScreenSharingToolbarTitleButton();
  MEMORY[0x1E0C80A78](v87);
  v83 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v86);
  v85 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x1E0C80A78](v4);
  v74 = (uint64_t)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Font.TextStyle();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TitleOnlyLabelStyle();
  v68 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>);
  MEMORY[0x1E0C80A78](v71);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v75);
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v77);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>);
  MEMORY[0x1E0C80A78](v78);
  v76 = (uint64_t)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>);
  MEMORY[0x1E0C80A78](v80);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>, _OpacityEffect>);
  MEMORY[0x1E0C80A78](v84);
  v82 = (uint64_t)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  TitleOnlyLabelStyle.init()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingToolbarTitleButton>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ViewModifier_Content<ScreenSharingToolbarTitleButton> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingToolbarTitleButton>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, (void (*)(uint64_t))MEMORY[0x1E0CDB588]);
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v10, v8);
  v23 = v69;
  v24 = v70;
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v7, *MEMORY[0x1E0CDD790], v70);
  v25 = type metadata accessor for Font.Design();
  v26 = v74;
  __swift_storeEnumTagSinglePayload(v74, 1, 1, v25);
  static Font.Weight.medium.getter();
  v27 = static Font.system(_:design:weight:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v26, &demangling cache variable for type metadata for Font.Design?);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  KeyPath = swift_getKeyPath();
  v29 = v72;
  v30 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v14, v12, v73);
  v31 = (uint64_t *)&v14[*(int *)(v71 + 36)];
  *v31 = KeyPath;
  v31[1] = v27;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v30);
  LOBYTE(v27) = static Edge.Set.horizontal.getter();
  v32 = v81;
  ScreenSharingToolbarTitleButton.horizontalPadding.getter();
  EdgeInsets.init(_all:)();
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v14, (uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>);
  v41 = &v16[*(int *)(v75 + 36)];
  *v41 = v27;
  *((_QWORD *)v41 + 1) = v34;
  *((_QWORD *)v41 + 2) = v36;
  *((_QWORD *)v41 + 3) = v38;
  *((_QWORD *)v41 + 4) = v40;
  v41[40] = 0;
  v42 = (uint64_t)v14;
  v43 = (uint64_t)v83;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v42, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v16, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>);
  v44 = &v18[*(int *)(v77 + 36)];
  v45 = v90;
  *(_OWORD *)v44 = v89;
  *((_OWORD *)v44 + 1) = v45;
  *((_OWORD *)v44 + 2) = v91;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>);
  v46 = specialized ScreenSharingToolbarButtonStyleModifier.foregroundStyle.getter();
  v47 = v76;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v18, v76, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>);
  *(_QWORD *)(v47 + *(int *)(v78 + 36)) = v46;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>);
  v48 = v32;
  v49 = specialized ScreenSharingToolbarButtonStyleModifier.backgroundStyle.getter();
  v50 = v85;
  v51 = &v85[*(int *)(v86 + 20)];
  v52 = *MEMORY[0x1E0CDB0C0];
  v53 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v51, v52, v53);
  __asm { FMOV            V0.2D, #15.0 }
  *v50 = _Q0;
  v59 = (uint64_t *)&v21[*(int *)(v80 + 36)];
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>);
  v61 = MEMORY[0x1E0CDA088];
  _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v50, (uint64_t)v59 + *(int *)(v60 + 52), (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  *v59 = v49;
  *(_WORD *)((char *)v59 + *(int *)(v60 + 56)) = 256;
  outlined init with copy of Participant.ScreenInfo?(v47, (uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>);
  outlined destroy of AccountUpdateNotice((uint64_t)v50, (uint64_t (*)(_QWORD))v61);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v47, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>);
  LODWORD(v49) = *(unsigned __int8 *)(v48 + *(int *)(v87 + 28));
  _s15ConversationKit11ParticipantVWOcTm_2(v48, v43, (uint64_t (*)(_QWORD))type metadata accessor for ScreenSharingToolbarTitleButton);
  if ((_DWORD)v49 == 1)
  {
    outlined destroy of AccountUpdateNotice(v43, (uint64_t (*)(_QWORD))type metadata accessor for ScreenSharingToolbarTitleButton);
    v62 = 1.0;
  }
  else
  {
    v63 = *(_QWORD *)v43;
    v64 = *(_BYTE *)(v43 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)v43, v64);
    specialized Environment.wrappedValue.getter();
    v66 = v65;
    outlined consume of Environment<CGFloat>.Content(v63, v64);
    outlined destroy of AccountUpdateNotice(v43, (uint64_t (*)(_QWORD))type metadata accessor for ScreenSharingToolbarTitleButton);
    if ((v66 & 1) != 0)
      v62 = 1.0;
    else
      v62 = 0.5;
  }
  v67 = v82;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v21, v82, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>);
  *(double *)(v67 + *(int *)(v84 + 36)) = v62;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>);
  outlined init with take of Participant.VideoInfo?(v67, v88, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>, _OpacityEffect>);
}

uint64_t protocol witness for ScreenSharingToolbarButtonStyleModifier.isSelected.getter in conformance ScreenSharingToolbarTitleButton(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

BOOL static ScreenSharingToolbarButtonStyle.Style.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void ScreenSharingToolbarButtonStyle.Style.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

Swift::Int ScreenSharingToolbarButtonStyle.Style.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ScreenSharingToolbarButtonStyle.Style(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ScreenSharingToolbarButtonStyle.Style.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ScreenSharingToolbarButtonStyle.Style()
{
  char *v0;

  return ScreenSharingToolbarButtonStyle.Style.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ScreenSharingToolbarButtonStyle.Style(uint64_t a1)
{
  char *v1;

  ScreenSharingToolbarButtonStyle.Style.hash(into:)(a1, *v1);
}

uint64_t ScreenSharingToolbarButtonStyle.style.getter(char a1)
{
  return a1 & 1;
}

uint64_t ScreenSharingToolbarButtonStyle.isSelected.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t ScreenSharingToolbarButtonStyle.isSelected.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*ScreenSharingToolbarButtonStyle.isSelected.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ScreenSharingToolbarButtonStyle.makeBody(configuration:)(__int16 a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = a1;
  v32 = a2;
  v29 = a1 & 0x100;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton>);
  OUTLINED_FUNCTION_1_1();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - v9;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton>, ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton>>.Storage);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_11_2();
  v13 = type metadata accessor for ButtonStyleConfiguration.Label();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_4_1();
  ButtonStyleConfiguration.label.getter();
  KeyPath = swift_getKeyPath();
  if ((v4 & 1) != 0)
  {
    v25 = swift_getKeyPath();
    OUTLINED_FUNCTION_21_36((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
    v26 = &v8[*(int *)(v31 + 36)];
    *(_QWORD *)v26 = KeyPath;
    v26[8] = 0;
    *((_QWORD *)v26 + 2) = v25;
    v26[24] = 0;
    v26[25] = BYTE1(v29);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v23 = &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton>;
    outlined init with take of Participant.VideoInfo?((uint64_t)v8, (uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton>);
    OUTLINED_FUNCTION_24_33((uint64_t)v10);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v24 = (uint64_t)v10;
  }
  else
  {
    *v3 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    swift_storeEnumTagMultiPayload();
    v19 = swift_getKeyPath();
    v20 = v2 + *(int *)(v28 + 36);
    *(_QWORD *)v20 = KeyPath;
    *(_BYTE *)(v20 + 8) = 0;
    v21 = (int *)type metadata accessor for ScreenSharingToolbarTitleButton();
    outlined init with take of Participant.VideoInfo?((uint64_t)v3, v20 + v21[5], &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
    v22 = v20 + v21[6];
    *(_QWORD *)v22 = v19;
    *(_BYTE *)(v22 + 8) = 0;
    *(_BYTE *)(v20 + v21[7]) = BYTE1(v29);
    OUTLINED_FUNCTION_21_36(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
    v23 = &demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton>;
    OUTLINED_FUNCTION_24_33(v2);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v24 = v2;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v24, v23);
  OUTLINED_FUNCTION_52_1();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton>);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label, (void (*)(uint64_t))MEMORY[0x1E0CDC528]);
    v3 = v2;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingToolbarTitleButton and conformance ScreenSharingToolbarTitleButton, (void (*)(uint64_t))type metadata accessor for ScreenSharingToolbarTitleButton);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t type metadata accessor for ScreenSharingToolbarTitleButton()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ScreenSharingToolbarTitleButton;
  if (!type metadata singleton initialization cache for ScreenSharingToolbarTitleButton)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton>);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label, (void (*)(uint64_t))MEMORY[0x1E0CDC528]);
    v3[0] = v2;
    v3[1] = lazy protocol witness table accessor for type ScreenSharingToolbarIconButton and conformance ScreenSharingToolbarIconButton();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ScreenSharingToolbarIconButton and conformance ScreenSharingToolbarIconButton()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingToolbarIconButton and conformance ScreenSharingToolbarIconButton;
  if (!lazy protocol witness table cache variable for type ScreenSharingToolbarIconButton and conformance ScreenSharingToolbarIconButton)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingToolbarIconButton, &unk_1E761FC80);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingToolbarIconButton and conformance ScreenSharingToolbarIconButton);
  }
  return result;
}

ConversationKit::ScreenSharingToolbarButtonStyle __swiftcall ScreenSharingToolbarButtonStyle.init(style:isSelected:)(ConversationKit::ScreenSharingToolbarButtonStyle::Style style, Swift::Bool isSelected)
{
  int v2;

  if (isSelected)
    v2 = 256;
  else
    v2 = 0;
  return (ConversationKit::ScreenSharingToolbarButtonStyle)OUTLINED_FUNCTION_30_33(style, v2);
}

void protocol witness for ButtonStyle.makeBody(configuration:) in conformance ScreenSharingToolbarButtonStyle(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  __int16 v2;

  if (v1[1])
    v2 = 256;
  else
    v2 = 0;
  ScreenSharingToolbarButtonStyle.makeBody(configuration:)(v2 | *v1, a1);
}

uint64_t static ButtonStyle<>.screenSharingToolbarButton(style:isSelected:)(char a1, char a2)
{
  int v2;

  if ((a2 & 1) != 0)
    v2 = 256;
  else
    v2 = 0;
  return OUTLINED_FUNCTION_30_33(a1, v2);
}

uint64_t associated type witness table accessor for View.Body : View in ScreenSharingToolbar<A, B, C, D>()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ScreenSharingToolbarButtonStyle.Style and conformance ScreenSharingToolbarButtonStyle.Style()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingToolbarButtonStyle.Style and conformance ScreenSharingToolbarButtonStyle.Style;
  if (!lazy protocol witness table cache variable for type ScreenSharingToolbarButtonStyle.Style and conformance ScreenSharingToolbarButtonStyle.Style)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingToolbarButtonStyle.Style, &type metadata for ScreenSharingToolbarButtonStyle.Style);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingToolbarButtonStyle.Style and conformance ScreenSharingToolbarButtonStyle.Style);
  }
  return result;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in ScreenSharingToolbarButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata instantiation function for ScreenSharingToolbar()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t destroy for ScreenSharingToolbar(uint64_t a1)
{
  uint64_t result;

  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  result = swift_release();
  if (*(_QWORD *)(a1 + 32))
    result = swift_release();
  if (*(_QWORD *)(a1 + 48))
    result = swift_release();
  if (*(_QWORD *)(a1 + 64))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for ScreenSharingToolbar(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain();
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  v9 = *(_QWORD *)(a2 + 48);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  v11 = *(_QWORD *)(a2 + 64);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  return a1;
}

uint64_t assignWithCopy for ScreenSharingToolbar(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v9)
    {
      v10 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v11;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_8:
  v12 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v12)
    {
      v13 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v12;
      *(_QWORD *)(a1 + 56) = v13;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    v14 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 56) = v14;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_15:
  v15 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v15)
    {
      v17 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v15;
      *(_QWORD *)(a1 + 72) = v17;
      swift_retain();
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  if (!v15)
  {
    swift_release();
    goto LABEL_21;
  }
  v16 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v15;
  *(_QWORD *)(a1 + 72) = v16;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ScreenSharingToolbar(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  v8 = a2[4];
  if (*(_QWORD *)(a1 + 32))
  {
    if (v8)
    {
      v9 = a2[5];
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = v9;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v8)
  {
    v10 = a2[5];
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v10;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_8:
  v11 = a2[6];
  if (*(_QWORD *)(a1 + 48))
  {
    if (v11)
    {
      v12 = a2[7];
      *(_QWORD *)(a1 + 48) = v11;
      *(_QWORD *)(a1 + 56) = v12;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v11)
  {
    v13 = a2[7];
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v13;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_15:
  v14 = a2[8];
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v14)
    {
      v16 = a2[9];
      *(_QWORD *)(a1 + 64) = v14;
      *(_QWORD *)(a1 + 72) = v16;
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v14)
  {
    swift_release();
    goto LABEL_21;
  }
  v15 = a2[9];
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v15;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingToolbar(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingToolbar(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ScreenSharingToolbar()
{
  JUMPOUT(0x1C3B74FFCLL);
}

void type metadata accessor for ToolbarPlacementKey()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t dispatch thunk of ScreenSharingToolbarButtonStyleModifier.toolbarPlacement.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ScreenSharingToolbarButtonStyleModifier.isSelected.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t getEnumTagSinglePayload for ScreenSharingToolbarButtonStyle(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65281 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingToolbarButtonStyle(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD1A4C28 + 4 * byte_1BD64DEE5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1BD1A4C5C + 4 * byte_1BD64DEE0[v4]))();
}

uint64_t sub_1BD1A4C5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD1A4C64(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BD1A4C6CLL);
  return result;
}

uint64_t sub_1BD1A4C78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BD1A4C80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD1A4C84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD1A4C8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

void type metadata accessor for ScreenSharingToolbarButtonStyle()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ScreenSharingToolbarButtonStyle.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD1A4CF0 + 4 * byte_1BD64DEEF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD1A4D24 + 4 * byte_1BD64DEEA[v4]))();
}

uint64_t sub_1BD1A4D24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1A4D2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1A4D34);
  return result;
}

uint64_t sub_1BD1A4D40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1A4D48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD1A4D4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1A4D54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ScreenSharingToolbarButtonStyle.Style()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1BD1A4D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<ScreenSharingToolbarLayout>);
  OUTLINED_FUNCTION_15_51();
  type metadata accessor for Optional();
  type metadata accessor for Optional();
  OUTLINED_FUNCTION_6_51();
  v0 = OUTLINED_FUNCTION_41_0();
  v1 = MEMORY[0x1E0CE0680];
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v0);
  type metadata accessor for VStack();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _TraitWritingModifier<_LayoutTrait<LayoutPositionKey>>);
  type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  type metadata accessor for Optional();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  type metadata accessor for _VariadicView.Tree();
  OUTLINED_FUNCTION_32_6();
  type metadata accessor for Optional();
  type metadata accessor for _VariadicView.Tree();
  OUTLINED_FUNCTION_32_6();
  OUTLINED_FUNCTION_10_59();
  v2 = OUTLINED_FUNCTION_41_0();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingToolbarLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingToolbarLayout>);
  v3 = type metadata accessor for _VariadicView.Tree();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _LayoutRoot<ScreenSharingToolbarLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<ScreenSharingToolbarLayout>);
  v6[0] = v4;
  v6[1] = MEMORY[0x1C3B750C8](v1, v2);
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CD91E0], v3, v6);
}

void sub_1BD1A4F40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Edge>);
  v2 = type metadata accessor for ModifiedContent();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Edge> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Edge>);
  v4[0] = v1;
  v4[1] = v3;
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v2, v4);
  OUTLINED_FUNCTION_45_0();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton>, ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton>, ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton>, ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton>, ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarTitleButton>, ModifiedContent<ButtonStyleConfiguration.Label, ScreenSharingToolbarIconButton>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for ScreenSharingToolbarTitleButton(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = a3[5];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      }
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[6];
    v16 = a1 + v15;
    v17 = a2 + v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_BYTE *)(v17 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)v17, v19);
    *(_QWORD *)v16 = v18;
    *(_BYTE *)(v16 + 8) = v19;
    *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for ScreenSharingToolbarTitleButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  return outlined consume of Environment<CGFloat>.Content(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t initializeWithCopy for ScreenSharingToolbarTitleButton(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)v15, v17);
  *(_QWORD *)v14 = v16;
  *(_BYTE *)(v14 + 8) = v17;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for ScreenSharingToolbarTitleButton(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[5];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v10, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = *(_BYTE *)(v17 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)v17, v19);
  v20 = *(_QWORD *)v16;
  v21 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v19;
  outlined consume of Environment<CGFloat>.Content(v20, v21);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for ScreenSharingToolbarTitleButton(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for ScreenSharingToolbarTitleButton(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    v10 = a3[5];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v10, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = *v18;
  LOBYTE(v18) = *((_BYTE *)v18 + 8);
  v20 = *(_QWORD *)v17;
  v21 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = (_BYTE)v18;
  outlined consume of Environment<CGFloat>.Content(v20, v21);
  *(_BYTE *)(a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingToolbarTitleButton()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD1A57F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 254)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
    __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ScreenSharingToolbarTitleButton()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD1A586C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 254)
  {
    *(_BYTE *)(a1 + 8) = -(char)a2;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

void type metadata completion function for ScreenSharingToolbarTitleButton()
{
  unint64_t v0;

  type metadata accessor for Environment<UserInterfaceSizeClass?>.Content();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for ScreenSharingToolbarIconButton(uint64_t a1)
{
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return outlined consume of Environment<CGFloat>.Content(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for ScreenSharingToolbarIconButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for ScreenSharingToolbarIconButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v8, v9);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  outlined consume of Environment<CGFloat>.Content(v10, v11);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ScreenSharingToolbarIconButton(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  outlined consume of Environment<CGFloat>.Content(v9, v10);
  *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingToolbarIconButton(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 26))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingToolbarIconButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

void *type metadata accessor for ScreenSharingToolbarIconButton()
{
  return &unk_1E761FC80;
}

unint64_t instantiation function for generic protocol witness table for ScreenSharingToolbarIconButton(uint64_t a1)
{
  unint64_t result;

  result = lazy protocol witness table accessor for type ScreenSharingToolbarIconButton and conformance ScreenSharingToolbarIconButton();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void instantiation function for generic protocol witness table for ScreenSharingToolbarTitleButton(uint64_t a1)
{
  uint64_t v2;

  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingToolbarTitleButton and conformance ScreenSharingToolbarTitleButton, (void (*)(uint64_t))type metadata accessor for ScreenSharingToolbarTitleButton);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in ScreenSharingToolbarIconButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in ScreenSharingToolbarTitleButton()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BD1A5C10()
{
  EnvironmentValues.symbolRenderingMode.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for EnvironmentValues.symbolRenderingMode : EnvironmentValues, serialized(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolRenderingMode?);
  MEMORY[0x1E0C80A78](v2);
  outlined init with copy of Participant.ScreenInfo?(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for SymbolRenderingMode?);
  return EnvironmentValues.symbolRenderingMode.setter();
}

unint64_t lazy protocol witness table accessor for type Edge and conformance Edge()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Edge and conformance Edge;
  if (!lazy protocol witness table cache variable for type Edge and conformance Edge)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDD400], MEMORY[0x1E0CDD3F8]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Edge and conformance Edge);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #3 in ScreenSharingToolbar.body.getter()
{
  return partial apply for closure #1 in ScreenSharingToolbar.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in closure #3 in ScreenSharingToolbar.body.getter);
}

unint64_t lazy protocol witness table accessor for type AnyLayout and conformance AnyLayout()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnyLayout and conformance AnyLayout;
  if (!lazy protocol witness table cache variable for type AnyLayout and conformance AnyLayout)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0318], MEMORY[0x1E0CE0328]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnyLayout and conformance AnyLayout);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VStackLayout and conformance VStackLayout()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VStackLayout and conformance VStackLayout;
  if (!lazy protocol witness table cache variable for type VStackLayout and conformance VStackLayout)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD8C28], MEMORY[0x1E0CD8C30]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VStackLayout and conformance VStackLayout);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type HStackLayout and conformance HStackLayout()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type HStackLayout and conformance HStackLayout;
  if (!lazy protocol witness table cache variable for type HStackLayout and conformance HStackLayout)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD8B20], MEMORY[0x1E0CD8B28]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HStackLayout and conformance HStackLayout);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #2 in ScreenSharingToolbar.body.getter()
{
  return partial apply for closure #1 in ScreenSharingToolbar.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in closure #2 in ScreenSharingToolbar.body.getter);
}

uint64_t partial apply for closure #1 in closure #1 in ScreenSharingToolbar.body.getter()
{
  return partial apply for closure #1 in ScreenSharingToolbar.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in closure #1 in ScreenSharingToolbar.body.getter);
}

uint64_t partial apply for closure #1 in ScreenSharingToolbar.body.getter(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[10], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1BD1A5DFC()
{
  return swift_deallocObject();
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in ScreenSharingToolbar.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;

  return implicit closure #2 in implicit closure #1 in ScreenSharingToolbar.body.getter(a1, a2, a3, a4, a5, a6, *(_BYTE *)(v7 + 88), a7, *(double *)(v7 + 80), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(_QWORD *)(v7 + 64), *(_QWORD *)(v7 + 72));
}

void sub_1BD1A5E50()
{
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>, _OpacityEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9728]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle> and conformance _InsettableBackgroundShapeModifier<A, B>, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD8D70]);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ForegroundStyleModifier<AnyShapeStyle> and conformance _ForegroundStyleModifier<A>, &demangling cache variable for type metadata for _ForegroundStyleModifier<AnyShapeStyle>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9758]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  _QWORD v10[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingToolbarTitleButton>);
    v3 = type metadata accessor for TitleOnlyLabelStyle();
    v4 = (void (*)(uint64_t))MEMORY[0x1E0CDB588];
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ViewModifier_Content<ScreenSharingToolbarTitleButton> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingToolbarTitleButton>);
    v6 = v5;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TitleOnlyLabelStyle and conformance TitleOnlyLabelStyle, v4);
    v10[2] = v2;
    v10[3] = v3;
    v10[4] = v6;
    v10[5] = v7;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v10[0] = OpaqueTypeConformance2;
    v10[1] = v9;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v10);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  uint64_t v10;
  _QWORD v11[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = type metadata accessor for ButtonStyleConfiguration.Label();
    v3 = (void (*)(uint64_t))MEMORY[0x1E0CDC528];
    v4 = type metadata accessor for IconOnlyLabelStyle();
    v5 = (void (*)(uint64_t))MEMORY[0x1E0CDAF30];
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label, v3);
    v7 = v6;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type IconOnlyLabelStyle and conformance IconOnlyLabelStyle, v5);
    v11[2] = v2;
    v11[3] = v4;
    v11[4] = v7;
    v11[5] = v8;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v11[0] = OpaqueTypeConformance2;
    v11[1] = v10;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v11);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void sub_1BD1A60D8()
{
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>>, _OpacityEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9728]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle> and conformance _InsettableBackgroundShapeModifier<A, B>, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD8D70]);
    v3 = v2;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ForegroundStyleModifier<AnyShapeStyle> and conformance _ForegroundStyleModifier<A>, &demangling cache variable for type metadata for _ForegroundStyleModifier<AnyShapeStyle>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ForegroundStyleModifier<AnyShapeStyle>>, _InsettableBackgroundShapeModifier<AnyShapeStyle, RoundedRectangle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  _QWORD v8[2];

  if (!*a1)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v8[0] = a3();
    v8[1] = a4;
    atomic_store(MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v7, v8), a1);
  }
  OUTLINED_FUNCTION_45_0();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<SymbolRenderingMode?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<SymbolRenderingMode?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  _QWORD v10[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingToolbarIconButton>);
    v3 = type metadata accessor for IconOnlyLabelStyle();
    v4 = (void (*)(uint64_t))MEMORY[0x1E0CDAF30];
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ViewModifier_Content<ScreenSharingToolbarIconButton> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<ScreenSharingToolbarIconButton>);
    v6 = v5;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type IconOnlyLabelStyle and conformance IconOnlyLabelStyle, v4);
    v10[2] = v2;
    v10[3] = v3;
    v10[4] = v6;
    v10[5] = v7;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Image.Scale> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
    v10[0] = OpaqueTypeConformance2;
    v10[1] = v9;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v10);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit015CallControlsPreH15ButtonViewModel_pGG_AH0jhlM6Holder33_801AF6C8C7AF9F90D2770D7757FA6A2ELLVs5NeverOTg506_sSi15f6Kit015hij3C15klm22_pAA0ecgH6Holder33_801opqrstuvw38ELLVIgynr_Si6offset_AaB_p7elementtAEs5X181OIegnrzr_TR04_s15a5Kit18ec7Buttonsg14V7service9viewh66AcA0cD21ConfirmationServicing_p_AA0cdefI0CtcfcAA0cdfI6Holder33_801jklmnopqR40ELLVSi_AA0d8Controlscd6ButtonfI0_ptXEfU_Tf3nnnpf_nTf1cn_n(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20[2];
  _OWORD v21[4];
  uint64_t v22;

  v22 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v2 = v22;
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    v4 = 0;
    v5 = a1 + 32;
    do
    {
      outlined init with copy of RadarReporting(v5, (uint64_t)v20);
      *(_QWORD *)&v15 = v4;
      outlined init with take of Notice(v20, (uint64_t)&v15 + 8);
      v21[0] = v15;
      v21[1] = v16;
      v21[2] = v17;
      v19 = 761623152;
      *(_QWORD *)&v20[0] = 0xE400000000000000;
      v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v6);
      swift_bridgeObjectRelease();
      v7 = v19;
      v8 = *(_QWORD *)&v20[0];
      outlined init with copy of RadarReporting((uint64_t)v21 + 8, (uint64_t)&v16);
      *(_QWORD *)&v15 = v7;
      *((_QWORD *)&v15 + 1) = v8;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v21, &demangling cache variable for type metadata for (offset: Int, element: CallControlsPreCallButtonViewModel));
      v2 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v2 = v22;
      }
      v9 = *(_QWORD *)(v2 + 16);
      if (v9 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v2 = v22;
      }
      ++v4;
      *(_QWORD *)(v2 + 16) = v9 + 1;
      v10 = v2 + 56 * v9;
      v11 = v15;
      v12 = v16;
      v13 = v17;
      *(_QWORD *)(v10 + 80) = v18;
      *(_OWORD *)(v10 + 48) = v12;
      *(_OWORD *)(v10 + 64) = v13;
      *(_OWORD *)(v10 + 32) = v11;
      v5 += 40;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t PreCallButtonsView.viewModel.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  Bindable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for PreCallButtonsView.viewModel : PreCallButtonsView()
{
  swift_retain();
  return PreCallButtonsView.viewModel.setter();
}

uint64_t PreCallButtonsView.viewModel.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  return Bindable.wrappedValue.setter();
}

void (*PreCallButtonsView.viewModel.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  v2[4] = Bindable.wrappedValue.modify();
  return CallControlsMenuView.viewModel.modify;
}

uint64_t PreCallButtonsView.$viewModel.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  return Bindable.projectedValue.getter();
}

uint64_t PreCallButtonsView.init(service:viewModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  __int128 v11[2];

  type metadata accessor for PreCallButtonsViewModel();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel, (void (*)(uint64_t))type metadata accessor for PreCallButtonsViewModel);
  swift_retain();
  Bindable<A>.init(wrappedValue:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CallControlsPreCallButtonViewModel>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  v5 = type metadata accessor for CancelConfirmationViewModel();
  swift_allocObject();
  v6 = CancelConfirmationViewModel.init()();
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 64) = &protocol witness table for CancelConfirmationViewModel;
  *(_QWORD *)(inited + 32) = v6;
  outlined init with copy of RadarReporting(a1, (uint64_t)v11);
  v7 = type metadata accessor for DialButtonViewModel();
  swift_allocObject();
  v8 = DialButtonViewModel.init(service:)(v11);
  *(_QWORD *)(inited + 96) = v7;
  *(_QWORD *)(inited + 104) = &protocol witness table for DialButtonViewModel;
  *(_QWORD *)(inited + 72) = v8;
  v9 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit015CallControlsPreH15ButtonViewModel_pGG_AH0jhlM6Holder33_801AF6C8C7AF9F90D2770D7757FA6A2ELLVs5NeverOTg506_sSi15f6Kit015hij3C15klm22_pAA0ecgH6Holder33_801opqrstuvw38ELLVIgynr_Si6offset_AaB_p7elementtAEs5X181OIegnrzr_TR04_s15a5Kit18ec7Buttonsg14V7service9viewh66AcA0cD21ConfirmationServicing_p_AA0cdefI0CtcfcAA0cdfI6Holder33_801jklmnopqR40ELLVSi_AA0d8Controlscd6ButtonfI0_ptXEfU_Tf3nnnpf_nTf1cn_n(inited);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  result = OUTLINED_FUNCTION_6_52();
  *(_QWORD *)(a2 + *(int *)(result + 20)) = v9;
  return result;
}

void PreCallButtonsView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;

  v6 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v16 = v15 - v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout>, _PaddingLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_77();
  v21 = v20 - v19;
  *(_QWORD *)v11 = static VerticalAlignment.top.getter();
  *(_QWORD *)(v11 + 8) = 0x4034000000000000;
  *(_BYTE *)(v11 + 16) = 0;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>);
  closure #1 in PreCallButtonsView.body.getter(v6, v11 + *(int *)(v22 + 44));
  v23 = static Edge.Set.top.getter();
  v24 = static Edge.Set.bottom.getter();
  v25 = MEMORY[0x1C3B71FFC](0);
  v26 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v26 & v23) != v23)
    v25 = MEMORY[0x1C3B71FFC](v25 | v23);
  v27 = MEMORY[0x1C3B71FFC](v25);
  if (MEMORY[0x1C3B71FFC](v27 & v24) != v24)
    LOBYTE(v25) = MEMORY[0x1C3B71FFC](v25 | v24);
  EdgeInsets.init(_all:)();
  OUTLINED_FUNCTION_89();
  outlined init with copy of Participant.ScreenInfo?(v11, v16, &demangling cache variable for type metadata for HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>);
  v28 = v16 + *(int *)(v12 + 36);
  *(_BYTE *)v28 = v25;
  *(_QWORD *)(v28 + 8) = v2;
  *(_QWORD *)(v28 + 16) = v3;
  *(_QWORD *)(v28 + 24) = v4;
  *(_QWORD *)(v28 + 32) = v5;
  *(_BYTE *)(v28 + 40) = 0;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v11, &demangling cache variable for type metadata for HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>);
  v29 = static Edge.Set.leading.getter();
  v30 = static Edge.Set.trailing.getter();
  v31 = MEMORY[0x1C3B71FFC](0);
  v32 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v32 & v29) != v29)
    v31 = MEMORY[0x1C3B71FFC](v31 | v29);
  v33 = MEMORY[0x1C3B71FFC](v31);
  if (MEMORY[0x1C3B71FFC](v33 & v30) != v30)
    LOBYTE(v31) = MEMORY[0x1C3B71FFC](v31 | v30);
  EdgeInsets.init(_all:)();
  OUTLINED_FUNCTION_89();
  outlined init with copy of Participant.ScreenInfo?(v16, v21, &demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout>);
  v34 = v21 + *(int *)(v17 + 36);
  *(_BYTE *)v34 = v31;
  *(_QWORD *)(v34 + 8) = v2;
  *(_QWORD *)(v34 + 16) = v3;
  *(_QWORD *)(v34 + 24) = v4;
  *(_QWORD *)(v34 + 32) = v5;
  *(_BYTE *)(v34 + 40) = 0;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v16, &demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout>);
  outlined init with take of Participant.VideoInfo?(v21, a1, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout>, _PaddingLayout>);
}

uint64_t closure #1 in PreCallButtonsView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)();
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;

  v4 = type metadata accessor for PreCallButtonsView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>);
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  MEMORY[0x1E0C80A78](v7);
  v25 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>);
  MEMORY[0x1E0C80A78](v28);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  Bindable.wrappedValue.getter();
  PreCallButtonsViewModel.contextSubject.getter();
  CurrentValueSubject.value.getter();
  swift_release();
  swift_release();
  v11 = v30;
  if (v30 == 255)
  {
    v12 = 1;
    v13 = v28;
  }
  else
  {
    v24 = a2;
    v14 = v29;
    v29 = *(_QWORD *)(a1 + *(int *)(v4 + 20));
    _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for PreCallButtonsView);
    v15 = (*(unsigned __int8 *)(v5 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v14;
    a2 = v24;
    *(_BYTE *)(v16 + 24) = v11 & 1;
    outlined init with take of PreCallButtonsView((uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PreCallViewModelHolder]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [PreCallViewModelHolder] and conformance [A], &demangling cache variable for type metadata for [PreCallViewModelHolder]);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>? and conformance <A> A?();
    lazy protocol witness table accessor for type PreCallViewModelHolder and conformance PreCallViewModelHolder();
    v17 = v25;
    ForEach<>.init(_:content:)();
    v19 = v26;
    v18 = v27;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v10, v17, v27);
    v20 = v28;
    v21 = (uint64_t (**)())&v10[*(int *)(v28 + 36)];
    *v21 = closure #2 in closure #1 in CallControlsMenuView.body.getter;
    v21[1] = 0;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    outlined init with take of Participant.VideoInfo?((uint64_t)v10, a2, &demangling cache variable for type metadata for ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>);
    v12 = 0;
    v13 = v20;
  }
  return __swift_storeEnumTagSinglePayload(a2, v12, 1, v13);
}

void closure #1 in closure #1 in PreCallButtonsView.body.getter(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1;
  v15 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  Bindable.wrappedValue.getter();
  v9 = PreCallButtonsViewModel.preCallDelegate.getter();
  v11 = v10;
  swift_release();
  if (v9)
    v12 = v11;
  else
    v12 = 0;
  PreCallViewModelHolder.build(_:preCallDelegate:)(&v14, v9, v12, (uint64_t)v8);
  swift_unknownObjectRelease();
  outlined init with take of Participant.VideoInfo?((uint64_t)v8, a3, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?);
}

uint64_t PreCallViewModelHolder.build(_:preCallDelegate:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t (*v30)();
  uint64_t v31;
  uint64_t (**v32)();
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;

  v40 = a3;
  v42 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>);
  MEMORY[0x1E0C80A78](v7);
  v41 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>);
  MEMORY[0x1E0C80A78](v39);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>);
  MEMORY[0x1E0C80A78](v43);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = *((_BYTE *)a1 + 8);
  v15 = (_QWORD *)swift_allocObject();
  outlined init with copy of RadarReporting(v4 + 16, (uint64_t)(v15 + 2));
  outlined init with copy of RadarReporting((uint64_t)(v15 + 2), (uint64_t)v46);
  v17 = v47;
  v16 = v48;
  __swift_project_boxed_opaque_existential_1(v46, v47);
  v44 = v13;
  v45 = v14;
  LOBYTE(v16) = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 40))(&v44, v17, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  if ((v16 & 1) != 0)
  {
    v18 = v15[5];
    v19 = v15[6];
    v20 = __swift_project_boxed_opaque_existential_1(v15 + 2, v18);
    v37 = (uint64_t)&v37;
    v38 = a4;
    v21 = *(_QWORD *)(v18 - 8);
    MEMORY[0x1E0C80A78](v20);
    v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v21 + 16))(v23);
    v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v19 + 8) + 8))(v18);
    v26 = v25;
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v18);
    v29 = (uint64_t)v41;
    CallControlsType.controlView()(v24, v26, v28);
    outlined consume of CallControlsType(v24, v26, v28);
    v30 = (uint64_t (*)())swift_allocObject();
    v31 = v42;
    *((_QWORD *)v30 + 2) = v15;
    *((_QWORD *)v30 + 3) = v31;
    *((_QWORD *)v30 + 4) = v40;
    outlined init with copy of Participant.ScreenInfo?(v29, (uint64_t)v10, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>);
    v32 = (uint64_t (**)())&v10[*(int *)(v39 + 36)];
    *v32 = partial apply for closure #1 in PreCallViewModelHolder.build(_:preCallDelegate:);
    v32[1] = v30;
    v32[2] = 0;
    v32[3] = 0;
    swift_unknownObjectRetain();
    swift_retain();
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v29, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>);
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v10, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>);
    v33 = v43;
    v34 = &v12[*(int *)(v43 + 36)];
    *(_QWORD *)v34 = 0;
    *((_QWORD *)v34 + 1) = 0;
    *((_QWORD *)v34 + 2) = partial apply for closure #2 in PreCallViewModelHolder.build(_:preCallDelegate:);
    *((_QWORD *)v34 + 3) = v15;
    swift_retain();
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>);
    v35 = v38;
    outlined init with take of Participant.VideoInfo?((uint64_t)v12, v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>);
    __swift_storeEnumTagSinglePayload(v35, 0, 1, v33);
    return swift_release();
  }
  else
  {
    swift_release();
    return __swift_storeEnumTagSinglePayload(a4, 1, 1, v43);
  }
}

uint64_t sub_1BD1A73E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  *(_QWORD *)(v3 - 136) = 0;
  *(_QWORD *)(v3 - 128) = 0;
  *(_QWORD *)(v3 - 144) = v2;
  *(_BYTE *)(v3 - 120) = 1;
  outlined copy of CallControlsType(v2, v1, 0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButton<()>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconButton<()> and conformance IconButton<A>, &demangling cache variable for type metadata for IconButton<()>);
  _ConditionalContent<>.init(storage:)();
  v4 = *(_QWORD *)(v3 - 96);
  v5 = *(_BYTE *)(v3 - 88);
  *(_OWORD *)v0 = *(_OWORD *)(v3 - 112);
  *(_QWORD *)(v0 + 16) = v4;
  *(_BYTE *)(v0 + 24) = v5;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<AnyView, IconButton<()>>);
  lazy protocol witness table accessor for type _ConditionalContent<AnyView, IconButton<()>> and conformance <> _ConditionalContent<A, B>();
  lazy protocol witness table accessor for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>> and conformance <> _ConditionalContent<A, B>();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t closure #1 in PreCallViewModelHolder.build(_:preCallDelegate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v5 = a1 + 16;
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v7);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24);
  v9 = swift_unknownObjectRetain();
  v8(v9, a3, v7, v6);
  swift_endAccess();
  swift_beginAccess();
  outlined init with copy of RadarReporting(v5, (uint64_t)v13);
  v10 = v14;
  v11 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(uint64_t))(*(_QWORD *)(v11 + 8) + 16))(v10);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t closure #2 in PreCallViewModelHolder.build(_:preCallDelegate:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  v1 = a1 + 16;
  swift_beginAccess();
  outlined init with copy of RadarReporting(v1, (uint64_t)v5);
  v2 = v6;
  v3 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 24))(v2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t type metadata accessor for PreCallButtonsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for PreCallButtonsView;
  if (!type metadata singleton initialization cache for PreCallButtonsView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in PreCallButtonsView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BD1A79E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PreCallButtonsView.viewModel.getter();
  *a1 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PreCallButtonsView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PreCallButtonsView(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PreCallButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PreCallButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PreCallButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for PreCallButtonsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreCallButtonsView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1A7C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PreCallButtonsView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1A7D14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void type metadata completion function for PreCallButtonsView()
{
  unint64_t v0;

  type metadata accessor for Bindable<PreCallButtonsViewModel>();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for Bindable<PreCallButtonsViewModel>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Bindable<PreCallButtonsViewModel>)
  {
    type metadata accessor for PreCallButtonsViewModel();
    v0 = type metadata accessor for Bindable();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  }
}

uint64_t sub_1BD1A7E54()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CD9758]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<ModifiedContent<ForEach<[PreCallViewModelHolder], String, ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?>, _TransactionModifier>?>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

ValueMetadata *type metadata accessor for PreCallViewModelHolder()
{
  return &type metadata for PreCallViewModelHolder;
}

uint64_t sub_1BD1A7F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_6_52() - 8) + 80);
  v2 = (v1 + 25) & ~v1;
  outlined consume of PreCallControlsContext(*(id *)(v0 + 16));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<PreCallButtonsViewModel>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t outlined init with take of PreCallButtonsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreCallButtonsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void partial apply for closure #1 in closure #1 in PreCallButtonsView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_6_52();
  closure #1 in closure #1 in PreCallButtonsView.body.getter(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>?);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>, lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, MEMORY[0x1E0CDC8B0]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, _AppearanceActionModifier>? and conformance <A> A?);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PlaceholderContentView<ModalOverlayTransition>, _OpacityEffect>, _BlurEffect>, _ScaleEffect> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>, _AppearanceActionModifier>, (uint64_t (*)(void))lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>> and conformance <> _ConditionalContent<A, B>, MEMORY[0x1E0CDC8B0]);
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>>);
    v2[0] = lazy protocol witness table accessor for type _ConditionalContent<AnyView, IconButton<()>> and conformance <> _ConditionalContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>> and conformance <> _ConditionalContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<AnyView, IconButton<()>>, _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconButton<Bool> and conformance IconButton<A>, &demangling cache variable for type metadata for IconButton<Bool>);
    v3[0] = v2;
    v3[1] = lazy protocol witness table accessor for type ModifiedContent<CallControlTextButton, _OffsetEffect> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<IconButton<Bool>, ModifiedContent<CallControlTextButton, _OffsetEffect>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<CallControlTextButton, _OffsetEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<CallControlTextButton, _OffsetEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<CallControlTextButton, _OffsetEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<CallControlTextButton, _OffsetEffect>);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlTextButton and conformance CallControlTextButton, (void (*)(uint64_t))type metadata accessor for CallControlTextButton);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD90E0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<CallControlTextButton, _OffsetEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PreCallViewModelHolder and conformance PreCallViewModelHolder()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PreCallViewModelHolder and conformance PreCallViewModelHolder;
  if (!lazy protocol witness table cache variable for type PreCallViewModelHolder and conformance PreCallViewModelHolder)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PreCallViewModelHolder, &type metadata for PreCallViewModelHolder);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PreCallViewModelHolder and conformance PreCallViewModelHolder);
  }
  return result;
}

uint64_t sub_1BD1A829C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BD1A82C0()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PreCallViewModelHolder.build(_:preCallDelegate:)()
{
  uint64_t *v0;

  return closure #1 in PreCallViewModelHolder.build(_:preCallDelegate:)(v0[2], v0[3], v0[4]);
}

uint64_t partial apply for closure #2 in PreCallViewModelHolder.build(_:preCallDelegate:)()
{
  uint64_t v0;

  return closure #2 in PreCallViewModelHolder.build(_:preCallDelegate:)(v0);
}

void *ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:accessibilityLabel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v9;
  void *v10;
  id v11;

  ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)();
  v10 = v9;
  v11 = v9;
  outlined bridged method (mbgnn) of @objc NSObject.accessibilityLabel.setter(a6, a7, v11);

  return v10;
}

uint64_t static ConversationControlsAction.rejectCall(controlsManager:)@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return static ConversationControlsAction.rejectCall(controlsManager:)(a1, a2);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270))();
  v4 = OUTLINED_FUNCTION_133_0(*a1);
  if (v4)
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  v5 = OUTLINED_FUNCTION_318();
  *a2 = ConversationControlsAction.CallButtonStyle.init(_:conversation:)(v5, v6, v7);
  OUTLINED_FUNCTION_49_21();
  return swift_storeEnumTagMultiPayload();
}

uint64_t specialized _arrayForceCast<A, B>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;

  OUTLINED_FUNCTION_104_3();
  if (v2)
  {
    OUTLINED_FUNCTION_17_20();
    OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_2_23();
  }
  else
  {
    OUTLINED_FUNCTION_103_1();
  }
  result = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    result = specialized ContiguousArray.reserveCapacity(_:)();
    if (v1 < 0)
    {
      __break(1u);
    }
    else
    {
      v4 = 0;
      do
      {
        if ((v0 & 0xC000000000000001) != 0)
          OUTLINED_FUNCTION_43_5();
        ++v4;
        v6 = OUTLINED_FUNCTION_41_4();
        OUTLINED_FUNCTION_96_4();
        v5 = v6;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSLayoutConstraint?);
        OUTLINED_FUNCTION_118_0();

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v1 != v4);
      return v7;
    }
  }
  return result;
}

uint64_t specialized _arrayForceCast<A, B>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v2 = v8;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_118_0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_87_4();
        v2 = v8;
      }
      v5 = *(_QWORD *)(v2 + 16);
      if (v5 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        OUTLINED_FUNCTION_87_4();
        v2 = v8;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v5 + 1;
      outlined init with take of Any(&v7, (_OWORD *)(v2 + 32 * v5 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

void static ConversationControlsAction.primaryCallAction(controlsManager:location:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unsigned __int8 (*v14)(uint64_t);
  uint64_t v15;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAction?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v3 = OUTLINED_FUNCTION_49_21();
  OUTLINED_FUNCTION_1_1();
  v5 = MEMORY[0x1E0C80A78](v4);
  v6 = MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_101_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - v8;
  ConversationControlsManager.isOneToOneConversation.getter();
  *v9 = v10 & 1;
  v15 = v3;
  v11 = swift_storeEnumTagMultiPayload();
  v14 = *(unsigned __int8 (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x840);
  v12 = (char *)&loc_1BD1A8C74 + dword_1BD1A90B4[v14(v11) >> 5];
  __asm { BR              X10 }
}

void sub_1BD1A8C84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v8 = (void *)OUTLINED_FUNCTION_133_0(*v0);
  if (v8)
  {
    v10 = v8;
    v11 = objc_msgSend(v8, sel_localParticipantAssociation);

    if (v11)
    {
      v12 = objc_msgSend(v10, sel_state);

      if (v12 == (id)1)
      {
        if ((v5 & 1) != 0)
          goto LABEL_9;
LABEL_8:
        OUTLINED_FUNCTION_127_0(v2, v9, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
        goto LABEL_10;
      }
    }
    else
    {

    }
  }
  if ((v5 & 1) == 0)
    goto LABEL_8;
LABEL_9:
  OUTLINED_FUNCTION_143_2();
  swift_storeEnumTagMultiPayload();
LABEL_10:
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v13 = type metadata accessor for Logger();
  __swift_project_value_buffer(v13, (uint64_t)&static Logger.conversationControls);
  v14 = v0;
  v15 = Logger.logObject.getter();
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_QWORD *)(v7 - 176) = v18;
    *(_QWORD *)(v7 - 104) = v18;
    *(_DWORD *)v17 = 136315650;
    v19 = (void *)(*(uint64_t (**)(void))((*v3 & *v14) + 0x290))();
    *(_QWORD *)(v7 - 168) = v6;
    *(_QWORD *)(v7 - 160) = v4;
    if (v19)
    {
      v20 = v19;
      v21 = objc_msgSend(v19, sel_state);

      *(_QWORD *)(v7 - 128) = v21;
      type metadata accessor for TUConversationState(0);
      v22 = String.init<A>(reflecting:)();
      v24 = v23;
    }
    else
    {
      v24 = 0xE300000000000000;
      v22 = 7104878;
    }
    *(_QWORD *)(v7 - 128) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v24, (uint64_t *)(v7 - 104));
    OUTLINED_FUNCTION_130_1();

    v25 = OUTLINED_FUNCTION_27();
    *(_WORD *)(v17 + 12) = 2080;
    *(_BYTE *)(v7 - 128) = (*(uint64_t (**)(uint64_t))(v7 - 152))(v25);
    v26 = String.init<A>(reflecting:)();
    *(_QWORD *)(v7 - 128) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, (uint64_t *)(v7 - 104));
    OUTLINED_FUNCTION_130_1();

    OUTLINED_FUNCTION_27();
    *(_WORD *)(v17 + 22) = 2080;
    OUTLINED_FUNCTION_111_3();
    v28 = *(_QWORD *)(v7 - 168);
    outlined init with copy of ConversationControlsAction(v1, v28, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
    __swift_storeEnumTagSinglePayload(v28, 0, 1, *(_QWORD *)(v7 - 144));
    specialized >> prefix<A>(_:)(v28);
    v30 = v29;
    v32 = v31;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v28, &demangling cache variable for type metadata for ConversationControlsAction?);
    *(_QWORD *)(v7 - 136) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v32, (uint64_t *)(v7 - 104));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v15, v16, "ConversationControlsAction: conversationState:%s, controlsMode:%s, primaryCallAction:%s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  outlined destroy of AccountUpdateNotice(v2, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  OUTLINED_FUNCTION_111_3();
  outlined init with copy of ConversationControlsAction(v1, v4, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  outlined destroy of AccountUpdateNotice(v1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  OUTLINED_FUNCTION_52_1();
}

void *ConversationControlsAction.ButtonOptions.prefersPill.unsafeMutableAddressor()
{
  return &static ConversationControlsAction.ButtonOptions.prefersPill;
}

void *ConversationControlsAction.ButtonOptions.prefersMediumSize.unsafeMutableAddressor()
{
  return &static ConversationControlsAction.ButtonOptions.prefersMediumSize;
}

void ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t countAndFlagsBits;
  int v25;
  uint64_t v26;
  void *object;
  uint64_t v28;
  Swift::tuple_String_optional_String v29;

  OUTLINED_FUNCTION_93();
  v21 = v2;
  v22 = v1;
  v25 = v3;
  v23 = v4;
  v28 = v5;
  v6 = OUTLINED_FUNCTION_33_0();
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  v7 = *(_QWORD *)(v19 + 64);
  v8 = MEMORY[0x1E0C80A78](v6);
  v17 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v18 = (char *)&v15 - v9;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_49_21();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_101_1();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v15 - v12;
  v29 = ConversationControlsAction.displayStrings()();
  countAndFlagsBits = v29._0.value._countAndFlagsBits;
  v26 = v29._1._countAndFlagsBits;
  object = v29._1._object;
  OUTLINED_FUNCTION_141_0(v0, (uint64_t)v13);
  v14 = (char *)&loc_1BD1A9224 + dword_1BD1AB38C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1BD1A9234()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;

  OUTLINED_FUNCTION_131_1();
  OUTLINED_FUNCTION_4_66();
  v2 = OUTLINED_FUNCTION_3_69();
  OUTLINED_FUNCTION_116_1(v2);
  ControlsButtonProvider.title.setter(*(_QWORD *)(v0 + 72), v1);
  v3 = OUTLINED_FUNCTION_0_85();
  v4 = OUTLINED_FUNCTION_121_2(v3);
  OUTLINED_FUNCTION_142_0();
  v5 = v4;
  OUTLINED_FUNCTION_1_70();

  swift_release();
  OUTLINED_FUNCTION_52_1();
}

float ConversationControlsAction.widthPriority.getter()
{
  return 749.0;
}

float ConversationControlsAction.ccrPriority.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  int EnumCaseMultiPayload;
  BOOL v8;

  OUTLINED_FUNCTION_49_21();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77();
  v4 = v3 - v2;
  OUTLINED_FUNCTION_110_4(v0, v5, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
    v8 = EnumCaseMultiPayload == 9;
  else
    v8 = 1;
  if (v8)
    return 850.0;
  outlined destroy of AccountUpdateNotice(v4, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  return 750.0;
}

uint64_t static ConversationControlsAction.acceptAndDeclineCall(controlsManager:)@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return static ConversationControlsAction.rejectCall(controlsManager:)(a1, a2);
}

uint64_t static ConversationControlsAction.acceptCall(controlsManager:)@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return static ConversationControlsAction.rejectCall(controlsManager:)(a1, a2);
}

uint64_t *ConversationControlsAction.avLessLeaveConfirmationActions.unsafeMutableAddressor()
{
  if (one-time initialization token for avLessLeaveConfirmationActions != -1)
    swift_once();
  return &static ConversationControlsAction.avLessLeaveConfirmationActions;
}

uint64_t ControlsActionState.buttonEnabled.getter(char a1)
{
  return a1 & 1;
}

uint64_t ControlsActionState.buttonEnabled.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ControlsActionState.buttonEnabled.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ControlsActionState.stateEnabled.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t ControlsActionState.stateEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*ControlsActionState.stateEnabled.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t default argument 0 of ControlsActionState.init(buttonEnabled:stateEnabled:)()
{
  return 1;
}

ConversationKit::ControlsActionState __swiftcall ControlsActionState.init(buttonEnabled:stateEnabled:)(Swift::Bool buttonEnabled, Swift::Bool stateEnabled)
{
  __int16 v2;

  if (stateEnabled)
    v2 = 256;
  else
    v2 = 0;
  return (ConversationKit::ControlsActionState)(v2 & 0xFFFE | buttonEnabled);
}

uint64_t ShareMenuActionState.buttonEnabled.getter(char a1)
{
  return a1 & 1;
}

uint64_t ShareMenuActionState.buttonEnabled.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ShareMenuActionState.buttonEnabled.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareMenuActionState.screenSharingEnabled.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t ShareMenuActionState.screenSharingEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*ShareMenuActionState.screenSharingEnabled.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareMenuActionState.screenSharingCountdownTime.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ShareMenuActionState.screenSharingCountdownTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*ShareMenuActionState.screenSharingCountdownTime.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareMenuActionState.joinedSharePlayActivity.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

uint64_t ShareMenuActionState.joinedSharePlayActivity.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*ShareMenuActionState.joinedSharePlayActivity.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareMenuActionState.description.getter(__int16 a1, uint64_t a2, __int16 a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
    v5 = 1702195828;
  else
    v5 = 0x65736C6166;
  if ((a1 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  OUTLINED_FUNCTION_53();
  v8._object = (void *)0x80000001BD679430;
  v8._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v8);
  if ((a1 & 0x100) != 0)
    v9 = 1702195828;
  else
    v9 = 0x65736C6166;
  if ((a1 & 0x100) != 0)
    v10 = 0xE400000000000000;
  else
    v10 = 0xE500000000000000;
  v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  OUTLINED_FUNCTION_2_1();
  v12._countAndFlagsBits = 0x506572616873202CLL;
  v12._object = (void *)0xEF3A676E6979616CLL;
  String.append(_:)(v12);
  if ((a3 & 0x100) != 0)
    v13 = 1702195828;
  else
    v13 = 0x65736C6166;
  if ((a3 & 0x100) != 0)
    v14 = 0xE400000000000000;
  else
    v14 = 0xE500000000000000;
  v15 = v14;
  String.append(_:)(*(Swift::String *)&v13);
  OUTLINED_FUNCTION_13_3();
  return 0x3A64656C62616E65;
}

uint64_t static ShareMenuActionState.== infix(_:_:)(int a1, uint64_t a2, __int16 a3, int a4, uint64_t a5, __int16 a6)
{
  uint64_t result;
  unsigned int v8;

  result = 0;
  v8 = a1 ^ a4;
  if ((v8 & 1) == 0 && ((v8 >> 8) & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      if ((a6 & 1) == 0)
        return OUTLINED_FUNCTION_3_13();
    }
    else
    {
      result = 0;
      if ((a6 & 1) != 0 || a2 != a5)
        return result;
    }
    return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
  }
  return result;
}

ConversationKit::ShareMenuActionState __swiftcall ShareMenuActionState.init()()
{
  _BOOL8 v0;
  Swift::Int v1;
  __int16 v2;
  ConversationKit::ShareMenuActionState result;

  v0 = 0;
  v1 = 0;
  v2 = 1;
  result.screenSharingCountdownTime.value = v1;
  result.buttonEnabled = v0;
  result.screenSharingEnabled = BYTE1(v0);
  *(_DWORD *)result.gap2 = *(_DWORD *)((char *)&v0 + 2);
  *(_WORD *)&result.gap2[4] = HIWORD(v0);
  *(_WORD *)&result.screenSharingCountdownTime.is_nil = v2;
  return result;
}

ConversationKit::ShareMenuActionState __swiftcall ShareMenuActionState.init(buttonEnabled:screenSharingEnabled:screenSharingCountdownTime:joinedSharePlayActivity:)(Swift::Bool buttonEnabled, Swift::Bool screenSharingEnabled, Swift::Int_optional screenSharingCountdownTime, Swift::Bool joinedSharePlayActivity)
{
  Swift::Int value;
  int v5;
  uint64_t v6;
  __int16 v7;
  _BOOL8 v8;
  Swift::Int v9;
  ConversationKit::ShareMenuActionState result;

  value = screenSharingCountdownTime.value;
  if (screenSharingEnabled)
    v5 = 256;
  else
    v5 = 0;
  v6 = v5 & 0xFFFFFFFE | buttonEnabled;
  if (joinedSharePlayActivity)
    LOWORD(screenSharingCountdownTime.value) = 256;
  else
    LOWORD(screenSharingCountdownTime.value) = 0;
  v7 = screenSharingCountdownTime.value & 0xFFFE | screenSharingCountdownTime.is_nil;
  v8 = v6;
  v9 = value;
  result.screenSharingCountdownTime.value = v9;
  result.buttonEnabled = v8;
  result.screenSharingEnabled = BYTE1(v8);
  *(_DWORD *)result.gap2 = *(_DWORD *)((char *)&v8 + 2);
  *(_WORD *)&result.gap2[4] = HIWORD(v8);
  *(_WORD *)&result.screenSharingCountdownTime.is_nil = v7;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ShareMenuActionState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  __int16 v3;
  int v4;
  int v5;
  int v6;
  __int16 v7;
  __int16 v8;
  int v9;
  int v10;
  __int16 v11;

  v2 = *((_QWORD *)a1 + 1);
  v3 = a1[16];
  v4 = a1[17];
  if (a1[1])
    v5 = 256;
  else
    v5 = 0;
  v6 = v5 | *a1;
  if (v4)
    v7 = 256;
  else
    v7 = 0;
  v8 = v7 | v3;
  if (a2[1])
    v9 = 256;
  else
    v9 = 0;
  v10 = v9 | *a2;
  if (a2[17])
    v11 = 256;
  else
    v11 = 0;
  return static ShareMenuActionState.== infix(_:_:)(v6, v2, v8, v10, *((_QWORD *)a2 + 1), v11 | a2[16]);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ShareMenuActionState(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  __int16 v3;
  __int16 v4;

  if (v2[1])
    v3 = 256;
  else
    v3 = 0;
  if (v2[17])
    v4 = 256;
  else
    v4 = 0;
  return ShareMenuActionState.description.getter(v3 | *v2, a2, v4 | v2[16]);
}

uint64_t static ConversationControlsAction.ButtonOptions.prefersPill.getter()
{
  return 1;
}

uint64_t static ConversationControlsAction.ButtonOptions.prefersMediumSize.getter()
{
  return 2;
}

BOOL protocol witness for SetAlgebra.contains(_:) in conformance ConversationControlsAction.ButtonOptions(uint64_t *a1)
{
  uint64_t *v1;

  return specialized SetAlgebra.isSuperset(of:)(*a1, *v1);
}

void protocol witness for SetAlgebra.intersection(_:) in conformance ConversationControlsAction.ButtonOptions(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = specialized OptionSet.intersection(_:)(*a1);
  OUTLINED_FUNCTION_0();
}

void protocol witness for SetAlgebra.symmetricDifference(_:) in conformance ConversationControlsAction.ButtonOptions(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = specialized OptionSet.symmetricDifference(_:)(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for SetAlgebra.insert(_:) in conformance ConversationControlsAction.ButtonOptions(_QWORD *a1, uint64_t *a2)
{
  return specialized OptionSet<>.insert(_:)(a1, *a2);
}

uint64_t protocol witness for SetAlgebra.remove(_:) in conformance ConversationControlsAction.ButtonOptions@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = specialized OptionSet<>.remove(_:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for SetAlgebra.update(with:) in conformance ConversationControlsAction.ButtonOptions@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = specialized OptionSet<>.update(with:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for SetAlgebra.formUnion(_:) in conformance ConversationControlsAction.ButtonOptions(uint64_t *a1)
{
  return specialized OptionSet<>.formUnion(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.formIntersection(_:) in conformance ConversationControlsAction.ButtonOptions(uint64_t *a1)
{
  return specialized OptionSet<>.formIntersection(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.formSymmetricDifference(_:) in conformance ConversationControlsAction.ButtonOptions(uint64_t *a1)
{
  return specialized OptionSet<>.formSymmetricDifference(_:)(*a1);
}

uint64_t protocol witness for SetAlgebra.subtracting(_:) in conformance ConversationControlsAction.ButtonOptions@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = specialized SetAlgebra.subtracting(_:)(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL protocol witness for SetAlgebra.isSubset(of:) in conformance ConversationControlsAction.ButtonOptions(uint64_t *a1)
{
  uint64_t *v1;

  return specialized SetAlgebra.isSubset(of:)(*a1, *v1);
}

BOOL specialized SetAlgebra.isSubset(of:)(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL specialized SetAlgebra.isSubset(of:)(int a1, int a2)
{
  return (a2 & ~a1) == 0;
}

BOOL protocol witness for SetAlgebra.isDisjoint(with:) in conformance ConversationControlsAction.ButtonOptions(uint64_t *a1)
{
  uint64_t *v1;

  return specialized SetAlgebra.isDisjoint(with:)(*a1, *v1);
}

BOOL specialized SetAlgebra.isSuperset(of:)(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL specialized SetAlgebra.isSuperset(of:)(int a1, int a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t protocol witness for SetAlgebra.subtract(_:) in conformance ConversationControlsAction.ButtonOptions(uint64_t *a1)
{
  return specialized SetAlgebra.subtract(_:)(*a1);
}

uint64_t ConversationControlsAction.CallButtonStyle.init(_:conversation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  _QWORD v22[4];

  ObjectType = swift_getObjectType();
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 160))(ObjectType, a2);
  v7 = objc_msgSend(v6, sel_isFaceTimeProvider);

  if (v7)
  {
    outlined init with copy of Conversation?(a3, (uint64_t)&v20);
    if (v21)
    {
      outlined init with take of Notice(&v20, (uint64_t)v22);
      __swift_project_boxed_opaque_existential_1(v22, v22[3]);
      v8 = OUTLINED_FUNCTION_318();
      v10 = v9(v8);
      v11 = OUTLINED_FUNCTION_113();
      v12 = v10 == 2;
      OUTLINED_FUNCTION_96_3(v11, &demangling cache variable for type metadata for Conversation?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      return v12;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v20, &demangling cache variable for type metadata for Conversation?);
  }
  v13 = (void *)OUTLINED_FUNCTION_107_5();
  v14 = objc_msgSend(v13, sel_isFaceTimeProvider);

  if (v14 && ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 128))(ObjectType, a2) & 1) != 0)
  {
    v15 = OUTLINED_FUNCTION_113();
    OUTLINED_FUNCTION_96_3(v15, &demangling cache variable for type metadata for Conversation?);
    return 1;
  }
  else
  {
    v16 = (void *)OUTLINED_FUNCTION_107_5();
    v17 = objc_msgSend(v16, sel_isSystemProvider);
    OUTLINED_FUNCTION_113();

    OUTLINED_FUNCTION_96_3(v18, &demangling cache variable for type metadata for Conversation?);
    if (v17)
      return 0;
    else
      return 2;
  }
}

void ConversationControlsAction.CallButtonStyle.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

BOOL static ConversationControlsAction.CallButtonStyle.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ConversationControlsAction.CallButtonStyle.hashValue.getter(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(a1);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable.hashValue.getter in conformance ConversationControlsAction.CallButtonStyle()
{
  unsigned __int8 *v0;

  ConversationControlsAction.CallButtonStyle.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ConversationControlsAction.CallButtonStyle(uint64_t a1)
{
  unsigned __int8 *v1;

  ConversationControlsAction.CallButtonStyle.hash(into:)(a1, *v1);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ConversationControlsAction.CallButtonStyle(char *a1, char *a2)
{
  return static ConversationControlsAction.CallButtonStyle.== infix(_:_:)(*a1, *a2);
}

BOOL static ConversationControlsAction.Location.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void ConversationControlsAction.Location.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

void ConversationControlsAction.Location.hashValue.getter(char a1)
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(a1 & 1);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ConversationControlsAction.Location(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ConversationControlsAction.Location.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance ConversationControlsAction.Location()
{
  char *v0;

  ConversationControlsAction.Location.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ConversationControlsAction.Location(uint64_t a1)
{
  char *v1;

  ConversationControlsAction.Location.hash(into:)(a1, *v1);
}

uint64_t one-time initialization function for avLessLeaveConfirmationActions()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsAction>);
  OUTLINED_FUNCTION_49_21();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BD645380;
  swift_storeEnumTagMultiPayload();
  result = swift_storeEnumTagMultiPayload();
  static ConversationControlsAction.avLessLeaveConfirmationActions = v0;
  return result;
}

uint64_t static ConversationControlsAction.avLessLeaveConfirmationActions.getter()
{
  if (one-time initialization token for avLessLeaveConfirmationActions != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

Swift::tuple_String_optional_String __swiftcall ConversationControlsAction.displayStrings()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::tuple_String_optional_String result;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_49_21();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77();
  outlined init with copy of ConversationControlsAction(v0, v3 - v2, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v12 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_1BD1ABEF8 + 4 * word_1BD64E460[EnumCaseMultiPayload]))(EnumCaseMultiPayload, v6, v7, 0xE000000000000000, v8, v9, v10, v11, v16, v17, v18, v19);
  result._1._object = v15;
  result._1._countAndFlagsBits = v14;
  result._0.value._object = v13;
  result._0.value._countAndFlagsBits = v12;
  return result;
}

void sub_1BD1ABEF8()
{
  OUTLINED_FUNCTION_52_1();
}

void sub_1BD1AC5E4()
{
  OUTLINED_FUNCTION_63_14();
  JUMPOUT(0x1BD1AC53CLL);
}

void closure #1 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;

  v1 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = Strong + 16;
    swift_beginAccess();
    v4 = (void *)MEMORY[0x1C3B752C0](v3);
    swift_release();
    if (v4)
    {
      objc_msgSend(v4, sel_setEnabled_, v1);

    }
  }
}

_QWORD *closure #6 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  unsigned int (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  char *v12;
  char **v13;
  uint64_t v14;
  id v15;

  v4 = a3 + 16;
  swift_beginAccess();
  result = (_QWORD *)MEMORY[0x1C3B752C0](v4);
  if (result)
  {
    v6 = result;
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *result) + 0x270))();

    objc_opt_self();
    v7 = swift_dynamicCastObjCClass();
    if (v7)
    {
      v8 = v7;
      ObjectType = swift_getObjectType();
      v10 = *(unsigned int (**)(uint64_t, uint64_t))(a2 + 184);
      if (v10(ObjectType, a2) != 2)
      {
        if (v10(ObjectType, a2) != 1)
          return (_QWORD *)swift_unknownObjectRelease();
        swift_beginAccess();
        v14 = MEMORY[0x1C3B752C0](v4);
        if (!v14)
          return (_QWORD *)swift_unknownObjectRelease();
        v12 = (char *)v14;
        v13 = &selRef_endActiveAndAnswerCall_;
        goto LABEL_9;
      }
      swift_beginAccess();
      v11 = MEMORY[0x1C3B752C0](v4);
      if (v11)
      {
        v12 = (char *)v11;
        v13 = &selRef_endHeldAndAnswerCall_;
LABEL_9:
        v15 = *(id *)&v12[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter];

        objc_msgSend(v15, *v13, v8);
      }
    }
    return (_QWORD *)swift_unknownObjectRelease();
  }
  return result;
}

void static ConversationControlsAction.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD v29[9];
  uint64_t v30;

  OUTLINED_FUNCTION_93();
  v30 = v0;
  v2 = v1;
  v3 = OUTLINED_FUNCTION_33_0();
  v29[5] = *(_QWORD *)(v3 - 8);
  v29[6] = v3;
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_5_27();
  v29[1] = v4;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v5);
  v29[0] = (char *)v29 - v6;
  v7 = OUTLINED_FUNCTION_49_21();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_5_27();
  v29[2] = v9;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v10);
  v29[4] = (char *)v29 - v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  v29[3] = (char *)v29 - v13;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_101_1();
  MEMORY[0x1E0C80A78](v19);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ConversationControlsAction, ConversationControlsAction));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_77();
  v23 = v22 - v21;
  v25 = v23 + *(int *)(v24 + 48);
  v26 = v2;
  v27 = v23;
  outlined init with copy of ConversationControlsAction(v26, v23, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  v29[7] = v25;
  outlined init with copy of ConversationControlsAction(v30, v25, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  v29[8] = v7;
  v30 = v27;
  v28 = (char *)sub_1BD1ACA1C + 4 * word_1BD64E4D2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1BD1ACA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  outlined init with copy of ConversationControlsAction(*(_QWORD *)(v1 - 88), v0, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  v2 = OUTLINED_FUNCTION_26_29();
  if ((_DWORD)v2)
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(*(_QWORD *)(v1 - 88), &demangling cache variable for type metadata for (ConversationControlsAction, ConversationControlsAction));
  else
    OUTLINED_FUNCTION_81_10(v2, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  OUTLINED_FUNCTION_52_1();
}

void ConversationControlsAction.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;

  v1 = OUTLINED_FUNCTION_33_0();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_49_21();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  outlined init with copy of ConversationControlsAction(v0, v4 - v3, v5);
  v6 = (char *)sub_1BD1AD0AC + 4 * byte_1BD64E544[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1BD1AD0AC()
{
  Swift::UInt8 *v0;
  Swift::UInt8 v1;

  v1 = *v0;
  Hasher._combine(_:)(3uLL);
  Hasher._combine(_:)(v1);
}

void ConversationControlsAction.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  ConversationControlsAction.hash(into:)();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ConversationControlsAction()
{
  Hasher.init(_seed:)();
  ConversationControlsAction.hash(into:)();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t type metadata accessor for ConversationControlsAction()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ConversationControlsAction;
  if (!type metadata singleton initialization cache for ConversationControlsAction)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t outlined init with take of ConversationControlsAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConversationControlsAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD1AD400()
{
  uint64_t v0;

  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

id partial apply for closure #7 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_resumeCallButtonTapped);
}

uint64_t sub_1BD1AD42C()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

_QWORD *partial apply for closure #6 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return closure #6 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)(a1, a2, v2);
}

void partial apply for closure #4 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)(uint64_t a1)
{
  partial apply for closure #4 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)(a1, (void (*)(uint64_t))ConversationControlsManager.rejectAuthorizationRequest(for:));
}

uint64_t objectdestroy_5Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_33_0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void partial apply for closure #3 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)(uint64_t a1)
{
  partial apply for closure #4 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)(a1, (void (*)(uint64_t))ConversationControlsManager.approveAuthorizationRequest(for:));
}

void partial apply for closure #4 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8) + 80);
  a2(v2 + ((v4 + 24) & ~v4));
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #2 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)()
{
  uint64_t v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 16)) + 0x990))();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD1AD550()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)(unsigned __int8 *a1)
{
  closure #1 in ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)(a1);
}

unint64_t lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher;
  if (!lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Published<Bool>.Publisher);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions;
  if (!lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationControlsAction.ButtonOptions, &type metadata for ConversationControlsAction.ButtonOptions);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions;
  if (!lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationControlsAction.ButtonOptions, &type metadata for ConversationControlsAction.ButtonOptions);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions;
  if (!lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationControlsAction.ButtonOptions, &type metadata for ConversationControlsAction.ButtonOptions);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions;
  if (!lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationControlsAction.ButtonOptions, &type metadata for ConversationControlsAction.ButtonOptions);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsAction.ButtonOptions and conformance ConversationControlsAction.ButtonOptions);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ConversationControlsAction.CallButtonStyle and conformance ConversationControlsAction.CallButtonStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationControlsAction.CallButtonStyle and conformance ConversationControlsAction.CallButtonStyle;
  if (!lazy protocol witness table cache variable for type ConversationControlsAction.CallButtonStyle and conformance ConversationControlsAction.CallButtonStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationControlsAction.CallButtonStyle, &type metadata for ConversationControlsAction.CallButtonStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsAction.CallButtonStyle and conformance ConversationControlsAction.CallButtonStyle);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ConversationControlsAction.Location and conformance ConversationControlsAction.Location()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationControlsAction.Location and conformance ConversationControlsAction.Location;
  if (!lazy protocol witness table cache variable for type ConversationControlsAction.Location and conformance ConversationControlsAction.Location)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationControlsAction.Location, &type metadata for ConversationControlsAction.Location);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsAction.Location and conformance ConversationControlsAction.Location);
  }
  return result;
}

void base witness table accessor for Equatable in ConversationControlsAction()
{
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsAction and conformance ConversationControlsAction, (uint64_t (*)(uint64_t))type metadata accessor for ConversationControlsAction, (uint64_t)&protocol conformance descriptor for ConversationControlsAction);
}

uint64_t storeEnumTagSinglePayload for ControlsActionState(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD1AD7B0 + 4 * byte_1BD64E582[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1BD1AD7E4 + 4 * byte_1BD64E57D[v4]))();
}

uint64_t sub_1BD1AD7E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD1AD7EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BD1AD7F4);
  return result;
}

uint64_t sub_1BD1AD800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BD1AD808);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD1AD80C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD1AD814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

void type metadata accessor for ControlsActionState()
{
  OUTLINED_FUNCTION_34_0();
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ShareMenuActionState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[18])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareMenuActionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for ShareMenuActionState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ConversationControlsAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 8)
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 3 && EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v10 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ConversationControlsAction(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 8)
    return swift_bridgeObjectRelease();
  if ((_DWORD)result == 3 || (_DWORD)result == 2)
  {
    v3 = type metadata accessor for UUID();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *initializeWithCopy for ConversationControlsAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 8)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload != 3 && EnumCaseMultiPayload != 2)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v8 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for ConversationControlsAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 3 && EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = type metadata accessor for UUID();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for ConversationControlsAction(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ConversationControlsAction(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
    {
      v7 = type metadata accessor for UUID();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata completion function for ConversationControlsAction()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void type metadata accessor for ConversationControlsAction.ButtonOptions()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ConversationControlsAction.CallButtonStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD1ADECC + 4 * byte_1BD64E58C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD1ADF00 + 4 * byte_1BD64E587[v4]))();
}

uint64_t sub_1BD1ADF00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1ADF08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1ADF10);
  return result;
}

uint64_t sub_1BD1ADF1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1ADF24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD1ADF28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1ADF30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ConversationControlsAction.CallButtonStyle()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ConversationControlsAction.Location(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD1ADF94 + 4 * byte_1BD64E596[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD1ADFC8 + 4 * byte_1BD64E591[v4]))();
}

uint64_t sub_1BD1ADFC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1ADFD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1ADFD8);
  return result;
}

uint64_t sub_1BD1ADFE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1ADFECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD1ADFF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1ADFF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ConversationControlsAction.Location()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t OUTLINED_FUNCTION_85_7()
{
  uint64_t (*v0)(void);

  return v0();
}

void OUTLINED_FUNCTION_87_4()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t OUTLINED_FUNCTION_89_8()
{
  return 5;
}

uint64_t OUTLINED_FUNCTION_93_3()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_mutable_project_boxed_opaque_existential_1(v1 - 128, v0);
}

uint64_t OUTLINED_FUNCTION_102_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
  return 0;
}

uint64_t OUTLINED_FUNCTION_111_3()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_116_1(void *a1)
{
  uint64_t v1;

  ConversationControlsAppLaunchButtonProvider.init(controlsManager:context:)(a1, *(_DWORD *)(v1 + 84));
}

void OUTLINED_FUNCTION_117_5(void *a1)
{
  uint64_t v1;

  ConversationControlsTrailingActionButtonProvider.init(controlsManager:context:)(a1, *(_DWORD *)(v1 + 84));
}

id OUTLINED_FUNCTION_121_2(void *a1)
{
  return a1;
}

void OUTLINED_FUNCTION_127_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of ConversationControlsAction(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_130_1()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_131_1()
{
  return type metadata accessor for ConversationControlsAppLaunchButtonProvider();
}

id OUTLINED_FUNCTION_138_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PillButton.init(title:symbol:stateConfiguration:context:)(a1, a2, a3, a4, 0);
}

void OUTLINED_FUNCTION_141_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of ConversationControlsAction(a1, a2, v2);
}

void OUTLINED_FUNCTION_142_0()
{
  void *v0;
  uint64_t v1;

  ControlsButtonProvider.button.setter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_143_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_145()
{
  uint64_t v0;

  return outlined release of SymbolImageDescription(v0 + 160);
}

double OUTLINED_FUNCTION_147_1()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  return result;
}

id specialized Sequence.contains(where:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;

  if (a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_isConnected);

      if ((v7 & 1) == 0)
      {
        ++v3;
        if (v6 != v2)
          continue;
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  v7 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t TelephonyUtilitiesServices.screeningEnabled.getter()
{
  return TUCallScreeningEnabled();
}

uint64_t TelephonyUtilitiesServices.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_5_64() + 20);
  v4 = OUTLINED_FUNCTION_17_2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for TelephonyUtilitiesServices()
{
  uint64_t result;

  result = type metadata singleton initialization cache for TelephonyUtilitiesServices;
  if (!type metadata singleton initialization cache for TelephonyUtilitiesServices)
    return swift_getSingletonMetadata();
  return result;
}

void TelephonyUtilitiesServices.isAnsweringMachineAvailable.getter()
{
  OUTLINED_FUNCTION_5_64();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_0();
}

void TelephonyUtilitiesServices.timeToWaitForCall.getter()
{
  OUTLINED_FUNCTION_5_64();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_0();
}

uint64_t TelephonyUtilitiesServices.init(callCenter:logger:isAnsweringMachineAvailable:timeToWaitForCall:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  int *v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  _QWORD *v18;

  *a7 = a1;
  v13 = (int *)OUTLINED_FUNCTION_5_64();
  v14 = (char *)a7 + v13[5];
  v15 = OUTLINED_FUNCTION_17_2();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a2, v15);
  v17 = (_QWORD *)((char *)a7 + v13[6]);
  *v17 = a3;
  v17[1] = a4;
  v18 = (_QWORD *)((char *)a7 + v13[7]);
  *v18 = a5;
  v18[1] = a6;
  return result;
}

Swift::Void __swiftcall TelephonyUtilitiesServices.disconnectScreeningCall(callUUID:)(Swift::String callUUID)
{
  uint64_t v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  os_log_type_t v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _DWORD *v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_79();
  v11 = (v9 - v10);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v29 - v14;
  v16 = *v2;
  v17 = (void *)MEMORY[0x1C3B72E00](v6, v4, v13);
  v30 = OUTLINED_FUNCTION_4_5((uint64_t)v17, sel_callWithCallUUID_);

  if (v30)
  {
    if (objc_msgSend(v30, sel_isScreening))
    {
      objc_msgSend(v16, sel_disconnectCall_withReason_, v30, 36);
      OUTLINED_FUNCTION_17_41(v30);
      return;
    }
    v22 = OUTLINED_FUNCTION_5_64();
    OUTLINED_FUNCTION_24_34((uint64_t)v15, (uint64_t)v2 + *(int *)(v22 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_16_31();
    v23 = OUTLINED_FUNCTION_55_1();
    v24 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_23(v24))
    {
      v25 = (_DWORD *)OUTLINED_FUNCTION_105();
      v32 = OUTLINED_FUNCTION_105();
      *v25 = 136446466;
      v29 = v7;
      v31 = OUTLINED_FUNCTION_4_67(34, 0x80000001BD6797F0, &v32);
      OUTLINED_FUNCTION_3_70();
      OUTLINED_FUNCTION_32_26();
      v31 = OUTLINED_FUNCTION_15_53();
      OUTLINED_FUNCTION_3_70();
      OUTLINED_FUNCTION_11_11();
      OUTLINED_FUNCTION_6_54(&dword_1BD004000, v23, v26, "%{public}s: Call %{public}s is not in screening, refusing to disconnect.");
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    v28 = OUTLINED_FUNCTION_66_13();
  }
  else
  {
    v18 = type metadata accessor for TelephonyUtilitiesServices();
    OUTLINED_FUNCTION_24_34((uint64_t)v11, (uint64_t)v2 + *(int *)(v18 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_16_31();
    Logger.logObject.getter();
    v19 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_41_3(v19))
    {
      v20 = (_DWORD *)OUTLINED_FUNCTION_105();
      v32 = OUTLINED_FUNCTION_105();
      *v20 = 136446466;
      v29 = v7;
      v31 = OUTLINED_FUNCTION_4_67(34, 0x80000001BD6797F0, &v32);
      OUTLINED_FUNCTION_3_70();
      OUTLINED_FUNCTION_32_26();
      v31 = OUTLINED_FUNCTION_15_53();
      OUTLINED_FUNCTION_3_70();
      OUTLINED_FUNCTION_11_11();
      OUTLINED_FUNCTION_6_54(&dword_1BD004000, v11, v21, "%{public}s: Call %{public}s no longer exists, cannot disconnect");
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    v27 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
    v28 = (uint64_t)v11;
  }
  v27(v28, v7);
  OUTLINED_FUNCTION_52_1();
}

Swift::Bool __swiftcall TelephonyUtilitiesServices.isScreenable(callUUID:manualScreening:)(Swift::String callUUID, Swift::Bool manualScreening)
{
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void **v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  NSObject *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  void (*v77)(char *);
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92[11];
  uint64_t v93;
  uint64_t v94;

  OUTLINED_FUNCTION_93();
  v93 = v5;
  v94 = v6;
  LODWORD(v89) = v7;
  v9 = v8;
  v11 = v10;
  v90 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v83 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v83 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v83 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v83 - v23;
  v25 = v11;
  v26 = v11;
  v27 = v9;
  v28 = v9;
  v29 = v2;
  if ((TelephonyUtilitiesServices.preScreeningChecks(callUUID:function:)(v26, v28, (uint64_t)"isScreenable(callUUID:manualScreening:)", 39, 2) & 1) == 0)return 0;
  v86 = v18;
  v87 = v15;
  v84 = v21;
  v85 = v24;
  v30 = v27;
  v31 = v90;
  v32 = *v2;
  v88 = v25;
  v33 = (void *)MEMORY[0x1C3B72E00](v25, v30);
  v34 = objc_msgSend(v32, sel_callWithCallUUID_, v33);

  if (v34)
  {
    v36 = OUTLINED_FUNCTION_25_1(v35, sel_isIncoming);
    if ((_DWORD)v36)
    {
      if ((v89 & 1) != 0)
      {
        v37 = (uint64_t)OUTLINED_FUNCTION_25_1((uint64_t)v36, sel_isEligibleForManualScreening);
        if (!(_DWORD)v37)
        {
LABEL_6:
          v89 = v34;
          v38 = OUTLINED_FUNCTION_5_64();
          v39 = (uint64_t)v86;
          v40 = v31;
          OUTLINED_FUNCTION_24_34((uint64_t)v86, (uint64_t)v29 + *(int *)(v38 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
          OUTLINED_FUNCTION_16_31();
          v41 = OUTLINED_FUNCTION_38_3();
          v42 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v41, v42))
          {
            v43 = OUTLINED_FUNCTION_105();
            v92[0] = OUTLINED_FUNCTION_105();
            *(_DWORD *)v43 = 136446722;
            v44 = OUTLINED_FUNCTION_2_72((uint64_t)"isScreenable(callUUID:manualScreening:)");
            OUTLINED_FUNCTION_54_20(v44);
            OUTLINED_FUNCTION_7_25();
            v87 = (char *)v4;
            *(_WORD *)(v43 + 12) = 2082;
            swift_bridgeObjectRetain();
            v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v30, v92);
            OUTLINED_FUNCTION_52_19(v45);
            OUTLINED_FUNCTION_7_25();
            OUTLINED_FUNCTION_11_11();
            *(_WORD *)(v43 + 22) = 2082;
            LOBYTE(v91) = 0;
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bool?);
            v46 = String.init<A>(describing:)();
            v91 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, v92);
            OUTLINED_FUNCTION_7_25();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BD004000, v41, v42, "%{public}s: Tracked call %{public}s Is not eligible for screening, recieved %{public}s from TUCall.isEligibleForScreening", (uint8_t *)v43, 0x20u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_19_1();
          (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v39, v40);
          v64 = v89;
          TelephonyUtilitiesServices.setCallLVMUnavailableReason(callUUID:reason:)(v88, v30, (uint64_t)objc_msgSend(v89, sel_liveVoicemailUnavailableReason));

          return 0;
        }
      }
      else
      {
        v37 = (uint64_t)OUTLINED_FUNCTION_25_1((uint64_t)v36, sel_isEligibleForScreening);
        if ((v37 & 1) == 0)
          goto LABEL_6;
      }
      v61 = (uint64_t)OUTLINED_FUNCTION_25_1(v37, sel_isRTT);
      if ((_DWORD)v61 && (v61 = TUCallScreeningRTTEnabled(), !(_DWORD)v61))
      {
        OUTLINED_FUNCTION_5_64();
        OUTLINED_FUNCTION_64_10();
        v76 = v84;
        v77(v84);
        OUTLINED_FUNCTION_16_31();
        v78 = Logger.logObject.getter();
        v79 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_39_29(v79))
        {
          v80 = OUTLINED_FUNCTION_105();
          v92[0] = OUTLINED_FUNCTION_105();
          *(_DWORD *)v80 = 136446466;
          v81 = OUTLINED_FUNCTION_2_72((uint64_t)"isScreenable(callUUID:manualScreening:)");
          OUTLINED_FUNCTION_54_20(v81);
          OUTLINED_FUNCTION_7_25();
          *(_WORD *)(v80 + 12) = 2082;
          swift_bridgeObjectRetain();
          v82 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v30, v92);
          OUTLINED_FUNCTION_52_19(v82);
          OUTLINED_FUNCTION_7_25();
          OUTLINED_FUNCTION_11_11();
          OUTLINED_FUNCTION_26_6(&dword_1BD004000, v78, (os_log_type_t)v21, "%{public}s: Tracked call %{public}s Is not eligible for screening, it is a RTT call.", (uint8_t *)v80);
          OUTLINED_FUNCTION_25_6();
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_19_1();
        v59 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
        v60 = (uint64_t)v76;
      }
      else
      {
        if (OUTLINED_FUNCTION_25_1(v61, sel_status) == 4)
        {

          return 1;
        }
        v65 = OUTLINED_FUNCTION_5_64();
        v66 = v4;
        v67 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
        v68 = v85;
        v67(v85, (char *)v29 + *(int *)(v65 + 20), v31);
        OUTLINED_FUNCTION_16_31();
        v69 = v34;
        OUTLINED_FUNCTION_55_1();
        v70 = OUTLINED_FUNCTION_12_0();
        if (OUTLINED_FUNCTION_7_9(v70))
        {
          v71 = OUTLINED_FUNCTION_105();
          v87 = (char *)v66;
          v72 = v71;
          v89 = (id)OUTLINED_FUNCTION_105();
          v92[0] = (uint64_t)v89;
          *(_DWORD *)v72 = 136446722;
          v91 = OUTLINED_FUNCTION_2_72((uint64_t)"isScreenable(callUUID:manualScreening:)");
          OUTLINED_FUNCTION_7_25();
          *(_WORD *)(v72 + 12) = 2082;
          swift_bridgeObjectRetain();
          v73 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v88, v30, v92);
          OUTLINED_FUNCTION_60_16(v73);
          OUTLINED_FUNCTION_7_25();
          OUTLINED_FUNCTION_11_11();
          *(_WORD *)(v72 + 22) = 2082;
          LODWORD(v91) = -[NSObject status](v69, sel_status);
          type metadata accessor for TUCallStatus(0);
          v74 = String.init<A>(describing:)();
          v91 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, v75, v92);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v34, (os_log_type_t)v18, "%{public}s: Tracked call %{public}s Is not eligible for screening, status is %{public}s", (uint8_t *)v72, 0x20u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_19_1();
        v59 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
        v60 = (uint64_t)v68;
      }
      v63 = v31;
      goto LABEL_20;
    }
    v89 = v34;
    OUTLINED_FUNCTION_5_64();
    OUTLINED_FUNCTION_64_10();
    v51 = (uint64_t)v87;
    OUTLINED_FUNCTION_24_34((uint64_t)v87, v52, v53);
    OUTLINED_FUNCTION_16_31();
    v54 = Logger.logObject.getter();
    v55 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_39_29(v55))
    {
      v56 = OUTLINED_FUNCTION_105();
      v92[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v56 = 136446466;
      v57 = OUTLINED_FUNCTION_2_72((uint64_t)"isScreenable(callUUID:manualScreening:)");
      OUTLINED_FUNCTION_54_20(v57);
      OUTLINED_FUNCTION_7_25();
      *(_WORD *)(v56 + 12) = 2082;
      swift_bridgeObjectRetain();
      v58 = OUTLINED_FUNCTION_43_26();
      OUTLINED_FUNCTION_52_19(v58);
      OUTLINED_FUNCTION_7_25();
      OUTLINED_FUNCTION_11_11();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v54, (os_log_type_t)v21, "%{public}s: Tracked call %{public}s can not be screened because its not an incoming call", (uint8_t *)v56);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    v59 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v60 = v51;
  }
  else
  {
    v48 = OUTLINED_FUNCTION_5_64();
    OUTLINED_FUNCTION_24_34(v3, (uint64_t)v29 + *(int *)(v48 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    OUTLINED_FUNCTION_16_31();
    OUTLINED_FUNCTION_38_3();
    v49 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_7_9(v49))
    {
      v50 = OUTLINED_FUNCTION_105();
      v92[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v50 = 136446466;
      v91 = OUTLINED_FUNCTION_2_72((uint64_t)"isScreenable(callUUID:manualScreening:)");
      OUTLINED_FUNCTION_7_25();
      *(_WORD *)(v50 + 12) = 2082;
      swift_bridgeObjectRetain();
      v91 = OUTLINED_FUNCTION_43_26();
      OUTLINED_FUNCTION_7_25();
      OUTLINED_FUNCTION_11_11();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, 0, (os_log_type_t)v18, "%{public}s: Tracked call %{public}s no longer exists, returning NO for isScreenable", (uint8_t *)v50);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    v59 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v60 = v3;
  }
  v63 = v31;
LABEL_20:
  v59(v60, v63);
  return 0;
}

uint64_t TelephonyUtilitiesServices.preScreeningChecks(callUUID:function:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  id *v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  id v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;

  v6 = (uint64_t)v5;
  v48 = a5;
  v46 = a3;
  v47 = a4;
  v9 = type metadata accessor for Logger();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v42 - v14;
  v16 = type metadata accessor for TelephonyUtilitiesServices();
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (id *)((char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (((*(uint64_t (**)(void))((char *)v5 + *(int *)(v17 + 24)))() & 1) != 0)
  {
    v45 = v10;
    v20 = a1;
    v21 = objc_msgSend(*v5, sel_currentCalls);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v21) = specialized Sequence.contains(where:)(v22);
    swift_bridgeObjectRelease();
    outlined init with copy of TelephonyUtilitiesServices(v6, (uint64_t)v19);
    if ((v21 & 1) != 0)
    {
      outlined destroy of TelephonyUtilitiesServices((uint64_t)v19);
      v23 = v20;
    }
    else
    {
      v32 = objc_msgSend(*v19, sel_activeVideoCall);

      outlined destroy of TelephonyUtilitiesServices((uint64_t)v19);
      v23 = v20;
      if (!v32)
        return 1;
    }
    TelephonyUtilitiesServices.setCallLVMUnavailableReason(callUUID:reason:)(v23, a2, 8);
    v33 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v15, v6 + *(int *)(v16 + 20), v9);
    swift_bridgeObjectRetain_n();
    v34 = Logger.logObject.getter();
    v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v50 = v37;
      *(_DWORD *)v36 = 136446466;
      v43 = v23;
      v38 = StaticString.description.getter();
      v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, &v50);
      v44 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2082;
      swift_bridgeObjectRetain();
      v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, a2, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v34, v35, "%{public}s: %{public}s can not be screened because we already have an active call.", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v37, -1, -1);
      MEMORY[0x1C3B751B8](v36, -1, -1);

      v30 = *(void (**)(char *, uint64_t))(v33 + 8);
      v31 = v15;
      goto LABEL_9;
    }

    swift_bridgeObjectRelease_n();
    v30 = *(void (**)(char *, uint64_t))(v33 + 8);
    v31 = v15;
LABEL_12:
    v40 = v9;
    goto LABEL_13;
  }
  TelephonyUtilitiesServices.setCallLVMUnavailableReason(callUUID:reason:)(a1, a2, 6);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, (char *)v5 + *(int *)(v16 + 20), v9);
  swift_bridgeObjectRetain_n();
  v24 = Logger.logObject.getter();
  v25 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v24, v25))
  {

    swift_bridgeObjectRelease_n();
    v30 = *(void (**)(char *, uint64_t))(v10 + 8);
    v31 = v13;
    goto LABEL_12;
  }
  v26 = swift_slowAlloc();
  v27 = swift_slowAlloc();
  v50 = v27;
  *(_DWORD *)v26 = 136446466;
  v44 = v9;
  v28 = StaticString.description.getter();
  v45 = v10;
  v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v50);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v26 + 12) = 2082;
  swift_bridgeObjectRetain();
  v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v50);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1BD004000, v24, v25, "%{public}s: %{public}s can not be screened because answering machine is unavailable.", (uint8_t *)v26, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1C3B751B8](v27, -1, -1);
  MEMORY[0x1C3B751B8](v26, -1, -1);

  v30 = *(void (**)(char *, uint64_t))(v45 + 8);
  v31 = v13;
LABEL_9:
  v40 = v44;
LABEL_13:
  v30(v31, v40);
  return 0;
}

void TelephonyUtilitiesServices.setCallLVMUnavailableReason(callUUID:reason:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;

  v7 = type metadata accessor for Logger();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  v12 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  v19 = objc_msgSend(v11, sel_callWithCallUUID_, v12);

  if (v19)
  {
    objc_msgSend(v11, sel_setLiveVoicemailUnavailableReason_forCall_, a3, v19);

  }
  else
  {
    v13 = type metadata accessor for TelephonyUtilitiesServices();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, (char *)v3 + *(int *)(v13 + 20), v7);
    swift_bridgeObjectRetain_n();
    v14 = Logger.logObject.getter();
    v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v19 = (id)swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v16 = 136446466;
      v20 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002DLL, 0x80000001BD679920, (uint64_t *)&v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      v20 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)&v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v14, v15, "%{public}s: Tracked call %{public}s no longer exists, unable to set LVM unavailable reason.", (uint8_t *)v16, 0x16u);
      v17 = v19;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v17, -1, -1);
      MEMORY[0x1C3B751B8](v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> TelephonyUtilitiesServices.screen(callUUID:screeningDueToUserInteraction:)(Swift::String callUUID, Swift::Bool screeningDueToUserInteraction)
{
  id *v2;
  uint64_t v3;
  id *v4;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  BOOL v27;
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = v2;
  v35 = screeningDueToUserInteraction;
  object = callUUID._object;
  countAndFlagsBits = callUUID._countAndFlagsBits;
  v7 = type metadata accessor for Logger();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_79();
  v11 = (char *)(v9 - v10);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - v13;
  v15 = *v4;
  v36 = countAndFlagsBits;
  v16 = (void *)MEMORY[0x1C3B72E00](countAndFlagsBits, object);
  v17 = objc_msgSend(v15, sel_callWithCallUUID_, v16);

  v18 = (char *)v4 + *(int *)(type metadata accessor for TelephonyUtilitiesServices() + 20);
  v19 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  if (v17)
  {
    v19(v14, v18, v7);
    OUTLINED_FUNCTION_59_5();
    v20 = Logger.logObject.getter();
    v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = OUTLINED_FUNCTION_105();
      v34 = v3;
      v23 = v22;
      v32 = OUTLINED_FUNCTION_105();
      v38 = v32;
      *(_DWORD *)v23 = 136446722;
      v33 = v7;
      v37 = OUTLINED_FUNCTION_28_35((uint64_t)"screen(callUUID:screeningDueToUserInteraction:)");
      OUTLINED_FUNCTION_48_23();
      *(_WORD *)(v23 + 12) = 2082;
      OUTLINED_FUNCTION_25_2();
      v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, (unint64_t)object, &v38);
      OUTLINED_FUNCTION_48_23();
      OUTLINED_FUNCTION_57_8();
      *(_WORD *)(v23 + 22) = 1024;
      LODWORD(v37) = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v20, v21, "%{public}s: Tracked call %{public}s is being sent to screening due to user interaction: %{BOOL}d", (uint8_t *)v23, 0x1Cu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_58_17();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v7);
    v27 = v35;
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD1A0]), sel_initWithCall_, v17);
    objc_msgSend(v28, sel_setSendToScreening_, 1);
    objc_msgSend(v28, sel_setScreeningDueToUserInteraction_, v27);
    objc_msgSend(*v4, sel_answerWithRequest_, v28);

  }
  else
  {
    v19(v11, v18, v7);
    OUTLINED_FUNCTION_59_5();
    v24 = Logger.logObject.getter();
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = OUTLINED_FUNCTION_105();
      v38 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v26 = 136446466;
      v33 = v7;
      v37 = OUTLINED_FUNCTION_28_35((uint64_t)"screen(callUUID:screeningDueToUserInteraction:)");
      v34 = v3;
      OUTLINED_FUNCTION_49_22();
      *(_WORD *)(v26 + 12) = 2082;
      OUTLINED_FUNCTION_25_2();
      v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, (unint64_t)object, &v38);
      OUTLINED_FUNCTION_49_22();
      OUTLINED_FUNCTION_57_8();
      _os_log_impl(&dword_1BD004000, v24, v25, "%{public}s: Tracked call %{public}s no longer exists, failing to screen call.", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_58_17();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v7);
    v29 = v36;
    lazy protocol witness table accessor for type AnsweringMachineError and conformance AnsweringMachineError();
    swift_allocError();
    *v30 = v29;
    v30[1] = (uint64_t)object;
    OUTLINED_FUNCTION_25_2();
    swift_willThrow();
  }
}

id TelephonyUtilitiesServices.screen(request:)(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_screenWithRequest_, a1);
}

Swift::Int __swiftcall TelephonyUtilitiesServices.getStreamToken(callUUID:)(Swift::String callUUID)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_41_19();
}

void sub_1BD1AFD2C(void *a1)
{
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v8;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;

  v8 = OUTLINED_FUNCTION_4_5((uint64_t)a1, sel_callWithCallUUID_);

  if (!v8)
  {
    v9 = OUTLINED_FUNCTION_5_64();
    OUTLINED_FUNCTION_24_34(v3, (uint64_t)v2 + *(int *)(v9 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_16_31();
    OUTLINED_FUNCTION_38_3();
    v10 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_41_3(v10))
    {
      v11 = OUTLINED_FUNCTION_105();
      *(_QWORD *)(v6 - 88) = OUTLINED_FUNCTION_105();
      *(_DWORD *)v11 = 136446466;
      *(_QWORD *)(v6 - 104) = v5;
      *(_QWORD *)(v6 - 96) = OUTLINED_FUNCTION_4_67(25, 0x80000001BD679880, (uint64_t *)(v6 - 88));
      OUTLINED_FUNCTION_3_70();
      *(_WORD *)(v11 + 12) = 2082;
      OUTLINED_FUNCTION_25_2();
      *(_QWORD *)(v6 - 96) = OUTLINED_FUNCTION_44_21();
      OUTLINED_FUNCTION_3_70();
      OUTLINED_FUNCTION_11_11();
      OUTLINED_FUNCTION_6_54(&dword_1BD004000, v2, v12, "%{public}s: Tracked call %{public}s no longer exists, failing to screen call.");
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    v25 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
    v26 = v3;
    goto LABEL_10;
  }
  if (!OUTLINED_FUNCTION_63_15())
  {
    v13 = type metadata accessor for TelephonyUtilitiesServices();
    OUTLINED_FUNCTION_24_34(v4, (uint64_t)v2 + *(int *)(v13 + 20), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    v14 = v8;
    v15 = OUTLINED_FUNCTION_55_1();
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = OUTLINED_FUNCTION_105();
      v18 = OUTLINED_FUNCTION_105();
      *(_QWORD *)(v6 - 112) = v18;
      *(_QWORD *)(v6 - 88) = v18;
      *(_DWORD *)v17 = 136446466;
      v19 = OUTLINED_FUNCTION_4_67(25, 0x80000001BD679880, (uint64_t *)(v6 - 88));
      *(_QWORD *)(v6 - 104) = v5;
      *(_QWORD *)(v6 - 96) = v19;
      OUTLINED_FUNCTION_21_38();
      *(_WORD *)(v17 + 12) = 2082;
      *(_QWORD *)(v6 - 120) = v17 + 14;
      v20 = objc_msgSend(v14, sel_callUUID);
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v23 = v22;

      v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, (uint64_t *)(v6 - 88));
      OUTLINED_FUNCTION_60_16(v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v15, v16, "%{public}s: Failed to get stream token from call from TUCallCenter %{public}s", (uint8_t *)v17);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    v26 = OUTLINED_FUNCTION_66_13();
LABEL_10:
    v25(v26, v5);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_63_15();

LABEL_11:
  OUTLINED_FUNCTION_52_1();
}

Swift::String_optional __swiftcall TelephonyUtilitiesServices.getCallerID(callUUID:)(Swift::String callUUID)
{
  uint64_t v1;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_18_44();
}

void sub_1BD1B0058(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _DWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  v3 = OUTLINED_FUNCTION_1_21((uint64_t)a1, sel_callWithCallUUID_);

  if (v3)
  {
    v4 = outlined bridged method (pb) of @objc TUCall.contactIdentifiers.getter(v3);
    if (v4)
    {
      if (*(_QWORD *)(v4 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();

        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }

    goto LABEL_10;
  }
  v5 = OUTLINED_FUNCTION_5_64();
  OUTLINED_FUNCTION_29_32(v5);
  OUTLINED_FUNCTION_16_31();
  v6 = OUTLINED_FUNCTION_56_17();
  v7 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_23(v7))
  {
    v8 = (_DWORD *)OUTLINED_FUNCTION_105();
    v9 = OUTLINED_FUNCTION_105();
    *(_QWORD *)(v1 - 104) = v9;
    *(_QWORD *)(v1 - 88) = v9;
    *v8 = 136446466;
    OUTLINED_FUNCTION_46_21();
    *(_QWORD *)(v1 - 96) = OUTLINED_FUNCTION_4_67(22, v10, v11);
    OUTLINED_FUNCTION_24_24();
    OUTLINED_FUNCTION_33_24();
    *(_QWORD *)(v1 - 96) = OUTLINED_FUNCTION_15_53();
    OUTLINED_FUNCTION_24_24();
    OUTLINED_FUNCTION_11_11();
    OUTLINED_FUNCTION_6_54(&dword_1BD004000, v6, v12, "%{public}s: Tracked call %{public}s no longer exists, failing to screen call.");
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_37_26();
LABEL_10:
  OUTLINED_FUNCTION_52_1();
}

Swift::String __swiftcall TelephonyUtilitiesServices.getCallerDisplayName(callUUID:)(Swift::String callUUID)
{
  uint64_t v1;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_18_44();
}

void sub_1BD1B0204(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _DWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  v3 = OUTLINED_FUNCTION_1_21((uint64_t)a1, sel_callWithCallUUID_);

  if (v3)
  {
    v4 = objc_msgSend(v3, sel_displayName);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  else
  {
    v5 = OUTLINED_FUNCTION_5_64();
    OUTLINED_FUNCTION_29_32(v5);
    OUTLINED_FUNCTION_16_31();
    v6 = OUTLINED_FUNCTION_56_17();
    v7 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_23(v7))
    {
      v8 = (_DWORD *)OUTLINED_FUNCTION_105();
      v9 = OUTLINED_FUNCTION_105();
      *(_QWORD *)(v1 - 104) = v9;
      *(_QWORD *)(v1 - 88) = v9;
      *v8 = 136446466;
      OUTLINED_FUNCTION_46_21();
      *(_QWORD *)(v1 - 96) = OUTLINED_FUNCTION_4_67(31, v10, v11);
      OUTLINED_FUNCTION_24_24();
      OUTLINED_FUNCTION_33_24();
      *(_QWORD *)(v1 - 96) = OUTLINED_FUNCTION_15_53();
      OUTLINED_FUNCTION_24_24();
      OUTLINED_FUNCTION_11_11();
      OUTLINED_FUNCTION_6_54(&dword_1BD004000, v6, v12, "%{public}s: Tracked call %{public}s no longer exists, failing to screen call.");
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_37_26();
  }
  OUTLINED_FUNCTION_52_1();
}

void TelephonyUtilitiesServices.getScreenRequestIfAvailable()()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint8_t *v17;
  void (*v18)(char *, uint64_t);
  NSObject *v19;
  unint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];

  OUTLINED_FUNCTION_93();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_79();
  v6 = v4 - v5;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v29 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v29 - v11;
  if ((TelephonyUtilitiesServices.preScreeningChecks(callUUID:function:)(0x70556C6C61435843, 0xEC00000065746164, (uint64_t)"getScreenRequestIfAvailable()", 29, 2) & 1) != 0)
  {
    v13 = (uint64_t)v1 + *(int *)(OUTLINED_FUNCTION_5_64() + 20);
    v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16);
    v32 = v13;
    OUTLINED_FUNCTION_139((uint64_t)v12, v13, v31);
    OUTLINED_FUNCTION_55_1();
    v14 = OUTLINED_FUNCTION_12_0();
    v15 = os_log_type_enabled(v1, v14);
    v30 = v6;
    if (v15)
    {
      v16 = OUTLINED_FUNCTION_105();
      v29[1] = v2;
      v17 = (uint8_t *)v16;
      v34[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v17 = 136446210;
      v33 = OUTLINED_FUNCTION_4_67(29, 0x80000001BD6798E0, v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v1, v14, "%{public}s: Getting Screening request if available.", v17, 0xCu);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    v18 = *(void (**)(char *, uint64_t))(v0 + 8);
    v18(v12, v2);
    v19 = -[objc_class fetchCurrentCallUpdates](v1->isa, sel_fetchCurrentCallUpdates);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUCallUpdate);
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    OUTLINED_FUNCTION_139((uint64_t)v10, v32, v31);
    OUTLINED_FUNCTION_16_31();
    OUTLINED_FUNCTION_38_3();
    v21 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v19, v21))
    {
      v22 = OUTLINED_FUNCTION_105();
      v34[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v22 = 136315394;
      v33 = OUTLINED_FUNCTION_4_67(29, 0x80000001BD6798E0, v34);
      OUTLINED_FUNCTION_7_25();
      *(_WORD *)(v22 + 12) = 2048;
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain();
        v23 = _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_21_0();
      }
      else
      {
        v23 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      OUTLINED_FUNCTION_21_0();
      v33 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v19, v21, "%s: %ld updates available.", (uint8_t *)v22);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    v18(v10, v2);
    v24 = specialized Sequence.first(where:)(v20);
    OUTLINED_FUNCTION_21_0();
    v25 = v30;
    if (v24)
    {
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD398]), sel_initWithTUCallUpdate_, v24);

    }
    else
    {
      OUTLINED_FUNCTION_139(v30, v32, v31);
      v26 = OUTLINED_FUNCTION_56_17();
      v27 = static os_log_type_t.error.getter();
      if (OUTLINED_FUNCTION_7_9(v27))
      {
        v28 = (uint8_t *)OUTLINED_FUNCTION_105();
        v34[0] = OUTLINED_FUNCTION_105();
        *(_DWORD *)v28 = 136446210;
        v33 = OUTLINED_FUNCTION_4_67(29, 0x80000001BD6798E0, v34);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_1BD004000, v26, (os_log_type_t)v2, "%{public}s: No screenable request found for screening request.", v28, 0xCu);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      v18((char *)v25, v2);
    }
  }
  OUTLINED_FUNCTION_52_1();
}

void TelephonyUtilitiesServices.timeToWaitForCall(callUUID:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_41_19();
}

void sub_1BD1B0870(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;

  *(_QWORD *)(v6 - 104) = OUTLINED_FUNCTION_4_5((uint64_t)a1, sel_callWithCallUUID_);

  v8 = OUTLINED_FUNCTION_5_64();
  if (*(_QWORD *)(v6 - 104))
  {
    (*(void (**)(_QWORD))(v2 + *(int *)(v8 + 28)))(*(_QWORD *)(v6 - 104));
    OUTLINED_FUNCTION_17_41(*(id *)(v6 - 104));
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v2 + *(int *)(v8 + 20), v3);
    OUTLINED_FUNCTION_16_31();
    v9 = Logger.logObject.getter();
    v10 = static os_log_type_t.default.getter();
    v11 = v10;
    if (os_log_type_enabled(v9, v10))
    {
      v12 = OUTLINED_FUNCTION_105();
      v13 = OUTLINED_FUNCTION_105();
      *(_QWORD *)(v6 - 104) = v13;
      *(_QWORD *)(v6 - 88) = v13;
      *(_DWORD *)v12 = 136446466;
      *(_DWORD *)(v6 - 108) = v11;
      OUTLINED_FUNCTION_46_21();
      *(_QWORD *)(v6 - 96) = OUTLINED_FUNCTION_4_67(28, v14, v15);
      OUTLINED_FUNCTION_21_38();
      *(_WORD *)(v12 + 12) = 2082;
      OUTLINED_FUNCTION_25_2();
      *(_QWORD *)(v6 - 96) = OUTLINED_FUNCTION_44_21();
      OUTLINED_FUNCTION_21_38();
      OUTLINED_FUNCTION_11_11();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v9, (os_log_type_t)*(_DWORD *)(v6 - 108), "%{public}s: Tracked call %{public}s no longer exists, unable to get time to wait.", (uint8_t *)v12);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_1();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
    *(_OWORD *)v1 = xmmword_1BD64E9C0;
    *(_BYTE *)(v1 + 16) = 1;
    OUTLINED_FUNCTION_52_1();
  }
}

uint64_t protocol witness for CallServices.screeningEnabled.getter in conformance TelephonyUtilitiesServices()
{
  return TelephonyUtilitiesServices.screeningEnabled.getter() & 1;
}

void protocol witness for CallServices.screen(callUUID:screeningDueToUserInteraction:) in conformance TelephonyUtilitiesServices(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  TelephonyUtilitiesServices.screen(callUUID:screeningDueToUserInteraction:)(*(Swift::String *)&a1, a3);
}

unint64_t lazy protocol witness table accessor for type AnsweringMachineError and conformance AnsweringMachineError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AnsweringMachineError and conformance AnsweringMachineError;
  if (!lazy protocol witness table cache variable for type AnsweringMachineError and conformance AnsweringMachineError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AnsweringMachineError, &type metadata for AnsweringMachineError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnsweringMachineError and conformance AnsweringMachineError);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreeningRequest()
{
  return &type metadata for ScreeningRequest;
}

uint64_t dispatch thunk of CallServices.screeningEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CallServices.disconnectScreeningCall(callUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of CallServices.screen(callUUID:screeningDueToUserInteraction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of CallServices.screen(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of CallServices.getStreamToken(callUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of CallServices.isScreenable(callUUID:manualScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of CallServices.getCallerID(callUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of CallServices.getCallerDisplayName(callUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of CallServices.getScreenRequestIfAvailable()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CallServices.timeToWaitForCall(callUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

void **initializeBufferWithCopyOfBuffer for TelephonyUtilitiesServices(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Logger();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = a3[6];
    v15 = a3[7];
    v16 = (void **)((char *)v7 + v14);
    v17 = (void **)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (void **)((char *)v7 + v15);
    v20 = (void **)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for TelephonyUtilitiesServices(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_release();
}

void **initializeWithCopy for TelephonyUtilitiesServices(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Logger();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = a3[6];
  v14 = a3[7];
  v15 = (void **)((char *)a1 + v13);
  v16 = (void **)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (void **)((char *)a1 + v14);
  v19 = (void **)((char *)a2 + v14);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_retain();
  return a1;
}

void **assignWithCopy for TelephonyUtilitiesServices(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = (void **)((char *)a1 + v13);
  v15 = (void **)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  v17 = a3[7];
  v18 = (void **)((char *)a1 + v17);
  v19 = (void **)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for TelephonyUtilitiesServices(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  return a1;
}

void **assignWithTake for TelephonyUtilitiesServices(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  swift_release();
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TelephonyUtilitiesServices()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1B0EE4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_17_2();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TelephonyUtilitiesServices()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1BD1B0F60(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_17_2();
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for TelephonyUtilitiesServices()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t outlined init with copy of TelephonyUtilitiesServices(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TelephonyUtilitiesServices();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of TelephonyUtilitiesServices(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TelephonyUtilitiesServices();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL OUTLINED_FUNCTION_39_29(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t CNAutocompleteSearchController.messagesGroup.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v6 = OUTLINED_FUNCTION_33_0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  CNAutocompleteSearchController.messagesGroupUUID.getter(v11, v5);
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
  {
    outlined destroy of UUID?(v5);
LABEL_6:
    v17 = type metadata accessor for MessagesGroup();
    v19 = a1;
    v20 = 1;
    return __swift_storeEnumTagSinglePayload(v19, v20, 1, v17);
  }
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v12(v10, v5, v6);
  v13 = CNAutocompleteSearchController.messagesGroupName.getter();
  if (!v14)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  v15 = v13;
  v16 = v14;
  v12(a1, v10, v6);
  v17 = type metadata accessor for MessagesGroup();
  v18 = (uint64_t *)(a1 + *(int *)(v17 + 20));
  *v18 = v15;
  v18[1] = v16;
  v19 = a1;
  v20 = 0;
  return __swift_storeEnumTagSinglePayload(v19, v20, 1, v17);
}

uint64_t CNAutocompleteSearchController.messagesChatGUID.getter(uint64_t a1)
{
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;

  v1 = OUTLINED_FUNCTION_25_1(a1, sel_recipients);
  OUTLINED_FUNCTION_7_67();
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = swift_bridgeObjectRelease();
  if (v3 == 1)
  {
    v5 = OUTLINED_FUNCTION_25_1(v4, sel_recipients);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62)
    {
      OUTLINED_FUNCTION_17_20();
      _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_7_15();
      if (v5)
      {
LABEL_6:
        OUTLINED_FUNCTION_1_71();
        OUTLINED_FUNCTION_5_65();
      }
    }
    else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

void CNAutocompleteSearchController.messagesGroupUUID.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v3 = OUTLINED_FUNCTION_25_1(a1, sel_recipients);
  OUTLINED_FUNCTION_7_67();
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = swift_bridgeObjectRelease();
  if (v5 != 1)
    goto LABEL_12;
  v7 = OUTLINED_FUNCTION_25_1(v6, sel_recipients);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
    if (v10)
      goto LABEL_6;
    goto LABEL_11;
  }
  if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    OUTLINED_FUNCTION_27();
LABEL_12:
    v11 = OUTLINED_FUNCTION_33_0();
    __swift_storeEnumTagSinglePayload(a2, 1, 1, v11);
    return;
  }
LABEL_6:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v8 & 0xC000000000000001) == 0, v8);
  if ((v8 & 0xC000000000000001) != 0)
    v9 = (id)MEMORY[0x1C3B73D18](0, v8);
  else
    v9 = *(id *)(v8 + 32);
  v12 = v9;
  OUTLINED_FUNCTION_27();
  CNComposeRecipient.messagesGroupUUID.getter(a2);

}

uint64_t CNAutocompleteSearchController.messagesGroupName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t result;
  id v8;
  unint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v3 = v2 - v1;
  CNAutocompleteSearchController.messagesGroupUUID.getter(v4, v2 - v1);
  v5 = OUTLINED_FUNCTION_33_0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v3, 1, v5);
  outlined destroy of UUID?(v3);
  result = 0;
  if (EnumTagSinglePayload != 1)
  {
    v8 = OUTLINED_FUNCTION_25_1(0, sel_recipients);
    OUTLINED_FUNCTION_7_67();
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v9 >> 62)
    {
      OUTLINED_FUNCTION_17_20();
      _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_7_15();
      if (v8)
      {
LABEL_4:
        OUTLINED_FUNCTION_1_71();
        OUTLINED_FUNCTION_5_65();
      }
    }
    else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t type metadata accessor for CNComposeRecipient()
{
  unint64_t result;

  result = lazy cache variable for type metadata for CNComposeRecipient;
  if (!lazy cache variable for type metadata for CNComposeRecipient)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CNComposeRecipient);
  }
  return result;
}

uint64_t outlined bridged method (ob) of @objc CNComposeRecipient.displayString.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_displayString);

  if (!v2)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void AttributedString.init(cnkLocalized:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v12 = v3;
  OUTLINED_FUNCTION_21_39();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CAEF88];
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_0_7();
  type metadata accessor for String.LocalizationValue();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_291(v2, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v9 = OUTLINED_FUNCTION_20_40();
  OUTLINED_FUNCTION_77_0(v1, v10, v11, v9);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AttributedString.FormattingOptions and conformance AttributedString.FormattingOptions, v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AttributedString.FormattingOptions]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [AttributedString.FormattingOptions] and conformance [A], &demangling cache variable for type metadata for [AttributedString.FormattingOptions]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  AttributedString.init(localized:options:table:bundle:locale:comment:)();
  OUTLINED_FUNCTION_52(v12, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_52_1();
}

void AttributedString.init(conversationControlsLocalized:comment:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v14 = v3;
  OUTLINED_FUNCTION_21_39();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CAEF88];
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_6_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_8_56();
  v8 = type metadata accessor for String.LocalizationValue();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_9_54();
  v10(v2, v4, v8);
  objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v11 = OUTLINED_FUNCTION_20_40();
  OUTLINED_FUNCTION_77_0(v1, v12, v13, v11);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AttributedString.FormattingOptions and conformance AttributedString.FormattingOptions, v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AttributedString.FormattingOptions]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [AttributedString.FormattingOptions] and conformance [A], &demangling cache variable for type metadata for [AttributedString.FormattingOptions]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  AttributedString.init(localized:options:table:bundle:locale:comment:)();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v14, v8);
  OUTLINED_FUNCTION_52_1();
}

void AttributedString.init<A>(conversationControlsLocalized:including:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v12 = v3;
  OUTLINED_FUNCTION_21_39();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77_1();
  v6 = type metadata accessor for String.LocalizationValue();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v6);
  objc_msgSend((id)objc_opt_self(), sel_conversationKit, v12);
  v9 = OUTLINED_FUNCTION_20_40();
  OUTLINED_FUNCTION_77_0(v0, v10, v11, v9);
  default argument 1 of AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)();
  AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
  OUTLINED_FUNCTION_52_1();
}

uint64_t default argument 1 of AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)()
{
  type metadata accessor for AttributedString.FormattingOptions();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AttributedString.FormattingOptions and conformance AttributedString.FormattingOptions, (void (*)(uint64_t))MEMORY[0x1E0CAEF88]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AttributedString.FormattingOptions]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [AttributedString.FormattingOptions] and conformance [A], &demangling cache variable for type metadata for [AttributedString.FormattingOptions]);
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

void AttributedString.replaceLinks(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void (*v27)(uint64_t *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<AttributedString.Index>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, Range<AttributedString.Index>)?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_6_0();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AttributedString.Runs.AttributesSlice1<AttributeScopes.FoundationAttributes.LinkAttribute>.Iterator);
  v33 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_8_56();
  v14 = type metadata accessor for AttributedString.Runs();
  v30 = *(_QWORD *)(v14 - 8);
  v31 = v14;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  v19 = type metadata accessor for AttributedString();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_78();
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AttributedString.Runs.AttributesSlice1<AttributeScopes.FoundationAttributes.LinkAttribute>);
  v32 = *(_QWORD *)(v34 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_9_54();
  v22(v1, v1, v19);
  AttributedString.runs.getter();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v19);
  swift_getKeyPath();
  swift_getKeyPath();
  lazy protocol witness table accessor for type AttributeScopes.FoundationAttributes.LinkAttribute and conformance AttributeScopes.FoundationAttributes.LinkAttribute();
  AttributedString.Runs.subscript.getter();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v18, v31);
  v23 = v5;
  MEMORY[0x1C3B6FAB8](v34);
  OUTLINED_FUNCTION_15_54();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, Range<AttributedString.Index>));
  OUTLINED_FUNCTION_19_37(v24);
  while (!v25)
  {
    v23 = v3 + *(int *)(v23 + 48);
    _sypSgWObTm_0(v3, v2, &demangling cache variable for type metadata for URL?);
    _sypSgWObTm_0(v23, v9, &demangling cache variable for type metadata for Range<AttributedString.Index>);
    v26 = type metadata accessor for URL();
    if (__swift_getEnumTagSinglePayload(v2, 1, v26) != 1)
    {
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Range<AttributedString.Index> and conformance Range<A>, &demangling cache variable for type metadata for Range<AttributedString.Index>);
      v27 = (void (*)(uint64_t *, _QWORD))AttributedString.subscript.modify();
      v23 = v28;
      AttributedSubstring.setAttributes(_:)();
      v27(&v35, 0);
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v9, &demangling cache variable for type metadata for Range<AttributedString.Index>);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_15_54();
    v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (URL?, Range<AttributedString.Index>));
    OUTLINED_FUNCTION_19_37(v29);
  }
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v4, v12);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v5, v34);
  OUTLINED_FUNCTION_52_1();
}

void key path getter for AttributeDynamicLookup.subscript<A>(dynamicMember:) : AttributeDynamicLookupAttributeScopes.FoundationAttributes.LinkAttribute()
{
  lazy protocol witness table accessor for type AttributeScopes.FoundationAttributes.LinkAttribute and conformance AttributeScopes.FoundationAttributes.LinkAttribute();
  AttributeDynamicLookup.subscript.getter();
  __break(1u);
}

void sub_1BD1B1F04()
{
  AttributeScopes.FoundationAttributes.link.getter();
  __break(1u);
}

unint64_t lazy protocol witness table accessor for type AttributeScopes.FoundationAttributes.LinkAttribute and conformance AttributeScopes.FoundationAttributes.LinkAttribute()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AttributeScopes.FoundationAttributes.LinkAttribute and conformance AttributeScopes.FoundationAttributes.LinkAttribute;
  if (!lazy protocol witness table cache variable for type AttributeScopes.FoundationAttributes.LinkAttribute and conformance AttributeScopes.FoundationAttributes.LinkAttribute)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CAED98], MEMORY[0x1E0CAEDA8]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.FoundationAttributes.LinkAttribute and conformance AttributeScopes.FoundationAttributes.LinkAttribute);
  }
  return result;
}

uint64_t sub_1BD1B1F64()
{
  return swift_release();
}

uint64_t sub_1BD1B1F6C(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1BD1B1F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return key path index equality operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, a3, &demangling cache variable for type metadata for KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>) & 1;
}

uint64_t sub_1BD1B1F98(uint64_t a1, uint64_t a2)
{
  return key path index hash operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, &demangling cache variable for type metadata for KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>);
}

_QWORD *sub_1BD1B1FB4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void *one-time initialization function for containers()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(ContainerAttribute.Value, AttributeContainer)>);
  v0 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ContainerAttribute.Value, AttributeContainer))
                                      - 8)
                          + 80);
  v1 = (v0 + 32) & ~v0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441D0;
  if (one-time initialization token for subjectContainer != -1)
    swift_once();
  v3 = type metadata accessor for AttributeContainer();
  v4 = __swift_project_value_buffer(v3, (uint64_t)static AttributedStrings.Notices.subjectContainer);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v2 + v1, v4, v3);
  lazy protocol witness table accessor for type ContainerAttribute.Value and conformance ContainerAttribute.Value();
  result = (void *)Dictionary.init(dictionaryLiteral:)();
  static AttributedString.containers = result;
  return result;
}

void AttributedString.applyContainer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t *, _QWORD);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t KeyPath;
  _QWORD *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t *, _QWORD);
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  void (*v104)(char *, uint64_t, uint64_t);
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115[5];

  OUTLINED_FUNCTION_93();
  v94 = v0;
  v85 = v1;
  v92 = type metadata accessor for AttributedString.AttributeMergePolicy();
  v91 = *(_QWORD *)(v92 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_41();
  v90 = v3;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<AttributedString.Index>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v88 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AttributeContainer?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  v102 = v7;
  v100 = type metadata accessor for AttributeContainer();
  v97 = *(_QWORD *)(v100 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v87 = v9;
  v106 = type metadata accessor for AttributedString.Runs.Run();
  v114 = *(_QWORD *)(v106 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v101 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AttributedString.Runs.Run?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_41();
  v107 = v13;
  v14 = type metadata accessor for AttributedString.Runs.Index();
  v15 = *(_QWORD *)(v14 - 8);
  v112 = v14;
  v113 = v15;
  OUTLINED_FUNCTION_10_1();
  v17 = MEMORY[0x1E0C80A78](v16);
  v111 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v82 - v19;
  v21 = type metadata accessor for AttributedString.Runs();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_77();
  v25 = (char *)(v24 - v23);
  v26 = type metadata accessor for AttributedString();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_78();
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<AttributedString.Runs>);
  OUTLINED_FUNCTION_1_1();
  v30 = MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v82 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v82 - v33;
  v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  v83(v0, v94, v26);
  AttributedString.runs.getter();
  v35 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v36 = v101;
  v84 = v26;
  v35(v0, v26);
  v104 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v104(v32, (uint64_t)v25, v21);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AttributedString.Runs and conformance AttributedString.Runs, (void (*)(uint64_t))MEMORY[0x1E0CAF160]);
  v109 = v37;
  dispatch thunk of Collection.startIndex.getter();
  v38 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v105 = v25;
  v103 = v38;
  v38((uint64_t)v25, v21);
  v39 = &v32[*(int *)(v28 + 36)];
  v40 = v113;
  v41 = *(void (**)(char *, char *, uint64_t))(v113 + 32);
  v110 = v20;
  v41(v39, v20, v112);
  _sypSgWObTm_0((uint64_t)v32, (uint64_t)v34, &demangling cache variable for type metadata for IndexingIterator<AttributedString.Runs>);
  v42 = &v34[*(int *)(v28 + 36)];
  v108 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v86 = *MEMORY[0x1E0CAEFD8];
  *(_QWORD *)&v43 = 136315138;
  v96 = v43;
  v95 = MEMORY[0x1E0DEE9B8] + 8;
  v44 = v21;
  v98 = v21;
  v99 = v42;
  while (1)
  {
    v45 = v110;
    v46 = v112;
    v108(v110, v42, v112);
    v47 = v42;
    v48 = v111;
    dispatch thunk of Collection.endIndex.getter();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AttributedString.Runs.Index and conformance AttributedString.Runs.Index, (void (*)(uint64_t))MEMORY[0x1E0CAF150]);
    v49 = dispatch thunk of static Equatable.== infix(_:_:)();
    v50 = *(void (**)(char *, uint64_t))(v113 + 8);
    v50(v48, v46);
    v50(v45, v46);
    if ((v49 & 1) != 0)
      break;
    v53 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read();
    v55 = v106;
    v54 = v107;
    OUTLINED_FUNCTION_291(v107, v56, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 16));
    v53(v115, 0);
    v57 = v105;
    v104(v105, (uint64_t)v34, v44);
    dispatch thunk of Collection.formIndex(after:)();
    v103((uint64_t)v57, v44);
    __swift_storeEnumTagSinglePayload(v54, 0, 1, v55);
    if (__swift_getEnumTagSinglePayload(v54, 1, v55) == 1)
      goto LABEL_20;
    v42 = v47;
    OUTLINED_FUNCTION_291(v36, v54, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 32));
    KeyPath = swift_getKeyPath();
    *(&v82 - 2) = MEMORY[0x1E0C80A78](KeyPath);
    swift_getKeyPath();
    lazy protocol witness table accessor for type ContainerAttribute and conformance ContainerAttribute();
    AttributedString.Runs.Run.subscript.getter();
    swift_release();
    if ((v115[0] & 1) != 0)
    {
      OUTLINED_FUNCTION_52(v36, *(uint64_t (**)(uint64_t, uint64_t))(v114 + 8));
    }
    else
    {
      if (one-time initialization token for containers != -1)
        swift_once();
      v59 = static AttributedString.containers;
      if (*((_QWORD *)static AttributedString.containers + 2)
        && (specialized __RawDictionaryStorage.find<A>(_:)(), (v61 & 1) != 0))
      {
        v62 = v59[7] + *(_QWORD *)(v97 + 72) * v60;
        v63 = v102;
        v64 = v100;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v102, v62, v100);
        __swift_storeEnumTagSinglePayload(v63, 0, 1, v64);
        if (__swift_getEnumTagSinglePayload(v63, 1, v64) != 1)
        {
          v65 = v97;
          v66 = v87;
          v67 = v100;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 32))(v87, v102, v100);
          v68 = v88;
          AttributedString.Runs.Run.range.getter();
          v69 = v91;
          v70 = v90;
          v71 = v92;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v91 + 104))(v90, v86, v92);
          lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Range<AttributedString.Index> and conformance Range<A>, &demangling cache variable for type metadata for Range<AttributedString.Index>);
          v93 = (void (*)(uint64_t *, _QWORD))AttributedString.subscript.modify();
          AttributedSubstring.mergeAttributes(_:mergePolicy:)();
          v72 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
          v73 = v70;
          v44 = v98;
          v42 = v99;
          v72(v73, v71);
          v93(v115, 0);
          v74 = v68;
          v36 = v101;
          outlined destroy of OS_dispatch_queue.SchedulerOptions?(v74, &demangling cache variable for type metadata for Range<AttributedString.Index>);
          (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v66, v67);
          v75 = *(uint64_t (**)(uint64_t, uint64_t))(v114 + 8);
          goto LABEL_18;
        }
      }
      else
      {
        __swift_storeEnumTagSinglePayload(v102, 1, 1, v100);
      }
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v102, &demangling cache variable for type metadata for AttributeContainer?);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v76 = type metadata accessor for Logger();
      __swift_project_value_buffer(v76, (uint64_t)&static Logger.conversationKit);
      v77 = Logger.logObject.getter();
      v78 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v77, v78))
      {
        v79 = swift_slowAlloc();
        v115[0] = swift_slowAlloc();
        *(_DWORD *)v79 = v96;
        v80 = String.init<A>(reflecting:)();
        *(_QWORD *)(v79 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v80, v81, v115);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v77, v78, "Invalid container attribute value %s", (uint8_t *)v79, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }

      v75 = *(uint64_t (**)(uint64_t, uint64_t))(v114 + 8);
      v36 = v101;
LABEL_18:
      OUTLINED_FUNCTION_52(v36, v75);
    }
  }
  OUTLINED_FUNCTION_77_0(v107, v51, v52, v106);
LABEL_20:
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v34, &demangling cache variable for type metadata for IndexingIterator<AttributedString.Runs>);
  v83(v85, v94, v84);
  OUTLINED_FUNCTION_52_1();
}

uint64_t key path index equality operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t key path index hash operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return dispatch thunk of Hashable.hashValue.getter();
}

void specialized AttributeDynamicLookup.subscript.getter()
{
  lazy protocol witness table accessor for type ContainerAttribute and conformance ContainerAttribute();
  AttributeDynamicLookup.subscript.getter();
  __break(1u);
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return AttributeDynamicLookup.subscript.getter();
}

{
  return MEMORY[0x1E0C8ED20]();
}

{
  return MEMORY[0x1E0CAF960]();
}

{
  return MEMORY[0x1E0DC1A18]();
}

{
  return MEMORY[0x1E0CD81F8]();
}

{
  return MEMORY[0x1E0CAF970]();
}

void sub_1BD1B2A10()
{
  specialized AttributeDynamicLookup.subscript.getter();
}

uint64_t sub_1BD1B2A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return key path index equality operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, a3, &demangling cache variable for type metadata for KeyPath<AttributeScopes.ConversationKitAttributes, ContainerAttribute>) & 1;
}

uint64_t sub_1BD1B2A48(uint64_t a1, uint64_t a2)
{
  return key path index hash operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, &demangling cache variable for type metadata for KeyPath<AttributeScopes.ConversationKitAttributes, ContainerAttribute>);
}

unint64_t lazy protocol witness table accessor for type ContainerAttribute and conformance ContainerAttribute()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContainerAttribute and conformance ContainerAttribute;
  if (!lazy protocol witness table cache variable for type ContainerAttribute and conformance ContainerAttribute)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContainerAttribute, &type metadata for ContainerAttribute);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContainerAttribute and conformance ContainerAttribute);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContainerAttribute and conformance ContainerAttribute;
  if (!lazy protocol witness table cache variable for type ContainerAttribute and conformance ContainerAttribute)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContainerAttribute, &type metadata for ContainerAttribute);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContainerAttribute and conformance ContainerAttribute);
  }
  return result;
}

BOOL ContainerAttribute.Value.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of ContainerAttribute.Value.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t ContainerAttribute.Value.rawValue.getter()
{
  return 0x7553656369746F6ELL;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance ContainerAttribute.Value@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = ContainerAttribute.Value.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ContainerAttribute.Value(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "noticeSubject");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t protocol witness for Decodable.init(from:) in conformance ContainerAttribute.Value()
{
  lazy protocol witness table accessor for type ContainerAttribute.Value and conformance ContainerAttribute.Value();
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ContainerAttribute.Value()
{
  lazy protocol witness table accessor for type ContainerAttribute.Value and conformance ContainerAttribute.Value();
  return RawRepresentable<>.encode(to:)();
}

char *ContainerAttribute.name.unsafeMutableAddressor()
{
  return static ContainerAttribute.name;
}

uint64_t static ContainerAttribute.name.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  v0 = *(_QWORD *)static ContainerAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static ContainerAttribute.name.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)static ContainerAttribute.name = a1;
  *(_QWORD *)&static ContainerAttribute.name[8] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ContainerAttribute.name.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t protocol witness for static AttributedStringKey.name.getter in conformance ContainerAttribute()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = *(_QWORD *)static ContainerAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t protocol witness for static DecodableAttributedStringKey.decode(from:) in conformance ContainerAttribute()
{
  lazy protocol witness table accessor for type ContainerAttribute.Value and conformance ContainerAttribute.Value();
  return static DecodableAttributedStringKey<>.decode(from:)();
}

uint64_t protocol witness for static EncodableAttributedStringKey.encode(_:to:) in conformance ContainerAttribute()
{
  lazy protocol witness table accessor for type ContainerAttribute.Value and conformance ContainerAttribute.Value();
  return static EncodableAttributedStringKey<>.encode(_:to:)();
}

uint64_t protocol witness for static MarkdownDecodableAttributedStringKey.decodeMarkdown(from:) in conformance ContainerAttribute()
{
  lazy protocol witness table accessor for type ContainerAttribute and conformance ContainerAttribute();
  return static MarkdownDecodableAttributedStringKey<>.decodeMarkdown(from:)();
}

void protocol witness for static DecodingConfigurationProviding.decodingConfiguration.getter in conformance AttributeScopes.ConversationKitAttributes()
{
  lazy protocol witness table accessor for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes();
  JUMPOUT(0x1C3B6F980);
}

void protocol witness for static EncodingConfigurationProviding.encodingConfiguration.getter in conformance AttributeScopes.ConversationKitAttributes()
{
  lazy protocol witness table accessor for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes();
  JUMPOUT(0x1C3B6F98CLL);
}

unint64_t lazy protocol witness table accessor for type ContainerAttribute.Value and conformance ContainerAttribute.Value()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value;
  if (!lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContainerAttribute.Value, &type metadata for ContainerAttribute.Value);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value;
  if (!lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContainerAttribute.Value, &type metadata for ContainerAttribute.Value);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value;
  if (!lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContainerAttribute.Value, &type metadata for ContainerAttribute.Value);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value;
  if (!lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContainerAttribute.Value, &type metadata for ContainerAttribute.Value);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value;
  if (!lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ContainerAttribute.Value, &type metadata for ContainerAttribute.Value);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ContainerAttribute.Value and conformance ContainerAttribute.Value);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes;
  if (!lazy protocol witness table cache variable for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AttributeScopes.ConversationKitAttributes, &type metadata for AttributeScopes.ConversationKitAttributes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes;
  if (!lazy protocol witness table cache variable for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AttributeScopes.ConversationKitAttributes, &type metadata for AttributeScopes.ConversationKitAttributes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes;
  if (!lazy protocol witness table cache variable for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AttributeScopes.ConversationKitAttributes, &type metadata for AttributeScopes.ConversationKitAttributes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes);
  }
  return result;
}

void type metadata accessor for ContainerAttribute()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ContainerAttribute.Value(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD1B3048 + 4 * asc_1BD64EA30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD1B3068 + 4 * byte_1BD64EA35[v4]))();
}

_BYTE *sub_1BD1B3048(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD1B3068(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD1B3070(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD1B3078(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD1B3080(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD1B3088(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for ContainerAttribute.Value()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for AttributeScopes.ConversationKitAttributes()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t CallDetailsCoordinator.isPresentingDetails.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t result;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController);
  result = (uint64_t)objc_msgSend(v1, sel_view);
  if (result)
  {
    v3 = (void *)result;
    v4 = objc_msgSend((id)result, sel_superview);

    if (v4)
    {
      result = (uint64_t)objc_msgSend(v1, sel_presentingViewController);
      if (result)
      {

        return 1;
      }
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id CallDetailsCoordinator.isCaptioningEnabled.getter()
{
  void *Strong;
  id v1;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  if ((objc_msgSend(Strong, sel_respondsToSelector_, sel_isCaptioningEnabled) & 1) != 0)
    v1 = objc_msgSend(Strong, sel_isCaptioningEnabled);
  else
    v1 = 0;
  swift_unknownObjectRelease();
  return v1;
}

Swift::Void __swiftcall CallDetailsCoordinator.captioningStateDidChange()()
{
  uint64_t v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                          + OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController))
                    + 0xD8))();
  OUTLINED_FUNCTION_0();
}

uint64_t CallDetailsCoordinator.shouldHideViewsFromScreenSharing.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNKCallDetailsCoordinatorInternal_shouldHideViewsFromScreenSharing);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

void CallDetailsCoordinator.shouldHideViewsFromScreenSharing.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR___CNKCallDetailsCoordinatorInternal_shouldHideViewsFromScreenSharing);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  CallDetailsCoordinator.shouldHideViewsFromScreenSharing.didset(v4);
}

void CallDetailsCoordinator.shouldHideViewsFromScreenSharing.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR___CNKCallDetailsCoordinatorInternal_shouldHideViewsFromScreenSharing);
  swift_beginAccess();
  if (*v3 != v2)
    CallDetailsCoordinator.updateViewVisibilityForScreenSharing()();
}

void (*CallDetailsCoordinator.shouldHideViewsFromScreenSharing.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR___CNKCallDetailsCoordinatorInternal_shouldHideViewsFromScreenSharing);
  OUTLINED_FUNCTION_2_0();
  *((_BYTE *)v3 + 32) = *v4;
  return CallDetailsCoordinator.shouldHideViewsFromScreenSharing.modify;
}

void CallDetailsCoordinator.shouldHideViewsFromScreenSharing.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  CallDetailsCoordinator.shouldHideViewsFromScreenSharing.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

char *CallDetailsCoordinator.__allocating_init(hostViewController:controlsManager:deferredPresentationManager:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _BYTE *v5;

  v1 = objc_allocWithZone(v0);
  swift_getObjectType();
  v2 = (void *)OUTLINED_FUNCTION_9_55();
  return OUTLINED_FUNCTION_2_73(v2, v3, v4, v5);
}

char *CallDetailsCoordinator.init(hostViewController:controlsManager:deferredPresentationManager:)()
{
  void *v0;
  void *v1;
  uint64_t v2;
  _BYTE *v3;

  swift_getObjectType();
  v0 = (void *)OUTLINED_FUNCTION_9_55();
  return OUTLINED_FUNCTION_2_73(v0, v1, v2, v3);
}

id static CallDetailsCoordinator.makeDetailsNavigationController(using:)(void *a1)
{
  id v2;
  _QWORD *v3;
  id v4;
  void (*v5)(id, _UNKNOWN **);
  id v6;

  v2 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDDetailsNavigationController());
  v3 = a1;
  v4 = ConversationHUDDetailsNavigationController.init(controlsManager:shouldHaveBackgroundMaterial:)((uint64_t)v3, 1);
  objc_msgSend(v4, sel_setOverrideUserInterfaceStyle_, 2);
  v5 = *(void (**)(id, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x450);
  v6 = v4;
  v5(v4, &protocol witness table for ConversationHUDDetailsNavigationController);
  return v6;
}

Swift::Void __swiftcall CallDetailsCoordinator.start(withReason:)(Swift::String withReason)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint8_t *v13;
  const char *v14;
  unsigned int v15;
  uint64_t v16;
  void *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  _QWORD *v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  NSObject *loga;
  os_log_t log;
  NSObject *logb;
  uint64_t v39;

  OUTLINED_FUNCTION_16_41();
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((OUTLINED_FUNCTION_8_57(v3) & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
    loga = Logger.logObject.getter();
    v5 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_5_9(v5, v6, v7, v8, v9, v10, v11, v12, v35, loga))
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v13 = 0;
      v14 = "Ignoring request to start CallDetailsCoordinator because call details are already being presented";
      goto LABEL_15;
    }
LABEL_16:

    return;
  }
  v15 = objc_msgSend((id)OUTLINED_FUNCTION_20_41(), sel_isReadyToShowCallDetails);
  swift_unknownObjectRelease();
  if (!v15)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v23 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v23, (uint64_t)&static Logger.conversationControls);
    logb = Logger.logObject.getter();
    v24 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_5_9(v24, v25, v26, v27, v28, v29, v30, v31, v35, logb))
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v13 = 0;
      v14 = "Ignoring request to start CallDetailsCoordinator because the host view controller isn't ready";
LABEL_15:
      _os_log_impl(&dword_1BD004000, log, (os_log_type_t)v1, v14, v13, 2u);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_16;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v16 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_6_55();
  v17 = (void *)Logger.logObject.getter();
  v18 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_7_9(v18))
  {
    OUTLINED_FUNCTION_105();
    v39 = OUTLINED_FUNCTION_105();
    v19 = OUTLINED_FUNCTION_3_71(4.8149e-34);
    OUTLINED_FUNCTION_17_42(v19, v20, &v39);
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_18_45();
    OUTLINED_FUNCTION_14_4(&dword_1BD004000, v21, v22, "Presenting call details with reason: “%s”");
    OUTLINED_FUNCTION_19_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_12_15();
  v32 = (_QWORD *)OUTLINED_FUNCTION_20_41();
  (*(void (**)(_QWORD))((*v2 & *v32) + 0x330))(0);

  v33 = *(_QWORD **)(v1 + OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController);
  (*(void (**)(uint64_t))((*v2 & *v33) + 0x90))(1);
  CallDetailsCoordinator.updateViewVisibilityForScreenSharing()();
  v34 = (void *)OUTLINED_FUNCTION_20_41();
  objc_msgSend(v34, sel_presentViewController_animated_completion_, v33, 1, 0);

}

Swift::Void __swiftcall CallDetailsCoordinator.stop(withReason:)(Swift::String withReason)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t aBlock[6];

  OUTLINED_FUNCTION_16_41();
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((OUTLINED_FUNCTION_8_57(v3) & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
    OUTLINED_FUNCTION_6_55();
    v5 = (void *)Logger.logObject.getter();
    v6 = static os_log_type_t.info.getter();
    if (OUTLINED_FUNCTION_7_9(v6))
    {
      OUTLINED_FUNCTION_105();
      aBlock[0] = OUTLINED_FUNCTION_105();
      v7 = OUTLINED_FUNCTION_3_71(4.8149e-34);
      OUTLINED_FUNCTION_17_42(v7, v8, aBlock);
      OUTLINED_FUNCTION_13_2();
      OUTLINED_FUNCTION_18_45();
      OUTLINED_FUNCTION_14_4(&dword_1BD004000, v9, v10, "Dismissing call details with reason: “%s”");
      OUTLINED_FUNCTION_19_6();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_12_15();
    v11 = *(_QWORD **)(v1 + OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController);
    (*(void (**)(_QWORD))((*v2 & *v11) + 0x90))(0);
    v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = (uint64_t)partial apply for closure #1 in CallDetailsCoordinator.stop(withReason:);
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = (uint64_t)&block_descriptor_31;
    v13 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v11, sel_dismissViewControllerAnimated_completion_, 1, v13);
    _Block_release(v13);
  }
}

void closure #1 in CallDetailsCoordinator.stop(withReason:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    CallDetailsCoordinator.updateViewVisibilityForScreenSharing()();

  }
}

uint64_t @objc CallDetailsCoordinator.start(withReason:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v8 = v7;
  v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease();
}

void CallDetailsCoordinator.updateViewVisibilityForScreenSharing()()
{
  uint64_t *v0;
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((OUTLINED_FUNCTION_14_7(*v0) & 1) != 0
    && (v3 = *(_QWORD **)((char *)v0 + OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController),
        ((*(uint64_t (**)(void))((*v2 & *v3) + 0x88))() & 1) != 0))
  {
    v4 = objc_msgSend(v3, sel_view);
    if (v4)
    {
      v5 = v4;
      v8 = objc_msgSend(v4, sel_layer);

      objc_msgSend(v8, sel_setDisableUpdateMask_, 16);
LABEL_7:

      return;
    }
  }
  else
  {
    v6 = objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController), sel_view);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, sel_layer);

      objc_msgSend(v8, sel_setDisableUpdateMask_, 0);
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall CallDetailsCoordinator.wantsDismissal()()
{
  _QWORD *v0;

  (*(void (**)(unint64_t, unint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))(0xD000000000000013, 0x80000001BD679950);
}

id CallDetailsCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CallDetailsCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CallDetailsCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallDetailsCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *specialized CallDetailsCoordinator.init(hostViewController:controlsManager:deferredPresentationManager:)(void *a1, void *a2, uint64_t a3, _BYTE *a4)
{
  char *v7;
  char *v8;
  _QWORD *v9;
  void (*v10)(char *);
  char *v11;
  _QWORD *v12;
  objc_super v14;

  swift_getObjectType();
  a4[OBJC_IVAR___CNKCallDetailsCoordinatorInternal_shouldHideViewsFromScreenSharing] = 0;
  swift_unknownObjectUnownedInit();
  swift_unknownObjectUnownedInit();
  swift_unknownObjectUnownedInit();
  v7 = a4;
  *(_QWORD *)&v7[OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController] = static CallDetailsCoordinator.makeDetailsNavigationController(using:)(a2);

  v14.receiver = v7;
  v14.super_class = (Class)type metadata accessor for CallDetailsCoordinator();
  v8 = (char *)objc_msgSendSuper2(&v14, sel_init);
  v9 = *(_QWORD **)&v8[OBJC_IVAR___CNKCallDetailsCoordinatorInternal_detailsNavigationController];
  v10 = *(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x78);
  v11 = v8;
  v12 = v9;
  v10(v8);

  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_1BD1B3FE0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallDetailsCoordinator.stop(withReason:)()
{
  uint64_t v0;

  closure #1 in CallDetailsCoordinator.stop(withReason:)(v0);
}

uint64_t type metadata accessor for CallDetailsCoordinator()
{
  return objc_opt_self();
}

void sub_1BD1B402C(uint64_t **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = OUTLINED_FUNCTION_14_7(**a1) & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD1B4064(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x98))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for CallDetailsCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallDetailsCoordinator.isPresentingDetails.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CallDetailsCoordinator.isCaptioningEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CallDetailsCoordinator.captioningStateDidChange()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CallDetailsCoordinator.shouldHideViewsFromScreenSharing.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CallDetailsCoordinator.shouldHideViewsFromScreenSharing.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CallDetailsCoordinator.shouldHideViewsFromScreenSharing.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CallDetailsCoordinator.__allocating_init(hostViewController:controlsManager:deferredPresentationManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of CallDetailsCoordinator.start(withReason:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CallDetailsCoordinator.stop(withReason:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CallDetailsCoordinator.wantsDismissal()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t outlined destroy of unowned CNKCallDetailsDeferredPresentationManager(uint64_t a1)
{
  swift_unknownObjectUnownedDestroy();
  return a1;
}

void @nonobjc UIVisualEffect.init(combiningEffects:)(uint64_t a1)
{
  NSArray v1;
  id v2;

  if (a1)
  {
    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIVisualEffect);
    v1.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v1.super.isa = 0;
  }
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_effectCombiningEffects_, v1.super.isa);

  OUTLINED_FUNCTION_18();
}

__n128 BezelMetrics.aspectRatio.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 32);
  result = *(__n128 *)v1;
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t BezelMetrics.aspectRatio.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined init with take of AspectRatio(a1, v1);
}

uint64_t (*BezelMetrics.aspectRatio.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double BezelMetrics.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void BezelMetrics.cornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*BezelMetrics.cornerRadius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double BezelMetrics.init(aspectRatio:cornerRadius:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  char v5;
  double result;
  __int128 v7;
  _OWORD v8[2];
  char v9;

  outlined init with take of AspectRatio(a1, (uint64_t)v8);
  v5 = v9;
  result = *(double *)v8;
  v7 = v8[1];
  *(_OWORD *)a2 = v8[0];
  *(_OWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 32) = v5;
  *(double *)(a2 + 40) = a3;
  return result;
}

double BezelMetrics.scaledBounds(in:orientation:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  _BOOL8 IsPortrait;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  double v16;
  BOOL v17;
  double v18;
  _BYTE v20[40];
  double v21;
  double v22;
  double v23;
  double v24;
  char v25;

  IsPortrait = UIInterfaceOrientationIsPortrait(a1);
  if (IsPortrait)
  {
    v9 = OUTLINED_FUNCTION_5_66(IsPortrait, (uint64_t)v20);
    OUTLINED_FUNCTION_10_61(v9, v10);
    v11 = 1.0;
    v12 = 1.0;
    if ((v25 & 1) == 0)
    {
      v11 = v21;
      v12 = v22;
    }
  }
  else
  {
    v13 = OUTLINED_FUNCTION_5_66(IsPortrait, (uint64_t)v20);
    OUTLINED_FUNCTION_10_61(v13, v14);
    v11 = 1.0;
    v12 = 1.0;
    if ((v25 & 1) == 0)
    {
      v11 = v23;
      v12 = v24;
    }
  }
  static ProposedViewSize.unspecified.getter();
  if ((static ProposedViewSize.== infix(_:_:)() & 1) == 0)
  {
    v15 = a4 == 0.0 && v11 == 0.0;
    v16 = a4 / v11;
    if (v15)
      v16 = INFINITY;
    v17 = a5 == 0.0 && v12 == 0.0;
    v18 = a5 / v12;
    if (v17)
      v18 = INFINITY;
    if (v18 >= v16)
      v18 = v16;
    CGSize.scaled(by:)(v18, v11);
  }
  return a2;
}

double BezelMetrics.scaledCornerRadius(in:orientation:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  _BOOL8 IsPortrait;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  char v38;

  IsPortrait = UIInterfaceOrientationIsPortrait(a1);
  if (IsPortrait)
  {
    v12 = OUTLINED_FUNCTION_5_66(IsPortrait, (uint64_t)&v31);
    OUTLINED_FUNCTION_11_53(v12, v13, v14, v15, v16, v17, v18, v19, v31, v32, v33, v34, v35, SLOBYTE(v36));
    if (v38)
      v20 = 1.0;
    else
      v20 = v36;
  }
  else
  {
    v21 = OUTLINED_FUNCTION_5_66(IsPortrait, (uint64_t)&v31);
    OUTLINED_FUNCTION_11_53(v21, v22, v23, v24, v25, v26, v27, v28, v31, v32, v33, v34, v35, SLOBYTE(v36));
    v20 = 1.0;
    if ((v38 & 1) == 0)
      v20 = v37;
  }
  BezelMetrics.scaledBounds(in:orientation:)(a1, a2, a3, a4, a5);
  return *(double *)(v5 + 40) * (v29 / v20);
}

double one-time initialization function for forCurrentDisplay()
{
  double result;
  _OWORD v1[2];
  __int128 v2;

  closure #1 in variable initialization expression of static BezelMetrics.forCurrentDisplay((uint64_t)v1);
  static BezelMetrics.forCurrentDisplay = v1[0];
  unk_1EF4FCBA0 = v1[1];
  result = *(double *)&v2;
  xmmword_1EF4FCBB0 = v2;
  return result;
}

void closure #1 in variable initialization expression of static BezelMetrics.forCurrentDisplay(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  v3 = objc_msgSend(v2, sel_fixedCoordinateSpace);

  objc_msgSend(v3, sel_bounds);
  v5 = v4;
  v7 = v6;
  swift_unknownObjectRelease();
  if (v7 >= v5)
    v8 = v5;
  else
    v8 = v7;
  if (v7 >= v5)
    v9 = v7;
  else
    v9 = v5;
  if (v5 >= v7)
    v10 = v5;
  else
    v10 = v7;
  if (v5 < v7)
    v7 = v5;
  v11 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  objc_msgSend(v11, sel_displayCornerRadius);
  v13 = v12;

  *(double *)a1 = v8;
  *(double *)(a1 + 8) = v9;
  *(double *)(a1 + 16) = v10;
  *(double *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v13;
}

__int128 *BezelMetrics.forCurrentDisplay.unsafeMutableAddressor()
{
  if (one-time initialization token for forCurrentDisplay != -1)
    swift_once();
  return &static BezelMetrics.forCurrentDisplay;
}

double static BezelMetrics.forCurrentDisplay.getter@<D0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  __int128 v4;
  double result;

  if (one-time initialization token for forCurrentDisplay != -1)
    swift_once();
  v2 = xmmword_1EF4FCBB0;
  v3 = *((_QWORD *)&xmmword_1EF4FCBB0 + 1);
  v4 = unk_1EF4FCBA0;
  *(_OWORD *)a1 = static BezelMetrics.forCurrentDisplay;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 40) = v3;
  OUTLINED_FUNCTION_0();
  return result;
}

void BezelMetrics.init(size:cornerRadius:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a2;
  *(double *)(a1 + 24) = a3;
  *(_BYTE *)(a1 + 32) = 0;
  *(double *)(a1 + 40) = a4;
}

BOOL static BezelEffect.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void BezelEffect.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void BezelEffect.hashValue.getter()
{
  unsigned __int8 v0;

  OUTLINED_FUNCTION_7_65();
  Hasher._combine(_:)(v0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance BezelEffect(char *a1, char *a2)
{
  return static BezelEffect.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance BezelEffect()
{
  BezelEffect.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance BezelEffect(uint64_t a1)
{
  unsigned __int8 *v1;

  BezelEffect.hash(into:)(a1, *v1);
}

BOOL static BezelShieldMaterial.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void BezelShieldMaterial.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

void BezelShieldMaterial.hashValue.getter()
{
  char v0;

  OUTLINED_FUNCTION_7_65();
  Hasher._combine(_:)(v0 & 1);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance BezelShieldMaterial(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static BezelShieldMaterial.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance BezelShieldMaterial()
{
  BezelShieldMaterial.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance BezelShieldMaterial(uint64_t a1)
{
  char *v1;

  BezelShieldMaterial.hash(into:)(a1, *v1);
}

void *BezelShieldMaterialKey.defaultValue.unsafeMutableAddressor()
{
  return &static BezelShieldMaterialKey.defaultValue;
}

uint64_t static BezelShieldMaterialKey.defaultValue.getter()
{
  return 0;
}

uint64_t protocol witness for static EnvironmentKey._valuesEqual(_:_:) in conformance BezelShieldMaterialKey()
{
  lazy protocol witness table accessor for type BezelShieldMaterial and conformance BezelShieldMaterial();
  return static EnvironmentKey<>._valuesEqual(_:_:)();
}

uint64_t EnvironmentValues.bezelShieldMaterial.getter()
{
  unsigned __int8 v1;

  lazy protocol witness table accessor for type BezelShieldMaterialKey and conformance BezelShieldMaterialKey();
  OUTLINED_FUNCTION_6_56();
  return v1;
}

uint64_t key path getter for EnvironmentValues.bezelShieldMaterial : EnvironmentValues@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.bezelShieldMaterial.getter();
  *a1 = result;
  return result;
}

void key path setter for EnvironmentValues.bezelShieldMaterial : EnvironmentValues()
{
  EnvironmentValues.bezelShieldMaterial.setter();
}

void EnvironmentValues.bezelShieldMaterial.setter()
{
  lazy protocol witness table accessor for type BezelShieldMaterialKey and conformance BezelShieldMaterialKey();
  OUTLINED_FUNCTION_12_48();
  OUTLINED_FUNCTION_3_1();
}

void (*EnvironmentValues.bezelShieldMaterial.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = lazy protocol witness table accessor for type BezelShieldMaterialKey and conformance BezelShieldMaterialKey();
  OUTLINED_FUNCTION_6_56();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return EnvironmentValues.bezelShieldMaterial.modify;
}

void EnvironmentValues.bezelShieldMaterial.modify(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  OUTLINED_FUNCTION_12_48();
  OUTLINED_FUNCTION_0();
}

void View.bezelShieldMaterial(_:)()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_13_51();
  swift_release();
  OUTLINED_FUNCTION_49_0();
}

uint64_t one-time initialization function for defaultValue()
{
  uint64_t result;

  result = static Color.blue.getter();
  static BezelOutlineColorKey.defaultValue = result;
  return result;
}

{
  uint64_t result;

  result = static Platform.current.getter();
  static LayoutIdiomEnvironmentKey.defaultValue = (result - 4) < 0xFDu;
  return result;
}

uint64_t *BezelOutlineColorKey.defaultValue.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultValue != -1)
    swift_once();
  return &static BezelOutlineColorKey.defaultValue;
}

uint64_t protocol witness for static EnvironmentKey.defaultValue.getter in conformance BezelOutlineColorKey@<X0>(uint64_t *a1@<X8>)
{
  *a1 = *BezelOutlineColorKey.defaultValue.unsafeMutableAddressor();
  return swift_retain();
}

uint64_t protocol witness for static EnvironmentKey._valuesEqual(_:_:) in conformance BezelOutlineColorKey()
{
  lazy protocol witness table accessor for type Color and conformance Color();
  return static EnvironmentKey<>._valuesEqual(_:_:)();
}

uint64_t EnvironmentValues.bezelOutlineColor.getter()
{
  uint64_t v1;

  lazy protocol witness table accessor for type BezelOutlineColorKey and conformance BezelOutlineColorKey();
  OUTLINED_FUNCTION_6_56();
  return v1;
}

uint64_t key path getter for EnvironmentValues.bezelOutlineColor : EnvironmentValues@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.bezelOutlineColor.getter();
  *a1 = result;
  return result;
}

void key path setter for EnvironmentValues.bezelOutlineColor : EnvironmentValues()
{
  swift_retain();
  EnvironmentValues.bezelOutlineColor.setter();
}

void EnvironmentValues.bezelOutlineColor.setter()
{
  lazy protocol witness table accessor for type BezelOutlineColorKey and conformance BezelOutlineColorKey();
  OUTLINED_FUNCTION_12_48();
  OUTLINED_FUNCTION_3_1();
}

uint64_t (*EnvironmentValues.bezelOutlineColor.modify(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = lazy protocol witness table accessor for type BezelOutlineColorKey and conformance BezelOutlineColorKey();
  OUTLINED_FUNCTION_6_56();
  return EnvironmentValues.bezelOutlineColor.modify;
}

uint64_t EnvironmentValues.bezelOutlineColor.modify(_QWORD *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0)
    return OUTLINED_FUNCTION_8_58();
  swift_retain();
  OUTLINED_FUNCTION_8_58();
  return swift_release();
}

void View.bezelOutlineColor(_:)()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_13_51();
  swift_release();
  OUTLINED_FUNCTION_49_0();
}

id HitTestPassthroughLayer.init()()
{
  void *v0;
  id v1;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for HitTestPassthroughLayer();
  v1 = objc_msgSendSuper2(&v3, sel_init);
  objc_msgSend(v1, sel_setAllowsHitTesting_, 0);
  return v1;
}

void HitTestPassthroughLayer.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1BD1B4D20(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void HitTestPassthroughLayer.init(layer:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void HitTestPassthroughLayer.__deallocating_deinit()
{
  HitTestPassthroughLayer.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for HitTestPassthroughLayer);
}

uint64_t static HitTestPassthroughView.layerClass.getter()
{
  return type metadata accessor for HitTestPassthroughLayer();
}

id HitTestPassthroughView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  objc_super v11;

  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for HitTestPassthroughView();
  v9 = objc_msgSendSuper2(&v11, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v9, sel_setUserInteractionEnabled_, 0);
  return v9;
}

void HitTestPassthroughView.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1BD1B4F0C(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void HitTestPassthroughView.__deallocating_deinit()
{
  HitTestPassthroughLayer.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for HitTestPassthroughView);
}

uint64_t @objc static HitTestPassthroughView.layerClass.getter(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_getObjCClassMetadata();
  a3();
  return swift_getObjCClassFromMetadata();
}

uint64_t static BackdropView.layerClass.getter()
{
  return _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CABackdropLayer);
}

uint64_t BackdropView.backdropLayer.getter()
{
  void *v0;
  id v1;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_layer);
  objc_opt_self();
  result = swift_dynamicCastObjCClass();
  if (!result)
  {

    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

id BackdropView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for BackdropView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id BackdropView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for BackdropView();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

void BackdropView.__deallocating_deinit()
{
  HitTestPassthroughLayer.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for BackdropView);
}

void BezelShieldMaterial.shieldEffect.getter(char a1)
{
  void *v2;
  const char *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[5];

  v2 = (void *)objc_opt_self();
  v3 = sel_effectWithBlurRadius_;
  if ((a1 & 1) != 0)
    goto LABEL_6;
  v4 = objc_msgSend(v2, sel_effectWithBlurRadius_, 72.0);
  if (!v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = v4;
  v20[0] = xmmword_1BD64EE10;
  v20[1] = xmmword_1BD64EE20;
  v20[2] = xmmword_1BD64EE30;
  v20[3] = xmmword_1BD64EE40;
  v20[4] = xmmword_1BD647E20;
  v6 = objc_msgSend((id)objc_opt_self(), sel__colorEffectCAMatrix_, v20);
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = v6;
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIVisualEffect);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v8 + 32) = v5;
  *(_QWORD *)(v8 + 40) = v7;
  *(_QWORD *)&v20[0] = v8;
  specialized Array._endMutation()();
  v9 = *(_QWORD *)&v20[0];
  v10 = v5;
  v11 = v7;
  @nonobjc UIVisualEffect.init(combiningEffects:)(v9);
  if (v2)
  {
LABEL_8:

    return;
  }
  __break(1u);
LABEL_6:
  v12 = objc_msgSend(v2, v3, 20.0);
  if (!v12)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v13 = v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v15 = objc_msgSend(v14, sel_colorWithAlphaComponent_, 0.2);

  v16 = objc_msgSend((id)objc_opt_self(), sel_colorEffectSubtract_, v15);
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIVisualEffect);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v17 + 32) = v13;
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)&v20[0] = v17;
  specialized Array._endMutation()();
  v18 = *(_QWORD *)&v20[0];
  v11 = v16;
  v10 = v13;
  @nonobjc UIVisualEffect.init(combiningEffects:)(v18);
  if (v19)
    goto LABEL_8;
LABEL_12:
  __break(1u);
}

id BezelShieldEffectView.effectView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView____lazy_storage___effectView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView____lazy_storage___effectView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView____lazy_storage___effectView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id BezelShieldEffectView.init()()
{
  _BYTE *v0;
  id v1;
  id v2;
  objc_super v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView____lazy_storage___effectView] = 0;
  v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_material] = 0;
  v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_isActive] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_customCornerRadius] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for BezelShieldEffectView();
  v1 = objc_msgSendSuper2(&v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = BezelShieldEffectView.effectView.getter();
  objc_msgSend(v1, sel_addSubview_, v2);

  return v1;
}

void BezelShieldEffectView.init(coder:)()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView____lazy_storage___effectView] = 0;
  v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_material] = 0;
  v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_isActive] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_customCornerRadius] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void BezelShieldEffectView.layoutSubviews()()
{
  void *v0;
  id v1;
  double Width;
  id v3;
  double MidX;
  objc_super v5;
  CGRect v6;
  CGRect v7;
  CGRect v8;
  CGRect v9;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for BezelShieldEffectView();
  objc_msgSendSuper2(&v5, sel_layoutSubviews);
  v1 = BezelShieldEffectView.effectView.getter();
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v6);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setBounds_, 0.0, 0.0, Width, CGRectGetHeight(v7));

  v3 = BezelShieldEffectView.effectView.getter();
  objc_msgSend(v0, sel_bounds);
  MidX = CGRectGetMidX(v8);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v3, sel_setCenter_, MidX, CGRectGetMidY(v9));

}

void BezelShieldEffectView.updateVisualEffectView()()
{
  uint64_t v0;
  int v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_isActive);
  v5 = BezelShieldEffectView.effectView.getter();
  if (v1 == 1)
  {
    BezelShieldMaterial.shieldEffect.getter(*(_BYTE *)(v0
                                                     + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_material));
    v3 = v2;
    objc_msgSend(v5, sel_setEffect_, v2);

    v4 = v3;
  }
  else
  {
    objc_msgSend(v5, sel_setEffect_, 0);
    v4 = v5;
  }

}

void BezelShieldEffectView.__deallocating_deinit()
{
  HitTestPassthroughLayer.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for BezelShieldEffectView);
}

void BezelGlowEffectView.glowMaskBaseView.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___glowMaskBaseView, (uint64_t (*)(uint64_t))closure #1 in BezelGlowEffectView.glowMaskBaseView.getter);
}

id closure #1 in BezelGlowEffectView.glowMaskBaseView.getter(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Class isa;
  void *v9;
  char v10;
  double v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  CGAffineTransform v20;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v3 = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CAFilter);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  CAFilter.__allocating_init(type:)(v4, v5);
  v7 = v6;
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v9 = (void *)MEMORY[0x1C3B72E00](0xD000000000000013, 0x80000001BD671780);
  objc_msgSend(v7, sel_setValue_forKey_, isa, v9);

  v10 = static Platform.current.getter();
  v11 = 100.0;
  if (v10 == 1)
    v11 = 200.0;
  *(_QWORD *)&v20.d = MEMORY[0x1E0DEB070];
  v20.a = v11;
  __swift_project_boxed_opaque_existential_1(&v20, MEMORY[0x1E0DEB070]);
  v12 = _bridgeAnythingToObjectiveC<A>(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v13 = (void *)MEMORY[0x1C3B72E00](0x6461527475706E69, 0xEB00000000737569);
  objc_msgSend(v7, sel_setValue_forKey_, v12, v13);
  swift_unknownObjectRelease();

  v14 = objc_msgSend(v2, sel_layer);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(v15 + 56) = v3;
  *(_QWORD *)(v15 + 32) = v7;
  v16 = v7;
  outlined bridged method (mbnn) of @objc CALayer.filters.setter(v15, v14);

  v17 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v17, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  v18 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v18);

  CGAffineTransformMakeScale(&v20, *(CGFloat *)(a1+ OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_glowMaskBaseViewScale), *(CGFloat *)(a1+ OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_glowMaskBaseViewScale+ 8));
  objc_msgSend(v2, sel_setTransform_, &v20);

  return v2;
}

void BezelGlowEffectView.glowMaskCutoutView.getter()
{
  InCallControlsStatusCell.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___glowMaskCutoutView, (uint64_t (*)(void))closure #1 in BezelGlowEffectView.glowMaskCutoutView.getter);
}

id closure #1 in BezelGlowEffectView.glowMaskCutoutView.getter()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v1 = objc_msgSend(v0, sel_layer);
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CAFilter);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  CAFilter.__allocating_init(type:)(v2, v3);
  v5 = v4;
  objc_msgSend(v1, sel_setCompositingFilter_, v4);

  v6 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v6, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  v7 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v7);

  return v0;
}

void BezelGlowEffectView.glowMaskView.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___glowMaskView, (uint64_t (*)(uint64_t))closure #1 in BezelGlowEffectView.glowMaskView.getter);
}

id closure #1 in BezelGlowEffectView.glowMaskView.getter()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  BezelGlowEffectView.glowMaskBaseView.getter();
  v2 = v1;
  objc_msgSend(v0, sel_addSubview_, v1);

  BezelGlowEffectView.glowMaskCutoutView.getter();
  v4 = v3;
  objc_msgSend(v0, sel_addSubview_, v3);

  return v0;
}

void BezelGlowEffectView.backdropView.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___backdropView, (uint64_t (*)(uint64_t))closure #1 in BezelGlowEffectView.backdropView.getter);
}

id closure #1 in BezelGlowEffectView.backdropView.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  Class isa;
  void *v7;
  Class v8;
  void *v9;
  Class v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  _OWORD v28[5];

  type metadata accessor for BackdropView();
  v0 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v1 = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CAFilter);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  CAFilter.__allocating_init(type:)(v2, v3);
  v5 = v4;
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v7 = (void *)MEMORY[0x1C3B72E00](0xD000000000000013, 0x80000001BD671780);
  objc_msgSend(v5, sel_setValue_forKey_, isa, v7);

  v8 = Bool._bridgeToObjectiveC()().super.super.isa;
  v9 = (void *)MEMORY[0x1C3B72E00](0x7261487475706E69, 0xEE00736567644564);
  objc_msgSend(v5, sel_setValue_forKey_, v8, v9);

  v10 = Int._bridgeToObjectiveC()().super.super.isa;
  v11 = (void *)MEMORY[0x1C3B72E00](0x6461527475706E69, 0xEB00000000737569);
  objc_msgSend(v5, sel_setValue_forKey_, v10, v11);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  CAFilter.__allocating_init(type:)(v12, v13);
  v15 = v14;
  v28[0] = xmmword_1BD64EE50;
  v28[1] = xmmword_1BD64EE60;
  v28[2] = xmmword_1BD64EE70;
  v28[3] = xmmword_1BD64EE80;
  v28[4] = xmmword_1BD647E20;
  v16 = objc_msgSend((id)objc_opt_self(), sel_valueWithCAColorMatrix_, v28);
  v17 = (void *)MEMORY[0x1C3B72E00](0xD000000000000010, 0x80000001BD6717A0);
  objc_msgSend(v15, sel_setValue_forKey_, v16, v17);

  v18 = objc_msgSend(v0, sel_layer);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BD645380;
  *(_QWORD *)(v19 + 32) = v5;
  *(_QWORD *)(v19 + 88) = v1;
  *(_QWORD *)(v19 + 56) = v1;
  *(_QWORD *)(v19 + 64) = v15;
  v20 = v5;
  v21 = v15;
  outlined bridged method (mbnn) of @objc CALayer.filters.setter(v19, v18);

  v22 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v22, sel_setAllowsHitTesting_, 0);

  v23 = (void *)BackdropView.backdropLayer.getter();
  outlined bridged method (mbnn) of @objc CABackdropLayer.groupName.setter(0xD000000000000036, 0x80000001BD679F70, v23);

  v24 = v0;
  BezelGlowEffectView.glowMaskView.getter();
  v26 = v25;
  objc_msgSend(v24, sel_setMaskView_, v25);

  return v24;
}

void BezelShieldEffectView.customCornerRadius.didset(uint64_t (*a1)(void), _QWORD *a2, SEL *a3)
{
  uint64_t v3;
  id v6;

  v6 = (id)a1();
  objc_msgSend(v6, *a3, *(double *)(v3 + *a2));

}

void BezelGlowEffectView.customCornerRadius.didset()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  BezelGlowEffectView.glowMaskBaseView.getter();
  v2 = v1;
  v3 = OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_customCornerRadius;
  objc_msgSend(v1, sel__setContinuousCornerRadius_, *(double *)(v0+ OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_customCornerRadius));

  BezelGlowEffectView.glowMaskCutoutView.getter();
  v5 = v4;
  objc_msgSend(v4, sel__setContinuousCornerRadius_, *(double *)(v0 + v3));

}

id BezelGlowEffectView.init()()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  objc_super v5;

  *(_OWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_glowMaskBaseViewScale] = xmmword_1BD64EE90;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___glowMaskBaseView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___glowMaskCutoutView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___glowMaskView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___backdropView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_customAlpha] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_customCornerRadius] = 0;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for BezelGlowEffectView();
  v1 = objc_msgSendSuper2(&v5, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  BezelGlowEffectView.backdropView.getter();
  v3 = v2;
  objc_msgSend(v1, sel_addSubview_, v2);

  return v1;
}

void BezelGlowEffectView.layoutSubviews()()
{
  char *v0;
  void *v1;
  void *v2;
  CGFloat v3;
  void *v4;
  void *v5;
  double MidX;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  void *v32;
  void *v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  double v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  double v69;
  void *v70;
  void *v71;
  double v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  double v76;
  CGFloat v77;
  double v78;
  CGFloat v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  double v86;
  CGFloat v87;
  double v88;
  CGFloat v89;
  double v90;
  CGFloat v91;
  double v92;
  CGFloat v93;
  double v94;
  void *v95;
  void *v96;
  double v97;
  CGFloat v98;
  double v99;
  CGFloat v100;
  double v101;
  CGFloat v102;
  double v103;
  CGFloat v104;
  objc_super v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;

  v105.receiver = v0;
  v105.super_class = (Class)type metadata accessor for BezelGlowEffectView();
  objc_msgSendSuper2(&v105, sel_layoutSubviews);
  BezelGlowEffectView.backdropView.getter();
  v2 = v1;
  objc_msgSend(v0, sel_bounds);
  v3 = CGRectGetWidth(v106) + 200.0;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setBounds_, 0.0, 0.0, v3, CGRectGetHeight(v107) + 200.0);

  BezelGlowEffectView.backdropView.getter();
  v5 = v4;
  objc_msgSend(v0, sel_bounds);
  MidX = CGRectGetMidX(v108);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v5, sel_setCenter_, MidX, CGRectGetMidY(v109));

  BezelGlowEffectView.glowMaskView.getter();
  v8 = v7;
  BezelGlowEffectView.backdropView.getter();
  v10 = v9;
  objc_msgSend(v9, sel_bounds);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  objc_msgSend(v8, sel_setBounds_, v12, v14, v16, v18);
  BezelGlowEffectView.glowMaskView.getter();
  v20 = v19;
  BezelGlowEffectView.backdropView.getter();
  v22 = v21;
  objc_msgSend(v21, sel_bounds);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  v110.origin.x = v24;
  v110.origin.y = v26;
  v110.size.width = v28;
  v110.size.height = v30;
  v31 = CGRectGetMidX(v110);
  BezelGlowEffectView.backdropView.getter();
  v33 = v32;
  objc_msgSend(v32, sel_bounds);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;

  v111.origin.x = v35;
  v111.origin.y = v37;
  v111.size.width = v39;
  v111.size.height = v41;
  objc_msgSend(v20, sel_setCenter_, v31, CGRectGetMidY(v111));

  objc_msgSend(v0, sel_bounds);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v50 = *(double *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_glowMaskBaseViewScale];
  v51 = *(double *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_glowMaskBaseViewScale
                     + 8];
  static UnitPoint.center.getter();
  v54 = v45 + v49 * v53 - v49 * v51 * v53 - (v43 + v47 * v52 - v47 * v50 * v52);
  BezelGlowEffectView.glowMaskBaseView.getter();
  v56 = v55;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v56, sel_setBounds_);

  BezelGlowEffectView.glowMaskBaseView.getter();
  v58 = v57;
  BezelGlowEffectView.glowMaskView.getter();
  v60 = v59;
  objc_msgSend(v59, sel_bounds);
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v68 = v67;

  v112.origin.x = v62;
  v112.origin.y = v64;
  v112.size.width = v66;
  v112.size.height = v68;
  v69 = CGRectGetMidX(v112);
  BezelGlowEffectView.glowMaskView.getter();
  v71 = v70;
  objc_msgSend(v70, sel_bounds);
  v73 = v72;
  v75 = v74;
  v77 = v76;
  v79 = v78;

  v113.origin.x = v73;
  v113.origin.y = v75;
  v113.size.width = v77;
  v113.size.height = v79;
  objc_msgSend(v58, sel_setCenter_, v69, CGRectGetMidY(v113) - v54);

  BezelGlowEffectView.glowMaskCutoutView.getter();
  v81 = v80;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v81, sel_setBounds_);

  BezelGlowEffectView.glowMaskCutoutView.getter();
  v83 = v82;
  BezelGlowEffectView.glowMaskView.getter();
  v85 = v84;
  objc_msgSend(v84, sel_bounds);
  v87 = v86;
  v89 = v88;
  v91 = v90;
  v93 = v92;

  v114.origin.x = v87;
  v114.origin.y = v89;
  v114.size.width = v91;
  v114.size.height = v93;
  v94 = CGRectGetMidX(v114);
  BezelGlowEffectView.glowMaskView.getter();
  v96 = v95;
  objc_msgSend(v95, sel_bounds);
  v98 = v97;
  v100 = v99;
  v102 = v101;
  v104 = v103;

  v115.origin.x = v98;
  v115.origin.y = v100;
  v115.size.width = v102;
  v115.size.height = v104;
  objc_msgSend(v83, sel_setCenter_, v94, CGRectGetMidY(v115));

}

void BezelGlowEffectView.__ivar_destroyer()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___glowMaskBaseView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___glowMaskCutoutView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___glowMaskView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView____lazy_storage___backdropView));
}

void BezelGlowEffectView.__deallocating_deinit()
{
  HitTestPassthroughLayer.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for BezelGlowEffectView);
}

void BezelHighlightEffectView.highlightMaskView.getter()
{
  InCallControlsStatusCell.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView____lazy_storage___highlightMaskView, (uint64_t (*)(void))closure #1 in BezelHighlightEffectView.highlightMaskView.getter);
}

id closure #1 in BezelHighlightEffectView.highlightMaskView.getter()
{
  id v0;
  id v1;
  id v2;
  CGColorRef GenericGray;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v1 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v1, sel_setBorderWidth_, 1.0);

  v2 = objc_msgSend(v0, sel_layer);
  GenericGray = CGColorCreateGenericGray(1.0, 1.0);
  objc_msgSend(v2, sel_setBorderColor_, GenericGray);

  objc_msgSend(v0, sel_setBackgroundColor_, 0);
  return v0;
}

void BezelHighlightEffectView.backdropView.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView____lazy_storage___backdropView, (uint64_t (*)(uint64_t))closure #1 in BezelHighlightEffectView.backdropView.getter);
}

id closure #1 in BezelHighlightEffectView.backdropView.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  _OWORD v17[5];

  type metadata accessor for BackdropView();
  v0 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v1 = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CAFilter);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  CAFilter.__allocating_init(type:)(v2, v3);
  v5 = v4;
  v17[0] = xmmword_1BD64EEA0;
  v17[1] = xmmword_1BD64EEB0;
  v17[2] = xmmword_1BD64EEC0;
  v17[3] = xmmword_1BD64EED0;
  v17[4] = xmmword_1BD647E20;
  v6 = objc_msgSend((id)objc_opt_self(), sel_valueWithCAColorMatrix_, v17);
  v7 = (void *)MEMORY[0x1C3B72E00](0xD000000000000010, 0x80000001BD6717A0);
  objc_msgSend(v5, sel_setValue_forKey_, v6, v7);

  v8 = objc_msgSend(v0, sel_layer);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(v9 + 56) = v1;
  *(_QWORD *)(v9 + 32) = v5;
  v10 = v5;
  outlined bridged method (mbnn) of @objc CALayer.filters.setter(v9, v8);

  v11 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v11, sel_setAllowsHitTesting_, 0);

  v12 = (void *)BackdropView.backdropLayer.getter();
  outlined bridged method (mbnn) of @objc CABackdropLayer.groupName.setter(0xD000000000000036, 0x80000001BD679F70, v12);

  v13 = v0;
  BezelHighlightEffectView.highlightMaskView.getter();
  v15 = v14;
  objc_msgSend(v13, sel_setMaskView_, v14);

  return v13;
}

id BezelHighlightEffectView.init()()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  objc_super v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView____lazy_storage___highlightMaskView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView____lazy_storage___backdropView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView_customAlpha] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView_customCornerRadius] = 0;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for BezelHighlightEffectView();
  v1 = objc_msgSendSuper2(&v5, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  BezelHighlightEffectView.backdropView.getter();
  v3 = v2;
  objc_msgSend(v1, sel_addSubview_, v2);

  return v1;
}

void BezelHighlightEffectView.layoutSubviews()()
{
  void *v0;
  void *v1;
  void *v2;
  double Width;
  void *v4;
  void *v5;
  double MidX;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  void *v32;
  void *v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  objc_super v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v42.receiver = v0;
  v42.super_class = (Class)type metadata accessor for BezelHighlightEffectView();
  objc_msgSendSuper2(&v42, sel_layoutSubviews);
  BezelHighlightEffectView.backdropView.getter();
  v2 = v1;
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v43);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setBounds_, 0.0, 0.0, Width, CGRectGetHeight(v44));

  BezelHighlightEffectView.backdropView.getter();
  v5 = v4;
  objc_msgSend(v0, sel_bounds);
  MidX = CGRectGetMidX(v45);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v5, sel_setCenter_, MidX, CGRectGetMidY(v46));

  BezelHighlightEffectView.highlightMaskView.getter();
  v8 = v7;
  BezelHighlightEffectView.backdropView.getter();
  v10 = v9;
  objc_msgSend(v9, sel_bounds);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  objc_msgSend(v8, sel_setBounds_, v12, v14, v16, v18);
  BezelHighlightEffectView.highlightMaskView.getter();
  v20 = v19;
  BezelHighlightEffectView.backdropView.getter();
  v22 = v21;
  objc_msgSend(v21, sel_bounds);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  v47.origin.x = v24;
  v47.origin.y = v26;
  v47.size.width = v28;
  v47.size.height = v30;
  v31 = CGRectGetMidX(v47);
  BezelHighlightEffectView.backdropView.getter();
  v33 = v32;
  objc_msgSend(v32, sel_bounds);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;

  v48.origin.x = v35;
  v48.origin.y = v37;
  v48.size.width = v39;
  v48.size.height = v41;
  objc_msgSend(v20, sel_setCenter_, v31, CGRectGetMidY(v48));

}

void BezelHighlightEffectView.__ivar_destroyer()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView____lazy_storage___highlightMaskView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView____lazy_storage___backdropView));
}

void BezelHighlightEffectView.__deallocating_deinit()
{
  HitTestPassthroughLayer.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for BezelHighlightEffectView);
}

void BezelOutlineEffectView.outlineColor.setter(void *a1)
{
  void *v1;
  id v2;

  v2 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v2, sel_setBorderColor_, a1);

}

id BezelOutlineEffectView.init()()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35122BezelOutlineEffectView_customCornerRadius] = 0;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for BezelOutlineEffectView();
  v1 = objc_msgSendSuper2(&v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v2, sel_setBorderWidth_, 3.0);

  v3 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v3, sel_setBorderOffset_, 2.9);

  v4 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  v5 = objc_msgSend(v4, sel_CGColor);

  BezelOutlineEffectView.outlineColor.setter(v5);
  objc_msgSend(v1, sel_setBackgroundColor_, 0);

  return v1;
}

void BezelOutlineEffectView.__deallocating_deinit()
{
  HitTestPassthroughLayer.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for BezelOutlineEffectView);
}

void BezelEffectView.effects.didset(uint64_t a1)
{
  uint64_t v1;
  char v2;

  specialized static Set.== infix(_:_:)(*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_effects), a1);
  if ((v2 & 1) == 0)
    BezelEffectView.updateEffectViews(animated:)(1);
}

uint64_t BezelEffectView.effects.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_effects);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_effects) = a1;
  BezelEffectView.effects.didset(v2);
  return swift_bridgeObjectRelease();
}

id BezelEffectView.metrics.setter(_OWORD *a1)
{
  char *v1;
  char *v2;
  __int128 v3;

  v2 = &v1[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_metrics];
  v3 = a1[1];
  *(_OWORD *)v2 = *a1;
  *((_OWORD *)v2 + 1) = v3;
  *((_OWORD *)v2 + 2) = a1[2];
  return objc_msgSend(v1, sel_setNeedsLayout);
}

void BezelEffectView.bezelShieldMaterial.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)(v1
                       + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_shieldEffectView)
           + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_material) = a1 & 1;
  BezelShieldEffectView.updateVisualEffectView()();
}

char *BezelEffectView.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  objc_super v16;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_effects] = MEMORY[0x1E0DEE9E8];
  v1 = OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_metrics;
  v2 = one-time initialization token for forCurrentDisplay;
  v3 = v0;
  if (v2 != -1)
    swift_once();
  v4 = &v3[v1];
  v5 = xmmword_1EF4FCBB0;
  v6 = *((_QWORD *)&xmmword_1EF4FCBB0 + 1);
  v7 = unk_1EF4FCBA0;
  *(_OWORD *)v4 = static BezelMetrics.forCurrentDisplay;
  *((_OWORD *)v4 + 1) = v7;
  v4[32] = v5;
  *((_QWORD *)v4 + 5) = v6;
  v8 = OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_shieldEffectView;
  *(_QWORD *)&v3[v8] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BezelShieldEffectView()), sel_init);
  v9 = OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_glowEffectView;
  *(_QWORD *)&v3[v9] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BezelGlowEffectView()), sel_init);
  v10 = OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_highlightEffectView;
  *(_QWORD *)&v3[v10] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BezelHighlightEffectView()), sel_init);
  v11 = OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_outlineEffectView;
  *(_QWORD *)&v3[v11] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BezelOutlineEffectView()), sel_init);

  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for BezelEffectView();
  v12 = (char *)objc_msgSendSuper2(&v16, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_shieldEffectView];
  v14 = v12;
  objc_msgSend(v14, sel_addSubview_, v13);
  objc_msgSend(v14, sel_addSubview_, *(_QWORD *)&v14[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_glowEffectView]);
  objc_msgSend(v14, sel_addSubview_, *(_QWORD *)&v14[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_highlightEffectView]);
  objc_msgSend(v14, sel_addSubview_, *(_QWORD *)&v14[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_outlineEffectView]);
  BezelEffectView.updateEffectViews(animated:)(0);

  return v14;
}

id BezelEffectView.layoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  objc_super *v7;
  __int128 v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  objc_super v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  double MidX;
  double v31;
  double v32;
  double v33;
  objc_super v35[4];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;

  v1 = v0;
  v35[0].receiver = v0;
  v35[0].super_class = (Class)type metadata accessor for BezelEffectView();
  -[objc_super layoutSubviews](v35, sel_layoutSubviews);
  v2 = objc_msgSend(v0, sel_window);
  if (v2 && (v3 = v2, v4 = objc_msgSend(v2, sel_windowScene), v3, v4))
  {
    v5 = objc_msgSend(v4, sel_interfaceOrientation);

  }
  else
  {
    v6 = objc_msgSend(v1, sel_traitCollection);
    lazy protocol witness table accessor for type InterfaceOrientationTrait and conformance InterfaceOrientationTrait();
    lazy protocol witness table accessor for type UIInterfaceOrientation and conformance UIInterfaceOrientation();
    UITraitCollection.subscript.getter();

    v5 = (id)v36;
  }
  v7 = (objc_super *)&v1[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_metrics];
  v8 = *(_OWORD *)&v1[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_metrics
                    + 16];
  v36 = *(_OWORD *)&v1[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_metrics];
  v37 = v8;
  v38 = *(_OWORD *)&v1[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_metrics
                     + 32];
  objc_msgSend(v1, sel_bounds);
  v13 = BezelMetrics.scaledBounds(in:orientation:)((uint64_t)v5, v9, v10, v11, v12);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v20 = v7[1];
  v35[1] = *v7;
  v35[2] = v20;
  v35[3] = v7[2];
  objc_msgSend(v1, sel_bounds);
  v25 = BezelMetrics.scaledCornerRadius(in:orientation:)((uint64_t)v5, v21, v22, v23, v24);
  v26 = *(char **)&v1[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_shieldEffectView];
  *(double *)&v26[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_customCornerRadius] = v25;
  BezelShieldEffectView.customCornerRadius.didset((uint64_t (*)(void))BezelShieldEffectView.effectView.getter, &OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_customCornerRadius, (SEL *)&selRef__setContinuousCornerRadius_);
  v27 = *(char **)&v1[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_glowEffectView];
  *(double *)&v27[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_customCornerRadius] = v25;
  BezelGlowEffectView.customCornerRadius.didset();
  v28 = *(char **)&v1[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_highlightEffectView];
  *(double *)&v28[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView_customCornerRadius] = v25;
  BezelShieldEffectView.customCornerRadius.didset((uint64_t (*)(void))BezelHighlightEffectView.highlightMaskView.getter, &OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView_customCornerRadius, (SEL *)&selRef__setContinuousCornerRadius_);
  v29 = *(char **)&v1[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_outlineEffectView];
  *(double *)&v29[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35122BezelOutlineEffectView_customCornerRadius] = v25;
  objc_msgSend(v29, sel__setContinuousCornerRadius_, *(double *)&v29[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35122BezelOutlineEffectView_customCornerRadius]);
  objc_msgSend(v26, sel_setBounds_, v13, v15, v17, v19);
  objc_msgSend(v1, sel_bounds);
  MidX = CGRectGetMidX(v39);
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v26, sel_setCenter_, MidX, CGRectGetMidY(v40));
  objc_msgSend(v27, sel_setBounds_, v13, v15, v17, v19);
  objc_msgSend(v1, sel_bounds);
  v31 = CGRectGetMidX(v41);
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v27, sel_setCenter_, v31, CGRectGetMidY(v42));
  objc_msgSend(v28, sel_setBounds_, v13, v15, v17, v19);
  objc_msgSend(v1, sel_bounds);
  v32 = CGRectGetMidX(v43);
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v28, sel_setCenter_, v32, CGRectGetMidY(v44));
  objc_msgSend(v29, sel_setBounds_, v13, v15, v17, v19);
  objc_msgSend(v1, sel_bounds);
  v33 = CGRectGetMidX(v45);
  objc_msgSend(v1, sel_bounds);
  return objc_msgSend(v29, sel_setCenter_, v33, CGRectGetMidY(v46));
}

id BezelEffectView._updateEffectViewVisibility()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  void *v4;
  char v5;
  void *v6;
  char v7;
  char v8;
  char v9;
  void *v10;
  char v11;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_shieldEffectView);
  v2 = OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_effects;
  specialized Set.contains(_:)(0, *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_effects));
  objc_msgSend(v1, sel_setHidden_, (v3 & 1) == 0);
  v4 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_glowEffectView);
  specialized Set.contains(_:)(1u, *(_QWORD *)(v0 + v2));
  objc_msgSend(v4, sel_setHidden_, (v5 & 1) == 0);
  v6 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_highlightEffectView);
  specialized Set.contains(_:)(1u, *(_QWORD *)(v0 + v2));
  v8 = v7;
  v9 = 1;
  if ((v8 & 1) != 0)
    specialized Set.contains(_:)(2u, *(_QWORD *)(v0 + v2));
  objc_msgSend(v6, sel_setHidden_, v9 & 1);
  v10 = *(void **)(v0
                 + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_outlineEffectView);
  specialized Set.contains(_:)(2u, *(_QWORD *)(v0 + v2));
  return objc_msgSend(v10, sel_setHidden_, (v11 & 1) == 0);
}

void BezelEffectView._updateEffectViews()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  char v5;
  uint64_t v6;
  char v7;
  char *v8;
  double v9;
  void *v10;
  char v11;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_effects;
  specialized Set.contains(_:)(0, *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_effects));
  v3 = 0;
  v4 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_shieldEffectView);
  if ((v5 & 1) != 0)
  {
    objc_msgSend(v4, sel_setHidden_, 0);
    v3 = 1;
  }
  *((_BYTE *)v4 + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35121BezelShieldEffectView_isActive) = v3;
  BezelShieldEffectView.updateVisualEffectView()();
  specialized Set.contains(_:)(1u, *(_QWORD *)(v1 + v2));
  v6 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_glowEffectView);
  if ((v7 & 1) != 0)
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_glowEffectView), sel_setHidden_, 0);
    *(_QWORD *)(v6
              + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_customAlpha) = 0x3FF0000000000000;
    BezelShieldEffectView.customCornerRadius.didset((uint64_t (*)(void))BezelGlowEffectView.glowMaskBaseView.getter, &OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_customAlpha, (SEL *)&selRef_setAlpha_);
    v8 = *(char **)(v1
                  + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_highlightEffectView);
    objc_msgSend(v8, sel_setHidden_, 0);
    v9 = 1.0;
  }
  else
  {
    *(_QWORD *)(v6
              + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_customAlpha) = 0;
    BezelShieldEffectView.customCornerRadius.didset((uint64_t (*)(void))BezelGlowEffectView.glowMaskBaseView.getter, &OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35119BezelGlowEffectView_customAlpha, (SEL *)&selRef_setAlpha_);
    v8 = *(char **)(v1
                  + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_highlightEffectView);
    v9 = 0.0;
  }
  *(double *)&v8[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView_customAlpha] = v9;
  BezelShieldEffectView.customCornerRadius.didset((uint64_t (*)(void))BezelHighlightEffectView.highlightMaskView.getter, &OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView_customAlpha, (SEL *)&selRef_setAlpha_);
  specialized Set.contains(_:)(2u, *(_QWORD *)(v1 + v2));
  v10 = *(void **)(v1
                 + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_outlineEffectView);
  if ((v11 & 1) != 0)
  {
    objc_msgSend(v10, sel_setHidden_, 0);
    objc_msgSend(v10, sel_setAlpha_, 1.0);
    *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView_customAlpha] = 0;
    BezelShieldEffectView.customCornerRadius.didset((uint64_t (*)(void))BezelHighlightEffectView.highlightMaskView.getter, &OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35124BezelHighlightEffectView_customAlpha, (SEL *)&selRef_setAlpha_);
  }
  else
  {
    objc_msgSend(v10, sel_setAlpha_, 0.0);
  }
}

uint64_t BezelEffectView.updateEffectViews(animated:)(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  if ((a1 & 1) != 0)
  {
    MEMORY[0x1E0C80A78](a1);
    *(_QWORD *)(swift_allocObject() + 16) = v1;
    v2 = v1;
    static Animation.default.getter();
    withBridgedAnimation<A>(_:_:completion:)();
    swift_release();
    return swift_release();
  }
  else
  {
    v4 = (void *)objc_opt_self();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v1;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = partial apply for closure #3 in BezelEffectView.updateEffectViews(animated:);
    *(_QWORD *)(v6 + 24) = v5;
    aBlock[4] = partial apply for thunk for @callee_guaranteed () -> ();
    aBlock[5] = v6;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_32;
    v7 = _Block_copy(aBlock);
    v8 = v1;
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_performWithoutAnimation_, v7);
    _Block_release(v7);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

id closure #3 in BezelEffectView.updateEffectViews(animated:)()
{
  BezelEffectView._updateEffectViews()();
  return BezelEffectView._updateEffectViewVisibility()();
}

void BezelEffectView.__ivar_destroyer()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_shieldEffectView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_glowEffectView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_highlightEffectView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_outlineEffectView));
}

void BezelEffectView.__deallocating_deinit()
{
  HitTestPassthroughLayer.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for BezelEffectView);
}

void HitTestPassthroughLayer.__deallocating_deinit(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v2;

  v2.receiver = v1;
  v2.super_class = (Class)a1(0);
  objc_msgSendSuper2(&v2, sel_dealloc);
  OUTLINED_FUNCTION_3_1();
}

id BezelEffectViewRepresentable.makeUIView(context:)()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BezelEffectView()), sel_init);
}

id BezelEffectViewRepresentable.updateUIView(_:context:)(char *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  void *v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for EnvironmentValues();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[4];
  specialized Set.contains(_:)(0, v8);
  if ((v9 & 1) != 0)
  {
    v10 = *v1;
    v11 = *((_BYTE *)v2 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*v2, v11);
    specialized Environment.wrappedValue.getter();
    v13 = v12 & 1;
    outlined consume of Environment<CGFloat>.Content(v10, v11);
    BezelEffectView.bezelShieldMaterial.setter(v13);
  }
  specialized Set.contains(_:)(2u, v8);
  if ((v14 & 1) != 0)
  {
    swift_retain();
    specialized Environment.wrappedValue.getter();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIViewRepresentableContext<BezelEffectViewRepresentable>);
    UIViewRepresentableContext.environment.getter();
    Color.resolve(in:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v15 = (void *)Color.Resolved.cgColor.getter();
    BezelOutlineEffectView.outlineColor.setter(v15);
  }
  v16 = swift_bridgeObjectRetain();
  BezelEffectView.effects.setter(v16);
  v17 = &a1[OBJC_IVAR____TtC15ConversationKitP33_4D20B3E5E64D3E09186739EFFCDDD35115BezelEffectView_metrics];
  v18 = *(_OWORD *)(v2 + 7);
  *(_OWORD *)v17 = *(_OWORD *)(v2 + 5);
  *((_OWORD *)v17 + 1) = v18;
  *((_OWORD *)v17 + 2) = *(_OWORD *)(v2 + 9);
  return objc_msgSend(a1, sel_setNeedsLayout);
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance BezelEffectViewRepresentable()
{
  const void *v0;
  _BYTE __dst[88];

  memcpy(__dst, v0, sizeof(__dst));
  return BezelEffectViewRepresentable.makeUIView(context:)();
}

id protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance BezelEffectViewRepresentable(char *a1)
{
  const void *v1;
  _BYTE __dst[88];

  memcpy(__dst, v1, sizeof(__dst));
  return BezelEffectViewRepresentable.updateUIView(_:context:)(a1);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance BezelEffectViewRepresentable()
{
  lazy protocol witness table accessor for type BezelEffectViewRepresentable and conformance BezelEffectViewRepresentable();
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance BezelEffectViewRepresentable()
{
  lazy protocol witness table accessor for type BezelEffectViewRepresentable and conformance BezelEffectViewRepresentable();
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance BezelEffectViewRepresentable()
{
  lazy protocol witness table accessor for type BezelEffectViewRepresentable and conformance BezelEffectViewRepresentable();
  UIViewRepresentable.body.getter();
  __break(1u);
}

uint64_t BezelEffectModifier.effects.getter()
{
  return swift_bridgeObjectRetain();
}

double BezelEffectModifier.metrics.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  double result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 40);
  result = *(double *)(v1 + 48);
  v4 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  *(double *)(a1 + 40) = result;
  return result;
}

uint64_t BezelEffectModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;

  v5 = static Alignment.center.getter();
  v7 = v6;
  v8 = *v2;
  v18 = *(_OWORD *)(v2 + 1);
  v9 = v2[3];
  v10 = v2[4];
  v11 = *((_BYTE *)v2 + 40);
  v12 = v2[6];
  KeyPath = swift_getKeyPath();
  v14 = swift_getKeyPath();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<BezelEffectModifier>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a2, a1, v15);
  v16 = a2
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<BezelEffectModifier>, _OverlayModifier<BezelEffectViewRepresentable>>)
               + 36);
  *(_QWORD *)v16 = KeyPath;
  *(_BYTE *)(v16 + 8) = 0;
  *(_QWORD *)(v16 + 16) = v14;
  *(_BYTE *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 32) = v8;
  *(_OWORD *)(v16 + 40) = v18;
  *(_QWORD *)(v16 + 56) = v9;
  *(_QWORD *)(v16 + 64) = v10;
  *(_BYTE *)(v16 + 72) = v11;
  *(_QWORD *)(v16 + 80) = v12;
  *(_QWORD *)(v16 + 88) = v5;
  *(_QWORD *)(v16 + 96) = v7;
  return swift_bridgeObjectRetain();
}

double BezelEffectModifier.init(effects:metrics:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  double result;
  __int128 v5;

  v3 = *(_BYTE *)(a2 + 32);
  result = *(double *)(a2 + 40);
  *(_QWORD *)a3 = a1;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 24) = v5;
  *(_BYTE *)(a3 + 40) = v3 & 1;
  *(double *)(a3 + 48) = result;
  return result;
}

uint64_t View.bezelEffect(_:metrics:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  char v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;

  v3 = *((_BYTE *)a2 + 32);
  v4 = a2[1];
  v8 = *a2;
  v9 = v4;
  v5 = *((_QWORD *)a2 + 5);
  v7 = a1;
  v10 = v3 & 1;
  v11 = v5;
  return MEMORY[0x1C3B724A0](&v7, a3, &type metadata for BezelEffectModifier);
}

uint64_t View.bezelEffect(_:metrics:)(char a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v14 = *a2;
  v7 = *((_QWORD *)a2 + 2);
  v8 = *((_QWORD *)a2 + 3);
  v9 = *((_BYTE *)a2 + 32);
  v10 = *((_QWORD *)a2 + 5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<BezelEffect>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
  *(_BYTE *)(inited + 32) = a1;
  specialized Set.init(_nonEmptyArrayLiteral:)(inited);
  v15 = v12;
  v16 = v14;
  v17 = v7;
  v18 = v8;
  v19 = v9 & 1;
  v20 = v10;
  MEMORY[0x1C3B724A0](&v15, a3, &type metadata for BezelEffectModifier, a4);
  return swift_bridgeObjectRelease();
}

BOOL UIInterfaceOrientationIsPortrait(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

unint64_t lazy protocol witness table accessor for type BezelShieldMaterialKey and conformance BezelShieldMaterialKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type BezelShieldMaterialKey and conformance BezelShieldMaterialKey;
  if (!lazy protocol witness table cache variable for type BezelShieldMaterialKey and conformance BezelShieldMaterialKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BezelShieldMaterialKey, &type metadata for BezelShieldMaterialKey);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BezelShieldMaterialKey and conformance BezelShieldMaterialKey);
  }
  return result;
}

void sub_1BD1B8054(_BYTE *a1@<X8>)
{
  *a1 = EnvironmentValues.bezelShieldMaterial.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1B8078()
{
  EnvironmentValues.bezelShieldMaterial.setter();
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type BezelOutlineColorKey and conformance BezelOutlineColorKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type BezelOutlineColorKey and conformance BezelOutlineColorKey;
  if (!lazy protocol witness table cache variable for type BezelOutlineColorKey and conformance BezelOutlineColorKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BezelOutlineColorKey, &unk_1E7620A60);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BezelOutlineColorKey and conformance BezelOutlineColorKey);
  }
  return result;
}

void sub_1BD1B80D4(uint64_t *a1@<X8>)
{
  *a1 = EnvironmentValues.bezelOutlineColor.getter();
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type BezelEffect and conformance BezelEffect()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type BezelEffect and conformance BezelEffect;
  if (!lazy protocol witness table cache variable for type BezelEffect and conformance BezelEffect)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BezelEffect, &type metadata for BezelEffect);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BezelEffect and conformance BezelEffect);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type BezelShieldMaterial and conformance BezelShieldMaterial()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type BezelShieldMaterial and conformance BezelShieldMaterial;
  if (!lazy protocol witness table cache variable for type BezelShieldMaterial and conformance BezelShieldMaterial)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BezelShieldMaterial, &type metadata for BezelShieldMaterial);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BezelShieldMaterial and conformance BezelShieldMaterial);
  }
  return result;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in BezelEffectModifier()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for BezelMetrics()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for BezelEffect(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD1B81E4 + 4 * byte_1BD64EEE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD1B8218 + 4 * byte_1BD64EEE0[v4]))();
}

uint64_t sub_1BD1B8218(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1B8220(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1B8228);
  return result;
}

uint64_t sub_1BD1B8234(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1B823CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD1B8240(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1B8248(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for BezelEffect()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for BezelShieldMaterial(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD1B82AC + 4 * byte_1BD64EEEF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD1B82E0 + 4 * byte_1BD64EEEA[v4]))();
}

uint64_t sub_1BD1B82E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1B82E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1B82F0);
  return result;
}

uint64_t sub_1BD1B82FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1B8304);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD1B8308(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1B8310(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for BezelShieldMaterial()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for BezelShieldMaterialKey()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t type metadata accessor for HitTestPassthroughLayer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for HitTestPassthroughView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BackdropView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BezelShieldEffectView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BezelGlowEffectView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BezelHighlightEffectView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BezelOutlineEffectView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BezelEffectView()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for BezelEffectModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BezelEffectModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 8);
  v5 = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for BezelEffectModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

void type metadata accessor for BezelEffectModifier()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1BD1B853C(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy15ConversationKit19BezelShieldMaterialOGGAaBHPxAaBHD1__AjA0cI0HPyHCHCTm(a1, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<BezelShieldMaterial>, &lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<BezelShieldMaterial> and conformance _EnvironmentKeyWritingModifier<A>);
}

uint64_t sub_1BD1B8550(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy15ConversationKit19BezelShieldMaterialOGGAaBHPxAaBHD1__AjA0cI0HPyHCHCTm(a1, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color>, &lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color> and conformance _EnvironmentKeyWritingModifier<A>);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy15ConversationKit19BezelShieldMaterialOGGAaBHPxAaBHD1__AjA0cI0HPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v5 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  v6 = type metadata accessor for ModifiedContent();
  v8[0] = v5;
  v8[1] = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(a3, a2, MEMORY[0x1E0CDCF80]);
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v6, v8);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<BezelEffectModifier>, _OverlayModifier<BezelEffectViewRepresentable>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<BezelEffectModifier>, _OverlayModifier<BezelEffectViewRepresentable>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<BezelEffectModifier>, _OverlayModifier<BezelEffectViewRepresentable>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<BezelEffectModifier>, _OverlayModifier<BezelEffectViewRepresentable>>);
    v2[0] = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<BezelEffectModifier> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<BezelEffectModifier>, MEMORY[0x1E0CDBF10]);
    v2[1] = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type _OverlayModifier<BezelEffectViewRepresentable> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<BezelEffectViewRepresentable>, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<BezelEffectModifier>, _OverlayModifier<BezelEffectViewRepresentable>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD1B8680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = type metadata accessor for ModifiedContent();
  v4[0] = v1;
  v4[1] = lazy protocol witness table accessor for type BezelEffectModifier and conformance BezelEffectModifier();
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t lazy protocol witness table accessor for type BezelEffectModifier and conformance BezelEffectModifier()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type BezelEffectModifier and conformance BezelEffectModifier;
  if (!lazy protocol witness table cache variable for type BezelEffectModifier and conformance BezelEffectModifier)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BezelEffectModifier, &type metadata for BezelEffectModifier);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BezelEffectModifier and conformance BezelEffectModifier);
  }
  return result;
}

uint64_t destroy for BezelEffectViewRepresentable(uint64_t a1)
{
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BezelEffectViewRepresentable(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BezelEffectViewRepresentable(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  __int128 v9;
  __int128 v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  v8 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v8;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(_OWORD *)(a2 + 40);
  v10 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v10;
  *(_OWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for BezelEffectViewRepresentable(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  swift_release();
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_QWORD *)(a1 + 80) = a2[10];
  return a1;
}

uint64_t getEnumTagSinglePayload for BezelEffectViewRepresentable(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BezelEffectViewRepresentable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void *type metadata accessor for BezelEffectViewRepresentable()
{
  return &unk_1E7620A30;
}

void *type metadata accessor for BezelOutlineColorKey()
{
  return &unk_1E7620A60;
}

unint64_t lazy protocol witness table accessor for type BezelEffectViewRepresentable and conformance BezelEffectViewRepresentable()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type BezelEffectViewRepresentable and conformance BezelEffectViewRepresentable;
  if (!lazy protocol witness table cache variable for type BezelEffectViewRepresentable and conformance BezelEffectViewRepresentable)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BezelEffectViewRepresentable, &unk_1E7620A30);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BezelEffectViewRepresentable and conformance BezelEffectViewRepresentable);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type BezelEffectViewRepresentable and conformance BezelEffectViewRepresentable;
  if (!lazy protocol witness table cache variable for type BezelEffectViewRepresentable and conformance BezelEffectViewRepresentable)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for BezelEffectViewRepresentable, &unk_1E7620A30);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BezelEffectViewRepresentable and conformance BezelEffectViewRepresentable);
  }
  return result;
}

uint64_t sub_1BD1B8A34()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #3 in BezelEffectView.updateEffectViews(animated:)()
{
  return closure #3 in BezelEffectView.updateEffectViews(animated:)();
}

uint64_t sub_1BD1B8A60()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in BezelEffectView.updateEffectViews(animated:)()
{
  BezelEffectView._updateEffectViews()();
}

void partial apply for closure #2 in BezelEffectView.updateEffectViews(animated:)()
{
  BezelEffectView._updateEffectViewVisibility()();
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type UIInterfaceOrientation and conformance UIInterfaceOrientation()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UIInterfaceOrientation and conformance UIInterfaceOrientation;
  if (!lazy protocol witness table cache variable for type UIInterfaceOrientation and conformance UIInterfaceOrientation)
  {
    type metadata accessor for UIInterfaceOrientation(255);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for UIInterfaceOrientation, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIInterfaceOrientation and conformance UIInterfaceOrientation);
  }
  return result;
}

void outlined bridged method (mbnn) of @objc CABackdropLayer.groupName.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setGroupName_, v4);

}

uint64_t key path setter for PushToTalkSessionDetailsView.avatarView : PushToTalkSessionDetailsView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x98);
  v4 = *a1;
  return v3(v2);
}

void PushToTalkSessionDetailsView.avatarView.willset(void *a1)
{
  char *v1;
  id *v3;
  id v4;

  v3 = (id *)&v1[OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_avatarView];
  swift_beginAccess();
  if (*v3)
    objc_msgSend(*v3, sel_removeFromSuperview);
  if (a1)
  {
    v4 = a1;
    objc_msgSend(v1, sel_addSubview_, v4);
    PushToTalkSessionDetailsView.setupAvatarViewConstraints(avatarView:)(v4);

  }
}

void *PushToTalkSessionDetailsView.avatarView.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_avatarView);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void PushToTalkSessionDetailsView.avatarView.setter(void *a1)
{
  void **v1;
  void *v3;

  PushToTalkSessionDetailsView.avatarView.willset(a1);
  OUTLINED_FUNCTION_0_8();
  v3 = *v1;
  *v1 = a1;

}

void (*PushToTalkSessionDetailsView.avatarView.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_avatarView);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  return PushToTalkSessionDetailsView.avatarView.modify;
}

void PushToTalkSessionDetailsView.avatarView.modify(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    PushToTalkSessionDetailsView.avatarView.setter(v3);

  }
  else
  {
    PushToTalkSessionDetailsView.avatarView.setter(*(void **)(*(_QWORD *)a1 + 24));
  }
  free(v2);
}

uint64_t key path getter for PushToTalkSessionDetailsView.avatarViewHash : PushToTalkSessionDetailsView@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xA8))();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t key path setter for PushToTalkSessionDetailsView.avatarViewHash : PushToTalkSessionDetailsView(uint64_t a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB0))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t PushToTalkSessionDetailsView.avatarViewHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_avatarViewHash;
  OUTLINED_FUNCTION_2_0();
  return *(_QWORD *)v1;
}

uint64_t PushToTalkSessionDetailsView.avatarViewHash.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;

  result = OUTLINED_FUNCTION_0_8();
  *(_QWORD *)v2 = a1;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*PushToTalkSessionDetailsView.avatarViewHash.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t key path setter for PushToTalkSessionDetailsView.titleLabel : PushToTalkSessionDetailsView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC8))(*a1);
}

void PushToTalkSessionDetailsView.titleLabel.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView____lazy_storage___titleLabel);
  if (!v2)
  {
    v3 = closure #1 in PushToTalkSessionDetailsView.titleLabel.getter();
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;

    v2 = 0;
  }
  v6 = v2;
  OUTLINED_FUNCTION_18();
}

id closure #1 in PushToTalkSessionDetailsView.titleLabel.getter()
{
  id v0;
  double v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  if (one-time initialization token for channelNameLabel != -1)
    swift_once();
  objc_msgSend(v0, sel_setFont_, static Fonts.PTT.channelNameLabel);
  if (one-time initialization token for channelNameLabel != -1)
    swift_once();
  objc_msgSend(v0, sel_setTextColor_, static Colors.PTT.channelNameLabel);
  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  objc_msgSend(v0, sel_setClipsToBounds_, 1);
  objc_msgSend(v0, sel_setLineBreakMode_, 4);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v1) = 1132068864;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v1);
  objc_msgSend(v0, sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(v0, sel_setMinimumScaleFactor_, 0.9);
  objc_msgSend(v0, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48F0]);
  objc_msgSend(v0, sel_setMinimumContentSizeCategory_, *MEMORY[0x1E0DC4930]);
  objc_msgSend(v0, sel_setMarqueeEnabled_, 1);
  objc_msgSend(v0, sel_setMarqueeRunning_, 1);
  return v0;
}

void PushToTalkSessionDetailsView.titleLabel.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView____lazy_storage___titleLabel);
}

void (*PushToTalkSessionDetailsView.titleLabel.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  PushToTalkSessionDetailsView.titleLabel.getter();
  *a1 = v3;
  return PushToTalkSessionDetailsView.titleLabel.modify;
}

void PushToTalkSessionDetailsView.titleLabel.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    PushToTalkSessionDetailsView.titleLabel.setter((uint64_t)v3);

  }
  else
  {
    PushToTalkSessionDetailsView.titleLabel.setter((uint64_t)v2);
  }
}

id PushToTalkSessionDetailsView.disclosureButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButton);
}

void PushToTalkSessionDetailsView.textAreaLeadingAnchorConstraint.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaLeadingAnchorConstraint);
}

void PushToTalkSessionDetailsView.textAreaCenterYAnchorConstraint.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaCenterYAnchorConstraint);
}

id PushToTalkSessionDetailsView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void PushToTalkSessionDetailsView.init(frame:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  objc_super *v8;
  SEL v9;
  _QWORD *v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;

  OUTLINED_FUNCTION_17_7();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_avatarView] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_avatarViewHash];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView____lazy_storage___titleLabel] = 0;
  v2 = OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButton;
  type metadata accessor for PushToTalkDisclosureButton();
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = v0;
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_9((uint64_t)v4, sel_init);
  v5 = OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaLayoutGuide;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  v6 = OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButtonLayoutGuide;
  *(_QWORD *)&v4[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaLeadingAnchorConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaCenterYAnchorConstraint] = 0;

  v17 = type metadata accessor for PushToTalkSessionDetailsView();
  v7 = OUTLINED_FUNCTION_15_0();
  v10 = objc_msgSendSuper2(v8, v9, v7, v4, v17);
  v11 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v10) + 0xC0);
  v12 = v10;
  v13 = (void *)v11();
  objc_msgSend(v12, sel_addSubview_, v13);

  v15 = OUTLINED_FUNCTION_25_1(v14, sel_addSubview_);
  v16 = OUTLINED_FUNCTION_25_1((uint64_t)v15, sel_addLayoutGuide_);
  OUTLINED_FUNCTION_25_1((uint64_t)v16, sel_addLayoutGuide_);
  PushToTalkSessionDetailsView.setupConstraints()();
}

void *sub_1BD1B938C()
{
  void *v0;

  return v0;
}

uint64_t type metadata accessor for PushToTalkSessionDetailsView()
{
  return objc_opt_self();
}

id PushToTalkSessionDetailsView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PushToTalkSessionDetailsView.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_avatarView] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_avatarViewHash];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView____lazy_storage___titleLabel] = 0;
  v2 = OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButton;
  type metadata accessor for PushToTalkDisclosureButton();
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_70_0(v3);
  v4 = OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaLayoutGuide;
  *(_QWORD *)&v0[v4] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC39A0]));
  v5 = OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButtonLayoutGuide;
  *(_QWORD *)&v0[v5] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC39A0]));
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaLeadingAnchorConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaCenterYAnchorConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall PushToTalkSessionDetailsView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  _QWORD *v1;
  Class isa;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t (*v10)(void);
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  double v15;
  objc_super v16;

  isa = a1.value.super.isa;
  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for PushToTalkSessionDetailsView();
  v3 = objc_msgSendSuper2(&v16, sel_traitCollectionDidChange_, isa);
  if (isa)
  {
    v3 = OUTLINED_FUNCTION_123((uint64_t)v3, sel__backlightLuminance);
    v4 = v3;
  }
  else
  {
    v4 = 0;
  }
  v5 = OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_traitCollection);
  v6 = objc_msgSend(v5, sel__backlightLuminance);

  if (!isa || v4 != v6)
  {
    v8 = OUTLINED_FUNCTION_25_1(v7, sel_traitCollection);
    v9 = objc_msgSend(v8, sel__backlightLuminance);

    v10 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xC0);
    v11 = (void *)v10();
    objc_msgSend(v11, sel_setMarqueeRunning_, v9 != (id)1);

    v12 = (void *)v10();
    objc_msgSend(v12, sel_setMarqueeEnabled_, v9 != (id)1);

    v13 = (void *)OUTLINED_FUNCTION_14_7(*v1);
    if (v13)
    {
      v14 = v13;
      v15 = 0.2;
      if (v9 != (id)1)
        v15 = 1.0;
      objc_msgSend(v13, sel_setAlpha_, v15);

    }
  }
}

void PushToTalkSessionDetailsView.setupAvatarViewConstraints(avatarView:)(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  double v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  Class isa;
  id v25;
  uint64_t v26;
  id v27;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaLeadingAnchorConstraint);
  if (v3)
    OUTLINED_FUNCTION_18_4(v3, sel_setActive_);
  v4 = OUTLINED_FUNCTION_18_4(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  v5 = OUTLINED_FUNCTION_9((uint64_t)v4, sel_bottomAnchor);
  v6 = OUTLINED_FUNCTION_123((uint64_t)v5, sel_bottomAnchor);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  LODWORD(v8) = 1132068864;
  objc_msgSend(v7, sel_setPriority_, v8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD644E30;
  v10 = OUTLINED_FUNCTION_9(v9, sel_topAnchor);
  v11 = OUTLINED_FUNCTION_123((uint64_t)v10, sel_topAnchor);
  v12 = OUTLINED_FUNCTION_9_56((uint64_t)v11);

  *(_QWORD *)(v9 + 32) = v12;
  v14 = OUTLINED_FUNCTION_9(v13, sel_leadingAnchor);
  v15 = OUTLINED_FUNCTION_123((uint64_t)v14, sel_leadingAnchor);
  v16 = OUTLINED_FUNCTION_9_56((uint64_t)v15);

  *(_QWORD *)(v9 + 40) = v16;
  v18 = OUTLINED_FUNCTION_9(v17, sel_widthAnchor);
  v19 = objc_msgSend(v18, sel_constraintEqualToConstant_, 60.0);

  *(_QWORD *)(v9 + 48) = v19;
  v21 = OUTLINED_FUNCTION_9(v20, sel_heightAnchor);
  v22 = objc_msgSend(v21, sel_constraintEqualToConstant_, 60.0);

  *(_QWORD *)(v9 + 56) = v22;
  *(_QWORD *)(v9 + 64) = v7;
  specialized Array._endMutation()();
  v23 = (void *)objc_opt_self();
  type metadata accessor for NSLayoutConstraint();
  v27 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_activateConstraints_, isa);

  v25 = PushToTalkSessionDetailsView.setupTextAreaLeadingAnchorConstraint(avatarView:)((uint64_t)a1);
  PushToTalkSessionDetailsView.textAreaLeadingAnchorConstraint.setter((uint64_t)v25);
  PushToTalkSessionDetailsView.setupTextAreaCenterYAnchorConstraint(avatarView:)((uint64_t)a1);
  PushToTalkSessionDetailsView.textAreaCenterYAnchorConstraint.setter(v26);

}

void PushToTalkSessionDetailsView.setupConstraints()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;

  v1 = v0;
  v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0);
  v3 = (void *)v2();
  v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_disclosureButton);
  OUTLINED_FUNCTION_18_4(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_);

  OUTLINED_FUNCTION_18_4(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BD6443F0;
  v6 = OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaLayoutGuide;
  v7 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_22_38(*(void **)((char *)v1
                                                                           + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaLayoutGuide)));
  v8 = OUTLINED_FUNCTION_123((uint64_t)v7, sel_trailingAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(_QWORD *)(v5 + 32) = v9;
  v10 = OUTLINED_FUNCTION_17_4();
  v11 = v5;
  v12 = objc_msgSend((id)((uint64_t (*)(uint64_t))v2)(v10), sel_topAnchor);
  OUTLINED_FUNCTION_10_20();
  v13 = objc_msgSend(*(id *)((char *)v1 + v6), sel_topAnchor);
  v14 = OUTLINED_FUNCTION_48_1(v9, sel_constraintEqualToAnchor_);

  v15 = (void *)v2();
  v16 = objc_msgSend(v15, sel_leadingAnchor);

  v17 = objc_msgSend(*(id *)((char *)v1 + v6), sel_leadingAnchor);
  v18 = OUTLINED_FUNCTION_48_1(v16, sel_constraintEqualToAnchor_);

  v19 = (void *)v2();
  v20 = OUTLINED_FUNCTION_22_38(v19);

  v21 = OUTLINED_FUNCTION_22_38(*(void **)((char *)v1 + v6));
  v22 = OUTLINED_FUNCTION_48_1(v20, sel_constraintEqualToAnchor_);

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!__OFADD__(v23, 3))
  {
    OUTLINED_FUNCTION_39_5(v23 + 3);
    OUTLINED_FUNCTION_17_4();
    v24 = v14;
    OUTLINED_FUNCTION_13_4();
  }
  __break(1u);
  JUMPOUT(0x1BD1B9FC4);
}

id PushToTalkSessionDetailsView.setupTextAreaLeadingAnchorConstraint(avatarView:)(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  double v6;
  id v7;
  uint64_t v8;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaLayoutGuide), sel_leadingAnchor);
  v4 = v3;
  if (!a1
    || (v3 = OUTLINED_FUNCTION_9((uint64_t)v3, sel_trailingAnchor), (v5 = v3) == 0))
  {
    v5 = OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_leadingAnchor);
  }
  v6 = 12.0;
  if (!a1)
    v6 = 0.0;
  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, v6);

  OUTLINED_FUNCTION_23_2(v8, sel_setActive_);
  return v7;
}

void PushToTalkSessionDetailsView.setupTextAreaCenterYAnchorConstraint(avatarView:)(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit28PushToTalkSessionDetailsView_textAreaLayoutGuide), sel_centerYAnchor);
  v4 = v3;
  if (!a1
    || (v3 = OUTLINED_FUNCTION_9((uint64_t)v3, sel_centerYAnchor), (v5 = v3) == 0))
  {
    v5 = OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_centerYAnchor);
  }
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  OUTLINED_FUNCTION_23_2(v7, sel_setActive_);
  OUTLINED_FUNCTION_18();
}

id PushToTalkSessionDetailsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushToTalkSessionDetailsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD1BA26C@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_14_7(**a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BD1BA2B0@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xC0))();
  *a2 = result;
  return result;
}

uint64_t method lookup function for PushToTalkSessionDetailsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushToTalkSessionDetailsView.avatarView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of PushToTalkSessionDetailsView.avatarView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of PushToTalkSessionDetailsView.avatarView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of PushToTalkSessionDetailsView.avatarViewHash.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of PushToTalkSessionDetailsView.avatarViewHash.setter(uint64_t a1, char a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v2) + 0xB0))(a1, a2 & 1);
}

uint64_t dispatch thunk of PushToTalkSessionDetailsView.avatarViewHash.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of PushToTalkSessionDetailsView.titleLabel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of PushToTalkSessionDetailsView.titleLabel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of PushToTalkSessionDetailsView.titleLabel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

id RestrictedConversationChecker.__allocating_init(callCenter:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return OUTLINED_FUNCTION_39_30();
}

uint64_t *RestrictedConversationChecker.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static RestrictedConversationChecker.shared;
}

id static RestrictedConversationChecker.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return (id)static RestrictedConversationChecker.shared;
}

id RestrictedConversationChecker.init(callCenter:)(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  v3 = v1;
  v4 = OUTLINED_FUNCTION_123((uint64_t)v3, sel_callFilterController);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit29RestrictedConversationChecker_callFilterController] = v4;
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<String>);
  _s10Foundation4UUIDVACSHAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09C8]);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit29RestrictedConversationChecker_unrestrictedAddressesForConversation] = Dictionary.init(dictionaryLiteral:)();

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for RestrictedConversationChecker();
  v5 = objc_msgSendSuper2(&v10, sel_init);
  v6 = OUTLINED_FUNCTION_123((uint64_t)v5, sel_conversationManager);
  v7 = v5;
  v8 = OUTLINED_FUNCTION_123((uint64_t)v7, sel_queue);
  objc_msgSend(v6, sel_addDelegate_queue_, v7, v8);

  return v7;
}

uint64_t type metadata accessor for RestrictedConversationChecker()
{
  return objc_opt_self();
}

void RestrictedConversationChecker.shouldRestrict(conversation:)()
{
  void (**v0)(char *, uint64_t);
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t (**v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (**v15)(char *, uint64_t);
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  Class isa;
  unsigned int v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (**v41)(char *, uint64_t);
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  void (**v51)(char *, uint64_t);
  uint64_t v52;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_33_0();
  v4 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v49 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v49 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (void (**)(char *, uint64_t))((char *)&v49 - v14);
  v16 = objc_msgSend(v2, sel_UUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v51 = v0;
  v17 = *(void (**)(char *, uint64_t))((char *)v0
                                               + OBJC_IVAR____TtC15ConversationKit29RestrictedConversationChecker_callFilterController);
  v18 = objc_msgSend(v17, sel_addressesToCheckForRestrictionsInConversation_, v2);
  v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(_QWORD *)(v19 + 16))
    goto LABEL_4;
  v50 = v3;
  v20 = (char *)v51
      + OBJC_IVAR____TtC15ConversationKit29RestrictedConversationChecker_unrestrictedAddressesForConversation;
  swift_beginAccess();
  v21 = *(_QWORD *)v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = specialized Dictionary.subscript.getter(v15, v21);
  swift_bridgeObjectRelease();
  if (v22)
  {
    v23 = swift_bridgeObjectRetain();
    v24 = specialized static Set.== infix(_:_:)(v23, v22);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if ((v24 & 1) != 0)
    {
LABEL_4:
      OUTLINED_FUNCTION_133();
      if (one-time initialization token for screenTime != -1)
        swift_once();
      v25 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v25, (uint64_t)&static Log.screenTime);
      OUTLINED_FUNCTION_13_52((uint64_t)v7, v4[2]);
      v26 = Logger.logObject.getter();
      v27 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)OUTLINED_FUNCTION_2_74();
        v52 = OUTLINED_FUNCTION_105();
        v51 = v15;
        *(_DWORD *)v28 = 136315138;
        _s10Foundation4UUIDVACSHAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09F0]);
        v29 = dispatch thunk of CustomStringConvertible.description.getter();
        v31 = OUTLINED_FUNCTION_14_56(v29, v30);
        OUTLINED_FUNCTION_8_12(v31);
        OUTLINED_FUNCTION_29_5();
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_6_57((uint64_t)v7);
        OUTLINED_FUNCTION_48(&dword_1BD004000, v26, v27, "Conversation %s not restricted: addresses are known to be unrestricted.", v28);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_6_57((uint64_t)v7);
LABEL_21:
      OUTLINED_FUNCTION_6_57((uint64_t)v15);
      goto LABEL_22;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  isa = Set._bridgeToObjectiveC()().super.isa;
  v33 = objc_msgSend(v17, sel_shouldRestrictAddresses_performSynchronously_, isa, 0);

  if (!v33)
  {
    v41 = (void (**)(char *, uint64_t))v4;
    if (one-time initialization token for screenTime != -1)
      swift_once();
    v42 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v42, (uint64_t)&static Log.screenTime);
    OUTLINED_FUNCTION_13_52((uint64_t)v10, v4[2]);
    v43 = Logger.logObject.getter();
    v44 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)OUTLINED_FUNCTION_2_74();
      v52 = OUTLINED_FUNCTION_105();
      v51 = v41;
      *(_DWORD *)v45 = 136315138;
      v49 = v45 + 4;
      _s10Foundation4UUIDVACSHAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09F0]);
      v46 = dispatch thunk of CustomStringConvertible.description.getter();
      v48 = OUTLINED_FUNCTION_14_56(v46, v47);
      OUTLINED_FUNCTION_8_12(v48);
      OUTLINED_FUNCTION_29_5();
      OUTLINED_FUNCTION_27();
      v51[1](v10, v50);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v43, v44, "Conversation %s not restricted. Caching addresses.", v45);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_6_57((uint64_t)v10);

    swift_beginAccess();
    specialized Dictionary._Variant.setValue(_:forKey:)(v19, (uint64_t)v15);
    swift_endAccess();
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_133();
  if (one-time initialization token for screenTime != -1)
    swift_once();
  v34 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v34, (uint64_t)&static Log.screenTime);
  OUTLINED_FUNCTION_13_52((uint64_t)v13, v4[2]);
  v35 = Logger.logObject.getter();
  v36 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)OUTLINED_FUNCTION_2_74();
    v52 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v37 = 136315138;
    _s10Foundation4UUIDVACSHAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09F0]);
    v38 = dispatch thunk of CustomStringConvertible.description.getter();
    v40 = OUTLINED_FUNCTION_14_56(v38, v39);
    OUTLINED_FUNCTION_8_12(v40);
    OUTLINED_FUNCTION_29_5();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_6_57((uint64_t)v13);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v35, v36, "Conversation %s is restricted.", v37);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_6_57((uint64_t)v13);

  RestrictedConversationChecker.removeUnrestrictedAddresses(for:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_57((uint64_t)v15);
LABEL_22:
  OUTLINED_FUNCTION_52_1();
}

uint64_t RestrictedConversationChecker.removeUnrestrictedAddresses(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_33_0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_12_49();
  specialized Dictionary._Variant.removeValue(forKey:)(v2);
  v6 = v5;
  swift_endAccess();
  if (v6)
  {
    if (one-time initialization token for screenTime != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v7, (uint64_t)&static Log.screenTime);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v0, v2, v3);
    v8 = Logger.logObject.getter();
    v9 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)OUTLINED_FUNCTION_2_74();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v10 = 136315138;
      _s10Foundation4UUIDVACSHAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09F0]);
      v11 = dispatch thunk of CustomStringConvertible.description.getter();
      v13 = OUTLINED_FUNCTION_30_34(v11, v12);
      OUTLINED_FUNCTION_35_19(v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      OUTLINED_FUNCTION_48(&dword_1BD004000, v8, v9, "Removed cached addresses for conversation %s.", v10);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));

  }
  return v6;
}

id RestrictedConversationChecker.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RestrictedConversationChecker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RestrictedConversationChecker.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RestrictedConversationChecker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t RestrictedConversationChecker.conversationManager(_:migratingFrom:to:)()
{
  uint64_t v0;
  uint64_t (*v1)(char *, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t result;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_93();
  v34 = v2;
  v35 = v3;
  v4 = v0;
  v6 = v5;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_33_0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_51_0();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v30 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v30 - v15;
  v17 = objc_msgSend(v8, sel_UUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v18 = RestrictedConversationChecker.removeUnrestrictedAddresses(for:)();
  v32 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  result = v32(v16, v9);
  if (v18)
  {
    v20 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC15ConversationKit29RestrictedConversationChecker_callFilterController), sel_addressesToCheckForRestrictionsInConversation_, v6);
    v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v20) = specialized static Set.== infix(_:_:)(v18, v21);
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
    {
      v22 = objc_msgSend(v6, sel_UUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      if (one-time initialization token for screenTime != -1)
        swift_once();
      v23 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v23, (uint64_t)&static Log.screenTime);
      (*(void (**)(uint64_t (*)(char *, uint64_t), char *, uint64_t))(v10 + 16))(v1, v14, v9);
      v24 = Logger.logObject.getter();
      v25 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)OUTLINED_FUNCTION_2_74();
        v31 = OUTLINED_FUNCTION_105();
        v33 = v31;
        *(_DWORD *)v26 = 136315138;
        v30[1] = v26 + 4;
        _s10Foundation4UUIDVACSHAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09F0]);
        v27 = dispatch thunk of CustomStringConvertible.description.getter();
        v29 = OUTLINED_FUNCTION_30_34(v27, v28);
        OUTLINED_FUNCTION_35_19(v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_24_35();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v24, v25, "Migrating cached addresses to conversation %s.", v26);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_24_35();

      OUTLINED_FUNCTION_12_49();
      specialized Dictionary._Variant.setValue(_:forKey:)(v18, (uint64_t)v14);
      swift_endAccess();
      return v1(v14, v9);
    }
    else
    {
      return OUTLINED_FUNCTION_133();
    }
  }
  return result;
}

void specialized static Set.== infix(_:_:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  int64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_33_0();
  v48 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_51_0();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v41 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v41 - v10;
  if (v4 == v2 || *(_QWORD *)(v4 + 16) != *(_QWORD *)(v2 + 16))
  {
LABEL_36:
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    v12 = 0;
    v13 = *(_QWORD *)(v4 + 56);
    v42 = v4;
    v43 = v4 + 56;
    v14 = 1 << *(_BYTE *)(v4 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v44 = (unint64_t)(v14 + 63) >> 6;
    v47 = v2 + 56;
    v41 = (char *)&v41 - v10;
    if ((v15 & v13) == 0)
      goto LABEL_8;
LABEL_7:
    OUTLINED_FUNCTION_47_10();
    v45 = v16;
    v46 = v17;
    for (i = v18 | (v17 << 6); ; i = v32 + (v31 << 6))
    {
      v33 = v48;
      v34 = *(_QWORD *)(v48 + 72);
      v35 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
      v35(v11, *(_QWORD *)(v4 + 48) + v34 * i, v5);
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v9, v11, v5);
      _s10Foundation4UUIDVACSHAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09C8]);
      v36 = dispatch thunk of Hashable._rawHashValue(seed:)();
      v37 = -1 << *(_BYTE *)(v2 + 32);
      v38 = v36 & ~v37;
      if (((*(_QWORD *)(v47 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
      {
LABEL_35:
        OUTLINED_FUNCTION_32_27();
        goto LABEL_36;
      }
      v39 = ~v37;
      while (1)
      {
        v35(v0, *(_QWORD *)(v2 + 48) + v38 * v34, v5);
        _s10Foundation4UUIDVACSHAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09D0]);
        v40 = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v0, v5);
        if ((v40 & 1) != 0)
          break;
        v38 = (v38 + 1) & v39;
        if (((*(_QWORD *)(v47 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
          goto LABEL_35;
      }
      OUTLINED_FUNCTION_32_27();
      v11 = v41;
      v4 = v42;
      v12 = v46;
      if (v45)
        goto LABEL_7;
LABEL_8:
      v20 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_38;
      }
      if (v20 >= v44)
        goto LABEL_36;
      if (!*(_QWORD *)(v43 + 8 * v20))
      {
        OUTLINED_FUNCTION_34_21();
        if (v21 == v22)
          goto LABEL_36;
        OUTLINED_FUNCTION_33_25();
        if (!v23)
        {
          OUTLINED_FUNCTION_34_21();
          if (v21 == v22)
            goto LABEL_36;
          OUTLINED_FUNCTION_33_25();
          if (!v24)
          {
            OUTLINED_FUNCTION_34_21();
            if (v21 == v22)
              goto LABEL_36;
            OUTLINED_FUNCTION_33_25();
            if (!v26)
            {
              v27 = v25 + 4;
              if (v27 >= v44)
                goto LABEL_36;
              if (!*(_QWORD *)(v43 + 8 * v27))
                break;
            }
          }
        }
      }
LABEL_26:
      OUTLINED_FUNCTION_37_27();
      v45 = v30;
      v46 = v31;
    }
    while (!__OFADD__(v27, 1))
    {
      OUTLINED_FUNCTION_34_21();
      if (v21 == v22)
        goto LABEL_36;
      OUTLINED_FUNCTION_33_25();
      v27 = v28 + 1;
      if (v29)
        goto LABEL_26;
    }
LABEL_38:
    __break(1u);
  }
}

uint64_t specialized static Set.== infix(_:_:)(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  unint64_t j;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = *(_QWORD *)(result + 56);
  v30 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  if ((v6 & v4) == 0)
    goto LABEL_8;
LABEL_7:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v32 = v3;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    v15 = result;
    v16 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    v19 = Hasher._finalize()();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_41;
    v22 = *(_QWORD *)(a2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (!v24 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      v25 = ~v20;
      for (j = v21 + 1; ; j = v27 + 1)
      {
        v27 = j & v25;
        if (((*(_QWORD *)(v8 + (((j & v25) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v25)) & 1) == 0)
          break;
        v28 = (_QWORD *)(v22 + 16 * v27);
        v29 = *v28 == v18 && v28[1] == v17;
        if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          goto LABEL_30;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    result = v15;
    v3 = v32;
    if (v7)
      goto LABEL_7;
LABEL_8:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v11 >= v31)
      return 1;
    v12 = *(_QWORD *)(v30 + 8 * v11);
    v13 = v3 + 1;
    if (!v12)
    {
      v13 = v3 + 2;
      if (v3 + 2 >= v31)
        return 1;
      v12 = *(_QWORD *)(v30 + 8 * v13);
      if (!v12)
      {
        v13 = v3 + 3;
        if (v3 + 3 >= v31)
          return 1;
        v12 = *(_QWORD *)(v30 + 8 * v13);
        if (!v12)
        {
          v13 = v3 + 4;
          if (v3 + 4 >= v31)
            return 1;
          v12 = *(_QWORD *)(v30 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v7 = (v12 - 1) & v12;
    v32 = v13;
  }
  v14 = v3 + 5;
  if (v3 + 5 >= v31)
    return 1;
  v12 = *(_QWORD *)(v30 + 8 * v14);
  if (v12)
  {
    v13 = v3 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v31)
      return 1;
    v12 = *(_QWORD *)(v30 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t RestrictedConversationChecker.conversationManager(_:removedActiveConversation:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v0 = OUTLINED_FUNCTION_33_0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  v3 = OUTLINED_FUNCTION_123(v2, sel_UUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  RestrictedConversationChecker.removeUnrestrictedAddresses(for:)();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
}

uint64_t method lookup function for RestrictedConversationChecker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RestrictedConversationChecker.__allocating_init(callCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of RestrictedConversationChecker.shouldRestrict(conversation:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

id OUTLINED_FUNCTION_39_30()
{
  void *v0;

  return RestrictedConversationChecker.init(callCenter:)(v0);
}

uint64_t key path setter for DelayedAnsweringMachine.taskQueue : <A>DelayedAnsweringMachine<A>(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 136);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t DelayedAnsweringMachine.taskQueue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = type metadata accessor for TaskPriority();
  MEMORY[0x1E0C80A78](v2);
  if (*(_QWORD *)(v0 + 16))
  {
    v3 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    type metadata accessor for TaskQueue();
    static TaskPriority.userInitiated.getter();
    v3 = TaskQueue.__allocating_init(priority:)();
    *(_QWORD *)(v1 + 16) = v3;
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    swift_release();
  }
  swift_retain();
  return v3;
}

uint64_t DelayedAnsweringMachine.taskQueue.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

void (*DelayedAnsweringMachine.taskQueue.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = DelayedAnsweringMachine.taskQueue.getter();
  return DelayedAnsweringMachine.taskQueue.modify;
}

void DelayedAnsweringMachine.taskQueue.modify(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_retain();
    DelayedAnsweringMachine.taskQueue.setter(v2);
    swift_release();
  }
  else
  {
    DelayedAnsweringMachine.taskQueue.setter(*a1);
    OUTLINED_FUNCTION_0();
  }
}

uint64_t key path setter for DelayedAnsweringMachine.currentTrackedCallUUID : <A>DelayedAnsweringMachine<A>(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 184);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t DelayedAnsweringMachine.currentTrackedCallUUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DelayedAnsweringMachine.currentTrackedCallUUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*DelayedAnsweringMachine.currentTrackedCallUUID.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t DelayedAnsweringMachine.__allocating_init(isAnsweringMachineAvailable:makeAnsweringMachine:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_15();
  DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)(a1, a2, a3, a4);
  return v8;
}

uint64_t DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v7 = *(_QWORD **)v4;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_QWORD *)(v4 + 48) = a1;
  *(_QWORD *)(v4 + 56) = a2;
  v8 = (void (*)(uint64_t))v7[16];
  v9 = swift_retain();
  v8(v9);
  v10 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  v11 = (_QWORD *)OUTLINED_FUNCTION_15();
  v11[2] = v7[10];
  v11[3] = v7[11];
  v11[4] = v10;
  v11[5] = a3;
  v11[6] = a4;
  swift_retain();
  swift_retain();
  dispatch thunk of TaskQueue.async(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_43();
  return v4;
}

uint64_t sub_1BD1BC1E8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  if (one-time initialization token for shared != -1)
    swift_once();
  v3[8] = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t closure #1 in DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_4_69();
  v1 = OUTLINED_FUNCTION_17_43();
  *(_QWORD *)(v0 + 72) = v1;
  if (v1)
  {
    v5 = (uint64_t (*)(void))(**(int **)(v0 + 48) + *(_QWORD *)(v0 + 48));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v2;
    *v2 = v0;
    v2[1] = closure #1 in DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:);
    return OUTLINED_FUNCTION_16(v5);
  }
  else
  {
    v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
    return OUTLINED_FUNCTION_16(v4);
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);

  *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24) = *(_QWORD *)(v0 + 88);
  swift_release();
  OUTLINED_FUNCTION_10();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_16(v1);
}

uint64_t closure #1 in DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t sub_1BD1BC378()
{
  return objectdestroy_2Tm_2((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t partial apply for closure #1 in DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  return closure #1 in DelayedAnsweringMachine.init(isAnsweringMachineAvailable:makeAnsweringMachine:)(v2, v3, v4);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DelayedAnsweringMachine.start()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *v0;
  (*(void (**)(void))(*v0 + 128))();
  v2 = swift_allocObject();
  swift_weakInit();
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = *(_QWORD *)(v1 + 80);
  v3[3] = *(_QWORD *)(v1 + 88);
  v3[4] = v2;
  swift_retain();
  dispatch thunk of TaskQueue.async(_:)();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t closure #1 in DelayedAnsweringMachine.start()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  if (one-time initialization token for shared != -1)
    swift_once();
  v3[8] = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t closure #1 in DelayedAnsweringMachine.start()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_4_69();
  v1 = OUTLINED_FUNCTION_17_43();
  v0[9] = v1;
  if (!v1)
    goto LABEL_7;
  v2 = *(_QWORD *)(v1 + 24);
  v0[10] = v2;
  if (!v2)
  {
    swift_release();
LABEL_7:
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
    return OUTLINED_FUNCTION_16(v5);
  }
  v0[11] = *(_QWORD *)(v0[7] + 8);
  v3 = one-time initialization token for shared;
  swift_unknownObjectRetain();
  if (v3 != -1)
    swift_once();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 88))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  *(_QWORD *)(v0 + 96) = 0;
  return OUTLINED_FUNCTION_24_29();
}

{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_10();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_16(v0);
}

{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1BD1BC67C()
{
  OUTLINED_FUNCTION_76();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in DelayedAnsweringMachine.start()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return closure #1 in DelayedAnsweringMachine.start()(v4, v2, v3);
}

uint64_t @objc DelayedAnsweringMachine.enabled.getter()
{
  char v0;

  swift_retain();
  v0 = DelayedAnsweringMachine.enabled.getter();
  swift_release();
  return v0 & 1;
}

uint64_t DelayedAnsweringMachine.enabled.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 48);
  v2 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  LOBYTE(v1) = v1(v2);
  OUTLINED_FUNCTION_43();
  return v1 & 1;
}

uint64_t DelayedAnsweringMachine.open(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  v3 = OUTLINED_FUNCTION_32_3();
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = *(_QWORD *)(v4 + 64);
  v2[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[9] = OUTLINED_FUNCTION_54_2();
  v2[10] = OUTLINED_FUNCTION_34();
  v2[11] = v5;
  return OUTLINED_FUNCTION_2_8();
}

uint64_t DelayedAnsweringMachine.open(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, void *, char *, _QWORD);

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 96) = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 24) + 128))();
  v6 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v2);
  v7 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = (char *)swift_allocObject();
  *(_QWORD *)(v0 + 104) = v8;
  *((_QWORD *)v8 + 2) = *(_QWORD *)(v4 + 80);
  *((_QWORD *)v8 + 3) = *(_QWORD *)(v4 + 88);
  *((_QWORD *)v8 + 4) = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v8[v7], v1, v2);
  v9 = (_QWORD *)OUTLINED_FUNCTION_7_20();
  *(_QWORD *)(v0 + 112) = v9;
  *v9 = v0;
  v9[1] = DelayedAnsweringMachine.open(_:);
  return v11(v0 + 120, &async function pointer to partial apply for closure #1 in DelayedAnsweringMachine.open(_:), v8, MEMORY[0x1E0DEAFA0]);
}

{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_9_7(&v2);
  OUTLINED_FUNCTION_43();
  swift_release();
  return OUTLINED_FUNCTION_24_29();
}

{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 120);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t closure #1 in DelayedAnsweringMachine.open(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  if (one-time initialization token for shared != -1)
    swift_once();
  v3[21] = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t closure #1 in DelayedAnsweringMachine.open(_:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSURL *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_4_69();
  v1 = OUTLINED_FUNCTION_17_43();
  *(_QWORD *)(v0 + 176) = v1;
  if (v1)
  {
    v2 = *(void **)(v1 + 24);
    *(_QWORD *)(v0 + 184) = v2;
    if (v2)
    {
      swift_unknownObjectRetain();
      URL._bridgeToObjectiveC()(v3);
      v5 = v4;
      *(_QWORD *)(v0 + 192) = v4;
      *(_QWORD *)(v0 + 56) = v0 + 200;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = closure #1 in DelayedAnsweringMachine.open(_:);
      v6 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
      v7 = (_QWORD *)(v0 + 80);
      v7[1] = 0x40000000;
      v7[2] = @objc completion handler block implementation for <A>@escaping @callee_unowned @convention(block) (@unowned Bool) -> () with result type Bool;
      v7[3] = &block_descriptor_39_0;
      v7[4] = v6;
      objc_msgSend(v2, sel_openURL_completion_, v5, v7);
      return OUTLINED_FUNCTION_14_57();
    }
    swift_release();
  }
  **(_BYTE **)(v0 + 144) = 0;
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void *v1;
  _BYTE *v2;

  v1 = *(void **)(v0 + 192);
  v2 = *(_BYTE **)(v0 + 144);
  swift_release();
  OUTLINED_FUNCTION_10();
  *v2 = *(_BYTE *)(v0 + 200);

  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1BD1BCB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_32_3();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  OUTLINED_FUNCTION_76();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in DelayedAnsweringMachine.open(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_32_3() - 8) + 80);
  v3 = v0 + ((v2 + 40) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = OUTLINED_FUNCTION_25_35(v4);
  return closure #1 in DelayedAnsweringMachine.open(_:)(v5, v6, v3);
}

uint64_t @objc completion handler block implementation for <A>@escaping @callee_unowned @convention(block) (@unowned Bool) -> () with result type Bool(uint64_t a1, char a2)
{
  return specialized _resumeUnsafeContinuation<A>(_:_:)(*(_QWORD *)(a1 + 32), a2);
}

uint64_t @objc DelayedAnsweringMachine.open(_:)(uint64_t a1, int a2, void *a3, void *aBlock)
{
  void *v6;
  _QWORD *v7;
  id v8;

  v6 = _Block_copy(aBlock);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a3;
  v7[3] = v6;
  v7[4] = a1;
  v8 = a3;
  swift_retain();
  return _runTaskForBridgedAsyncMethod(_:)((uint64_t)&async function pointer to partial apply for @objc closure #1 in DelayedAnsweringMachine.open(_:), (uint64_t)v7);
}

uint64_t @objc closure #1 in DelayedAnsweringMachine.open(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for URL();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[8] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t @objc closure #1 in DelayedAnsweringMachine.open(_:)()
{
  _QWORD *v0;
  const void *v1;
  _QWORD *v2;

  v1 = (const void *)v0[3];
  swift_release();
  v0[9] = _Block_copy(v1);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[10] = v2;
  *v2 = v0;
  v2[1] = @objc closure #1 in DelayedAnsweringMachine.open(_:);
  return DelayedAnsweringMachine.open(_:)(v0[7]);
}

{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  void (**v3)(_QWORD, _QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_11_54();
  v3 = (void (**)(_QWORD, _QWORD))v2[9];
  v5 = v2[6];
  v4 = v2[7];
  v6 = v2[5];
  OUTLINED_FUNCTION_1_6();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v3[2](v3, v0 & 1);
  _Block_release(v3);
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 97) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 40) = *v3;
  type metadata accessor for MainActor();
  *(_QWORD *)(v4 + 48) = OUTLINED_FUNCTION_54_2();
  *(_QWORD *)(v4 + 56) = OUTLINED_FUNCTION_34();
  *(_QWORD *)(v4 + 64) = v5;
  return OUTLINED_FUNCTION_2_8();
}

uint64_t DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, void *, uint64_t, _QWORD);

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 97);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 72) = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 32) + 128))();
  v5 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  v6 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v6 + 24) = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v6 + 32) = v5;
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 48) = v3;
  *(_BYTE *)(v6 + 56) = v2;
  v9 = (uint64_t (*)(uint64_t, void *, uint64_t, _QWORD))((int)*MEMORY[0x1E0DBD0F0] + MEMORY[0x1E0DBD0F0]);
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v7;
  *v7 = v0;
  v7[1] = DelayedAnsweringMachine.screenCall(withUUID:manualScreening:);
  return v9(v0 + 96, &async function pointer to partial apply for closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:), v6, MEMORY[0x1E0DEAFA0]);
}

{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_9_7(&v2);
  OUTLINED_FUNCTION_43();
  swift_release();
  return OUTLINED_FUNCTION_24_29();
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_10_5(*(unsigned __int8 *)(v0 + 96), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 209) = a5;
  *(_QWORD *)(v5 + 160) = a3;
  *(_QWORD *)(v5 + 168) = a4;
  *(_QWORD *)(v5 + 144) = a1;
  *(_QWORD *)(v5 + 152) = a2;
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)(v5 + 176) = static CallScreeningActor.shared;
  return swift_task_switch();
}

uint64_t closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  OUTLINED_FUNCTION_4_69();
  v1 = OUTLINED_FUNCTION_17_43();
  *(_QWORD *)(v0 + 184) = v1;
  if (v1)
  {
    v2 = *(void **)(v1 + 24);
    *(_QWORD *)(v0 + 192) = v2;
    if (v2)
    {
      v3 = *(unsigned __int8 *)(v0 + 209);
      v5 = *(_QWORD *)(v0 + 160);
      v4 = *(_QWORD *)(v0 + 168);
      swift_unknownObjectRetain();
      v6 = MEMORY[0x1C3B72E00](v5, v4);
      *(_QWORD *)(v0 + 200) = v6;
      *(_QWORD *)(v0 + 56) = v0 + 208;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:);
      v7 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
      v8 = (_QWORD *)(v0 + 80);
      v8[1] = 0x40000000;
      v8[2] = @objc completion handler block implementation for <A>@escaping @callee_unowned @convention(block) (@unowned Bool) -> () with result type Bool;
      v8[3] = &block_descriptor_33;
      v8[4] = v7;
      objc_msgSend(v2, sel_screenCallWithUUID_manualScreening_completion_, v6, v3, v8);
      return OUTLINED_FUNCTION_14_57();
    }
    swift_release();
  }
  **(_BYTE **)(v0 + 144) = 0;
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void *v1;
  _BYTE *v2;

  v1 = *(void **)(v0 + 200);
  v2 = *(_BYTE **)(v0 + 144);
  swift_release();
  OUTLINED_FUNCTION_10();
  *v2 = *(_BYTE *)(v0 + 208);

  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1BD1BD298()
{
  return objectdestroy_2Tm_2((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_2Tm_2(void (*a1)(_QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_76();
  a1(*(_QWORD *)(v1 + 48));
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_BYTE *)(v0 + 56);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  v6 = OUTLINED_FUNCTION_25_35(v5);
  return closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)(v6, v7, v2, v3, v4);
}

uint64_t @objc DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)(uint64_t a1, int a2, void *a3, char a4, void *aBlock)
{
  void *v8;
  uint64_t v9;
  id v10;

  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_BYTE *)(v9 + 24) = a4;
  *(_QWORD *)(v9 + 32) = v8;
  *(_QWORD *)(v9 + 40) = a1;
  v10 = a3;
  swift_retain();
  return _runTaskForBridgedAsyncMethod(_:)((uint64_t)&async function pointer to partial apply for @objc closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:), v9);
}

uint64_t @objc closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = a4;
  *(_BYTE *)(v4 + 72) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  type metadata accessor for MainActor();
  *(_QWORD *)(v4 + 40) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t @objc closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(const void **)(v0 + 24);
  swift_release();
  *(_QWORD *)(v0 + 48) = _Block_copy(v1);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v4 = v3;
  *(_QWORD *)(v0 + 56) = v3;
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = @objc closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:);
  return DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)(v2, v4, *(_BYTE *)(v0 + 72));
}

{
  char v0;
  uint64_t v1;
  uint64_t v2;
  void (**v3)(_QWORD, _QWORD);

  OUTLINED_FUNCTION_11_54();
  v3 = *(void (***)(_QWORD, _QWORD))(v2 + 48);
  OUTLINED_FUNCTION_1_6();
  swift_bridgeObjectRelease();
  swift_release();
  v3[2](v3, v0 & 1);
  _Block_release(v3);
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t DelayedAnsweringMachine.deinit()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t DelayedAnsweringMachine.__deallocating_deinit()
{
  DelayedAnsweringMachine.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for AnsweringMachine.start() in conformance DelayedAnsweringMachine<A>()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

void sub_1BD1BD5C4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 128))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1BD5FC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 176))();
  a2[1] = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata completion function for DelayedAnsweringMachine()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DelayedAnsweringMachine(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DelayedAnsweringMachine);
}

uint64_t method lookup function for DelayedAnsweringMachine()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DelayedAnsweringMachine.taskQueue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DelayedAnsweringMachine.taskQueue.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DelayedAnsweringMachine.taskQueue.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DelayedAnsweringMachine.currentTrackedCallUUID.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DelayedAnsweringMachine.currentTrackedCallUUID.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DelayedAnsweringMachine.currentTrackedCallUUID.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DelayedAnsweringMachine.__allocating_init(isAnsweringMachineAvailable:makeAnsweringMachine:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of DelayedAnsweringMachine.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DelayedAnsweringMachine.enabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DelayedAnsweringMachine.open(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v3 = (_QWORD *)OUTLINED_FUNCTION_7_20();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = dispatch thunk of DelayedAnsweringMachine.open(_:);
  return v5(a1);
}

uint64_t dispatch thunk of DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)OUTLINED_FUNCTION_7_20();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = dispatch thunk of DelayedAnsweringMachine.screenCall(withUUID:manualScreening:);
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_2();
  return OUTLINED_FUNCTION_10_5(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1BD1BD808()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for @objc closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = partial apply for closure #1 in closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:);
  return ((uint64_t (*)(uint64_t, char, uint64_t, uint64_t))((char *)&async function pointer to @objc closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)
                                                                  + async function pointer to @objc closure #1 in DelayedAnsweringMachine.screenCall(withUUID:manualScreening:)))(v2, v3, v5, v4);
}

uint64_t sub_1BD1BD8B8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  OUTLINED_FUNCTION_76();
  return swift_deallocObject();
}

uint64_t partial apply for @objc closure #1 in DelayedAnsweringMachine.open(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = partial apply for closure #1 in closure #1 in VideoMessageInboxController.markCallItemAsRead(_:completion:);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&async function pointer to @objc closure #1 in DelayedAnsweringMachine.open(_:)
                                                            + async function pointer to @objc closure #1 in DelayedAnsweringMachine.open(_:)))(v2, v3, v4);
}

uint64_t InCallControlsBlockCell.ViewModel.isGroupFaceTime.getter(char a1)
{
  return a1 & 1;
}

uint64_t InCallControlsBlockCell.ViewModel.handles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InCallControlsBlockCell.ViewModel.allHandlesBlocked.getter(char a1, unint64_t a2)
{
  id v4;
  unsigned int v5;
  uint64_t v6;
  id v7;
  Swift::Bool v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  Swift::Bool v12;
  uint64_t v14;
  id v15;
  Swift::Bool v16;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v5 = objc_msgSend(v4, sel_groupFaceTimeBlockEnabled);

  if (v5 && (a1 & 1) != 0)
  {
    if (a2 >> 62)
      goto LABEL_21;
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v6)
    {
LABEL_14:
      OUTLINED_FUNCTION_3_3();
      return 1;
    }
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_22_22();
      v7 = *(id *)(a2 + 32);
      v8 = TUHandle.isBlocked()();

      if (!v8)
        break;
      if (v6 != 1)
      {
        v9 = 5;
        while (1)
        {
          if ((a2 & 0xC000000000000001) != 0)
            OUTLINED_FUNCTION_22_22();
          v10 = *(id *)(a2 + 8 * v9);
          v11 = v9 - 3;
          if (__OFADD__(v9 - 4, 1))
            break;
          v12 = TUHandle.isBlocked()();

          if (!v12)
            goto LABEL_19;
          ++v9;
          if (v11 == v6)
            goto LABEL_14;
        }
        __break(1u);
LABEL_21:
        OUTLINED_FUNCTION_12_50();
        swift_bridgeObjectRetain_n();
        v6 = _CocoaArrayWrapper.endIndex.getter();
        if (v6)
          continue;
      }
      goto LABEL_14;
    }
LABEL_19:
    OUTLINED_FUNCTION_3_3();
    return 0;
  }
  if (a2 >> 62)
  {
    OUTLINED_FUNCTION_12_50();
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
      goto LABEL_17;
LABEL_24:
    swift_bridgeObjectRelease();
    return 0;
  }
  v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14)
    goto LABEL_24;
LABEL_17:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_22_22();
  v15 = *(id *)(a2 + 32);
  swift_bridgeObjectRelease();
  v16 = TUHandle.isBlocked()();

  return v16;
}

uint64_t InCallControlsBlockCell.ViewModel.cellTitle.getter(char a1, unint64_t a2)
{
  id v4;
  unsigned int v5;
  char v6;
  id v7;
  unint64_t v8;
  const char *v9;
  char v10;
  unint64_t v11;
  Swift::String_optional v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t countAndFlagsBits;
  uint64_t v17;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v5 = objc_msgSend(v4, sel_groupFaceTimeBlockEnabled);

  if (v5 && (a1 & 1) != 0)
  {
    v6 = InCallControlsBlockCell.ViewModel.allHandlesBlocked.getter(1, a2);
    v7 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_16_15();
    if ((v6 & 1) != 0)
      v9 = "ACTION_TITLE_UNBLOCK_ALL_PARTICIPANTS";
    else
      v9 = "ACTION_TITLE_BLOCK_ALL_PARTICIPANTS";
    goto LABEL_9;
  }
  v10 = InCallControlsBlockCell.ViewModel.allHandlesBlocked.getter(a1 & 1, a2);
  v7 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  if ((v10 & 1) != 0)
  {
    OUTLINED_FUNCTION_16_15();
    v9 = "ACTION_TITLE_UNBLOCK_CALLER";
LABEL_9:
    v11 = (unint64_t)(v9 - 32) | 0x8000000000000000;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_16_15();
  v11 = 0x80000001BD67A3A0;
  v8 = 0xD000000000000019;
LABEL_10:
  v12.value._countAndFlagsBits = 0x61737265766E6F43;
  v12.value._object = (void *)0xEF74694B6E6F6974;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v14 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v8, v12, (NSBundle)v7, v13, *(Swift::String *)(&v17 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

id InCallControlsBlockCell.ViewModel.cellTitleColor.getter(char a1, unint64_t a2)
{
  void *v2;

  InCallControlsBlockCell.ViewModel.allHandlesBlocked.getter(a1, a2);
  v2 = (void *)objc_opt_self();
  return OUTLINED_FUNCTION_22_40(v2, (SEL *)&selRef_systemWhiteColor);
}

void static InCallControlsBlockCell.ViewModel.== infix(_:_:)(int a1, uint64_t a2, int a3)
{
  if (((a1 ^ a3) & 1) == 0)
    specialized static Array<A>.== infix(_:_:)();
}

ConversationKit::InCallControlsBlockCell::ViewModel __swiftcall InCallControlsBlockCell.ViewModel.init(isGroupFaceTime:handles:)(Swift::Bool isGroupFaceTime, Swift::OpaquePointer handles)
{
  Swift::Bool v2;
  ConversationKit::InCallControlsBlockCell::ViewModel result;

  v2 = isGroupFaceTime;
  result.handles = handles;
  result.isGroupFaceTime = v2;
  return result;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsBlockCell.ViewModel(unsigned __int8 *a1, unsigned __int8 *a2)
{
  static InCallControlsBlockCell.ViewModel.== infix(_:_:)(*a1, *((_QWORD *)a1 + 1), *a2);
}

uint64_t InCallControlsBlockCell.viewModel.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell_viewModel);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t key path getter for InCallControlsBlockCell.viewModel : InCallControlsBlockCell@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell_viewModel);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t key path setter for InCallControlsBlockCell.viewModel : InCallControlsBlockCell(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return InCallControlsBlockCell.viewModel.setter(v1, v2);
}

uint64_t InCallControlsBlockCell.viewModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell_viewModel);
  OUTLINED_FUNCTION_2_0();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  return InCallControlsBlockCell.viewModel.didset();
}

uint64_t InCallControlsBlockCell.viewModel.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  _BOOL4 v4;
  ConversationKit::InCallControlsBlockCell::ViewModel v5;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell_viewModel;
  result = swift_beginAccess();
  v3 = *(void **)(v1 + 8);
  if (v3)
  {
    v4 = *(_DWORD *)v1 & 1;
    swift_bridgeObjectRetain();
    v5.isGroupFaceTime = v4;
    v5.handles._rawValue = v3;
    InCallControlsBlockCell.updateCell(viewModel:)(v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall InCallControlsBlockCell.updateCell(viewModel:)(ConversationKit::InCallControlsBlockCell::ViewModel viewModel)
{
  void *v1;
  void *rawValue;
  Swift::Bool isGroupFaceTime;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  char *v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  void (*v21)(_QWORD *, _QWORD);
  uint64_t v22;
  _QWORD v23[4];

  rawValue = viewModel.handles._rawValue;
  isGroupFaceTime = viewModel.isGroupFaceTime;
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationKit);
  v6 = v1;
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315138;
    v10 = &v6[OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell_viewModel];
    OUTLINED_FUNCTION_2_0();
    v11 = *((_QWORD *)v10 + 1);
    if (v11)
    {
      v12 = *(_DWORD *)v10 & 1;
      swift_bridgeObjectRetain();
      v13 = InCallControlsBlockCell.ViewModel.cellTitle.getter(v12, v11);
      v15 = v14;
      swift_bridgeObjectRelease();
      v23[0] = v13;
      v23[1] = v15;
      v16 = String.init<A>(reflecting:)();
      v18 = v17;
    }
    else
    {
      v18 = 0xE300000000000000;
      v16 = 7104878;
    }
    v23[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v7, v8, "InCallControlsBlockCell viewModel?.cellTitle %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  InCallControlsBlockCell.ViewModel.cellTitle.getter(isGroupFaceTime, (unint64_t)rawValue);
  OUTLINED_FUNCTION_23_40();
  UIListContentConfiguration.text.setter();
  OUTLINED_FUNCTION_19_38();
  InCallControlsBlockCell.ViewModel.allHandlesBlocked.getter(isGroupFaceTime, (unint64_t)rawValue);
  v19 = (void *)objc_opt_self();
  v20 = OUTLINED_FUNCTION_22_40(v19, (SEL *)&selRef_systemWhiteColor);
  OUTLINED_FUNCTION_23_40();
  v21 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v21(v23, 0);
  OUTLINED_FUNCTION_19_38();
  InCallControlsBlockCell.configureContent()();
  OUTLINED_FUNCTION_52_1();
}

void InCallControlsBlockCell.viewModel.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t InCallControlsBlockCell.viewModel.modify(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return InCallControlsBlockCell.viewModel.didset();
  return result;
}

uint64_t InCallControlsBlockCell.cellContentConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIListContentConfiguration?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v12[-v7];
  v9 = v1 + OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell____lazy_storage___cellContentConfiguration;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v9, (uint64_t)v8, &demangling cache variable for type metadata for UIListContentConfiguration?);
  v10 = type metadata accessor for UIListContentConfiguration();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, v8, v10);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v8, &demangling cache variable for type metadata for UIListContentConfiguration?);
  closure #1 in InCallControlsBlockCell.cellContentConfiguration.getter(v1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a1, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v6, v9, &demangling cache variable for type metadata for UIListContentConfiguration?);
  return swift_endAccess();
}

uint64_t closure #1 in InCallControlsBlockCell.cellContentConfiguration.getter(uint64_t a1)
{
  id v2;
  unsigned int v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String_optional v8;
  Swift::String v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void (*v14)(_BYTE *, _QWORD);
  id v15;
  void (*v16)(_BYTE *, _QWORD);
  void (*v17)(_BYTE *, _QWORD);
  id v18;
  Class isa;
  unint64_t v21;
  _BYTE v22[32];

  MEMORY[0x1C3B73748]();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v3 = objc_msgSend(v2, sel_groupFaceTimeBlockEnabled);

  if (v3
    && (v4 = a1 + OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell_viewModel,
        swift_beginAccess(),
        *(_QWORD *)(v4 + 8))
    && *(_BYTE *)v4 == 1)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v6 = 0xD000000000000023;
    v21 = 0xE000000000000000;
    v7 = 0x80000001BD67A3E0;
  }
  else
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v21 = 0xE000000000000000;
    v7 = 0x80000001BD67A3A0;
    v6 = 0xD000000000000019;
  }
  v8.value._countAndFlagsBits = 0x61737265766E6F43;
  v8.value._object = (void *)0xEF74694B6E6F6974;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, v8, (NSBundle)v5, v9, *(Swift::String *)(&v21 - 1));

  UIListContentConfiguration.text.setter();
  v11 = (void *)objc_opt_self();
  v12 = *MEMORY[0x1E0DC4A88];
  v13 = objc_msgSend(v11, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  UIFont.caseSensitive()();

  v14 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v14(v22, 0);
  v15 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
  v16 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v16(v22, 0);
  v17 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.adjustsFontForContentSizeCategory.setter();
  v17(v22, 0);
  v18 = objc_msgSend(v11, sel_preferredFontForTextStyle_, v12);
  isa = UIFont.caseSensitive()().super.isa;

  InCallControlsBlockCell.verticalInset(_:scaledToFont:)(isa, 18.5);
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

double InCallControlsBlockCell.verticalInset(_:scaledToFont:)(void *a1, double a2)
{
  id v3;
  id v4;
  id v5;
  double v6;
  void *v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v3 = objc_msgSend(a1, sel_fontDescriptor);
  v4 = objc_msgSend(v3, sel_objectForKey_, *MEMORY[0x1E0DC13B8]);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    type metadata accessor for UIFontTextStyle(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, v8);
      objc_msgSend(v5, sel_scaledValueForValue_, a2);
      a2 = v6;

    }
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, &demangling cache variable for type metadata for Any?);
  }
  return a2;
}

uint64_t InCallControlsBlockCell.cellContentConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIListContentConfiguration?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIListContentConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
  v7 = v1 + OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell____lazy_storage___cellContentConfiguration;
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v5, v7, &demangling cache variable for type metadata for UIListContentConfiguration?);
  return swift_endAccess();
}

id InCallControlsBlockCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id InCallControlsBlockCell.init(frame:)()
{
  uint64_t v0;
  uint64_t ObjectType;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  objc_super *v9;
  SEL v10;
  id v11;

  OUTLINED_FUNCTION_17_7();
  ObjectType = swift_getObjectType();
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell_viewModel);
  *v2 = 0;
  v2[1] = 0;
  v3 = v0 + OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell____lazy_storage___cellContentConfiguration;
  v4 = OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_77_0(v3, v5, v6, v4);
  v7 = v0 + OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell____lazy_storage___blockImageAccessory;
  OUTLINED_FUNCTION_17_44();
  OUTLINED_FUNCTION_51_1(v7);
  OUTLINED_FUNCTION_51_1(v0 + OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell____lazy_storage___unblockImageAccessory);
  v8 = OUTLINED_FUNCTION_15_0();
  v11 = objc_msgSendSuper2(v9, v10, v8, v0, ObjectType);
  InCallControlsBlockCell.configureContent()();

  return v11;
}

uint64_t InCallControlsBlockCell.configureContent()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  char *v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23[5];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v23[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listGroupedCell()();
  v4 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIVibrancyEffect);
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  v5 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v5);
  MEMORY[0x1C3B7370C](v3);
  objc_msgSend(v0, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  v23[3] = type metadata accessor for UIListContentConfiguration();
  v23[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
  InCallControlsBlockCell.cellContentConfiguration.getter((uint64_t)boxed_opaque_existential_1);
  MEMORY[0x1C3B73700](v23);
  v7 = &v0[OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell_viewModel];
  swift_beginAccess();
  v8 = *((_QWORD *)v7 + 1);
  if (v8
    && (v9 = *(_DWORD *)v7 & 1,
        swift_bridgeObjectRetain(),
        LOBYTE(v9) = InCallControlsBlockCell.ViewModel.allHandlesBlocked.getter(v9, v8),
        swift_bridgeObjectRelease(),
        (v9 & 1) != 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
    v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UICellAccessory() - 8) + 80);
    v11 = (v10 + 32) & ~v10;
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BD6441D0;
    v13 = v12 + v11;
    v14 = 0x80000001BD67A500;
    v15 = &OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell____lazy_storage___unblockImageAccessory;
    v16 = &selRef_systemWhiteColor;
    v17 = 0xD000000000000016;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
    v18 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UICellAccessory() - 8) + 80);
    v19 = (v18 + 32) & ~v18;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BD6441D0;
    v13 = v20 + v19;
    v15 = &OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell____lazy_storage___blockImageAccessory;
    v16 = &selRef_systemRedColor;
    v17 = 0x6961722E646E6168;
    v14 = 0xEB00000000646573;
  }
  InCallControlsBlockCell.unblockImageAccessory.getter(v15, v17, v14, (SEL *)v16, v13);
  return UICollectionViewListCell.accessories.setter();
}

void InCallControlsBlockCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void InCallControlsBlockCell.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell_viewModel];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell____lazy_storage___cellContentConfiguration];
  v3 = OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_77_0(v2, v4, v5, v3);
  v6 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell____lazy_storage___blockImageAccessory];
  OUTLINED_FUNCTION_17_44();
  OUTLINED_FUNCTION_8_2(v6);
  OUTLINED_FUNCTION_8_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit23InCallControlsBlockCell____lazy_storage___unblockImageAccessory]);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void InCallControlsBlockCell.unblockImageAccessory.getter(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, SEL *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory?);
  OUTLINED_FUNCTION_1_1();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v16 = &v19[-v15];
  v17 = v5 + *a1;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of FeatureEligibility?(v17, (uint64_t)v16, &demangling cache variable for type metadata for UICellAccessory?);
  v18 = OUTLINED_FUNCTION_17_44();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18) == 1)
  {
    OUTLINED_FUNCTION_11_55((uint64_t)v16);
    closure #1 in InCallControlsBlockCell.blockImageAccessory.getter(a2, a3, a4);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, a5, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v18);
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of Participant?((uint64_t)v14, v17, &demangling cache variable for type metadata for UICellAccessory?);
    swift_endAccess();
  }
  else
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v16, v18);
  }
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in InCallControlsBlockCell.blockImageAccessory.getter(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t (**v21)();
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = type metadata accessor for UICellAccessory.Placement();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v18 = @nonobjc UIImage.__allocating_init(systemName:)();
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v18);

  v20 = objc_msgSend((id)objc_opt_self(), *a3);
  objc_msgSend(v19, sel_setTintColor_, v20);

  v21 = (uint64_t (**)())(v12
                       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                + 48));
  v22 = *MEMORY[0x1E0DC1C20];
  v23 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v12, v22, v23);
  *v21 = OUTLINED_FUNCTION_28_0;
  v21[1] = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E0DC1D18], v8);
  v24 = type metadata accessor for UICellAccessory.LayoutDimension();
  OUTLINED_FUNCTION_77_0(v7, v25, v26, v24);
  v27 = v19;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
  OUTLINED_FUNCTION_52_1();
}

id InCallControlsBlockCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ObjC metadata update function for InCallControlsBlockCell()
{
  return type metadata accessor for InCallControlsBlockCell();
}

uint64_t type metadata accessor for InCallControlsBlockCell()
{
  uint64_t result;

  result = type metadata singleton initialization cache for InCallControlsBlockCell;
  if (!type metadata singleton initialization cache for InCallControlsBlockCell)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for InCallControlsBlockCell()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UIListContentConfiguration?(319, (unint64_t *)&lazy cache variable for type metadata for UIListContentConfiguration?, (void (*)(uint64_t))MEMORY[0x1E0DC23A0]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UIListContentConfiguration?(319, &lazy cache variable for type metadata for UICellAccessory?, (void (*)(uint64_t))MEMORY[0x1E0DC1D38]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for InCallControlsBlockCell.ViewModel(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InCallControlsBlockCell.ViewModel(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InCallControlsBlockCell.ViewModel(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InCallControlsBlockCell.ViewModel()
{
  return &type metadata for InCallControlsBlockCell.ViewModel;
}

void ConversationControlsTrailingActionButtonProvider.__allocating_init(controlsManager:context:)(void *a1, char a2)
{
  swift_allocObject();
  ConversationControlsTrailingActionButtonProvider.init(controlsManager:context:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

void ConversationControlsTrailingActionButtonProvider.init(controlsManager:context:)(void *a1, char a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  *(_QWORD *)(v2 + 136) = a1;
  ControlsButtonProvider.init(context:shape:)(a2, 2);
  v4 = (void *)objc_opt_self();
  v5 = *MEMORY[0x1E0DC4A90];
  v6 = a1;
  swift_retain();
  v7 = objc_msgSend(v4, sel__preferredFontForTextStyle_variant_, v5, 264);
  if (v7)
  {
    ControlsButtonProvider.titleFont.setter(v7);
    swift_release();

    OUTLINED_FUNCTION_18();
  }
  else
  {
    __break(1u);
  }
}

uint64_t ConversationControlsTrailingActionButtonProvider.buttonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  id v8;
  id v9;
  uint64_t v10;

  v3 = type metadata accessor for UIButton.Configuration.Size();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ControlsButtonProvider.defaultButtonConfiguration.getter(a1);
  if (one-time initialization token for buttonContentInsets != -1)
    swift_once();
  UIButton.Configuration.contentInsets.setter();
  UIButton.Configuration.titleLineBreakMode.setter();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DC3198], v3);
  UIButton.Configuration.buttonSize.setter();
  result = swift_beginAccess();
  if (*(_QWORD *)(v1 + 104))
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B60]);
    v9 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v8, 2);

    return UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  }
  return result;
}

void ConversationControlsTrailingActionButtonProvider.__allocating_init(controlsManager:context:shape:)()
{
  OUTLINED_FUNCTION_0_86();
  __break(1u);
}

void ConversationControlsTrailingActionButtonProvider.init(controlsManager:context:shape:)()
{
  OUTLINED_FUNCTION_0_86();
  __break(1u);
}

uint64_t ConversationControlsTrailingActionButtonProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = ControlsButtonProvider.deinit();
  OUTLINED_FUNCTION_1_24(v1);
  return v0;
}

uint64_t ConversationControlsTrailingActionButtonProvider.__deallocating_deinit()
{
  uint64_t v0;

  v0 = ControlsButtonProvider.deinit();
  OUTLINED_FUNCTION_1_24(v0);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConversationControlsTrailingActionButtonProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsTrailingActionButtonProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsTrailingActionButtonProvider.__allocating_init(controlsManager:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 480))();
}

void SystemApertureAlertingManager.systemApertureElementContext.getter()
{
  void *v0;
  id v1;

  v0 = (void *)OUTLINED_FUNCTION_54_21();
  v1 = objc_msgSend(v0, sel_systemApertureElementContext);

  OUTLINED_FUNCTION_0();
}

uint64_t SystemApertureAlertingManager.invalidationInProgressSubject.getter()
{
  return swift_retain();
}

uint64_t SystemApertureAlertingManager.__allocating_init(systemApertureElement:sceneStateDescriber:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_15_11();
  swift_allocObject();
  swift_getObjectType();
  OUTLINED_FUNCTION_48_24();
  v0 = (void *)OUTLINED_FUNCTION_22_41();
  return OUTLINED_FUNCTION_11_56(v0, v1, v2, v3, v4, v5);
}

uint64_t SystemApertureAlertingManager.init(systemApertureElement:sceneStateDescriber:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_15_11();
  swift_getObjectType();
  OUTLINED_FUNCTION_48_24();
  v0 = (void *)OUTLINED_FUNCTION_22_41();
  return OUTLINED_FUNCTION_11_56(v0, v1, v2, v3, v4, v5);
}

Swift::Bool __swiftcall SystemApertureAlertingManager.requestEphemeralAlertingAssertion(reason:shouldOverridePersistentAssertion:includingWhileFullscreen:)(Swift::String reason, Swift::Bool shouldOverridePersistentAssertion, Swift::Bool includingWhileFullscreen)
{
  uint64_t v3;
  uint64_t v4;
  void *object;
  uint64_t countAndFlagsBits;
  void *v8;
  unsigned int v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  Swift::Bool result;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  object = reason._object;
  countAndFlagsBits = reason._countAndFlagsBits;
  v8 = *(void **)(v4 + 40);
  if (!v8
    || (v10 = objc_msgSend(v8, sel_isAutomaticallyInvalidatable), shouldOverridePersistentAssertion)
    || v10)
  {
    SystemApertureAlertingManager.startAlerting(reason:includingWhileFullscreen:)(countAndFlagsBits, (unint64_t)object, (uint8_t *)includingWhileFullscreen);
    v11 = *(NSObject **)(v4 + 40);
    if (v11)
    {
      if ((objc_msgSend((id)swift_unknownObjectRetain(), sel_isAutomaticallyInvalidatable) & 1) == 0)
        -[NSObject setAutomaticallyInvalidatable:](v11, sel_setAutomaticallyInvalidatable_, 1);
      OUTLINED_FUNCTION_10();
    }
    OUTLINED_FUNCTION_36_31();
    Logger.logObject.getter();
    v12 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_21_12(v12))
    {
      v13 = 7104878;
      v14 = OUTLINED_FUNCTION_105();
      v21 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v14 = 136315394;
      if (*(_QWORD *)(v4 + 40))
      {
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SBUISystemApertureAutomaticallyInvalidatable);
        v16 = OUTLINED_FUNCTION_90_2();
      }
      else
      {
        v16 = 7104878;
      }
      v20 = OUTLINED_FUNCTION_9_57(v16, v15, &v21);
      OUTLINED_FUNCTION_5_67();
      OUTLINED_FUNCTION_62_0();
      OUTLINED_FUNCTION_54_1();
      *(_WORD *)(v14 + 12) = 2080;
      v18 = *(void **)(v4 + 40);
      if (v18)
      {
        objc_msgSend(v18, sel_isAutomaticallyInvalidatable, v20, v21);
        v13 = OUTLINED_FUNCTION_90_2();
      }
      OUTLINED_FUNCTION_9_57(v13, v17, &v21);
      OUTLINED_FUNCTION_5_67();
      OUTLINED_FUNCTION_62_0();
      OUTLINED_FUNCTION_54_1();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v11, v12, "Successfully requested an ephemeral alerting assertion %s isAutomaticallyInvalidatable %s", (uint8_t *)v14);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_46_23();

  }
  OUTLINED_FUNCTION_9_5();
  return result;
}

Swift::Bool __swiftcall SystemApertureAlertingManager.requestPersistentAlertingAssertion(reason:includingWhileFullscreen:)(Swift::String reason, Swift::Bool includingWhileFullscreen)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  Swift::Bool result;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  SystemApertureAlertingManager.startAlerting(reason:includingWhileFullscreen:)(reason._countAndFlagsBits, (unint64_t)reason._object, (uint8_t *)includingWhileFullscreen);
  v4 = *(NSObject **)(v2 + 40);
  if (v4)
  {
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_isAutomaticallyInvalidatable))
      -[NSObject setAutomaticallyInvalidatable:](v4, sel_setAutomaticallyInvalidatable_, 0);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_36_31();
  Logger.logObject.getter();
  v5 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_21_12(v5))
  {
    v6 = 7104878;
    v7 = OUTLINED_FUNCTION_105();
    v14 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136315394;
    if (*(_QWORD *)(v3 + 40))
    {
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SBUISystemApertureAutomaticallyInvalidatable);
      v9 = OUTLINED_FUNCTION_90_2();
    }
    else
    {
      v9 = 7104878;
    }
    v13 = OUTLINED_FUNCTION_9_57(v9, v8, &v14);
    OUTLINED_FUNCTION_5_67();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_54_1();
    *(_WORD *)(v7 + 12) = 2080;
    v11 = *(void **)(v3 + 40);
    if (v11)
    {
      objc_msgSend(v11, sel_isAutomaticallyInvalidatable, v13, v14);
      v6 = OUTLINED_FUNCTION_90_2();
    }
    OUTLINED_FUNCTION_9_57(v6, v10, &v14);
    OUTLINED_FUNCTION_5_67();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v4, v5, "Successfully requested a persistent alerting assertion %s isAutomaticallyInvalidatable %s", (uint8_t *)v7);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_46_23();

  OUTLINED_FUNCTION_9_5();
  return result;
}

Swift::Void __swiftcall SystemApertureAlertingManager.updatePersistentToEphemeralAlertIfNeeded(reason:)(Swift::String reason)
{
  uint64_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _WORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  os_log_type_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  _WORD *v25;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;

  v3 = *(_QWORD *)(v1 + 40);
  if (!v3)
    goto LABEL_4;
  if ((objc_msgSend((id)OUTLINED_FUNCTION_14_58(), sel_isAutomaticallyInvalidatable) & 1) != 0)
  {
    OUTLINED_FUNCTION_19_0();
LABEL_4:
    OUTLINED_FUNCTION_31_10();
    v4 = OUTLINED_FUNCTION_23_41();
    if (OUTLINED_FUNCTION_5_9(v4, v5, v6, v7, v8, v9, v10, v11, v26, v27))
    {
      v12 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_52_3(v12);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v28, (os_log_type_t)v3, "Ignoring request to update persistent alert because none exist", (uint8_t *)v1);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_11;
  }
  v13 = (void *)OUTLINED_FUNCTION_54_21();
  v14 = objc_msgSend(v13, sel_activeLayoutMode);

  if (v14 == (id)4)
  {
    v15 = OUTLINED_FUNCTION_315_0();
    v16(v15);
    OUTLINED_FUNCTION_8_60();
    return;
  }
  OUTLINED_FUNCTION_31_10();
  v17 = OUTLINED_FUNCTION_23_41();
  if (OUTLINED_FUNCTION_39_31(v17, v18, v19, v20, v21, v22, v23, v24, v26, v27))
  {
    v25 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_124_3(v25);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v28, (os_log_type_t)v1, "Ignoring request to update persistent alert while not in custom layout", v2);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_0();
LABEL_11:
  OUTLINED_FUNCTION_42_0(v28);
}

Swift::Void __swiftcall SystemApertureAlertingManager.invalidatePersistentAlertingAssertion(reason:)(Swift::String reason)
{
  uint64_t v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _WORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  os_log_type_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  _WORD *v25;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;

  v3 = *(_QWORD *)(v1 + 40);
  if (!v3)
    goto LABEL_4;
  if ((objc_msgSend((id)OUTLINED_FUNCTION_14_58(), sel_isAutomaticallyInvalidatable) & 1) != 0)
  {
    OUTLINED_FUNCTION_19_0();
LABEL_4:
    OUTLINED_FUNCTION_31_10();
    v4 = OUTLINED_FUNCTION_23_41();
    if (OUTLINED_FUNCTION_5_9(v4, v5, v6, v7, v8, v9, v10, v11, v26, v27))
    {
      v12 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_52_3(v12);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v28, (os_log_type_t)v3, "Ignoring request to invalidate persistent alert because none exist", (uint8_t *)v1);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_11;
  }
  v13 = (void *)OUTLINED_FUNCTION_54_21();
  v14 = objc_msgSend(v13, sel_activeLayoutMode);

  if (v14 == (id)4)
  {
    v15 = OUTLINED_FUNCTION_315_0();
    v16(v15);
    OUTLINED_FUNCTION_8_60();
    return;
  }
  OUTLINED_FUNCTION_31_10();
  v17 = OUTLINED_FUNCTION_23_41();
  if (OUTLINED_FUNCTION_39_31(v17, v18, v19, v20, v21, v22, v23, v24, v26, v27))
  {
    v25 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_124_3(v25);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v28, (os_log_type_t)v1, "Ignoring request to invalidate persistent alert while not in custom layout", v2);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_0();
LABEL_11:
  OUTLINED_FUNCTION_42_0(v28);
}

void SystemApertureAlertingManager.handleRecipeTransition(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t EnumTagSinglePayload;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t *v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int8x16_t v57;
  uint64_t v58;
  char *v59;
  unsigned int v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74;
  _BOOL8 v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  void *v90;
  void *v91;
  unsigned int v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  unsigned __int8 v96;
  unsigned __int8 v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  void *v103;
  void *v104;
  void *v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  _OWORD v138[3];
  _BYTE v139[48];
  uint64_t v140[5];
  unsigned __int8 v141;
  __int128 v142[2];
  unsigned __int8 v143;
  _BYTE v144[48];
  _OWORD v145[2];
  uint64_t v146;
  char v147;

  v136 = a2;
  v135 = (char *)a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v2);
  v132 = (uint64_t)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_18_0();
  v133 = v5;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_18_0();
  v129 = v7;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_18_0();
  v130 = v9;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_18_0();
  v134 = v11;
  OUTLINED_FUNCTION_8_4();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v126 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v126 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v126 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v126 - v22;
  v24 = type metadata accessor for ConversationControlsRecipe();
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v25);
  v30 = (char *)&v126 - v29;
  v31 = MEMORY[0x1E0C80A78](v28);
  v33 = (uint64_t *)((char *)&v126 - v32);
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v126 - v34;
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v136, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if ((_DWORD)EnumTagSinglePayload != 1)
  {
    v127 = v15;
    v128 = v27;
    v131 = v33;
    v126 = v30;
    outlined init with take of ConversationControlsRecipe((uint64_t)v23, (uint64_t)v35);
    v41 = (uint64_t)v135;
    outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v135, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    v42 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v24);
    v136 = v24;
    if (v42 == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      memset(v145, 0, sizeof(v145));
      v146 = 0;
      v147 = -1;
    }
    else
    {
      outlined init with copy of ConversationControlsType((uint64_t)v21, (uint64_t)v145);
      outlined destroy of ConversationControlsRecipe((uint64_t)v21);
    }
    v37 = v137;
    v43 = (uint64_t)v18;
    outlined init with copy of ConversationControlsType((uint64_t)v35, (uint64_t)v144);
    v44 = &demangling cache variable for type metadata for ConversationControlsType?;
    outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v145, (uint64_t)v140, &demangling cache variable for type metadata for ConversationControlsType?);
    outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v144, (uint64_t)v142, &demangling cache variable for type metadata for ConversationControlsType?);
    if (v141 == 255)
    {
      OUTLINED_FUNCTION_42_23((uint64_t)v144);
      OUTLINED_FUNCTION_42_23((uint64_t)v145);
      if (v143 == 255)
      {
        OUTLINED_FUNCTION_45_26(v49, &demangling cache variable for type metadata for ConversationControlsType?);
        OUTLINED_FUNCTION_26_30(v50, v51, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        OUTLINED_FUNCTION_12_51();
        goto LABEL_15;
      }
    }
    else
    {
      outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v140, (uint64_t)v139, &demangling cache variable for type metadata for ConversationControlsType?);
      if (v143 != 255)
      {
        outlined init with take of ConversationControlsType(v142, v138);
        static ConversationControlsType.== infix(_:_:)((uint64_t)v139);
        v46 = v45;
        outlined destroy of ConversationControlsType((uint64_t)v138);
        OUTLINED_FUNCTION_43_0((uint64_t)v144);
        OUTLINED_FUNCTION_43_0((uint64_t)v145);
        outlined destroy of ConversationControlsType((uint64_t)v139);
        OUTLINED_FUNCTION_43_0((uint64_t)v140);
        OUTLINED_FUNCTION_26_30(v47, v48, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        OUTLINED_FUNCTION_12_51();
        if ((v46 & 1) == 0)
          goto LABEL_20;
LABEL_15:
        v52 = (uint64_t)v127;
        outlined init with take of ConversationControlsRecipe?(v43, (uint64_t)v127);
        OUTLINED_FUNCTION_40_25(v52);
        if (v53)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
          v92 = 254;
          v54 = v134;
        }
        else
        {
          OUTLINED_FUNCTION_51_19();
          v87 = v52 + v86;
          v88 = *(id *)v87;
          v89 = *(void **)(v87 + 16);
          v90 = *(void **)(v87 + 32);
          v91 = *(void **)(v87 + 48);
          v92 = *(unsigned __int8 *)(v87 + 72);
          outlined copy of SystemApertureElement?(*(id *)v87, *(_QWORD *)(v87 + 8), v89, *(_QWORD *)(v87 + 24), v90, *(_QWORD *)(v87 + 40), v91);
          outlined destroy of ConversationControlsRecipe(v52);
          if (v88 == (id)1)
          {
            v92 = 254;
          }
          else
          {

          }
          v54 = v134;
          v44 = v131;
        }
        OUTLINED_FUNCTION_51_19();
        v94 = (char *)v44 + v93;
        v95 = *(_QWORD *)v94;
        v96 = v94[72];
        if (v95 == 1)
          v97 = -2;
        else
          v97 = v96;
        if (v92 <= 0xFD)
        {
          if (v97 > 0xFDu)
            goto LABEL_21;
          v98 = static SystemApertureElement.AlertingStyle.== infix(_:_:)(v92, v97);
          OUTLINED_FUNCTION_53_18();
          if ((v98 & 1) == 0)
          {
LABEL_22:
            outlined init with copy of ConversationControlsType((uint64_t)v35, (uint64_t)v140);
            if (v141 == 2)
            {
              outlined destroy of ConversationControlsType((uint64_t)v140);
            }
            else if (v141 != 6
                   || v140[0] != 5
                   || (v57 = vorrq_s8(*(int8x16_t *)&v140[1], *(int8x16_t *)&v140[3]),
                       *(_QWORD *)&vorr_s8(*(int8x8_t *)v57.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v57, v57, 8uLL))))
            {
              outlined destroy of ConversationControlsType((uint64_t)v140);
              OUTLINED_FUNCTION_51_19();
              v59 = &v35[v58];
              if (*(_QWORD *)v59 == 1 || *((_QWORD *)v59 + 8) != 4)
              {
                v69 = (v37 + OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_logger);
                Logger.logObject.getter();
                v70 = OUTLINED_FUNCTION_12_0();
                if (os_log_type_enabled(v69, v70))
                {
                  v71 = (uint8_t *)OUTLINED_FUNCTION_7_8();
                  *(_WORD *)v71 = 0;
                  OUTLINED_FUNCTION_130(&dword_1BD004000, v69, v70, "No alerting required because the new recipe doesn't allow a custom layout mode", v71);
                  OUTLINED_FUNCTION_60();
                }

                (*(void (**)(unint64_t, unint64_t))(*(_QWORD *)v37 + 216))(0xD00000000000001FLL, 0x80000001BD67A5C0);
                goto LABEL_41;
              }
              v60 = v59[72];
              if (v60 <= 0xFD)
              {
                outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v41, v54, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
                v99 = OUTLINED_FUNCTION_40_25(v54);
                if (v53)
                {
                  OUTLINED_FUNCTION_219(v99, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
                  v106 = 254;
                }
                else
                {
                  OUTLINED_FUNCTION_51_19();
                  v101 = v54 + v100;
                  v102 = *(id *)v101;
                  v103 = *(void **)(v101 + 16);
                  v104 = *(void **)(v101 + 32);
                  v105 = *(void **)(v101 + 48);
                  v106 = *(unsigned __int8 *)(v101 + 72);
                  outlined copy of SystemApertureElement?(*(id *)v101, *(_QWORD *)(v101 + 8), v103, *(_QWORD *)(v101 + 24), v104, *(_QWORD *)(v101 + 40), v105);
                  outlined destroy of ConversationControlsRecipe(v54);
                  if (v102 == (id)1)
                  {
                    v106 = 254;
                  }
                  else
                  {

                  }
                  v37 = v137;
                  v41 = (uint64_t)v135;
                }
                if ((v60 & 0x80) == 0 || v106 > 0xFD || (v106 & 0xC0) != 0x40)
                {
                  SystemApertureAlertingManager.requestAlertingAssertion(style:type:)(v60, (uint64_t)v35);
                  outlined destroy of ConversationControlsRecipe((uint64_t)v35);
                  goto LABEL_42;
                }
              }
              v61 = (v37 + OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_logger);
              v62 = v41;
              v63 = v130;
              outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v62, v130, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
              v64 = (uint64_t)v126;
              outlined init with copy of ConversationControlsRecipe((uint64_t)v35, (uint64_t)v126);
              Logger.logObject.getter();
              v65 = OUTLINED_FUNCTION_12_0();
              if (OUTLINED_FUNCTION_21_12(v65))
              {
                v66 = OUTLINED_FUNCTION_105();
                *(_QWORD *)&v145[0] = OUTLINED_FUNCTION_105();
                *(_DWORD *)v66 = 136315394;
                v67 = v63;
                v68 = v129;
                outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v67, v129, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
                OUTLINED_FUNCTION_40_25(v68);
                if (v53)
                {
                  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v68, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
                  memset(v140, 0, sizeof(v140));
                  v141 = -1;
                }
                else
                {
                  outlined init with copy of ConversationControlsType(v68, (uint64_t)v140);
                  outlined destroy of ConversationControlsRecipe(v68);
                }
                v114 = specialized >> prefix<A>(_:)((uint64_t)v140, v107, v108, v109, v110, v111, v112, v113);
                OUTLINED_FUNCTION_45_26(v114, &demangling cache variable for type metadata for ConversationControlsType?);
                v140[0] = OUTLINED_FUNCTION_9_57(v114, v115, (uint64_t *)v145);
                OUTLINED_FUNCTION_44_23();
                OUTLINED_FUNCTION_54_1();
                outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v130, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
                *(_WORD *)(v66 + 12) = 2080;
                v116 = (uint64_t)v126;
                outlined init with copy of ConversationControlsType((uint64_t)v126, (uint64_t)v140);
                v124 = specialized >> prefix<A>(_:)((uint64_t)v140, v117, v118, v119, v120, v121, v122, v123);
                outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v140, &demangling cache variable for type metadata for ConversationControlsType?);
                v140[0] = OUTLINED_FUNCTION_9_57(v124, v125, (uint64_t *)v145);
                OUTLINED_FUNCTION_44_23();
                OUTLINED_FUNCTION_54_1();
                outlined destroy of ConversationControlsRecipe(v116);
                OUTLINED_FUNCTION_26_6(&dword_1BD004000, v61, v65, "No alerting required for transition from %s to %s", (uint8_t *)v66);
                OUTLINED_FUNCTION_25_6();
                OUTLINED_FUNCTION_60();
              }
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v63, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
              v85 = v64;
LABEL_40:
              outlined destroy of ConversationControlsRecipe(v85);

LABEL_41:
              outlined destroy of ConversationControlsRecipe((uint64_t)v35);
              goto LABEL_42;
            }
            v61 = (v37 + OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_logger);
            v72 = v133;
            outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v41, v133, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
            v73 = (uint64_t)v128;
            outlined init with copy of ConversationControlsRecipe((uint64_t)v35, (uint64_t)v128);
            Logger.logObject.getter();
            v74 = OUTLINED_FUNCTION_12_0();
            v75 = OUTLINED_FUNCTION_41_3(v74);
            if (v75)
            {
              v76 = OUTLINED_FUNCTION_105();
              v137 = OUTLINED_FUNCTION_105();
              v140[0] = v137;
              *(_DWORD *)v76 = 136315394;
              specialized >> prefix<A>(_:)(v72);
              *(_QWORD *)&v145[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, v140);
              OUTLINED_FUNCTION_20_43();
              v79 = swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_219(v79, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
              *(_WORD *)(v76 + 12) = 2080;
              v80 = v73;
              v135 = v35;
              v81 = v132;
              outlined init with copy of ConversationControlsRecipe(v73, v132);
              __swift_storeEnumTagSinglePayload(v81, 0, 1, v136);
              specialized >> prefix<A>(_:)(v81);
              v83 = v82;
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v81, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
              *(_QWORD *)&v145[0] = OUTLINED_FUNCTION_9_57(v83, v84, v140);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              OUTLINED_FUNCTION_54_1();
              outlined destroy of ConversationControlsRecipe(v80);
              OUTLINED_FUNCTION_26_6(&dword_1BD004000, v61, (os_log_type_t)v44, "Ignoring recipe transition update (%s -> %s) because new recipe does not support alerting", (uint8_t *)v76);
              OUTLINED_FUNCTION_25_6();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_219(v75, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
            v85 = v73;
            goto LABEL_40;
          }
        }
        else
        {
          if (v97 <= 0xFDu)
            goto LABEL_21;
          OUTLINED_FUNCTION_53_18();
        }
        outlined destroy of ConversationControlsRecipe((uint64_t)v35);
        goto LABEL_3;
      }
      OUTLINED_FUNCTION_42_23((uint64_t)v144);
      OUTLINED_FUNCTION_42_23((uint64_t)v145);
      v49 = outlined destroy of ConversationControlsType((uint64_t)v139);
    }
    OUTLINED_FUNCTION_45_26(v49, &demangling cache variable for type metadata for (ConversationControlsType?, ConversationControlsType?));
    OUTLINED_FUNCTION_26_30(v55, v56, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    OUTLINED_FUNCTION_12_51();
LABEL_20:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v43, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    v54 = v134;
LABEL_21:
    OUTLINED_FUNCTION_53_18();
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_219(EnumTagSinglePayload, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  v37 = v137;
LABEL_3:
  v38 = (v37 + OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_logger);
  Logger.logObject.getter();
  v39 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v40 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v38, v39, "No alerting required because controls did not change", v40);
    OUTLINED_FUNCTION_60();
  }

LABEL_42:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall SystemApertureAlertingManager.invalidateAlertingAssertonIfFullScreen()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t ObjectType;
  os_log_type_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  _WORD *v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;

  v1 = v0;
  v2 = (uint8_t *)OUTLINED_FUNCTION_50_22();
  v3 = v1[4];
  ObjectType = swift_getObjectType();
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  OUTLINED_FUNCTION_10();
  if ((v3 & 1) != 0)
  {
    (*(void (**)(unint64_t, unint64_t))(*v1 + 216))(0xD00000000000001ELL, 0x80000001BD67A5E0);
  }
  else
  {
    OUTLINED_FUNCTION_24_36();
    v5 = OUTLINED_FUNCTION_23_41();
    if (OUTLINED_FUNCTION_5_9(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15))
    {
      v13 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_52_3(v13);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v16, (os_log_type_t)v1, "Ignoring invalidation request, full-screen presentation hasn't happened yet", v2);
      OUTLINED_FUNCTION_60();
    }

  }
}

uint64_t SystemApertureAlertingManager.requestAlertingAssertion(style:type:)(unsigned __int8 a1, uint64_t a2)
{
  uint64_t *v2;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  char v17;
  unsigned __int8 v18;

  v14 = 0;
  *(_QWORD *)&v15 = 0xE000000000000000;
  _StringGuts.grow(_:)(54);
  v6._object = (void *)0x80000001BD67A6C0;
  v6._countAndFlagsBits = 0xD000000000000034;
  String.append(_:)(v6);
  v18 = a1;
  v7._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      v8 = *v2;
      if ((a1 & 1) == 0)
      {
LABEL_4:
        v9 = (*(uint64_t (**)(_QWORD, unint64_t, uint64_t, _QWORD))(v8 + 160))(0, 0xE000000000000000, 1, 0);
        goto LABEL_10;
      }
    }
    else
    {
      v14 = 3;
      v15 = 0u;
      v16 = 0u;
      v17 = 6;
      static ConversationControlsType.== infix(_:_:)(a2);
      v11 = v10;
      outlined destroy of ConversationControlsType((uint64_t)&v14);
      v8 = *v2;
      if ((v11 & 1) == 0)
        goto LABEL_4;
    }
    v9 = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v8 + 168))(0, 0xE000000000000000, 0);
    goto LABEL_10;
  }
  if ((a1 & 1) != 0)
    v9 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*v2 + 168))(v14, v15, 1);
  else
    v9 = SystemApertureAlertingManager.requestPersistentAlertingAssertionUntilFirstFullScreenPresentation(reason:)(v14, (uint8_t *)v15);
LABEL_10:
  v12 = v9;
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Void __swiftcall SystemApertureAlertingManager.invalidateAlertingAssertion(reason:)(Swift::String reason)
{
  uint64_t v1;
  void *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  uint8_t *v8;
  os_log_type_t v9;
  _WORD *v10;
  NSObject *oslog;

  v2 = *(void **)(v1 + 40);
  if (v2)
  {
    if (objc_msgSend((id)OUTLINED_FUNCTION_14_58(), sel_isValid))
    {
      CurrentValueSubject.send(_:)();
      v3 = (v1 + OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_logger);
      Logger.logObject.getter();
      v4 = OUTLINED_FUNCTION_12_0();
      if (os_log_type_enabled(v3, v4))
      {
        v5 = (uint8_t *)OUTLINED_FUNCTION_7_8();
        *(_WORD *)v5 = 0;
        OUTLINED_FUNCTION_130(&dword_1BD004000, v3, v4, "Invalidating alerting assertion", v5);
        OUTLINED_FUNCTION_60();
      }

      v6 = OUTLINED_FUNCTION_315_0();
      v7 = (void *)MEMORY[0x1C3B72E00](v6);
      objc_msgSend(v2, sel_invalidateWithReason_, v7);
      OUTLINED_FUNCTION_19_0();

      return;
    }
    OUTLINED_FUNCTION_19_0();
  }
  v8 = (uint8_t *)(v1 + OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_logger);
  oslog = Logger.logObject.getter();
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v9))
  {
    v10 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_52_3(v10);
    OUTLINED_FUNCTION_130(&dword_1BD004000, oslog, v9, "Ignoring invalidation request, there's no valid alert to invalidate", v8);
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_42_0(oslog);
}

uint64_t SystemApertureAlertingManager.requestPersistentAlertingAssertionUntilFirstFullScreenPresentation(reason:)(uint64_t a1, uint8_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  NSObject *v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);

  v3 = v2;
  v5 = OUTLINED_FUNCTION_50_22();
  v6 = *(_QWORD *)(v3 + 32);
  ObjectType = swift_getObjectType();
  LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
  OUTLINED_FUNCTION_10();
  if ((v6 & 1) != 0)
  {
    v8 = OUTLINED_FUNCTION_24_36();
    v9 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_13_0(v9))
    {
      v10 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_124_3(v10);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v8, v5, "Ignoring request for alerting assertion because full-screen presentation has already happened", a2);
      OUTLINED_FUNCTION_60();
    }

    return 0;
  }
  else
  {
    v12 = OUTLINED_FUNCTION_315_0();
    return v13(v12);
  }
}

void SystemApertureAlertingManager.startAlerting(reason:includingWhileFullscreen:)(uint64_t a1, unint64_t a2, uint8_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  NSObject *v15;
  os_log_type_t v16;
  _WORD *v17;
  const char *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  os_log_type_t v30;
  _WORD *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock[6];

  v4 = v3;
  v8 = OUTLINED_FUNCTION_17_2();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_50_22();
  v13 = *(_QWORD *)(v4 + 32);
  ObjectType = swift_getObjectType();
  LOBYTE(v13) = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(ObjectType, v13);
  OUTLINED_FUNCTION_10();
  if ((v13 & 1) != 0 && (a3 & 1) == 0)
  {
    v15 = OUTLINED_FUNCTION_24_36();
    v16 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_13_0(v16))
    {
      v17 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_124_3(v17);
      v18 = "No alerting required for recipe transition because call UI is full-screen";
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  SystemApertureAlertingManager.systemApertureElementContext.getter();
  v12 = v19;
  a3 = (uint8_t *)objc_msgSend(v19, sel_requestAlertingAssertion);
  OUTLINED_FUNCTION_10();
  if (!a3)
  {
    v15 = OUTLINED_FUNCTION_24_36();
    v30 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_13_0(v30))
    {
      v31 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_124_3(v31);
      v18 = "Unable to obtain alerting assertion, likely because the system aperture element context isn't ready";
LABEL_11:
      OUTLINED_FUNCTION_130(&dword_1BD004000, v15, v12, v18, a3);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_15;
  }
  if (!-[uint8_t isValid](a3, sel_isValid))
  {
    v15 = OUTLINED_FUNCTION_24_36();
    v32 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_13_0(v32))
    {
      v33 = (uint8_t *)OUTLINED_FUNCTION_7_8();
      *(_WORD *)v33 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v15, v12, "Received an invalid alerting assertion", v33);
      OUTLINED_FUNCTION_60();
    }
    swift_unknownObjectRelease();
LABEL_15:

    goto LABEL_16;
  }
  v35 = a1;
  v20 = swift_allocObject();
  swift_weakInit();
  v36 = v4 + OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_logger;
  (*(void (**)(char *))(v9 + 16))((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v22 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v21, v11, v8);
  *(_QWORD *)(v23 + v22) = v20;
  aBlock[4] = (uint64_t)partial apply for closure #1 in SystemApertureAlertingManager.startAlerting(reason:includingWhileFullscreen:);
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed SBUISystemApertureAutomaticallyInvalidatable, @guaranteed String) -> ();
  aBlock[3] = (uint64_t)&block_descriptor_34;
  v24 = _Block_copy(aBlock);
  swift_release();
  -[uint8_t addInvalidationBlock:](a3, sel_addInvalidationBlock_, v24);
  _Block_release(v24);
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v25 = v36;
  Logger.logObject.getter();
  v26 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_41_3(v26))
  {
    v27 = OUTLINED_FUNCTION_105();
    v36 = OUTLINED_FUNCTION_105();
    v37 = (uint64_t)a3;
    aBlock[0] = v36;
    *(_DWORD *)v27 = 136315394;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SBUISystemApertureAutomaticallyInvalidatable);
    v28 = String.init<A>(reflecting:)();
    v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, aBlock);
    OUTLINED_FUNCTION_20_43();
    OUTLINED_FUNCTION_26_1();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    swift_bridgeObjectRetain();
    v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, a2, aBlock);
    OUTLINED_FUNCTION_20_43();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v25, (os_log_type_t)v11, "Obtained alerting assertion %s for reason: %s", (uint8_t *)v27);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_26_1();

  *(_QWORD *)(v4 + 40) = a3;
  swift_unknownObjectRelease();
LABEL_16:
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in SystemApertureAlertingManager.startAlerting(reason:includingWhileFullscreen:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  void *v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void *v33;
  char *v34;
  char *v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t aBlock[6];
  uint64_t v51;

  v7 = type metadata accessor for DispatchWorkItemFlags();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v48 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS();
  v46 = *(_QWORD *)(v9 - 8);
  v47 = v9;
  MEMORY[0x1E0C80A78](v9);
  v45 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTimeInterval();
  v41 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = type metadata accessor for DispatchTime();
  v40 = *(_QWORD *)(v44 - 8);
  v14 = MEMORY[0x1E0C80A78](v44);
  v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)v37 - v17;
  v43 = a5;
  v18 = a5 + 16;
  swift_unknownObjectRetain_n();
  v19 = Logger.logObject.getter();
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v38 = v11;
    v23 = v22;
    aBlock[0] = v22;
    v37[1] = v18;
    *(_DWORD *)v21 = 136315138;
    v39 = v7;
    v51 = a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SBUISystemApertureAutomaticallyInvalidatable);
    v24 = String.init<A>(reflecting:)();
    v51 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, aBlock);
    v7 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v19, v20, "Invalidated assertion %s", v21, 0xCu);
    swift_arrayDestroy();
    v26 = v23;
    v11 = v38;
    MEMORY[0x1C3B751B8](v26, -1, -1);
    MEMORY[0x1C3B751B8](v21, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(Strong + 40) = 0;
    swift_release();
    swift_unknownObjectRelease();
  }
  type metadata accessor for OS_dispatch_queue();
  v28 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  *v13 = 500;
  v29 = v41;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v41 + 104))(v13, *MEMORY[0x1E0DEF490], v11);
  v30 = v42;
  MEMORY[0x1C3B72C44](v16, v13);
  (*(void (**)(_QWORD *, uint64_t))(v29 + 8))(v13, v11);
  v31 = *(void (**)(char *, uint64_t))(v40 + 8);
  v32 = v44;
  v31(v16, v44);
  aBlock[4] = (uint64_t)partial apply for closure #1 in closure #1 in SystemApertureAlertingManager.startAlerting(reason:includingWhileFullscreen:);
  aBlock[5] = v43;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = (uint64_t)&block_descriptor_6_2;
  v33 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v34 = v45;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  v35 = v48;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B735B0](v30, v34, v35, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v7);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v47);
  return ((uint64_t (*)(char *, uint64_t))v31)(v30, v32);
}

uint64_t closure #1 in closure #1 in SystemApertureAlertingManager.startAlerting(reason:includingWhileFullscreen:)()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    CurrentValueSubject.send(_:)();
    return swift_release();
  }
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed SBUISystemApertureAutomaticallyInvalidatable, @guaranteed String) -> ()(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v4 = v3;
  swift_retain();
  v5 = swift_unknownObjectRetain();
  v1(v5, v2, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

void SystemApertureAlertingManager.deinit()
{
  uint64_t v0;
  uint64_t v1;

  outlined destroy of unowned CNKCallDetailsDeferredPresentationManager(v0 + 16);
  outlined destroy of unowned CNKCallDetailsDeferredPresentationManager(v0 + 24);
  swift_unknownObjectRelease();
  v1 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_17_1(v1);
  swift_release();
  OUTLINED_FUNCTION_0();
}

uint64_t SystemApertureAlertingManager.__deallocating_deinit()
{
  SystemApertureAlertingManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t specialized SystemApertureAlertingManager.init(systemApertureElement:sceneStateDescriber:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(a3 + 40) = 0;
  v9 = OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_logger;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v10 = type metadata accessor for Logger();
  v11 = __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a3 + v9, v11, v10);
  v12 = OBJC_IVAR____TtC15ConversationKit29SystemApertureAlertingManager_invalidationInProgressSubject;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  swift_allocObject();
  *(_QWORD *)(a3 + v12) = CurrentValueSubject.init(_:)();
  swift_unknownObjectUnownedInit();
  *(_QWORD *)(a3 + 32) = a6;
  swift_unknownObjectUnownedInit();
  CurrentValueSubject.send(_:)();

  swift_unknownObjectRelease();
  return a3;
}

id outlined copy of SystemApertureElement?(id result, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7)
{
  void *v8;
  id v9;
  id v10;
  id v11;

  if (result != (id)1)
  {
    v8 = result;
    v9 = a7;
    v10 = v8;
    v11 = a3;
    return a5;
  }
  return result;
}

uint64_t outlined init with take of ConversationControlsRecipe?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ObjC metadata update function for SystemApertureAlertingManager()
{
  return type metadata accessor for SystemApertureAlertingManager();
}

uint64_t type metadata accessor for SystemApertureAlertingManager()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SystemApertureAlertingManager;
  if (!type metadata singleton initialization cache for SystemApertureAlertingManager)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for SystemApertureAlertingManager()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SystemApertureAlertingManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureAlertingManager.__allocating_init(systemApertureElement:sceneStateDescriber:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of SystemApertureAlertingManager.requestEphemeralAlertingAssertion(reason:shouldOverridePersistentAssertion:includingWhileFullscreen:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of SystemApertureAlertingManager.requestPersistentAlertingAssertion(reason:includingWhileFullscreen:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of SystemApertureAlertingManager.updatePersistentToEphemeralAlertIfNeeded(reason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of SystemApertureAlertingManager.invalidatePersistentAlertingAssertion(reason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of SystemApertureAlertingManager.handleRecipeTransition(from:to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of SystemApertureAlertingManager.invalidateAlertingAssertonIfFullScreen()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of SystemApertureAlertingManager.invalidateAlertingAssertion(reason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t sub_1BD1C196C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD1C1990()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_17_2();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SystemApertureAlertingManager.startAlerting(reason:includingWhileFullscreen:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_15_11();
  OUTLINED_FUNCTION_17_2();
  v1 = OUTLINED_FUNCTION_315_0();
  return closure #1 in SystemApertureAlertingManager.startAlerting(reason:includingWhileFullscreen:)(v1, v2, v0, v3, v4);
}

uint64_t partial apply for closure #1 in closure #1 in SystemApertureAlertingManager.startAlerting(reason:includingWhileFullscreen:)()
{
  return closure #1 in closure #1 in SystemApertureAlertingManager.startAlerting(reason:includingWhileFullscreen:)();
}

BOOL OUTLINED_FUNCTION_39_31(os_log_type_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t oslog)
{
  return os_log_type_enabled(oslog, a1);
}

id @nonobjc UIImage.init(named:in:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;

  if (a2)
  {
    v4 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_imageNamed_inBundle_, v4, a3);

  return v5;
}

id RecentsJoinButton.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t key path setter for RecentsJoinButton.conversationMetadata : RecentsJoinButton(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of RecentOngoingConversationMetadata?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x60))(v6);
}

uint64_t RecentsJoinButton.conversationMetadata.didset()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v24 - v6;
  v8 = type metadata accessor for RecentOngoingConversationMetadata(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit17RecentsJoinButton_conversationMetadata;
  swift_beginAccess();
  outlined init with copy of RecentOngoingConversationMetadata?(v11, (uint64_t)v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    outlined destroy of RecentOngoingConversationMetadata?((uint64_t)v7);
LABEL_7:
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BD6441D0;
    outlined init with copy of RecentOngoingConversationMetadata?(v11, (uint64_t)v5);
    specialized >> prefix<A>(_:)((uint64_t)v5);
    v20 = v19;
    v22 = v21;
    outlined destroy of RecentOngoingConversationMetadata?((uint64_t)v5);
    *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v18 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v18 + 32) = v20;
    *(_QWORD *)(v18 + 40) = v22;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    return swift_bridgeObjectRelease();
  }
  outlined init with take of RecentOngoingConversationMetadata((uint64_t)v7, (uint64_t)v10);
  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v13 = objc_msgSend(v12, sel_conversationManager);

  v14 = (void *)TUConversationManager.conversation(with:)((uint64_t)v10);
  if (!v14)
  {
    outlined destroy of RecentOngoingConversationMetadata((uint64_t)v10);
    goto LABEL_7;
  }
  v15 = objc_msgSend(v14, sel_resolvedAudioVideoMode);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v16 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  if (v15 == (id)1)
  {
    v17 = @nonobjc UIImage.init(named:in:)(0xD000000000000011, 0x80000001BD67AA50, v16);
    objc_msgSend(v1, sel_setImage_forState_, v17, 0);
  }
  else
  {
    v17 = v14;
    v14 = @nonobjc UIImage.init(named:in:)(0x7475622D6E696F6ALL, 0xEB000000006E6F74, v16);
    objc_msgSend(v1, sel_setImage_forState_, v14, 0);
  }

  return outlined destroy of RecentOngoingConversationMetadata((uint64_t)v10);
}

void RecentsJoinButton.conversationMetadata.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit17RecentsJoinButton_conversationMetadata;
  OUTLINED_FUNCTION_1_73();
  outlined init with copy of RecentOngoingConversationMetadata?(v3, a1);
  OUTLINED_FUNCTION_32();
}

uint64_t outlined init with copy of RecentOngoingConversationMetadata?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t RecentsJoinButton.conversationMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit17RecentsJoinButton_conversationMetadata;
  OUTLINED_FUNCTION_60_0();
  outlined assign with copy of RecentOngoingConversationMetadata?(a1, v3);
  swift_endAccess();
  RecentsJoinButton.conversationMetadata.didset();
  return outlined destroy of RecentOngoingConversationMetadata?(a1);
}

uint64_t outlined assign with copy of RecentOngoingConversationMetadata?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of RecentOngoingConversationMetadata?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t (*RecentsJoinButton.conversationMetadata.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_60_0();
  return RecentsJoinButton.conversationMetadata.modify;
}

uint64_t RecentsJoinButton.conversationMetadata.modify(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return RecentsJoinButton.conversationMetadata.didset();
  return result;
}

id RecentsJoinButton.init()()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  Class v10;
  uint64_t v11;
  id v12;
  objc_super v14;

  v1 = OUTLINED_FUNCTION_4_70();
  OUTLINED_FUNCTION_0_10(v1);
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for RecentsJoinButton();
  v2 = objc_msgSendSuper2(&v14, sel_initWithFrame_, 0.0, 0.0, 32.0, 32.0);
  v3 = (void *)objc_opt_self();
  v4 = v2;
  v5 = objc_msgSend(v3, sel_clearColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v6 = (void *)objc_opt_self();
  v7 = v4;
  v8 = @nonobjc UIImage.init(named:in:)(0x7475622D6E696F6ALL, 0xEB000000006E6F74, objc_msgSend(v6, sel_conversationKit));
  objc_msgSend(v7, sel_setImage_forState_, v8, 0);

  v9 = v7;
  v10 = RecentsJoinButton.handoffOrJoinMenu.getter();
  objc_msgSend(v9, sel_setMenu_, v10);

  v12 = OUTLINED_FUNCTION_23_2(v11, sel_setShowsMenuAsPrimaryAction_);
  OUTLINED_FUNCTION_23_2((uint64_t)v12, sel__setChangesSelectionAsPrimaryAction_);

  return v9;
}

uint64_t type metadata accessor for RecentsJoinButton()
{
  uint64_t result;

  result = type metadata singleton initialization cache for RecentsJoinButton;
  if (!type metadata singleton initialization cache for RecentsJoinButton)
    return swift_getSingletonMetadata();
  return result;
}

Class RecentsJoinButton.handoffOrJoinMenu.getter()
{
  id v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::String v12;
  UIMenu v13;
  void *v14;
  void *v15;
  void *v17;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v19;
  Swift::String swift__string;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDeviceRouteGlyphForDisplayStyle_, 0);
  if (!v0)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
    v14 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    return 0;
  }
  v1 = v0;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  swift__string._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD67A8E0;
  v3._countAndFlagsBits = 0xD000000000000017;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  swift__string._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, swift__string);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  v6 = v1;
  v7 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  RecentsJoinButton.handoffContext.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String?, UIImage?));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String, UIImage));
  if (!swift_dynamicCast())
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
    v15 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    return 0;
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v8 = v17;
  v9 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIMenu);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v10 + 32) = v9;
  *(_QWORD *)(v10 + 40) = v7;
  preferredElementSize = v10;
  specialized Array._endMutation()();
  v11 = v7;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v19.value.super.isa = 0;
  v19.is_nil = 0;
  v13.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v12, (Swift::String_optional)0, v19, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;

  return v13.super.super.isa;
}

id RecentsJoinButton.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void RecentsJoinButton.init(coder:)()
{
  void *v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_4_70();
  OUTLINED_FUNCTION_0_10(v1);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

UIControlEvents __swiftcall RecentsJoinButton._controlEventsForActionTriggered()()
{
  return 64;
}

UIContextMenuConfiguration_optional __swiftcall RecentsJoinButton.contextMenuInteraction(_:configurationForMenuAtLocation:)(UIContextMenuInteraction _, CGPoint configurationForMenuAtLocation)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  objc_class *v12;
  Swift::Bool v13;
  uint64_t v14;
  UIContextMenuConfiguration_optional result;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x58))();
  specialized >> prefix<A>(_:)((uint64_t)v5);
  v8 = v7;
  v10 = v9;
  outlined destroy of RecentOngoingConversationMetadata?((uint64_t)v5);
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v10;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if ((RecentsJoinButton.isHandoffEligible.getter() & 1) != 0)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIContextMenuConfiguration);
    *(_QWORD *)(swift_allocObject() + 16) = v2;
    v11 = v2;
    v12 = (objc_class *)UIContextMenuConfiguration.init(identifier:previewProvider:actionProvider:)(0);
  }
  else
  {
    RecentsJoinButton.joinOngoingConversation()();
    v12 = 0;
  }
  result.value.super.isa = v12;
  result.is_nil = v13;
  return result;
}

id RecentsJoinButton.isHandoffEligible.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RecentOngoingConversationMetadata(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))(v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    outlined destroy of RecentOngoingConversationMetadata?((uint64_t)v3);
    return 0;
  }
  else
  {
    outlined init with take of RecentOngoingConversationMetadata((uint64_t)v3, (uint64_t)v7);
    v9 = objc_msgSend(*(id *)&v7[*(int *)(v4 + 24)], sel_handoffEligibility);
    if (v9)
    {
      v10 = v9;
      v8 = objc_msgSend(v9, sel_isEligible);

    }
    else
    {
      v8 = 0;
    }
    outlined destroy of RecentOngoingConversationMetadata((uint64_t)v7);
  }
  return v8;
}

uint64_t RecentsJoinButton.joinOngoingConversation()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(void);
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  NSURL *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for URL();
  v38 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v37 - v11;
  v13 = type metadata accessor for RecentOngoingConversationMetadata(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58);
  ((void (*)(uint64_t))v17)(v14);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) != 1)
  {
    v37 = v1;
    outlined init with take of RecentOngoingConversationMetadata((uint64_t)v12, (uint64_t)v16);
    v18 = (void *)objc_opt_self();
    v19 = objc_msgSend(v18, sel_sharedInstance);
    v20 = objc_msgSend(v19, sel_conversationManager);

    v21 = (void *)TUConversationManager.conversation(with:)((uint64_t)v16);
    if (!v21)
    {
      outlined destroy of RecentOngoingConversationMetadata((uint64_t)v16);
      goto LABEL_9;
    }
    if (objc_msgSend(v21, sel_state))
    {
      v22 = objc_msgSend((id)objc_opt_self(), sel_faceTimeShowInCallUIURL);
      if (v22)
      {
        v23 = v22;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        v24 = v38;
        v25 = v3;
        v26 = v37;
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v6, v25, v37);
        __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v26);
        result = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v26);
        if ((_DWORD)result != 1)
        {
          URL._bridgeToObjectiveC()(v28);
          v30 = v29;
          (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v26);
          TUOpenURL();
          v31 = v21;
LABEL_13:

          return outlined destroy of RecentOngoingConversationMetadata((uint64_t)v16);
        }
      }
      else
      {
        result = __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v37);
      }
      __break(1u);
      return result;
    }
    v30 = objc_msgSend(v18, sel_sharedInstance);
    v31 = TUConversation.joinConversationRequest()();
    objc_msgSend(v30, sel_launchAppForJoinRequest_, v31);

    goto LABEL_13;
  }
  outlined destroy of RecentOngoingConversationMetadata?((uint64_t)v12);
LABEL_9:
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1BD6441D0;
  v17();
  specialized >> prefix<A>(_:)((uint64_t)v10);
  v34 = v33;
  v36 = v35;
  outlined destroy of RecentOngoingConversationMetadata?((uint64_t)v10);
  *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v32 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v32 + 32) = v34;
  *(_QWORD *)(v32 + 40) = v36;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

id RecentsJoinButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void RecentsJoinButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RecentsJoinButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecentsJoinButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t RecentsJoinButton.handoffOngoingConversation()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(void);
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentOngoingConversationMetadata?);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v24 - v5;
  v7 = type metadata accessor for RecentOngoingConversationMetadata(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58);
  ((void (*)(uint64_t))v11)(v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    outlined destroy of RecentOngoingConversationMetadata?((uint64_t)v6);
  }
  else
  {
    outlined init with take of RecentOngoingConversationMetadata((uint64_t)v6, (uint64_t)v10);
    v12 = (void *)objc_opt_self();
    v13 = objc_msgSend(v12, sel_sharedInstance);
    v14 = objc_msgSend(v13, sel_conversationManager);

    v15 = (void *)TUConversationManager.conversation(with:)((uint64_t)v10);
    if (v15)
    {
      v16 = objc_msgSend(v15, sel_handoffEligibility);

      if (v16)
      {
        v17 = objc_msgSend(v12, sel_sharedInstance);
        objc_msgSend(v17, sel_continueHandoffForConversationWithEligibility_, v16);

        return outlined destroy of RecentOngoingConversationMetadata((uint64_t)v10);
      }
    }
    outlined destroy of RecentOngoingConversationMetadata((uint64_t)v10);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BD6441D0;
  v11();
  specialized >> prefix<A>(_:)((uint64_t)v4);
  v21 = v20;
  v23 = v22;
  outlined destroy of RecentOngoingConversationMetadata?((uint64_t)v4);
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v19 + 32) = v21;
  *(_QWORD *)(v19 + 40) = v23;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

id RecentsJoinButton.handoffContext.getter()
{
  id result;
  void *v1;
  id v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  uint64_t countAndFlagsBits;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  id v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_deviceType);

    if (v2 == (id)4)
    {
      v12 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v18._object = (void *)0xE000000000000000;
      v13._countAndFlagsBits = 0x4F52465F4E494F4ALL;
      v13._object = (void *)0xEE00444150495F4DLL;
      v14.value._countAndFlagsBits = 0x61737265766E6F43;
      v14.value._object = (void *)0xEF74694B6E6F6974;
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      v18._countAndFlagsBits = 0;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v18)._countAndFlagsBits;

      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    }
    else if (v2 == (id)3)
    {
      v8 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v17._object = (void *)0xE000000000000000;
      v9._countAndFlagsBits = 0x4F52465F4E494F4ALL;
      v9._object = (void *)0xEE00444F50495F4DLL;
      v10.value._countAndFlagsBits = 0x61737265766E6F43;
      v10.value._object = (void *)0xEF74694B6E6F6974;
      v11._countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      v17._countAndFlagsBits = 0;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v17)._countAndFlagsBits;

      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    }
    else
    {
      if (v2 != (id)2)
        return 0;
      v3 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v4._countAndFlagsBits = 0xD000000000000010;
      v16._object = (void *)0xE000000000000000;
      v4._object = (void *)0x80000001BD67A9D0;
      v5.value._countAndFlagsBits = 0x61737265766E6F43;
      v5.value._object = (void *)0xEF74694B6E6F6974;
      v6._countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      v16._countAndFlagsBits = 0;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v16)._countAndFlagsBits;

      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    }
    @nonobjc UIImage.__allocating_init(systemName:)();
    return (id)countAndFlagsBits;
  }
  __break(1u);
  return result;
}

void closure #1 in RecentsJoinButton.handoffOrJoinMenu.getter(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = a2 + 16;
  OUTLINED_FUNCTION_1_73();
  v5 = MEMORY[0x1C3B752C0](v4);
  if (v5)
  {
    v6 = (void *)v5;
    a3();

  }
  OUTLINED_FUNCTION_32();
}

uint64_t sub_1BD1C34B8()
{
  uint64_t v0;

  return swift_deallocObject();
}

Class partial apply for closure #1 in RecentsJoinButton.contextMenuInteraction(_:configurationForMenuAtLocation:)()
{
  return RecentsJoinButton.handoffOrJoinMenu.getter();
}

uint64_t sub_1BD1C34FC(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x58))();
}

uint64_t ObjC metadata update function for RecentsJoinButton()
{
  return type metadata accessor for RecentsJoinButton();
}

void type metadata completion function for RecentsJoinButton()
{
  unint64_t v0;

  type metadata accessor for RecentOngoingConversationMetadata?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for RecentsJoinButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecentsJoinButton.conversationMetadata.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of RecentsJoinButton.conversationMetadata.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of RecentsJoinButton.conversationMetadata.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

void type metadata accessor for RecentOngoingConversationMetadata?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for RecentOngoingConversationMetadata?)
  {
    type metadata accessor for RecentOngoingConversationMetadata(255);
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for RecentOngoingConversationMetadata?);
  }
}

uint64_t outlined destroy of RecentOngoingConversationMetadata(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RecentOngoingConversationMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BD1C369C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in RecentsJoinButton.handoffOrJoinMenu.getter(uint64_t a1)
{
  uint64_t v1;

  closure #1 in RecentsJoinButton.handoffOrJoinMenu.getter(a1, v1, (void (*)(void))RecentsJoinButton.joinOngoingConversation());
}

void partial apply for closure #2 in RecentsJoinButton.handoffOrJoinMenu.getter(uint64_t a1)
{
  uint64_t v1;

  closure #1 in RecentsJoinButton.handoffOrJoinMenu.getter(a1, v1, (void (*)(void))RecentsJoinButton.handoffOngoingConversation());
}

BOOL ScreenShareAttributes.Style.isWindowed.getter(uint64_t a1)
{
  return a1 == 2;
}

uint64_t ScreenShareAttributes.Style.debugDescription.getter(void *a1)
{
  id v3;
  uint64_t v4;
  Swift::String v5;

  if (!a1)
    return 0x656E6F6E2ELL;
  if (a1 == (void *)1)
    return 0x7263536C6C75662ELL;
  if (a1 == (void *)2)
    return 0x776F646E69772ELL;
  outlined copy of ScreenShareAttributes.Style(a1);
  v3 = objc_msgSend(a1, sel_description);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_19_39(v4);
  OUTLINED_FUNCTION_53();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  outlined consume of ScreenShareAttributes.Style(a1);
  return 0x79616C707369642ELL;
}

id outlined copy of ScreenShareAttributes.Style(id result)
{
  if ((unint64_t)result >= 3)
    return result;
  return result;
}

void outlined consume of ScreenShareAttributes.Style(id a1)
{
  if ((unint64_t)a1 >= 3)

}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ScreenShareAttributes.Style()
{
  void **v0;

  return ScreenShareAttributes.Style.debugDescription.getter(*v0);
}

void *ScreenShareAttributes.defaultScaleFactor.unsafeMutableAddressor()
{
  return &static ScreenShareAttributes.defaultScaleFactor;
}

double static ScreenShareAttributes.defaultScaleFactor.getter()
{
  return 1.0;
}

uint64_t ScreenShareAttributes.sessionUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_33_0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void *ScreenShareAttributes.style.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for ScreenShareAttributes(0) + 20));
  outlined copy of ScreenShareAttributes.Style(v1);
  return v1;
}

uint64_t type metadata accessor for ScreenShareAttributes(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ScreenShareAttributes);
}

double ScreenShareAttributes.displayScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_25_36() + 24));
}

uint64_t ScreenShareAttributes.displayCornerRadius.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_25_36() + 28));
}

double ScreenShareAttributes.scaleFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ScreenShareAttributes(0) + 32));
}

BOOL ScreenShareAttributes.displayIsScaled.getter()
{
  uint64_t v0;
  double v1;
  id v2;
  float v3;
  float v4;

  v1 = *(double *)(v0 + *(int *)(type metadata accessor for ScreenShareAttributes(0) + 32));
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultScaleFactor);
  objc_msgSend(v2, sel_floatValue);
  v4 = v3;

  return v1 != v4;
}

BOOL ScreenShareAttributes.isWindowed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ScreenShareAttributes(0) + 20)) == 2;
}

double ScreenShareAttributes.originalResolution.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ScreenShareAttributes(0) + 36));
}

uint64_t ScreenShareAttributes.originalResolution.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t result;
  double *v10;

  result = type metadata accessor for ScreenShareAttributes(0);
  v10 = (double *)(v4 + *(int *)(result + 36));
  *v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  return result;
}

uint64_t (*ScreenShareAttributes.originalResolution.modify())(_QWORD)
{
  type metadata accessor for ScreenShareAttributes(0);
  return TPNumberPadCharacter.rawValue.getter;
}

BOOL ScreenShareAttributes.isValid.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ScreenShareAttributes(0) + 20)) != 0;
}

uint64_t ScreenShareAttributes.debugDescription.getter()
{
  uint64_t v0;
  Swift::String v1;
  int *v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  double v7;
  Swift::String v8;
  id v9;
  float v10;
  float v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  Swift::String v17;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;

  _StringGuts.grow(_:)(178);
  v19._countAndFlagsBits = 0xD000000000000022;
  v19._object = (void *)0x80000001BD67AA70;
  OUTLINED_FUNCTION_49(v19);
  OUTLINED_FUNCTION_33_0();
  lazy protocol witness table accessor for type UUID and conformance UUID();
  v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  OUTLINED_FUNCTION_49(v20);
  OUTLINED_FUNCTION_2_1();
  v1._countAndFlagsBits = (unsigned __int16)OUTLINED_FUNCTION_17_45() | 0x3D656C7974730000;
  v1._object = (void *)0xE800000000000000;
  String.append(_:)(v1);
  v2 = (int *)type metadata accessor for ScreenShareAttributes(0);
  v3 = *(_QWORD *)(v0 + v2[5]);
  _print_unlocked<A, B>(_:_:)();
  v4._countAndFlagsBits = (unsigned __int16)OUTLINED_FUNCTION_17_45() | 0x616C707369640000;
  v4._object = (void *)0xEF3D656C61635379;
  String.append(_:)(v4);
  v21._countAndFlagsBits = Double.description.getter();
  OUTLINED_FUNCTION_49(v21);
  OUTLINED_FUNCTION_53();
  v22._countAndFlagsBits = 0xD000000000000016;
  v22._object = (void *)0x80000001BD67AAA0;
  OUTLINED_FUNCTION_49(v22);
  if ((*(_BYTE *)(v0 + v2[7] + 8) & 1) != 0)
    v5 = 7104878;
  else
    v5 = String.init<A>(reflecting:)();
  OUTLINED_FUNCTION_19_39(v5);
  OUTLINED_FUNCTION_53();
  v6._countAndFlagsBits = (unsigned __int16)OUTLINED_FUNCTION_17_45() | 0x46656C6163730000;
  v6._object = (void *)0xEE003D726F746361;
  String.append(_:)(v6);
  v7 = *(double *)(v0 + v2[8]);
  v23._countAndFlagsBits = Double.description.getter();
  OUTLINED_FUNCTION_49(v23);
  OUTLINED_FUNCTION_53();
  v8._object = (void *)0x80000001BD67AAC0;
  v8._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v8);
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultScaleFactor);
  objc_msgSend(v9, sel_floatValue);
  v11 = v10;

  if (v7 == v11)
    v12 = 0x65736C6166;
  else
    v12 = 1702195828;
  OUTLINED_FUNCTION_19_39(v12);
  OUTLINED_FUNCTION_53();
  v24._countAndFlagsBits = 0xD000000000000015;
  v24._object = (void *)0x80000001BD67AAE0;
  OUTLINED_FUNCTION_49(v24);
  v25._countAndFlagsBits = CGRect.description.getter();
  OUTLINED_FUNCTION_49(v25);
  OUTLINED_FUNCTION_2_1();
  v13._countAndFlagsBits = (unsigned __int16)OUTLINED_FUNCTION_17_45() | 0x646E695773690000;
  v13._object = (void *)0xED00003D6465776FLL;
  String.append(_:)(v13);
  if (v3 == 2)
    v14 = 1702195828;
  else
    v14 = 0x65736C6166;
  if (v3 == 2)
    v15 = 0xE400000000000000;
  else
    v15 = 0xE500000000000000;
  v16 = v15;
  String.append(_:)(*(Swift::String *)&v14);
  OUTLINED_FUNCTION_2_1();
  v17._countAndFlagsBits = (unsigned __int16)OUTLINED_FUNCTION_17_45() | 0x7274744175740000;
  v17._object = (void *)0xEF3D736574756269;
  String.append(_:)(v17);
  ScreenShareAttributes.tuCallScreenShareAttributes.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUCallScreenShareAttributes?);
  v26._countAndFlagsBits = String.init<A>(describing:)();
  OUTLINED_FUNCTION_49(v26);
  swift_bridgeObjectRelease();
  return 0;
}

id ScreenShareAttributes.tuCallScreenShareAttributes.getter()
{
  uint64_t v0;
  id v1;
  int *v2;
  void *v3;
  Class isa;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  double *v14;
  id v15;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD1F0]), sel_init);
  v2 = (int *)type metadata accessor for ScreenShareAttributes(0);
  v3 = *(void **)(v0 + v2[5]);
  if ((unint64_t)v3 >= 2)
  {
    if (v3 == (void *)2)
    {
      objc_msgSend(v1, sel_setWindowed_, 1);
    }
    else
    {
      OUTLINED_FUNCTION_123((uint64_t)v3, sel_setDisplayID_);
      objc_msgSend(v1, sel_setWindowed_, 0);
      outlined consume of ScreenShareAttributes.Style(v3);
    }
  }
  isa = UUID._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_21_10((uint64_t)isa, sel_setWindowUUID_);

  v5 = (void *)objc_opt_self();
  OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v5, sel_currentDeviceFamily), sel_setDeviceFamily_);
  v6 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v5, sel_currentDeviceHomeButtonType), sel_setDeviceHomeButtonType_);
  OUTLINED_FUNCTION_123((uint64_t)v6, sel_setStyle_);
  v7 = OUTLINED_FUNCTION_22_42();
  v8 = OUTLINED_FUNCTION_13_53(v7);
  OUTLINED_FUNCTION_12_52((uint64_t)v8, sel_setDisplayScale_);

  if ((*(_BYTE *)(v0 + v2[7] + 8) & 1) != 0)
  {
    v10 = 0;
  }
  else
  {
    v11 = OUTLINED_FUNCTION_22_42();
    v9 = OUTLINED_FUNCTION_13_53(v11);
    v10 = v9;
  }
  OUTLINED_FUNCTION_12_52((uint64_t)v9, sel_setCornerRadius_);

  v12 = OUTLINED_FUNCTION_22_42();
  v13 = OUTLINED_FUNCTION_13_53(v12);
  OUTLINED_FUNCTION_12_52((uint64_t)v13, sel_setScaleFactor_);

  v14 = (double *)(v0 + v2[9]);
  v15 = objc_msgSend((id)objc_opt_self(), sel_valueWithRect_, *v14, v14[1], v14[2], v14[3]);
  OUTLINED_FUNCTION_4_24((uint64_t)v15, sel_setOriginalResolution_);

  return v1;
}

double default argument 5 of ScreenShareAttributes.init(sessionUUID:style:displayScale:displayCornerRadius:scaleFactor:originalResolution:)()
{
  return 0.0;
}

int *ScreenShareAttributes.init(sessionUUID:style:displayScale:displayCornerRadius:scaleFactor:originalResolution:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, double a10@<D4>, double a11@<D5>)
{
  uint64_t v22;
  int *result;
  uint64_t v24;
  double *v25;

  v22 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a5, a1, v22);
  result = (int *)type metadata accessor for ScreenShareAttributes(0);
  *(_QWORD *)(a5 + result[5]) = a2;
  *(double *)(a5 + result[6]) = a6;
  v24 = a5 + result[7];
  *(_QWORD *)v24 = a3;
  *(_BYTE *)(v24 + 8) = a4 & 1;
  *(double *)(a5 + result[8]) = a7;
  v25 = (double *)(a5 + result[9]);
  *v25 = a8;
  v25[1] = a9;
  v25[2] = a10;
  v25[3] = a11;
  return result;
}

uint64_t ScreenShareAttributes.tuStyle.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ScreenShareAttributes(0) + 20));
  if (v1 > 2)
    return 2;
  else
    return qword_1BD64F7A0[v1];
}

void TUScreenShareAttributes.update(with:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t EnumTagSinglePayload;
  NSUUID v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;

  v2 = v1;
  v4 = OUTLINED_FUNCTION_33_0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = OUTLINED_FUNCTION_9((uint64_t)objc_msgSend(v2, sel_setWindowed_, objc_msgSend(a1, sel_isWindowed)), sel_windowUUID);
  if (!v13)
  {
    EnumTagSinglePayload = OUTLINED_FUNCTION_83_0(v12, 1);
    goto LABEL_5;
  }
  v14 = v13;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v12, v8, v4);
  OUTLINED_FUNCTION_83_0(v12, 0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v12, 1, v4);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
LABEL_5:
    v16.super.isa = 0;
    goto LABEL_6;
  }
  v16.super.isa = UUID._bridgeToObjectiveC()().super.isa;
  EnumTagSinglePayload = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v12, v4);
LABEL_6:
  OUTLINED_FUNCTION_21_10(EnumTagSinglePayload, sel_setWindowUUID_);

  v18 = OUTLINED_FUNCTION_9(v17, sel_deviceFamily);
  v19 = OUTLINED_FUNCTION_123((uint64_t)v18, sel_setDeviceFamily_);
  v20 = OUTLINED_FUNCTION_9((uint64_t)v19, sel_deviceHomeButtonType);
  v21 = OUTLINED_FUNCTION_123((uint64_t)v20, sel_setDeviceHomeButtonType_);
  v22 = OUTLINED_FUNCTION_9((uint64_t)v21, sel_style);
  v23 = OUTLINED_FUNCTION_123((uint64_t)v22, sel_setStyle_);
  v24 = OUTLINED_FUNCTION_9((uint64_t)v23, sel_displayScale);
  OUTLINED_FUNCTION_4_24((uint64_t)v24, sel_setDisplayScale_);

  v26 = OUTLINED_FUNCTION_9(v25, sel_scaleFactor);
  OUTLINED_FUNCTION_4_24((uint64_t)v26, sel_setScaleFactor_);

  v28 = OUTLINED_FUNCTION_9(v27, sel_originalResolution);
  OUTLINED_FUNCTION_4_24((uint64_t)v28, sel_setOriginalResolution_);

  v30 = OUTLINED_FUNCTION_9(v29, sel_displayID);
  OUTLINED_FUNCTION_4_24((uint64_t)v30, sel_setDisplayID_);

}

uint64_t key path getter for SingleDisplaySharingSession.sessionDidCreateNewSession : SingleDisplaySharingSession@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> (@owned Color)partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
}

uint64_t key path setter for SingleDisplaySharingSession.sessionDidCreateNewSession : SingleDisplaySharingSession(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> (@owned Color)partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v7);
  *a2 = (uint64_t)v6;
  a2[1] = v5;
  return result;
}

void SingleDisplaySharingSession.sessionDidCreateNewSession.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

void SingleDisplaySharingSession.sessionDidCreateNewSession.setter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*v1);
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SingleDisplaySharingSession.sessionDidCreateNewSession.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for SingleDisplaySharingSession.sessionDidBegin : SingleDisplaySharingSession@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> (@owned Color)partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
}

uint64_t key path setter for SingleDisplaySharingSession.sessionDidBegin : SingleDisplaySharingSession(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> (@owned Color)partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 16);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v7);
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

void SingleDisplaySharingSession.sessionDidBegin.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

void SingleDisplaySharingSession.sessionDidBegin.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SingleDisplaySharingSession.sessionDidBegin.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for SingleDisplaySharingSession.sessionDidEnd : SingleDisplaySharingSession@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
}

uint64_t key path setter for SingleDisplaySharingSession.sessionDidEnd : SingleDisplaySharingSession(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 32);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v7);
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

void SingleDisplaySharingSession.sessionDidEnd.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

void SingleDisplaySharingSession.sessionDidEnd.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v1 + 32));
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SingleDisplaySharingSession.sessionDidEnd.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for SingleDisplaySharingSession.sessionDidChangeAttributes : SingleDisplaySharingSession@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> (@owned Color)partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
}

uint64_t key path setter for SingleDisplaySharingSession.sessionDidChangeAttributes : SingleDisplaySharingSession(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> (@owned Color)partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 48);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v7);
  *(_QWORD *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = v5;
  return result;
}

void SingleDisplaySharingSession.sessionDidChangeAttributes.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

void SingleDisplaySharingSession.sessionDidChangeAttributes.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v1 + 48));
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SingleDisplaySharingSession.sessionDidChangeAttributes.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for SingleDisplaySharingSession.sessionDidChangeContent : SingleDisplaySharingSession@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@unowned Font.Weight);
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
}

uint64_t key path setter for SingleDisplaySharingSession.sessionDidChangeContent : SingleDisplaySharingSession(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@unowned Font.Weight);
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 64);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v7);
  *(_QWORD *)(a2 + 64) = v6;
  *(_QWORD *)(a2 + 72) = v5;
  return result;
}

void SingleDisplaySharingSession.sessionDidChangeContent.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

void SingleDisplaySharingSession.sessionDidChangeContent.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v1 + 64));
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SingleDisplaySharingSession.sessionDidChangeContent.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for SingleDisplaySharingSession.sessionPickerCanceled : SingleDisplaySharingSession@<X0>(uint64_t a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();

  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = (void (*)())v5;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
}

uint64_t key path setter for SingleDisplaySharingSession.sessionPickerCanceled : SingleDisplaySharingSession(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 80);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v7);
  *(_QWORD *)(a2 + 80) = v6;
  *(_QWORD *)(a2 + 88) = v5;
  return result;
}

void SingleDisplaySharingSession.sessionPickerCanceled.getter()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
}

void SingleDisplaySharingSession.sessionPickerCanceled.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v1 + 80));
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*SingleDisplaySharingSession.sessionPickerCanceled.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SingleDisplaySharingSession.begin(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  float v25;
  float v26;
  char *v27;
  char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v38;
  char *v39;
  uint8_t *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ScreenShareAttributes?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v3 = v2 - v1;
  v4 = OUTLINED_FUNCTION_33_0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v9 = (int *)OUTLINED_FUNCTION_25_36();
  OUTLINED_FUNCTION_1_1();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v38 - v14;
  v16 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v16, sel_scale);
  v18 = v17;

  UUID.init()();
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_defaultCornerRadius);
  v21 = v20;
  if (v20)
  {
    objc_msgSend(v20, sel_doubleValue);
    v23 = v22;

  }
  else
  {
    v23 = 0;
  }
  v24 = objc_msgSend(v19, sel_defaultScaleFactor);
  objc_msgSend(v24, sel_floatValue);
  v26 = v25;

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v15, v8, v4);
  *(_QWORD *)&v15[v9[5]] = 1;
  *(_QWORD *)&v15[v9[6]] = v18;
  v27 = &v15[v9[7]];
  *(_QWORD *)v27 = v23;
  v27[8] = v21 == 0;
  *(double *)&v15[v9[8]] = v26;
  v28 = &v15[v9[9]];
  *(_OWORD *)v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v29 = type metadata accessor for Logger();
  __swift_project_value_buffer(v29, (uint64_t)&static Log.screenSharing);
  outlined init with copy of ScreenShareAttributes((uint64_t)v15, (uint64_t)v13);
  v30 = Logger.logObject.getter();
  v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)OUTLINED_FUNCTION_105();
    v43 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v32 = 136315138;
    v40 = v32 + 4;
    outlined init with copy of ScreenShareAttributes((uint64_t)v13, v3);
    __swift_storeEnumTagSinglePayload(v3, 0, 1, (uint64_t)v9);
    specialized >> prefix<A>(_:)(v3);
    v39 = v13;
    v34 = v33;
    v36 = v35;
    OUTLINED_FUNCTION_20_44();
    v42 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_2_1();
    outlined destroy of ScreenShareAttributes((uint64_t)v39);
    _os_log_impl(&dword_1BD004000, v30, v31, "Began single display sharing session with attributes %s", v32, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  outlined destroy of ScreenShareAttributes((uint64_t)v13);

  if (*v41)
  {
    OUTLINED_FUNCTION_23_42();
    OUTLINED_FUNCTION_11_57();
    OUTLINED_FUNCTION_20_44();
  }
  if (v41[2])
  {
    OUTLINED_FUNCTION_23_42();
    OUTLINED_FUNCTION_11_57();
    OUTLINED_FUNCTION_20_44();
  }
  return outlined destroy of ScreenShareAttributes((uint64_t)v15);
}

Swift::Void __swiftcall SingleDisplaySharingSession.end()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void (*v6)(void);

  v1 = v0;
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Log.screenSharing);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "Ending single display sharing session", v5, 2u);
    OUTLINED_FUNCTION_60();
  }

  v6 = *(void (**)(void))(v1 + 32);
  if (v6)
    v6();
  OUTLINED_FUNCTION_18();
}

double SingleDisplaySharingSession.init()@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

__n128 SingleDisplaySharingSession.init(sessionDidCreateNewSession:sessionDidBegin:sessionDidEnd:sessionDidChangeAttributes:sessionDidChangeContent:sessionPickerCanceled:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11, unint64_t a12)
{
  __n128 result;

  result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  a9[5].n128_u64[1] = a12;
  return result;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionDidCreateNewSession.getter in conformance SingleDisplaySharingSession()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*v0);
  return v1;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionDidCreateNewSession.setter in conformance SingleDisplaySharingSession(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;

  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*v2);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*protocol witness for ScreenSharingSessionProvider.sessionDidCreateNewSession.modify in conformance SingleDisplaySharingSession())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionDidBegin.getter in conformance SingleDisplaySharingSession()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v1;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionDidBegin.setter in conformance SingleDisplaySharingSession(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*protocol witness for ScreenSharingSessionProvider.sessionDidBegin.modify in conformance SingleDisplaySharingSession())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionDidEnd.getter in conformance SingleDisplaySharingSession()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v1;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionDidEnd.setter in conformance SingleDisplaySharingSession(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*protocol witness for ScreenSharingSessionProvider.sessionDidEnd.modify in conformance SingleDisplaySharingSession())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionDidChangeAttributes.getter in conformance SingleDisplaySharingSession()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v1;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionDidChangeAttributes.setter in conformance SingleDisplaySharingSession(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v2 + 48));
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*protocol witness for ScreenSharingSessionProvider.sessionDidChangeAttributes.modify in conformance SingleDisplaySharingSession())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionDidChangeContent.getter in conformance SingleDisplaySharingSession()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v1;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionDidChangeContent.setter in conformance SingleDisplaySharingSession(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v2 + 64));
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*protocol witness for ScreenSharingSessionProvider.sessionDidChangeContent.modify in conformance SingleDisplaySharingSession())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionPickerCanceled.getter in conformance SingleDisplaySharingSession()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v1;
}

uint64_t protocol witness for ScreenSharingSessionProvider.sessionPickerCanceled.setter in conformance SingleDisplaySharingSession(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v2 + 80));
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*protocol witness for ScreenSharingSessionProvider.sessionPickerCanceled.modify in conformance SingleDisplaySharingSession())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t outlined init with copy of ScreenShareAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScreenShareAttributes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ScreenShareAttributes(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ScreenShareAttributes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined destroy of ScreenShareAttributes?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ScreenShareAttributes?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for ScreenShareAttributes(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = *(void **)((char *)a2 + v8);
    if ((unint64_t)v9 >= 3)
      v10 = v9;
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v11 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v15 = (_OWORD *)((char *)a1 + v14);
    v16 = (_OWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
  }
  return a1;
}

void destroy for ScreenShareAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = *(void **)(a1 + *(int *)(a2 + 20));
  if ((unint64_t)v5 >= 3)

}

uint64_t initializeWithCopy for ScreenShareAttributes(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  if ((unint64_t)v8 >= 3)
    v9 = v8;
  *(_QWORD *)(a1 + v7) = v8;
  v10 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v14 = (_OWORD *)(a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  return a1;
}

uint64_t assignWithCopy for ScreenShareAttributes(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  if ((unint64_t)v8 >= 3)
  {
    if ((unint64_t)v9 >= 3)
    {
      *(_QWORD *)(a1 + v7) = v9;
      v11 = v9;

      goto LABEL_8;
    }

    v9 = *(void **)(a2 + v7);
    goto LABEL_6;
  }
  if ((unint64_t)v9 < 3)
  {
LABEL_6:
    *(_QWORD *)(a1 + v7) = v9;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;
LABEL_8:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = (uint64_t *)(a2 + v12);
  v15 = *v14;
  *(_BYTE *)(v13 + 8) = *((_BYTE *)v14 + 8);
  *(_QWORD *)v13 = v15;
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v16 = a3[9];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  v17[3] = v18[3];
  return a1;
}

uint64_t initializeWithTake for ScreenShareAttributes(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v12 = a3[9];
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  return a1;
}

uint64_t assignWithTake for ScreenShareAttributes(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  v9 = *(_QWORD *)(a2 + v7);
  if ((unint64_t)v8 >= 3)
  {
    if (v9 >= 3)
    {
      *(_QWORD *)(a1 + v7) = v9;

    }
    else
    {

      *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
    }
  }
  else
  {
    *(_QWORD *)(a1 + v7) = v9;
  }
  v10 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v14 = (_OWORD *)(a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenShareAttributes()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1C5808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 3;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenShareAttributes()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD1C5894(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    OUTLINED_FUNCTION_0_29(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 + 2);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for ScreenShareAttributes()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ScreenShareAttributes.Style(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for ScreenShareAttributes.Style(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for ScreenShareAttributes.Style(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **assignWithTake for ScreenShareAttributes.Style(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenShareAttributes.Style(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScreenShareAttributes.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenShareAttributes.Style()
{
  return &type metadata for ScreenShareAttributes.Style;
}

uint64_t *initializeBufferWithCopyOfBuffer for ScreenSharingSessionConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ScreenSharingSessionConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for UUID();
  result = __swift_getEnumTagSinglePayload(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for ScreenSharingSessionConfiguration(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for ScreenSharingSessionConfiguration(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;

  v6 = type metadata accessor for UUID();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for ScreenSharingSessionConfiguration(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for ScreenSharingSessionConfiguration(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;

  v6 = type metadata accessor for UUID();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingSessionConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1C5F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = OUTLINED_FUNCTION_33_0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScreenSharingSessionConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1C5FCC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_0_29(a1, v5, a3, v6);
}

uint64_t getEnumTag for ScreenSharingSessionConfiguration(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID();
  return __swift_getEnumTagSinglePayload(a1, 1, v2);
}

uint64_t destructiveInjectEnumTag for ScreenSharingSessionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID();
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v4);
}

uint64_t type metadata accessor for ScreenSharingSessionConfiguration(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ScreenSharingSessionConfiguration);
}

uint64_t type metadata completion function for ScreenSharingSessionConfiguration()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidCreateNewSession.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidCreateNewSession.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidCreateNewSession.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidBegin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidBegin.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidBegin.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidEnd.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidEnd.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidEnd.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidChangeAttributes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidChangeAttributes.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidChangeAttributes.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidChangeContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidChangeContent.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionDidChangeContent.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionPickerCanceled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionPickerCanceled.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.sessionPickerCanceled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.begin(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.update(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of ScreenSharingSessionProvider.end()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

_QWORD *destroy for SingleDisplaySharingSession(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (*result)
    result = (_QWORD *)swift_release();
  if (v1[2])
    result = (_QWORD *)swift_release();
  if (v1[4])
    result = (_QWORD *)swift_release();
  if (v1[6])
    result = (_QWORD *)swift_release();
  if (v1[8])
    result = (_QWORD *)swift_release();
  if (v1[10])
    return (_QWORD *)swift_release();
  return result;
}

_QWORD *initializeWithCopy for SingleDisplaySharingSession(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*a2)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = a2[2];
  if (v5)
  {
    v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  v7 = a2[4];
  if (v7)
  {
    v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  v9 = a2[6];
  if (v9)
  {
    v10 = a2[7];
    a1[6] = v9;
    a1[7] = v10;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  }
  v11 = a2[8];
  if (v11)
  {
    v12 = a2[9];
    a1[8] = v11;
    a1[9] = v12;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  }
  v13 = a2[10];
  if (v13)
  {
    v14 = a2[11];
    a1[10] = v13;
    a1[11] = v14;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  }
  return a1;
}

_QWORD *assignWithCopy for SingleDisplaySharingSession(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    swift_retain();
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  v13 = a2[6];
  if (a1[6])
  {
    if (v13)
    {
      v14 = a2[7];
      a1[6] = v13;
      a1[7] = v14;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    v15 = a2[7];
    a1[6] = v13;
    a1[7] = v15;
    swift_retain();
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  v16 = a2[8];
  if (a1[8])
  {
    if (v16)
    {
      v17 = a2[9];
      a1[8] = v16;
      a1[9] = v17;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    v18 = a2[9];
    a1[8] = v16;
    a1[9] = v18;
    swift_retain();
    goto LABEL_36;
  }
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
LABEL_36:
  v19 = a2[10];
  if (!a1[10])
  {
    if (v19)
    {
      v21 = a2[11];
      a1[10] = v19;
      a1[11] = v21;
      swift_retain();
      return a1;
    }
LABEL_42:
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
    return a1;
  }
  if (!v19)
  {
    swift_release();
    goto LABEL_42;
  }
  v20 = a2[11];
  a1[10] = v19;
  a1[11] = v20;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for SingleDisplaySharingSession(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  v13 = a2[6];
  if (a1[6])
  {
    if (v13)
    {
      v14 = a2[7];
      a1[6] = v13;
      a1[7] = v14;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    v15 = a2[7];
    a1[6] = v13;
    a1[7] = v15;
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  v16 = a2[8];
  if (a1[8])
  {
    if (v16)
    {
      v17 = a2[9];
      a1[8] = v16;
      a1[9] = v17;
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    v18 = a2[9];
    a1[8] = v16;
    a1[9] = v18;
    goto LABEL_36;
  }
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
LABEL_36:
  v19 = a2[10];
  if (!a1[10])
  {
    if (v19)
    {
      v21 = a2[11];
      a1[10] = v19;
      a1[11] = v21;
      return a1;
    }
LABEL_42:
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
    return a1;
  }
  if (!v19)
  {
    swift_release();
    goto LABEL_42;
  }
  v20 = a2[11];
  a1[10] = v19;
  a1[11] = v20;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleDisplaySharingSession(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 96))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleDisplaySharingSession(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleDisplaySharingSession()
{
  return &type metadata for SingleDisplaySharingSession;
}

uint64_t sub_1BD1C6800()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t JoinButtonViewModel.__allocating_init(service:letMeInViewModel:)(__int128 *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  JoinButtonViewModel.init(service:letMeInViewModel:)(a1, a2);
  return v4;
}

uint64_t JoinButtonViewModel.init(service:letMeInViewModel:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = 0;
  outlined init with take of Notice(a1, v2 + 24);
  *(_QWORD *)(v2 + 16) = a2;
  return v2;
}

uint64_t JoinButtonViewModel.controlType.getter()
{
  return JoinButtonViewModel.config.getter();
}

uint64_t JoinButtonViewModel.config.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  objc_class *v11;
  NSBundle v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  NSBundle v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v1 = v0;
  v2 = type metadata accessor for CallControlTextButtonStyle(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(_QWORD *)(v1 + 64))
  {
    v5 = *(_QWORD *)(v1 + 64);
  }
  else
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
    v7 = MEMORY[0x1C3B7262C](v6);
    v8 = (uint64_t)v4 + *(int *)(v2 + 20);
    v9 = type metadata accessor for ButtonRole();
    __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
    *v4 = v7;
    v10 = (void *)objc_opt_self();
    v11 = (objc_class *)objc_msgSend(v10, sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v12.super.isa = v11;
    v17 = OUTLINED_FUNCTION_49_2(v13, v14, v15, v16, v12);
    v19 = v18;

    v20 = (objc_class *)objc_msgSend(v10, sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v21.super.isa = v20;
    v26 = OUTLINED_FUNCTION_49_2(v22, v23, v24, v25, v21);
    v28 = v27;

    v29 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for CallControlsTextButtonConfiguration(0);
    swift_allocObject();
    CallControlsTextButtonConfiguration.init(buttonStyle:text:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)((uint64_t)v4, v17, v19, v26, v28, 0x747475426E696F6ALL, 0xEA00000000006E6FLL, 1, (uint64_t)partial apply for closure #1 in JoinButtonViewModel.config.getter, v29);
    v5 = v30;
    *(_QWORD *)(v1 + 64) = v30;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

void JoinButtonViewModel.enabled(for:)(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1BD1C6B4C(uint64_t a1)
{
  return BYTE4(a1) & 1;
}

Swift::Void __swiftcall JoinButtonViewModel.didTap()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  LetMeInCountdownViewModel.resetCountdown()();
  v2 = v0[6];
  v1 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v2);
  (*(void (**)(uint64_t, uint64_t))(v1 + 144))(v2, v1);
}

Swift::Void __swiftcall JoinButtonViewModel.onAppearance()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  OUTLINED_FUNCTION_1_74();
  if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2) == 96)
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    OUTLINED_FUNCTION_1_74();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4) == 3)
    {
      v6 = *(_QWORD *)(v0 + 48);
      v5 = *(_QWORD *)(v0 + 56);
      OUTLINED_FUNCTION_1_74();
      (*(void (**)(uint64_t, uint64_t))(v5 + 160))(v6, v5);
    }
  }
}

uint64_t key path setter for JoinButtonViewModel.config : JoinButtonViewModel()
{
  uint64_t v0;

  v0 = swift_retain();
  return JoinButtonViewModel.config.setter(v0);
}

uint64_t JoinButtonViewModel.config.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return swift_release();
}

uint64_t sub_1BD1C6CC8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in JoinButtonViewModel.config.getter()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    JoinButtonViewModel.didTap()();
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in JoinButtonViewModel.config.getter()
{
  return closure #1 in JoinButtonViewModel.config.getter();
}

uint64_t JoinButtonViewModel.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return v0;
}

uint64_t JoinButtonViewModel.__deallocating_deinit()
{
  JoinButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance JoinButtonViewModel(uint64_t a1)
{
  char v1;

  JoinButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL);
  return v1 & 1;
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance JoinButtonViewModel()
{
  return JoinButtonViewModel.controlType.getter();
}

uint64_t sub_1BD1C6DE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = JoinButtonViewModel.config.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for JoinButtonViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for JoinButtonViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JoinButtonViewModel.__allocating_init(service:letMeInViewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t key path getter for CameraViewController.cameraDelegate : CameraViewController@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for CameraViewController.cameraDelegate : CameraViewController(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t CameraViewController.cameraDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t CameraViewController.cameraDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*CameraViewController.cameraDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return ConversationControlsButton.delegate.modify;
}

void CameraViewController.effectBrowserViewController(_:didSelectAppWith:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char *v3;
  void *v4;
  objc_class *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t ObjectType;
  void *v18;
  objc_super v19;

  v4 = v3;
  v8 = (objc_class *)OUTLINED_FUNCTION_15_6();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
  v10 = MEMORY[0x1E0DEA968];
  if (a3)
  {
    swift_bridgeObjectRetain();
    v11 = String.init<A>(reflecting:)();
    v13 = v12;
  }
  else
  {
    v13 = 0xE300000000000000;
    v11 = 7104878;
  }
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (a3)
  {
    v14 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v14 = a2 & 0xFFFFFFFFFFFFLL;
    if (v14)
    {
      v15 = &v3[OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate];
      OUTLINED_FUNCTION_2_0();
      if (MEMORY[0x1C3B752C0](v15))
      {
        v16 = *((_QWORD *)v15 + 1);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v16 + 8))(a2, a3, ObjectType, v16);
        OUTLINED_FUNCTION_10();
      }
    }
    v18 = (void *)MEMORY[0x1C3B72E00](a2, a3);
  }
  else
  {
    v18 = 0;
  }
  v19.receiver = v4;
  v19.super_class = v8;
  objc_msgSendSuper2(&v19, sel_effectBrowserViewController_didSelectAppWithIdentifier_, a1, v18);

}

uint64_t CameraViewController.effectBrowserViewController(_:didSelect:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t ObjectType;
  objc_super v9;

  v9.receiver = v2;
  v9.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v9, sel_effectBrowserViewController_didSelectEffect_, a1, a2);
  v5 = &v2[OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate];
  OUTLINED_FUNCTION_2_0();
  result = MEMORY[0x1C3B752C0](v5);
  if (result)
  {
    v7 = *((_QWORD *)v5 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, ObjectType, v7);
    return OUTLINED_FUNCTION_10();
  }
  return result;
}

id CameraViewController.__allocating_init(captureMode:devicePosition:flashMode:aspectRatioCrop:)()
{
  id v0;
  id v1;
  SEL v2;

  v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_14());
  OUTLINED_FUNCTION_3_72();
  return objc_msgSend(v1, v2);
}

id CameraViewController.init(captureMode:devicePosition:flashMode:aspectRatioCrop:)()
{
  uint64_t v0;
  uint64_t ObjectType;
  objc_super *v2;
  SEL v3;

  OUTLINED_FUNCTION_0_14();
  ObjectType = swift_getObjectType();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_3_72();
  return objc_msgSendSuper2(v2, v3, v0, ObjectType);
}

id CameraViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of CameraViewControllerDelegate.didSelectApp(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of CameraViewControllerDelegate.didSelectEffect(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for CameraViewController()
{
  return objc_opt_self();
}

BOOL static MovingToScreeningStateService.Error.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void MovingToScreeningStateService.Error.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int MovingToScreeningStateService.Error.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MovingToScreeningStateService.Error(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MovingToScreeningStateService.Error.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MovingToScreeningStateService.Error()
{
  char *v0;

  return MovingToScreeningStateService.Error.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance MovingToScreeningStateService.Error(uint64_t a1)
{
  char *v1;

  MovingToScreeningStateService.Error.hash(into:)(a1, *v1);
}

void MovingToScreeningStateService.OnCreationResult.provider.getter()
{
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_0();
}

void MovingToScreeningStateService.OnCreationResult.callUUID.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

uint64_t MovingToScreeningStateService.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_17_2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void MovingToScreeningStateService.getStreamToken.getter()
{
  OUTLINED_FUNCTION_1_75();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for MovingToScreeningStateService()
{
  uint64_t result;

  result = type metadata singleton initialization cache for MovingToScreeningStateService;
  if (!type metadata singleton initialization cache for MovingToScreeningStateService)
    return swift_getSingletonMetadata();
  return result;
}

void MovingToScreeningStateService.onProviderCreation.getter()
{
  OUTLINED_FUNCTION_1_75();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MovingToScreeningStateService.startScreening(callUUID:)(Swift::String callUUID)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, void *, __n128);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _UNKNOWN **v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  object = callUUID._object;
  countAndFlagsBits = callUUID._countAndFlagsBits;
  v4 = type metadata accessor for MovingToScreeningStateService();
  v56 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v57 = v5;
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v7);
  v55 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for Logger();
  v9 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v54 = (uint64_t)&v50 - v13;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v50 - v16;
  v18 = *(int *)(v4 + 20);
  v61 = v1;
  v19 = *(uint64_t (**)(uint64_t, void *, __n128))(v1 + v18);
  v58 = countAndFlagsBits;
  v20 = v19(countAndFlagsBits, object, v15);
  type metadata accessor for Defaults();
  OUTLINED_FUNCTION_15();
  v21 = Defaults.init()();
  OUTLINED_FUNCTION_7_68(v21);
  OUTLINED_FUNCTION_16_43();
  v59 = v9;
  if ((countAndFlagsBits & 1) == 0 && !v20)
  {
    v22 = v60;
    OUTLINED_FUNCTION_14_59((uint64_t)v11, v61);
    OUTLINED_FUNCTION_13_54();
    v23 = Logger.logObject.getter();
    v24 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_7_9(v24))
    {
      v25 = (uint8_t *)OUTLINED_FUNCTION_105();
      v63 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v25 = 136446210;
      OUTLINED_FUNCTION_22_3();
      v62 = OUTLINED_FUNCTION_8_61();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_10_63();
      _os_log_impl(&dword_1BD004000, v23, (os_log_type_t)v6, "Recieved 0 stream token for call: %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_12_53();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v11, v22);
    v30 = 0;
    goto LABEL_8;
  }
  v52 = v20;
  v53 = v6;
  v26 = v60;
  OUTLINED_FUNCTION_14_59((uint64_t)v17, v61);
  OUTLINED_FUNCTION_13_54();
  v27 = Logger.logObject.getter();
  v28 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_7_9(v28))
  {
    v29 = OUTLINED_FUNCTION_105();
    v51 = OUTLINED_FUNCTION_105();
    v63 = v51;
    *(_DWORD *)v29 = 136446466;
    OUTLINED_FUNCTION_22_3();
    v62 = OUTLINED_FUNCTION_8_61();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_10_63();
    *(_WORD *)(v29 + 12) = 2050;
    v62 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v27, (os_log_type_t)v6, "Connecting call %{public}s to captionsClient with token %{public}ld", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_12_53();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v26);
  OUTLINED_FUNCTION_15();
  v32 = Defaults.init()();
  OUTLINED_FUNCTION_7_68(v32);
  OUTLINED_FUNCTION_16_43();
  v33 = (uint64_t)v53;
  if ((countAndFlagsBits & 1) != 0)
  {
    type metadata accessor for MockCaptionsProvider();
    OUTLINED_FUNCTION_15();
    v34 = MockCaptionsProvider.init()();
    v35 = &protocol witness table for MockCaptionsProvider;
  }
  else
  {
    v36 = v54;
    OUTLINED_FUNCTION_14_59(v54, v61);
    v37 = objc_allocWithZone((Class)type metadata accessor for CaptionsClientParticipantCaptionsProvider());
    v38 = CaptionsClientParticipantCaptionsProvider.init(logger:token:usage:)(v36, v52, 2);
    if (!v38)
    {
      v30 = 1;
LABEL_8:
      lazy protocol witness table accessor for type MovingToScreeningStateService.Error and conformance MovingToScreeningStateService.Error();
      swift_allocError();
      *v31 = v30;
      swift_willThrow();
      return;
    }
    v34 = (uint64_t)v38;
    v35 = &protocol witness table for CaptionsClientParticipantCaptionsProvider;
  }
  v60 = (uint64_t)v35;
  v39 = (uint64_t)v55;
  static TaskPriority.userInitiated.getter();
  v40 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v39, 0, 1, v40);
  outlined init with copy of MovingToScreeningStateService(v61, v33);
  type metadata accessor for MainActor();
  OUTLINED_FUNCTION_22_3();
  swift_unknownObjectRetain();
  v41 = static MainActor.shared.getter();
  v42 = v33;
  v43 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  v44 = (v57 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = swift_allocObject();
  v46 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v45 + 16) = v41;
  *(_QWORD *)(v45 + 24) = v46;
  outlined init with take of MovingToScreeningStateService(v42, v45 + v43);
  v47 = (uint64_t *)(v45 + v44);
  v48 = v60;
  *v47 = v34;
  v47[1] = v48;
  v49 = (uint64_t *)(v45 + ((v44 + 23) & 0xFFFFFFFFFFFFFFF8));
  *v49 = v58;
  v49[1] = (uint64_t)object;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  swift_unknownObjectRelease();
}

uint64_t closure #2 in MovingToScreeningStateService.startScreening(callUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  type metadata accessor for MainActor();
  swift_unknownObjectRetain();
  v8[7] = static MainActor.shared.getter();
  v8[8] = dispatch thunk of Actor.unownedExecutor.getter();
  v8[9] = v9;
  return swift_task_switch();
}

uint64_t closure #2 in MovingToScreeningStateService.startScreening(callUUID:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD);

  v1 = v0[2];
  v2 = (_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_1_75() + 24));
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(*(int *)*v2 + *v2);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  *v3 = v0;
  v3[1] = closure #2 in MovingToScreeningStateService.startScreening(callUUID:);
  return v5(v0[3], v0[4], v0[5], v0[6]);
}

{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t MovingToScreeningStateService.init(logger:getStreamToken:onProviderCreation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  _QWORD *v15;

  v12 = OUTLINED_FUNCTION_17_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = OUTLINED_FUNCTION_1_75();
  v14 = (_QWORD *)(a6 + *(int *)(result + 20));
  *v14 = a2;
  v14[1] = a3;
  v15 = (_QWORD *)(a6 + *(int *)(result + 24));
  *v15 = a4;
  v15[1] = a5;
  return result;
}

unint64_t lazy protocol witness table accessor for type MovingToScreeningStateService.Error and conformance MovingToScreeningStateService.Error()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MovingToScreeningStateService.Error and conformance MovingToScreeningStateService.Error;
  if (!lazy protocol witness table cache variable for type MovingToScreeningStateService.Error and conformance MovingToScreeningStateService.Error)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MovingToScreeningStateService.Error, &type metadata for MovingToScreeningStateService.Error);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MovingToScreeningStateService.Error and conformance MovingToScreeningStateService.Error);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MovingToScreeningStateService.Error and conformance MovingToScreeningStateService.Error;
  if (!lazy protocol witness table cache variable for type MovingToScreeningStateService.Error and conformance MovingToScreeningStateService.Error)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MovingToScreeningStateService.Error, &type metadata for MovingToScreeningStateService.Error);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MovingToScreeningStateService.Error and conformance MovingToScreeningStateService.Error);
  }
  return result;
}

uint64_t outlined init with copy of MovingToScreeningStateService(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MovingToScreeningStateService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD1C7E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_1_75() - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_unknownObjectRelease();
  v3 = OUTLINED_FUNCTION_17_2();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_31_7();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t outlined init with take of MovingToScreeningStateService(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MovingToScreeningStateService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #2 in MovingToScreeningStateService.startScreening(callUUID:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(OUTLINED_FUNCTION_1_75() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = (uint64_t *)(v1 + v6);
  v12 = *v11;
  v13 = v11[1];
  v14 = v1 + v7;
  v15 = *(_QWORD *)(v1 + v7);
  v16 = *(_QWORD *)(v14 + 8);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  return closure #2 in MovingToScreeningStateService.startScreening(callUUID:)(a1, v8, v9, v10, v12, v13, v15, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for MovingToScreeningStateService(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Logger();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)v4 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)v4 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for MovingToScreeningStateService(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for MovingToScreeningStateService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MovingToScreeningStateService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for MovingToScreeningStateService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MovingToScreeningStateService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MovingToScreeningStateService()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1C836C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_17_2();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MovingToScreeningStateService()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1C83EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_17_2();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for MovingToScreeningStateService()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MovingToScreeningStateService.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD1C8520 + 4 * byte_1BD64F895[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD1C8554 + 4 * byte_1BD64F890[v4]))();
}

uint64_t sub_1BD1C8554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1C855C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD1C8564);
  return result;
}

uint64_t sub_1BD1C8570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD1C8578);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD1C857C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD1C8584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MovingToScreeningStateService.Error()
{
  return &type metadata for MovingToScreeningStateService.Error;
}

uint64_t destroy for MovingToScreeningStateService.OnCreationResult()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MovingToScreeningStateService.OnCreationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MovingToScreeningStateService.OnCreationResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MovingToScreeningStateService.OnCreationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MovingToScreeningStateService.OnCreationResult()
{
  return &type metadata for MovingToScreeningStateService.OnCreationResult;
}

uint64_t key path setter for InsulatingView.content : <A>InsulatingView<A>(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x70))(*a1);
}

id InsulatingView.content.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + direct field offset for InsulatingView.content);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

void InsulatingView.content.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + direct field offset for InsulatingView.content);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

uint64_t (*InsulatingView.content.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

uint64_t InsulatingView.forwardHits.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + direct field offset for InsulatingView.forwardHits);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

void InsulatingView.forwardHits.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + direct field offset for InsulatingView.forwardHits);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

uint64_t (*InsulatingView.forwardHits.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

id InsulatingView.__allocating_init(frame:content:forwardHits:)(void *a1)
{
  objc_class *v1;
  id v3;

  OUTLINED_FUNCTION_17_7();
  v3 = objc_allocWithZone(v1);
  OUTLINED_FUNCTION_15_0();
  return InsulatingView.init(frame:content:forwardHits:)(a1);
}

id InsulatingView.init(frame:content:forwardHits:)(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double v10;
  objc_super *v11;
  SEL v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;

  OUTLINED_FUNCTION_17_7();
  v3 = *v1;
  v4 = *MEMORY[0x1E0DEEDD8];
  *(_QWORD *)((char *)v1 + direct field offset for InsulatingView.content) = v5;
  *((_BYTE *)v1 + direct field offset for InsulatingView.forwardHits) = v6;
  v19 = type metadata accessor for InsulatingView(0, *(_QWORD *)((v4 & v3) + 0x50), v7, v8);
  v9 = a1;
  v10 = OUTLINED_FUNCTION_15_0();
  v13 = objc_msgSendSuper2(v11, v12, v10, v1, v19);
  v14 = v9;
  v15 = v13;
  objc_msgSend(v15, sel_bounds);
  objc_msgSend(v14, sel_setBounds_);

  v16 = v14;
  objc_msgSend(v15, sel_center);
  objc_msgSend(v16, sel_setCenter_);

  objc_msgSend(v16, sel_setAutoresizingMask_, 18);
  objc_msgSend(v16, sel__setHostsLayoutEngine_, 1);
  objc_msgSend(v15, sel_addSubview_, v16);
  objc_msgSend(v16, sel_setNeedsLayout);
  objc_msgSend(v16, sel_layoutIfNeeded);
  v17 = v15;
  objc_msgSend(v17, sel_setAutoresizingMask_, 18);

  return v17;
}

uint64_t type metadata accessor for InsulatingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InsulatingView);
}

id InsulatingView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InsulatingView.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void @objc InsulatingView.init(coder:)()
{
  InsulatingView.init(coder:)();
}

void __swiftcall InsulatingView.hitTest(_:with:)(UIView_optional *__return_ptr retstr, CGPoint _, UIEvent_optional with)
{
  _QWORD *v3;
  Class isa;
  double y;
  double x;
  _QWORD *v7;
  uint64_t (*v8)(void);
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;

  isa = with.value.super.isa;
  y = _.y;
  x = _.x;
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((OUTLINED_FUNCTION_13_5(*v3) & 1) != 0)
  {
    v8 = *(uint64_t (**)(void))((*v7 & *v3) + 0x68);
    v9 = (void *)v8();
    objc_msgSend(v3, sel_convertPoint_toCoordinateSpace_, v9, x, y);
    v11 = v10;
    v13 = v12;

    v14 = (void *)v8();
    objc_msgSend(v14, sel_hitTest_withEvent_, isa, v11, v13);

  }
}

id @objc InsulatingView.hitTest(_:with:)(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;
  id v10;
  UIView_optional *v11;
  void *v12;
  void *v13;
  UIEvent_optional v15;

  v9 = a5;
  v10 = a1;
  v15.value.super.isa = (Class)a5;
  InsulatingView.hitTest(_:with:)(v11, (CGPoint)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2), v15);
  v13 = v12;

  return v13;
}

id InsulatingView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void InsulatingView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void @objc InsulatingView.init(frame:)()
{
  InsulatingView.init(frame:)();
}

id InsulatingView.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for InsulatingView(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void @objc InsulatingView.__ivar_destroyer(uint64_t a1)
{

}

void sub_1BD1C8D04(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x68))();
  OUTLINED_FUNCTION_0();
}

_QWORD *sub_1BD1C8D48(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1BD1C8D54(uint64_t **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = OUTLINED_FUNCTION_13_5(**a1) & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD1C8D8C(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x88))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata completion function for InsulatingView()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InsulatingView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InsulatingView.content.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of InsulatingView.content.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InsulatingView.content.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of InsulatingView.forwardHits.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of InsulatingView.forwardHits.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of InsulatingView.forwardHits.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of InsulatingView.__allocating_init(frame:content:forwardHits:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t ScreenSharingBroadcasterToolbar.toolbarPlacement.getter(uint64_t a1, char a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2 & 1;
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a1, a2 & 1);
  specialized Environment.wrappedValue.getter();
  v5 = v4;
  outlined consume of Environment<CGFloat>.Content(a1, v3);
  return v5;
}

uint64_t ScreenSharingBroadcasterToolbar.body.getter@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  char v11;
  uint64_t v12;

  v10 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v10 + 16) = a1;
  a2 &= 1u;
  *(_BYTE *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  v11 = a4 & 1;
  *(_BYTE *)(v10 + 40) = a4 & 1;
  v12 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v12 + 16) = a1;
  *(_BYTE *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  *(_BYTE *)(v12 + 40) = v11;
  *(_QWORD *)a5 = swift_getKeyPath();
  *(_BYTE *)(a5 + 8) = 0;
  *(_QWORD *)(a5 + 16) = partial apply for closure #1 in ScreenSharingBroadcasterToolbar.body.getter;
  *(_QWORD *)(a5 + 24) = v10;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_QWORD *)(a5 + 64) = partial apply for closure #2 in ScreenSharingBroadcasterToolbar.body.getter;
  *(_QWORD *)(a5 + 72) = v12;
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a1, a2);
  swift_retain();
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a1, a2);
  return swift_retain();
}

uint64_t closure #1 in ScreenSharingBroadcasterToolbar.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t result;

  swift_retain();
  specialized Environment.wrappedValue.getter();
  v3 = v2;
  v4 = swift_release();
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 240))(v4);
  v7 = v6;
  swift_release();
  v8 = (uint64_t *)((char *)a1
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TransitioningText<FadeOutFadeInTransition>)
                          + 40));
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  result = swift_storeEnumTagMultiPayload();
  *a1 = v5;
  a1[1] = v7;
  return result;
}

uint64_t partial apply for closure #1 in ScreenSharingBroadcasterToolbar.body.getter()
{
  return partial apply for closure #1 in ScreenSharingBroadcasterToolbar.body.getter((uint64_t (*)(_QWORD))closure #1 in ScreenSharingBroadcasterToolbar.body.getter);
}

uint64_t closure #2 in ScreenSharingBroadcasterToolbar.body.getter@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;

  v21 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Label<Text, Image>>);
  v20 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  a2 &= 1u;
  *(_BYTE *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = a3;
  *(_BYTE *)(v16 + 40) = a4 & 1;
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a1, a2);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
  Button.init(action:label:)();
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(a1, a2);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(a1, a2);
  v17 = Axis.rawValue.getter();
  v22 = v17 != Axis.rawValue.getter();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Label<Text, Image>> and conformance Button<A>, &demangling cache variable for type metadata for Button<Label<Text, Image>>);
  lazy protocol witness table accessor for type ScreenSharingToolbarButtonStyle and conformance ScreenSharingToolbarButtonStyle();
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v21, v15, v12);
}

uint64_t partial apply for closure #2 in ScreenSharingBroadcasterToolbar.body.getter()
{
  return partial apply for closure #1 in ScreenSharingBroadcasterToolbar.body.getter((uint64_t (*)(_QWORD))closure #2 in ScreenSharingBroadcasterToolbar.body.getter);
}

uint64_t partial apply for closure #1 in ScreenSharingBroadcasterToolbar.body.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16));
}

uint64_t closure #1 in closure #2 in ScreenSharingBroadcasterToolbar.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  specialized Environment.wrappedValue.getter();
  v1 = v0;
  v2 = swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 224))(v2);
  return swift_release();
}

uint64_t closure #2 in closure #2 in ScreenSharingBroadcasterToolbar.body.getter()
{
  return Label.init(title:icon:)();
}

uint64_t closure #1 in closure #2 in closure #2 in ScreenSharingBroadcasterToolbar.body.getter@<X0>(uint64_t a1@<X8>)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  Swift::String v10;

  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v10._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD67AD10;
  v3._countAndFlagsBits = 0xD000000000000013;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v10);

  lazy protocol witness table accessor for type String and conformance String();
  result = Text.init<A>(_:)();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  return result;
}

uint64_t closure #2 in closure #2 in closure #2 in ScreenSharingBroadcasterToolbar.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t ScreenSharingBroadcasterToolbar.init()()
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_5_68();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingBroadcasterViewModel);
  Environment.init<A>(_:)();
  return KeyPath;
}

uint64_t default argument 0 of ScreenSharingBroadcasterToolbar.init(toolbarPlacement:)()
{
  return swift_getKeyPath();
}

uint64_t ScreenSharingBroadcasterToolbar.init(toolbarPlacement:)(uint64_t a1)
{
  OUTLINED_FUNCTION_5_68();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingBroadcasterViewModel);
  Environment.init<A>(_:)();
  return a1;
}

uint64_t protocol witness for View.body.getter in conformance ScreenSharingBroadcasterToolbar@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ScreenSharingBroadcasterToolbar.body.getter(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

uint64_t ScreenSharingBroadcasterView.model.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScreenSharingBroadcasterViewModel>);
  State.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for ScreenSharingBroadcasterView.model : ScreenSharingBroadcasterView@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ScreenSharingBroadcasterView.model.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for ScreenSharingBroadcasterView.model : ScreenSharingBroadcasterView()
{
  swift_retain();
  return ScreenSharingBroadcasterView.model.setter();
}

uint64_t ScreenSharingBroadcasterView.model.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScreenSharingBroadcasterViewModel>);
  return State.wrappedValue.setter();
}

void (*ScreenSharingBroadcasterView.model.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  _QWORD *v6;

  v6 = malloc(0x38uLL);
  *a1 = v6;
  v6[4] = a2;
  v6[5] = a3;
  *v6 = a2;
  v6[1] = a3;
  swift_retain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v6[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScreenSharingBroadcasterViewModel>);
  State.wrappedValue.getter();
  return DropdownMenuButton.viewModel.modify;
}

uint64_t ScreenSharingBroadcasterView.$model.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScreenSharingBroadcasterViewModel>);
  State.projectedValue.getter();
  return v1;
}

uint64_t ScreenSharingBroadcasterView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  double (**v24)@<D0>(uint64_t@<X8>);
  uint64_t (**v25)@<X0>(uint64_t *@<X8>);
  uint64_t (**v26)@<X0>(uint64_t@<X8>);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (**v31)();
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v56 = a3;
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScreenSharingContentView<ModifiedContent<SystemRootLayerProxy, BezelEffectModifier>, TransitioningText<FadeOutFadeInTransition>, ScreenSharingBroadcasterToolbar?>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.environment<A>(_:)>>.0);
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_41();
  v45 = v9;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v44 = v11;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_41();
  v48 = v13;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>, _SafeAreaRegionsIgnoringLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_41();
  v50 = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0);
  v54 = *(_QWORD *)(v16 - 8);
  v55 = v16;
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_41();
  v53 = v17;
  v59 = a1;
  v60 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScreenSharingBroadcasterViewModel>);
  v18 = State.wrappedValue.getter();
  v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 248))(v18);
  swift_release();
  v20 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  v21 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  v22 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)v8 = swift_getKeyPath();
  *(_BYTE *)(v8 + 8) = 0;
  v23 = (uint64_t *)(v8 + v5[17]);
  *v23 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v8 + v5[18]) = (v19 & 1) == 0;
  v24 = (double (**)@<D0>(uint64_t@<X8>))(v8 + v5[19]);
  *v24 = partial apply for closure #1 in ScreenSharingBroadcasterView.body.getter;
  v24[1] = (double (*)@<D0>(uint64_t@<X8>))v20;
  v25 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v8 + v5[20]);
  *v25 = partial apply for closure #2 in ScreenSharingBroadcasterView.body.getter;
  v25[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v21;
  v26 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v8 + v5[21]);
  *v26 = partial apply for closure #3 in ScreenSharingBroadcasterView.body.getter;
  v26[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v22;
  v59 = a1;
  v60 = a2;
  swift_retain_n();
  swift_retain_n();
  OUTLINED_FUNCTION_16_44();
  OUTLINED_FUNCTION_5_68();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ScreenSharingContentView<ModifiedContent<SystemRootLayerProxy, BezelEffectModifier>, TransitioningText<FadeOutFadeInTransition>, ScreenSharingBroadcasterToolbar?> and conformance ScreenSharingContentView<A, B, C>, &demangling cache variable for type metadata for ScreenSharingContentView<ModifiedContent<SystemRootLayerProxy, BezelEffectModifier>, TransitioningText<FadeOutFadeInTransition>, ScreenSharingBroadcasterToolbar?>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingBroadcasterViewModel);
  v27 = v45;
  View.environment<A>(_:)();
  OUTLINED_FUNCTION_19();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v8, &demangling cache variable for type metadata for ScreenSharingContentView<ModifiedContent<SystemRootLayerProxy, BezelEffectModifier>, TransitioningText<FadeOutFadeInTransition>, ScreenSharingBroadcasterToolbar?>);
  v28 = v47;
  v29 = v44;
  v30 = v49;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v44, v27, v49);
  v31 = (uint64_t (**)())(v29 + *(int *)(v46 + 36));
  *v31 = closure #4 in ScreenSharingBroadcasterView.body.getter;
  v31[1] = 0;
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v30);
  v32 = static Animation.default.getter();
  v59 = a1;
  v60 = a2;
  v33 = OUTLINED_FUNCTION_16_44();
  LOBYTE(v8) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 248))(v33);
  swift_release();
  v34 = v48;
  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v29, v48, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>);
  v35 = v34 + *(int *)(v51 + 36);
  *(_QWORD *)v35 = v32;
  *(_BYTE *)(v35 + 8) = v8 & 1;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v29, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>);
  v36 = static SafeAreaRegions.keyboard.getter();
  LOBYTE(v28) = static Edge.Set.all.getter();
  v37 = v50;
  outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(v34, v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>);
  v38 = v37 + *(int *)(v52 + 36);
  *(_QWORD *)v38 = v36;
  *(_BYTE *)(v38 + 8) = v28;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v34, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>);
  v57 = a1;
  v58 = a2;
  State.projectedValue.getter();
  v39 = v59;
  v40 = v60;
  v41 = v61;
  swift_getKeyPath();
  v59 = v39;
  v60 = v40;
  v61 = v41;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<ScreenSharingBroadcasterViewModel>);
  Binding.subscript.getter();
  swift_release();
  OUTLINED_FUNCTION_11_0();
  swift_release();
  OUTLINED_FUNCTION_19();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlOnboardingView??);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type RemoteControlOnboardingView?? and conformance <A> A?();
  v42 = v53;
  View.sheet<A>(isPresented:onDismiss:content:)();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_19();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v37, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>, _SafeAreaRegionsIgnoringLayout>);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v56, v42, v55);
}

double closure #1 in ScreenSharingBroadcasterView.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  double result;
  __int128 v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScreenSharingBroadcasterViewModel>);
  v2 = State.wrappedValue.getter();
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 256))(v2);
  swift_release();
  if (one-time initialization token for forCurrentDisplay != -1)
    swift_once();
  v4 = xmmword_1EF4FCBB0;
  result = *((double *)&xmmword_1EF4FCBB0 + 1);
  *(_QWORD *)a1 = v3;
  v6 = unk_1EF4FCBA0;
  *(_OWORD *)(a1 + 8) = static BezelMetrics.forCurrentDisplay;
  *(_OWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 40) = v4;
  *(double *)(a1 + 48) = result;
  return result;
}

double partial apply for closure #1 in ScreenSharingBroadcasterView.body.getter@<D0>(uint64_t a1@<X8>)
{
  return closure #1 in ScreenSharingBroadcasterView.body.getter(a1);
}

uint64_t closure #2 in ScreenSharingBroadcasterView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScreenSharingBroadcasterViewModel>);
  v2 = State.wrappedValue.getter();
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 240))(v2);
  v5 = v4;
  swift_release();
  v6 = (uint64_t *)((char *)a1
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TransitioningText<FadeOutFadeInTransition>)
                          + 40));
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  result = swift_storeEnumTagMultiPayload();
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t partial apply for closure #2 in ScreenSharingBroadcasterView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  return closure #2 in ScreenSharingBroadcasterView.body.getter(a1);
}

uint64_t closure #3 in ScreenSharingBroadcasterView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t KeyPath;
  uint64_t result;
  char v6;
  char v7;
  __int128 v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScreenSharingBroadcasterViewModel>);
  v2 = State.wrappedValue.getter();
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 248))(v2);
  swift_release();
  if ((v3 & 1) != 0)
  {
    KeyPath = swift_getKeyPath();
    type metadata accessor for ScreenSharingBroadcasterViewModel();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingBroadcasterViewModel);
    result = Environment.init<A>(_:)();
    v7 = v6 & 1;
    v8 = (unint64_t)KeyPath;
  }
  else
  {
    result = 0;
    v7 = 0;
    v8 = xmmword_1BD64FA00;
  }
  *(_OWORD *)a1 = v8;
  *(_QWORD *)(a1 + 16) = result;
  *(_BYTE *)(a1 + 24) = v7;
  return result;
}

uint64_t partial apply for closure #3 in ScreenSharingBroadcasterView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in ScreenSharingBroadcasterView.body.getter(a1);
}

uint64_t closure #4 in ScreenSharingBroadcasterView.body.getter()
{
  Transaction.animationFrameInterval.setter();
  return Transaction.animationReason.setter();
}

void key path getter for ScreenSharingBroadcasterViewModel.isPresentingOnboardingView : ScreenSharingBroadcasterViewModel(uint64_t a1)
{
  _BYTE *v1;

  *v1 = OUTLINED_FUNCTION_10_64(a1) & 1;
  OUTLINED_FUNCTION_0();
}

void key path setter for ScreenSharingBroadcasterViewModel.isPresentingOnboardingView : ScreenSharingBroadcasterViewModel(unsigned __int8 *a1, uint64_t a2)
{
  OUTLINED_FUNCTION_9_58(a1, a2);
  OUTLINED_FUNCTION_0();
}

uint64_t closure #5 in ScreenSharingBroadcasterView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  MEMORY[0x1E0C80A78](v2);
  v48 = (uint64_t *)((char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = type metadata accessor for RemoteControlOnboardingView();
  MEMORY[0x1E0C80A78](v52);
  v47 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v51 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v50);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlOnboardingView?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Participant();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v53 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v19 = objc_msgSend(v18, sel_frontmostAudioOrVideoCall);

  if (!v19)
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v9);
  v20 = v19;
  if (one-time initialization token for shared != -1)
    swift_once();
  v21 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(unint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ScreenSharingInteractionController.shared)
                                                         + 0x178))(&v54);
  v22 = v54;
  v49 = v16;
  v46 = v8;
  if (v54 >> 61)
  {
    v27 = 1;
  }
  else
  {
    v23 = a1;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    v25 = swift_projectBox();
    v26 = *(int *)(v24 + 48);
    a1 = v23;
    v16 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v14, v25 + v26, v15);
    v27 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v14, v27, 1, v15);
  outlined consume of RemoteControlState(v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1)
  {

    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for Participant?);
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v9);
  }
  v45 = a1;
  v29 = v53;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v53, v14, v15);
  type metadata accessor for ConversationControlsManager(0);
  v30 = v20;
  v31 = ConversationControlsManager.__allocating_init(activeCall:)(v30);
  v32 = (*(uint64_t (**)(void))((*v21 & *(_QWORD *)v31) + 0x908))();
  MEMORY[0x1E0C80A78](v32);
  *(&v44 - 2) = (uint64_t)v29;
  specialized _ArrayProtocol.filter(_:)((uint64_t (*)(char *))partial apply for closure #1 in closure #5 in ScreenSharingBroadcasterView.body.getter, (uint64_t)(&v44 - 4), v33);
  v34 = v51;
  specialized Collection.first.getter(v35, v51);
  swift_bridgeObjectRelease();

  if (__swift_getEnumTagSinglePayload(v34, 1, v50) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v34, &demangling cache variable for type metadata for Participant?);
    v36 = 1;
  }
  else
  {
    v37 = (uint64_t)v46;
    _s15ConversationKit11ParticipantVWObTm_0(v34, (uint64_t)v46, type metadata accessor for Participant);
    KeyPath = swift_getKeyPath();
    v39 = (uint64_t)v48;
    *v48 = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    swift_storeEnumTagMultiPayload();
    v40 = v47;
    _s15ConversationKit11ParticipantVWObTm_0(v37, v47, type metadata accessor for Participant);
    v41 = v52;
    v42 = (uint64_t *)(v40 + *(int *)(v52 + 20));
    *v42 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    swift_storeEnumTagMultiPayload();
    outlined init with take of RemoteControlOnboardingView?(v39, v40 + *(int *)(v41 + 24), &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
    _s15ConversationKit11ParticipantVWObTm_0(v40, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RemoteControlOnboardingView);
    v36 = 0;
  }
  v43 = v45;
  __swift_storeEnumTagSinglePayload((uint64_t)v11, v36, 1, v52);
  outlined init with take of RemoteControlOnboardingView?((uint64_t)v11, v43, &demangling cache variable for type metadata for RemoteControlOnboardingView?);
  __swift_storeEnumTagSinglePayload(v43, 0, 1, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v53, v15);
}

uint64_t closure #1 in closure #5 in ScreenSharingBroadcasterView.body.getter(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v1 = *(void **)(a1 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (v1)
  {
    outlined bridged method (ob) of @objc TUHandle.normalizedValue.getter(v1);
    v3 = v2;
    v5 = v4;
  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  v6 = Participant.handle.getter();
  if (v5)
  {
    if (v3 == v6 && v5 == v7)
      v9 = 1;
    else
      v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t ScreenSharingBroadcasterView.init(model:)()
{
  uint64_t v1;

  OUTLINED_FUNCTION_5_68();
  State.init(wrappedValue:)();
  return v1;
}

uint64_t protocol witness for View.body.getter in conformance ScreenSharingBroadcasterView@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return ScreenSharingBroadcasterView.body.getter(*v1, v1[1], a1);
}

id ScreenSharingBroadcasterViewController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ScreenSharingBroadcasterViewController.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  objc_super v6;

  v1 = OBJC_IVAR____TtC15ConversationKit38ScreenSharingBroadcasterViewController_model;
  v2 = one-time initialization token for shared;
  v3 = v0;
  if (v2 != -1)
    swift_once();
  v4 = static ScreenSharingInteractionController.shared;
  OUTLINED_FUNCTION_5_68();
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)&v3[v1] = ScreenSharingBroadcasterViewModel.init(interactionController:)(v4);

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterViewController();
  return objc_msgSendSuper2(&v6, sel_initWithNibName_bundle_, 0, 0);
}

void ScreenSharingBroadcasterViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void ScreenSharingBroadcasterViewController.init(coder:)()
{
  char *v0;
  uint64_t v1;
  void *v2;

  v1 = OBJC_IVAR____TtC15ConversationKit38ScreenSharingBroadcasterViewController_model;
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = static ScreenSharingInteractionController.shared;
  OUTLINED_FUNCTION_5_68();
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)&v0[v1] = ScreenSharingBroadcasterViewModel.init(interactionController:)(v2);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ScreenSharingBroadcasterViewController.loadView()()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  Class isa;
  objc_super v44;

  v1 = v0;
  v44.receiver = v0;
  v44.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterViewController();
  objc_msgSendSuper2(&v44, sel_loadView);
  objc_msgSend(v0, sel_setOverrideUserInterfaceStyle_, 2);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  OUTLINED_FUNCTION_5_68();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  State.init(wrappedValue:)();
  v6 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LockScreenHostingController<ScreenSharingBroadcasterView>));
  v7 = (void *)UIHostingController.init(rootView:)();
  v8 = objc_msgSend(v7, sel_view);
  if (!v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = v8;
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v10 = OUTLINED_FUNCTION_4_16();
  if (!v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v11 = v10;
  v12 = objc_msgSend(v4, sel_clearColor);
  OUTLINED_FUNCTION_19_14((uint64_t)v12, sel_setBackgroundColor_);

  v13 = OUTLINED_FUNCTION_1_55();
  if (!v13)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v14 = v13;
  v15 = OUTLINED_FUNCTION_4_16();
  if (!v15)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v16 = v15;
  OUTLINED_FUNCTION_19_14((uint64_t)v15, sel_addSubview_);

  objc_msgSend(v1, sel_addChildViewController_, v7);
  objc_msgSend(v7, sel_didMoveToParentViewController_, v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v17 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v17 + 16) = xmmword_1BD644140;
  v18 = OUTLINED_FUNCTION_4_16();
  if (!v18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v19 = objc_msgSend(v18, sel_leadingAnchor);
  OUTLINED_FUNCTION_18_17();
  v20 = OUTLINED_FUNCTION_1_55();
  if (!v20)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, sel_leadingAnchor);
  OUTLINED_FUNCTION_14();
  v23 = OUTLINED_FUNCTION_2_75();
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v17 + 32) = v21;
  v24 = OUTLINED_FUNCTION_4_16();
  if (!v24)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v25 = objc_msgSend(v24, sel_trailingAnchor);
  OUTLINED_FUNCTION_18_17();
  v26 = OUTLINED_FUNCTION_1_55();
  if (!v26)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, sel_trailingAnchor);
  OUTLINED_FUNCTION_14();
  v29 = OUTLINED_FUNCTION_2_75();
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v17 + 40) = v27;
  v30 = OUTLINED_FUNCTION_4_16();
  if (!v30)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v31 = objc_msgSend(v30, sel_topAnchor);
  OUTLINED_FUNCTION_18_17();
  v32 = OUTLINED_FUNCTION_1_55();
  if (!v32)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, sel_topAnchor);
  OUTLINED_FUNCTION_14();
  v35 = OUTLINED_FUNCTION_2_75();
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v17 + 48) = v33;
  v36 = OUTLINED_FUNCTION_4_16();
  if (!v36)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v37 = objc_msgSend(v36, sel_bottomAnchor);
  OUTLINED_FUNCTION_18_17();
  v38 = OUTLINED_FUNCTION_1_55();
  if (v38)
  {
    v39 = v38;
    v40 = (void *)objc_opt_self();
    v41 = objc_msgSend(v39, sel_bottomAnchor);
    OUTLINED_FUNCTION_14();
    v42 = OUTLINED_FUNCTION_2_75();
    OUTLINED_FUNCTION_18_11();

    *(_QWORD *)(v17 + 56) = v39;
    specialized Array._endMutation()();
    type metadata accessor for NSLayoutConstraint();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_activateConstraints_, isa);

    return;
  }
LABEL_27:
  __break(1u);
}

id ScreenSharingBroadcasterViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void ScreenSharingBroadcasterViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t ScreenSharingBroadcasterViewController.__ivar_destroyer()
{
  return swift_release();
}

id ScreenSharingBroadcasterViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScreenSharingBroadcasterViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void outlined init with copy of ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_83(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1CADB4(uint64_t a1)
{
  _BYTE *v1;

  *v1 = OUTLINED_FUNCTION_10_64(a1) & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD1CADD4(unsigned __int8 *a1, uint64_t a2)
{
  OUTLINED_FUNCTION_9_58(a1, a2);
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>, _SafeAreaRegionsIgnoringLayout>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CDCF90];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ScreenSharingContentView<ModifiedContent<SystemRootLayerProxy, BezelEffectModifier>, TransitioningText<FadeOutFadeInTransition>, ScreenSharingBroadcasterToolbar?>);
    v3 = type metadata accessor for ScreenSharingBroadcasterViewModel();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ScreenSharingContentView<ModifiedContent<SystemRootLayerProxy, BezelEffectModifier>, TransitioningText<FadeOutFadeInTransition>, ScreenSharingBroadcasterToolbar?> and conformance ScreenSharingContentView<A, B, C>, &demangling cache variable for type metadata for ScreenSharingContentView<ModifiedContent<SystemRootLayerProxy, BezelEffectModifier>, TransitioningText<FadeOutFadeInTransition>, ScreenSharingBroadcasterToolbar?>);
    v5 = v4;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingBroadcasterViewModel and conformance ScreenSharingBroadcasterViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingBroadcasterViewModel);
    v7[2] = v2;
    v7[3] = v3;
    v7[4] = v5;
    v7[5] = v6;
    v7[0] = swift_getOpaqueTypeConformance2();
    v7[1] = MEMORY[0x1E0CDBC38];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v7);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlOnboardingView?? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type RemoteControlOnboardingView?? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type RemoteControlOnboardingView?? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for RemoteControlOnboardingView??);
    v2 = lazy protocol witness table accessor for type RemoteControlOnboardingView? and conformance <A> A?();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlOnboardingView?? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RemoteControlOnboardingView? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type RemoteControlOnboardingView? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type RemoteControlOnboardingView? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for RemoteControlOnboardingView?);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type RemoteControlOnboardingView and conformance RemoteControlOnboardingView, (void (*)(uint64_t))type metadata accessor for RemoteControlOnboardingView);
    v3 = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemoteControlOnboardingView? and conformance <A> A?);
  }
  return result;
}

uint64_t type metadata accessor for ScreenSharingBroadcasterViewController()
{
  return objc_opt_self();
}

uint64_t associated type witness table accessor for View.Body : View in ScreenSharingBroadcasterToolbar()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in ScreenSharingBroadcasterView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ScreenSharingBroadcasterToolbar(uint64_t a1)
{
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return swift_release();
}

uint64_t initializeWithCopy for ScreenSharingBroadcasterToolbar(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ScreenSharingBroadcasterToolbar(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  v8 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ScreenSharingBroadcasterToolbar(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  outlined consume of Environment<CGFloat>.Content(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingBroadcasterToolbar(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingBroadcasterToolbar(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreenSharingBroadcasterToolbar()
{
  return &type metadata for ScreenSharingBroadcasterToolbar;
}

void initializeBufferWithCopyOfBuffer for ScreenSharingBroadcasterView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for ScreenSharingBroadcasterView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ScreenSharingBroadcasterView(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ScreenSharingBroadcasterView()
{
  return &type metadata for ScreenSharingBroadcasterView;
}

void sub_1BD1CB3CC()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ScreenSharingToolbar<TransitioningText<FadeOutFadeInTransition>, Never, Never, <<opaque return type of View.buttonStyle<A>(_:)>>.0> and conformance ScreenSharingToolbar<A, B, C, D>, &demangling cache variable for type metadata for ScreenSharingToolbar<TransitioningText<FadeOutFadeInTransition>, Never, Never, <<opaque return type of View.buttonStyle<A>(_:)>>.0>);
}

uint64_t sub_1BD1CB3F8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>, _SafeAreaRegionsIgnoringLayout>);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for RemoteControlOnboardingView??);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.environment<A>(_:)>>.0, _TransactionModifier>, _AnimationModifier<Bool>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type RemoteControlOnboardingView?? and conformance <A> A?();
  return swift_getOpaqueTypeConformance2();
}

uint64_t partial apply for closure #1 in closure #5 in ScreenSharingBroadcasterView.body.getter(uint64_t a1)
{
  return closure #1 in closure #5 in ScreenSharingBroadcasterView.body.getter(a1) & 1;
}

void outlined init with take of RemoteControlOnboardingView?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_83(a1, a2, a3);
  OUTLINED_FUNCTION_49_9(v3);
  OUTLINED_FUNCTION_0();
}

void _s15ConversationKit11ParticipantVWObTm_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_49_9(v3);
  OUTLINED_FUNCTION_0();
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;

  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in ScreenSharingBroadcasterToolbar.body.getter()
{
  return closure #1 in closure #2 in ScreenSharingBroadcasterToolbar.body.getter();
}

unint64_t lazy protocol witness table accessor for type ScreenSharingToolbarButtonStyle and conformance ScreenSharingToolbarButtonStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingToolbarButtonStyle and conformance ScreenSharingToolbarButtonStyle;
  if (!lazy protocol witness table cache variable for type ScreenSharingToolbarButtonStyle and conformance ScreenSharingToolbarButtonStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingToolbarButtonStyle, &type metadata for ScreenSharingToolbarButtonStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingToolbarButtonStyle and conformance ScreenSharingToolbarButtonStyle);
  }
  return result;
}

uint64_t MomentsIndicatorViewModel.__allocating_init(type:remoteParticipantName:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_15();
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

id one-time initialization function for numberFormatter()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  static MomentsIndicatorViewModel.numberFormatter = (uint64_t)result;
  return result;
}

uint64_t *MomentsIndicatorViewModel.numberFormatter.unsafeMutableAddressor()
{
  if (one-time initialization token for numberFormatter != -1)
    swift_once();
  return &static MomentsIndicatorViewModel.numberFormatter;
}

id static MomentsIndicatorViewModel.numberFormatter.getter()
{
  if (one-time initialization token for numberFormatter != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return (id)static MomentsIndicatorViewModel.numberFormatter;
}

void static MomentsIndicatorViewModel.numberFormatter.setter(uint64_t a1)
{
  void *v2;

  if (one-time initialization token for numberFormatter != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  v2 = (void *)static MomentsIndicatorViewModel.numberFormatter;
  static MomentsIndicatorViewModel.numberFormatter = a1;

}

uint64_t (*static MomentsIndicatorViewModel.numberFormatter.modify())()
{
  if (one-time initialization token for numberFormatter != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t MomentsIndicatorViewModel.type.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MomentsIndicatorViewModel.text.getter()
{
  uint64_t v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  NSBundle v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *isa;
  uint64_t v37;
  id v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  NSBundle v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSBundle v49;
  NSBundle v50;
  uint64_t v51;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (objc_class *)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v51 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v51 - v9;
  if (!*(_BYTE *)(v0 + 16))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    OUTLINED_FUNCTION_8_62((id *)&static LocalizationSource.conversationKit);
    OUTLINED_FUNCTION_44_17();
    OUTLINED_FUNCTION_18_3();
    v26 = 0x80000001BD67AD70;
    goto LABEL_20;
  }
  if (*(_BYTE *)(v0 + 16) != 1)
  {
    v27 = *(_QWORD *)(v0 + 40);
    v30 = type metadata accessor for Locale();
    if (!v27)
    {
      OUTLINED_FUNCTION_77_0((uint64_t)v5, v28, v29, v30);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v46 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v46 + 16) = xmmword_1BD6441D0;
      v47 = *(_QWORD *)(v0 + 24);
      v19 = *(_QWORD *)(v0 + 32);
      *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v46 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v46 + 32) = v47;
      *(_QWORD *)(v46 + 40) = v19;
      v48 = one-time initialization token for conversationKit;
      swift_bridgeObjectRetain();
      if (v48 != -1)
        swift_once();
      OUTLINED_FUNCTION_10_65((id *)&static LocalizationSource.conversationKit);
      OUTLINED_FUNCTION_7_69();
      OUTLINED_FUNCTION_18_3();
      v49.super.isa = v1;
      OUTLINED_FUNCTION_49_2(0x5F4B4F4F545F4025, 0xED00004F544F4850, v19, v48, v49);
      String.init(format:locale:arguments:)();
      OUTLINED_FUNCTION_2_76();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_21_0();
      v24 = (uint64_t)v5;
      goto LABEL_28;
    }
    OUTLINED_FUNCTION_77_0((uint64_t)v8, v28, v29, v30);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v31 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v31 + 16) = xmmword_1BD645380;
    v33 = *(_QWORD *)(v0 + 24);
    v32 = *(_QWORD *)(v0 + 32);
    v34 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
    v35 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v31 + 64) = v35;
    *(_QWORD *)(v31 + 32) = v33;
    *(_QWORD *)(v31 + 40) = v32;
    isa = (void *)one-time initialization token for numberFormatter;
    swift_bridgeObjectRetain();
    if (isa != (void *)-1)
      swift_once();
    OUTLINED_FUNCTION_2_0();
    v37 = *(_QWORD *)(v0 + 40);
    v38 = (id)(v37 + 1);
    if (v37 == -1)
    {
      __break(1u);
      goto LABEL_32;
    }
    v39 = (id)static MomentsIndicatorViewModel.numberFormatter;
    isa = UInt._bridgeToObjectiveC()().super.super.isa;
    v38 = objc_msgSend(v39, sel_stringFromNumber_, isa);

    if (v38)
    {
      isa = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      v41 = v40;

      v42 = (_QWORD *)(v31 + 72);
      *(_QWORD *)(v31 + 96) = v34;
      *(_QWORD *)(v31 + 104) = v35;
      if (v41)
      {
        *v42 = isa;
        goto LABEL_26;
      }
    }
    else
    {
      v42 = (_QWORD *)(v31 + 72);
      *(_QWORD *)(v31 + 96) = v34;
      *(_QWORD *)(v31 + 104) = v35;
    }
    *v42 = 0;
    v41 = 0xE000000000000000;
LABEL_26:
    *(_QWORD *)(v31 + 80) = v41;
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_27:
      OUTLINED_FUNCTION_10_65((id *)&static LocalizationSource.conversationKit);
      OUTLINED_FUNCTION_7_69();
      OUTLINED_FUNCTION_18_3();
      v50.super.isa = (Class)isa;
      OUTLINED_FUNCTION_49_2(0xD000000000000018, 0x80000001BD67AD30, (uint64_t)v38, v35, v50);
      v19 = String.init(format:locale:arguments:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_21_0();
      v24 = (uint64_t)v8;
      goto LABEL_28;
    }
LABEL_32:
    swift_once();
    goto LABEL_27;
  }
  if (!*(_QWORD *)(v0 + 40))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    OUTLINED_FUNCTION_8_62((id *)&static LocalizationSource.conversationKit);
    OUTLINED_FUNCTION_44_17();
    OUTLINED_FUNCTION_18_3();
    v25 = 0x4B4F4F545F554F59;
    v26 = 0xEE004F544F48505FLL;
LABEL_20:
    v43.super.isa = v5;
    v44 = OUTLINED_FUNCTION_49_2(v25, v26, (uint64_t)v8, v0, v43);
    swift_bridgeObjectRelease();

    return v44;
  }
  v11 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_77_0((uint64_t)v10, v12, v13, v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v14 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
  v15 = *(_QWORD *)(v0 + 40);
  v16 = __CFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_30;
  }
  v18 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v14 + 64) = v18;
  *(_QWORD *)(v14 + 32) = v17;
  if (one-time initialization token for conversationKit != -1)
LABEL_30:
    swift_once();
  v19 = unk_1EF4FCB30;
  v20 = qword_1EF4FCB38;
  v21 = (objc_class *)(id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18_3();
  v22.super.isa = v21;
  OUTLINED_FUNCTION_49_2(v23, 0x80000001BD67AD50, v19, v20, v22);
  String.init(format:locale:arguments:)();
  OUTLINED_FUNCTION_2_76();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_21_0();
  v24 = (uint64_t)v10;
LABEL_28:
  outlined destroy of Locale?(v24);
  return v19;
}

uint64_t MomentsIndicatorViewModel.captureCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 40);
  result = v1 + 1;
  if (v1 == -1)
    __break(1u);
  return result;
}

uint64_t MomentsIndicatorViewModel.init(type:remoteParticipantName:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 32) = a3;
  *(_QWORD *)(v3 + 40) = 0;
  *(_BYTE *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  return v3;
}

Swift::Void __swiftcall MomentsIndicatorViewModel.refresh()()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = __CFADD__(v1, 1);
  v3 = v1 + 1;
  if (v2)
    __break(1u);
  else
    *(_QWORD *)(v0 + 40) = v3;
}

uint64_t MomentsIndicatorViewModel.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MomentsIndicatorViewModel.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MomentsIndicatorViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for MomentsIndicatorViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MomentsIndicatorViewModel.text.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MomentsIndicatorViewModel.__allocating_init(type:remoteParticipantName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of MomentsIndicatorViewModel.refresh()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

Swift::String __swiftcall PersonNameComponents.formattedName(style:)(NSPersonNameComponentsFormatterStyle style)
{
  void *v2;
  Class isa;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  Swift::String result;

  v2 = (void *)objc_opt_self();
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(v2, sel_localizedStringFromPersonNameComponents_style_options_, isa, style, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v7 = v6;

  v8 = v5;
  v9 = v7;
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

uint64_t PersonNameComponents.init(formattedName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v19;

  v6 = type metadata accessor for PersonNameComponents();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    goto LABEL_7;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3858]), sel_init);
  v14 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_personNameComponentsFromString_, v14);

  if (!v15)
  {
    OUTLINED_FUNCTION_0_87((uint64_t)v12, 1);
    goto LABEL_6;
  }
  static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

  v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16(v12, v9, v6);
  OUTLINED_FUNCTION_0_87((uint64_t)v12, 0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6) == 1)
  {
LABEL_6:
    outlined destroy of PersonNameComponents?((uint64_t)v12);
LABEL_7:
    v17 = 1;
    return OUTLINED_FUNCTION_0_87(a3, v17);
  }
  v16((char *)a3, v12, v6);
  v17 = 0;
  return OUTLINED_FUNCTION_0_87(a3, v17);
}

uint64_t outlined destroy of PersonNameComponents?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id one-time initialization function for initials()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3858]), sel_init);
  result = objc_msgSend(v0, sel_setStyle_, 4);
  static NSPersonNameComponentsFormatter.initials = (uint64_t)v0;
  return result;
}

id static NSPersonNameComponentsFormatter.initials.getter()
{
  if (one-time initialization token for initials != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return (id)static NSPersonNameComponentsFormatter.initials;
}

void static NSPersonNameComponentsFormatter.initials.setter(uint64_t a1)
{
  void *v2;

  if (one-time initialization token for initials != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  v2 = (void *)static NSPersonNameComponentsFormatter.initials;
  static NSPersonNameComponentsFormatter.initials = a1;

}

uint64_t (*static NSPersonNameComponentsFormatter.initials.modify())()
{
  if (one-time initialization token for initials != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void *UIViewAnimationOptions.curveCoreAnimationDefault.unsafeMutableAddressor()
{
  return &static UIViewAnimationOptions.curveCoreAnimationDefault;
}

uint64_t static UIViewAnimationOptions.curveCoreAnimationDefault.getter()
{
  return 327680;
}

void FlashView.flash(completion:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  objc_msgSend(v3, sel_bounds);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, v6, v7, v8, v9);
  objc_msgSend(v10, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v10, sel_setAutoresizingMask_, 18);
  v11 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  objc_msgSend(v3, sel_addSubview_, v10);
  v12 = (void *)objc_opt_self();
  *(_QWORD *)(swift_allocObject() + 16) = v10;
  v13 = MEMORY[0x1E0C809B0];
  v14 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed () -> (), MEMORY[0x1E0C809B0], 1107296256, v19, v21);
  v15 = v10;
  swift_release();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  v17 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v13, 1107296256, v20, v22);
  v18 = v15;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a1);
  swift_release();
  objc_msgSend(v12, sel_animateWithDuration_delay_options_animations_completion_, 327680, v14, v17, 0.25, 0.075);
  _Block_release(v17);
  _Block_release(v14);

}

id FlashView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id FlashView.init(frame:)()
{
  uint64_t v0;
  double v1;
  objc_super *v2;
  SEL v3;
  uint64_t v5;

  OUTLINED_FUNCTION_17_7();
  v5 = type metadata accessor for FlashView();
  v1 = OUTLINED_FUNCTION_15_0();
  return objc_msgSendSuper2(v2, v3, v1, v0, v5);
}

id FlashView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FlashView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FlashView();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id FlashView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FlashView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD1CC584()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in FlashView.flash(completion:)()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 0.0);
}

uint64_t sub_1BD1CC5BC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

id partial apply for closure #2 in FlashView.flash(completion:)()
{
  uint64_t v0;
  uint64_t (*v1)(id);
  id result;

  v1 = *(uint64_t (**)(id))(v0 + 24);
  result = objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
  if (v1)
    return (id)v1(result);
  return result;
}

uint64_t type metadata accessor for FlashView()
{
  return objc_opt_self();
}

uint64_t method lookup function for FlashView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FlashView.flash(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

void InCallScreenShareCallControlsService.__allocating_init(controlsManager:)(uint64_t a1)
{
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t InCallScreenShareCallControlsService.init(controlsManager:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

void InCallScreenShareCallControlsService.participantStateDidChange.getter()
{
  ConversationControlsManager.participantStateDidChange.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t InCallScreenShareCallControlsService.shareMenuActionState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 16)) + 0x640))() & 0x101;
}

uint64_t InCallScreenShareCallControlsService.shareMenuActionStates.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v8[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<AnyPublisher<ShareMenuActionState, Never>>);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 16)) + 0x670))(v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<ShareMenuActionState, Never>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type AnyPublisher<ShareMenuActionState, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<ShareMenuActionState, Never>, MEMORY[0x1E0C95D90]);
  lazy protocol witness table accessor for type ShareMenuActionState and conformance ShareMenuActionState();
  Publisher<>.removeDuplicates()();
  swift_release();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<AnyPublisher<ShareMenuActionState, Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<AnyPublisher<ShareMenuActionState, Never>>, MEMORY[0x1E0C958E0]);
  v6 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v6;
}

void InCallScreenShareCallControlsService.requestScreenSharingPicker(with:)()
{
  ConversationControlsManager.requestScreenSharingPicker(with:)();
}

void InCallScreenShareCallControlsService.requestScreenSharingSession(for:)()
{
  ConversationControlsManager.requestScreenSharingSession(for:)();
}

void InCallScreenShareCallControlsService.remoteParticipants.getter()
{
  uint64_t v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 16)) + 0x908))();
  OUTLINED_FUNCTION_0();
}

uint64_t InCallScreenShareCallControlsService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t InCallScreenShareCallControlsService.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void protocol witness for ScreenShareCallControlsService.participantStateDidChange.getter in conformance InCallScreenShareCallControlsService()
{
  InCallScreenShareCallControlsService.participantStateDidChange.getter();
}

uint64_t protocol witness for ScreenShareCallControlsService.shareMenuActionState.getter in conformance InCallScreenShareCallControlsService()
{
  return InCallScreenShareCallControlsService.shareMenuActionState.getter() & 0x101;
}

uint64_t protocol witness for ScreenShareCallControlsService.shareMenuActionStates.getter in conformance InCallScreenShareCallControlsService()
{
  return InCallScreenShareCallControlsService.shareMenuActionStates.getter();
}

void protocol witness for ScreenShareCallControlsService.remoteParticipants.getter in conformance InCallScreenShareCallControlsService()
{
  InCallScreenShareCallControlsService.remoteParticipants.getter();
}

void protocol witness for ScreenShareCallControlsService.requestScreenSharingPicker(with:) in conformance InCallScreenShareCallControlsService()
{
  InCallScreenShareCallControlsService.requestScreenSharingPicker(with:)();
}

void protocol witness for ScreenShareCallControlsService.requestScreenSharingSession(for:) in conformance InCallScreenShareCallControlsService()
{
  InCallScreenShareCallControlsService.requestScreenSharingSession(for:)();
}

uint64_t dispatch thunk of ScreenShareCallControlsService.participantStateDidChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ScreenShareCallControlsService.shareMenuActionState.getter(uint64_t a1, uint64_t a2)
{
  __int16 v2;

  v2 = (*(uint64_t (**)(void))(a2 + 16))();
  return v2 & 1 | ((HIBYTE(v2) & 1) << 8);
}

uint64_t dispatch thunk of ScreenShareCallControlsService.shareMenuActionStates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ScreenShareCallControlsService.remoteParticipants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ScreenShareCallControlsService.requestScreenSharingPicker(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ScreenShareCallControlsService.requestScreenSharingSession(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t type metadata accessor for InCallScreenShareCallControlsService()
{
  return objc_opt_self();
}

uint64_t method lookup function for InCallScreenShareCallControlsService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallScreenShareCallControlsService.__allocating_init(controlsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

Swift::Void __swiftcall UIView.addConstraintsToFill(_:insets:)(UIView *_, NSDirectionalEdgeInsets insets)
{
  void *v2;
  uint64_t v3;
  double bottom;
  double leading;
  double top;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  SEL v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  SEL v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  SEL v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  Class isa;

  bottom = insets.bottom;
  leading = insets.leading;
  top = insets.top;
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v7 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BD644140;
  v9 = OUTLINED_FUNCTION_2_2(v8, sel_leadingAnchor);
  v10 = OUTLINED_FUNCTION_9((uint64_t)v9, sel_leadingAnchor);
  v11 = (void *)OUTLINED_FUNCTION_1_76();
  v13 = objc_msgSend(v11, v12, leading);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v8 + 32) = v3;
  v15 = OUTLINED_FUNCTION_2_2(v14, sel_topAnchor);
  v16 = OUTLINED_FUNCTION_9((uint64_t)v15, sel_topAnchor);
  v17 = (void *)OUTLINED_FUNCTION_1_76();
  v19 = objc_msgSend(v17, v18, top);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v8 + 40) = v3;
  v21 = OUTLINED_FUNCTION_2_2(v20, sel_trailingAnchor);
  v22 = OUTLINED_FUNCTION_9((uint64_t)v21, sel_trailingAnchor);
  v23 = (void *)OUTLINED_FUNCTION_1_76();
  v25 = objc_msgSend(v23, v24);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v8 + 48) = v3;
  v27 = OUTLINED_FUNCTION_2_2(v26, sel_bottomAnchor);
  v28 = OUTLINED_FUNCTION_9((uint64_t)v27, sel_bottomAnchor);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v28, -bottom);

  *(_QWORD *)(v8 + 56) = v29;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_activateConstraints_, isa);

}

Swift::Void __swiftcall UIView.setFlexibleWidthHeightAutoResizing()()
{
  void *v0;

  objc_msgSend(v0, sel_setAutoresizingMask_, 18);
}

void UIView.withLayer(_:)(void (*a1)(void))
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_layer);
  a1();

}

double @objc UIView.safeAreaInsetFrame.getter(void *a1)
{
  id v1;
  double v2;

  v1 = a1;
  v2 = UIView.safeAreaInsetFrame.getter();

  return v2;
}

double UIView.safeAreaInsetFrame.getter()
{
  void *v0;
  id v1;
  id v2;
  unsigned __int8 v3;
  id v4;
  id v5;
  double v6;
  double v7;

  v1 = objc_msgSend(v0, sel_window);

  if (v1
    && (v2 = OUTLINED_FUNCTION_0_88(),
        v3 = objc_msgSend(v2, sel_hasAmbiguousLayout),
        v2,
        (v3 & 1) == 0)
    && (v4 = OUTLINED_FUNCTION_0_88(),
        objc_msgSend(v4, sel_layoutFrame),
        v4,
        CGRect.isValid.getter()))
  {
    v5 = OUTLINED_FUNCTION_0_88();
    objc_msgSend(v5, sel_layoutFrame);
    v7 = v6;

  }
  else
  {
    objc_msgSend(v0, sel_bounds);
    return 0.0;
  }
  return v7;
}

double @objc UIView.displayScale.getter(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  UIView.displayScale.getter();
  v3 = v2;

  return v3;
}

void UIView.displayScale.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v1, sel_displayScale);

  OUTLINED_FUNCTION_12_1();
}

void @objc static UIView.screenScale.getter()
{
  static UIView.screenScale.getter();
}

void static UIView.screenScale.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v0, sel_scale);

  OUTLINED_FUNCTION_12_1();
}

uint64_t *ClarityUIOutgoingCallActionProvider.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static ClarityUIOutgoingCallActionProvider.shared;
}

uint64_t static ClarityUIOutgoingCallActionProvider.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

uint64_t ClarityUIOutgoingCallActionProvider.().init()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = OBJC_IVAR____TtC15ConversationKit35ClarityUIOutgoingCallActionProvider_lookupManager;
  v2 = (void *)objc_opt_self();
  swift_retain();
  *(_QWORD *)(v0 + v1) = objc_msgSend(v2, sel_sharedManager);
  swift_release();
  return ObservableNotificationHandler.init(name:)((id)*MEMORY[0x1E0DBD648]);
}

id ClarityUIOutgoingCallActionProvider.isFaceTimeVideoAvailable.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_isDirectFaceTimeVideoCallingCurrentlyAvailable);
}

id ClarityUIOutgoingCallActionProvider.isFaceTimeAudioAvailable.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_isDirectFaceTimeAudioCallingCurrentlyAvailable);
}

id ClarityUIOutgoingCallActionProvider.isTelephonyAvailable.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_isDirectTelephonyCallingCurrentlyAvailable);
}

uint64_t ClarityUIOutgoingCallActionProvider.areEmailAddressesRelevant.getter()
{
  uint64_t v0;

  v0 = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_isDirectFaceTimeAudioCallingCurrentlyAvailable);
  if ((v0 & 1) != 0)
    return 1;
  else
    return (uint64_t)OUTLINED_FUNCTION_123(v0, sel_isDirectFaceTimeAudioCallingCurrentlyAvailable);
}

uint64_t ClarityUIOutgoingCallActionProvider.arePhoneNumbersRelevant.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_isDirectFaceTimeVideoCallingCurrentlyAvailable);
  if ((v0 & 1) != 0)
    return 1;
  v1 = (uint64_t)OUTLINED_FUNCTION_123(v0, sel_isDirectFaceTimeAudioCallingCurrentlyAvailable);
  if ((v1 & 1) != 0)
    return 1;
  else
    return (uint64_t)OUTLINED_FUNCTION_123(v1, sel_isDirectTelephonyCallingCurrentlyAvailable);
}

uint64_t ClarityUIOutgoingCallActionProvider.outgoingCallActions(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char *v5;
  unint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  Class isa;
  uint64_t v19;

  v2 = v1;
  v3 = *(void **)a1;
  v4 = *(void **)(a1 + 8);
  v5 = *(char **)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  swift_getKeyPath();
  v19 = v1;
  lazy protocol witness table accessor for type ObservableNotificationHandler and conformance ObservableNotificationHandler();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v7 = v3;
  v8 = v4;
  OUTLINED_FUNCTION_35_0();
  v9 = specialized ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(v7, v8, v5, v6, v19);
  v11 = v10;
  OUTLINED_FUNCTION_133();

  if (*(_QWORD *)(v11 + 16))
  {
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)&static Log.clarityUI);
    OUTLINED_FUNCTION_25_2();
    v13 = Logger.logObject.getter();
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v15 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_53();
      _os_log_impl(&dword_1BD004000, v13, v14, "Looking up %ld IDS destinations.", v15, 0xCu);
      MEMORY[0x1C3B751B8](v15, -1, -1);

    }
    else
    {

      OUTLINED_FUNCTION_53();
    }
    v16 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit35ClarityUIOutgoingCallActionProvider_lookupManager);
    isa = Set._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_53();
    objc_msgSend(v16, sel_beginQueryWithDestinations_services_, isa, 7);

  }
  else
  {
    OUTLINED_FUNCTION_53();
  }
  return v9;
}

uint64_t specialized ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(_QWORD *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _QWORD v46[5];
  _QWORD v47[5];
  _QWORD v48[5];
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  _BYTE v55[8];
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  _OWORD v63[2];

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD1E0]), sel_init);
  v4 = MEMORY[0x1E0DEE9E8];
  v45 = MEMORY[0x1E0DEE9E8];
  v5 = (void *)objc_opt_self();
  v40 = v1;
  v41 = v3;
  v39 = a1;
  if (objc_msgSend(v5, sel_isDirectFaceTimeAudioCallingCurrentlyAvailable))
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v1;
    *(_QWORD *)(v7 + 24) = v6;
    swift_retain();
    v8 = objc_msgSend(v3, sel_faceTimeProvider);
    swift_retain();
    specialized ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(a1, 0, (unint64_t)v3, v8, 1, (uint64_t (*)(void *))closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)specialized partial apply, v46);
    v9 = v46[1];
    v10 = v46[3];
    v42 = v46[0];
    v43 = v46[2];
    v11 = v46[4];
    swift_retain();

    swift_release();
    outlined init with take of ClarityUIOutgoingCallAction?((uint64_t)v46, (uint64_t)&v57);
    if (*((_QWORD *)&v57 + 1))
    {
      v60 = v57;
      v12 = v59;
      v61 = v58;
      if (v59)
      {
        swift_bridgeObjectRetain();
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v10);
        swift_release();
        v44 = v60;
        outlined release of String((uint64_t)&v44);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v12);
      }
      else
      {
        swift_beginAccess();
        outlined retain of ClarityUIOutgoingCallAction?(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of ClarityUIOutgoingCallAction?);
        v13 = swift_bridgeObjectRetain();
        specialized Set.formUnion<A>(_:)(v13);
        swift_release();
        v62 = v60;
        outlined release of String((uint64_t)&v62);
      }
    }
    else
    {
      swift_release();
    }
    swift_release();
  }
  else
  {
    v42 = 0;
    v43 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
  }
  if (!objc_msgSend(v5, sel_isDirectTelephonyCallingCurrentlyAvailable))
    goto LABEL_16;
  v14 = v41;
  if (!v9)
  {
LABEL_14:
    v16 = objc_msgSend(v41, sel_telephonyProvider);
    specialized ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(v39, 0, (unint64_t)v41, v16, 0, 0, v47);
    v18 = v47[0];
    v17 = v47[1];
    v20 = v47[2];
    v19 = v47[3];
    v21 = v47[4];

    outlined init with take of ClarityUIOutgoingCallAction?((uint64_t)v47, (uint64_t)v55);
    if (v56)
    {
      outlined consume of ClarityUIOutgoingCallAction?(v42, v9, v43, v10);
      swift_bridgeObjectRetain();
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v19);
      v42 = v18;
      v43 = v20;
      v9 = v17;
      v10 = v19;
      v11 = v21;
LABEL_18:
      v14 = v41;
      goto LABEL_19;
    }
LABEL_16:
    if (!v9)
    {
      v23 = MEMORY[0x1E0DEE9D8];
      v14 = v41;
      goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v10);
    goto LABEL_18;
  }
  if (!v10)
  {
    outlined copy of ClarityUIOutgoingCallAction?(v42, v9, v43, 0);
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(0);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(0);
    swift_bridgeObjectRelease();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(0);
    goto LABEL_14;
  }
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v10;
  *(_QWORD *)(v15 + 24) = v11;
  outlined copy of ClarityUIOutgoingCallAction?(v42, v9, v43, v10);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v10);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:));
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v10);
  swift_bridgeObjectRetain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v10);
LABEL_19:
  swift_bridgeObjectRetain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v10);
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  v23 = v22;
  v24 = *(_QWORD *)(v22 + 16);
  if (v24 >= *(_QWORD *)(v22 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v23 = v36;
  }
  *(_QWORD *)(v23 + 16) = v24 + 1;
  v25 = v23 + 40 * v24;
  *(_QWORD *)(v25 + 32) = v42;
  *(_QWORD *)(v25 + 40) = v9;
  *(_BYTE *)(v25 + 48) = v43 & 1;
  *(_QWORD *)(v25 + 56) = v10;
  *(_QWORD *)(v25 + 64) = v11;
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v10);
LABEL_23:
  if (objc_msgSend(v5, sel_isDirectFaceTimeVideoCallingCurrentlyAvailable))
  {
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = MEMORY[0x1E0DEE9E8];
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v40;
    *(_QWORD *)(v27 + 24) = v26;
    swift_retain();
    v28 = objc_msgSend(v14, sel_faceTimeProvider);
    swift_retain();
    specialized ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(v39, 1, (unint64_t)v14, v28, 1, (uint64_t (*)(void *))closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)specialized partial apply, v48);
    swift_retain();

    swift_release();
    outlined init with take of ClarityUIOutgoingCallAction?((uint64_t)v48, (uint64_t)&v49);
    if (*((_QWORD *)&v49 + 1))
    {
      v53 = v49;
      v29 = v51;
      v54 = v50;
      v30 = v52;
      v63[0] = v49;
      outlined retain of String((uint64_t)v63);
      outlined retain of ClarityUIOutgoingCallAction?(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of ClarityUIOutgoingCallAction?);
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v29);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v23 = v37;
      }
      v31 = *(_QWORD *)(v23 + 16);
      if (v31 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v23 = v38;
      }
      *(_QWORD *)(v23 + 16) = v31 + 1;
      v32 = v23 + 40 * v31;
      v33 = v54;
      *(_OWORD *)(v32 + 32) = v53;
      *(_QWORD *)(v32 + 48) = v33;
      *(_QWORD *)(v32 + 56) = v29;
      *(_QWORD *)(v32 + 64) = v30;
      if (v29)
      {
        outlined consume of ClarityUIOutgoingCallAction?(v42, v9, v43, v10);
        swift_release();
        outlined retain of ClarityUIOutgoingCallAction?(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of ClarityUIOutgoingCallAction?);
        outlined release of String((uint64_t)v63);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v29);
      }
      else
      {
        swift_beginAccess();
        v34 = swift_bridgeObjectRetain();
        specialized Set.formUnion<A>(_:)(v34);
        outlined consume of ClarityUIOutgoingCallAction?(v42, v9, v43, v10);
        swift_release();
        outlined retain of ClarityUIOutgoingCallAction?(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of ClarityUIOutgoingCallAction?);
        outlined release of String((uint64_t)v63);
      }
      swift_release();

    }
    else
    {
      outlined consume of ClarityUIOutgoingCallAction?(v42, v9, v43, v10);
      swift_release();

      swift_release();
    }
  }
  else
  {
    outlined consume of ClarityUIOutgoingCallAction?(v42, v9, v43, v10);

  }
  return v23;
}

uint64_t ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[2];
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81[3];
  uint64_t v82;
  uint64_t v83[5];
  uint64_t v84[5];
  uint64_t v85[5];
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  char v92[8];
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  __int128 v99;
  _OWORD v100[2];

  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD1E0]), sel_init);
  v10 = MEMORY[0x1E0DEE9E8];
  v82 = MEMORY[0x1E0DEE9E8];
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v76 = a3;
  v77 = v3;
  v74 = v9;
  v75 = a1;
  v70 = (uint64_t)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v7;
  if ((v11 & 1) == 0)
  {
    v78 = 0;
    v79 = 0;
    v16 = 0;
    v19 = 0;
    v80 = 0;
    v17 = a2;
    goto LABEL_10;
  }
  v12 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v12 + 16) = v10;
  v69 = (uint64_t *)(v12 + 16);
  OUTLINED_FUNCTION_10_66((uint64_t)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  v13 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v72 = v8;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  OUTLINED_FUNCTION_10_66(v14 + v13, (uint64_t)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
  *(_QWORD *)(v14 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v12;
  v15 = objc_msgSend(v9, sel_faceTimeProvider);
  swift_retain();
  ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(v75, 0, v9, v15, 1, (uint64_t (*)(void *))partial apply for closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:), v83);
  v16 = v83[1];
  v78 = v83[0];
  v79 = v83[2];
  v73 = v83[3];
  v80 = v83[4];
  swift_retain();

  OUTLINED_FUNCTION_14_12();
  outlined init with take of ClarityUIOutgoingCallAction?((uint64_t)v83, (uint64_t)&v94);
  v17 = a2;
  if (!*((_QWORD *)&v94 + 1))
  {
    OUTLINED_FUNCTION_11_0();
LABEL_8:
    v19 = v73;
    goto LABEL_9;
  }
  v97 = v94;
  v18 = v96;
  v98 = v95;
  if (!v96)
  {
    v20 = v69;
    OUTLINED_FUNCTION_2_0();
    v21 = *v20;
    outlined retain of ClarityUIOutgoingCallAction?(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of ClarityUIOutgoingCallAction?);
    OUTLINED_FUNCTION_25_2();
    specialized Set.formUnion<A>(_:)(v21);
    OUTLINED_FUNCTION_14_12();
    v99 = v97;
    outlined release of String((uint64_t)&v99);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_35_0();
  v19 = v73;
  OUTLINED_FUNCTION_3_73();
  OUTLINED_FUNCTION_14_12();
  v81[0] = v97;
  outlined release of String((uint64_t)v81);
  OUTLINED_FUNCTION_14_60(v18);
LABEL_9:
  v8 = v72;
  a3 = v76;
  OUTLINED_FUNCTION_14_12();
LABEL_10:
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(v17, a3) & 1) == 0)
    goto LABEL_17;
  v73 = v17;
  v22 = v77;
  v23 = v75;
  if (!v16)
  {
LABEL_15:
    v28 = v74;
    v29 = objc_msgSend(v74, sel_telephonyProvider);
    v30 = v28;
    v31 = v19;
    v32 = v29;
    v33 = v16;
    v34 = v73;
    ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(v23, 0, v30, v29, 0, 0, v84);
    v36 = v84[0];
    v35 = v84[1];
    v37 = v84[3];
    v72 = v84[2];
    v38 = v84[4];

    v19 = v31;
    v17 = v34;
    v16 = v33;
    outlined init with take of ClarityUIOutgoingCallAction?((uint64_t)v84, (uint64_t)v92);
    if (v93)
    {
      v24 = v8;
      OUTLINED_FUNCTION_2_77(v78, v33, v79, v19);
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_8_63(v37);
      v16 = v35;
      v78 = v36;
      v79 = v72;
      v19 = v37;
      v80 = v38;
LABEL_19:
      v22 = v77;
      goto LABEL_20;
    }
LABEL_17:
    if (!v16)
    {
      v40 = MEMORY[0x1E0DEE9D8];
      v22 = v77;
      v44 = MEMORY[0x1E0DEE9E8];
      goto LABEL_24;
    }
    v73 = v17;
    v24 = v8;
    OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_3_73();
    goto LABEL_19;
  }
  v24 = v8;
  if (!v19)
  {
    outlined copy of ClarityUIOutgoingCallAction?(v78, v16, v79, 0);
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(0);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(0);
    OUTLINED_FUNCTION_133();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(0);
    goto LABEL_15;
  }
  v25 = OUTLINED_FUNCTION_15();
  v26 = v79;
  v27 = v80;
  *(_QWORD *)(v25 + 16) = v19;
  *(_QWORD *)(v25 + 24) = v27;
  outlined copy of ClarityUIOutgoingCallAction?(v78, v16, v26, v19);
  OUTLINED_FUNCTION_8_63(v19);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String));
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_14_60(v19);
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_8_63(v19);
LABEL_20:
  OUTLINED_FUNCTION_35_0();
  OUTLINED_FUNCTION_3_73();
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  v40 = v39;
  v41 = *(_QWORD *)(v39 + 16);
  if (v41 >= *(_QWORD *)(v39 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v40 = v65;
  }
  *(_QWORD *)(v40 + 16) = v41 + 1;
  v42 = v40 + 40 * v41;
  *(_QWORD *)(v42 + 32) = v78;
  *(_QWORD *)(v42 + 40) = v16;
  v43 = v80;
  *(_BYTE *)(v42 + 48) = v79 & 1;
  *(_QWORD *)(v42 + 56) = v19;
  *(_QWORD *)(v42 + 64) = v43;
  OUTLINED_FUNCTION_133();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v19);
  v8 = v24;
  v44 = MEMORY[0x1E0DEE9E8];
  v17 = v73;
LABEL_24:
  v45 = v76;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8))(v17, v76) & 1) != 0)
  {
    v72 = v40;
    v73 = v19;
    v69 = (uint64_t *)v16;
    v46 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v46 + 16) = v44;
    v68[1] = v46 + 16;
    v47 = v71;
    v48 = v45;
    v49 = v17;
    v50 = v70;
    OUTLINED_FUNCTION_10_66(v70, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 16));
    v51 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    v52 = (v8 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = v49;
    *(_QWORD *)(v53 + 24) = v48;
    OUTLINED_FUNCTION_10_66(v53 + v51, v50, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 32));
    *(_QWORD *)(v53 + v52) = v46;
    v54 = v74;
    v55 = objc_msgSend(v74, sel_faceTimeProvider);
    swift_retain();
    ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(v75, 1, v54, v55, 1, (uint64_t (*)(void *))partial apply for closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:), v85);
    swift_retain();

    OUTLINED_FUNCTION_11_0();
    outlined init with take of ClarityUIOutgoingCallAction?((uint64_t)v85, (uint64_t)&v86);
    if (*((_QWORD *)&v86 + 1))
    {
      v90 = v86;
      v56 = v88;
      v91 = v87;
      v57 = v89;
      v100[0] = v86;
      outlined retain of String((uint64_t)v100);
      outlined retain of ClarityUIOutgoingCallAction?(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of ClarityUIOutgoingCallAction?);
      OUTLINED_FUNCTION_8_63(v56);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = (uint64_t)v69;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v72 = v66;
      }
      v60 = *(_QWORD *)(v72 + 16);
      if (v60 >= *(_QWORD *)(v72 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v40 = v67;
      }
      else
      {
        v40 = v72;
      }
      *(_QWORD *)(v40 + 16) = v60 + 1;
      v61 = v40 + 40 * v60;
      v62 = v91;
      *(_OWORD *)(v61 + 32) = v90;
      *(_QWORD *)(v61 + 48) = v62;
      *(_QWORD *)(v61 + 56) = v56;
      *(_QWORD *)(v61 + 64) = v57;
      if (v56)
      {
        OUTLINED_FUNCTION_2_77(v78, v59, v79, v73);
        OUTLINED_FUNCTION_11_0();
        outlined retain of ClarityUIOutgoingCallAction?(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of ClarityUIOutgoingCallAction?);
        outlined release of String((uint64_t)v100);
        OUTLINED_FUNCTION_14_60(v56);
      }
      else
      {
        OUTLINED_FUNCTION_2_0();
        v63 = swift_bridgeObjectRetain();
        specialized Set.formUnion<A>(_:)(v63);
        OUTLINED_FUNCTION_2_77(v78, v59, v79, v73);
        OUTLINED_FUNCTION_11_0();
        outlined retain of ClarityUIOutgoingCallAction?(v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of ClarityUIOutgoingCallAction?);
        outlined release of String((uint64_t)v100);
      }
      swift_release();

    }
    else
    {
      OUTLINED_FUNCTION_2_77(v78, (uint64_t)v69, v79, v73);
      OUTLINED_FUNCTION_14_12();

      OUTLINED_FUNCTION_11_0();
      return v72;
    }
  }
  else
  {
    OUTLINED_FUNCTION_2_77(v78, v16, v79, v19);

  }
  return v40;
}

id ClarityUIOutgoingCallActionProvider.faceTimeVideoAvailability(handle:)(uint64_t a1)
{
  return ClarityUIOutgoingCallActionProvider.faceTimeVideoAvailability(handle:)(a1, (SEL *)&selRef_faceTimeVideoAvailabilityForDestination_);
}

id TUHandle.idsDestination.getter()
{
  id result;
  void *v1;
  uint64_t v2;

  result = (id)TUCopyIDSCanonicalAddressForHandle();
  if (result)
  {
    v1 = result;
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id ClarityUIOutgoingCallActionProvider.faceTimeAudioAvailability(handle:)(uint64_t a1)
{
  return ClarityUIOutgoingCallActionProvider.faceTimeVideoAvailability(handle:)(a1, (SEL *)&selRef_faceTimeAudioAvailabilityForDestination_);
}

id ClarityUIOutgoingCallActionProvider.faceTimeVideoAvailability(handle:)(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit35ClarityUIOutgoingCallActionProvider_lookupManager);
  v5 = TUHandle.idsDestination.getter();
  v6 = (void *)MEMORY[0x1C3B72E00](v5);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v4, *a2, v6);

  return v7;
}

void ClarityUIOutgoingCallActionProvider.__allocating_init(name:)()
{
  OUTLINED_FUNCTION_9_59();
  __break(1u);
}

void ClarityUIOutgoingCallActionProvider.init(name:)()
{
  OUTLINED_FUNCTION_9_59();
  __break(1u);
}

void ClarityUIOutgoingCallActionProvider.__ivar_destroyer()
{
  uint64_t v0;

}

void ClarityUIOutgoingCallActionProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit29ObservableNotificationHandler___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  OUTLINED_FUNCTION_0();
}

uint64_t ClarityUIOutgoingCallActionProvider.__deallocating_deinit()
{
  ClarityUIOutgoingCallActionProvider.deinit();
  return swift_deallocClassInstance();
}

unint64_t protocol witness for ClarityUIOutgoingCallActionProviderProtocol.isFaceTimeVideoAvailable.getter in conformance ClarityUIOutgoingCallActionProvider()
{
  return (unint64_t)ClarityUIOutgoingCallActionProvider.isFaceTimeVideoAvailable.getter() & 1;
}

unint64_t protocol witness for ClarityUIOutgoingCallActionProviderProtocol.isFaceTimeAudioAvailable.getter in conformance ClarityUIOutgoingCallActionProvider()
{
  return (unint64_t)ClarityUIOutgoingCallActionProvider.isFaceTimeAudioAvailable.getter() & 1;
}

unint64_t protocol witness for ClarityUIOutgoingCallActionProviderProtocol.isTelephonyAvailable.getter in conformance ClarityUIOutgoingCallActionProvider()
{
  return (unint64_t)ClarityUIOutgoingCallActionProvider.isTelephonyAvailable.getter() & 1;
}

uint64_t protocol witness for ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:) in conformance ClarityUIOutgoingCallActionProvider(_QWORD *a1)
{
  return specialized ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(a1);
}

id protocol witness for ClarityUIOutgoingCallActionProviderProtocol.faceTimeVideoAvailability(handle:) in conformance ClarityUIOutgoingCallActionProvider(uint64_t a1)
{
  return ClarityUIOutgoingCallActionProvider.faceTimeVideoAvailability(handle:)(a1);
}

id protocol witness for ClarityUIOutgoingCallActionProviderProtocol.faceTimeAudioAvailability(handle:) in conformance ClarityUIOutgoingCallActionProvider(uint64_t a1)
{
  return ClarityUIOutgoingCallActionProvider.faceTimeAudioAvailability(handle:)(a1);
}

uint64_t closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[8];

  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a5 + 48))(a1, a4, a5);
  if (!(_DWORD)v5)
  {
    v6 = TUHandle.idsDestination.getter();
    v8 = v7;
    swift_beginAccess();
    specialized Set._Variant.insert(_:)(v10, v6, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t specialized ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)@<X0>(_QWORD *a1@<X0>, char a2@<W1>, unint64_t a3@<X2>, void *a4@<X3>, char a5@<W4>, uint64_t (*a6)(void *)@<X5>, _QWORD *a7@<X8>)
{
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  id v22;
  void *v23;
  int v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)();
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t result;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  char v49;
  void *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;

  v11 = a1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
  v61 = v15;
  if ((a5 & 1) != 0)
  {
    v16 = v11[3];
    v17 = v11[4];
    __swift_project_boxed_opaque_existential_1(v11, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
    specialized Array.append<A>(contentsOf:)();
    v15 = v61;
  }
  v18 = v15;
  v58 = v15;
  if (v15 >> 62)
    goto LABEL_36;
  v19 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_5:
  v56 = (_QWORD *)v19;
  if (!v19)
  {
    result = swift_bridgeObjectRelease_n();
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v34 = 0;
    v35 = 0;
    goto LABEL_33;
  }
  v50 = (void *)a3;
  v51 = v11;
  v20 = 0;
  v21 = 0;
  v52 = a2 & 1;
  v53 = a7;
  a7 = (_QWORD *)(v18 & 0xC000000000000001);
  v57 = v18 & 0xFFFFFFFFFFFFFF8;
  v11 = (_QWORD *)v19;
  v55 = v18 & 0xC000000000000001;
LABEL_7:
  v49 = v20;
  a3 = (unint64_t)v21;
  do
  {
    if (a7)
    {
      v22 = (id)MEMORY[0x1C3B73D18](a3, v18);
    }
    else
    {
      if (a3 >= *(_QWORD *)(v57 + 16))
        goto LABEL_35;
      v22 = *(id *)(v18 + 8 * a3 + 32);
    }
    v23 = v22;
    v21 = (_QWORD *)(a3 + 1);
    if (__OFADD__(a3, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      swift_bridgeObjectRetain();
      v18 = v58;
      v19 = _CocoaArrayWrapper.endIndex.getter();
      goto LABEL_5;
    }
    if (!a6)
      goto LABEL_31;
    swift_retain();
    v24 = a6(v23);
    if (v24 == 2)
    {
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a6);

    }
    else
    {
      a2 = v24;
      if (!v24)
      {
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a6);

        v20 = 1;
        if (v21 != v11)
          goto LABEL_7;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v34 = 0;
        v35 = 0;
        v36 = 0;
        v37 = v52;
        a7 = v53;
        goto LABEL_32;
      }
      if (v24 == 1)
      {
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a6);
LABEL_31:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 = swift_allocObject();
        *(_QWORD *)(v35 + 16) = a4;
        *(_QWORD *)(v35 + 24) = v23;
        v37 = v52;
        *(_BYTE *)(v35 + 32) = v52;
        *(_QWORD *)(v35 + 40) = v50;
        v36 = v23;
        v42 = a4;
        v43 = v50;
        v34 = partial apply for closure #1 in ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:);
        a7 = v53;
LABEL_32:
        v59 = 0x2D746361746E6F43;
        v60 = 0xE800000000000000;
        v44 = v51[3];
        v45 = v51[4];
        __swift_project_boxed_opaque_existential_1(v51, v44);
        v46._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v44, v45);
        String.append(_:)(v46);
        swift_bridgeObjectRelease();
        v47._countAndFlagsBits = 45;
        v47._object = (void *)0xE100000000000000;
        String.append(_:)(v47);
        v48._countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v48);

        result = swift_bridgeObjectRelease();
        v38 = v59;
        v39 = v60;
        v40 = v37;
        goto LABEL_33;
      }
      if (one-time initialization token for clarityUI != -1)
        swift_once();
      v25 = type metadata accessor for Logger();
      __swift_project_value_buffer(v25, (uint64_t)&static Log.clarityUI);
      v26 = Logger.logObject.getter();
      v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc();
        v29 = swift_slowAlloc();
        v59 = v29;
        *(_DWORD *)v28 = 136315138;
        type metadata accessor for FZHandleIDStatus(0);
        v30 = String.init<A>(describing:)();
        a2 = v31;
        *(_QWORD *)(v28 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v59);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v26, v27, "Unhandled FaceTime availability status: %s", (uint8_t *)v28, 0xCu);
        swift_arrayDestroy();
        v32 = v29;
        a7 = (_QWORD *)v55;
        MEMORY[0x1C3B751B8](v32, -1, -1);
        v33 = v28;
        v11 = v56;
        MEMORY[0x1C3B751B8](v33, -1, -1);
      }
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a6);

      v18 = v58;
    }
    ++a3;
  }
  while (v21 != v11);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v34 = 0;
  v35 = 0;
  v36 = 0;
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v37 = v52;
  a7 = v53;
  if ((v49 & 1) != 0)
    goto LABEL_32;
LABEL_33:
  *a7 = v38;
  a7[1] = v39;
  a7[2] = v40;
  a7[3] = v34;
  a7[4] = v35;
  return result;
}

uint64_t ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)@<X0>(_QWORD *a1@<X0>, char a2@<W1>, void *a3@<X2>, void *a4@<X3>, char a5@<W4>, uint64_t (*a6)(void *)@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t (*v32)();
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  char v46;
  uint64_t v47;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  v58 = v12;
  if ((a5 & 1) != 0)
  {
    v13 = a1[3];
    v14 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    specialized Array.append<A>(contentsOf:)();
    v12 = v58;
  }
  if (v12 >> 62)
    goto LABEL_33;
  v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15)
  {
LABEL_34:
    result = swift_bridgeObjectRelease_n();
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v32 = 0;
    v33 = 0;
    goto LABEL_35;
  }
LABEL_5:
  v46 = 0;
  v16 = 0;
  v47 = a2 & 1;
  v17 = v12 & 0xC000000000000001;
  v54 = v12 & 0xFFFFFFFFFFFFFF8;
  v52 = v15;
  v53 = v12;
  v55 = v12 & 0xC000000000000001;
  do
  {
    while (1)
    {
      if (v17)
      {
        v18 = (id)MEMORY[0x1C3B73D18](v16, v12);
      }
      else
      {
        if (v16 >= *(_QWORD *)(v54 + 16))
        {
          __break(1u);
LABEL_33:
          swift_bridgeObjectRetain();
          v15 = _CocoaArrayWrapper.endIndex.getter();
          if (!v15)
            goto LABEL_34;
          goto LABEL_5;
        }
        v18 = *(id *)(v12 + 8 * v16 + 32);
      }
      v19 = v18;
      v20 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
LABEL_31:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v32 = 0;
        v33 = 0;
        v34 = 0;
        v38 = v47;
LABEL_29:
        v56 = 0x2D746361746E6F43;
        v57 = 0xE800000000000000;
        v41 = a1[3];
        v42 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v41);
        v43._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
        String.append(_:)(v43);
        swift_bridgeObjectRelease();
        v44._countAndFlagsBits = 45;
        v44._object = (void *)0xE100000000000000;
        String.append(_:)(v44);
        v45._countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v45);

        result = swift_bridgeObjectRelease();
        v35 = v56;
        v36 = v57;
        v37 = v38;
        goto LABEL_35;
      }
      if (!a6)
        goto LABEL_28;
      swift_retain();
      v21 = a6(v19);
      if (v21 == 2)
      {
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a6);

        goto LABEL_21;
      }
      a2 = v21;
      if (v21)
        break;
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a6);

      v46 = 1;
      ++v16;
      if (v20 == v15)
        goto LABEL_31;
    }
    if (v21 == 1)
    {
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a6);
LABEL_28:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 = swift_allocObject();
      v38 = v47;
      *(_QWORD *)(v33 + 16) = a4;
      *(_QWORD *)(v33 + 24) = v19;
      *(_BYTE *)(v33 + 32) = v47;
      *(_QWORD *)(v33 + 40) = a3;
      v34 = v19;
      v39 = a4;
      v40 = a3;
      v32 = partial apply for closure #1 in ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:);
      goto LABEL_29;
    }
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)&static Log.clarityUI);
    v23 = Logger.logObject.getter();
    v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v56 = v26;
      *(_DWORD *)v25 = 136315138;
      type metadata accessor for FZHandleIDStatus(0);
      v27 = String.init<A>(describing:)();
      a2 = v28;
      *(_QWORD *)(v25 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, &v56);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v23, v24, "Unhandled FaceTime availability status: %s", (uint8_t *)v25, 0xCu);
      swift_arrayDestroy();
      v29 = v26;
      v15 = v52;
      MEMORY[0x1C3B751B8](v29, -1, -1);
      v30 = v25;
      v12 = v53;
      MEMORY[0x1C3B751B8](v30, -1, -1);
    }
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a6);

    v17 = v55;
LABEL_21:
    ++v16;
  }
  while (v20 != v15);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v32 = 0;
  v33 = 0;
  v34 = 0;
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = v47;
  if ((v46 & 1) != 0)
    goto LABEL_29;
LABEL_35:
  *a7 = v35;
  a7[1] = v36;
  a7[2] = v37;
  a7[3] = (uint64_t)v32;
  a7[4] = v33;
  return result;
}

uint64_t specialized Set.formUnion<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = (uint64_t *)(a1 + 40);
    do
    {
      v3 = *(v2 - 1);
      v4 = *v2;
      OUTLINED_FUNCTION_25_2();
      specialized Set._Variant.insert(_:)(&v6, v3, v4);
      swift_bridgeObjectRelease();
      v2 += 2;
      --v1;
    }
    while (v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t specialized Set.formUnion<A>(_:)(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v8 | (v2 << 6); ; i = __clz(__rbit64(v11)) + (v2 << 6))
  {
    v13 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain();
    specialized Set._Variant.insert(_:)(&v16, v14, v15);
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_4;
LABEL_5:
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v11 - 1) & v11;
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t specialized closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[8];

  v4 = a4();
  if (!(_DWORD)v4)
  {
    v5 = TUHandle.idsDestination.getter();
    v7 = v6;
    OUTLINED_FUNCTION_2_0();
    specialized Set._Variant.insert(_:)(v9, v5, v7);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[8];

  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a5 + 40))(a1, a4, a5);
  if (!(_DWORD)v5)
  {
    v6 = TUHandle.idsDestination.getter();
    v8 = v7;
    swift_beginAccess();
    specialized Set._Variant.insert(_:)(v10, v6, v8);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  return v5;
}

void closure #1 in ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(uint64_t a1, void *a2, char a3, void *a4)
{
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[6];

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2E0]), sel_initWithProvider_, a1);
  objc_msgSend(v7, sel_setHandle_, a2);
  objc_msgSend(v7, sel_setVideo_, a3 & 1);
  objc_msgSend(v7, sel_setOriginatingUIType_, 30);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = a2;
  v12[4] = partial apply for closure #1 in closure #1 in ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:);
  v12[5] = v8;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  v12[3] = &block_descriptor_36;
  v9 = _Block_copy(v12);
  v10 = v7;
  v11 = a2;
  swift_release();
  objc_msgSend(a4, sel_launchAppForDialRequest_completion_, v10, v9);
  _Block_release(v9);

}

void closure #1 in closure #1 in ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(void *a1, void *a2, void *a3)
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *oslog;
  uint64_t v23;

  if (a1)
  {
    v6 = a1;
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)&static Log.clarityUI);
    v8 = a1;
    v9 = a2;
    v10 = a3;
    v11 = a1;
    v12 = v9;
    v13 = v10;
    oslog = Logger.logObject.getter();
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v23 = v21;
      *(_DWORD *)v15 = 138412802;
      v17 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v16 = v12;

      *(_WORD *)(v15 + 12) = 2112;
      v18 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v16[1] = v13;

      *(_WORD *)(v15 + 22) = 2080;
      swift_getErrorValue();
      v19 = Error.localizedDescription.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD004000, oslog, v14, "Unable to launch app for dial request: %@, handle: %@, error: %s", (uint8_t *)v15, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v21, -1, -1);
      MEMORY[0x1C3B751B8](v15, -1, -1);

    }
    else
    {

    }
  }
}

void ClarityUIContact.emailAddressHandles.getter()
{
  ClarityUIContact.emailAddressHandles.getter((SEL *)&selRef_tuHandlesForEmailAddresses);
}

void ClarityUIContact.phoneNumberHandles.getter()
{
  ClarityUIContact.emailAddressHandles.getter((SEL *)&selRef_tuHandlesForPhoneNumbers);
}

void ClarityUIContact.emailAddressHandles.getter(SEL *a1)
{
  id *v1;
  id v2;

  v2 = objc_msgSend(*v1, *a1);
  type metadata accessor for TUHandle();
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type ObservableNotificationHandler and conformance ObservableNotificationHandler()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type ObservableNotificationHandler and conformance ObservableNotificationHandler;
  if (!lazy protocol witness table cache variable for type ObservableNotificationHandler and conformance ObservableNotificationHandler)
  {
    v1 = type metadata accessor for ObservableNotificationHandler();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ObservableNotificationHandler, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ObservableNotificationHandler and conformance ObservableNotificationHandler);
  }
  return result;
}

uint64_t specialized closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return specialized closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(a1, *a2, a3, (uint64_t (*)(void))ClarityUIOutgoingCallActionProvider.faceTimeAudioAvailability(handle:));
}

uint64_t specialized closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return specialized closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(a1, *a2, a3, (uint64_t (*)(void))ClarityUIOutgoingCallActionProvider.faceTimeVideoAvailability(handle:));
}

uint64_t specialized ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(void *a1, void *a2, char *a3, unint64_t a4, uint64_t a5)
{
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  id v69;
  char *v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78[5];
  uint64_t v79[5];
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  _OWORD v92[2];

  v10 = objc_allocWithZone(MEMORY[0x1E0DBD1E0]);
  v75 = a1;
  v11 = a2;
  swift_bridgeObjectRetain();
  v12 = objc_msgSend(v10, sel_init);
  v13 = MEMORY[0x1E0DEE9E8];
  v77 = MEMORY[0x1E0DEE9E8];
  v71 = (void *)objc_opt_self();
  v72 = v12;
  v70 = a3;
  v67 = a5;
  if (objc_msgSend(v71, sel_isDirectFaceTimeAudioCallingCurrentlyAvailable))
  {
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v13;
    v15 = (uint64_t *)swift_allocObject();
    v15[2] = a5;
    v15[3] = v14;
    swift_retain();
    v16 = objc_msgSend(v12, sel_faceTimeProvider);
    swift_retain();
    specialized ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(v75, v11, a3, a4, 0, v12, v16, 1, v78, (uint64_t (*)(void *))partial apply for specialized closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:), v15);
    v17 = v78[0];
    v18 = v78[1];
    v19 = v78[3];
    v73 = v78[2];
    v20 = v78[4];
    swift_retain();

    swift_release();
    outlined init with take of ClarityUIOutgoingCallAction?((uint64_t)v78, (uint64_t)&v86);
    if (*((_QWORD *)&v86 + 1))
    {
      v21 = a4;
      v89 = v86;
      v22 = v88;
      v90 = v87;
      if (v88)
      {
        swift_bridgeObjectRetain();
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v19);
        swift_release();
        v76 = v89;
        outlined release of String((uint64_t)&v76);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v22);
      }
      else
      {
        swift_beginAccess();
        v25 = *(_QWORD *)(v14 + 16);
        outlined retain of ClarityUIOutgoingCallAction?(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of ClarityUIOutgoingCallAction?);
        swift_bridgeObjectRetain();
        specialized Set.formUnion<A>(_:)(v25);
        swift_release();
        v91 = v89;
        outlined release of String((uint64_t)&v91);
      }
      a4 = v21;
    }
    else
    {
      swift_release();
    }
    swift_release();
    v24 = v20;
    v23 = (uint64_t (*)())v19;
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v73 = 0;
    v23 = 0;
    v24 = 0;
  }
  v26 = v71;
  if (!objc_msgSend(v71, sel_isDirectTelephonyCallingCurrentlyAvailable))
    goto LABEL_22;
  v74 = v17;
  if (!v18)
  {
LABEL_15:
    v29 = objc_msgSend(v72, sel_telephonyProvider);
    v30 = v75;
    v66 = v11;
    v31 = (void *)a4;
    swift_bridgeObjectRetain();
    v32 = objc_msgSend(v30, sel_tuHandlesForPhoneNumbers);
    type metadata accessor for TUHandle();
    v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
        goto LABEL_17;
    }
    else
    {
      v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v34)
      {
LABEL_17:
        specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v33 & 0xC000000000000001) == 0, v33);
        v68 = v11;
        if ((v33 & 0xC000000000000001) != 0)
          v35 = (id)MEMORY[0x1C3B73D18](0, v33);
        else
          v35 = *(id *)(v33 + 32);
        v36 = v35;
        swift_bridgeObjectRelease_n();
        v37 = swift_allocObject();
        *(_QWORD *)(v37 + 16) = v29;
        *(_QWORD *)(v37 + 24) = v36;
        *(_BYTE *)(v37 + 32) = 0;
        *(_QWORD *)(v37 + 40) = v72;
        *(_QWORD *)&v80 = 0x2D746361746E6F43;
        *((_QWORD *)&v80 + 1) = 0xE800000000000000;
        v38 = v36;
        v39 = v29;
        v40 = v72;
        a4 = (unint64_t)v31;
        swift_bridgeObjectRetain();
        v41._countAndFlagsBits = (uint64_t)v70;
        v41._object = v31;
        String.append(_:)(v41);
        swift_bridgeObjectRelease();
        v42._countAndFlagsBits = 45;
        v42._object = (void *)0xE100000000000000;
        String.append(_:)(v42);
        LOBYTE(v79[0]) = 0;
        v43._countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v43);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        outlined consume of ClarityUIOutgoingCallAction?(v74, v18, v73, (uint64_t)v23);
        v18 = *((_QWORD *)&v80 + 1);
        v74 = v80;
        swift_bridgeObjectRetain();
        swift_retain();
        v73 = 0;
        v28 = 0;
        v24 = v37;
        v23 = partial apply for closure #1 in ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:);
        v11 = v68;
        v26 = v71;
        goto LABEL_25;
      }
    }

    swift_bridgeObjectRelease();
    a4 = (unint64_t)v31;
    swift_bridgeObjectRelease_n();
    v17 = v74;
LABEL_22:
    if (!v18)
    {
      v48 = MEMORY[0x1E0DEE9D8];
      goto LABEL_29;
    }
    v74 = v17;
    v28 = v73 & 1;
    goto LABEL_24;
  }
  if (!v23)
  {
    outlined copy of ClarityUIOutgoingCallAction?(v17, v18, v73, 0);
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(0);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(0);
    swift_bridgeObjectRelease();
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(0);
    goto LABEL_15;
  }
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v23;
  *(_QWORD *)(v27 + 24) = v24;
  outlined copy of ClarityUIOutgoingCallAction?(v17, v18, v73, (uint64_t)v23);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v23);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:));
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v23);
  v28 = v73 & 1;
LABEL_24:
  swift_bridgeObjectRetain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v23);
LABEL_25:
  swift_bridgeObjectRetain();
  v44 = (uint64_t)v23;
  v45 = (uint64_t)v23;
  v46 = v24;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v45);
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  v48 = v47;
  v49 = *(_QWORD *)(v47 + 16);
  if (v49 >= *(_QWORD *)(v47 + 24) >> 1)
  {
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v48 = v63;
  }
  *(_QWORD *)(v48 + 16) = v49 + 1;
  v50 = v48 + 40 * v49;
  v17 = v74;
  *(_QWORD *)(v50 + 32) = v74;
  *(_QWORD *)(v50 + 40) = v18;
  *(_BYTE *)(v50 + 48) = v28;
  v51 = v46;
  v23 = (uint64_t (*)())v44;
  *(_QWORD *)(v50 + 56) = v44;
  *(_QWORD *)(v50 + 64) = v51;
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v44);
LABEL_29:
  if (objc_msgSend(v26, sel_isDirectFaceTimeVideoCallingCurrentlyAvailable))
  {
    v52 = swift_allocObject();
    *(_QWORD *)(v52 + 16) = MEMORY[0x1E0DEE9E8];
    v53 = (uint64_t *)swift_allocObject();
    v53[2] = v67;
    v53[3] = v52;
    swift_retain();
    v54 = objc_msgSend(v72, sel_faceTimeProvider);
    swift_retain();
    specialized ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(v75, v11, v70, a4, 1, v72, v54, 1, v79, (uint64_t (*)(void *))partial apply for specialized closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:), v53);
    swift_retain();

    swift_release();
    outlined init with take of ClarityUIOutgoingCallAction?((uint64_t)v79, (uint64_t)&v80);
    if (*((_QWORD *)&v80 + 1))
    {
      v69 = v11;
      v84 = v80;
      v55 = v82;
      v85 = v81;
      v56 = v83;
      v92[0] = v80;
      outlined retain of String((uint64_t)v92);
      outlined retain of ClarityUIOutgoingCallAction?(v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of ClarityUIOutgoingCallAction?);
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v55);
      v57 = (uint64_t)v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v48 = v64;
      }
      v58 = *(_QWORD *)(v48 + 16);
      if (v58 >= *(_QWORD *)(v48 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v48 = v65;
      }
      *(_QWORD *)(v48 + 16) = v58 + 1;
      v59 = v48 + 40 * v58;
      v60 = v85;
      *(_OWORD *)(v59 + 32) = v84;
      *(_QWORD *)(v59 + 48) = v60;
      *(_QWORD *)(v59 + 56) = v55;
      *(_QWORD *)(v59 + 64) = v56;
      if (v55)
      {
        outlined consume of ClarityUIOutgoingCallAction?(v17, v18, v73, v57);
        swift_release();
        outlined retain of ClarityUIOutgoingCallAction?(v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of ClarityUIOutgoingCallAction?);
        outlined release of String((uint64_t)v92);
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v55);
      }
      else
      {
        swift_beginAccess();
        v61 = swift_bridgeObjectRetain();
        specialized Set.formUnion<A>(_:)(v61);
        outlined consume of ClarityUIOutgoingCallAction?(v17, v18, v73, v57);
        swift_release();
        outlined retain of ClarityUIOutgoingCallAction?(v79, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of ClarityUIOutgoingCallAction?);
        outlined release of String((uint64_t)v92);
      }
      swift_release();

      v11 = v69;
    }
    else
    {
      outlined consume of ClarityUIOutgoingCallAction?(v17, v18, v73, (uint64_t)v23);
      swift_release();

      swift_release();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    outlined consume of ClarityUIOutgoingCallAction?(v17, v18, v73, (uint64_t)v23);
    swift_bridgeObjectRelease();

    v11 = v75;
    v75 = v72;
  }

  return v48;
}

uint64_t outlined consume of ClarityUIOutgoingCallAction?(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a4);
  }
  return result;
}

uint64_t sub_1BD1D0104()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(uint64_t a1)
{
  return partial apply for closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD))closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:));
}

uint64_t outlined init with take of ClarityUIOutgoingCallAction?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ClarityUIOutgoingCallAction?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined copy of ClarityUIOutgoingCallAction?(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a4);
  }
  return result;
}

void outlined retain of ClarityUIOutgoingCallAction?(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4]);
  OUTLINED_FUNCTION_0();
}

uint64_t objectdestroy_2Tm_3()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(uint64_t a1)
{
  return partial apply for closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD))closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:));
}

uint64_t partial apply for closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return a2(a1, v2 + v4, *(_QWORD *)(v2 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t dispatch thunk of ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ClarityUIOutgoingCallActionProviderProtocol.faceTimeVideoAvailability(handle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ClarityUIOutgoingCallActionProviderProtocol.faceTimeAudioAvailability(handle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t ObjC metadata update function for ClarityUIOutgoingCallActionProvider()
{
  return type metadata accessor for ClarityUIOutgoingCallActionProvider();
}

uint64_t type metadata accessor for ClarityUIOutgoingCallActionProvider()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ClarityUIOutgoingCallActionProvider;
  if (!type metadata singleton initialization cache for ClarityUIOutgoingCallActionProvider)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for ClarityUIOutgoingCallActionProvider()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for ClarityUIOutgoingCallActionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BD1D0360()
{
  uint64_t v0;

  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(void *a1)
{
  uint64_t v1;

  closure #1 in closure #1 in ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void specialized ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(void *a1@<X0>, void *a2@<X1>, char *a3@<X2>, unint64_t a4@<X3>, char a5@<W4>, void *a6@<X5>, void *a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>, uint64_t (*a10)(void *), uint64_t *a11)
{
  void *v12;
  char *v17;
  unint64_t v18;
  id v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  char v23;
  id v24;
  int v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)();
  uint64_t v36;
  id v37;
  char *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  char *v54;
  uint64_t *v55;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;

  LOBYTE(v12) = a5;
  v17 = a1;
  v18 = a2;
  swift_bridgeObjectRetain();
  v19 = objc_msgSend(v17, sel_tuHandlesForPhoneNumbers);
  type metadata accessor for TUHandle();
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v64 = v20;
  if ((a8 & 1) != 0)
  {
    v21 = objc_msgSend(v17, sel_tuHandlesForEmailAddresses);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Array.append<A>(contentsOf:)();
    v20 = v64;
  }
  if (v20 >> 62)
    goto LABEL_38;
  v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_5:
  v59 = (char *)v22;
  if (!v22)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    v41 = 0;
    v42 = 0;
    v43 = 0;
    v35 = 0;
    v36 = 0;
    goto LABEL_34;
  }
  v51 = (uint64_t)a3;
  v52 = (void *)a4;
  v53 = (void *)v18;
  v54 = v17;
  v55 = a9;
  v23 = 0;
  a3 = 0;
  v50 = v12 & 1;
  a9 = a11;
  a4 = v20 & 0xC000000000000001;
  v60 = v20 & 0xFFFFFFFFFFFFFF8;
  v17 = (char *)v22;
  v58 = v20;
  v61 = v20 & 0xC000000000000001;
LABEL_7:
  v49 = v23;
  v18 = (unint64_t)a3;
  do
  {
    if (a4)
    {
      v24 = (id)MEMORY[0x1C3B73D18](v18, v20);
    }
    else
    {
      if (v18 >= *(_QWORD *)(v60 + 16))
        goto LABEL_37;
      v24 = *(id *)(v20 + 8 * v18 + 32);
    }
    v12 = v24;
    a3 = (char *)(v18 + 1);
    if (__OFADD__(v18, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      v22 = _CocoaArrayWrapper.endIndex.getter();
      goto LABEL_5;
    }
    if (!a10)
      goto LABEL_32;
    swift_retain();
    v25 = a10(v12);
    switch(v25)
    {
      case 2:
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a10);

        goto LABEL_23;
      case 0:
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a10);

        v23 = 1;
        if (a3 != v17)
          goto LABEL_7;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 = 0;
        v36 = 0;
        v37 = 0;
        v38 = v54;
        a9 = v55;
        v40 = v52;
        v39 = v53;
LABEL_30:
        v43 = v50;
LABEL_33:
        v62 = 0x2D746361746E6F43;
        v63 = 0xE800000000000000;
        swift_bridgeObjectRetain();
        v46._countAndFlagsBits = v51;
        v46._object = v40;
        String.append(_:)(v46);
        swift_bridgeObjectRelease();
        v47._countAndFlagsBits = 45;
        v47._object = (void *)0xE100000000000000;
        String.append(_:)(v47);
        v48._countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v48);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v41 = v62;
        v42 = v63;
        goto LABEL_34;
      case 1:
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a10);
LABEL_32:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = swift_allocObject();
        *(_QWORD *)(v36 + 16) = a7;
        *(_QWORD *)(v36 + 24) = v12;
        v43 = v50;
        *(_BYTE *)(v36 + 32) = v50;
        *(_QWORD *)(v36 + 40) = a6;
        v37 = v12;
        v44 = a7;
        v45 = a6;
        v35 = partial apply for closure #1 in ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:);
        v38 = v54;
        a9 = v55;
        v40 = v52;
        v39 = v53;
        goto LABEL_33;
    }
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)&static Log.clarityUI);
    v27 = Logger.logObject.getter();
    v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v62 = v30;
      *(_DWORD *)v29 = 136315138;
      type metadata accessor for FZHandleIDStatus(0);
      v31 = String.init<A>(describing:)();
      *(_QWORD *)(v29 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, &v62);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v27, v28, "Unhandled FaceTime availability status: %s", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy();
      v33 = v30;
      v20 = v58;
      MEMORY[0x1C3B751B8](v33, -1, -1);
      v34 = v29;
      v17 = v59;
      MEMORY[0x1C3B751B8](v34, -1, -1);
    }
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)a10);

    a4 = v61;
LABEL_23:
    ++v18;
  }
  while (a3 != v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = v52;
  v39 = v53;
  if ((v49 & 1) != 0)
  {
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v38 = v54;
    a9 = v55;
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();

  v41 = 0;
  v42 = 0;
  v43 = 0;
  v35 = 0;
  v36 = 0;
  a9 = v55;
LABEL_34:
  *a9 = v41;
  a9[1] = v42;
  a9[2] = v43;
  a9[3] = (uint64_t)v35;
  a9[4] = v36;
}

uint64_t partial apply for specialized closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(uint64_t a1)
{
  uint64_t v1;

  return specialized closure #2 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(a1, (uint64_t *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BD1D08CC()
{
  swift_release();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(uint64_t a1)
{
  uint64_t v1;

  return specialized closure #1 in ClarityUIOutgoingCallActionProviderProtocol.outgoingCallActionsAndDestinationsToQuery(contact:)(a1, (uint64_t *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t objectdestroy_12Tm()
{
  id *v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)()
{
  uint64_t v0;

  closure #1 in ClarityUIOutgoingCallActionProviderProtocol.action(contact:callType:callProviderManager:callProvider:shouldIncludeEmailAddresses:availabilityHandler:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t objectdestroy_19Tm()
{
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void one-time initialization function for htmlFragmentAdditions()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v6._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001BD674B10;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v6);

  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 1047539516;
  v5._object = (void *)0xE400000000000000;
  String.append(_:)(v5);
  static LinkShareItemHTMLTextGenerator.htmlFragmentAdditions = 4091964;
  *(_QWORD *)algn_1EF4C2FC8 = 0xE300000000000000;
}

uint64_t static LinkShareItemHTMLTextGenerator.htmlFragment(forLinkShareItem:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  Swift::String v24;
  uint64_t v25;
  _QWORD v27[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v9).n128_u64[0];
  v12 = (char *)v27 - v11;
  v13 = objc_msgSend(a1, sel_tuConversationLink, v10);
  v14 = objc_msgSend(v13, sel_URL);

  if (!v14)
  {
    OUTLINED_FUNCTION_72((uint64_t)v4, 1);
    goto LABEL_7;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  v15 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v15(v4, v8, v5);
  OUTLINED_FUNCTION_72((uint64_t)v4, 0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
LABEL_7:
    outlined destroy of URL?((uint64_t)v4);
    return 0;
  }
  v15(v12, v4, v5);
  type metadata accessor for LPLinkHTMLTextGenerator();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v5);
  v16 = LPLinkHTMLTextGenerator.__allocating_init(url:)((uint64_t)v8);
  v17 = TULinkShareItem.linkMetadata.getter();
  objc_msgSend(v16, sel_setMetadata_, v17);

  if (one-time initialization token for htmlFragmentAdditions != -1)
    swift_once();
  v19 = static LinkShareItemHTMLTextGenerator.htmlFragmentAdditions;
  v18 = *(_QWORD *)algn_1EF4C2FC8;
  v20 = objc_msgSend(v16, sel_HTMLFragmentString);
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v23 = v22;

  v27[0] = v19;
  v27[1] = v18;
  swift_bridgeObjectRetain();
  v24._countAndFlagsBits = v21;
  v24._object = v23;
  String.append(_:)(v24);

  swift_bridgeObjectRelease();
  v25 = v27[0];
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return v25;
}

unint64_t type metadata accessor for LPLinkHTMLTextGenerator()
{
  unint64_t result;

  result = lazy cache variable for type metadata for LPLinkHTMLTextGenerator;
  if (!lazy cache variable for type metadata for LPLinkHTMLTextGenerator)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for LPLinkHTMLTextGenerator);
  }
  return result;
}

id LPLinkHTMLTextGenerator.__allocating_init(url:)(uint64_t a1)
{
  id v2;
  NSURL *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  URL._bridgeToObjectiveC()(v3);
  v5 = v4;
  v6 = objc_msgSend(v2, sel_initWithURL_, v4);

  v7 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  return v6;
}

uint64_t LinkShareItemHTMLTextGenerator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t LinkShareItemHTMLTextGenerator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t LinkShareItemHTMLTextGenerator.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t LinkShareItemHTMLTextGenerator.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for LinkShareItemHTMLTextGenerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for LinkShareItemHTMLTextGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LinkShareItemHTMLTextGenerator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t *OngoingTelephonyControlsView.Constants.avatarDiameter.unsafeMutableAddressor()
{
  if (one-time initialization token for avatarDiameter != -1)
    swift_once();
  return &static OngoingTelephonyControlsView.Constants.avatarDiameter;
}

double static OngoingTelephonyControlsView.Constants.avatarDiameter.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for avatarDiameter, (uint64_t)&static OngoingTelephonyControlsView.Constants.avatarDiameter);
}

__int128 *OngoingTelephonyControlsView.Constants.avatarMargins.unsafeMutableAddressor()
{
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  return &static OngoingTelephonyControlsView.Constants.avatarMargins;
}

double static OngoingTelephonyControlsView.Constants.avatarMargins.getter()
{
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  return *(double *)&static OngoingTelephonyControlsView.Constants.avatarMargins;
}

uint64_t *OngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer.unsafeMutableAddressor()
{
  if (one-time initialization token for brandedIconTrailingSpacer != -1)
    swift_once();
  return &static OngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer;
}

double static OngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for brandedIconTrailingSpacer, (uint64_t)&static OngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer);
}

void one-time initialization function for textTopInset()
{
  static OngoingTelephonyControlsView.Constants.textTopInset = 0x4031000000000000;
}

uint64_t *OngoingTelephonyControlsView.Constants.textTopInset.unsafeMutableAddressor()
{
  if (one-time initialization token for textTopInset != -1)
    swift_once();
  return &static OngoingTelephonyControlsView.Constants.textTopInset;
}

double static OngoingTelephonyControlsView.Constants.textTopInset.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for textTopInset, (uint64_t)&static OngoingTelephonyControlsView.Constants.textTopInset);
}

uint64_t *OngoingTelephonyControlsView.Constants.textBottomInset.unsafeMutableAddressor()
{
  if (one-time initialization token for textBottomInset != -1)
    swift_once();
  return &static OngoingTelephonyControlsView.Constants.textBottomInset;
}

double static OngoingTelephonyControlsView.Constants.textBottomInset.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for textBottomInset, (uint64_t)&static OngoingTelephonyControlsView.Constants.textBottomInset);
}

uint64_t *OngoingTelephonyControlsView.Constants.minimumTextWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for minimumTextWidth != -1)
    swift_once();
  return &static OngoingTelephonyControlsView.Constants.minimumTextWidth;
}

double static OngoingTelephonyControlsView.Constants.minimumTextWidth.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for minimumTextWidth, (uint64_t)&static OngoingTelephonyControlsView.Constants.minimumTextWidth);
}

uint64_t *OngoingTelephonyControlsView.Constants.statusTextColor.unsafeMutableAddressor()
{
  if (one-time initialization token for statusTextColor != -1)
    swift_once();
  return &static OngoingTelephonyControlsView.Constants.statusTextColor;
}

id static OngoingTelephonyControlsView.Constants.statusTextColor.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for statusTextColor, (id *)&static OngoingTelephonyControlsView.Constants.statusTextColor);
}

uint64_t *OngoingTelephonyControlsView.Constants.durationTextColor.unsafeMutableAddressor()
{
  if (one-time initialization token for durationTextColor != -1)
    swift_once();
  return &static OngoingTelephonyControlsView.Constants.durationTextColor;
}

id static OngoingTelephonyControlsView.Constants.durationTextColor.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for durationTextColor, (id *)&static OngoingTelephonyControlsView.Constants.durationTextColor);
}

uint64_t *OngoingTelephonyControlsView.Constants.actionDiameter.unsafeMutableAddressor()
{
  if (one-time initialization token for actionDiameter != -1)
    swift_once();
  return &static OngoingTelephonyControlsView.Constants.actionDiameter;
}

double static OngoingTelephonyControlsView.Constants.actionDiameter.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for actionDiameter, (uint64_t)&static OngoingTelephonyControlsView.Constants.actionDiameter);
}

__int128 *OngoingTelephonyControlsView.Constants.actionMargins.unsafeMutableAddressor()
{
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  return &static OngoingTelephonyControlsView.Constants.actionMargins;
}

double static OngoingTelephonyControlsView.Constants.actionMargins.getter()
{
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  return *(double *)&static OngoingTelephonyControlsView.Constants.actionMargins;
}

uint64_t *OngoingTelephonyControlsView.Constants.interActionPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for interActionPadding != -1)
    swift_once();
  return &static OngoingTelephonyControlsView.Constants.interActionPadding;
}

double static OngoingTelephonyControlsView.Constants.interActionPadding.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for interActionPadding, (uint64_t)&static OngoingTelephonyControlsView.Constants.interActionPadding);
}

void OngoingTelephonyControlsView.avatarView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_avatarView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_avatarView) = a1;

}

char *OngoingTelephonyControlsView.__allocating_init(recipe:controlsManager:menuHostViewController:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return OngoingTelephonyControlsView.init(recipe:controlsManager:menuHostViewController:)(a1, a2, a3, a4);
}

char *OngoingTelephonyControlsView.init(recipe:controlsManager:menuHostViewController:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  char *v4;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  double v12;
  char *v13;
  id v14;
  UILabel *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  objc_class *v19;
  id v20;
  UILabel *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *v27;
  NSBundle v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  NSBundle v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t (*v43)(void);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  uint64_t v58;
  objc_class *v59;
  char *v60;
  void *v61;
  char *v62;
  id v63;
  _QWORD v65[2];
  uint64_t v66;
  char *v67;
  id v68;
  uint64_t v69;
  objc_super v70;
  uint64_t v71;
  _QWORD v72[5];
  UIColor_optional v73;
  UIColor_optional v74;

  v65[1] = a4;
  v68 = a3;
  v7 = type metadata accessor for ConversationControlsAction();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_avatarView] = 0;
  v10 = OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_primaryLabel;
  type metadata accessor for UILabel();
  v11 = (void *)objc_opt_self();
  v12 = *MEMORY[0x1E0DC1438];
  v13 = v4;
  v14 = objc_msgSend(v11, sel_systemFontOfSize_weight_, 16.67, v12);
  v73.value.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UILabel.init(font:textColor:)(v15, (UIFont)v14, v73);
  v66 = v10;
  v67 = v4;
  *(_QWORD *)&v4[v10] = v16;
  v17 = OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_secondaryLabel;
  v18 = objc_msgSend(v11, sel_monospacedDigitSystemFontOfSize_weight_, 14.0, *MEMORY[0x1E0DC1448]);
  if (one-time initialization token for statusTextColor != -1)
    swift_once();
  v19 = (objc_class *)static OngoingTelephonyControlsView.Constants.statusTextColor;
  v20 = (id)static OngoingTelephonyControlsView.Constants.statusTextColor;
  v74.value.super.isa = v19;
  UILabel.init(font:textColor:)(v21, (UIFont)v18, v74);
  *(_QWORD *)&v13[v17] = v22;
  v65[0] = v17;
  v13[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_context] = 1;
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_cnkContentAlpha] = 0x3FF0000000000000;
  outlined init with copy of ConversationControlsRecipe(a1, (uint64_t)&v13[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_recipe]);
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_controlsManager] = a2;
  swift_storeEnumTagMultiPayload();
  v23 = one-time initialization token for conversationKit;
  v24 = a2;
  v69 = a1;
  if (v23 != -1)
    swift_once();
  v25 = unk_1EF4FCB30;
  v26 = qword_1EF4FCB38;
  v27 = (objc_class *)(id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v28.super.isa = v27;
  v29 = OUTLINED_FUNCTION_49_2(0xD000000000000015, 0x80000001BD66E060, v25, v26, v28);
  v31 = v30;
  OUTLINED_FUNCTION_27();

  OUTLINED_FUNCTION_63_2();
  v33 = v32;
  outlined bridged method (mbgnn) of @objc NSObject.accessibilityLabel.setter(v29, v31, v33);
  swift_bridgeObjectRelease();

  outlined destroy of ConversationControlsAction((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_changeRouteButton] = v33;
  static ConversationControlsAction.rejectCall(controlsManager:)(v24, v9);
  v34 = unk_1EF4FCB30;
  v35 = qword_1EF4FCB38;
  v36 = (objc_class *)(id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v37.super.isa = v36;
  v38 = OUTLINED_FUNCTION_49_2(0x5F474E41485F5841, 0xEA00000000005055, v34, v35, v37);
  v40 = v39;
  OUTLINED_FUNCTION_27();

  OUTLINED_FUNCTION_63_2();
  v42 = v41;
  outlined bridged method (mbgnn) of @objc NSObject.accessibilityLabel.setter(v38, v40, v42);
  swift_bridgeObjectRelease();

  outlined destroy of ConversationControlsAction((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_hangUpButton] = v42;
  objc_msgSend(*(id *)&v67[v66], sel_setAttributedText_, *(_QWORD *)(v69 + 80));
  type metadata accessor for BrandedIconView();
  v43 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v24) + 0x270);
  v44 = v43();
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_brandedIconView] = BrandedIconView.__allocating_init(telephonyCall:)(v44, v45);
  v46 = type metadata accessor for DurationLabelController();
  v47 = v43();
  v49 = v48;
  ObjectType = swift_getObjectType();
  v72[3] = ObjectType;
  v51 = *(_QWORD *)(v49 + 8);
  v72[4] = v51;
  v72[0] = v47;
  v52 = one-time initialization token for durationTextColor;
  v53 = *(id *)&v13[v65[0]];
  if (v52 != -1)
    swift_once();
  v54 = (void *)static OngoingTelephonyControlsView.Constants.durationTextColor;
  v71 = v47;
  swift_unknownObjectRetain();
  v55 = v54;
  v56 = specialized DurationLabelController.__allocating_init(durationProvider:label:textColor:voiceOverUpdateHandler:prefixAttributedString:)(&v71, v53, v54, 0, 0, 0, v46, ObjectType, v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_durationController] = v56;
  v57 = *(void (**)(uint64_t))(*(_QWORD *)v56 + 248);
  v58 = swift_retain();
  v57(v58);
  swift_release();

  v59 = (objc_class *)ObjC metadata update function for OngoingTelephonyControlsView();
  v70.receiver = v13;
  v70.super_class = v59;
  v60 = (char *)objc_msgSendSuper2(&v70, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  OngoingTelephonyControlsView.updateAvatarView()();
  objc_msgSend(v60, sel_addSubview_, *(_QWORD *)&v60[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_secondaryLabel]);
  OUTLINED_FUNCTION_10_67(OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_primaryLabel);
  OUTLINED_FUNCTION_10_67(OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_changeRouteButton);
  OUTLINED_FUNCTION_10_67(OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_hangUpButton);
  v61 = *(void **)&v60[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_brandedIconView];
  if (v61)
  {
    v62 = v60;
    v63 = v61;
    OUTLINED_FUNCTION_39_4((uint64_t)v63, sel_addSubview_);

  }
  outlined destroy of ConversationControlsAction(v69, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  return v60;
}

id OngoingTelephonyControlsView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void OngoingTelephonyControlsView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  id v3;
  UILabel *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_class *v8;
  id v9;
  UILabel *v10;
  uint64_t v11;
  UIColor_optional v12;
  UIColor_optional v13;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_avatarView] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_primaryLabel;
  type metadata accessor for UILabel();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_systemFontOfSize_weight_, 16.67, *MEMORY[0x1E0DC1438]);
  v12.value.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UILabel.init(font:textColor:)(v4, (UIFont)v3, v12);
  *(_QWORD *)&v0[v1] = v5;
  v6 = OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_secondaryLabel;
  v7 = objc_msgSend(v2, sel_monospacedDigitSystemFontOfSize_weight_, 14.0, *MEMORY[0x1E0DC1448]);
  if (one-time initialization token for statusTextColor != -1)
    swift_once();
  v8 = (objc_class *)static OngoingTelephonyControlsView.Constants.statusTextColor;
  v9 = (id)static OngoingTelephonyControlsView.Constants.statusTextColor;
  v13.value.super.isa = v8;
  UILabel.init(font:textColor:)(v10, (UIFont)v7, v13);
  *(_QWORD *)&v0[v6] = v11;
  v0[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_context] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_cnkContentAlpha] = 0x3FF0000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id OngoingTelephonyControlsView.controlsManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_controlsManager);
}

uint64_t OngoingTelephonyControlsView.context.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_context);
}

id OngoingTelephonyControlsView.cnkContentAlpha.didset()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_avatarView];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, sel_alpha);
    objc_msgSend(v2, sel_setAlpha_);

  }
  v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_secondaryLabel];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v3, sel_setAlpha_);
  v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_primaryLabel];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v4, sel_setAlpha_);
  v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_changeRouteButton];
  objc_msgSend(v0, sel_alpha);
  objc_msgSend(v5, sel_setAlpha_);
  v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_hangUpButton];
  objc_msgSend(v0, sel_alpha);
  return objc_msgSend(v6, sel_setAlpha_);
}

double OngoingTelephonyControlsView.cnkContentAlpha.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_cnkContentAlpha;
  OUTLINED_FUNCTION_2_0();
  return *(double *)v1;
}

id OngoingTelephonyControlsView.cnkContentAlpha.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_cnkContentAlpha);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return OngoingTelephonyControlsView.cnkContentAlpha.didset();
}

uint64_t (*OngoingTelephonyControlsView.cnkContentAlpha.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return OngoingTelephonyControlsView.cnkContentAlpha.modify;
}

uint64_t OngoingTelephonyControlsView.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))OngoingTelephonyControlsView.cnkContentAlpha.didset);
}

id OngoingTelephonyControlsView.recipe.didset()
{
  char *v0;
  char *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  char v49;
  uint64_t v50[6];

  v1 = v0;
  swift_getObjectType();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v50[0] = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = _typeName(_:qualified:)();
    v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v3, v4, "[%{public}s.recipe.didSet] Updating recipe on existing instance may not result in the expected experience.", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v6, -1, -1);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  v9 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_recipe];
  swift_beginAccess();
  outlined init with copy of ConversationControlsType(v9, (uint64_t)v50);
  v46 = 7;
  v47 = 0u;
  v48 = 0u;
  v49 = 6;
  static ConversationControlsType.== infix(_:_:)((uint64_t)v50);
  v11 = v10;
  outlined destroy of ConversationControlsType((uint64_t)&v46);
  outlined destroy of ConversationControlsType((uint64_t)v50);
  if ((v11 & 1) == 0)
  {
    outlined init with copy of ConversationControlsType(v9, (uint64_t)v50);
    v46 = 9;
    v47 = 0u;
    v48 = 0u;
    v49 = 6;
    static ConversationControlsType.== infix(_:_:)((uint64_t)v50);
    v13 = v12;
    outlined destroy of ConversationControlsType((uint64_t)&v46);
    outlined destroy of ConversationControlsType((uint64_t)v50);
    if ((v13 & 1) == 0)
    {
      v14 = v0;
      v15 = Logger.logObject.getter();
      v16 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v45 = swift_slowAlloc();
        v46 = v45;
        *(_DWORD *)v17 = 136446466;
        v18 = _typeName(_:qualified:)();
        v50[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2080;
        outlined init with copy of ConversationControlsType(v9, (uint64_t)v50);
        v27 = specialized >> prefix<A>(_:)((uint64_t)v50, v20, v21, v22, v23, v24, v25, v26);
        v29 = v28;
        outlined destroy of ConversationControlsType?((uint64_t)v50);
        v50[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v29, &v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v15, v16, "[%{public}s.recipe.didSet] Applied invalid recipe type %s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v45, -1, -1);
        MEMORY[0x1C3B751B8](v17, -1, -1);

      }
      else
      {

      }
    }
  }
  v30 = *(_QWORD *)(v9 + 88);
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v44)
      goto LABEL_15;
  }
  else if (!*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_15;
  }
  v31 = Logger.logObject.getter();
  v32 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v50[0] = v34;
    *(_DWORD *)v33 = 136446210;
    v35 = _typeName(_:qualified:)();
    v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v31, v32, "[%{public}s.recipe.didSet] Ignoring recipe subtitles which is currently unsupported per design.", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v34, -1, -1);
    MEMORY[0x1C3B751B8](v33, -1, -1);
  }

LABEL_15:
  if (*(_QWORD *)(v9 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 40)))
  {
    v37 = Logger.logObject.getter();
    v38 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v50[0] = v40;
      *(_DWORD *)v39 = 136446210;
      v41 = _typeName(_:qualified:)();
      v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v37, v38, "[%{public}s.recipe.didSet] Ignoring recipe subtitleLeadingBadge which is unsupported per design", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v40, -1, -1);
      MEMORY[0x1C3B751B8](v39, -1, -1);
    }

  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_primaryLabel], sel_setAttributedText_, *(_QWORD *)(v9 + 80));
  OngoingTelephonyControlsView.updateAvatarView()();
  return objc_msgSend(v1, sel_setNeedsLayout);
}

uint64_t OngoingTelephonyControlsView.recipe.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_recipe;
  OUTLINED_FUNCTION_2_0();
  return outlined init with copy of ConversationControlsRecipe(v3, a1);
}

uint64_t OngoingTelephonyControlsView.recipe.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ConversationControlsRecipe(a1, v3);
  swift_endAccess();
  OngoingTelephonyControlsView.recipe.didset();
  return outlined destroy of ConversationControlsAction(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
}

uint64_t (*OngoingTelephonyControlsView.recipe.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return OngoingTelephonyControlsView.recipe.modify;
}

uint64_t OngoingTelephonyControlsView.recipe.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))OngoingTelephonyControlsView.recipe.didset);
}

Swift::Void __swiftcall OngoingTelephonyControlsView.layoutSubviews()()
{
  NSObject *v0;
  NSObject *v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double Width;
  double v27;
  double v28;
  void *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double MaxX;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  void *v74;
  id v75;
  void *v76;
  double v77;
  double v78;
  double v79;
  void *v80;
  double v81;
  double v82;
  double v83;
  CGFloat Height;
  NSObject *v85;
  CGFloat v86;
  double v87;
  double v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  double v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  double v120;
  id v121;
  SEL v122;
  id v123;
  double MinX;
  double v125;
  double MaxY;
  double v127;
  double v128;
  double v129;
  os_log_type_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t inited;
  void *v141;
  _QWORD *v142;
  void *v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  char v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  void *v157;
  id v158;
  void *v159;
  id v160;
  void *v161;
  id v162;
  void *v163;
  id v164;
  void *v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  double v186;
  uint64_t v187;
  uint64_t rect;
  uint64_t rectb;
  uint64_t rectc;
  uint64_t rectd;
  CGFloat recta;
  uint64_t recte;
  id v194;
  id v195;
  id v196;
  id v197;
  id v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  CGFloat v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  CGFloat v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  CGFloat v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  double v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  objc_super v254;
  CGRect v255;
  CGRect v256;
  CGRect v257;
  CGRect v258;
  CGRect v259;
  CGRect v260;
  CGRect v261;
  CGRect v262;
  CGRect v263;
  CGRect v264;
  CGRect v265;
  CGRect v266;
  CGRect v267;
  CGRect v268;
  CGRect v269;

  v1 = v0;
  v230 = OUTLINED_FUNCTION_15_6();
  v254.receiver = v0;
  v254.super_class = (Class)ObjC metadata update function for OngoingTelephonyControlsView();
  objc_msgSendSuper2(&v254, sel_layoutSubviews);
  if (one-time initialization token for avatarDiameter != -1)
    swift_once();
  v2 = *(double *)&static OngoingTelephonyControlsView.Constants.avatarDiameter;
  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  v3 = *((double *)&static OngoingTelephonyControlsView.Constants.avatarMargins + 1);
  OUTLINED_FUNCTION_5_69();
  v4 = (CGRectGetHeight(v255) - v2) * 0.5;
  v5 = OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_avatarView;
  objc_msgSend(*(id *)((char *)&v0->isa + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_avatarView), sel_setFrame_, v3, v4, v2, v2);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v6 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v7 = OUTLINED_FUNCTION_19_9();
  v177 = v5;
  if (OUTLINED_FUNCTION_35(v0))
  {
    v8 = OUTLINED_FUNCTION_105();
    v248 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v8 = 136446466;
    v9 = OUTLINED_FUNCTION_7_70();
    OUTLINED_FUNCTION_19_40(v9, v10, v11, v12, v13, v14, v15, v16, v167, v172, v5, v182, rect, (uint64_t)v194, v200, v205, v210, v215, v220,
      v225,
      v230,
      v234,
      v239,
      v242,
      v245,
      v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_54_1();
    *(_WORD *)(v8 + 12) = 2080;
    type metadata accessor for CGRect(0);
    v17 = OUTLINED_FUNCTION_31_35();
    OUTLINED_FUNCTION_19_40(v17, v18, v19, v20, v21, v22, v23, v24, v168, v173, v178, v183, rectb, (uint64_t)v195, v201, v206, v211, v216, v221,
      v226,
      v231,
      *(uint64_t *)&v3,
      *(uint64_t *)&v4,
      *(uint64_t *)&v2,
      *(uint64_t *)&v2,
      v249);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v0, v7, "[%{public}s][layout] leadingFrame is %s", (uint8_t *)v8);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  if (one-time initialization token for actionDiameter != -1)
    swift_once();
  v25 = *(double *)&static OngoingTelephonyControlsView.Constants.actionDiameter;
  OUTLINED_FUNCTION_5_69();
  Width = CGRectGetWidth(v256);
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  v27 = Width - *(double *)&qword_1EF4FCC78 - v25;
  OUTLINED_FUNCTION_5_69();
  v28 = (CGRectGetHeight(v257) - v25) * 0.5;
  v29 = *(Class *)((char *)&v0->isa + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_hangUpButton);
  OUTLINED_FUNCTION_27_25(v29, sel_setFrame_);
  OUTLINED_FUNCTION_26_31();
  v30 = OUTLINED_FUNCTION_19_9();
  v212 = v29;
  if (os_log_type_enabled(v0, v30))
  {
    v31 = OUTLINED_FUNCTION_105();
    v250 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v31 = 136446466;
    v32 = OUTLINED_FUNCTION_7_70();
    OUTLINED_FUNCTION_19_40(v32, v33, v34, v35, v36, v37, v38, v39, v167, v172, v177, v182, rect, (uint64_t)v194, v200, v205, (uint64_t)v29, v215, v220,
      v225,
      v230,
      v234,
      v239,
      v242,
      v245,
      v250);
    OUTLINED_FUNCTION_24_37();
    OUTLINED_FUNCTION_54_1();
    *(_WORD *)(v31 + 12) = 2080;
    OUTLINED_FUNCTION_32_28();
    v40 = OUTLINED_FUNCTION_31_35();
    OUTLINED_FUNCTION_19_40(v40, v41, v42, v43, v44, v45, v46, v47, v169, v174, v179, v184, rectc, (uint64_t)v196, v202, v207, v213, v217, v222,
      v227,
      v232,
      v235,
      v240,
      v243,
      v246,
      v251);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v0, v30, "[%{public}s][layout] hangUpFrame is %s", (uint8_t *)v31);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  v258.origin.x = v27;
  v258.origin.y = v28;
  v258.size.width = v25;
  v258.size.height = v25;
  CGRectGetMinX(v258);
  if (one-time initialization token for interActionPadding != -1)
    swift_once();
  OUTLINED_FUNCTION_5_69();
  CGRectGetHeight(v259);
  v48 = *(Class *)((char *)&v0->isa + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_changeRouteButton);
  OUTLINED_FUNCTION_27_25(v48, sel_setFrame_);
  OUTLINED_FUNCTION_26_31();
  v49 = OUTLINED_FUNCTION_19_9();
  if (os_log_type_enabled(v0, v49))
  {
    v50 = OUTLINED_FUNCTION_105();
    v252 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v50 = 136446466;
    v51 = OUTLINED_FUNCTION_7_70();
    OUTLINED_FUNCTION_41_21(v51, v52, v53, v54, v55, v56, v57, v58, v167, v172, v177, v182, rect, (uint64_t)v194, (uint64_t)v48, v205, (uint64_t)v29, v215, v220,
      v225,
      v230,
      v234,
      v239,
      v242,
      v245,
      v252);
    OUTLINED_FUNCTION_24_37();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2080;
    OUTLINED_FUNCTION_32_28();
    v59 = String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_41_21(v59, v60, v61, v62, v63, v64, v65, v66, v170, v175, v180, v185, rectd, (uint64_t)v197, v203, v208, v214, v218, v223,
      v228,
      v233,
      v236,
      v241,
      v244,
      v247,
      v253);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v0, v49, "[%{public}s][layout] changeRouteFrame is %s", (uint8_t *)v50);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  v219 = v3;
  v260.origin.x = v3;
  v209 = v4;
  v260.origin.y = v4;
  v260.size.width = v2;
  v260.size.height = v2;
  MaxX = CGRectGetMaxX(v260);
  v68 = *(double *)&qword_1EF4FCC18;
  v69 = *((double *)&static OngoingTelephonyControlsView.Constants.actionMargins + 1);
  v70 = *(double *)&static OngoingTelephonyControlsView.Constants.actionDiameter;
  v71 = *(double *)&static OngoingTelephonyControlsView.Constants.interActionPadding;
  v72 = *(double *)&qword_1EF4FCC78;
  OUTLINED_FUNCTION_5_69();
  v73 = CGRectGetWidth(v261);
  v74 = *(Class *)((char *)&v0->isa + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_primaryLabel);
  v75 = objc_msgSend(v74, sel_font);
  if (v75)
  {
    v76 = v75;
    v229 = MaxX + v68;
    v77 = v73 - (v72 + v70 + v69 + v70 + v71) - (MaxX + v68);
    objc_msgSend(v75, sel_lineHeight);
    v79 = v78;

    v80 = *(Class *)((char *)&v1->isa + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_brandedIconView);
    v81 = 0.0;
    recta = v2;
    if (v80)
    {
      if (one-time initialization token for iconSize != -1)
        swift_once();
      v83 = *((double *)&static BrandedIconView.Constants.iconSize + 1);
      v82 = *(double *)&static BrandedIconView.Constants.iconSize;
      if (*(double *)&static BrandedIconView.Constants.iconSize > 0.0)
      {
        if (one-time initialization token for brandedIconTrailingSpacer != -1)
          swift_once();
        v81 = v82 + *(double *)&static OngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer;
      }
    }
    else
    {
      v82 = 0.0;
      v83 = 0.0;
    }
    v186 = v77;
    OUTLINED_FUNCTION_5_69();
    Height = CGRectGetHeight(v262);
    v85 = *(NSObject **)((char *)&v1->isa
                       + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_durationController);
    v86 = (*((double (**)(double, double))v85->isa + 28))(v77 - v81, Height - v79);
    v88 = v87;
    OUTLINED_FUNCTION_26_31();
    v89 = OUTLINED_FUNCTION_19_9();
    v198 = v74;
    if (os_log_type_enabled(v85, v89))
    {
      v90 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v90 = 136446466;
      v91 = OUTLINED_FUNCTION_7_70();
      OUTLINED_FUNCTION_16_45(v91, v92, v93, v94, v95, v96, v97, v98, v167, v172, v177, *(uint64_t *)&v77, *(uint64_t *)&recta, (uint64_t)v74, (uint64_t)v48);
      OUTLINED_FUNCTION_6_58();
      OUTLINED_FUNCTION_30_4();
      *(_WORD *)(v90 + 12) = 2048;
      OUTLINED_FUNCTION_14_61();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v85, v89, "[%{public}s][layout] textWidth: %f", (uint8_t *)v90);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    v99 = v229 + v81;
    OUTLINED_FUNCTION_5_69();
    v100 = (CGRectGetHeight(v263) - v88 - v79) * 0.5;
    OUTLINED_FUNCTION_26_31();
    v101 = OUTLINED_FUNCTION_19_9();
    if (OUTLINED_FUNCTION_17_6(v101))
    {
      v102 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v102 = 136446466;
      v103 = OUTLINED_FUNCTION_7_70();
      OUTLINED_FUNCTION_16_45(v103, v104, v105, v106, v107, v108, v109, v110, v167, v172, v177, *(uint64_t *)&v186, *(uint64_t *)&recta, (uint64_t)v74, (uint64_t)v48);
      OUTLINED_FUNCTION_6_58();
      OUTLINED_FUNCTION_30_4();
      *(_WORD *)(v102 + 12) = 2080;
      OUTLINED_FUNCTION_21_40();
      v111 = CGRect.description.getter();
      OUTLINED_FUNCTION_16_45(v111, v112, v113, v114, v115, v116, v117, v118, v171, v176, v181, v187, recte, (uint64_t)v199, v204);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_30_4();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v85, OS_LOG_TYPE_DEFAULT, "[%{public}s][layout] secondaryFrame: %s", (uint8_t *)v102);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    v119 = *(Class *)((char *)&v1->isa + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_secondaryLabel);
    v120 = OUTLINED_FUNCTION_21_40();
    objc_msgSend(v121, v122, v120);
    v224 = v86;
    if (v80)
    {
      *(double *)&v172 = v79;
      v123 = v80;
      objc_msgSend(v123, sel_setBounds_, 0.0, 0.0, v82, v83);
      v85 = v123;
      v264.origin.x = v99;
      v264.origin.y = v100;
      v264.size.width = v86;
      v264.size.height = v88;
      MinX = CGRectGetMinX(v264);
      if (one-time initialization token for brandedIconTrailingSpacer != -1)
        swift_once();
      v125 = MinX - *(double *)&static OngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer + v82 * -0.5;
      objc_msgSend(v119, sel_center);
      -[NSObject setCenter:](v85, sel_setCenter_, v125);

      v79 = *(double *)&v172;
    }
    v265.origin.x = OUTLINED_FUNCTION_21_40();
    MaxY = CGRectGetMaxY(v265);
    v127 = v79;
    if (v80)
    {
      objc_msgSend(v80, sel_frame);
      v128 = CGRectGetMaxY(v266);
    }
    else
    {
      v128 = 2.22507386e-308;
    }
    if (MaxY > v128)
      v129 = MaxY;
    else
      v129 = v128;
    objc_msgSend(v198, sel_setFrame_, v229, v129, v186, v127);
    v267.origin.x = v219;
    v267.origin.y = v209;
    v267.size.width = recta;
    v267.size.height = recta;
    CGRectGetMaxY(v267);
    v268.origin.x = v229;
    v268.origin.y = v129;
    v268.size.width = v186;
    v268.size.height = v127;
    CGRectGetMaxY(v268);
    v269.origin.x = v99;
    v269.origin.y = v100;
    v269.size.width = v224;
    v269.size.height = v88;
    CGRectGetMinY(v269);
    OUTLINED_FUNCTION_26_31();
    v130 = OUTLINED_FUNCTION_19_9();
    if (OUTLINED_FUNCTION_17_6(v130))
    {
      v131 = OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v131 = 136446978;
      v132 = OUTLINED_FUNCTION_7_70();
      OUTLINED_FUNCTION_16_45(v132, v133, v134, v135, v136, v137, v138, v139, v167, v172, v177, *(uint64_t *)&v186, *(uint64_t *)&recta, (uint64_t)v198, (uint64_t)v48);
      OUTLINED_FUNCTION_6_58();
      OUTLINED_FUNCTION_30_4();
      *(_WORD *)(v131 + 12) = 2048;
      OUTLINED_FUNCTION_14_61();
      *(_WORD *)(v131 + 22) = 2048;
      OUTLINED_FUNCTION_14_61();
      *(_WORD *)(v131 + 32) = 2048;
      OUTLINED_FUNCTION_14_61();
      _os_log_impl(&dword_1BD004000, v85, OS_LOG_TYPE_DEFAULT, "[%{public}s][layout] avatarMaxY: %f, textMaxY: %f, %f", (uint8_t *)v131, 0x2Au);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    if (-[NSObject effectiveUserInterfaceLayoutDirection](v1, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BD6446F0;
      v141 = *(Class *)((char *)&v1->isa + v177);
      *(_QWORD *)(inited + 32) = v141;
      *(_QWORD *)(inited + 40) = v119;
      *(_QWORD *)(inited + 48) = v198;
      *(_QWORD *)(inited + 56) = v48;
      *(_QWORD *)(inited + 64) = v212;
      *(_QWORD *)(inited + 72) = v80;
      v237 = (_QWORD *)inited;
      OUTLINED_FUNCTION_18_46();
      v142 = v237;
      v238 = MEMORY[0x1E0DEE9D8];
      v143 = (void *)v142[4];
      if (v143)
      {
        v144 = v143;
        v145 = v80;
        v146 = v141;
        v147 = v119;
        v148 = v198;
        v149 = v48;
        MEMORY[0x1C3B7301C](v212);
        OUTLINED_FUNCTION_4_71();
        if (v150)
          OUTLINED_FUNCTION_1_77();
        OUTLINED_FUNCTION_3_74();
        OUTLINED_FUNCTION_18_46();
      }
      else
      {
        v151 = v141;
        v152 = v119;
        v153 = v198;
        v154 = v48;
        v155 = v212;
        v156 = v80;
      }
      v157 = (void *)v142[5];
      if (v157)
      {
        v158 = v157;
        OUTLINED_FUNCTION_9_60();
      }
      v159 = (void *)v142[6];
      if (v159)
      {
        v160 = v159;
        OUTLINED_FUNCTION_9_60();
      }
      v161 = (void *)v142[7];
      if (v161)
      {
        v162 = v161;
        OUTLINED_FUNCTION_9_60();
      }
      v163 = (void *)v142[8];
      if (v163)
      {
        v164 = v163;
        OUTLINED_FUNCTION_9_60();
      }
      v165 = (void *)v142[9];
      if (v165)
      {
        v166 = v165;
        OUTLINED_FUNCTION_9_60();
      }
      swift_bridgeObjectRelease();
      specialized Sequence.forEach(_:)(v238, v1);
      OUTLINED_FUNCTION_27();
    }
  }
  else
  {
    __break(1u);
  }
}

CGSize __swiftcall OngoingTelephonyControlsView.sizeThatFits(_:)(CGSize a1)
{
  NSObject *v1;
  double height;
  double width;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  double v79;
  double v80;
  CGSize result;
  double v82;
  double v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  double v88;
  double v89;

  height = a1.height;
  width = a1.width;
  OUTLINED_FUNCTION_15_6();
  if (height <= 2.22507386e-308)
    height = 1.79769313e308;
  v88 = width;
  v89 = height;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  v5 = OUTLINED_FUNCTION_11_17();
  v6 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_35(v5))
  {
    v7 = OUTLINED_FUNCTION_105();
    v85 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136446466;
    v8 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_20_45(v8, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_11_58();
    OUTLINED_FUNCTION_54_1();
    *(_WORD *)(v7 + 12) = 2080;
    v87 = height;
    type metadata accessor for CGSize(0);
    v15 = String.init<A>(reflecting:)();
    v86 = OUTLINED_FUNCTION_20_45(v15, v16, v17, v18, v19, v20, v21);
    OUTLINED_FUNCTION_17_46();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v5, v6, "[%{public}s][sizing] sizingThatFits %s", (uint8_t *)v7);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  if (one-time initialization token for actionDiameter != -1)
    swift_once();
  v22 = static OngoingTelephonyControlsView.Constants.actionDiameter;
  if (one-time initialization token for interActionPadding != -1)
  {
    swift_once();
    v22 = static OngoingTelephonyControlsView.Constants.actionDiameter;
  }
  v23 = Logger.logObject.getter();
  v24 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_35(v23))
  {
    v25 = OUTLINED_FUNCTION_105();
    v85 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v25 = 136446466;
    v26 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_20_45(v26, v27, v28, v29, v30, v31, v32);
    OUTLINED_FUNCTION_11_58();
    OUTLINED_FUNCTION_54_1();
    *(_WORD *)(v25 + 12) = 2080;
    v87 = *(double *)&v22;
    type metadata accessor for CGSize(0);
    v33 = String.init<A>(reflecting:)();
    v86 = OUTLINED_FUNCTION_20_45(v33, v34, v35, v36, v37, v38, v39);
    OUTLINED_FUNCTION_17_46();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v23, v24, "[%{public}s][sizing] actionsSize is  %s", (uint8_t *)v25);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  if (one-time initialization token for avatarMargins != -1)
    swift_once();
  v40 = *((double *)&static OngoingTelephonyControlsView.Constants.avatarMargins + 1);
  if (one-time initialization token for avatarDiameter != -1)
    swift_once();
  v41 = v40 + *(double *)&static OngoingTelephonyControlsView.Constants.avatarDiameter;
  v42 = *(double *)&qword_1EF4FCC18;
  if (one-time initialization token for actionMargins != -1)
    swift_once();
  v43 = v41 + v42;
  v44 = *(double *)&qword_1EF4FCC78
      + *(double *)&static OngoingTelephonyControlsView.Constants.actionDiameter
      + *((double *)&static OngoingTelephonyControlsView.Constants.actionMargins + 1)
      + *(double *)&static OngoingTelephonyControlsView.Constants.actionDiameter
      + *(double *)&static OngoingTelephonyControlsView.Constants.interActionPadding;
  v45 = 0.0;
  if (*(Class *)((char *)&v1->isa + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_brandedIconView))
  {
    if (one-time initialization token for iconSize != -1)
      swift_once();
    v47 = *((double *)&static BrandedIconView.Constants.iconSize + 1);
    v46 = *(double *)&static BrandedIconView.Constants.iconSize;
    if (*(double *)&static BrandedIconView.Constants.iconSize > 0.0)
    {
      if (one-time initialization token for brandedIconTrailingSpacer != -1)
        swift_once();
      v45 = v46 + *(double *)&static OngoingTelephonyControlsView.Constants.brandedIconTrailingSpacer;
    }
  }
  else
  {
    v47 = 0.0;
  }
  v82 = width;
  v83 = v44;
  v84 = v43;
  v48 = width - v44 - v43;
  v49 = v48 - v45;
  OUTLINED_FUNCTION_2_0();
  objc_msgSend(*(id *)((char *)&v1->isa + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_primaryLabel), sel_sizeThatFits_, v48, v89, v1);
  v51 = v50;
  v53 = v52;
  objc_msgSend(*(id *)((char *)&v1->isa + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_secondaryLabel), sel_sizeThatFits_, v49, v89 - v52);
  if (v51 > v54)
    v56 = v51;
  else
    v56 = v54;
  if (v55 > v47)
    v57 = v55;
  else
    v57 = v47;
  v58 = v53 + v57;
  v59 = *(double *)&static OngoingTelephonyControlsView.Constants.avatarMargins;
  v60 = *(double *)&static OngoingTelephonyControlsView.Constants.avatarDiameter;
  v61 = *(double *)&qword_1EF4FCC10;
  v62 = *(double *)&static OngoingTelephonyControlsView.Constants.actionMargins;
  v63 = *(double *)&static OngoingTelephonyControlsView.Constants.actionDiameter;
  v64 = *(double *)&qword_1EF4FCC70;
  if (one-time initialization token for textTopInset != -1)
    swift_once();
  v65 = v59 + v60;
  v66 = v62 + v63;
  v67 = v58 + *(double *)&static OngoingTelephonyControlsView.Constants.textTopInset;
  if (one-time initialization token for textBottomInset != -1)
    swift_once();
  v68 = v65 + v61;
  v69 = v66 + v64;
  v70 = v67 + *(double *)&static OngoingTelephonyControlsView.Constants.textBottomInset;
  if (one-time initialization token for minimumTextWidth != -1)
    swift_once();
  v71 = *(double *)&static OngoingTelephonyControlsView.Constants.minimumTextWidth;
  if (v56 > *(double *)&static OngoingTelephonyControlsView.Constants.minimumTextWidth)
    v71 = v56;
  v72 = v83 + v84 + v71;
  specialized max<A>(_:_:_:_:)(MEMORY[0x1E0DEE9D8], v68, v70, v69);
  v74 = v73;
  Logger.logObject.getter();
  v75 = OUTLINED_FUNCTION_19_9();
  if (os_log_type_enabled(v1, v75))
  {
    v76 = OUTLINED_FUNCTION_105();
    v85 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v76 = 136446722;
    v77 = OUTLINED_FUNCTION_7_10();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v77, v78, &v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 2048;
    OUTLINED_FUNCTION_44_24();
    *(_WORD *)(v76 + 22) = 2048;
    OUTLINED_FUNCTION_44_24();
    _os_log_impl(&dword_1BD004000, v1, v75, "[%{public}s][sizing] measuredWidth: %f, measuredHeight: %f", (uint8_t *)v76, 0x20u);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v79 = v82;
  if (v72 < v82)
    v79 = v72;
  v80 = v89;
  if (v74 < v89)
    v80 = v74;
  result.height = v80;
  result.width = v79;
  return result;
}

id OngoingTelephonyControlsView.intrinsicContentSize.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_sizeThatFits_, 1.79769313e308, 1.79769313e308);
}

void OngoingTelephonyControlsView.updateAvatarView()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  OUTLINED_FUNCTION_15_6();
  v2 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v2);
  v4 = (id *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
  v6 = OUTLINED_FUNCTION_11_17();
  v7 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_35(v6))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_105();
    v15 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v8 = 136446210;
    v9 = OUTLINED_FUNCTION_7_10();
    v14 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v6, v7, "[%{public}s] updateAvatarView", v8, 0xCu);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28OngoingTelephonyControlsView_avatarView), sel_removeFromSuperview);
  OngoingTelephonyControlsView.avatarView.setter(0);
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xE0))();
  if (v4[7])
  {
    v11 = v4[7];
    outlined destroy of ConversationControlsAction((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    v12 = v11;
    OngoingTelephonyControlsView.avatarView.setter((uint64_t)v11);
    OUTLINED_FUNCTION_39_4(v13, sel_addSubview_);
    objc_msgSend(v1, sel_setNeedsLayout);

  }
  else
  {
    outlined destroy of ConversationControlsAction((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  }
}

id OngoingTelephonyControlsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void OngoingTelephonyControlsView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id OngoingTelephonyControlsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for OngoingTelephonyControlsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for OngoingTelephonyControlsView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for OngoingTelephonyControlsView;
  if (!type metadata singleton initialization cache for OngoingTelephonyControlsView)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BD1D3D98(_QWORD **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xC8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD1D3DD4(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD0))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD1D3E0C(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xE0))();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata completion function for OngoingTelephonyControlsView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ConversationControlsRecipe();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for OngoingTelephonyControlsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OngoingTelephonyControlsView.__allocating_init(recipe:controlsManager:menuHostViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of OngoingTelephonyControlsView.cnkContentAlpha.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of OngoingTelephonyControlsView.cnkContentAlpha.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of OngoingTelephonyControlsView.cnkContentAlpha.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of OngoingTelephonyControlsView.recipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of OngoingTelephonyControlsView.recipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of OngoingTelephonyControlsView.recipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

ValueMetadata *type metadata accessor for OngoingTelephonyControlsView.Constants()
{
  return &type metadata for OngoingTelephonyControlsView.Constants;
}

uint64_t ZoomButton.body.getter(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ZStack<TupleView<(ModifiedContent<Image, _OpacityEffect>, ModifiedContent<Image, _OpacityEffect>)>>>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v9 = OUTLINED_FUNCTION_2_12();
  *(_QWORD *)(v9 + 16) = a1;
  *(_BYTE *)(v9 + 24) = a2 & 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<Image, _OpacityEffect>, ModifiedContent<Image, _OpacityEffect>)>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<TupleView<(ModifiedContent<Image, _OpacityEffect>, ModifiedContent<Image, _OpacityEffect>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<Image, _OpacityEffect>, ModifiedContent<Image, _OpacityEffect>)>>);
  Button.init(action:label:)();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ZStack<TupleView<(ModifiedContent<Image, _OpacityEffect>, ModifiedContent<Image, _OpacityEffect>)>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ZStack<TupleView<(ModifiedContent<Image, _OpacityEffect>, ModifiedContent<Image, _OpacityEffect>)>>>);
  lazy protocol witness table accessor for type ScreenSharingToolbarButtonStyle and conformance ScreenSharingToolbarButtonStyle();
  View.buttonStyle<A>(_:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t closure #1 in ZoomButton.body.getter()
{
  static Animation.default.getter();
  withBridgedAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t sub_1BD1D4180()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ZoomButton.body.getter()
{
  return closure #1 in ZoomButton.body.getter();
}

uint64_t closure #1 in closure #1 in ZoomButton.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_BYTE *, _QWORD);
  BOOL *v3;
  _BYTE v5[32];

  swift_retain();
  specialized Environment.wrappedValue.getter();
  v1 = v0;
  swift_release();
  v2 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v1 + 280))(v5);
  *v3 = !*v3;
  v2(v5, 0);
  return swift_release();
}

double closure #2 in ZoomButton.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  v2 = static Alignment.center.getter();
  v4 = v3;
  closure #1 in closure #2 in ZoomButton.body.getter((uint64_t)v9);
  v5 = v9[0];
  result = *(double *)&v9[1];
  v7 = v9[2];
  v8 = v9[3];
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(double *)(a1 + 24) = result;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  return result;
}

double partial apply for closure #2 in ZoomButton.body.getter@<D0>(uint64_t a1@<X8>)
{
  return closure #2 in ZoomButton.body.getter(a1);
}

uint64_t closure #1 in closure #2 in ZoomButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  double v14;

  v2 = Image.init(systemName:)();
  swift_retain();
  specialized Environment.wrappedValue.getter();
  v4 = v3;
  v5 = swift_release();
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 264))(v5);
  swift_release();
  if ((v6 & 1) != 0)
    v7 = 1.0;
  else
    v7 = 0.0;
  v8 = Image.init(systemName:)();
  swift_retain();
  specialized Environment.wrappedValue.getter();
  v10 = v9;
  v11 = swift_release();
  v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 264))(v11);
  result = swift_release();
  *(_QWORD *)a1 = v2;
  if ((v12 & 1) != 0)
    v14 = 0.0;
  else
    v14 = 1.0;
  *(double *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(double *)(a1 + 24) = v14;
  return result;
}

uint64_t protocol witness for View.body.getter in conformance ZoomButton()
{
  uint64_t v0;

  return ZoomButton.body.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void HomeButton.body.getter(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = a2 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Image>);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_4_72();
  OUTLINED_FUNCTION_19_41();
  v12 = OUTLINED_FUNCTION_5_70();
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 864))(v12);
  OUTLINED_FUNCTION_43();
  if ((v13 & 1) != 0)
  {
    v14 = OUTLINED_FUNCTION_2_12();
    *(_QWORD *)(v14 + 16) = a1;
    *(_BYTE *)(v14 + 24) = v7 != 0;
    OUTLINED_FUNCTION_21_7();
    Button.init(action:label:)();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Image> and conformance Button<A>, &demangling cache variable for type metadata for Button<Image>);
    lazy protocol witness table accessor for type ScreenSharingToolbarButtonStyle and conformance ScreenSharingToolbarButtonStyle();
    View.buttonStyle<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a3, v5, v10);
    __swift_storeEnumTagSinglePayload(a3, 0, 1, v10);
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    OUTLINED_FUNCTION_20_46();
    OUTLINED_FUNCTION_1_78(v15, v16, v17, v18);
  }
}

uint64_t closure #1 in HomeButton.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  specialized Environment.wrappedValue.getter();
  v1 = v0;
  v2 = swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 872))(v2);
  return swift_release();
}

uint64_t partial apply for closure #1 in HomeButton.body.getter()
{
  return closure #1 in HomeButton.body.getter();
}

uint64_t closure #2 in HomeButton.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t ZoomButton.init()()
{
  OUTLINED_FUNCTION_12_54();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
  return OUTLINED_FUNCTION_42_18();
}

void protocol witness for View.body.getter in conformance HomeButton(uint64_t a1@<X8>)
{
  uint64_t v1;

  HomeButton.body.getter(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), a1);
}

void RemoteControlButton.body.getter(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v33;

  v7 = a2 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Image>);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v30 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_11_2();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_4_72();
  OUTLINED_FUNCTION_19_41();
  v16 = OUTLINED_FUNCTION_5_70();
  v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 752))(v16);
  OUTLINED_FUNCTION_43();
  if (RemoteControlRequirements.isComplete.getter(v17))
  {
    v18 = v7 != 0;
    v19 = OUTLINED_FUNCTION_2_12();
    *(_QWORD *)(v19 + 16) = a1;
    *(_BYTE *)(v19 + 24) = v18;
    OUTLINED_FUNCTION_21_7();
    Button.init(action:label:)();
    OUTLINED_FUNCTION_21_7();
    OUTLINED_FUNCTION_19_41();
    v20 = OUTLINED_FUNCTION_5_70();
    (*(void (**)(unint64_t *__return_ptr, uint64_t))(*(_QWORD *)v18 + 648))(&v33, v20);
    OUTLINED_FUNCTION_43();
    outlined consume of RemoteControlState(v33);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Image> and conformance Button<A>, &demangling cache variable for type metadata for Button<Image>);
    lazy protocol witness table accessor for type ScreenSharingToolbarButtonStyle and conformance ScreenSharingToolbarButtonStyle();
    View.buttonStyle<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
    OUTLINED_FUNCTION_21_7();
    OUTLINED_FUNCTION_19_41();
    v21 = OUTLINED_FUNCTION_5_70();
    v22 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 360))(v21);
    OUTLINED_FUNCTION_43();
    KeyPath = swift_getKeyPath();
    v24 = swift_allocObject();
    *(_BYTE *)(v24 + 16) = v22 & 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v5, v4, v31);
    v25 = (uint64_t *)(v5 + *(int *)(v14 + 36));
    *v25 = KeyPath;
    v25[1] = (uint64_t)_s7SwiftUI4ViewPAAE8disabledyQrSbFySbzcfU_TA_0;
    v25[2] = v24;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v4, v31);
    _sypSgWObTm_0(v5, a3, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    __swift_storeEnumTagSinglePayload(a3, 0, 1, v14);
    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    OUTLINED_FUNCTION_20_46();
    OUTLINED_FUNCTION_1_78(v26, v27, v28, v29);
  }
}

uint64_t closure #1 in RemoteControlButton.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  specialized Environment.wrappedValue.getter();
  v1 = v0;
  v2 = swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 880))(v2);
  return swift_release();
}

uint64_t partial apply for closure #1 in RemoteControlButton.body.getter()
{
  return closure #1 in RemoteControlButton.body.getter();
}

uint64_t closure #2 in RemoteControlButton.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

void protocol witness for View.body.getter in conformance RemoteControlButton(uint64_t a1@<X8>)
{
  uint64_t v1;

  RemoteControlButton.body.getter(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), a1);
}

uint64_t CompactScreenSharingSpectatorToolbar.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_2_12();
  OUTLINED_FUNCTION_21_41(v3);
  *(_QWORD *)a1 = swift_getKeyPath();
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = partial apply for closure #1 in CompactScreenSharingSpectatorToolbar.body.getter;
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = closure #2 in CompactScreenSharingSpectatorToolbar.body.getter;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = closure #2 in CompactScreenSharingSpectatorToolbar.body.getter;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = closure #2 in CompactScreenSharingSpectatorToolbar.body.getter;
  *(_QWORD *)(a1 + 72) = 0;
  return OUTLINED_FUNCTION_23_26();
}

void closure #2 in CompactScreenSharingSpectatorToolbar.body.getter(uint64_t a1@<X8>)
{
  char v2;

  OUTLINED_FUNCTION_12_54();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
  *(_QWORD *)a1 = OUTLINED_FUNCTION_7_71();
  *(_BYTE *)(a1 + 8) = v2 & 1;
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for View.body.getter in conformance CompactScreenSharingSpectatorToolbar@<X0>(uint64_t a1@<X8>)
{
  return CompactScreenSharingSpectatorToolbar.body.getter(a1);
}

uint64_t RegularScreenSharingSpectatorToolbar.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_2_12();
  OUTLINED_FUNCTION_21_41(v3);
  *(_QWORD *)a1 = swift_getKeyPath();
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = partial apply for closure #1 in RegularScreenSharingSpectatorToolbar.body.getter;
  *(_QWORD *)(a1 + 24) = v1;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = closure #2 in RegularScreenSharingSpectatorToolbar.body.getter;
  *(_QWORD *)(a1 + 72) = 0;
  return OUTLINED_FUNCTION_23_26();
}

void closure #1 in CompactScreenSharingSpectatorToolbar.body.getter(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  swift_retain();
  specialized Environment.wrappedValue.getter();
  v3 = v2;
  v4 = swift_release();
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 792))(v4);
  v7 = v6;
  OUTLINED_FUNCTION_43();
  v8 = (uint64_t *)((char *)a1
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TransitioningText<FadeOutFadeInTransition>)
                          + 40));
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  swift_storeEnumTagMultiPayload();
  *a1 = v5;
  a1[1] = v7;
  OUTLINED_FUNCTION_18();
}

uint64_t closure #2 in RegularScreenSharingSpectatorToolbar.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t result;
  char v9;

  type metadata accessor for ScreenSharingSpectatorViewModel();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
  v2 = Environment.init<A>(_:)();
  v4 = v3;
  v5 = Environment.init<A>(_:)();
  v7 = v6;
  result = Environment.init<A>(_:)();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v7 & 1;
  *(_QWORD *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 40) = v9 & 1;
  return result;
}

uint64_t protocol witness for View.body.getter in conformance RegularScreenSharingSpectatorToolbar@<X0>(uint64_t a1@<X8>)
{
  return RegularScreenSharingSpectatorToolbar.body.getter(a1);
}

void ScreenSharingSpectatorToolbar.resolvedToolbarForSizeClass.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;
  void (*v22)(uint64_t, uint64_t);
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;

  v3 = type metadata accessor for UserInterfaceSizeClass();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  OUTLINED_FUNCTION_1_1();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v27 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v27 - v17;
  if (static Platform.current.getter() != 1)
    goto LABEL_13;
  specialized Environment.wrappedValue.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v16, *MEMORY[0x1E0CDC160], v3);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v3);
  v19 = v9 + *(int *)(v5 + 48);
  outlined init with copy of UserInterfaceSizeClass?((uint64_t)v18, v9);
  outlined init with copy of UserInterfaceSizeClass?((uint64_t)v16, v19);
  OUTLINED_FUNCTION_59_0(v9);
  if (!v20)
  {
    outlined init with copy of UserInterfaceSizeClass?(v9, (uint64_t)v13);
    OUTLINED_FUNCTION_59_0(v19);
    if (!v20)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v19, v3);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))MEMORY[0x1E0CDC170]);
      v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      v22 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v22(v1, v3);
      OUTLINED_FUNCTION_13_9((uint64_t)v16);
      OUTLINED_FUNCTION_13_9((uint64_t)v18);
      v22((uint64_t)v13, v3);
      OUTLINED_FUNCTION_13_9(v9);
      if ((v21 & 1) != 0)
        goto LABEL_12;
LABEL_13:
      OUTLINED_FUNCTION_12_54();
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
      v27 = OUTLINED_FUNCTION_7_71();
      v28 = v24 & 1;
      v29 = 1;
      goto LABEL_14;
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v16, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v18, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
LABEL_10:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v9, &demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_13_9((uint64_t)v16);
  OUTLINED_FUNCTION_13_9((uint64_t)v18);
  OUTLINED_FUNCTION_59_0(v19);
  if (!v20)
    goto LABEL_10;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v9, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
LABEL_12:
  OUTLINED_FUNCTION_12_54();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
  v27 = OUTLINED_FUNCTION_7_71();
  v28 = v23 & 1;
  v29 = 0;
LABEL_14:
  lazy protocol witness table accessor for type RegularScreenSharingSpectatorToolbar and conformance RegularScreenSharingSpectatorToolbar();
  lazy protocol witness table accessor for type CompactScreenSharingSpectatorToolbar and conformance CompactScreenSharingSpectatorToolbar();
  _ConditionalContent<>.init(storage:)();
  v25 = v31;
  v26 = v32;
  *(_QWORD *)a1 = v30;
  *(_BYTE *)(a1 + 8) = v25;
  *(_BYTE *)(a1 + 9) = v26;
  OUTLINED_FUNCTION_52_1();
}

void ScreenSharingSpectatorToolbar.body.getter(uint64_t a1@<X8>)
{
  char v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;

  ScreenSharingSpectatorToolbar.resolvedToolbarForSizeClass.getter((uint64_t)&v4);
  v2 = v5;
  v3 = v6;
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
}

void ScreenSharingSpectatorToolbar.init()(uint64_t *a1@<X8>)
{
  char *v2;
  char v3;

  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  swift_storeEnumTagMultiPayload();
  v2 = (char *)a1 + *(int *)(type metadata accessor for ScreenSharingSpectatorToolbar() + 20);
  OUTLINED_FUNCTION_12_54();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
  *(_QWORD *)v2 = OUTLINED_FUNCTION_42_18();
  v2[8] = v3 & 1;
  OUTLINED_FUNCTION_0();
}

uint64_t default argument 0 of ScreenSharingSpectatorToolbar.init(horizontalSizeClass:)@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  return swift_storeEnumTagMultiPayload();
}

void ScreenSharingSpectatorToolbar.init(horizontalSizeClass:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;

  _sypSgWObTm_0(a1, a2, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  v3 = a2 + *(int *)(type metadata accessor for ScreenSharingSpectatorToolbar() + 20);
  OUTLINED_FUNCTION_12_54();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ScreenSharingSpectatorViewModel and conformance ScreenSharingSpectatorViewModel, (void (*)(uint64_t))type metadata accessor for ScreenSharingSpectatorViewModel);
  *(_QWORD *)v3 = OUTLINED_FUNCTION_42_18();
  *(_BYTE *)(v3 + 8) = v4 & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD1D5124()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_35_18() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD1D5144()
{
  OUTLINED_FUNCTION_33_23();
  OUTLINED_FUNCTION_0();
}

_BYTE *closure #1 in View.disabled(_:)(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_1BD1D5170()
{
  return swift_deallocObject();
}

_BYTE *_s7SwiftUI4ViewPAAE8disabledyQrSbFySbzcfU_TA_0(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

void partial apply for closure #1 in CompactScreenSharingSpectatorToolbar.body.getter(uint64_t *a1@<X8>)
{
  closure #1 in CompactScreenSharingSpectatorToolbar.body.getter(a1);
}

unint64_t lazy protocol witness table accessor for type RegularScreenSharingSpectatorToolbar and conformance RegularScreenSharingSpectatorToolbar()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RegularScreenSharingSpectatorToolbar and conformance RegularScreenSharingSpectatorToolbar;
  if (!lazy protocol witness table cache variable for type RegularScreenSharingSpectatorToolbar and conformance RegularScreenSharingSpectatorToolbar)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RegularScreenSharingSpectatorToolbar, &type metadata for RegularScreenSharingSpectatorToolbar);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RegularScreenSharingSpectatorToolbar and conformance RegularScreenSharingSpectatorToolbar);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CompactScreenSharingSpectatorToolbar and conformance CompactScreenSharingSpectatorToolbar()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CompactScreenSharingSpectatorToolbar and conformance CompactScreenSharingSpectatorToolbar;
  if (!lazy protocol witness table cache variable for type CompactScreenSharingSpectatorToolbar and conformance CompactScreenSharingSpectatorToolbar)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CompactScreenSharingSpectatorToolbar, &type metadata for CompactScreenSharingSpectatorToolbar);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CompactScreenSharingSpectatorToolbar and conformance CompactScreenSharingSpectatorToolbar);
  }
  return result;
}

uint64_t outlined init with copy of UserInterfaceSizeClass?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ScreenSharingSpectatorToolbar()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ScreenSharingSpectatorToolbar;
  if (!type metadata singleton initialization cache for ScreenSharingSpectatorToolbar)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ZoomButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in HomeButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in RemoteControlButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in CompactScreenSharingSpectatorToolbar()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in RegularScreenSharingSpectatorToolbar()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in ScreenSharingSpectatorToolbar()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for ZoomButton()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeBufferWithCopyOfBuffer for HomeButton(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for HomeButton()
{
  return swift_release();
}

uint64_t assignWithTake for HomeButton(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_release();
  return a1;
}

void type metadata accessor for HomeButton()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for RemoteControlButton()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for CompactScreenSharingSpectatorToolbar()
{
  OUTLINED_FUNCTION_34_0();
}

void assignWithCopy for ZoomButton(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v2;
  swift_retain();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for RegularScreenSharingSpectatorToolbar()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *assignWithCopy for ScreenSharingSpectatorToolbar(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)a1, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  swift_retain();
  swift_release();
  return a1;
}

char *assignWithTake for ScreenSharingSpectatorToolbar(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  if (a1 != a2)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)a1, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = type metadata accessor for UserInterfaceSizeClass();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(_QWORD *)v11;
  LOBYTE(v11) = v11[8];
  *(_QWORD *)v10 = v12;
  v10[8] = (char)v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScreenSharingSpectatorToolbar()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD1D5688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 > 1)
    return (v8 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScreenSharingSpectatorToolbar()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD1D5710(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
    OUTLINED_FUNCTION_18();
  }
}

void type metadata completion function for ScreenSharingSpectatorToolbar()
{
  unint64_t v0;

  type metadata accessor for Environment<UserInterfaceSizeClass?>.Content();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BD1D57F4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<ZStack<TupleView<(ModifiedContent<Image, _OpacityEffect>, ModifiedContent<Image, _OpacityEffect>)>>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ZStack<TupleView<(ModifiedContent<Image, _OpacityEffect>, ModifiedContent<Image, _OpacityEffect>)>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ZStack<TupleView<(ModifiedContent<Image, _OpacityEffect>, ModifiedContent<Image, _OpacityEffect>)>>>);
  lazy protocol witness table accessor for type ScreenSharingToolbarButtonStyle and conformance ScreenSharingToolbarButtonStyle();
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type (<<opaque return type of View.buttonStyle<A>(_:)>>.0)? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[5];

  result = lazy protocol witness table cache variable for type (<<opaque return type of View.buttonStyle<A>(_:)>>.0)? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type (<<opaque return type of View.buttonStyle<A>(_:)>>.0)? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for (<<opaque return type of View.buttonStyle<A>(_:)>>.0)?);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<Image>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Image> and conformance Button<A>, &demangling cache variable for type metadata for Button<Image>);
    v4[1] = v2;
    v4[2] = &type metadata for ScreenSharingToolbarButtonStyle;
    v4[3] = v3;
    v4[4] = lazy protocol witness table accessor for type ScreenSharingToolbarButtonStyle and conformance ScreenSharingToolbarButtonStyle();
    v4[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type (<<opaque return type of View.buttonStyle<A>(_:)>>.0)? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>?);
    v2 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>? and conformance <A> A?);
  }
  return result;
}

void sub_1BD1D5A78()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ScreenSharingToolbar<TransitioningText<FadeOutFadeInTransition>, ZoomButton, HomeButton, RemoteControlButton> and conformance ScreenSharingToolbar<A, B, C, D>, &demangling cache variable for type metadata for ScreenSharingToolbar<TransitioningText<FadeOutFadeInTransition>, ZoomButton, HomeButton, RemoteControlButton>);
}

void sub_1BD1D5AA4()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ScreenSharingToolbar<TransitioningText<FadeOutFadeInTransition>, Never, Never, TupleView<(ZoomButton, HomeButton, RemoteControlButton)>> and conformance ScreenSharingToolbar<A, B, C, D>, &demangling cache variable for type metadata for ScreenSharingToolbar<TransitioningText<FadeOutFadeInTransition>, Never, Never, TupleView<(ZoomButton, HomeButton, RemoteControlButton)>>);
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<RegularScreenSharingSpectatorToolbar, CompactScreenSharingSpectatorToolbar> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<RegularScreenSharingSpectatorToolbar, CompactScreenSharingSpectatorToolbar> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<RegularScreenSharingSpectatorToolbar, CompactScreenSharingSpectatorToolbar> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<RegularScreenSharingSpectatorToolbar, CompactScreenSharingSpectatorToolbar>);
    v2[0] = lazy protocol witness table accessor for type RegularScreenSharingSpectatorToolbar and conformance RegularScreenSharingSpectatorToolbar();
    v2[1] = lazy protocol witness table accessor for type CompactScreenSharingSpectatorToolbar and conformance CompactScreenSharingSpectatorToolbar();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<RegularScreenSharingSpectatorToolbar, CompactScreenSharingSpectatorToolbar> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in ZoomButton.body.getter()
{
  return closure #1 in closure #1 in ZoomButton.body.getter();
}

void InCallControlsPTTOpenAppCell.appIconImageView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsPTTOpenAppCell_appIconImageView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsPTTOpenAppCell_appIconImageView) = a1;

}

uint64_t InCallControlsPTTOpenAppCell.cellContentConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIListContentConfiguration?);
  OUTLINED_FUNCTION_10_1();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v12[-v7];
  v9 = v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsPTTOpenAppCell____lazy_storage___cellContentConfiguration;
  swift_beginAccess();
  outlined init with copy of UIListContentConfiguration?(v9, (uint64_t)v8);
  v10 = OUTLINED_FUNCTION_18_5();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10) != 1)
    return OUTLINED_FUNCTION_139(a1, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32));
  outlined destroy of Conversation?((uint64_t)v8, &demangling cache variable for type metadata for UIListContentConfiguration?);
  closure #1 in InCallControlsPTTOpenAppCell.cellContentConfiguration.getter();
  OUTLINED_FUNCTION_139((uint64_t)v6, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16));
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
  swift_beginAccess();
  outlined assign with take of UIListContentConfiguration?((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t closure #1 in InCallControlsPTTOpenAppCell.cellContentConfiguration.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void (*v3)(_BYTE *, _QWORD);
  id v4;
  void (*v5)(_BYTE *, _QWORD);
  void (*v6)(_BYTE *, _QWORD);
  id v7;
  Class isa;
  _BYTE v10[32];

  MEMORY[0x1C3B73748]();
  v0 = (void *)objc_opt_self();
  v1 = *MEMORY[0x1E0DC4A88];
  v2 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  UIFont.caseSensitive()();

  v3 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v3(v10, 0);
  if (one-time initialization token for tableViewCellTitleLabel != -1)
    swift_once();
  v4 = (id)static Colors.InCallControls.tableViewCellTitleLabel;
  v5 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v5(v10, 0);
  v6 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.adjustsFontForContentSizeCategory.setter();
  v6(v10, 0);
  v7 = objc_msgSend(v0, sel_preferredFontForTextStyle_, v1);
  isa = UIFont.caseSensitive()().super.isa;

  InCallControlsPTTOpenAppCell.verticalInset(_:scaledToFont:)(isa, 18.5);
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

id InCallControlsPTTOpenAppCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id InCallControlsPTTOpenAppCell.init(frame:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  objc_super *v6;
  SEL v7;
  uint64_t v9;

  OUTLINED_FUNCTION_17_7();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsPTTOpenAppCell_appIconImageView) = 0;
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsPTTOpenAppCell____lazy_storage___cellContentConfiguration;
  v2 = OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_77_0(v1, v3, v4, v2);
  v9 = type metadata accessor for InCallControlsPTTOpenAppCell();
  v5 = OUTLINED_FUNCTION_15_0();
  return objc_msgSendSuper2(v6, v7, v5, v0, v9);
}

uint64_t type metadata accessor for InCallControlsPTTOpenAppCell()
{
  uint64_t result;

  result = type metadata singleton initialization cache for InCallControlsPTTOpenAppCell;
  if (!type metadata singleton initialization cache for InCallControlsPTTOpenAppCell)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t InCallControlsPTTOpenAppCell.configure(with:)(uint64_t *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  Swift::String v40;
  Swift::String_optional v41;
  Swift::String v42;
  uint64_t *boxed_opaque_existential_1;
  void *v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  uint64_t (**v49)();
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[6];
  Swift::String v72;

  v2 = v1;
  v4 = type metadata accessor for UICellAccessory();
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v66 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v62 = v8;
  v9 = type metadata accessor for UICellAccessory.Placement();
  v59 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v61 = v11;
  v12 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  v64 = *(_QWORD *)(v12 - 8);
  v65 = v12;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_41();
  v63 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  v19 = OUTLINED_FUNCTION_18_5();
  v69 = *(_QWORD *)(v19 - 8);
  v70 = v19;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_77();
  v23 = v22 - v21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_77();
  v27 = v26 - v25;
  static UIBackgroundConfiguration.listGroupedCell()();
  v28 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  type metadata accessor for UIVibrancyEffect();
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  v29 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload(v27, 0, 1, v29);
  MEMORY[0x1C3B7370C](v27);
  objc_msgSend(v1, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  InCallControlsPTTOpenAppCell.cellContentConfiguration.getter(v23);
  v30 = type metadata accessor for Locale();
  OUTLINED_FUNCTION_77_0(v18, v31, v32, v30);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1BD6441D0;
  v35 = *a1;
  v34 = a1[1];
  *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v33 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v33 + 32) = v35;
  *(_QWORD *)(v33 + 40) = v34;
  v36 = one-time initialization token for conversationKit;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = unk_1EF4FCB30;
  v38 = (void *)qword_1EF4FCB38;
  v39 = (id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v72._object = (void *)0xE000000000000000;
  v40._object = (void *)0x80000001BD67B060;
  v40._countAndFlagsBits = 0xD00000000000001ELL;
  v41.value._countAndFlagsBits = v37;
  v41.value._object = v38;
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  v72._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v72);
  String.init(format:locale:arguments:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  outlined destroy of Conversation?(v18, &demangling cache variable for type metadata for Locale?);
  UIListContentConfiguration.text.setter();
  v71[3] = v70;
  v71[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v71);
  OUTLINED_FUNCTION_139((uint64_t)boxed_opaque_existential_1, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 16));
  MEMORY[0x1C3B73700](v71);
  v44 = (void *)objc_opt_self();
  v45 = (void *)MEMORY[0x1C3B72E00](a1[2], a1[3]);
  v46 = objc_msgSend(v44, sel__applicationIconImageForBundleIdentifier_format_, v45, 0);

  v47 = OUTLINED_FUNCTION_65(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_);
  InCallControlsPTTOpenAppCell.appIconImageView.setter((uint64_t)v47);
  v48 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit28InCallControlsPTTOpenAppCell_appIconImageView];
  if (v48)
  {
    v49 = (uint64_t (**)())(v61
                         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                  + 48));
    v50 = *MEMORY[0x1E0DC1C20];
    v51 = type metadata accessor for UICellAccessory.DisplayedState();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v61, v50, v51);
    *v49 = OUTLINED_FUNCTION_28_0;
    v49[1] = 0;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 104))(v61, *MEMORY[0x1E0DC1D18], v60);
    v52 = *MEMORY[0x1E0DC1C48];
    v53 = type metadata accessor for UICellAccessory.LayoutDimension();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v62, v52, v53);
    __swift_storeEnumTagSinglePayload(v62, 0, 1, v53);
    v54 = v48;
    UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
    static UICellAccessory.customView(configuration:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
    v55 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_1BD6441D0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v67 + 16))(v56 + v55, v66, v68);
    UICollectionViewListCell.accessories.setter();
    v57 = v70;
    objc_msgSend(v2, sel_setAccessibilityTraits_, *MEMORY[0x1E0DC4660]);

    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
  }
  else
  {
    v57 = v70;

  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v23, v57);
}

id InCallControlsPTTOpenAppCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = OUTLINED_FUNCTION_65(objc_allocWithZone(v1), sel_initWithCoder_);

  return v3;
}

void InCallControlsPTTOpenAppCell.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsPTTOpenAppCell_appIconImageView] = 0;
  v1 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsPTTOpenAppCell____lazy_storage___cellContentConfiguration];
  v2 = OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_77_0(v1, v3, v4, v2);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double InCallControlsPTTOpenAppCell.verticalInset(_:scaledToFont:)(void *a1, double a2)
{
  id v3;
  id v4;
  id v5;
  double v6;
  void *v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v3 = objc_msgSend(a1, sel_fontDescriptor);
  v4 = objc_msgSend(v3, sel_objectForKey_, *MEMORY[0x1E0DC13B8]);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    type metadata accessor for UIFontTextStyle(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = OUTLINED_FUNCTION_65(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_);
      objc_msgSend(v5, sel_scaledValueForValue_, a2);
      a2 = v6;

    }
  }
  else
  {
    outlined destroy of Conversation?((uint64_t)v10, &demangling cache variable for type metadata for Any?);
  }
  return a2;
}

id InCallControlsPTTOpenAppCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsPTTOpenAppCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ObjC metadata update function for InCallControlsPTTOpenAppCell()
{
  return type metadata accessor for InCallControlsPTTOpenAppCell();
}

void type metadata completion function for InCallControlsPTTOpenAppCell()
{
  unint64_t v0;

  type metadata accessor for UIListContentConfiguration?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for InCallControlsPTTOpenAppCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsPTTOpenAppCell.configure(with:)(uint64_t a1)
{
  _QWORD *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_OWORD *);
  _OWORD v6[2];
  uint64_t v7;
  __int128 v8;

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v2;
  v7 = v3;
  v8 = *(_OWORD *)(a1 + 40);
  return v4(v6);
}

void type metadata accessor for UIListContentConfiguration?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for UIListContentConfiguration?)
  {
    type metadata accessor for UIListContentConfiguration();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for UIListContentConfiguration?);
  }
}

uint64_t outlined init with copy of UIListContentConfiguration?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIListContentConfiguration?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of UIListContentConfiguration?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIListContentConfiguration?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t SystemApertureInCallWaveformTrailingView.__allocating_init(call:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v2 = v1;
  v4 = (void *)objc_opt_self();
  v5 = a1;
  v6 = objc_msgSend(v4, sel_sharedInstance);
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v8 = objc_allocWithZone((Class)type metadata accessor for AudioPowerSpectrumViewModel());
  AudioPowerSpectrumViewModel.init(call:callCenter:notificationCenter:)();
  (*(void (**)(void))(v2 + 224))();
  OUTLINED_FUNCTION_134();
  return v2;
}

void *SystemApertureInCallWaveformTrailingView.Constants.preferredSize.unsafeMutableAddressor()
{
  return &static SystemApertureInCallWaveformTrailingView.Constants.preferredSize;
}

double static SystemApertureInCallWaveformTrailingView.Constants.preferredSize.getter()
{
  return 43.0;
}

void *SystemApertureInCallWaveformTrailingView.Constants.trailingPadding.unsafeMutableAddressor()
{
  return &static SystemApertureInCallWaveformTrailingView.Constants.trailingPadding;
}

double static SystemApertureInCallWaveformTrailingView.Constants.trailingPadding.getter()
{
  return 2.0;
}

void *SystemApertureInCallWaveformTrailingView.Constants.animationDuration.unsafeMutableAddressor()
{
  return &static SystemApertureInCallWaveformTrailingView.Constants.animationDuration;
}

double static SystemApertureInCallWaveformTrailingView.Constants.animationDuration.getter()
{
  return 0.5;
}

void one-time initialization function for framerateRange()
{
  *(__C::CAFrameRateRange *)static SystemApertureInCallWaveformTrailingView.Constants.framerateRange = CAFrameRateRange.init(minimum:maximum:preferred:)(0.16667, 0.8, (Swift::Float_optional *)0x100000000);
}

char *SystemApertureInCallWaveformTrailingView.Constants.framerateRange.unsafeMutableAddressor()
{
  if (one-time initialization token for framerateRange != -1)
    swift_once();
  return static SystemApertureInCallWaveformTrailingView.Constants.framerateRange;
}

float static SystemApertureInCallWaveformTrailingView.Constants.framerateRange.getter()
{
  if (one-time initialization token for framerateRange != -1)
    swift_once();
  return *(float *)static SystemApertureInCallWaveformTrailingView.Constants.framerateRange;
}

void *SystemApertureInCallWaveformTrailingView.Constants.updateReason.unsafeMutableAddressor()
{
  return &static SystemApertureInCallWaveformTrailingView.Constants.updateReason;
}

uint64_t static SystemApertureInCallWaveformTrailingView.Constants.updateReason.getter()
{
  return 1024;
}

void *SystemApertureInCallWaveformTrailingView.Constants.deltaCap.unsafeMutableAddressor()
{
  return &static SystemApertureInCallWaveformTrailingView.Constants.deltaCap;
}

float static SystemApertureInCallWaveformTrailingView.Constants.deltaCap.getter()
{
  return 0.25;
}

void *SystemApertureInCallWaveformTrailingView.Constants.deltaFloor.unsafeMutableAddressor()
{
  return &static SystemApertureInCallWaveformTrailingView.Constants.deltaFloor;
}

float static SystemApertureInCallWaveformTrailingView.Constants.deltaFloor.getter()
{
  return 0.1;
}

id SystemApertureInCallWaveformTrailingView.viewModel.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_viewModel);
}

void SystemApertureInCallWaveformTrailingView.backdropLayer.getter()
{
  SystemApertureInCallWaveformTrailingView.backdropLayer.getter(&OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView____lazy_storage___backdropLayer, (uint64_t (*)(void))closure #1 in SystemApertureInCallWaveformTrailingView.backdropLayer.getter);
}

id closure #1 in SystemApertureInCallWaveformTrailingView.backdropLayer.getter()
{
  id v0;
  void *v1;
  double v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2708]), sel_init);
  v1 = (void *)MEMORY[0x1C3B72E00](0x4C73756C70, 0xE500000000000000);
  objc_msgSend(v0, sel_setCompositingFilter_, v1);

  LODWORD(v2) = 1057803469;
  objc_msgSend(v0, sel_setOpacity_, v2);
  return v0;
}

void SystemApertureInCallWaveformTrailingView.localAudioView.getter()
{
  SystemApertureInCallWaveformTrailingView.backdropLayer.getter(&OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView____lazy_storage___localAudioView, (uint64_t (*)(void))closure #1 in SystemApertureInCallWaveformTrailingView.localAudioView.getter);
}

void SystemApertureInCallWaveformTrailingView.backdropLayer.getter(_QWORD *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(v2 + *a1);
  if (!v3)
  {
    v4 = (void *)a2();
    OUTLINED_FUNCTION_17_3(v4);
    OUTLINED_FUNCTION_134();
    v3 = 0;
  }
  v5 = v3;
  OUTLINED_FUNCTION_18();
}

id closure #1 in SystemApertureInCallWaveformTrailingView.localAudioView.getter()
{
  id v0;
  id v1;
  CATransform3D v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DeviceWaveformView()), sel_init);
  v1 = objc_msgSend(v0, sel_layer);
  CATransform3DMakeScale(&v3, -1.0, 1.0, 1.0);
  objc_msgSend(v1, sel_setTransform_, &v3);

  return v0;
}

void SystemApertureInCallWaveformTrailingView.remoteAudioView.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView____lazy_storage___remoteAudioView);
  if (!v1)
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DeviceWaveformView()), sel_init);
    OUTLINED_FUNCTION_17_3(v2);
    OUTLINED_FUNCTION_134();
    v1 = 0;
  }
  v3 = v1;
  OUTLINED_FUNCTION_18();
}

void SystemApertureInCallWaveformTrailingView.__allocating_init(viewModel:)()
{
  void *v0;

  OUTLINED_FUNCTION_16_1();
  SystemApertureInCallWaveformTrailingView.init(viewModel:)(v0);
  OUTLINED_FUNCTION_0();
}

NSObject *SystemApertureInCallWaveformTrailingView.init(viewModel:)(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  objc_super v24;
  Swift::String v25;

  OUTLINED_FUNCTION_15_6();
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_cancellables] = MEMORY[0x1E0DEE9E8];
  v3 = OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_animateUpdatesPassthrough;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  OUTLINED_FUNCTION_14_0();
  v4 = v1;
  *(_QWORD *)&v1[v3] = PassthroughSubject.init()();
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView____lazy_storage___backdropLayer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView____lazy_storage___localAudioView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView____lazy_storage___remoteAudioView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_viewModel] = a1;
  v5 = a1;

  v24.receiver = v4;
  v24.super_class = (Class)type metadata accessor for SystemApertureInCallWaveformTrailingView();
  v6 = objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = (void *)objc_opt_self();
  v8 = v6;
  v9 = objc_msgSend(v7, sel_clearColor);
  -[NSObject setBackgroundColor:](v8, sel_setBackgroundColor_, v9);

  v10 = OUTLINED_FUNCTION_25_1((uint64_t)-[NSObject setClipsToBounds:](v8, sel_setClipsToBounds_, 1), sel_layer);
  objc_msgSend(v10, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  SystemApertureInCallWaveformTrailingView.configureSubviews()(v11);
  SystemApertureInCallWaveformTrailingView.observeViewModel()();
  v12 = one-time initialization token for systemAperture;
  v13 = v8;
  if (v12 != -1)
    swift_once();
  v25._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0x46455641575F5841;
  v14._object = (void *)0xEB000000004D524FLL;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)xmmword_1EF4FCB60, (NSBundle)static LocalizationSource.systemAperture, v15, v25);
  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v16._countAndFlagsBits, (uint64_t)v16._object, v13);

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v17 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v17, (uint64_t)&static Logger.conversationControls);
  v18 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v8, v18))
  {
    v19 = (uint8_t *)OUTLINED_FUNCTION_105();
    v23 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v19 = 136446210;
    v20 = OUTLINED_FUNCTION_13_55();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v8, v18, "[SystemAperture] %{public}s created", v19);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  return v13;
}

uint64_t type metadata accessor for SystemApertureInCallWaveformTrailingView()
{
  return objc_opt_self();
}

void SystemApertureInCallWaveformTrailingView.__allocating_init(coder:)()
{
  void *v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  OUTLINED_FUNCTION_0();
}

void SystemApertureInCallWaveformTrailingView.init(coder:)()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_cancellables] = MEMORY[0x1E0DEE9E8];
  v1 = OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_animateUpdatesPassthrough;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)&v0[v1] = PassthroughSubject.init()();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView____lazy_storage___backdropLayer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView____lazy_storage___localAudioView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView____lazy_storage___remoteAudioView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id SystemApertureInCallWaveformTrailingView.__deallocating_deinit()
{
  char *v0;
  void *v1;
  _QWORD *v2;
  void (*v3)(uint64_t, unint64_t);
  NSObject *v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  objc_super v12;

  v1 = v0;
  OUTLINED_FUNCTION_15_6();
  v2 = *(_QWORD **)&v0[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_viewModel];
  v3 = *(void (**)(uint64_t, unint64_t))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x238);
  v4 = v2;
  v3(0x74696E696564, 0xE600000000000000);

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
  v6 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v4, v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136446210;
    v8 = OUTLINED_FUNCTION_13_55();
    OUTLINED_FUNCTION_10_22(v8, v9, v10);
    OUTLINED_FUNCTION_32_4();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v4, v6, "[SystemAperture] %{public}s deinit", v7);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for SystemApertureInCallWaveformTrailingView();
  return objc_msgSendSuper2(&v12, sel_dealloc);
}

id SystemApertureInCallWaveformTrailingView.frame.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SystemApertureInCallWaveformTrailingView();
  return objc_msgSendSuper2(&v2, sel_frame);
}

void SystemApertureInCallWaveformTrailingView.frame.setter()
{
  void *v0;
  objc_class *v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  objc_super *v11;
  SEL v12;
  objc_super v13;

  OUTLINED_FUNCTION_17_7();
  v1 = (objc_class *)type metadata accessor for SystemApertureInCallWaveformTrailingView();
  v13.receiver = v0;
  v13.super_class = v1;
  objc_msgSendSuper2(&v13, sel_frame);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_15_0();
  objc_msgSendSuper2(v11, v12, v10, v0, v1);
  SystemApertureInCallWaveformTrailingView.frame.didset(v3, v5, v7, v9);
}

void SystemApertureInCallWaveformTrailingView.frame.didset(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  void *v4;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  id v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  objc_msgSend(v4, sel_frame);
  v16.origin.x = v9;
  v16.origin.y = v10;
  v16.size.width = v11;
  v16.size.height = v12;
  v14.origin.x = a1;
  v14.origin.y = a2;
  v14.size.width = a3;
  v14.size.height = a4;
  if (!CGRectEqualToRect(v14, v16))
  {
    v13 = objc_msgSend(v4, sel_layer);
    objc_msgSend(v4, sel_frame);
    objc_msgSend(v13, sel_setCornerRadius_, CGRectGetHeight(v15) * 0.25);

  }
}

Swift::Void __swiftcall SystemApertureInCallWaveformTrailingView.layoutSubviews()()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for SystemApertureInCallWaveformTrailingView();
  objc_msgSendSuper2(&v7, sel_layoutSubviews);
  SystemApertureInCallWaveformTrailingView.backdropLayer.getter();
  v2 = v1;
  OUTLINED_FUNCTION_2_78(v1, sel_setFrame_);

  SystemApertureInCallWaveformTrailingView.localAudioView.getter();
  v4 = v3;
  OUTLINED_FUNCTION_2_78(v3, sel_setFrame_);

  SystemApertureInCallWaveformTrailingView.remoteAudioView.getter();
  v6 = v5;
  OUTLINED_FUNCTION_2_78(v5, sel_setFrame_);

}

CGSize __swiftcall SystemApertureInCallWaveformTrailingView.sizeThatFits(_:)(CGSize a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  CGSize result;

  OUTLINED_FUNCTION_15_6();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  v2 = OUTLINED_FUNCTION_3(v1, (uint64_t)&static Logger.conversationControls);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v4 = 136446210;
    v5 = OUTLINED_FUNCTION_13_55();
    OUTLINED_FUNCTION_10_22(v5, v6, v7);
    OUTLINED_FUNCTION_32_4();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v2, v3, "[SystemAperture] %{public}s sizeThatFits", v4);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v8 = 43.0;
  v9 = 19.0;
  result.height = v9;
  result.width = v8;
  return result;
}

uint64_t SystemApertureInCallWaveformTrailingView.shouldReplace(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v9;
  char v10;

  type metadata accessor for SystemApertureInCallWaveformTrailingView();
  v3 = swift_dynamicCastClass();
  if (v3)
  {
    v4 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_viewModel);
    v5 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_viewModel);
    type metadata accessor for AudioPowerSpectrumViewModel();
    v6 = a1;
    v7 = v4;
    v8 = v5;
    v9 = static NSObject.== infix(_:_:)();

    v10 = v9 ^ 1;
  }
  else
  {
    v10 = 1;
  }
  return v10 & 1;
}

id SystemApertureInCallWaveformTrailingView.sizeThatFits(_:for:)()
{
  void *v0;

  return objc_msgSend(v0, sel_sizeThatFits_);
}

Swift::Void __swiftcall SystemApertureInCallWaveformTrailingView.start()()
{
  char *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v1, (uint64_t)&static Logger.conversationControls);
  v2 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v2))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v3, v4, "Starting waveform");
    OUTLINED_FUNCTION_60();
  }

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)&v0[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_viewModel])
                    + 0x230))();
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall SystemApertureInCallWaveformTrailingView.stop()()
{
  char *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v1, (uint64_t)&static Logger.conversationControls);
  v2 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v2))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v3, v4, "Stopping waveform");
    OUTLINED_FUNCTION_60();
  }

  (*(void (**)(uint64_t, unint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)&v0[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_viewModel])
                                                    + 0x238))(0x2928706F7473, 0xE600000000000000);
  OUTLINED_FUNCTION_18();
}

void SystemApertureInCallWaveformTrailingView.configureSubviews()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v3 = OUTLINED_FUNCTION_25_1(a1, sel_layer);
  objc_msgSend(v3, sel_setBorderWidth_, 1.0);

  OUTLINED_FUNCTION_9_61();
  v5 = v4;
  OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v2
                                                                                   + OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_viewModel))
                                             + 0x150));
  OUTLINED_FUNCTION_7_72();

  OUTLINED_FUNCTION_9_61();
  v7 = OUTLINED_FUNCTION_39_32(v6);
  OUTLINED_FUNCTION_4_39();
  OUTLINED_FUNCTION_10_68();
  v9 = (void *)OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))(v8 + 432));
  OUTLINED_FUNCTION_18_47();

  SystemApertureInCallWaveformTrailingView.localAudioView.getter();
  v11 = v10;
  OUTLINED_FUNCTION_10_68();
  OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))(v12 + 360));
  OUTLINED_FUNCTION_7_72();

  SystemApertureInCallWaveformTrailingView.localAudioView.getter();
  v14 = OUTLINED_FUNCTION_39_32(v13);
  OUTLINED_FUNCTION_4_39();
  OUTLINED_FUNCTION_10_68();
  v16 = (void *)OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))(v15 + 408));
  OUTLINED_FUNCTION_18_47();

  OUTLINED_FUNCTION_9_61();
  v18 = v17;
  OUTLINED_FUNCTION_16_46();

  SystemApertureInCallWaveformTrailingView.localAudioView.getter();
  v20 = v19;
  OUTLINED_FUNCTION_16_46();

  OUTLINED_FUNCTION_10_68();
  v22 = (*(uint64_t (**)(void))(v21 + 384))() & 1;
  SystemApertureInCallWaveformTrailingView.configureFilter(_:)(v22);
}

void SystemApertureInCallWaveformTrailingView.configureFilter(_:)(uint64_t a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;

  if ((a1 & 1) != 0)
  {
    v1 = OUTLINED_FUNCTION_25_1(a1, sel_layer);
    SystemApertureInCallWaveformTrailingView.backdropLayer.getter();
    v4 = v2;
    objc_msgSend(v1, sel_addSublayer_);

  }
  else
  {
    SystemApertureInCallWaveformTrailingView.backdropLayer.getter();
    v4 = v3;
    objc_msgSend(v3, sel_removeFromSuperlayer);
  }

}

uint64_t SystemApertureInCallWaveformTrailingView.observeViewModel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_41();
  v24 = v2;
  v3 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  v23 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop>);
  v6 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  v29 = v6;
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v25 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Float]>.Publisher);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<[Float]>.Publisher>);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_33_26();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Published<[Float]>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<[Float]>.Publisher, MEMORY[0x1E0C96190]);
  v22[2] = v13;
  v22[1] = lazy protocol witness table accessor for type [Float] and conformance <A> [A]();
  Publisher<>.removeDuplicates()();
  v22[0] = *(_QWORD *)(v9 + 8);
  ((void (*)(char *, uint64_t))v22[0])(v11, v8);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_28_3();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Published<[Float]>.Publisher> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<[Float]>.Publisher>, MEMORY[0x1E0C958E0]);
  OUTLINED_FUNCTION_19_42();
  swift_release();
  OUTLINED_FUNCTION_24_38();
  OUTLINED_FUNCTION_3_75();
  OUTLINED_FUNCTION_26_32();
  OUTLINED_FUNCTION_13_33();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_33_26();
  Publisher<>.removeDuplicates()();
  ((void (*)(char *, uint64_t))v22[0])(v11, v8);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_28_3();
  OUTLINED_FUNCTION_19_42();
  swift_release();
  OUTLINED_FUNCTION_24_38();
  OUTLINED_FUNCTION_3_75();
  OUTLINED_FUNCTION_26_32();
  OUTLINED_FUNCTION_13_33();
  OUTLINED_FUNCTION_43();
  v31 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_animateUpdatesPassthrough);
  swift_retain();
  v14 = v23;
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
  v30 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v15 = type metadata accessor for NSRunLoop.SchedulerOptions();
  v16 = v24;
  __swift_storeEnumTagSinglePayload(v24, 1, 1, v15);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  type metadata accessor for NSRunLoop();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>, MEMORY[0x1E0C95F48]);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  v17 = v25;
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of NSRunLoop.SchedulerOptions?(v16);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v14, v27);
  swift_release();
  v18 = OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = partial apply for closure #3 in SystemApertureInCallWaveformTrailingView.observeViewModel();
  *(_QWORD *)(v19 + 24) = v18;
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop> and conformance Publishers.Debounce<A, B>, &demangling cache variable for type metadata for Publishers.Debounce<PassthroughSubject<(), Never>, NSRunLoop>, MEMORY[0x1E0C95BB0]);
  v20 = v28;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v17, v20);
  OUTLINED_FUNCTION_3_75();
  OUTLINED_FUNCTION_26_32();
  OUTLINED_FUNCTION_13_33();
  return OUTLINED_FUNCTION_43();
}

uint64_t closure #1 in SystemApertureInCallWaveformTrailingView.observeViewModel()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>, MEMORY[0x1E0C95F40]);
    Subject<>.send()();

    return OUTLINED_FUNCTION_43();
  }
  return result;
}

void closure #3 in SystemApertureInCallWaveformTrailingView.observeViewModel()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    SystemApertureInCallWaveformTrailingView.updatePowerLevels()();

  }
}

void SystemApertureInCallWaveformTrailingView.updatePowerLevels()()
{
  char *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  _QWORD *v7;
  void *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  float v12;
  float v13;
  _QWORD *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  float v21;
  float v22;
  Swift::Float v23;
  Swift::Float minimum;
  Swift::Float maximum;
  Swift::Float preferred;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD v31[6];
  __C::CAFrameRateRange v32;

  v2 = v0;
  SystemApertureInCallWaveformTrailingView.remoteAudioView.getter();
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0xA0))();
  OUTLINED_FUNCTION_4_39();
  OUTLINED_FUNCTION_9_61();
  v6 = v5;
  v7 = *(_QWORD **)&v0[OBJC_IVAR____TtC15ConversationKit40SystemApertureInCallWaveformTrailingView_viewModel];
  OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))((*v4 & *v7) + 0x120));
  OUTLINED_FUNCTION_11_59();

  OUTLINED_FUNCTION_9_61();
  v9 = v8;
  objc_msgSend(v8, sel_setNeedsLayout);

  OUTLINED_FUNCTION_9_61();
  v11 = OUTLINED_FUNCTION_1_79(v10);

  SystemApertureInCallWaveformTrailingView.generateMaxFrameRate(_:_:)(v1, v11);
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  SystemApertureInCallWaveformTrailingView.localAudioView.getter();
  OUTLINED_FUNCTION_1_79(v14);
  OUTLINED_FUNCTION_4_39();
  SystemApertureInCallWaveformTrailingView.localAudioView.getter();
  v16 = v15;
  OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))((*v4 & *v7) + 0xF0));
  OUTLINED_FUNCTION_11_59();

  SystemApertureInCallWaveformTrailingView.localAudioView.getter();
  v18 = v17;
  objc_msgSend(v17, sel_setNeedsLayout);

  SystemApertureInCallWaveformTrailingView.localAudioView.getter();
  v20 = OUTLINED_FUNCTION_1_79(v19);

  SystemApertureInCallWaveformTrailingView.generateMaxFrameRate(_:_:)(v1, v20);
  v22 = v21;
  OUTLINED_FUNCTION_2_1();
  swift_bridgeObjectRelease();
  if (one-time initialization token for framerateRange != -1)
    swift_once();
  if (v13 > v22)
    v23 = v13;
  else
    v23 = v22;
  v32 = CAFrameRateRange.init(minimum:maximum:preferred:)(*(Swift::Float *)static SystemApertureInCallWaveformTrailingView.Constants.framerateRange, v23, (Swift::Float_optional *)0x100000000);
  minimum = v32.minimum;
  maximum = v32.maximum;
  preferred = v32.__preferred;
  v27 = (void *)objc_opt_self();
  v28 = OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v28;
  *(Swift::Float *)(v29 + 24) = minimum;
  *(Swift::Float *)(v29 + 28) = maximum;
  *(Swift::Float *)(v29 + 32) = preferred;
  v31[4] = partial apply for closure #1 in SystemApertureInCallWaveformTrailingView.updatePowerLevels();
  v31[5] = v29;
  v31[0] = MEMORY[0x1E0C809B0];
  v31[1] = 1107296256;
  v31[2] = thunk for @escaping @callee_guaranteed () -> ();
  v31[3] = &block_descriptor_37;
  v30 = _Block_copy(v31);
  swift_release();
  objc_msgSend(v27, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v30, 0, 0.5, 0.0, 1.0, 0.0);
  _Block_release(v30);
}

void closure #1 in SystemApertureInCallWaveformTrailingView.updatePowerLevels()(uint64_t a1, float a2, float a3, float a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  _QWORD aBlock[6];

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1C3B752C0](v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = (void *)objc_opt_self();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v9;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = partial apply for closure #1 in CallControlsMenuViewController.updateDogingState(animated:);
    *(_QWORD *)(v12 + 24) = v11;
    aBlock[4] = partial apply for thunk for @callee_guaranteed () -> ();
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_13;
    v13 = _Block_copy(aBlock);
    v14 = v9;
    swift_release();
    *(float *)&v15 = a2;
    *(float *)&v16 = a3;
    *(float *)&v17 = a4;
    objc_msgSend(v10, sel__modifyAnimationsWithPreferredFrameRateRange_updateReason_animations_, 1024, v13, v15, v16, v17);
    _Block_release(v13);
    swift_release();

  }
}

uint64_t SystemApertureInCallWaveformTrailingView.generateMaxFrameRate(_:_:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  float *v3;
  float *v4;
  uint64_t v5;
  float v6;
  float v7;
  float v8;
  float v9;

  v2 = *(_QWORD *)(result + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (v2)
    {
      v3 = (float *)(result + 32);
      v4 = (float *)(a2 + 32);
      v5 = 1 - v2;
      v6 = 0.0;
      while (1)
      {
        v7 = *v3;
        if (*v4 >= *v3)
          v8 = *v3;
        else
          v8 = *v4;
        if (v7 <= *v4)
          v7 = *v4;
        v9 = v7 - v8;
        if (v9 >= 0.25)
          break;
        if (v9 >= 0.1)
        {
          if (v9 > v6)
            v6 = v9;
          goto LABEL_18;
        }
        if (v6 >= 0.1)
          goto LABEL_18;
        v6 = 0.1;
        if (!v5)
          goto LABEL_23;
LABEL_19:
        ++v4;
        ++v3;
        if (++v5 == 1)
        {
          __break(1u);
          goto LABEL_21;
        }
      }
      if (v6 < 0.25)
        v6 = 0.25;
LABEL_18:
      if (!v5)
        goto LABEL_23;
      goto LABEL_19;
    }
LABEL_23:
    if (one-time initialization token for framerateRange != -1)
      return swift_once();
  }
  else
  {
LABEL_21:
    if (one-time initialization token for framerateRange != -1)
      return swift_once();
  }
  return result;
}

id SystemApertureInCallWaveformTrailingView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void SystemApertureInCallWaveformTrailingView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t protocol witness for SystemApertureAccessoryView.shouldReplace(_:) in conformance SystemApertureInCallWaveformTrailingView()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t method lookup function for SystemApertureInCallWaveformTrailingView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureInCallWaveformTrailingView.__allocating_init(viewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of SystemApertureInCallWaveformTrailingView.shouldReplace(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SystemApertureInCallWaveformTrailingView.sizeThatFits(_:for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SystemApertureInCallWaveformTrailingView.start()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SystemApertureInCallWaveformTrailingView.stop()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

ValueMetadata *type metadata accessor for SystemApertureInCallWaveformTrailingView.Constants()
{
  return &type metadata for SystemApertureInCallWaveformTrailingView.Constants;
}

uint64_t sub_1BD1D88A8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD1D88CC()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in SystemApertureInCallWaveformTrailingView.updatePowerLevels()()
{
  uint64_t v0;

  closure #1 in SystemApertureInCallWaveformTrailingView.updatePowerLevels()(*(_QWORD *)(v0 + 16), *(float *)(v0 + 24), *(float *)(v0 + 28), *(float *)(v0 + 32));
}

uint64_t sub_1BD1D8900()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BD1D8924()
{
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type [Float] and conformance <A> [A]()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = lazy protocol witness table cache variable for type [Float] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [Float] and conformance <A> [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Float]);
    v2 = MEMORY[0x1E0DEB1B8];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF30], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [Float] and conformance <A> [A]);
  }
  return result;
}

uint64_t partial apply for closure #1 in SystemApertureInCallWaveformTrailingView.observeViewModel()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in SystemApertureInCallWaveformTrailingView.observeViewModel()(a1, v1);
}

void partial apply for closure #3 in SystemApertureInCallWaveformTrailingView.observeViewModel()()
{
  uint64_t v0;

  closure #3 in SystemApertureInCallWaveformTrailingView.observeViewModel()(v0);
}

uint64_t sub_1BD1D89B0()
{
  swift_release();
  return swift_deallocObject();
}

id OUTLINED_FUNCTION_39_32(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3656));
}

uint64_t InCallControlsReportCell.cellContentConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIListContentConfiguration?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v12[-v7];
  v9 = v1 + OBJC_IVAR____TtC15ConversationKit24InCallControlsReportCell____lazy_storage___cellContentConfiguration;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v9, (uint64_t)v8, &demangling cache variable for type metadata for UIListContentConfiguration?);
  v10 = type metadata accessor for UIListContentConfiguration();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, v8, v10);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v8, &demangling cache variable for type metadata for UIListContentConfiguration?);
  closure #1 in InCallControlsReportCell.cellContentConfiguration.getter();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a1, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v6, v9, &demangling cache variable for type metadata for UIListContentConfiguration?);
  return swift_endAccess();
}

uint64_t closure #1 in InCallControlsReportCell.cellContentConfiguration.getter()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  void *v4;
  uint64_t v5;
  id v6;
  void (*v7)(_BYTE *, _QWORD);
  id v8;
  void (*v9)(_BYTE *, _QWORD);
  void (*v10)(_BYTE *, _QWORD);
  id v11;
  Class isa;
  _BYTE v14[32];
  Swift::String v15;

  MEMORY[0x1C3B73748]();
  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v15._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001BD67B330;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v15);

  UIListContentConfiguration.text.setter();
  v4 = (void *)objc_opt_self();
  v5 = *MEMORY[0x1E0DC4A88];
  v6 = objc_msgSend(v4, sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  UIFont.caseSensitive()();

  v7 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v7(v14, 0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
  v9 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v9(v14, 0);
  v10 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.adjustsFontForContentSizeCategory.setter();
  v10(v14, 0);
  v11 = objc_msgSend(v4, sel_preferredFontForTextStyle_, v5);
  isa = UIFont.caseSensitive()().super.isa;

  InCallControlsBlockCell.verticalInset(_:scaledToFont:)(isa, 18.5);
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

id InCallControlsReportCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id InCallControlsReportCell.init(frame:)()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  objc_super *v11;
  SEL v12;
  id v13;

  OUTLINED_FUNCTION_17_7();
  ObjectType = swift_getObjectType();
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit24InCallControlsReportCell____lazy_storage___cellContentConfiguration;
  v3 = type metadata accessor for UIListContentConfiguration();
  OUTLINED_FUNCTION_77_0(v2, v4, v5, v3);
  v6 = v0 + OBJC_IVAR____TtC15ConversationKit24InCallControlsReportCell____lazy_storage___reportImageAccessory;
  v7 = type metadata accessor for UICellAccessory();
  OUTLINED_FUNCTION_77_0(v6, v8, v9, v7);
  v10 = OUTLINED_FUNCTION_15_0();
  v13 = objc_msgSendSuper2(v11, v12, v10, v0, ObjectType);
  InCallControlsReportCell.configureContent()();

  return v13;
}

uint64_t InCallControlsReportCell.configureContent()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12[5];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listGroupedCell()();
  v4 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIVibrancyEffect);
  static UIVibrancyEffect.inCallControlsEffect.getter();
  UIBackgroundConfiguration.visualEffect.setter();
  v5 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v5);
  MEMORY[0x1C3B7370C](v3);
  objc_msgSend(v0, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  v12[3] = type metadata accessor for UIListContentConfiguration();
  v12[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  InCallControlsReportCell.cellContentConfiguration.getter((uint64_t)boxed_opaque_existential_1);
  MEMORY[0x1C3B73700](v12);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UICellAccessory() - 8) + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
  InCallControlsReportCell.reportImageAccessory.getter(v9 + v8);
  return UICollectionViewListCell.accessories.setter();
}

void InCallControlsReportCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void InCallControlsReportCell.init(coder:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (uint64_t)v0
     + OBJC_IVAR____TtC15ConversationKit24InCallControlsReportCell____lazy_storage___cellContentConfiguration;
  v2 = type metadata accessor for UIListContentConfiguration();
  OUTLINED_FUNCTION_77_0(v1, v3, v4, v2);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit24InCallControlsReportCell____lazy_storage___reportImageAccessory;
  v6 = type metadata accessor for UICellAccessory();
  OUTLINED_FUNCTION_77_0(v5, v7, v8, v6);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t InCallControlsReportCell.reportImageAccessory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v12[-v7];
  v9 = v1 + OBJC_IVAR____TtC15ConversationKit24InCallControlsReportCell____lazy_storage___reportImageAccessory;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v9, (uint64_t)v8, &demangling cache variable for type metadata for UICellAccessory?);
  v10 = type metadata accessor for UICellAccessory();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, v8, v10);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v8, &demangling cache variable for type metadata for UICellAccessory?);
  closure #1 in InCallControlsReportCell.reportImageAccessory.getter(a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a1, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v6, v9, &demangling cache variable for type metadata for UICellAccessory?);
  return swift_endAccess();
}

uint64_t closure #1 in InCallControlsReportCell.reportImageAccessory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD v21[2];

  v21[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UICellAccessory.Placement();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v12 = @nonobjc UIImage.__allocating_init(systemName:)();
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v12);

  v14 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
  objc_msgSend(v13, sel_setTintColor_, v14);

  v15 = (uint64_t (**)())&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                   + 48)];
  v16 = *MEMORY[0x1E0DC1C20];
  v17 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v7, v16, v17);
  *v15 = OUTLINED_FUNCTION_28_0;
  v15[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DC1D18], v4);
  v18 = type metadata accessor for UICellAccessory.LayoutDimension();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v18);
  v19 = v13;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id InCallControlsReportCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ObjC metadata update function for InCallControlsReportCell()
{
  return type metadata accessor for InCallControlsReportCell();
}

uint64_t type metadata accessor for InCallControlsReportCell()
{
  uint64_t result;

  result = type metadata singleton initialization cache for InCallControlsReportCell;
  if (!type metadata singleton initialization cache for InCallControlsReportCell)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for InCallControlsReportCell()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Participant?(319, (unint64_t *)&lazy cache variable for type metadata for UIListContentConfiguration?, (void (*)(uint64_t))MEMORY[0x1E0DC23A0]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Participant?(319, &lazy cache variable for type metadata for UICellAccessory?, (void (*)(uint64_t))MEMORY[0x1E0DC1D38]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t TimeToWaitForCallService.init(timeToWaitForCall:defaultTimeToWaitForCall:randomRange:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t TimeToWaitForCallService.timeToWait(for:)()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  v1 = v0;
  v2 = ((_QWORD *(*)(uint64_t *__return_ptr))*v0)(&v11);
  if (v12 != 1)
    return v11;
  v3 = v0[2];
  v4 = v1[3];
  specialized Collection.randomElement<A>(using:)((uint64_t)v2, v1[4], v1[5]);
  if ((v6 & 1) != 0)
    v5 = 0;
  v7 = specialized static Duration.seconds<A>(_:)(v5);
  v9 = MEMORY[0x1C3B741D4](v3, v4, v7, v8);
  if ((static Duration.< infix(_:_:)() & 1) != 0)
    return 1000000000000000000;
  else
    return v9;
}

uint64_t specialized static Duration.seconds<A>(_:)(uint64_t a1)
{
  return 1000000000000000000 * a1;
}

void specialized Collection.randomElement<A>(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v7;
  char v8;

  v3 = a3 - a2;
  if (__OFSUB__(a3, a2))
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 == -1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = specialized RandomNumberGenerator.next<A>(upperBound:)(v4);
  specialized ClosedRange<>.index(_:offsetBy:)(a2, 0, v7, a2, a3);
  if ((v8 & 1) != 0)
LABEL_11:
    __break(1u);
}

uint64_t getEnumTagSinglePayload for TimeToWaitForCall(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TimeToWaitForCall(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t getEnumTag for TimeToWaitForCall(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t destructiveInjectEnumTag for TimeToWaitForCall(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 16) = v2;
  return result;
}

ValueMetadata *type metadata accessor for TimeToWaitForCall()
{
  return &type metadata for TimeToWaitForCall;
}

uint64_t initializeWithCopy for TimeToWaitForCallService(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TimeToWaitForCallService(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

_OWORD *assignWithTake for TimeToWaitForCallService(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  return a1;
}

ValueMetadata *type metadata accessor for TimeToWaitForCallService()
{
  return &type metadata for TimeToWaitForCallService;
}

unint64_t specialized Collection.randomElement<A>(using:)(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;

  v3 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter())
      goto LABEL_3;
    return 0;
  }
  if (!*(_QWORD *)(a2 + 16))
    return 0;
LABEL_3:
  result = specialized Set.count.getter(a2);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result)
  {
    v5 = specialized RandomNumberGenerator.next<A>(upperBound:)(result);
    if (v3)
    {
      v6 = __CocoaSet.startIndex.getter();
      v8 = v7;
      v9 = 1;
    }
    else
    {
      v6 = specialized _NativeSet.startIndex.getter(a2);
      v8 = v11;
      v9 = v12 & 1;
    }
    v13 = specialized Collection.index(_:offsetBy:)(v6, v8, v9, v5, a2);
    v15 = v14;
    v17 = v16 & 1;
    outlined consume of Set<TUHandle>.Index._Variant(v6, v8, v9);
    specialized Set.subscript.getter(v13, v15, v17, a2);
    v10 = v18;
    outlined consume of Set<TUHandle>.Index._Variant(v13, v15, v17);
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t specialized RandomNumberGenerator.next<A>(upperBound:)(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x1C3B751D0](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x1C3B751D0](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t specialized Collection.index(_:offsetBy:)(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t (*v17)(char *, _QWORD);
  char v18[32];
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;

  if (a4 < 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    v5 = a4;
    v6 = result;
    v19 = result;
    v20 = a2;
    v21 = a3 & 1;
    if (a4)
    {
      v8 = a5 & 0xC000000000000001;
      result = outlined copy of Set<A>.Index._Variant<A>(result, a2, a3 & 1);
      do
      {
        if (v8)
        {
          if ((v21 & 1) == 0)
            goto LABEL_15;
          if (__CocoaSet.Index.handleBitPattern.getter())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Set<TUConversationParticipant>.Index);
          v17 = (uint64_t (*)(char *, _QWORD))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          result = v17(v18, 0);
        }
        else
        {
          v9 = v19;
          v10 = v20;
          v11 = v21;
          v12 = specialized _NativeSet.index(after:)(v19, v20, v21, a5);
          v14 = v13;
          v16 = v15;
          result = outlined consume of Set<TUHandle>.Index._Variant(v9, v10, v11);
          v19 = v12;
          v20 = v14;
          v21 = v16 & 1;
        }
        --v5;
      }
      while (v5);
      return v19;
    }
    else
    {
      outlined copy of Set<A>.Index._Variant<A>(result, a2, a3 & 1);
    }
    return v6;
  }
  return result;
}

uint64_t outlined copy of Set<A>.Index._Variant<A>(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t specialized ClosedRange<>.index(_:offsetBy:)(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  BOOL v6;

  if ((a2 & 1) != 0)
  {
    if (!a3)
      return result;
    if (a3 < 0)
      return specialized ClosedRange<>.index(_:offsetBy:)(a5, 0, a3 + 1);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v5 = a5 - result;
  if (__OFSUB__(a5, result))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v5 < a3)
  {
    if (v5 + 1 == a3)
      return 0;
    goto LABEL_15;
  }
  v6 = __OFADD__(result, a3);
  result += a3;
  if (v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (result < a4)
LABEL_17:
    __break(1u);
  return result;
}

unint64_t CallControlsInCallContext.init(callStatus:mode:letMeInState:isAppFrontMost:)(unsigned int a1, unsigned __int8 a2)
{
  return a1 | ((unint64_t)a2 << 32);
}

unint64_t CallControlsInCallContext.mode.getter(unint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t CallControlsInCallContext.letMeInState.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t CallControlsInCallContext.isAppFrontMost.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

Swift::Bool __swiftcall CallControlsInCallContext.shouldDisplayControl()()
{
  int v0;

  return v0 != 3;
}

ValueMetadata *type metadata accessor for CallControlsContext()
{
  return &type metadata for CallControlsContext;
}

uint64_t getEnumTagSinglePayload for CallControlsContext(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CallControlsContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CallControlsInCallContext()
{
  return &type metadata for CallControlsInCallContext;
}

uint64_t LargeMultiwayControllerLayout.bannerViewConstraintManager.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t LargeMultiwayControllerLayout.localParticipantViewRegularWidth.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 88))
  {
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    LocalParticipantViewConstraintManager.regularWidth.getter();
    return swift_release();
  }
  return result;
}

uint64_t LargeMultiwayControllerLayout.__allocating_init(containingView:participantListView:participantListState:rosterCellLayoutGuide:gridView:participantGridState:controlsView:controlsState:callControlsViewController:bannerView:bannerState:bannerLayoutGuide:bannerDodgingLayoutGuide:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsView:effectsBrowserView:effectsControlsView:deviceOrientation:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:topCornerButtonsStackView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(void *a1, void *a2, char a3, void *a4, void *a5, char a6, void *a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, unsigned __int8 *a12, uint64_t a13, uint64_t a14, void *a15, unsigned __int8 a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,void *a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,void *a31,uint64_t a32,char a33)
{
  uint64_t *v34;
  int v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v34 = (uint64_t *)(a3 & 1);
  v35 = a6 & 1;
  v36 = OUTLINED_FUNCTION_15();
  LargeMultiwayControllerLayout.init(containingView:participantListView:participantListState:rosterCellLayoutGuide:gridView:participantGridState:controlsView:controlsState:callControlsViewController:bannerView:bannerState:bannerLayoutGuide:bannerDodgingLayoutGuide:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsView:effectsBrowserView:effectsControlsView:deviceOrientation:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:topCornerButtonsStackView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(a1, a2, v34, a4, a5, v35, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    v38,
    a29,
    v39,
    a31,
    v40,
    a33);
  return v36;
}

_QWORD *LargeMultiwayControllerLayout.init(containingView:participantListView:participantListState:rosterCellLayoutGuide:gridView:participantGridState:controlsView:controlsState:callControlsViewController:bannerView:bannerState:bannerLayoutGuide:bannerDodgingLayoutGuide:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsView:effectsBrowserView:effectsControlsView:deviceOrientation:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:topCornerButtonsStackView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(void *a1, id a2, uint64_t *a3, void *a4, id a5, int a6, void *a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, unsigned __int8 *a12, uint64_t a13, uint64_t a14, void *a15, unsigned __int8 a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,void *a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,void *a31,uint64_t a32,char a33)
{
  _QWORD *v33;
  double v34;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t inited;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  id v78;
  uint64_t v79;
  void (*v80)(void);
  uint64_t v81;
  void (*v82)(uint64_t);
  double v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  id v99;
  id v100;
  id v101;
  Class isa;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  Class v107;
  void *v108;
  id v109;
  int v110;
  uint64_t v111;
  id v112;
  id v113;
  id v114;
  uint64_t v115;
  id v116;
  id v117;
  id v118;
  uint64_t v119;
  id v120;
  Class v121;
  void *v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  double v129;
  uint64_t v130;
  id v131;
  id v132;
  id v133;
  uint64_t v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  uint64_t v141;
  id v142;
  id v143;
  id v144;
  Class v145;
  uint64_t v146;
  uint64_t (*v147)(id, void *, void *, uint64_t, uint64_t);
  id v148;
  void *v149;
  void *v150;
  id v151;
  id v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  id v162;
  void (*v163)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v164;
  id v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  id v180;
  id v181;
  id v182;
  char v183;
  id v184;
  id v185;
  id v186;
  id v187;
  id v188;
  char v189;
  void (*v190)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  id v199;
  id v200;
  id v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v206;
  id v207;
  id v208;
  uint64_t v209;
  id v210;
  id v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  void *v220;
  uint64_t v221;
  id v222;
  id v223;
  id v224;
  void *v225;
  uint64_t v226;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  id v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  id v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  void *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  id v322;
  void *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  id v329;
  void *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  void *v341;
  void *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  id v346;
  uint64_t v347;
  void *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  id v352;
  uint64_t v353;
  void *v354;
  __int128 v355;
  uint64_t v356;
  uint64_t v357;
  id v358;
  uint64_t v359;
  void *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  id v368;
  uint64_t v369;
  uint64_t v370;
  void *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  id v375;
  uint64_t v376;
  uint64_t v377;
  void *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  void *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  void *v407;
  void *v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  unint64_t v413;
  void *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  void *v420;
  void *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  id v427;
  id v428;
  id v429;
  id v430;
  id v431;
  char v432;
  void *v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  void *v438;
  id v439;
  id v440;
  id v441;
  id v442;
  char *v443;
  id v444;
  uint64_t v445;
  uint64_t v446;
  void *v447;
  void *v448;
  uint64_t v449;
  void *v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  char v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  unint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  _QWORD *v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  void *v469;
  id v470;
  id v471;
  id v472;
  id v473;
  id v474;
  id v475;
  _QWORD *v476;
  id v477;
  id v478;
  id v479;
  void *v480;
  void *v481;
  void **v482;
  int v483;
  unint64_t v484;
  char v485;
  char v486;
  char v487;
  __int16 v488;
  char v489;
  char v490;
  uint64_t v491;
  char v492[24];

  v458 = a8;
  HIDWORD(v391) = a6;
  v439 = a4;
  v39 = a29;
  HIDWORD(v454) = *a12;
  v33[9] = 0;
  v482 = (void **)(v33 + 9);
  v40 = MEMORY[0x1E0DEE9D8];
  v33[4] = 0;
  v33[5] = v40;
  v33[10] = 0;
  v385 = (uint64_t)(v33 + 10);
  v33[11] = 0;
  v33[2] = a1;
  v478 = a1;
  objc_msgSend(v478, sel_frame);
  v33[6] = v41;
  v33[7] = v42;
  v409 = a21;
  v33[8] = a21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6503E0;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a5;
  v474 = a5;
  *(_QWORD *)(inited + 48) = a7;
  *(_QWORD *)(inited + 56) = a15;
  v480 = a15;
  v445 = a25;
  v450 = (void *)a26;
  *(_QWORD *)(inited + 64) = a25;
  *(_QWORD *)(inited + 72) = a26;
  *(_QWORD *)(inited + 80) = a29;
  *(_QWORD *)v492 = inited;
  OUTLINED_FUNCTION_12_55();
  v44 = *(_QWORD *)v492;
  if (*(_QWORD *)(*(_QWORD *)v492 + 16) < 7uLL)
  {
    __break(1u);
LABEL_54:
    swift_once();
    goto LABEL_22;
  }
  HIDWORD(v379) = (_DWORD)a3;
  v45 = *(void **)(*(_QWORD *)v492 + 32);
  v46 = a29;
  v47 = a2;
  OUTLINED_FUNCTION_27_26((uint64_t)v47, v48, v49, v50, v51, v52, v53, v54, v228, v233, v238, v243, v248, v253, v259, v264, v269, v275, v281,
    v287,
    v292,
    v298,
    v304,
    v310,
    v317,
    v324,
    v331,
    v337,
    v343,
    v349,
    v355,
    *((uint64_t *)&v355 + 1),
    v365,
    v372,
    v379,
    v385,
    v391,
    v397,
    v403,
    a21,
    v415,
    (uint64_t)v421,
    (uint64_t)v427,
    (uint64_t)v433,
    (uint64_t)v439,
    a25,
    a26,
    v454,
    v458,
    v462,
    v466,
    (uint64_t)v470,
    a5);
  v55 = a7;
  v63 = OUTLINED_FUNCTION_26_33((uint64_t)v55, v56, v57, v58, v59, v60, v61, v62, v229, v234, v239, v244, v249, v254, v260, v265, v270, v276, v282,
          v288,
          v293,
          v299,
          v305,
          v311,
          v318,
          v325,
          v332,
          v338,
          v344,
          v350,
          v356,
          v361,
          v366,
          v373,
          v380,
          v386,
          v392,
          v398,
          v404,
          v410,
          v416,
          v422,
          (uint64_t)v428,
          v434,
          (uint64_t)v440,
          v446,
          v451,
          v455,
          v459,
          v463,
          v467,
          (uint64_t)v471,
          (uint64_t)v475,
          (uint64_t)v478,
          a15);
  OUTLINED_FUNCTION_25_37((uint64_t)v63, v64, v65, v66, v67, v68, v69, v70, v230, v235, v240, v245, v250, v255, v261, v266, v271, v277, v283,
    v289,
    v294,
    v300,
    v306,
    v312,
    v319,
    v326,
    v333,
    v339,
    v345,
    v351,
    v357,
    v362,
    v367,
    v374,
    v381,
    v387,
    v393,
    v399,
    v405,
    v411,
    v417,
    v423,
    (uint64_t)v429,
    v435,
    (uint64_t)v441,
    v447);
  v71 = v450;
  if (v45)
    objc_msgSend(v45, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v72 = *(void **)(*(_QWORD *)v492 + 40);
  if (v72)
    OUTLINED_FUNCTION_1_80(v72);
  v73 = *(void **)(*(_QWORD *)v492 + 48);
  if (v73)
    OUTLINED_FUNCTION_1_80(v73);
  v74 = *(void **)(*(_QWORD *)v492 + 56);
  if (v74)
    OUTLINED_FUNCTION_1_80(v74);
  v75 = *(void **)(*(_QWORD *)v492 + 64);
  if (v75)
    OUTLINED_FUNCTION_1_80(v75);
  v76 = *(void **)(*(_QWORD *)v492 + 72);
  if (v76)
    OUTLINED_FUNCTION_1_80(v76);
  v397 = (uint64_t)a7;
  v403 = (uint64_t)a2;
  v415 = (uint64_t)a29;
  v77 = *(void **)(*(_QWORD *)v492 + 80);
  if (v77)
    OUTLINED_FUNCTION_1_80(v77);
  OUTLINED_FUNCTION_13_3();
  v78 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  v470 = OUTLINED_FUNCTION_20_4((uint64_t)objc_msgSend(v478, sel_addLayoutGuide_, v78), sel_safeAreaLayoutGuide);
  a5 = v78;
  a3 = &static Defaults.shared;
  if (static Platform.current.getter())
  {
    v34 = static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1)
      swift_once();
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();
  }
  else
  {
    v34 = 0.0;
  }
  v433 = a23;
  v421 = a22;
  v427 = (id)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v44 = OUTLINED_FUNCTION_15();
  v355 = xmmword_1BD644E30;
  *(_OWORD *)(v44 + 16) = xmmword_1BD644E30;
  v39 = OUTLINED_FUNCTION_5_39(v44, sel_topAnchor);
  a2 = OUTLINED_FUNCTION_20_4((uint64_t)v39, sel_topAnchor);
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    goto LABEL_54;
LABEL_22:
  v79 = *a3;
  v80 = *(void (**)(void))(*(_QWORD *)*a3 + 384);
  v80();
  v81 = static Platform.current.getter();
  v82 = *(void (**)(uint64_t))(*(_QWORD *)v79 + 488);
  v82(v81);
  v83 = static Layout.MediaPip.padding.getter();
  ((void (*)(double))v80)(v83);
  v84 = static Platform.current.getter();
  v82(v84);
  v85 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, a2, 30.0);

  *(_QWORD *)(v44 + 32) = v85;
  v87 = OUTLINED_FUNCTION_5_39(v86, sel_bottomAnchor);
  v88 = OUTLINED_FUNCTION_20_4((uint64_t)v87, sel_bottomAnchor);
  v89 = OUTLINED_FUNCTION_5_71();
  OUTLINED_FUNCTION_10_20();

  *(_QWORD *)(v44 + 40) = a2;
  v91 = OUTLINED_FUNCTION_5_39(v90, sel_trailingAnchor);
  v92 = OUTLINED_FUNCTION_20_4((uint64_t)v91, sel_trailingAnchor);
  v93 = objc_msgSend(v91, sel_constraintEqualToAnchor_constant_, v92, -v34);
  OUTLINED_FUNCTION_10_20();

  *(_QWORD *)(v44 + 48) = a2;
  v95 = OUTLINED_FUNCTION_5_39(v94, sel_trailingAnchor);
  v96 = objc_msgSend(v439, sel_trailingAnchor);
  v97 = OUTLINED_FUNCTION_5_71();
  OUTLINED_FUNCTION_10_20();

  *(_QWORD *)(v44 + 56) = a2;
  v99 = OUTLINED_FUNCTION_5_39(v98, sel_bottomAnchor);
  v100 = objc_msgSend(v439, sel_bottomAnchor);
  v101 = OUTLINED_FUNCTION_5_71();
  OUTLINED_FUNCTION_10_20();

  *(_QWORD *)(v44 + 64) = a2;
  OUTLINED_FUNCTION_12_55();
  OUTLINED_FUNCTION_30_35();
  isa = OUTLINED_FUNCTION_19_43().super.isa;
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_48_1(v427, sel_activateConstraints_);

  v103 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v103 + 16) = xmmword_1BD6443F0;
  v104 = OUTLINED_FUNCTION_5_39(v103, sel_leadingAnchor);
  v105 = OUTLINED_FUNCTION_20_4((uint64_t)v104, sel_leadingAnchor);
  v106 = objc_msgSend(v104, sel_constraintEqualToAnchor_constant_, v105, v34);

  *(_QWORD *)(v103 + 32) = v106;
  *(_QWORD *)v492 = v103;
  OUTLINED_FUNCTION_12_55();
  v107 = OUTLINED_FUNCTION_19_43().super.isa;
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_48_1(v427, sel_activateConstraints_);

  v108 = *v482;
  *v482 = v421;
  v375 = v421;

  if (v433)
  {
    v109 = v433;
    v110 = static Platform.current.getter();
    v111 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v111 + 16) = xmmword_1BD6441C0;
    v112 = OUTLINED_FUNCTION_123(v111, sel_bottomAnchor);
    v113 = objc_msgSend(v470, sel_bottomAnchor);
    if (v110)
    {
      v114 = OUTLINED_FUNCTION_7_24(v112, sel_constraintEqualToAnchor_);
      OUTLINED_FUNCTION_23_43();

      *(_QWORD *)(v111 + 32) = &selRef_associatedAppBundleIdentifier;
      v116 = OUTLINED_FUNCTION_123(v115, sel_centerXAnchor);
      v117 = objc_msgSend(v478, sel_centerXAnchor);
    }
    else
    {
      v118 = objc_msgSend(v112, sel_constraintEqualToAnchor_constant_, v113, -40.0);
      OUTLINED_FUNCTION_23_43();

      *(_QWORD *)(v111 + 32) = &selRef_associatedAppBundleIdentifier;
      v116 = OUTLINED_FUNCTION_123(v119, sel_trailingAnchor);
      v117 = objc_msgSend(v470, (SEL)&selRef_setDateFormat_);
    }
    v120 = OUTLINED_FUNCTION_7_24(v116, sel_constraintEqualToAnchor_);
    OUTLINED_FUNCTION_23_43();

    *(_QWORD *)(v111 + 40) = &selRef_associatedAppBundleIdentifier;
    *(_QWORD *)v492 = v111;
    OUTLINED_FUNCTION_12_55();
    v121 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v427, sel_activateConstraints_, v121);

  }
  v122 = a9;
  v123 = a24;
  if (a24)
  {
    v124 = a24;
    v125 = objc_msgSend(v124, sel_trailingAnchor);
    v126 = objc_msgSend(v478, sel_safeAreaLayoutGuide);
    v127 = objc_msgSend(v126, sel_trailingAnchor);

    v128 = OUTLINED_FUNCTION_7_24(v125, sel_constraintEqualToAnchor_);
    OUTLINED_FUNCTION_10_20();

    type metadata accessor for UILayoutPriority(0);
    v483 = 1144750080;
    LODWORD(v491) = 1065353216;
    lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    LODWORD(v129) = *(_DWORD *)v492;
    objc_msgSend(v126, sel_setPriority_, v129);
    v130 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v130 + 16) = v355;
    v131 = OUTLINED_FUNCTION_123(v130, sel_centerYAnchor);
    v132 = objc_msgSend(v478, sel_centerYAnchor);
    v133 = OUTLINED_FUNCTION_7_24(v131, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6);
    OUTLINED_FUNCTION_6_14();

    *(_QWORD *)(v130 + 32) = v478;
    v135 = OUTLINED_FUNCTION_123(v134, sel_trailingAnchor);
    v136 = objc_msgSend(v474, sel_trailingAnchor);
    static Layout.MediaPip.padding.getter();
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();
    v137 = objc_msgSend(v135, sel_constraintLessThanOrEqualToAnchor_constant_, v136, -20.0);

    *(_QWORD *)(v130 + 40) = v137;
    *(_QWORD *)(v130 + 48) = v126;
    v138 = v126;
    v139 = OUTLINED_FUNCTION_123((uint64_t)v138, sel_widthAnchor);
    static Layout.MediaPip.padding.getter();
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();
    v140 = objc_msgSend(v139, sel_constraintEqualToConstant_, 50.0);

    *(_QWORD *)(v130 + 56) = v140;
    v142 = OUTLINED_FUNCTION_123(v141, sel_heightAnchor);
    v143 = OUTLINED_FUNCTION_123((uint64_t)v142, sel_widthAnchor);
    v144 = OUTLINED_FUNCTION_7_24(v142, sel_constraintEqualToAnchor_);
    OUTLINED_FUNCTION_6_14();

    *(_QWORD *)(v130 + 64) = v136;
    *(_QWORD *)v492 = v130;
    OUTLINED_FUNCTION_12_55();
    v145 = Array._bridgeToObjectiveC()().super.isa;
    v122 = a9;
    swift_bridgeObjectRelease();
    objc_msgSend(v427, sel_activateConstraints_, v145);

    v123 = a24;
  }
  if (v122)
  {
    v146 = OUTLINED_FUNCTION_15_6();
    v147 = *(uint64_t (**)(id, void *, void *, uint64_t, uint64_t))(a10 + 120);
    v148 = v122;
    v149 = (void *)v147(v478, v123, v480, v146, a10);

  }
  else
  {
    v149 = 0;
  }
  LODWORD(v427) = a16;
  v313 = type metadata accessor for GridViewConstraintManager();
  OUTLINED_FUNCTION_15();
  v150 = v450;
  v368 = v450;
  v151 = v439;
  v152 = v478;
  v153 = a5;
  v161 = OUTLINED_FUNCTION_27_26((uint64_t)v153, v154, v155, v156, v157, v158, v159, v160, v228, v233, v238, v243, v248, v253, v259, v264, v269, v275, v281,
           v287,
           v292,
           a14,
           v304,
           v313,
           a27,
           a11,
           v331,
           a13,
           v343,
           v349,
           v355,
           *((uint64_t *)&v355 + 1),
           (uint64_t)v368,
           (uint64_t)v375,
           v379,
           v385,
           v391,
           v397,
           v403,
           v409,
           v415,
           a10,
           (uint64_t)v427,
           (uint64_t)v433,
           (uint64_t)v439,
           v445,
           (uint64_t)v450,
           v454,
           v458,
           v462,
           (uint64_t)a24,
           (uint64_t)v470,
           v474);
  v358 = v448;
  v476 = GridViewConstraintManager.init(containingGuide:containingView:gridView:rosterCellLayoutGuide:changeLayoutButton:topCornerButtonsStackView:captionsState:)(v153, v152, v161, v151, v448, v150);
  if (v149)
    v162 = v149;
  else
    v162 = v153;
  v492[0] = BYTE4(v456);
  v284 = type metadata accessor for LocalParticipantViewConstraintManager();
  v163 = (void (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))OUTLINED_FUNCTION_15();
  v352 = a20;
  v346 = v149;
  v164 = v152;
  v165 = v161;
  v166 = v400;
  v174 = (char *)OUTLINED_FUNCTION_26_33((uint64_t)v166, v167, v168, v169, v170, v171, v172, v173, v231, v236, v241, v246, v251, v256, v262, v267, v272, v278, v284,
                   v290,
                   v295,
                   v301,
                   v307,
                   v314,
                   v320,
                   v327,
                   v334,
                   v340,
                   (uint64_t)v346,
                   (uint64_t)v352,
                   (uint64_t)v358,
                   v363,
                   v369,
                   v376,
                   v382,
                   v388,
                   v394,
                   (uint64_t)v400,
                   v406,
                   v412,
                   v418,
                   v424,
                   (uint64_t)v430,
                   v436,
                   (uint64_t)v442,
                   (uint64_t)v448,
                   v452,
                   v456,
                   v460,
                   v464,
                   v468,
                   (uint64_t)v472,
                   (uint64_t)v476,
                   a18,
                   v480);
  v175 = v151;
  v443 = v174;
  v176 = LocalParticipantViewConstraintManager.init(containingGuide:rosterCellLayoutGuide:containingView:localPIPView:controlsView:effectsControlsView:localState:bannerState:controlsState:gridView:aspectRatio:deviceOrientation:)(v162, v175, v164, v174, v166, a20, v431, (unsigned __int8 *)v492, v461, v165, a17, v413);
  v465[11] = v176;
  swift_retain();
  swift_release();
  if (a9)
  {
    v177 = OUTLINED_FUNCTION_15_6();
    v163 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v425 + 104);
    v178 = a9;
    v179 = swift_retain();
    v163(v179, &protocol witness table for LocalParticipantViewConstraintManager, v177, v425);

  }
  v335 = v176;
  v257 = type metadata accessor for InCallControlsViewConstraintManager();
  OUTLINED_FUNCTION_15();
  v180 = v164;
  v181 = OUTLINED_FUNCTION_18_48();
  v182 = v166;
  v401 = InCallControlsViewConstraintManager.init(containingGuide:containingView:controlsView:type:)(v181, v163, v182, 1, 2);
  v183 = static Platform.current.getter();
  v279 = type metadata accessor for ParticipantListViewConstraintManager();
  OUTLINED_FUNCTION_15();
  v184 = v181;
  v185 = v407;
  v186 = v182;
  v187 = v175;
  v188 = v341;
  if (v183)
    v189 = 1;
  else
    v189 = 2;
  v453 = ParticipantListViewConstraintManager.init(containingGuide:rosterView:controlsView:type:bannerLayoutGuide:rosterCellLayoutGuide:)(v184, v185, v186, v189, v188, v187);
  v273 = type metadata accessor for CaptionsViewConstraintManager();
  OUTLINED_FUNCTION_15();
  v190 = v163;
  v191 = OUTLINED_FUNCTION_18_48();
  v199 = OUTLINED_FUNCTION_25_37((uint64_t)v191, v192, v193, v194, v195, v196, v197, v198, v232, v237, v242, v247, v252, v257, v263, v268, v273, v279, v285,
           v291,
           v296,
           v302,
           v308,
           v315,
           v321,
           v328,
           v335,
           (uint64_t)v185,
           v347,
           v353,
           v359,
           v364,
           v370,
           v377,
           v383,
           v389,
           v395,
           v401,
           (uint64_t)v407,
           (uint64_t)v186,
           v419,
           v425,
           (uint64_t)v431,
           v437,
           (uint64_t)v443,
           v165);
  v200 = v187;
  v201 = v322;
  v202 = v329;
  v309 = v200;
  v323 = v199;
  v330 = v201;
  CaptionsViewConstraintManager.init(containingGuide:rosterCellLayoutGuide:containingView:captionsView:bannerView:gridView:)(v191, v200, v163, v201, v202, v199);
  v449 = v203;
  v492[0] = 0;
  v204 = type metadata accessor for InCallBannerViewConstraintManager();
  OUTLINED_FUNCTION_15();
  v205 = v163;
  v206 = OUTLINED_FUNCTION_18_48();
  v207 = v188;
  v208 = v202;
  v408 = v163;
  v297 = v303;
  v209 = InCallBannerViewConstraintManager.init(layoutIdiom:containingGuide:containingView:visibleGuide:bannerView:bannerDodgingGuide:)(v492, v206, v163, v207, v208, v297);
  OUTLINED_FUNCTION_13_15();
  *v390 = v209;
  swift_release();
  if (v479 && a19)
  {
    v210 = v444;
    v211 = v479;
    v212 = a19;
    specialized static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(v408, 0, v414, v481, v211, v212);
    OUTLINED_FUNCTION_6_14();

    v465[4] = v188;
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ViewConstraintManager>);
  v213 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v213 + 16) = xmmword_1BD645380;
  *(_QWORD *)(v213 + 56) = v316;
  *(_QWORD *)(v213 + 64) = &protocol witness table for GridViewConstraintManager;
  *(_QWORD *)(v213 + 32) = v477;
  *(_QWORD *)(v213 + 96) = v286;
  *(_QWORD *)(v213 + 104) = &protocol witness table for LocalParticipantViewConstraintManager;
  *(_QWORD *)(v213 + 72) = v336;
  v491 = v213;
  if (a9)
  {
    v214 = OUTLINED_FUNCTION_6_59();
    *(_OWORD *)(v214 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v214 + 56) = OUTLINED_FUNCTION_15_6();
    *(_QWORD *)(v214 + 64) = *(_QWORD *)(v426 + 8);
    *(_QWORD *)(v214 + 32) = a9;
    v215 = a9;
  }
  else
  {
    v216 = OUTLINED_FUNCTION_6_59();
    *(_OWORD *)(v216 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v216 + 56) = v258;
    *(_QWORD *)(v216 + 64) = &protocol witness table for InCallControlsViewConstraintManager;
    *(_QWORD *)(v216 + 32) = v402;
    swift_retain();
  }
  swift_retain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  specialized Array.append<A>(contentsOf:)();
  v217 = *v390;
  if (*v390)
  {
    v218 = OUTLINED_FUNCTION_6_59();
    *(_OWORD *)(v218 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v218 + 56) = v204;
    *(_QWORD *)(v218 + 64) = &protocol witness table for InCallBannerViewConstraintManager;
    *(_QWORD *)(v218 + 32) = v217;
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    OUTLINED_FUNCTION_24_39();
  }
  v219 = OUTLINED_FUNCTION_6_59();
  *(_OWORD *)(v219 + 16) = xmmword_1BD645380;
  *(_QWORD *)(v219 + 56) = v280;
  *(_QWORD *)(v219 + 64) = &protocol witness table for ParticipantListViewConstraintManager;
  *(_QWORD *)(v219 + 32) = v453;
  *(_QWORD *)(v219 + 96) = v274;
  *(_QWORD *)(v219 + 104) = &protocol witness table for CaptionsViewConstraintManager;
  *(_QWORD *)(v219 + 72) = v449;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_24_39();
  v220 = v420;
  if (v420)
  {
    type metadata accessor for ReactionsViewConstraintManager();
    OUTLINED_FUNCTION_15();
    ReactionsViewConstraintManager.init(localParticipantView:reactionsView:)(v444, v420);
    v221 = OUTLINED_FUNCTION_6_59();
    *(_OWORD *)(v221 + 16) = xmmword_1BD6441D0;
    OUTLINED_FUNCTION_15_55((_QWORD *)v221, (uint64_t)&protocol witness table for ReactionsViewConstraintManager);
  }
  if (a31)
  {
    type metadata accessor for ReactionPickerTipViewConstraintManager();
    OUTLINED_FUNCTION_15();
    v222 = v206;
    v223 = v444;
    v224 = a31;
    v225 = v223;
    v220 = v420;
    ReactionPickerTipViewConstraintManager.init(containingGuide:localParticipantView:reactionPickerTipView:)(v222, v225, v224);
    v226 = OUTLINED_FUNCTION_6_59();
    *(_OWORD *)(v226 + 16) = xmmword_1BD6441D0;
    OUTLINED_FUNCTION_15_55((_QWORD *)v226, (uint64_t)&protocol witness table for ReactionPickerTipViewConstraintManager);
  }
  v465[3] = v491;
  LOBYTE(v483) = v384 & 1;
  v484 = v461;
  v485 = v457;
  v486 = v432;
  v487 = v396 & 1;
  v488 = 0;
  v489 = 0;
  v490 = a33 & 1;
  LargeMultiwayControllerLayout.updateLayoutWith(_:)((uint64_t)&v483);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v465;
}

uint64_t specialized static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(void *a1, char a2, void *a3, void *a4, void *a5, void *a6)
{
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  Class isa;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  char v41;
  char v44;
  uint64_t v45;

  v41 = a2 & 1;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  objc_msgSend(a1, sel_addLayoutGuide_, v8);
  v9 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v10 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v10 + 16) = xmmword_1BD644140;
  v11 = OUTLINED_FUNCTION_6_7(v10, sel_topAnchor);
  v12 = OUTLINED_FUNCTION_20_4((uint64_t)v11, sel_safeAreaLayoutGuide);
  v13 = objc_msgSend(v12, sel_topAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  OUTLINED_FUNCTION_21_1();

  *(_QWORD *)(v10 + 32) = v12;
  v16 = OUTLINED_FUNCTION_6_7(v15, sel_bottomAnchor);
  v17 = objc_msgSend(OUTLINED_FUNCTION_20_4((uint64_t)v16, sel_safeAreaLayoutGuide), sel_bottomAnchor);
  OUTLINED_FUNCTION_21_1();
  v18 = OUTLINED_FUNCTION_17_47();

  *(_QWORD *)(v10 + 40) = v18;
  v20 = OUTLINED_FUNCTION_6_7(v19, sel_leadingAnchor);
  v21 = objc_msgSend(OUTLINED_FUNCTION_20_4((uint64_t)v20, sel_safeAreaLayoutGuide), sel_leadingAnchor);
  OUTLINED_FUNCTION_21_1();
  v22 = OUTLINED_FUNCTION_17_47();

  *(_QWORD *)(v10 + 48) = v22;
  v24 = OUTLINED_FUNCTION_6_7(v23, sel_trailingAnchor);
  v25 = OUTLINED_FUNCTION_20_4((uint64_t)v24, sel_safeAreaLayoutGuide);
  v26 = objc_msgSend(v25, sel_trailingAnchor);

  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  *(_QWORD *)(v10 + 56) = v27;
  v45 = v10;
  specialized Array._endMutation()();
  OUTLINED_FUNCTION_30_35();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_activateConstraints_, isa);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ViewConstraintManager>);
  v29 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v29 + 16) = xmmword_1BD645380;
  v30 = type metadata accessor for EffectsViewConstraintManager();
  OUTLINED_FUNCTION_15();
  v31 = a4;
  v32 = a5;
  v33 = v8;
  v34 = EffectsViewConstraintManager.init(containingGuide:localParticipantView:effectsView:)(v33, a4, v32);
  *(_QWORD *)(v29 + 56) = v30;
  *(_QWORD *)(v29 + 64) = &protocol witness table for EffectsViewConstraintManager;
  *(_QWORD *)(v29 + 32) = v34;
  v44 = v41;
  v35 = type metadata accessor for EffectsBrowserViewConstraintManager();
  OUTLINED_FUNCTION_15();
  v36 = v33;
  v37 = v31;
  v38 = EffectsBrowserViewConstraintManager.init(layoutIdiom:containingGuide:effectsBrowserView:controlsView:localParticipantView:)(&v44, (uint64_t)v36, a6, a3, a4);
  *(_QWORD *)(v29 + 96) = v35;
  *(_QWORD *)(v29 + 104) = &protocol witness table for EffectsBrowserViewConstraintManager;
  *(_QWORD *)(v29 + 72) = v38;

  return v29;
}

void LargeMultiwayControllerLayout.updateLayoutWith(_:)(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  void *v7;
  Class isa;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  Class v19;
  uint64_t v20;
  int v21;
  int v22;

  v2 = *(_BYTE *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 18);
  v20 = *(unsigned __int8 *)(a1 + 19);
  v5 = *(unsigned __int8 *)(a1 + 20);
  v21 = *(unsigned __int8 *)(a1 + 21);
  v22 = *(unsigned __int8 *)(a1 + 22);
  v6 = *(unsigned __int16 *)(a1 + 16);
  v7 = (void *)objc_opt_self();
  OUTLINED_FUNCTION_13_15();
  OUTLINED_FUNCTION_30_35();
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_deactivateConstraints_, isa);

  v9 = 0x10000;
  if (!v4)
    v9 = 0;
  v10 = v6 | v9 | (v20 << 24);
  v11 = 0x100000000;
  if (!v5)
    v11 = 0;
  v12 = 0x10000000000;
  if (!v21)
    v12 = 0;
  v13 = 0x1000000000000;
  if (!v22)
    v13 = 0;
  v14 = v10 | v11 | v12 | v13;
  *(_QWORD *)(v1 + 40) = specialized static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(*(_QWORD *)(v1 + 24), v2, v3, v14, *(_QWORD *)(v1 + 64), *(double *)(v1 + 48), *(double *)(v1 + 56));
  swift_bridgeObjectRelease();
  v15 = *(double *)(v1 + 48);
  v16 = *(double *)(v1 + 56);
  v17 = *(_QWORD *)(v1 + 64);
  v18 = swift_bridgeObjectRetain();
  specialized static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(v18, v2, v3, v14, v17, v15, v16);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  specialized Array.append<A>(contentsOf:)();
  swift_endAccess();
  OUTLINED_FUNCTION_124();
  v19 = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_48_1(v7, sel_activateConstraints_);

}

uint64_t specialized static ViewControllerLayout.constraints(with:layoutState:size:deviceOrientation:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  _BYTE v25[8];
  uint64_t v26;
  __int16 v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (a1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
    {
      v22 = a2 & 1;
      v36 = MEMORY[0x1E0DEE9D8];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v12 = a1 + 32;
      v13 = v36;
      do
      {
        outlined init with copy of IDSLookupManager(v12, (uint64_t)v33);
        v14 = v34;
        v15 = v35;
        __swift_project_boxed_opaque_existential_1(v33, v34);
        v25[0] = v22;
        v26 = a3;
        v27 = a4;
        v28 = BYTE2(a4) & 1;
        v29 = BYTE3(a4);
        v30 = BYTE4(a4) & 1;
        v31 = BYTE5(a4) & 1;
        v32 = BYTE6(a4) & 1;
        v16 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t, double, double))(v15 + 8))(v25, a5, v14, v15, a6, a7);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v13 = v36;
        }
        v17 = *(_QWORD *)(v13 + 16);
        v18 = v17 + 1;
        if (v17 >= *(_QWORD *)(v13 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v13 = v36;
        }
        *(_QWORD *)(v13 + 16) = v18;
        *(_QWORD *)(v13 + 8 * v17 + 32) = v16;
        v12 += 40;
        --v8;
      }
      while (v8);
    }
    else
    {
      v18 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v19 = MEMORY[0x1E0DEE9D8];
      if (!v18)
      {
LABEL_15:
        OUTLINED_FUNCTION_13_3();
        return v19;
      }
    }
    OUTLINED_FUNCTION_124();
    v20 = 0;
    v19 = MEMORY[0x1E0DEE9D8];
    do
    {
      ++v20;
      v33[0] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      swift_bridgeObjectRelease();
      v19 = v33[0];
    }
    while (v18 != v20);
    OUTLINED_FUNCTION_13_3();
    goto LABEL_15;
  }
  return MEMORY[0x1E0DEE9D8];
}

Swift::Void __swiftcall LargeMultiwayControllerLayout.addEffectsConstraints(with:controlsView:localParticipantView:effectsView:effectsBrowserView:)(UIView *with, UIView *controlsView, UIView_optional *localParticipantView, UIView *effectsView, UIView *effectsBrowserView)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = specialized static ViewControllerLayout.effectsConstraintManagers(with:layoutIdiom:controlsView:localParticipantView:effectsView:effectsBrowserView:)(with, 0, controlsView, localParticipantView, effectsView, effectsBrowserView);
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall LargeMultiwayControllerLayout.removeEffectsConstraints()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 0;
  swift_bridgeObjectRelease();
}

void LargeMultiwayControllerLayout.update(for:with:deviceOrientation:)(char *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  _BYTE v15[8];
  uint64_t v16;
  __int16 v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v7 = *a1;
  v8 = *((_QWORD *)a1 + 1);
  v9 = *((_WORD *)a1 + 8);
  v10 = a1[18];
  v11 = a1[19];
  v12 = a1[20];
  v13 = a1[21];
  v14 = a1[22];
  *(double *)(v6 + 48) = a5;
  *(double *)(v6 + 56) = a6;
  *(_QWORD *)(v6 + 64) = a2;
  v15[0] = v7;
  v16 = v8;
  v17 = v9;
  v18 = v10;
  v19 = v11;
  v20 = v12;
  v21 = v13;
  v22 = v14;
  LargeMultiwayControllerLayout.updateLayoutWith(_:)((uint64_t)v15);
}

uint64_t LargeMultiwayControllerLayout.update(localParticipantAspectRatio:layoutState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  char v17[8];
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  result = *(_QWORD *)(v2 + 24);
  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    v15 = *(_QWORD *)(a2 + 8);
    v13 = *(_BYTE *)(a2 + 17);
    v14 = *(_BYTE *)(a2 + 16);
    v12 = *(_BYTE *)(a2 + 19);
    v5 = *(_BYTE *)(a2 + 22);
    v6 = *(_BYTE *)(a2 + 21);
    v7 = *(_BYTE *)(a2 + 20);
    v8 = *(_BYTE *)(a2 + 18);
    v9 = result + 32;
    v10 = *(_BYTE *)a2;
    swift_bridgeObjectRetain();
    do
    {
      outlined init with copy of IDSLookupManager(v9, (uint64_t)v17);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ViewConstraintManager);
      type metadata accessor for LocalParticipantViewConstraintManager();
      if ((OUTLINED_FUNCTION_29_33() & 1) != 0)
      {
        v11 = *(_QWORD *)(v2 + 64);
        v17[0] = v10;
        v18 = v15;
        v19 = v14;
        v20 = v13;
        v21 = v8;
        v22 = v12;
        v23 = v7;
        v24 = v6;
        v25 = v5;
        LocalParticipantViewConstraintManager.update(aspectRatio:deviceOrientation:layoutState:)(a1, v11, v17);
        swift_release();
      }
      v9 += 40;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall LargeMultiwayControllerLayout.update(remoteParticipantAspectRatio:)(CGSize remoteParticipantAspectRatio)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double height;
  double width;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9[2];
  uint64_t v10;
  _BYTE v11[40];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    height = remoteParticipantAspectRatio.height;
    width = remoteParticipantAspectRatio.width;
    v6 = v2 + 32;
    OUTLINED_FUNCTION_124();
    do
    {
      outlined init with copy of IDSLookupManager(v6, (uint64_t)v11);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ViewConstraintManager);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionsViewConstraintManagerProtocol);
      if ((OUTLINED_FUNCTION_29_33() & 1) != 0)
      {
        outlined init with take of Notice(v9, (uint64_t)v12);
        v7 = v13;
        v8 = v14;
        __swift_project_boxed_opaque_existential_1(v12, v13);
        (*(void (**)(uint64_t, uint64_t, double, double))(v8 + 24))(v7, v8, width, height);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      }
      else
      {
        v10 = 0;
        memset(v9, 0, sizeof(v9));
        outlined destroy of CaptionsViewConstraintManagerProtocol?((uint64_t)v9);
      }
      v6 += 40;
      --v3;
    }
    while (v3);
    OUTLINED_FUNCTION_13_3();
  }
}

Swift::Void __swiftcall LargeMultiwayControllerLayout.update(isDisplayedInBanner:containingView:)(Swift::Bool isDisplayedInBanner, UIView *containingView)
{
  uint64_t v2;
  void *v3;
  char v6;
  id v7;

  v3 = *(void **)(v2 + 72);
  if (v3)
  {
    v7 = v3;
    v6 = static Platform.current.getter() == 0;
    objc_msgSend(v7, sel_setFrame_, specialized static ViewControllerLayout.participantLabelsViewFrame(isDisplayedInBanner:isDisplayedInAmbient:containingView:participantLabelsView:)(isDisplayedInBanner, v6, (uint64_t)containingView, v7));

  }
}

double specialized static ViewControllerLayout.participantLabelsViewFrame(isDisplayedInBanner:isDisplayedInAmbient:containingView:participantLabelsView:)(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  char v6;
  double v7;
  double v8;
  id v9;
  id v10;
  double v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  id v17;
  uint64_t v18;

  v6 = a1;
  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_123(a1, sel_bounds);
    v8 = v7;
  }
  else
  {
    if ((a2 & 1) != 0)
      v9 = OUTLINED_FUNCTION_123(a1, sel_safeAreaLayoutGuide);
    else
      v9 = OUTLINED_FUNCTION_123(a1, sel_readableContentGuide);
    v10 = v9;
    objc_msgSend(v10, sel_layoutFrame);
    v8 = v11;

  }
  v12 = objc_msgSend(a4, sel_systemLayoutSizeFittingSize_, v8, 1.79769313e308);
  if ((a2 & 1) != 0)
  {
    v13 = OUTLINED_FUNCTION_123((uint64_t)v12, sel_safeAreaInsets);
    v15 = v14;
    if ((v6 & 1) == 0)
      return v15;
  }
  else
  {
    v13 = OUTLINED_FUNCTION_123((uint64_t)v12, sel_bounds);
    v15 = floor((v16 - v8) * 0.5);
    if ((v6 & 1) == 0)
    {
      v17 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      objc_msgSend(v17, sel_bounds);

      OUTLINED_FUNCTION_123(v18, sel_safeAreaInsets);
      return v15;
    }
  }
  OUTLINED_FUNCTION_123((uint64_t)v13, sel_bounds);
  return v15;
}

Swift::Void __swiftcall LargeMultiwayControllerLayout.update(localParticipantCorner:)(ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional localParticipantCorner)
{
  uint64_t v1;
  ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional *v2;

  v2 = *(ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional **)(v1 + 88);
  if (v2)
  {
    OUTLINED_FUNCTION_13_15();
    v2[289].value = localParticipantCorner.value;
  }
}

uint64_t LargeMultiwayControllerLayout.handlesLocalParticipantConstraints.getter()
{
  return 1;
}

uint64_t LargeMultiwayControllerLayout.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v0;
}

uint64_t LargeMultiwayControllerLayout.__deallocating_deinit()
{
  LargeMultiwayControllerLayout.deinit();
  return swift_deallocClassInstance();
}

void protocol witness for ViewControllerLayout.update(for:with:deviceOrientation:) in conformance LargeMultiwayControllerLayout(char *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  LargeMultiwayControllerLayout.update(for:with:deviceOrientation:)(a1, a2, a3, a4, a5, a6);
}

uint64_t protocol witness for ViewControllerLayout.update(localParticipantAspectRatio:layoutState:) in conformance LargeMultiwayControllerLayout(uint64_t a1, uint64_t a2)
{
  return LargeMultiwayControllerLayout.update(localParticipantAspectRatio:layoutState:)(a1, a2);
}

void protocol witness for ViewControllerLayout.update(remoteParticipantAspectRatio:) in conformance LargeMultiwayControllerLayout(double a1, double a2)
{
  LargeMultiwayControllerLayout.update(remoteParticipantAspectRatio:)((CGSize)__PAIR128__(*(unint64_t *)&a2, *(unint64_t *)&a1));
}

void protocol witness for ViewControllerLayout.update(isDisplayedInBanner:containingView:) in conformance LargeMultiwayControllerLayout(Swift::Bool a1, UIView *a2)
{
  LargeMultiwayControllerLayout.update(isDisplayedInBanner:containingView:)(a1, a2);
}

void protocol witness for ViewControllerLayout.update(localParticipantCorner:) in conformance LargeMultiwayControllerLayout(ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional a1)
{
  LargeMultiwayControllerLayout.update(localParticipantCorner:)(a1);
}

void protocol witness for ViewControllerLayout.addEffectsConstraints(with:controlsView:localParticipantView:effectsView:effectsBrowserView:) in conformance LargeMultiwayControllerLayout(UIView *a1, UIView *a2, UIView_optional *a3, UIView *a4, UIView *a5)
{
  LargeMultiwayControllerLayout.addEffectsConstraints(with:controlsView:localParticipantView:effectsView:effectsBrowserView:)(a1, a2, a3, a4, a5);
}

void protocol witness for ViewControllerLayout.updateLayoutWith(_:) in conformance LargeMultiwayControllerLayout(uint64_t a1)
{
  LargeMultiwayControllerLayout.updateLayoutWith(_:)(a1);
}

void protocol witness for ViewControllerLayout.removeEffectsConstraints() in conformance LargeMultiwayControllerLayout()
{
  LargeMultiwayControllerLayout.removeEffectsConstraints()();
}

uint64_t protocol witness for ViewControllerLayout.bannerViewConstraintManager.getter in conformance LargeMultiwayControllerLayout()
{
  return LargeMultiwayControllerLayout.bannerViewConstraintManager.getter();
}

uint64_t protocol witness for ViewControllerLayout.localParticipantViewRegularWidth.getter in conformance LargeMultiwayControllerLayout()
{
  return LargeMultiwayControllerLayout.localParticipantViewRegularWidth.getter();
}

uint64_t outlined destroy of CaptionsViewConstraintManagerProtocol?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionsViewConstraintManagerProtocol?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for LargeMultiwayControllerLayout()
{
  return objc_opt_self();
}

uint64_t method lookup function for LargeMultiwayControllerLayout()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LargeMultiwayControllerLayout.__allocating_init(containingView:participantListView:participantListState:rosterCellLayoutGuide:gridView:participantGridState:controlsView:controlsState:callControlsViewController:bannerView:bannerState:bannerLayoutGuide:bannerDodgingLayoutGuide:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsView:effectsBrowserView:effectsControlsView:deviceOrientation:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:topCornerButtonsStackView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(v6 + 152))(a1, a2, a3 & 1, a4, a5, a6 & 1);
}

id PushToTalkLeavePillButton.__allocating_init(viewModel:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_1();
  return PushToTalkLeavePillButton.init(viewModel:)(v0);
}

id PushToTalkLeavePillButton.init(viewModel:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  id v14;
  void (*v15)(void);
  id v16;
  char v19[24];
  ValueMetadata *v20;
  _UNKNOWN **v21;
  Swift::String v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<PushToTalkViewModel.TalkButtonState>.Publisher);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit25PushToTalkLeavePillButton_cancellables) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit25PushToTalkLeavePillButton_viewModel) = a1;
  v7 = (void *)objc_opt_self();
  swift_retain();
  v8 = objc_msgSend(v7, sel_conversationKit);
  v22._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0x657661654CLL;
  v9._object = (void *)0xE500000000000000;
  v10.value._countAndFlagsBits = 0x61737265766E6F43;
  v10.value._object = (void *)0xEF74694B6E6F6974;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v22);

  v20 = &type metadata for SymbolImageDescribers.ConversationControls;
  v21 = &protocol witness table for SymbolImageDescribers.ConversationControls;
  v19[0] = 14;
  if (one-time initialization token for pttLeaveButtonBanner != -1)
    swift_once();
  v13 = static Colors.InCallControls.pttLeaveButtonBanner;
  swift_bridgeObjectRetain();
  v14 = PillButton.init(title:symbol:stateConfiguration:context:)(v12._countAndFlagsBits, (uint64_t)v12._object, (uint64_t)v19, v13, 1);
  v15 = *(void (**)(void))(*(_QWORD *)a1 + 136);
  v16 = v14;
  v15();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type Published<PushToTalkViewModel.TalkButtonState>.Publisher and conformance Published<A>.Publisher();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  swift_release();
  return v16;
}

uint64_t sub_1BD1DC34C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void closure #1 in PushToTalkLeavePillButton.init(viewModel:)(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = a2 + 16;
  if ((*a1 & 0xFE) == 2)
  {
    swift_beginAccess();
    v3 = (void *)MEMORY[0x1C3B752C0](v2);
    if (!v3)
      goto LABEL_7;
    v4 = v3;
    objc_msgSend(v3, sel_setEnabled_, 1);
  }
  else
  {
    swift_beginAccess();
    v5 = (void *)MEMORY[0x1C3B752C0](v2);
    if (!v5)
      goto LABEL_7;
    v4 = v5;
    objc_msgSend(v5, sel_setEnabled_, 0);
  }

LABEL_7:
  swift_beginAccess();
  v6 = (void *)MEMORY[0x1C3B752C0](v2);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_setNeedsUpdateConfiguration);

  }
}

void partial apply for closure #1 in PushToTalkLeavePillButton.init(viewModel:)(_BYTE *a1)
{
  uint64_t v1;

  closure #1 in PushToTalkLeavePillButton.init(viewModel:)(a1, v1);
}

id PushToTalkLeavePillButton.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void PushToTalkLeavePillButton.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit25PushToTalkLeavePillButton_cancellables] = MEMORY[0x1E0DEE9E8];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void PushToTalkLeavePillButton.__allocating_init(title:symbol:stateConfiguration:context:)()
{
  OUTLINED_FUNCTION_0_89();
  __break(1u);
}

void PushToTalkLeavePillButton.init(title:symbol:stateConfiguration:context:)()
{
  OUTLINED_FUNCTION_0_89();
  __break(1u);
}

uint64_t PushToTalkLeavePillButton.__ivar_destroyer()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

id PushToTalkLeavePillButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushToTalkLeavePillButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PushToTalkLeavePillButton()
{
  return objc_opt_self();
}

uint64_t method lookup function for PushToTalkLeavePillButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushToTalkLeavePillButton.__allocating_init(viewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t CaptionsViewDragController.dragEnabled.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t key path getter for CaptionsViewDragController.dragEnabled : CaptionsViewDragController@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

void CaptionsViewDragController.dragEnabled.setter(char a1)
{
  uint64_t v1;
  char v3;

  OUTLINED_FUNCTION_2_0();
  v3 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = a1;
  CaptionsViewDragController.dragEnabled.didset(v3);
  OUTLINED_FUNCTION_32();
}

id CaptionsViewDragController.dragEnabled.didset(char a1)
{
  uint64_t v1;
  int v2;
  id result;

  v2 = a1 & 1;
  result = (id)swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 16) != v2)
    return objc_msgSend(*(id *)(v1 + 72), sel_setEnabled_);
  return result;
}

void CaptionsViewDragController.dragEnabled.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  OUTLINED_FUNCTION_2_0();
  *((_BYTE *)v3 + 32) = *(_BYTE *)(v1 + 16);
  OUTLINED_FUNCTION_18();
}

void CaptionsViewDragController.dragEnabled.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  CaptionsViewDragController.dragEnabled.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

uint64_t key path getter for CaptionsViewDragController.delegate : CaptionsViewDragController@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 24;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v4);
  v6 = *(_QWORD *)(v3 + 32);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t key path setter for CaptionsViewDragController.delegate : CaptionsViewDragController(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 32) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t CaptionsViewDragController.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v0 + 24);
}

uint64_t CaptionsViewDragController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_13_56();
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return OUTLINED_FUNCTION_113();
}

void CaptionsViewDragController.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_2_0();
  v4 = MEMORY[0x1C3B752C0](v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v3[3] = v4;
  v3[4] = v5;
  OUTLINED_FUNCTION_18();
}

void CaptionsViewDragController.delegate.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 32) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t CaptionsViewDragController.isDragging.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 64);
}

void CaptionsViewDragController.isDragging.setter(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 64) = a1;
  OUTLINED_FUNCTION_32();
}

uint64_t (*CaptionsViewDragController.isDragging.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t CaptionsViewDragController.__allocating_init(captionsView:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  CaptionsViewDragController.init(captionsView:)(a1);
  return v2;
}

uint64_t CaptionsViewDragController.init(captionsView:)(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;

  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_BYTE *)(v1 + 64) = 0;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AA0]), sel_init);
  *(_QWORD *)(v1 + 72) = v3;
  swift_unknownObjectWeakAssign();
  objc_msgSend(v3, sel_addTarget_action_, v1, sel_handlePanGestureRecognizer_);
  objc_msgSend(v3, sel_setEnabled_, 0);
  v4 = v3;
  objc_msgSend(a1, sel_addGestureRecognizer_, v4);

  return v1;
}

Swift::Void __swiftcall CaptionsViewDragController.handlePanGestureRecognizer(_:)(UIPanGestureRecognizer *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  double v14;
  unint64_t v15;
  id v16;

  switch((unint64_t)-[UIPanGestureRecognizer state](a1, sel_state))
  {
    case 0uLL:
      return;
    case 1uLL:
      OUTLINED_FUNCTION_5_72();
    case 2uLL:
      v11 = (void *)MEMORY[0x1C3B752C0](v1 + 40);
      if (v11)
      {
        v12 = v11;
        v13 = objc_msgSend(v11, sel_superview);

      }
      else
      {
        v13 = 0;
      }
      -[UIPanGestureRecognizer locationInView:](a1, sel_locationInView_, v13);

      v14 = OUTLINED_FUNCTION_7_73();
      CaptionsViewDragController.handleDragDidMove(to:)((CGPoint)__PAIR128__(v15, *(unint64_t *)&v14));
      return;
    case 3uLL:
    case 4uLL:
    case 5uLL:
      v3 = (void *)MEMORY[0x1C3B752C0](v1 + 40);
      if (v3)
      {
        v4 = v3;
        v16 = objc_msgSend(v3, sel_superview);

        if (v16)
        {
          -[UIPanGestureRecognizer velocityInView:](a1, sel_velocityInView_, v16);
          CaptionsViewDragController.handleDragDidEnd(with:)((CGPoint)__PAIR128__(v6, v5));
        }
      }
      return;
    default:
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1BD6441D0;
      -[UIPanGestureRecognizer state](a1, sel_state);
      type metadata accessor for UIGestureRecognizerState(0);
      v8 = String.init<A>(reflecting:)();
      v10 = v9;
      *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v7 + 32) = v8;
      *(_QWORD *)(v7 + 40) = v10;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      break;
  }
}

Swift::Void __swiftcall CaptionsViewDragController.handleDragDidBegin(with:)(CGPoint with)
{
  OUTLINED_FUNCTION_2_10();
}

uint64_t sub_1BD1DCDFC(uint64_t result)
{
  if (result)
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_72();
  }
  return result;
}

Swift::Void __swiftcall CaptionsViewDragController.handleDragDidMove(to:)(CGPoint to)
{
  OUTLINED_FUNCTION_2_10();
}

void sub_1BD1DCED8(void *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  double v5;
  id v6;
  SEL v7;
  double v8;
  void (*v9)(double);
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  if (!a1)
    goto LABEL_10;
  OUTLINED_FUNCTION_2_0();
  if (*(_BYTE *)(v1 + 64) != 1 || !objc_msgSend(a1, sel_superview))
  {
    v2 = a1;
LABEL_9:

LABEL_10:
    OUTLINED_FUNCTION_2_0();
    *(_BYTE *)(v1 + 64) = 0;
    return;
  }
  OUTLINED_FUNCTION_13_56();
  OUTLINED_FUNCTION_2_0();
  if (!MEMORY[0x1C3B752C0](v3))
  {

    goto LABEL_9;
  }
  if (one-time initialization token for margin != -1)
    swift_once();
  objc_msgSend(v2, sel_frame);
  CGRectGetWidth(v10);
  OUTLINED_FUNCTION_4_73();
  CGRectGetWidth(v11);
  objc_msgSend(OUTLINED_FUNCTION_10_69(), sel_layoutFrame);
  OUTLINED_FUNCTION_3_76();
  v12.origin.x = OUTLINED_FUNCTION_8_18();
  CGRectGetMinY(v12);
  objc_msgSend(OUTLINED_FUNCTION_10_69(), sel_layoutFrame);
  OUTLINED_FUNCTION_3_76();
  v13.origin.x = OUTLINED_FUNCTION_8_18();
  CGRectGetMaxY(v13);
  OUTLINED_FUNCTION_4_73();
  CGRectGetHeight(v14);
  OUTLINED_FUNCTION_4_73();
  v5 = OUTLINED_FUNCTION_7_73();
  objc_msgSend(v6, v7, v5);
  OUTLINED_FUNCTION_11_60();
  OUTLINED_FUNCTION_11_60();
  swift_getObjectType();
  v8 = OUTLINED_FUNCTION_7_73();
  v9(v8);
  swift_unknownObjectRelease();

}

Swift::Void __swiftcall CaptionsViewDragController.handleDragDidEnd(with:)(CGPoint with)
{
  OUTLINED_FUNCTION_2_10();
}

uint64_t sub_1BD1DD0F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  if (a1)
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_72();
  }
  CaptionsViewDragController.dragEnabled.setter(0);
  result = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 64) = 0;
  return result;
}

uint64_t CaptionsViewDragController.deinit()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 24);
  swift_unknownObjectWeakDestroy();

  return v0;
}

uint64_t CaptionsViewDragController.__deallocating_deinit()
{
  CaptionsViewDragController.deinit();
  return swift_deallocClassInstance();
}

void sub_1BD1DD274(char *a1)
{
  CaptionsViewDragController.dragEnabled.setter(*a1);
}

uint64_t dispatch thunk of CaptionsViewDragControllerDelegate.captionsViewDragControllerDidStartDrag(_:atPosition:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of CaptionsViewDragControllerDelegate.captionsViewDragController(_:didMoveToPosition:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CaptionsViewDragControllerDelegate.captionsViewDragController(_:didEndDragAtPosition:velocity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for CaptionsViewDragController()
{
  return objc_opt_self();
}

uint64_t method lookup function for CaptionsViewDragController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CaptionsViewDragController.__allocating_init(captionsView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of RecentCallProviding.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RecentCallProviding.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of RecentCallProviding.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of RecentCallProviding.presentScreenTimeShield.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RecentCallProviding.presentScreenTimeShield.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of RecentCallProviding.presentScreenTimeShield.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of RecentCallProviding.contactsForConversation(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of RecentCallProviding.performCallRequest(forRecentsCallItem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of RecentCallProviding.deleteAllRecentCalls()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of RecentCallProviding.deleteRecentCalls(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of RecentCallProviding.markRecentCallsAsRead()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of RecentCallProviding.continuousScrollingReachedIndexPath(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

BOOL static GridLayout.Orientation.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void GridLayout.Orientation.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int GridLayout.Orientation.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance GridLayout.Orientation(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static GridLayout.Orientation.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance GridLayout.Orientation()
{
  char *v0;

  return GridLayout.Orientation.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance GridLayout.Orientation(uint64_t a1)
{
  char *v1;

  GridLayout.Orientation.hash(into:)(a1, *v1);
}

void GridLayout.Configuration.interItemSpacing.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*GridLayout.Configuration.interItemSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double GridLayout.Configuration.scaleAmount.getter(double a1, double a2)
{
  return a2;
}

void GridLayout.Configuration.scaleAmount.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*GridLayout.Configuration.scaleAmount.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t GridLayout.Configuration.deviceType.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*GridLayout.Configuration.deviceType.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t GridLayout.Configuration.mediaPipIsVisible.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t GridLayout.Configuration.mediaPipIsVisible.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*GridLayout.Configuration.mediaPipIsVisible.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 0 of GridLayout.Configuration.init(interItemSpacing:scaleAmount:deviceType:mediaPipIsVisible:)()
{
  return 8.0;
}

double default argument 1 of GridLayout.Configuration.init(interItemSpacing:scaleAmount:deviceType:mediaPipIsVisible:)()
{
  return 16.0;
}

uint64_t GridLayout.Configuration.init(interItemSpacing:scaleAmount:deviceType:mediaPipIsVisible:)(unsigned __int8 a1, char a2)
{
  int v2;

  if ((a2 & 1) != 0)
    v2 = 256;
  else
    v2 = 0;
  return v2 & 0xFFFFFF00 | a1;
}

uint64_t GridLayout.GridSize.rows.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t GridLayout.frames.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*GridLayout.frames.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t GridLayout.init(containingRect:frameCount:indexToExpand:configuration:displayScale:)(unint64_t a1, unint64_t a2, char a3, __int16 a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9, double a10, double a11)
{
  char v12;
  int v22;
  double Width;
  double Height;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CGRect v36;

  v12 = HIBYTE(a4);
  v22 = a4;
  Width = CGRectGetWidth(*(CGRect *)&a5);
  v36.origin.x = a5;
  v36.origin.y = a6;
  v36.size.width = a7;
  v36.size.height = a8;
  Height = CGRectGetHeight(v36);
  if (v22)
    v25 = static GridLayout.padGridSize(for:orientation:)(a1, Height >= Width);
  else
    v25 = static GridLayout.phoneGridSize(for:orientation:mediaPipIsVisible:)(a1, Height >= Width, v12 & 1);
  v27 = v25;
  v28 = v26;
  static GridLayout.frameSize(for:in:interItemSpacing:displayScale:)(v25, v26, a7, a8, a9, a11);
  static GridLayout.frames(for:numberOfFrames:frameSize:interItemSpacing:in:displayScale:)(v27, v28, a1, v29, v30, a9, a5, a6, a7, a8, a11);
  v32 = v31;
  if ((a3 & 1) == 0)
  {
    specialized static ParticipantLayout.expandingFrame(_:of:in:displayScale:scaleFactor:shouldInsetFromEdge:)(a2, v31, *(uint64_t *)&a10, 1, 0, a7, a8, a11);
    v34 = v33;
    swift_bridgeObjectRelease();
    return v34;
  }
  return v32;
}

uint64_t static GridLayout.frameSize(for:in:interItemSpacing:displayScale:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;

  v12 = type metadata accessor for FloatingPointRoundingRule();
  v13 = *(_QWORD *)(v12 - 8);
  result = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1 - 1;
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFSUB__(a2, 1))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v18 = a4 - (double)(a2 - 1) * a5;
  if (v18 >= (a3 - (double)v17 * a5) / (double)a1 * (double)a2)
    v19 = (a3 - (double)v17 * a5) / (double)a1;
  else
    v19 = v18 / (double)a2;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E0DED500], v12);
  CGFloat.rounded(_:toScale:)((uint64_t)v16, a6, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

void static GridLayout.frames(for:numberOfFrames:frameSize:interItemSpacing:in:displayScale:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10, double a11)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  double v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  unint64_t v40;
  uint64_t v41;
  double *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  CGFloat v47;
  CGRect v48;
  CGRect v49;

  v47 = a9;
  v21 = type metadata accessor for FloatingPointRoundingRule();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__OFSUB__(a1, 1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v48.origin.x = a7;
  v48.origin.y = a8;
  v48.size.width = v47;
  v48.size.height = a10;
  v25 = a1 - 1;
  v26 = (CGRectGetWidth(v48) - ((double)a1 * a4 + (double)v25 * a6)) * 0.5;
  v27 = *MEMORY[0x1E0DED508];
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 104);
  v28(v24, v27, v21);
  v29 = CGFloat.rounded(_:toScale:)((uint64_t)v24, a11, v26);
  v30 = *(void (**)(char *, uint64_t))(v22 + 8);
  v30(v24, v21);
  if (__OFSUB__(a2, 1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v49.size.height = a10;
  v49.origin.x = a7;
  v49.origin.y = a8;
  v49.size.width = v47;
  v31 = a2 - 1;
  v32 = (CGRectGetHeight(v49) - ((double)a2 * a5 + (double)v31 * a6)) * 0.5;
  v28(v24, v27, v21);
  v33 = CGFloat.rounded(_:toScale:)((uint64_t)v24, a11, v32);
  v30(v24, v21);
  if (a2 < 0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (a2)
  {
    if (a1 < 0)
    {
LABEL_28:
      __break(1u);
      return;
    }
    v34 = 0;
    v35 = a5 + a6;
    v36 = a4 + a6;
    v37 = MEMORY[0x1E0DEE9D8];
    while (v34 != a2)
    {
      if (a1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v37 = v45;
        }
        v38 = a1;
        v39 = v29;
        while (v38)
        {
          v40 = *(_QWORD *)(v37 + 16);
          v41 = v40 + 1;
          if (v40 >= *(_QWORD *)(v37 + 24) >> 1)
          {
            specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
            v37 = v44;
          }
          *(_QWORD *)(v37 + 16) = v41;
          v42 = (double *)(v37 + 32 * v40);
          v42[4] = v39;
          v42[5] = v33;
          v42[6] = a4;
          v42[7] = a5;
          v39 = v36 + v39;
          if (v41 >= a3 || v38-- == 1)
            goto LABEL_20;
        }
        __break(1u);
        break;
      }
LABEL_20:
      ++v34;
      v33 = v35 + v33;
      if (v34 == a2)
        return;
    }
    __break(1u);
    goto LABEL_25;
  }
}

void specialized static ParticipantLayout.expandingFrame(_:of:in:displayScale:scaleFactor:shouldInsetFromEdge:)(unint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, double a6, double a7, double a8)
{
  double v8;
  double v9;
  double v10;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double *v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  double MinX;
  double MaxX;
  double MinY;
  double MaxY;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v19 = type metadata accessor for FloatingPointRoundingRule();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > a1)
  {
    v42 = a6;
    v43 = a7;
    v23 = (double *)(a2 + 32 * a1);
    a6 = v23[4];
    a7 = v23[5];
    v24 = v23[6];
    v8 = v23[7];
    v25 = 1.0;
    if ((a4 & 1) == 0)
      v25 = v23[6];
    v26 = v25 * *(double *)&a3;
    v27 = *MEMORY[0x1E0DED500];
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
    OUTLINED_FUNCTION_2_79();
    v44 = a8;
    v9 = CGFloat.rounded(_:toScale:)((uint64_t)v22, a8, v26);
    OUTLINED_FUNCTION_1_82();
    v45.origin.x = OUTLINED_FUNCTION_0_90();
    MinX = CGRectGetMinX(v45);
    v46.origin.x = OUTLINED_FUNCTION_0_90();
    MaxX = CGRectGetMaxX(v46);
    v47.origin.x = OUTLINED_FUNCTION_0_90();
    MinY = CGRectGetMinY(v47);
    v48.origin.x = OUTLINED_FUNCTION_0_90();
    MaxY = CGRectGetMaxY(v48);
    if ((a5 & 1) != 0)
    {
      if (MinX < 1.0)
      {
LABEL_9:
        v10 = v24 + v9;
LABEL_11:
        if (MinY < 1.0)
          goto LABEL_15;
        if (v43 + -1.0 < MaxY)
        {
          a7 = a7 - v9;
          goto LABEL_15;
        }
LABEL_14:
        OUTLINED_FUNCTION_2_79();
        v38 = OUTLINED_FUNCTION_3_77();
        OUTLINED_FUNCTION_1_82();
        a7 = a7 - v38;
LABEL_15:
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_16;
        goto LABEL_20;
      }
      if (v42 + -1.0 < MaxX)
      {
        a6 = a6 - v9;
        goto LABEL_9;
      }
    }
    v42 = a7;
    v33 = v8;
    v34 = v9;
    v35 = MinY;
    v36 = MaxY;
    v28(v22, v27, v19);
    v37 = OUTLINED_FUNCTION_3_77();
    OUTLINED_FUNCTION_1_82();
    MaxY = v36;
    MinY = v35;
    v9 = v34;
    v8 = v33;
    a7 = v42;
    a6 = a6 - v37;
    v10 = v24 + v9;
    if ((a5 & 1) == 0)
      goto LABEL_14;
    goto LABEL_11;
  }
  __break(1u);
LABEL_20:
  specialized _ArrayBuffer._consumeAndCreateNew()();
  a2 = v40;
LABEL_16:
  if (*(_QWORD *)(a2 + 16) <= a1)
  {
    __break(1u);
  }
  else
  {
    v39 = (double *)(a2 + 32 * a1);
    v39[4] = a6;
    v39[5] = a7;
    v39[6] = v10;
    v39[7] = v8 + v9;
  }
}

uint64_t static GridLayout.phoneGridSize(for:orientation:mediaPipIsVisible:)(unint64_t a1, char a2, unsigned __int8 a3)
{
  int v4;
  BOOL v5;
  uint64_t v6;
  uint64_t result;

  v4 = a3 & ((a2 & 1) == 0);
  if (a1 != 3)
    v4 = 1;
  v5 = v4 == 0;
  v6 = 1;
  if (!v5)
    v6 = 2;
  if (a1 >= 3)
    result = v6;
  else
    result = 1;
  if (__OFADD__((uint64_t)a1 / result, ((result - 1) & a1) != 0))
    __break(1u);
  return result;
}

uint64_t static GridLayout.padGridSize(for:orientation:)(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((a2 & 1) != 0)
  {
    v2 = 1;
    v3 = 4;
    v4 = 3;
    if ((unint64_t)result > 0xC)
      v4 = 4;
    if (result >= 7)
      v3 = v4;
    if ((unint64_t)(result - 7) <= 0xFFFFFFFFFFFFFFFCLL)
      v5 = v3;
    else
      v5 = 2;
    if ((unint64_t)result >= 4)
      v2 = v5;
    if (__OFADD__(result / v2, result % v2 != 0))
      __break(1u);
    else
      return v2;
  }
  else if ((unint64_t)result >= 4)
  {
    if ((unint64_t)(result - 9) >= 0xFFFFFFFFFFFFFFFBLL)
    {
      return (result & 1) + ((unint64_t)result >> 1);
    }
    else if ((unint64_t)(result - 13) >= 0xFFFFFFFFFFFFFFFCLL)
    {
      return 4;
    }
    else if ((unint64_t)(result - 16) >= 0xFFFFFFFFFFFFFFFDLL)
    {
      return 5;
    }
    else
    {
      return 6;
    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type GridLayout.Orientation and conformance GridLayout.Orientation()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GridLayout.Orientation and conformance GridLayout.Orientation;
  if (!lazy protocol witness table cache variable for type GridLayout.Orientation and conformance GridLayout.Orientation)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for GridLayout.Orientation, &type metadata for GridLayout.Orientation);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GridLayout.Orientation and conformance GridLayout.Orientation);
  }
  return result;
}

uint64_t protocol witness for ParticipantLayout.frames.getter in conformance GridLayout()
{
  return swift_bridgeObjectRetain();
}

void type metadata accessor for GridLayout()
{
  OUTLINED_FUNCTION_34_0();
}

