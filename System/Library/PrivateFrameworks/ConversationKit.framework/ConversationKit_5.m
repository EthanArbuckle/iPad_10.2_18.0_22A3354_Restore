void ConversationControlsManager.shouldShowCallAgainHUD(forCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;

  ObjectType = swift_getObjectType();
  if ((OUTLINED_FUNCTION_101(ObjectType, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 496)) & 1) != 0)
  {
    v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults + 8);
    v6 = OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_39_0(v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 600));
  }
  OUTLINED_FUNCTION_18();
}

void ConversationControlsManager.conversationHUDType.getter()
{
  uint64_t v0;
  char *v1;

  OUTLINED_FUNCTION_214_0();
  OUTLINED_FUNCTION_351();
  v1 = (char *)sub_1BD266470 + 4 * byte_1BD654915[OUTLINED_FUNCTION_547(v0) >> 5];
  __asm { BR              X10 }
}

void sub_1BD266470()
{
  uint64_t v0;

  OUTLINED_FUNCTION_290(1);
  *(_BYTE *)(v0 + 40) = 6;
  OUTLINED_FUNCTION_45_0();
}

void ConversationControlsManager.isWaitingOnFirstRemoteFrame.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.isWaitingOnFirstRemoteFrame.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isWaitingOnFirstRemoteFrame);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

uint64_t ConversationControlsManager.shouldShowAVLessLeaveConfirmation.didset(char a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  unsigned __int8 *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = a1 & 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (unsigned __int8 *)(v1
                         + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowAVLessLeaveConfirmation);
  result = swift_beginAccess();
  if (*v7 != v3)
  {
    if ((a1 & 1) != 0)
    {
      v9 = 1;
    }
    else
    {
      static Date.now.getter();
      v9 = 0;
    }
    v10 = type metadata accessor for Date();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, v9, 1, v10);
    v11 = v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_avLessLeaveConfirmationPresentedDate;
    swift_beginAccess();
    outlined assign with take of Participant?((uint64_t)v6, v11, (uint64_t *)&demangling cache variable for type metadata for Date?);
    return swift_endAccess();
  }
  return result;
}

void ConversationControlsManager.shouldShowAVLessLeaveConfirmation.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.shouldShowAVLessLeaveConfirmation.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowAVLessLeaveConfirmation);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  ConversationControlsManager.shouldShowAVLessLeaveConfirmation.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

uint64_t key path setter for ConversationControlsManager.activityLaunchTimer : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x8B8);
  v3 = swift_retain();
  return v2(v3);
}

void ConversationControlsManager.activityLaunchTimer.getter()
{
  ConversationControlsManager.incomingScreenSharingRequestActivity.getter();
}

void ConversationControlsManager.activityLaunchTimer.setter(uint64_t a1)
{
  ConversationControlsManager.incomingScreenSharingRequestActivity.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activityLaunchTimer);
}

void ConversationControlsManager.activityLaunchTimer.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.currentActivity.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_214_0();
  if (OUTLINED_FUNCTION_133_0(v1))
  {
    v2 = OUTLINED_FUNCTION_502();
    v3 = Array<A>.sortedActivities.getter(v2);
    specialized Collection.first.getter(v3);

    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_149_4();
  }
  else
  {
    OUTLINED_FUNCTION_437();
    OUTLINED_FUNCTION_18();
  }
}

void ConversationControlsManager.currentSharePlayActivity.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if (OUTLINED_FUNCTION_133_0(*v0))
  {
    v1 = OUTLINED_FUNCTION_502();
    Array<A>.currentSharePlayActivity.getter(v1);
    OUTLINED_FUNCTION_14_18();
    OUTLINED_FUNCTION_13_3();
  }
  OUTLINED_FUNCTION_18();
}

id ConversationControlsManager.stagedSharePlayActivity.getter()
{
  uint64_t *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  _QWORD v9[3];
  void *v10;

  v1 = (void *)OUTLINED_FUNCTION_133_0(*v0);
  if (!v1
    || (v2 = v1,
        v3 = objc_msgSend(v1, sel_stagedActivitySession),
        v2,
        !v3))
  {
    ConversationController.activeOneToOneConversationBackedByGroupSession.getter();
    v3 = v10;
    if (v10)
    {
      OUTLINED_FUNCTION_565(v9);
      v6 = OUTLINED_FUNCTION_65_2();
      v3 = (id)v7(v6);
      OUTLINED_FUNCTION_557((uint64_t)v3);
    }
    else
    {
      OUTLINED_FUNCTION_305(v4, &demangling cache variable for type metadata for Conversation?, v5);
    }
  }
  return v3;
}

void ConversationControlsManager.currentOrStagedSharePlayActivity.getter()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8D0))())
    OUTLINED_FUNCTION_0();
  else
    (*(void (**)(void))((*v1 & *v0) + 0x8D8))();
}

uint64_t ConversationControlsManager.currentCollaboration.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_214_0();
  if (OUTLINED_FUNCTION_133_0(v1))
  {
    OUTLINED_FUNCTION_502();
    OUTLINED_FUNCTION_653();
    Array<A>.currentCollaboration.getter(v2, v3);

    return OUTLINED_FUNCTION_149_4();
  }
  else
  {
    type metadata accessor for Collaboration(0);
    OUTLINED_FUNCTION_60_2();
    return OUTLINED_FUNCTION_0_29(v5, v6, v7, v8);
  }
}

void ConversationControlsManager.stagedCollaboration.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;

  OUTLINED_FUNCTION_414();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_25_4();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v3) + 0x7D8))();
  OUTLINED_FUNCTION_38_21();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload)
  {
    OUTLINED_FUNCTION_315(EnumCaseMultiPayload, type metadata accessor for ForegroundCollaborationState);
    v5 = 1;
  }
  else
  {
    v6 = OUTLINED_FUNCTION_124_0();
    outlined init with take of StagedCollaboration(v6, v7, v8);
    v5 = 0;
  }
  v9 = OUTLINED_FUNCTION_205();
  __swift_storeEnumTagSinglePayload(a1, v5, 1, v9);
  OUTLINED_FUNCTION_18();
}

void ConversationControlsManager.stagedOrCurrentCollaboration.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *boxed_opaque_existential_1;
  __int128 v15;
  uint64_t v16;
  _UNKNOWN **v17;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StagedCollaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_136_1();
  (*(void (**)(void))(v6 + 2288))();
  v7 = OUTLINED_FUNCTION_205();
  v8 = OUTLINED_FUNCTION_69_0(v2, 1, v7);
  if (v9)
  {
    OUTLINED_FUNCTION_30_7(v8, &demangling cache variable for type metadata for StagedCollaboration?);
    OUTLINED_FUNCTION_136_1();
    (*(void (**)(void))(v10 + 2280))();
    v11 = OUTLINED_FUNCTION_239_0();
    v12 = OUTLINED_FUNCTION_69_0(v1, 1, v11);
    if (v9)
    {
      OUTLINED_FUNCTION_32_18(v12, &demangling cache variable for type metadata for Collaboration?);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = 0;
    }
    else
    {
      *(_QWORD *)(a1 + 24) = v11;
      *(_QWORD *)(a1 + 32) = &protocol witness table for Collaboration;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      outlined init with take of StagedCollaboration(v1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for Collaboration);
    }
  }
  else
  {
    v16 = v7;
    v17 = &protocol witness table for StagedCollaboration;
    v13 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v15);
    outlined init with take of StagedCollaboration(v2, (uint64_t)v13, type metadata accessor for StagedCollaboration);
    OUTLINED_FUNCTION_567(&v15);
  }
  OUTLINED_FUNCTION_91();
}

void ConversationControlsManager.activityToShowInHUD.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t (*v38)(void);
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void);
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  os_log_type_t v58;

  OUTLINED_FUNCTION_434();
  a29 = v32;
  a30 = v33;
  OUTLINED_FUNCTION_214_0();
  v34 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_9_28();
  v36 = *(uint64_t (**)(void))(v35 + 800);
  if ((v36() & 1) == 0)
    goto LABEL_4;
  OUTLINED_FUNCTION_9_28();
  v38 = *(uint64_t (**)(void))(v37 + 656);
  v39 = (void *)v38();
  if (!v39)
    goto LABEL_4;
  v40 = objc_msgSend(v39, sel_activeRemoteParticipants);
  OUTLINED_FUNCTION_4_39();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  OUTLINED_FUNCTION_318();
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_26_2();
  v41 = specialized Set.count.getter(&lazy cache variable for type metadata for TUConversationParticipant);
  OUTLINED_FUNCTION_27();
  if (!v41)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v49 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v49, (uint64_t)&static Logger.conversationControls);
    v50 = OUTLINED_FUNCTION_60_3();
    Logger.logObject.getter();
    v51 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_21_12(v51))
    {
      v58 = v51;
      v52 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v52 = 67109376;
      LODWORD(a15) = v36() & 1;
      v53 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v52 + 8) = 2048;
      v54 = ((uint64_t (*)(uint64_t))v38)(v53);
      v55 = (void *)v54;
      if (v54)
      {
        v56 = OUTLINED_FUNCTION_25_1(v54, sel_activeRemoteParticipants);

        v57 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
        specialized Set.count.getter(v57);
        OUTLINED_FUNCTION_26_2();
        OUTLINED_FUNCTION_133();
      }
      else
      {

      }
      *(_QWORD *)&a15 = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      OUTLINED_FUNCTION_636(&dword_1BD004000, &lazy cache variable for type metadata for TUConversationParticipant, v58, "Only showing non-staged Activity, isAVLess: %{BOOL}d participantCount: %ld");
      OUTLINED_FUNCTION_60();
    }

    v43 = *(uint64_t (**)(void))((*v34 & *v50) + 0x8D0);
  }
  else
  {
LABEL_4:
    OUTLINED_FUNCTION_9_28();
    v43 = *(uint64_t (**)(void))(v42 + 2272);
  }
  v44 = (void *)v43();
  OUTLINED_FUNCTION_9_28();
  OUTLINED_FUNCTION_549();
  if (!a13)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&a11, &demangling cache variable for type metadata for Activity?);
    if (v44)
    {
      OUTLINED_FUNCTION_59(v47, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
      v30[3] = v48;
      v30[4] = &protocol witness table for TUConversationActivitySession;
      *v30 = v44;
      goto LABEL_19;
    }
LABEL_18:
    OUTLINED_FUNCTION_437();
    goto LABEL_19;
  }
  outlined init with take of Notice(&a11, (uint64_t)&a15);
  v45 = (*(uint64_t (**)(void *))((*v34 & *v31) + 0x910))(v44);
  if ((v45 & 1) == 0)
  {

    OUTLINED_FUNCTION_567(&a15);
    goto LABEL_19;
  }
  if (!v44)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&a15);
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_59(v45, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
  v30[3] = v46;
  v30[4] = &protocol witness table for TUConversationActivitySession;
  *v30 = v44;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a15);
LABEL_19:
  OUTLINED_FUNCTION_0_47();
}

void ConversationControlsManager.remoteParticipants.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.shouldShowSharePlayActivityInHUD(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_442();
  v16 = v1;
  v17 = v2;
  if (v3)
  {
    OUTLINED_FUNCTION_154();
    (*(void (**)(void))(v4 + 2328))();
    OUTLINED_FUNCTION_9_33();
    if (OUTLINED_FUNCTION_109_9(v5))
    {
      v6 = OUTLINED_FUNCTION_17_49();
      v7 = OUTLINED_FUNCTION_6_9(v6, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 64));
      OUTLINED_FUNCTION_10();
      if ((v7 & 1) != 0)
      {
        OUTLINED_FUNCTION_154();
        v8 = OUTLINED_FUNCTION_549();
        v10 = v14;
        if (v14)
        {
          v11 = v15;
          __swift_project_boxed_opaque_existential_1(&v13, v14);
          v12 = OUTLINED_FUNCTION_6_9(v10, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16));
          OUTLINED_FUNCTION_557(v12);
        }
        else
        {
          OUTLINED_FUNCTION_305(v8, &demangling cache variable for type metadata for Activity?, v9);
        }
      }
    }
  }
}

void ConversationControlsManager.applicationState.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.applicationState.setter(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;

  v3 = (uint64_t *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_applicationState);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_279_0(*v1);
  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsManager.applicationState.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsManager.applicationState.modify()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_551();
  if ((v1 & 1) == 0)
    OUTLINED_FUNCTION_279_0(**(_QWORD **)(v0 + 24));
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ConversationControlsManager.appLaunchButtonType : ConversationControlsManager(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x930))();
}

uint64_t key path setter for ConversationControlsManager.appLaunchButtonType : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v9;

  v4 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v6, v7);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x938))(v6);
}

void ConversationControlsManager.appLaunchButtonType.didset(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(void);
  char v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x930);
  ((void (*)(uint64_t))v7)(v4);
  static ConversationControlsAppLaunchButtonType.== infix(_:_:)((uint64_t)v6, a1);
  LOBYTE(a1) = v8;
  outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for ConversationControlsAppLaunchButtonType);
  if ((a1 & 1) == 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
    v10 = v1;
    v11 = Logger.logObject.getter();
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v20 = v14;
      *(_DWORD *)v13 = 136315138;
      v7();
      ConversationControlsAppLaunchButtonType.description.getter();
      v16 = v15;
      v18 = v17;
      outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for ConversationControlsAppLaunchButtonType);
      v19 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v11, v12, "> AppLaunchButton type:%s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v14, -1, -1);
      MEMORY[0x1C3B751B8](v13, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t ConversationControlsManager.appLaunchButtonType.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_487();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_11_0();
  return OUTLINED_FUNCTION_2_19();
}

void ConversationControlsManager.appLaunchButtonType.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  OUTLINED_FUNCTION_93();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  OUTLINED_FUNCTION_413();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_79();
  v28 = v26 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&a9 - v30;
  OUTLINED_FUNCTION_479();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_14_12();
  OUTLINED_FUNCTION_479();
  swift_getKeyPath();
  OUTLINED_FUNCTION_467(v24, v28);
  v20;
  static Published.subscript.setter();
  ConversationControlsManager.appLaunchButtonType.didset((uint64_t)v31);
  OUTLINED_FUNCTION_94(v24);
  OUTLINED_FUNCTION_94((uint64_t)v31);
  OUTLINED_FUNCTION_52_1();
}

void ConversationControlsManager.appLaunchButtonType.modify(_QWORD *a1)
{
  uint64_t v1;
  size_t v3;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_413() - 8) + 64);
  a1[1] = malloc(v3);
  a1[2] = malloc(v3);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_18();
}

#error "1BD267688: call analysis failed (funcsize=21)"

uint64_t key path setter for ConversationControlsManager.$appLaunchButtonType : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>.Publisher);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x950))(v6);
}

void ConversationControlsManager.$appLaunchButtonType.getter()
{
  ConversationControlsManager.$shouldOpenMessages.getter(&OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__appLaunchButtonType);
}

void ConversationControlsManager.$shouldOpenMessages.getter(_QWORD *a1)
{
  OUTLINED_FUNCTION_546(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_57_0();
  Published.projectedValue.getter();
  OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsManager.$appLaunchButtonType.setter()
{
  ConversationControlsManager.$shouldOpenMessages.setter();
}

void ConversationControlsManager.$appLaunchButtonType.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  *(_QWORD *)(v0 + 56) = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

{
  ConversationControlsManager.$foregroundApp.modify();
}

Swift::Void __swiftcall ConversationControlsManager.configureAppLaunchButtonType()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  os_log_type_t v36;
  _WORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  void *v53;
  char v54;
  uint64_t v55;
  char v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  int EnumTagSinglePayload;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  char v82;
  void *v83;
  uint64_t (*v84)(void);
  uint64_t v85;
  void (*v86)(uint64_t);
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  void *v104;
  void *v105;
  uint64_t (*v106)(void);
  uint64_t v107;
  id v108;
  uint64_t (*v109)(void);
  void (*v110)(void);
  uint64_t v111;
  char *v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  char *v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119[3];
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  OUTLINED_FUNCTION_93();
  v122 = v3;
  v123 = v4;
  v5 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v116 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = OUTLINED_FUNCTION_239_0();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v114 = (_BYTE *)v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StagedCollaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OUTLINED_FUNCTION_413();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_5_27();
  v113 = v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v108 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v19);
  v20 = OUTLINED_FUNCTION_101_0();
  v21 = type metadata accessor for Participant(v20);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_83_4();
  v23 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults;
  v24 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults);
  v25 = *((_QWORD *)v23 + 1);
  v26 = OUTLINED_FUNCTION_15_6();
  v27 = OUTLINED_FUNCTION_101(v26, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 696));
  v28 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((v27 & 1) == 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v35 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v35, (uint64_t)&static Logger.conversationControls);
    v36 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v36))
    {
      v37 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_47_2(v37);
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v38, v39, "SharePlay unavailable, not presenting AppLaunchButton");
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_391();
    OUTLINED_FUNCTION_352();
    v40 = *(uint64_t (**)(void))((*v28 & *v5) + 0x938);
    goto LABEL_45;
  }
  v111 = v13;
  v112 = v18;
  OUTLINED_FUNCTION_9_28();
  v30 = *(void (**)(void))(v29 + 624);
  v30();
  v31 = OUTLINED_FUNCTION_15_69();
  v32 = OUTLINED_FUNCTION_101(v31, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 104));
  v33 = OUTLINED_FUNCTION_10();
  if ((v32 & 1) != 0)
  {
    v34 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_136_1();
    v33 = OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v41 + 2128));
    v34 = v33;
  }
  v110 = v30;
  ((void (*)(uint64_t))v30)(v33);
  v42 = OUTLINED_FUNCTION_15_69();
  v43 = OUTLINED_FUNCTION_101(v42, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 96));
  OUTLINED_FUNCTION_10();
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0 && (v43 & 1) == 0 && (v34 & 1) != 0)
  {
    $defer #1 () in ConversationControlsManager.configureAppLaunchButtonType()(v5);
    return;
  }
  OUTLINED_FUNCTION_9_28();
  if (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v44 + 2112)) < 0x20u
    || (ConversationControlsManager.isOneToOneConversation.getter(), (v56 & 1) != 0)
    && (v57 = (void *)OUTLINED_FUNCTION_132_4(*v5)) != 0
    && (v58 = v57, v59 = objc_msgSend(v57, sel_state), v58, v59 == (id)1))
  {
    v109 = *(uint64_t (**)(void))((*v28 & *v5) + 0x290);
    v45 = v109();
    if (v45)
    {
      v46 = (void *)v45;
      OUTLINED_FUNCTION_9_28();
      OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v47 + 664));
      specialized Conversation.currentScreenSharingRequest(ignoring:)();
      v49 = v48;

      v50 = OUTLINED_FUNCTION_21_0();
      if (v49)
      {
        v51 = v28;
        if (OUTLINED_FUNCTION_25_1(v50, sel_type) == (id)1)
        {
          v52 = OUTLINED_FUNCTION_25_1(1, sel_handle);
          v53 = v49;
          ConversationController.participant(with:)();

          OUTLINED_FUNCTION_69_0(v1, 1, v21);
          if (v54)
          {

            OUTLINED_FUNCTION_30_7(v55, &demangling cache variable for type metadata for Participant?);
          }
          else
          {
            v108 = v49;
            outlined init with take of StagedCollaboration(v1, v2, type metadata accessor for Participant);
            v60 = objc_msgSend(*(id *)((char *)v5 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags), sel_requestToScreenShareEnabled);
            if ((_DWORD)v60)
            {
              if (one-time initialization token for conversationControls != -1)
                swift_once();
              v61 = OUTLINED_FUNCTION_17_2();
              __swift_project_value_buffer(v61, (uint64_t)&static Logger.conversationControls);
              v5 = OUTLINED_FUNCTION_64_7();
              v62 = Logger.logObject.getter();
              v63 = static os_log_type_t.default.getter();
              v64 = os_log_type_enabled(v62, v63);
              v65 = (uint64_t)v112;
              if (v64)
              {
                v66 = 7104878;
                v67 = (uint8_t *)OUTLINED_FUNCTION_105();
                v119[0] = OUTLINED_FUNCTION_105();
                *(_DWORD *)v67 = 136315138;
                if (OUTLINED_FUNCTION_671())
                {
                  specialized Conversation.currentScreenSharingRequest(ignoring:)();
                  OUTLINED_FUNCTION_6_16();
                  *(_QWORD *)&v117 = v53;
                  OUTLINED_FUNCTION_59(v69, &lazy cache variable for type metadata for TUScreenSharingRequest);
                  v66 = String.init<A>(reflecting:)();
                }
                v98 = OUTLINED_FUNCTION_657(v66, v68, v119);
                OUTLINED_FUNCTION_530(v98);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                OUTLINED_FUNCTION_27();
                OUTLINED_FUNCTION_48(&dword_1BD004000, v62, v63, "Setting app launch button to requestedRemoteToScreenShare %s", v67);
                OUTLINED_FUNCTION_21();
                OUTLINED_FUNCTION_60();
              }

              OUTLINED_FUNCTION_467(v2, v65);
              swift_storeEnumTagMultiPayload();
              OUTLINED_FUNCTION_281_0();

              OUTLINED_FUNCTION_94(v2);
              goto LABEL_46;
            }
            OUTLINED_FUNCTION_37_17((uint64_t)v60, type metadata accessor for Participant);

          }
        }
        else
        {

        }
        v28 = v51;
      }
    }
    OUTLINED_FUNCTION_9_28();
    (*(void (**)(__int128 *__return_ptr))(v70 + 2304))(&v117);
    if (!v118)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v117, &demangling cache variable for type metadata for Activity?);
      goto LABEL_44;
    }
    outlined init with take of Notice(&v117, (uint64_t)v119);
    OUTLINED_FUNCTION_167();
    v71 = OUTLINED_FUNCTION_38_21();
    v72(v71);
    v73 = OUTLINED_FUNCTION_205();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v73);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for StagedCollaboration?);
    if (EnumTagSinglePayload == 1)
    {
      v75 = v120;
      v76 = v121;
      v77 = (void *)OUTLINED_FUNCTION_161_0(v119);
      if (!v77 || (objc_msgSend(v77, sel_state), OUTLINED_FUNCTION_14_18(), v75 != 2))
      {
        v78 = v120;
        v79 = v121;
        v80 = __swift_project_boxed_opaque_existential_1(v119, v120);
        if ((specialized ConversationControlsManager.shouldShowCollaborationNotice(for:)((uint64_t)v80, v5, v78, v79) & 1) != 0)
        {
          OUTLINED_FUNCTION_167();
          if ((OUTLINED_FUNCTION_6_9(v79, *(uint64_t (**)(uint64_t, uint64_t))(v76 + 40)) & 1) != 0)
          {
            v110();
            v81 = OUTLINED_FUNCTION_15_69();
            v82 = OUTLINED_FUNCTION_101(v81, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 328));
            OUTLINED_FUNCTION_10();
            outlined init with copy of RadarReporting((uint64_t)v119, (uint64_t)&v117);
            if ((v82 & 1) != 0)
            {
              v83 = (void *)OUTLINED_FUNCTION_161_0(&v117);
              OUTLINED_FUNCTION_406(v83);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
              if (v5)
                goto LABEL_56;
            }
            else
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v117);
            }
            v90 = v120;
            v91 = v121;
            v92 = OUTLINED_FUNCTION_161_0(v119);
            if (!v92
              || (v93 = (void *)v92,
                  TUConversationActivitySession.generateSplitSessionState.getter(),
                  v90 = v94,
                  v93,
                  (v90 & 1) == 0))
            {
              OUTLINED_FUNCTION_167();
              v95 = v90;
              v96 = v116;
              (*(void (**)(uint64_t, uint64_t))(v91 + 112))(v95, v91);
              v97 = OUTLINED_FUNCTION_69_0((uint64_t)v96, 1, v115);
              if (v54)
              {
                OUTLINED_FUNCTION_32_18(v97, &demangling cache variable for type metadata for Collaboration?);
              }
              else
              {
                v99 = (uint64_t)v96;
                v96 = v114;
                outlined init with take of StagedCollaboration(v99, (uint64_t)v114, type metadata accessor for Collaboration);
                if (v96[16] != 2)
                {
                  swift_storeEnumTagMultiPayload();
                  OUTLINED_FUNCTION_504();
                  v107 = OUTLINED_FUNCTION_54_0(v106);
                  OUTLINED_FUNCTION_315(v107, type metadata accessor for Collaboration);
                  goto LABEL_49;
                }
                OUTLINED_FUNCTION_315(v100, type metadata accessor for Collaboration);
              }
              if (OUTLINED_FUNCTION_671())
              {
                v101 = OUTLINED_FUNCTION_502();
                Array<A>.currentSharePlayActivity.getter(v101);
                OUTLINED_FUNCTION_14_18();
                OUTLINED_FUNCTION_53();
              }
              else
              {
                v96 = 0;
              }
              v102 = (*(uint64_t (**)(_BYTE *))((*v28 & *v5) + 0x910))(v96);

              if ((v102 & 1) != 0)
                goto LABEL_68;
              OUTLINED_FUNCTION_9_28();
              v104 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v103 + 2264));
              if (v104)
              {
                v105 = v104;
                objc_msgSend(objc_msgSend(v104, sel_activity), sel_isPlaceholderActivity);
                OUTLINED_FUNCTION_4_39();
                swift_storeEnumTagMultiPayload();
                OUTLINED_FUNCTION_281_0();

                goto LABEL_49;
              }
            }
LABEL_56:
            OUTLINED_FUNCTION_311_0();
LABEL_68:
            swift_storeEnumTagMultiPayload();
            OUTLINED_FUNCTION_504();
            goto LABEL_48;
          }
          OUTLINED_FUNCTION_167();
          v85 = OUTLINED_FUNCTION_38_21();
          v86(v85);
          if (!v87)
            goto LABEL_49;
          OUTLINED_FUNCTION_9_28();
          v89 = (*(uint64_t (**)(void))(v88 + 1968))();
          OUTLINED_FUNCTION_2_1();
          if ((v89 & 1) != 0)
            goto LABEL_49;
        }
      }
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_505();
LABEL_48:
    OUTLINED_FUNCTION_54_0(v84);
LABEL_49:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v119);
    goto LABEL_46;
  }
LABEL_44:
  OUTLINED_FUNCTION_352();
  OUTLINED_FUNCTION_505();
LABEL_45:
  OUTLINED_FUNCTION_54_0(v40);
LABEL_46:
  $defer #1 () in ConversationControlsManager.configureAppLaunchButtonType()(v5);
  OUTLINED_FUNCTION_52_1();
}

void $defer #1 () in ConversationControlsManager.configureAppLaunchButtonType()(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char v16;
  char v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void (*v24)(_QWORD *);
  id v25;
  uint64_t v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (uint64_t *)((char *)&v26 - v13);
  v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x930))(v12);
  swift_storeEnumTagMultiPayload();
  static ConversationControlsAppLaunchButtonType.== infix(_:_:)((uint64_t)v14, (uint64_t)v11);
  v17 = v16;
  outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for ConversationControlsAppLaunchButtonType);
  outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for ConversationControlsAppLaunchButtonType);
  if ((v17 & 1) == 0)
    return;
  v18 = (void *)(*(uint64_t (**)(void))((*v15 & *a1) + 0x290))();
  if (!v18)
    return;
  v19 = v18;
  if (!objc_msgSend(v18, sel_avMode))
  {
LABEL_8:

    return;
  }
  v20 = (*(uint64_t (**)(void))((*v15 & *a1) + 0x4C0))();
  if (!v20)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
    goto LABEL_10;
  }
  v21 = (void *)v20;
  v22 = v20 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v22, (uint64_t)v4, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);

  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
LABEL_10:

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
    return;
  }
  outlined init with take of StagedCollaboration((uint64_t)v4, (uint64_t)v7, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
  if ((v7[*(int *)(v5 + 24)] & 1) != 0)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
    goto LABEL_8;
  }
  v23 = *(void **)&v7[*(int *)(v5 + 20)];
  *v14 = v23;
  swift_storeEnumTagMultiPayload();
  v24 = *(void (**)(_QWORD *))((*v15 & *a1) + 0x938);
  v25 = v23;
  v24(v14);

  outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
}

void specialized Conversation.currentScreenSharingRequest(ignoring:)()
{
  _BOOL8 v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v0 = specialized Conversation.canDisplayScreenSharingRequest.getter();
  if (v0)
  {
    v1 = OUTLINED_FUNCTION_25_1(v0, sel_screenSharingRequests);
    OUTLINED_FUNCTION_287();
    OUTLINED_FUNCTION_400(&lazy protocol witness table cache variable for type TUScreenSharingRequest and conformance NSObject);
    OUTLINED_FUNCTION_271_1();
    OUTLINED_FUNCTION_14_18();
    OUTLINED_FUNCTION_124();
    v2 = OUTLINED_FUNCTION_124_0();
    specialized Set._Variant.filter(_:)(v2, v3);
    specialized Collection.first.getter();
    OUTLINED_FUNCTION_19();
  }
  OUTLINED_FUNCTION_8_15();
}

uint64_t ConversationControlsManager.shouldShowCollaborationNotice(for:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = OUTLINED_FUNCTION_565(a1);
  return specialized ConversationControlsManager.shouldShowCollaborationNotice(for:)((uint64_t)v4, v1, v2, v3);
}

void ConversationControlsManager.isAlertAvailable.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  if (OUTLINED_FUNCTION_129_3(*v1))
  {
    v2 = OUTLINED_FUNCTION_67_12();
    OUTLINED_FUNCTION_39_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationControlsManager.featureFlags.getter()
{
  return swift_unknownObjectRetain();
}

char *ConversationControlsManager.__allocating_init(activeCall:)()
{
  OUTLINED_FUNCTION_6_6();
  swift_getObjectType();
  return specialized ConversationControlsManager.__allocating_init(activeCall:)();
}

char *ConversationControlsManager.__allocating_init(activeCall:callCenter:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  OUTLINED_FUNCTION_96();
  v3 = v2;
  OUTLINED_FUNCTION_572();
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_291(v1, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  v10 = OUTLINED_FUNCTION_315_0();
  v12 = specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(v10, v11, v1, v0, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(v3);
  return v12;
}

void ConversationControlsManager.__allocating_init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v21 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = (char *)OUTLINED_FUNCTION_12_3();
  v14 = *(_QWORD *)(v9 + 24);
  v13 = *(_QWORD *)(v9 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v9, v14);
  OUTLINED_FUNCTION_626();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_39_9(v16, v17, v20);
  ObjectType = swift_getObjectType();
  v19 = swift_getObjectType();
  specialized ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)(v11, v0, v7, v21, v2, v12, ObjectType, v19, v14, v5, v13);
  __swift_destroy_boxed_opaque_existential_1(v9);
  OUTLINED_FUNCTION_52_1();
}

void ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  OUTLINED_FUNCTION_93();
  v22 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = *(_QWORD *)(v10 + 24);
  v14 = *(_QWORD *)(v10 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v10, v15);
  OUTLINED_FUNCTION_626();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_39_9(v17, v18, v21);
  ObjectType = swift_getObjectType();
  v20 = swift_getObjectType();
  specialized ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)(v13, v1, v9, v5, v3, v22, ObjectType, v20, v15, v7, v14);
  __swift_destroy_boxed_opaque_existential_1(v11);
  OUTLINED_FUNCTION_52_1();
}

void ConduitApprovalDelegate.__allocating_init(_:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_469());
  ConduitApprovalDelegate.init(_:)();
  OUTLINED_FUNCTION_0();
}

void ConduitLagunaNoticeManager.__allocating_init(_:queue:callCenter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_572();
  OUTLINED_FUNCTION_12_3();
  v4 = OUTLINED_FUNCTION_315_0();
  ConduitLagunaNoticeManager.init(_:queue:callCenter:)(v4, v5, a3);
  OUTLINED_FUNCTION_18();
}

uint64_t ConversationControlsManager.updateShareButtonState()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  NSObject *v24;
  char v26;
  uint64_t v27;
  id v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  char v50;
  void *v51;
  void *v52;
  int v53;
  int v54;
  int v55;
  char v57;
  uint64_t v58[2];

  v2 = v0;
  v3 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  v4 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState;
  OUTLINED_FUNCTION_2_0();
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((*(_QWORD *)v4 & 0xFFFFFFFFFFFFFFFELL) == 2
    && (OUTLINED_FUNCTION_9_28(),
        OUTLINED_FUNCTION_44_10(),
        v6 = OUTLINED_FUNCTION_15_69(),
        v7 = OUTLINED_FUNCTION_101(v6, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 112)),
        OUTLINED_FUNCTION_10(),
        (v7 & 1) != 0))
  {
    OUTLINED_FUNCTION_44_10();
    v8 = OUTLINED_FUNCTION_15_69();
    v9 = OUTLINED_FUNCTION_101(v8, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 136));
    OUTLINED_FUNCTION_10();
    v10 = v9 ^ 1;
  }
  else
  {
    v10 = 0;
  }
  v11 = v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_2_0();
  v12 = *(NSObject **)v11;
  v13 = *(_QWORD *)(v11 + 8);
  OUTLINED_FUNCTION_15_6();
  v14 = *(uint64_t (**)(uint64_t))(v13 + 112);
  swift_unknownObjectRetain();
  v15 = OUTLINED_FUNCTION_153_1();
  v16 = v14(v15);
  OUTLINED_FUNCTION_10();
  if ((v16 & 1) != 0)
  {
    v57 = v10;
    OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v5 & *v2) + 0x270));
    v17 = OUTLINED_FUNCTION_146();
    v18 = OUTLINED_FUNCTION_525(v17);
    v16 = v19;
    OUTLINED_FUNCTION_10();
    v20 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType();
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 48);
    swift_unknownObjectRetain();
    v23 = v22(ObjectType, v20);
    v12 = v24;
    swift_unknownObjectRelease();
    if (v18 == v23 && v16 == (_QWORD)v12)
    {
      OUTLINED_FUNCTION_19_1();
      v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v10 = v57;
      goto LABEL_17;
    }
    OUTLINED_FUNCTION_153_1();
    v26 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_27();
    v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v10 = v57;
    if ((v26 & 1) != 0)
      goto LABEL_17;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v27 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v27, (uint64_t)&static Logger.conversationControls);
  v28 = OUTLINED_FUNCTION_64_7();
  Logger.logObject.getter();
  v29 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v29))
  {
    v30 = OUTLINED_FUNCTION_105();
    v58[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v30 = 67110146;
    OUTLINED_FUNCTION_344_0();
    *(_WORD *)(v30 + 8) = 1024;
    OUTLINED_FUNCTION_344_0();
    *(_WORD *)(v30 + 14) = 1024;
    OUTLINED_FUNCTION_9_28();
    v32 = *(void (**)(void))(v31 + 624);
    v32();
    v33 = OUTLINED_FUNCTION_17_49();
    OUTLINED_FUNCTION_6_9(v33, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 112));

    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_344_0();

    *(_WORD *)(v30 + 20) = 2080;
    v32();
    v35 = v34;
    v36 = swift_getObjectType();
    v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 48))(v36, v35);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_9_57(v37, v38, v58);
    OUTLINED_FUNCTION_425();

    OUTLINED_FUNCTION_54_1();
    *(_WORD *)(v30 + 30) = 2080;
    v39 = *(_QWORD *)(v11 + 8);
    v40 = OUTLINED_FUNCTION_15_6();
    v41 = *(uint64_t (**)(uint64_t, uint64_t))(v39 + 48);
    swift_unknownObjectRetain();
    v42 = v41(v40, v39);
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_9_57(v42, v43, v58);
    OUTLINED_FUNCTION_425();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v12, (os_log_type_t)v16, "conversationSupportsSharePlay:%{BOOL}d, joinedConversation:%{BOOL}d, callIsConversation:%{BOOL}d, callUUID:%s, conversationControllerCallUUID:%s,", (uint8_t *)v30, 0x28u);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

LABEL_17:
  OUTLINED_FUNCTION_9_28();
  (*(void (**)(void))(v44 + 1600))();
  v46 = v45;
  v48 = v47;
  if ((v10 & 1) != 0)
  {
    OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v5 & *v2) + 0x270));
    v49 = OUTLINED_FUNCTION_146();
    v50 = OUTLINED_FUNCTION_52(v49, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 328));
    OUTLINED_FUNCTION_10();
    v51 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v5 & *v2) + 0x8D0));
    if (v51)
    {
      v52 = v51;
      v53 = objc_msgSend(v51, sel_state) == (id)1;

      v54 = v53 << 8;
    }
    else
    {
      v54 = 0;
    }
  }
  else
  {
    v54 = 0;
    v50 = 0;
  }
  if ((v50 & 1) != 0)
    v55 = 256;
  else
    v55 = 0;
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))((*v5 & *v2) + 0x648))(v55 & 0xFFFFFFFE | v10 & 1, v46, v54 | v48 & 1u);
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerObservers()()
{
  ConversationControlsManager.setupConversationControllerLocalStateObservers()();
  ConversationControlsManager.setupConversationControllerConversationStateObservers()();
  ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()();
  ConversationControlsManager.setupConversationControllerSharePlayStateObservers()();
  ConversationControlsManager.setupConversationControllerGondolaStateObservers()();
  ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()();
  ConversationControlsManager.setupGreenTea3PStateObservers()();
}

void closure #1 in ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)()
{
  OUTLINED_FUNCTION_438();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

#error "1BD268EBC: call analysis failed (funcsize=161)"

Swift::Void __swiftcall ConversationControlsManager.resetToHUD()()
{
  void *v0;
  uint64_t (**v1)(uint64_t, uint64_t);
  char v2;

  v0 = (void *)specialized ControlMenuDataSource.attachmentPoint(for:configuration:)();
  ConversationControlsManager.notifyDelegates(about:forceUpdate:)(v0, v1, v2);
}

void ConversationControlsManager.__deallocating_deinit()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _QWORD);
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v26;
  _BYTE v27[32];

  OUTLINED_FUNCTION_96();
  v5 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_3_81();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_27_1(v9);
  v10 = OUTLINED_FUNCTION_83_13();
  v11 = OUTLINED_FUNCTION_371(v10, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 88));
  OUTLINED_FUNCTION_10();
  if ((v11 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_28();
    v13 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(v12 + 1616))(v27);
    *(_QWORD *)(v14 + 8) = 0;
    *(_BYTE *)(v14 + 16) = 1;
    v13(v27, 0);
  }
  v15 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter], sel_neighborhoodActivityConduit);
  v16 = objc_msgSend(v15, sel_approvalDelegate);
  v17 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate];
  if (v16)
  {
    v18 = v16;
    swift_unknownObjectRelease();
    if (!v17 || v18 != v17)
      goto LABEL_7;
    goto LABEL_6;
  }
  if (!v17)
LABEL_6:
    objc_msgSend(v15, sel_setApprovalDelegate_, 0);
LABEL_7:
  v19 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_396(v19, v20, (uint64_t *)&demangling cache variable for type metadata for Date?);
  v21 = OUTLINED_FUNCTION_69_0(v1, 1, v7);
  if (v22)
  {
    OUTLINED_FUNCTION_30_7(v21, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    OUTLINED_FUNCTION_260_0(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    v23 = OUTLINED_FUNCTION_555();
    CNKCoreAnalyticsReporter.reportAVLessLeaveConfirmation(presentedAt:action:)(v23, 2);
    OUTLINED_FUNCTION_101(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  v24 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeShareCardHandle;
  v25 = *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeShareCardHandle];
  if (v25)
  {
    objc_msgSend(*(id *)(v25 + 16), sel_invalidate);

    *(_QWORD *)&v5[v24] = 0;
    swift_release();
  }
  else
  {

  }
  v26.receiver = v5;
  v26.super_class = (Class)ObjC metadata update function for ConversationControlsManager();
  objc_msgSendSuper2(&v26, sel_dealloc);
  OUTLINED_FUNCTION_65_1();
}

Swift::Void __swiftcall ConversationControlsManager.updateControlsState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  char v8;
  void *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_206();
  if ((OUTLINED_FUNCTION_667(v0) & 1) == 0)
    OUTLINED_FUNCTION_2_0();
  ConversationControlsManager.localAudioEnabled.setter();
  ConversationControlsManager.localVideoButtonState.getter();
  ConversationControlsManager.localVideoButtonState.setter();
  ConversationController.hasMessageCapableRemoteParticipants.getter();
  ConversationControlsManager.shouldOpenMessages.setter();
  OUTLINED_FUNCTION_2_0();
  ConversationControlsManager.shouldEnableStartingStagedActivity.setter();
  if (ConversationController.audioRoute.getter())
  {
    OUTLINED_FUNCTION_237_0();
    v2 = *(uint64_t (**)(void))(v1 + 1408);
    v4 = v3;
    v5 = v2();
    if (v5)
    {
      v6 = (void *)v5;
      OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for TURoute);
      v7 = v4;
      v8 = static NSObject.== infix(_:_:)();

      if ((v8 & 1) != 0)
        goto LABEL_9;
    }
    else
    {

    }
    v9 = (void *)ConversationController.audioRoute.getter();
    ConversationControlsManager.audioRoute.setter(v9);
LABEL_9:

  }
  ConversationControlsManager.updateShareButtonState()();
  OUTLINED_FUNCTION_237_0();
  (*(void (**)(void))(v10 + 2400))();
}

Swift::Void __swiftcall ConversationControlsManager.updateConversation()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[40];

  OUTLINED_FUNCTION_674();
  ConversationController.update(with:)((uint64_t)v2);
  OUTLINED_FUNCTION_305(v0, &demangling cache variable for type metadata for Conversation?, v1);
  OUTLINED_FUNCTION_8_15();
}

Swift::Void __swiftcall ConversationControlsManager.updateControlsCornerRadius()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  if (OUTLINED_FUNCTION_129_3(*v1))
  {
    v2 = OUTLINED_FUNCTION_67_12();
    OUTLINED_FUNCTION_39_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 24));
    OUTLINED_FUNCTION_0_101();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

Swift::Void __swiftcall ConversationControlsManager.reviewLMIRequests()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v5 = OUTLINED_FUNCTION_7_22();
  *v2 = v5;
  OUTLINED_FUNCTION_4_57(v5, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_39_6();
    if (OUTLINED_FUNCTION_335()
      && (v6 = OUTLINED_FUNCTION_15_69(),
          v7 = OUTLINED_FUNCTION_101(v6, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32)),
          OUTLINED_FUNCTION_10(),
          (v7 & 1) != 0))
    {
      if (OUTLINED_FUNCTION_335())
      {
        v9 = v8;
        v10 = OUTLINED_FUNCTION_15_6();
        v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 120);
LABEL_8:
        OUTLINED_FUNCTION_39_0(v10, v11);
        OUTLINED_FUNCTION_10();
      }
    }
    else
    {
      OUTLINED_FUNCTION_39_6();
      (*(void (**)(uint64_t))(v12 + 816))(1);
      if (OUTLINED_FUNCTION_129_3(*v0))
      {
        v14 = v13;
        v10 = OUTLINED_FUNCTION_15_6();
        v11 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 48);
        goto LABEL_8;
      }
    }
    OUTLINED_FUNCTION_91();
    return;
  }
  __break(1u);
}

void ConversationControlsManager.reloadDetailsView(participant:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  int EnumTagSinglePayload;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  _UNKNOWN **v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  uint64_t v38;

  OUTLINED_FUNCTION_96();
  v2 = v0;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_656();
  outlined init with copy of FeatureEligibility?(v10, v11, v12);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  v14 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
    if (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v14 & *v2) + 0x448)))
    {
      OUTLINED_FUNCTION_106_5();
      ConversationController.visibleParticipants.getter();
      v37 = 513;
      (*(void (**)(void))(v4 + 48))();
      OUTLINED_FUNCTION_113();
      OUTLINED_FUNCTION_30_4();
    }
  }
  else
  {
    v15 = OUTLINED_FUNCTION_64();
    outlined init with take of StagedCollaboration(v15, v16, v17);
    v18 = OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v14 & *v2) + 0x448));
    if (v18)
    {
      v19 = OUTLINED_FUNCTION_17_49();
      (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 32))(v1, 0x7FFFFFCFELL, 0, 0, v19, v4);
      v18 = OUTLINED_FUNCTION_10();
    }
    OUTLINED_FUNCTION_315(v18, type metadata accessor for Participant);
  }
  OUTLINED_FUNCTION_237_0();
  v20 = OUTLINED_FUNCTION_529();
  if (v38)
  {
    OUTLINED_FUNCTION_528();
    OUTLINED_FUNCTION_428(v21, &demangling cache variable for type metadata for CallControlsService?);
    v22 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    v23 = OUTLINED_FUNCTION_263_0();
    OUTLINED_FUNCTION_254_0(v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 112));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  else
  {
    OUTLINED_FUNCTION_428(v20, &demangling cache variable for type metadata for CallControlsService?);
  }
  v24 = OUTLINED_FUNCTION_529();
  if (v38)
  {
    OUTLINED_FUNCTION_528();
    OUTLINED_FUNCTION_428(v25, &demangling cache variable for type metadata for CallControlsService?);
    v26 = v35;
    v27 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    v28 = OUTLINED_FUNCTION_132_4(*v2);
    if (v28)
    {
      v29 = v28;
      OUTLINED_FUNCTION_59(v28, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
      *((_QWORD *)&v32 + 1) = v30;
      v33 = &protocol witness table for TUConversation;
      *(_QWORD *)&v31 = v29;
    }
    else
    {
      v33 = 0;
      v31 = 0u;
      v32 = 0u;
    }
    (*(void (**)(__int128 *, uint64_t, uint64_t))(v27 + 128))(&v31, v26, v27);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v31, &demangling cache variable for type metadata for Conversation?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  else
  {
    OUTLINED_FUNCTION_428(v24, &demangling cache variable for type metadata for CallControlsService?);
  }
  OUTLINED_FUNCTION_65_1();
}

Swift::Void __swiftcall ConversationControlsManager.reloadDetailsView(isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  uint64_t *v1;
  uint64_t v2;

  if (OUTLINED_FUNCTION_204_0(*v1))
  {
    OUTLINED_FUNCTION_106_5();
    ConversationController.visibleParticipants.getter();
    (*(void (**)(void))(v2 + 56))();
    OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_277();
  }
  else
  {
    OUTLINED_FUNCTION_91();
  }
}

void ConversationControlsManager.reloadDetailsView(participant:isKickingAvailable:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_33();
  if (OUTLINED_FUNCTION_204_0(v5))
  {
    v6 = OUTLINED_FUNCTION_17_49();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 40))(v2, a2 & 1, v6, v3);
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

Swift::Void __swiftcall ConversationControlsManager.updateDetailsViewMode()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *(*v4)(_QWORD *__return_ptr);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;

  OUTLINED_FUNCTION_206();
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = *(_QWORD *(**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & v3) + 0x3D0);
  v5 = v4(v48);
  if (v49)
  {
    OUTLINED_FUNCTION_522((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v43, v44, v45, v46, v47, v48[0]);
    OUTLINED_FUNCTION_426(v13, &demangling cache variable for type metadata for CallControlsService?, v14, v15, v16, v17, v18);
    v19 = v47;
    __swift_project_boxed_opaque_existential_1(&v43, v46);
    OUTLINED_FUNCTION_237_0();
    OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v20 + 624));
    v21 = OUTLINED_FUNCTION_83_13();
    v22 = OUTLINED_FUNCTION_371(v21, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 184));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_254_0(v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 96));
    v23 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }
  else
  {
    OUTLINED_FUNCTION_426((uint64_t)v5, &demangling cache variable for type metadata for CallControlsService?, v7, v8, v9, v10, v11);
  }
  v24 = ((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))v4)(v48, v23);
  if (v49)
  {
    OUTLINED_FUNCTION_522((uint64_t)v24, v25, v26, v27, v28, v29, v30, v31, v43, v44, v45, v46, v47, v48[0]);
    OUTLINED_FUNCTION_426(v32, &demangling cache variable for type metadata for CallControlsService?, v33, v34, v35, v36, v37);
    v38 = v47;
    __swift_project_boxed_opaque_existential_1(&v43, v46);
    v39 = OUTLINED_FUNCTION_263_0();
    OUTLINED_FUNCTION_254_0(v39, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 112));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }
  else
  {
    OUTLINED_FUNCTION_426((uint64_t)v24, &demangling cache variable for type metadata for CallControlsService?, v26, v27, v28, v29, v30);
  }
  if (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v2 & *v0) + 0x448)))
  {
    v41 = v40;
    v42 = OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_39_0(v42, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    OUTLINED_FUNCTION_10();
  }
}

void ConversationControlsManager.updateDetails(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_33();
  if (OUTLINED_FUNCTION_204_0(v1))
  {
    v2 = OUTLINED_FUNCTION_15_69();
    OUTLINED_FUNCTION_609(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 24));
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

Swift::Void __swiftcall ConversationControlsManager.layoutStyleUpdated()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  if (OUTLINED_FUNCTION_204_0(*v1))
  {
    v2 = OUTLINED_FUNCTION_67_12();
    OUTLINED_FUNCTION_39_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 16));
    OUTLINED_FUNCTION_0_101();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

void ConversationControlsManager.bannerPresentationManagerDidDismissBanner(type:reason:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  int8x16_t v4;
  int8x8_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  int8x16_t v16;
  int8x16_t v17;
  char v18;

  outlined init with copy of ConversationControlsType(a1, (uint64_t)&v15);
  if (v18 == 2)
  {
    v14 = v15;
    if (OUTLINED_FUNCTION_411(*v2))
    {
      OUTLINED_FUNCTION_60_3();
      OUTLINED_FUNCTION_124_0();
      ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)();
    }

  }
  else if (v18 == 6
         && ((v4 = vorrq_s8(v16, v17),
              v5 = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)),
              v15 == (void *)24)
           ? (v6 = *(_QWORD *)&v5 == 0)
           : (v6 = 0),
             v6))
  {
    if ((unint64_t)(a2 - 1) <= 1)
      OUTLINED_FUNCTION_279_0(*v2);
  }
  else
  {
    if (OUTLINED_FUNCTION_411(*v2))
    {
      OUTLINED_FUNCTION_407();
      ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)();
    }
    OUTLINED_FUNCTION_14_15(0, v7, v8, v9, v10, v11, v12, v13, (uint64_t)v15);
  }
  OUTLINED_FUNCTION_289_0();
}

void ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  id v10;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_7_22();
  v8 = (_QWORD *)OUTLINED_FUNCTION_15();
  v8[2] = v4;
  v8[3] = v2;
  v8[4] = v0;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v9 = v4;
  v10 = v0;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  OUTLINED_FUNCTION_585(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_228_0();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_429();
}

void sub_1BD26A194(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  const void *v21;

  _Block_release(v21);

  OUTLINED_FUNCTION_63_19();
  OUTLINED_FUNCTION_268_0();
  OUTLINED_FUNCTION_52_1();
}

#error "1BD26A288: call analysis failed (funcsize=145)"

uint64_t ConversationControlsManager.notifyDelegates(about:forceUpdate:)(void *a1, uint64_t (**a2)(uint64_t, uint64_t), char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v6;
  void *v8;
  uint64_t (**v9)(uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[56];

  v4 = v3;
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (a1)
  {
    v8 = a1;
  }
  else
  {
    v8 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x270))();
    a2 = v9;
  }
  ObjectType = swift_getObjectType();
  v11 = a2[11];
  swift_unknownObjectRetain();
  if ((v11(ObjectType, (uint64_t)a2) & 1) == 0)
    return swift_unknownObjectRelease();
  ConversationControlsManager.controlsHUDUpdate(for:)(v8, a2);
  ConversationController.lookupActiveConversation()();
  v12 = v25;
  if (!v25)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, &demangling cache variable for type metadata for Conversation?);
LABEL_10:
    v16 = (*(uint64_t (**)(uint64_t))((*v6 & *v4) + 0x400))(v16);
    if (v16)
    {
      v19 = v18;
      v20 = swift_getObjectType();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 16))(v27, v27[41], v20, v19);
      v16 = swift_unknownObjectRelease();
    }
    goto LABEL_12;
  }
  v13 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  Conversation.isContinuitySession.getter(v12, v13);
  v15 = v14;
  v16 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_12:
  if ((*(uint64_t (**)(uint64_t))((*v6 & *v4) + 0x430))(v16))
  {
    v22 = v21;
    v23 = swift_getObjectType();
    (*(void (**)(_BYTE *, _QWORD, _QWORD, uint64_t, uint64_t))(v22 + 80))(v27, v27[42], a3 & 1, v23, v22);
    swift_unknownObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  Subject<>.send()();
  swift_unknownObjectRelease();
  return outlined destroy of ControlsHUDUpdate((uint64_t)v27);
}

uint64_t key path setter for ConversationControlsManager.updateForegroundCollaborationStateTask : ConversationControlsManager(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x9E0);
  v3 = swift_retain();
  return v2(v3);
}

void ConversationControlsManager.updateForegroundCollaborationStateTask.getter()
{
  ConversationControlsManager.incomingScreenSharingRequestActivity.getter();
}

void ConversationControlsManager.updateForegroundCollaborationStateTask.setter(uint64_t a1)
{
  ConversationControlsManager.incomingScreenSharingRequestActivity.setter(a1, &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_updateForegroundCollaborationStateTask);
}

void ConversationControlsManager.incomingScreenSharingRequestActivity.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  OUTLINED_FUNCTION_2_0();
  *v4 = a1;
  swift_release();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.updateForegroundCollaborationStateTask.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall ConversationControlsManager.updateForegroundCollaborationState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_136_1();
  v4 = (*(uint64_t (**)(void))(v3 + 2520))();
  if (v4)
  {
    MEMORY[0x1C3B73268](v4, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    OUTLINED_FUNCTION_22();
  }
  v5 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_147_0(v0, v6, v7, v5);
  v8 = OUTLINED_FUNCTION_24_10();
  v9 = static MainActor.shared.getter();
  v10 = (_QWORD *)OUTLINED_FUNCTION_15();
  v11 = MEMORY[0x1E0DF06E8];
  v10[2] = v9;
  v10[3] = v11;
  v10[4] = v8;
  v10[5] = v1;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  OUTLINED_FUNCTION_136_1();
  (*(void (**)(void))(v12 + 2528))();
  OUTLINED_FUNCTION_91();
}

uint64_t closure #1 in ConversationControlsManager.updateForegroundCollaborationState()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[19] = a4;
  v5 = type metadata accessor for Date();
  v4[20] = v5;
  v4[21] = *(_QWORD *)(v5 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (URL?, URL?));
  v4[26] = swift_task_alloc();
  v4[27] = type metadata accessor for StagedCollaboration(0);
  v4[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  v6 = type metadata accessor for URL();
  v4[40] = v6;
  v4[41] = *(_QWORD *)(v6 - 8);
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  v4[46] = swift_task_alloc();
  v4[47] = swift_task_alloc();
  v4[48] = type metadata accessor for Collaboration(0);
  v4[49] = swift_task_alloc();
  v4[50] = type metadata accessor for ForegroundCollaborationState(0);
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  v4[53] = swift_task_alloc();
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[56] = static MainActor.shared.getter();
  v4[57] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[58] = v7;
  return swift_task_switch();
}

uint64_t closure #1 in ConversationControlsManager.updateForegroundCollaborationState()()
{
  uint64_t v0;
  id *v1;
  void (*v2)(void);
  void *v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  _WORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  os_log_type_t v51;
  _WORD *v52;
  _QWORD *v53;
  uint64_t v54;

  v1 = (id *)(v0 + 152);
  v2 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 152)) + 0x7D8);
  v2();
  OUTLINED_FUNCTION_65_2();
  swift_storeEnumTagMultiPayload();
  if (one-time initialization token for shareableContent != -1)
    swift_once();
  v3 = *(void **)(v0 + 152);
  v4 = OUTLINED_FUNCTION_17_2();
  *(_QWORD *)(v0 + 472) = __swift_project_value_buffer(v4, (uint64_t)&static Logger.shareableContent);
  v5 = v3;
  v6 = OUTLINED_FUNCTION_56_17();
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(void **)(v0 + 152);
    v9 = (uint8_t *)OUTLINED_FUNCTION_105();
    v54 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 136315138;
    v2();
    ForegroundCollaborationState.description.getter();
    v11 = v10;
    OUTLINED_FUNCTION_35_2(v10, type metadata accessor for ForegroundCollaborationState);
    *(_QWORD *)(v0 + 144) = OUTLINED_FUNCTION_304(v11, v12, &v54);
    OUTLINED_FUNCTION_450();
    OUTLINED_FUNCTION_25();

    OUTLINED_FUNCTION_48(&dword_1BD004000, v6, v7, "updateForegroundCollaborationState: Current state: %s", v9);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  v13 = *v1;

  v14 = (uint64_t)*v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults;
  v16 = *(NSObject **)v14;
  v15 = *(_QWORD *)(v14 + 8);
  v17 = OUTLINED_FUNCTION_15_6();
  if ((OUTLINED_FUNCTION_39_0(v17, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 672)) & 1) == 0)
    goto LABEL_13;
  v16 = *(NSObject **)(v0 + 152);
  OUTLINED_FUNCTION_153();
  v19 = (*(uint64_t (**)(void))(v18 + 1912))();
  *(_QWORD *)(v0 + 480) = v19;
  if (!v19)
    goto LABEL_13;
  v6 = v19;
  OUTLINED_FUNCTION_153();
  v16 = v21;
  if (((*(uint64_t (**)(void))(v20 + 128))() & 1) != 0)
    goto LABEL_12;
  v22 = (char *)*v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_entitlementsChecker;
  v15 = v22[3];
  v23 = v22[4];
  OUTLINED_FUNCTION_565(v22);
  v53 = (Class *)((char *)&v6->isa + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier);
  v24 = *(uint64_t (**)(uint64_t))(v23 + 8);
  swift_bridgeObjectRetain();
  v25 = OUTLINED_FUNCTION_391();
  v16 = v24(v25);
  OUTLINED_FUNCTION_21_0();
  if ((v16 & 1) == 0)
  {
LABEL_12:

LABEL_13:
    OUTLINED_FUNCTION_491();
    OUTLINED_FUNCTION_56_17();
    v32 = OUTLINED_FUNCTION_19_9();
    if (OUTLINED_FUNCTION_23_5(v32))
    {
      v33 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_124_3(v33);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v16, (os_log_type_t)v15, "updateForegroundCollaborationState: Foreground app supports SharePlay or does not support Collaboration", (uint8_t *)v6);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_15;
  }
  v27 = *(_QWORD *)(v0 + 376);
  v26 = *(_QWORD *)(v0 + 384);
  OUTLINED_FUNCTION_153();
  v29 = *(void (**)(void))(v28 + 2280);
  *(_QWORD *)(v0 + 488) = v29;
  v29();
  OUTLINED_FUNCTION_69_0(v27, 1, v26);
  if (v42)
  {
    v31 = *(_QWORD *)(v0 + 376);
    outlined destroy of AccountUpdateNotice(*(_QWORD *)(v0 + 432), type metadata accessor for ForegroundCollaborationState);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v31, &demangling cache variable for type metadata for Collaboration?);
  }
  else
  {
    v39 = *(_QWORD *)(v0 + 392);
    OUTLINED_FUNCTION_655(*(_QWORD *)(v0 + 376), v30, type metadata accessor for Collaboration);
    v40 = *(_QWORD *)(v39 + 40);
    if (v40)
    {
      v41 = *(_QWORD *)(v39 + 32);
      v42 = v41 == *v53 && v40 == v53[1];
      if (v42)
      {
        OUTLINED_FUNCTION_15_12(v41, type metadata accessor for ForegroundCollaborationState);
LABEL_29:
        v26 = *(_QWORD *)(v0 + 424);
        v44 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 16))(v26, *(_QWORD *)(v0 + 392) + *(int *)(*(_QWORD *)(v0 + 384) + 44), *(_QWORD *)(v0 + 320));
        OUTLINED_FUNCTION_43_19(v44, type metadata accessor for Collaboration);
        OUTLINED_FUNCTION_352();
        OUTLINED_FUNCTION_655(v26, v45, type metadata accessor for ForegroundCollaborationState);
        goto LABEL_30;
      }
      v43 = OUTLINED_FUNCTION_13();
      LOBYTE(v26) = v43;
      OUTLINED_FUNCTION_15_12(v43, type metadata accessor for ForegroundCollaborationState);
      if ((v26 & 1) != 0)
        goto LABEL_29;
    }
    else
    {
      outlined destroy of AccountUpdateNotice(*(_QWORD *)(v0 + 432), type metadata accessor for ForegroundCollaborationState);
    }
    outlined destroy of AccountUpdateNotice(*(_QWORD *)(v0 + 392), type metadata accessor for Collaboration);
  }
  swift_storeEnumTagMultiPayload();
LABEL_30:
  v16 = *(NSObject **)(v0 + 152);
  OUTLINED_FUNCTION_153();
  v47 = (*(uint64_t (**)(void))(v46 + 776))();
  *(_QWORD *)(v0 + 496) = v47;
  if (v47)
  {
    v48 = (void *)v47;
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = closure #1 in ConversationControlsManager.updateForegroundCollaborationState();
    v49 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    v50 = (_QWORD *)(v0 + 80);
    v50[1] = 0x40000000;
    v50[2] = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSArray, @unowned NSError?) -> () with result type [SWShareableContent];
    v50[3] = &block_descriptor_404;
    v50[4] = v49;
    objc_msgSend(v48, sel_retrieveShareableContentWithCompletion_, v50);
    return swift_continuation_await();
  }
  OUTLINED_FUNCTION_491();
  OUTLINED_FUNCTION_56_17();
  v51 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_23_5(v51))
  {
    v52 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_124_3(v52);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v16, (os_log_type_t)v26, "updateForegroundCollaborationState: contentExtractor is nil", (uint8_t *)v6);
    OUTLINED_FUNCTION_60();
  }

LABEL_15:
  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    v35 = *(_QWORD *)(v0 + 424);
    OUTLINED_FUNCTION_447(*(_QWORD *)(v0 + 432), v34, type metadata accessor for ForegroundCollaborationState);
    OUTLINED_FUNCTION_153();
    (*(void (**)(uint64_t))(v36 + 2016))(v35);
  }
  v37 = *(_QWORD *)(v0 + 440);
  OUTLINED_FUNCTION_68_2(*(_QWORD *)(v0 + 432));
  OUTLINED_FUNCTION_68_2(v37);
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  OUTLINED_FUNCTION_541();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_81_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_641();
  OUTLINED_FUNCTION_618();
  OUTLINED_FUNCTION_647();
  OUTLINED_FUNCTION_617();
  OUTLINED_FUNCTION_545();
  OUTLINED_FUNCTION_616();
  OUTLINED_FUNCTION_615();
  OUTLINED_FUNCTION_614();
  OUTLINED_FUNCTION_613();
  OUTLINED_FUNCTION_612();
  OUTLINED_FUNCTION_611();
  OUTLINED_FUNCTION_610();
  OUTLINED_FUNCTION_602();
  OUTLINED_FUNCTION_550();
  OUTLINED_FUNCTION_601();
  OUTLINED_FUNCTION_599();
  OUTLINED_FUNCTION_532();
  OUTLINED_FUNCTION_598_0();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_173_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_459();
  *(_QWORD *)(v0 + 504) = *(_QWORD *)(v0 + 48);
  return OUTLINED_FUNCTION_4_4();
}

{
  uint8_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint8_t *v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  void *v10;
  _WORD *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(unint64_t, uint64_t);
  char v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD);
  char *v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  _WORD *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  OUTLINED_FUNCTION_491();
  v2 = *(_QWORD *)(v1 + 120);
  if (v2 >> 62)
    goto LABEL_38;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_86();
  if (!v3)
  {
LABEL_10:
    v7 = *(NSObject **)(v1 + 472);
    OUTLINED_FUNCTION_19_1();
    Logger.logObject.getter();
    v8 = OUTLINED_FUNCTION_19_9();
    v9 = OUTLINED_FUNCTION_23_5(v8);
    v10 = *(void **)(v1 + 480);
    if (v9)
    {
      v11 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_124_3(v11);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v7, (os_log_type_t)v3, "updateForegroundCollaborationState: No shareable content", v0);
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_22;
  }
LABEL_3:
  v0 = 0;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v4 = (id)MEMORY[0x1C3B73D18](v0, v2);
    else
      v4 = *(id *)(v2 + 8 * (_QWORD)v0 + 32);
    v5 = v4;
    v6 = v0 + 1;
    if (__OFADD__(v0, 1))
    {
      __break(1u);
LABEL_38:
      OUTLINED_FUNCTION_86();
      v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3)
        goto LABEL_10;
      goto LABEL_3;
    }
    if (objc_msgSend(v4, sel_hasPossibleCollaborationRepresentation))
      break;

    ++v0;
    if (v6 == (uint8_t *)v3)
      goto LABEL_10;
  }
  OUTLINED_FUNCTION_19_1();
  v12 = v5;
  v13 = objc_msgSend(v12, sel_highlightURL);
  if (v13)
  {
    v14 = v13;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v15 = 0;
  }
  else
  {
    v15 = 1;
  }
  v16 = *(_QWORD *)(v1 + 320);
  v17 = *(_QWORD *)(v1 + 304);
  v18 = OUTLINED_FUNCTION_0_87(*(_QWORD *)(v1 + 296), v15);
  OUTLINED_FUNCTION_624(v18, v19, &demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_69_0(v17, 1, v16);
  if (v25)
  {
    v20 = *(_QWORD *)(v1 + 312);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(*(_QWORD *)(v1 + 304), &demangling cache variable for type metadata for URL?);
    OUTLINED_FUNCTION_0_87(v20, 1);
LABEL_21:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(*(_QWORD *)(v1 + 312), &demangling cache variable for type metadata for URL?);
    v26 = *(void **)(v1 + 496);
    v27 = *(void **)(v1 + 480);
    v10 = *(void **)(v1 + 424);
    v28 = *(_QWORD *)(v1 + 432);
    v2 = *(_QWORD *)(v1 + 400);
    v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool))
                 + 48);
    StagedCollaboration.init(foregroundApp:shareableContent:)(v27, v12, (uint64_t)v10);

    OUTLINED_FUNCTION_594();
    *((_BYTE *)v10 + v29) = 0;
    OUTLINED_FUNCTION_311_0();
    swift_storeEnumTagMultiPayload();
    outlined init with take of StagedCollaboration((uint64_t)v10, v28, type metadata accessor for ForegroundCollaborationState);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v1 + 320);
  v22 = *(_QWORD *)(v1 + 328);
  v23 = *(_QWORD *)(v1 + 312);
  URL.withoutFragment.getter(v23);
  v24 = *(uint64_t (**)(unint64_t, uint64_t))(v22 + 8);
  OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_69_0(v23, 1, v21);
  if (v25)
    goto LABEL_21;
  v33 = *(void (**)(uint64_t))(v1 + 488);
  v34 = *(_QWORD *)(v1 + 384);
  v35 = *(_QWORD *)(v1 + 368);
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 328) + 32);
  v37 = v36(*(_QWORD *)(v1 + 360), *(_QWORD *)(v1 + 312), *(_QWORD *)(v1 + 320));
  v33(v37);
  OUTLINED_FUNCTION_69_0(v35, 1, v34);
  if (v38)
  {
    v39 = *(_QWORD *)(v1 + 288);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(*(_QWORD *)(v1 + 368), &demangling cache variable for type metadata for Collaboration?);
    OUTLINED_FUNCTION_0_87(v39, 1);
LABEL_30:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(*(_QWORD *)(v1 + 288), &demangling cache variable for type metadata for URL?);
    goto LABEL_31;
  }
  v40 = *(uint8_t **)(v1 + 320);
  v41 = *(_QWORD *)(v1 + 288);
  v42 = OUTLINED_FUNCTION_291(*(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 368) + *(int *)(*(_QWORD *)(v1 + 384) + 44), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 328) + 16));
  OUTLINED_FUNCTION_15_12(v42, type metadata accessor for Collaboration);
  URL.withoutFragment.getter(v41);
  OUTLINED_FUNCTION_380();
  OUTLINED_FUNCTION_69_0(v41, 1, (uint64_t)v40);
  if (v43)
    goto LABEL_30;
  v51 = *(_QWORD *)(v1 + 352);
  v50 = *(NSObject **)(v1 + 360);
  v36(v51, *(_QWORD *)(v1 + 288), *(_QWORD *)(v1 + 320));
  v52 = OUTLINED_FUNCTION_64();
  if ((MEMORY[0x1C3B6FD94](v52) & 1) == 0)
  {
    v24(*(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 320));
LABEL_31:
    OUTLINED_FUNCTION_77_0(*(_QWORD *)(v1 + 280), v44, v45, *(_QWORD *)(v1 + 320));
    v46 = OUTLINED_FUNCTION_64();
    outlined init with copy of ConversationControlsAppLaunchButtonType(v46, v47, v48);
    v49 = (char *)&loc_1BD26B5E4 + *((int *)qword_1BD26BC08 + swift_getEnumCaseMultiPayload());
    __asm { BR              X10 }
  }
  OUTLINED_FUNCTION_580();
  v53 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_5_3(v53))
  {
    v54 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_220_0(v54);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v50, (os_log_type_t)v51, "updateForegroundCollaborationState: Staged highlight URL matches current conversation collaboration, setting state to active", v40);
    OUTLINED_FUNCTION_60();
  }
  v10 = *(void **)(v1 + 496);
  v55 = *(void **)(v1 + 480);
  v56 = *(_QWORD *)(v1 + 432);
  v2 = *(_QWORD *)(v1 + 360);
  v59 = *(_QWORD *)(v1 + 352);
  v57 = *(_QWORD *)(v1 + 320);

  v58 = v24(v2, v57);
  OUTLINED_FUNCTION_315(v58, type metadata accessor for ForegroundCollaborationState);
  v36(v56, v59, v57);
  OUTLINED_FUNCTION_352();
LABEL_22:
  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    v31 = *(uint64_t **)(v1 + 152);
    OUTLINED_FUNCTION_447(*(_QWORD *)(v1 + 432), v30, type metadata accessor for ForegroundCollaborationState);
    OUTLINED_FUNCTION_280(*v31);
  }
  OUTLINED_FUNCTION_65_14();
  OUTLINED_FUNCTION_68_2(v2);
  OUTLINED_FUNCTION_68_2((uint64_t)v10);
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  OUTLINED_FUNCTION_541();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_641();
  OUTLINED_FUNCTION_618();
  OUTLINED_FUNCTION_647();
  OUTLINED_FUNCTION_617();
  OUTLINED_FUNCTION_545();
  OUTLINED_FUNCTION_616();
  OUTLINED_FUNCTION_615();
  OUTLINED_FUNCTION_614();
  OUTLINED_FUNCTION_613();
  OUTLINED_FUNCTION_612();
  OUTLINED_FUNCTION_611();
  OUTLINED_FUNCTION_610();
  OUTLINED_FUNCTION_602();
  OUTLINED_FUNCTION_550();
  OUTLINED_FUNCTION_601();
  OUTLINED_FUNCTION_599();
  OUTLINED_FUNCTION_532();
  OUTLINED_FUNCTION_598_0();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_173_0(*(uint64_t (**)(void))(v1 + 8));
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;

  v3 = *(NSObject **)(v0 + 472);
  OUTLINED_FUNCTION_491();
  swift_willThrow();
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  Logger.logObject.getter();
  v4 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_4_14(v4))
  {
    v5 = *(_QWORD *)(v0 + 504);
    v6 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 136315138;
    *(_QWORD *)(v0 + 128) = v5;
    OUTLINED_FUNCTION_15_63();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v7 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 136) = OUTLINED_FUNCTION_45_5(v7, v8);
    OUTLINED_FUNCTION_253_0();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, (os_log_type_t)v1, "Error updating shareable content: %s", v6);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  v9 = *(void **)(v0 + 480);

  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    v11 = *(uint64_t **)(v0 + 152);
    OUTLINED_FUNCTION_447(*(_QWORD *)(v0 + 432), v10, type metadata accessor for ForegroundCollaborationState);
    OUTLINED_FUNCTION_280(*v11);
  }
  OUTLINED_FUNCTION_65_14();
  OUTLINED_FUNCTION_68_2(v2);
  OUTLINED_FUNCTION_68_2(v1);
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  OUTLINED_FUNCTION_578();
  OUTLINED_FUNCTION_541();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_641();
  OUTLINED_FUNCTION_618();
  OUTLINED_FUNCTION_647();
  OUTLINED_FUNCTION_617();
  OUTLINED_FUNCTION_545();
  OUTLINED_FUNCTION_616();
  OUTLINED_FUNCTION_615();
  OUTLINED_FUNCTION_614();
  OUTLINED_FUNCTION_613();
  OUTLINED_FUNCTION_612();
  OUTLINED_FUNCTION_611();
  OUTLINED_FUNCTION_610();
  OUTLINED_FUNCTION_602();
  OUTLINED_FUNCTION_550();
  OUTLINED_FUNCTION_601();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_599();
  OUTLINED_FUNCTION_532();
  OUTLINED_FUNCTION_598_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSArray, @unowned NSError?) -> () with result type [SWShareableContent](uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
    return specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(v3, a3);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for SWShareableContent);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  return specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(v3, v5);
}

void ConversationControlsManager.suppressingSystemNotices.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  if (OUTLINED_FUNCTION_109_9(*v1))
  {
    v2 = OUTLINED_FUNCTION_67_12();
    OUTLINED_FUNCTION_39_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 16));
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall ConversationControlsManager.scheduleDismissTimer()()
{
  _QWORD *v0;

  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA10))(1);
}

Swift::Void __swiftcall ConversationControlsManager.invalidateDismissTimer()()
{
  _QWORD *v0;

  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA10))(0);
}

Swift::Void __swiftcall ConversationControlsManager.invalidateAndRescheduleDismissTimer(reschedule:)(Swift::Bool reschedule)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (OUTLINED_FUNCTION_131_4(*v1))
  {
    v4 = OUTLINED_FUNCTION_17_49();
    OUTLINED_FUNCTION_560(v4, v4, *(_QWORD *)(v2 + 8));
    OUTLINED_FUNCTION_10();
  }
  if (OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))((*v3 & *v1) + 0x430)))
  {
    v6 = v5;
    v7 = OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_560(v7, v7, *(_QWORD *)(v6 + 8));
    OUTLINED_FUNCTION_277();
  }
  else
  {
    OUTLINED_FUNCTION_91();
  }
}

void key path setter for ConversationControlsManager.screenShareCountdownTimer : ConversationControlsManager(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  ConversationControlsManager.screenShareCountdownTimer.setter(v1);
}

id ConversationControlsManager.screenShareCountdownTimer.willset()
{
  uint64_t v0;
  id *v1;
  id result;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_screenShareCountdownTimer);
  swift_beginAccess();
  result = *v1;
  if (*v1)
    return objc_msgSend(result, sel_invalidate);
  return result;
}

void ConversationControlsManager.screenShareCountdownTimer.didset(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void **v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  id v8;
  id v9;
  char v10;
  uint64_t (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  _BYTE v13[32];

  v2 = v1;
  v4 = (void **)((char *)v2 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_screenShareCountdownTimer);
  v5 = swift_beginAccess();
  v6 = *v4;
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (*v4)
  {
    if (!a1)
      goto LABEL_8;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
    v8 = v6;
    v9 = a1;
    v10 = static NSObject.== infix(_:_:)();

    if ((v10 & 1) != 0)
      return;
    if (*v4)
      goto LABEL_8;
  }
  else if (!a1)
  {
    return;
  }
  v11 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((*v7 & *v2) + 0x650))(v13);
  *(_QWORD *)(v12 + 8) = 0;
  *(_BYTE *)(v12 + 16) = 1;
  v5 = v11(v13, 0);
LABEL_8:
  (*(void (**)(uint64_t))((*v7 & *v2) + 0xA00))(v5);
}

void ConversationControlsManager.screenShareCountdownTimer.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsManager.screenShareCountdownTimer.setter(void *a1)
{
  uint64_t v1;
  id *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v3 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_screenShareCountdownTimer);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  v5 = *v3;
  ConversationControlsManager.screenShareCountdownTimer.willset();
  v6 = *v3;
  *v3 = a1;
  v7 = a1;

  ConversationControlsManager.screenShareCountdownTimer.didset(v4);
  OUTLINED_FUNCTION_289_0();
}

uint64_t ConversationControlsManager.handleToggleLayoutAction()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults + 8);
  v2 = OUTLINED_FUNCTION_15_6();
  v3 = OUTLINED_FUNCTION_101(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 248));
  (*(void (**)(BOOL, uint64_t, uint64_t))(v1 + 256))((v3 & 1) == 0, v2, v1);
  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9C0))();
}

id ConversationControlsManager.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_init);
}

void ConversationControlsManager.init()()
{
  OUTLINED_FUNCTION_300();
  __break(1u);
}

Swift::Void __swiftcall ConversationControlsManager.joinButtonTapped()()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v5 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v6))
  {
    v7 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v7);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v8, v9, "joinButtonTapped");
    OUTLINED_FUNCTION_60();
  }

  ConversationController.joinConversation()();
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall ConversationControlsManager.leaveButtonTapped()()
{
  uint64_t *v0;
  uint64_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  _WORD *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_93();
  v5 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_3_81();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v13, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *(_QWORD *)v2 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_131_2(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104));
  v14 = OUTLINED_FUNCTION_132_2();
  OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if ((v14 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v15 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v15, (uint64_t)&static Logger.conversationControls);
  v16 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_7_9(v16))
  {
    v17 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_581(v17);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v14, v11, "leaveButtonTapped", v2);
    OUTLINED_FUNCTION_60();
  }

  v18 = (void *)OUTLINED_FUNCTION_132_4(*v5);
  if (v18)
  {
    v19 = v18;
    if (objc_msgSend(v18, sel_avMode) && objc_msgSend(v19, sel_eligibleForDowngradeToAVModeNoneFromUI))
    {
      ConversationController.downgradeToAVLess()();
      if (OUTLINED_FUNCTION_35_24(*v5))
      {
        v20 = OUTLINED_FUNCTION_15_69();
        (*(void (**)(uint64_t, uint64_t))(v7 + 64))(v20, v7);
        OUTLINED_FUNCTION_10();
      }
      ConversationControlsManager.shouldShowAVLessLeaveConfirmation.setter(1);
      OUTLINED_FUNCTION_133_3();

      goto LABEL_18;
    }

  }
  ConversationControlsManager.declineIncomingScreenShareRequests()();
  ConversationController.leaveConversation(reason:)();
  if (OUTLINED_FUNCTION_35_24(*v5))
  {
    OUTLINED_FUNCTION_83_13();
    OUTLINED_FUNCTION_590();
    v21 = OUTLINED_FUNCTION_569(19);
    v22(v21);
    OUTLINED_FUNCTION_10();
  }
  v23 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_396(v23, v24, (uint64_t *)&demangling cache variable for type metadata for Date?);
  v25 = OUTLINED_FUNCTION_69_0(v1, 1, v7);
  if (v26)
  {
    OUTLINED_FUNCTION_30_7(v25, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    OUTLINED_FUNCTION_260_0((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    v27 = OUTLINED_FUNCTION_555();
    CNKCoreAnalyticsReporter.reportAVLessLeaveConfirmation(presentedAt:action:)(v27, 1);
    OUTLINED_FUNCTION_101((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  OUTLINED_FUNCTION_552();
LABEL_18:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationControlsManager.dismissTapped(button:)(UIControl *button)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  if (OUTLINED_FUNCTION_109_9(*v2))
  {
    v3 = OUTLINED_FUNCTION_67_12();
    OUTLINED_FUNCTION_39_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 144));
    OUTLINED_FUNCTION_0_101();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

Swift::Void __swiftcall ConversationControlsManager.openApp(withBundleIdentifier:)(Swift::String withBundleIdentifier)
{
  uint64_t v1;
  _QWORD *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  object = withBundleIdentifier._object;
  countAndFlagsBits = withBundleIdentifier._countAndFlagsBits;
  if (withBundleIdentifier._countAndFlagsBits == 0xD000000000000017
    && withBundleIdentifier._object == (void *)0x80000001BD67DEE0
    || (v5 = OUTLINED_FUNCTION_13(), (v5 & 1) != 0))
  {
    if (OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x400)))
    {
      v6 = OUTLINED_FUNCTION_67_12();
      OUTLINED_FUNCTION_39_0(v6, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 40));
      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_59(v5, &lazy cache variable for type metadata for FBSOpenApplicationOptions);
    v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD645380;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_355();
    v10 = MEMORY[0x1E0DEAFA0];
    *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(inited + 72) = 1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_355();
    *(_QWORD *)(inited + 168) = v10;
    *(_BYTE *)(inited + 144) = 1;
    v11 = Dictionary.init(dictionaryLiteral:)();
    @nonobjc FBSOpenApplicationOptions.__allocating_init(dictionary:)(v11);
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(), sel_serviceWithDefaultShellEndpoint);
    if (v14)
    {
      v15 = v14;
      v16 = (void *)MEMORY[0x1C3B72E00](countAndFlagsBits, object);
      OUTLINED_FUNCTION_7_0();
      swift_unknownObjectWeakInit();
      v17 = OUTLINED_FUNCTION_117((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> (), v23, MEMORY[0x1E0C809B0], 1107296256, v24, v25);
      swift_release();
      objc_msgSend(v15, sel_openApplication_withOptions_completion_, v16, v13, v17);
      _Block_release(v17);

    }
    else
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v18 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v18, (uint64_t)&static Logger.conversationControls);
      v19 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_5_3(v19))
      {
        v20 = (_WORD *)OUTLINED_FUNCTION_7_8();
        OUTLINED_FUNCTION_47_2(v20);
        OUTLINED_FUNCTION_2_5(&dword_1BD004000, v21, v22, "Unable to launch App because FBSOpenApplicationService was null");
        OUTLINED_FUNCTION_60();
      }

    }
  }
  OUTLINED_FUNCTION_20_9();
}

void @nonobjc FBSOpenApplicationOptions.__allocating_init(dictionary:)(uint64_t a1)
{
  NSDictionary v1;
  id v2;

  if (a1)
  {
    v1.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    v1.super.isa = 0;
  }
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_optionsWithDictionary_, v1.super.isa);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_18();
}

void closure #1 in ConversationControlsManager.openApp(withBundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v3 = a3 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x400))();
    v8 = v7;

    if (v6)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(0x6E6968636E75614CLL, 0xED00007070612067, 1, ObjectType, v8);
      swift_unknownObjectRelease();
    }
  }
}

#error "1BD26CCE8: call analysis failed (funcsize=62)"

void closure #1 in ConversationControlsManager.openMessagesButtonTapped()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;

  v2 = a2 + 16;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1BD004000, v4, v5, "Present HUD: openMessagesButtonTapped (transition)", v6, 2u);
    MEMORY[0x1C3B751B8](v6, -1, -1);
  }

  swift_beginAccess();
  v7 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
  if (v7)
  {
    v8 = v7;
    v9 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x400))();
    v11 = v10;

    if (v9)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v11 + 56))(ObjectType, v11);
      swift_unknownObjectRelease();
    }
  }
}

Swift::Void __swiftcall ConversationControlsManager.toggleMicButtonTapped(button:)(UIControl *button)
{
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;

  OUTLINED_FUNCTION_93();
  v4 = v1;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v7 = OUTLINED_FUNCTION_7_22();
  *v2 = v7;
  OUTLINED_FUNCTION_17(v7, *MEMORY[0x1E0DEF740]);
  v8 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v8 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v9 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
  v10 = OUTLINED_FUNCTION_60_3();
  Logger.logObject.getter();
  v11 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v11))
  {
    v12 = (uint8_t *)OUTLINED_FUNCTION_105();
    v13 = OUTLINED_FUNCTION_105();
    v20 = v13;
    *(_DWORD *)v12 = 136315138;
    if (OUTLINED_FUNCTION_9(v13, sel_isSelected))
      v15 = 1702195828;
    else
      v15 = 0x65736C6166;
    v16 = OUTLINED_FUNCTION_304(v15, v14, &v20);
    OUTLINED_FUNCTION_61_0(v16);
    OUTLINED_FUNCTION_253_0();

    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v8, (os_log_type_t)v2, "toggleMicButtonTapped, currentState: %s", v12);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  ConversationController.toggleLocalAudio()();
  OUTLINED_FUNCTION_412();
  v17 = objc_msgSend(*(id *)((char *)v4 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_frontmostCall);
  if (v17)
  {
    v18 = v17;
    v19 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x478));
    if (v19)
    {
      objc_msgSend(v19, sel_localAudioToggledWithIsMuted_, OUTLINED_FUNCTION_9((uint64_t)v19, sel_isUplinkMuted));

      OUTLINED_FUNCTION_19_0();
    }
    else
    {

    }
  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationControlsManager.toggleVideoButtonTapped(button:)(UIControl *button)
{
  os_log_type_t v1;
  uint64_t v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  v4 = OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_643();
  v5 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v5))
  {
    v6 = (uint8_t *)OUTLINED_FUNCTION_105();
    v7 = OUTLINED_FUNCTION_105();
    v10 = v7;
    *(_DWORD *)v6 = 136315138;
    if (OUTLINED_FUNCTION_9(v7, sel_isSelected))
      v9 = 1702195828;
    else
      v9 = 0x65736C6166;
    OUTLINED_FUNCTION_304(v9, v8, &v10);
    OUTLINED_FUNCTION_32_4();
    OUTLINED_FUNCTION_253_0();

    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_48(&dword_1BD004000, &button->super.super.super, v1, "toggleVideoButtonTapped, currentState: %s", v6);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  ConversationControlsManager.toggleVideoButtonTapped()();
  OUTLINED_FUNCTION_9_5();
}

Swift::Void __swiftcall ConversationControlsManager.toggleVideoButtonTapped()()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    ConversationController.toggleLocalVideo(shouldPauseIfStopped:)(0);
    OUTLINED_FUNCTION_412();
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  void (*v12)(_QWORD *, _QWORD);
  uint64_t v13;
  void *v14;
  double v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  _QWORD aBlock[6];

  v5 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v5);
  if (result)
  {
    v7 = (_QWORD *)result;
    v8 = swift_allocObject();
    v9 = *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults + 8);
    ObjectType = swift_getObjectType();
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 384))(ObjectType, v9);
    *(_QWORD *)(v8 + 16) = v11;
    v12 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))((*MEMORY[0x1E0DEEDD8] & *v7)
                                                                                     + 0x650))(aBlock);
    *(_QWORD *)(v13 + 8) = v11;
    *(_BYTE *)(v13 + 16) = 0;
    v12(aBlock, 0);
    v14 = (void *)objc_opt_self();
    v15 = (*(double (**)(uint64_t, uint64_t))(v9 + 392))(ObjectType, v9);
    v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v16;
    v17[3] = v8;
    v17[4] = a2;
    v17[5] = a3;
    aBlock[4] = partial apply for closure #1 in closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:);
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
    aBlock[3] = &block_descriptor_447;
    v18 = _Block_copy(aBlock);
    swift_retain();
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
    swift_release();
    v19 = objc_msgSend(v14, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v18, v15);
    _Block_release(v18);
    ConversationControlsManager.screenShareCountdownTimer.setter(v19);

    return swift_release();
  }
  return result;
}

void closure #1 in closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  void (*v12)(_BYTE *, _QWORD);
  uint64_t v13;
  id v14;
  _BYTE v15[32];

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1C3B752C0](v7);
  if (v8)
  {
    v9 = (_QWORD *)v8;
    v10 = (uint64_t *)(a3 + 16);
    swift_beginAccess();
    v11 = *v10 - 1;
    if (__OFSUB__(*v10, 1))
    {
      __break(1u);
    }
    else
    {
      *v10 = v11;
      if (v11 < 1)
      {
        objc_msgSend(a1, sel_invalidate);
        ConversationControlsManager.screenShareCountdownTimer.setter(0);
        (*(void (**)(_QWORD, _QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x7F8))(0, 0, 0);
        v14 = objc_retain(*(id *)((char *)v9
                                + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController));
        ConversationController.startScreenSharingSession()();

        if (a4)
          a4();
      }
      else
      {
        v12 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v9)
                                                                                       + 0x650))(v15);
        *(_QWORD *)(v13 + 8) = v11;
        *(_BYTE *)(v13 + 16) = 0;
        v12(v15, 0);
      }

    }
  }
}

void closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(char a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *oslog;

  if ((a1 & 1) != 0)
  {
    v5 = type metadata accessor for SpringBoardUtilities();
    swift_retain();
    specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)(v5, a2, a3);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
    oslog = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1BD004000, oslog, v7, "Ignoring starting screen sharing. User opted to not replace current activity.", v8, 2u);
      MEMORY[0x1C3B751B8](v8, -1, -1);
    }

  }
}

void closure #1 in closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(char a1, void (*a2)(void))
{
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  NSObject *v6;

  if ((a1 & 1) != 0)
  {
    a2();
    OUTLINED_FUNCTION_36();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_17_2();
    v6 = OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
    v4 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_108_4(v6))
    {
      v5 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_52_3(v5);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v6, v4, "Ignoring starting screen sharing. Springboard wasn't unlocked.", v2);
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_7_1(v6);
  }
}

void specialized ConversationControlsManager.promptForReplaceAlertIfNeeded(_:)(_QWORD *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  NSObject *v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  Swift::String v44;
  Swift::String_optional v45;
  Swift::String v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  Swift::String v56;
  Swift::String_optional v57;
  Swift::String v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  Swift::String v66;
  Swift::String_optional v67;
  Swift::String v68;
  uint64_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  Swift::String v77;
  Swift::String_optional v78;
  Swift::String v79;
  Swift::String v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  Swift::String v85;
  Swift::String_optional v86;
  Swift::String v87;
  Swift::String v88;
  void *v89;
  id v90;
  uint64_t v91;
  Swift::String v92;
  Swift::String v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  id v99;
  id v100;
  uint64_t v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  NSObject *v110;
  Swift::String aBlock;
  void (*v112)(uint64_t, void *);
  void *v113;
  uint64_t (*v114)(uint64_t);
  uint64_t v115;
  id v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  Swift::String v120;
  Swift::String v121;
  Swift::String v122;
  Swift::String v123;
  Swift::String v124;

  v6 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v12 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290);
  v13 = swift_retain();
  v14 = v12(v13);
  if (!v14)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)&static Logger.conversationControls);
    v22 = Logger.logObject.getter();
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1BD004000, v22, v23, "No current conversation, not starting screen sharing", v24, 2u);
      MEMORY[0x1C3B751B8](v24, -1, -1);
    }

    v110 = Logger.logObject.getter();
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v110, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1BD004000, v110, v25, "Ignoring starting screen sharing. User opted to not replace current activity.", v26, 2u);
      MEMORY[0x1C3B751B8](v26, -1, -1);
    }
    goto LABEL_20;
  }
  v110 = v14;
  v15 = (void *)(*(uint64_t (**)(void))((*v11 & *a1) + 0x8D0))();
  if (!v15)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v27 = type metadata accessor for Logger();
    __swift_project_value_buffer(v27, (uint64_t)&static Logger.conversationControls);
    v28 = Logger.logObject.getter();
    v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1BD004000, v28, v29, "No current activity, not prompting to replace", v30, 2u);
      MEMORY[0x1C3B751B8](v30, -1, -1);
    }

    v31 = type metadata accessor for SpringBoardUtilities();
    swift_retain();
    specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)(v31, a2, a3);
LABEL_20:
    swift_release();
    swift_release();

    return;
  }
  v109 = v15;
  if ((objc_msgSend(v15, sel_isLocallyInitiated) & 1) == 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v32 = type metadata accessor for Logger();
    __swift_project_value_buffer(v32, (uint64_t)&static Logger.conversationControls);
    v33 = Logger.logObject.getter();
    v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_1BD004000, v33, v34, "Prompting to replace current activity with screen sharing activity", v35, 2u);
      MEMORY[0x1C3B751B8](v35, -1, -1);
    }
    v107 = v7;

    v119 = Dictionary.init(dictionaryLiteral:)();
    TUConversationActivitySession.title.getter();
    v108 = v10;
    if (v37)
    {
      v38 = v36;
      v39 = v37;
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v105 = v41;
      v106 = v40;
      v42 = (void *)objc_opt_self();
      v43 = objc_msgSend(v42, sel_conversationKit);
      v44._countAndFlagsBits = 0xD000000000000015;
      v120._object = (void *)0xE000000000000000;
      v44._object = (void *)0x80000001BD680850;
      v45.value._countAndFlagsBits = 0x61737265766E6F43;
      v45.value._object = (void *)0xEF74694B6E6F6974;
      v46._countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      v120._countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v44, v45, (NSBundle)v43, v46, v120);

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1BD6441D0;
      v48 = (void *)MEMORY[0x1E0DEA968];
      *(_QWORD *)(v47 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v47 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v47 + 32) = v38;
      *(_QWORD *)(v47 + 40) = v39;
      v49 = String.init(format:_:)();
      v51 = v50;
      swift_bridgeObjectRelease();
      v113 = v48;
      aBlock._countAndFlagsBits = v49;
      aBlock._object = v51;
      specialized Dictionary.subscript.setter((uint64_t)&aBlock, v106, v105);
      v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v54 = v53;
      v55 = objc_msgSend(v42, sel_conversationKit);
      v121._object = (void *)0xE000000000000000;
      v56._object = (void *)0x80000001BD680870;
      v56._countAndFlagsBits = 0xD000000000000017;
      v57.value._countAndFlagsBits = 0x61737265766E6F43;
      v57.value._object = (void *)0xEF74694B6E6F6974;
      v58._countAndFlagsBits = 0;
      v58._object = (void *)0xE000000000000000;
      v121._countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v56, v57, (NSBundle)v55, v58, v121);

      v59 = String.init(format:_:)();
      v61 = v60;
      swift_bridgeObjectRelease();
      v113 = v48;
      aBlock._countAndFlagsBits = v59;
      aBlock._object = v61;
      v62 = v52;
    }
    else
    {
      v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v54 = v64;
      v65 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v66._countAndFlagsBits = 0xD000000000000016;
      v122._object = (void *)0xE000000000000000;
      v66._object = (void *)0x80000001BD6807F0;
      v67.value._countAndFlagsBits = 0x61737265766E6F43;
      v67.value._object = (void *)0xEF74694B6E6F6974;
      v68._countAndFlagsBits = 0;
      v68._object = (void *)0xE000000000000000;
      v122._countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v66, v67, (NSBundle)v65, v68, v122);

      v69 = String.init(format:_:)();
      v71 = v70;
      swift_bridgeObjectRelease();
      v113 = (void *)MEMORY[0x1E0DEA968];
      aBlock._countAndFlagsBits = v69;
      aBlock._object = v71;
      v62 = v63;
    }
    specialized Dictionary.subscript.setter((uint64_t)&aBlock, v62, v54);
    v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v74 = v73;
    v75 = (void *)objc_opt_self();
    v76 = objc_msgSend(v75, (SEL)&selRef_setCornerRadius_ + 6);
    v77._countAndFlagsBits = 0xD000000000000010;
    v123._object = (void *)0xE000000000000000;
    v77._object = (void *)0x80000001BD680810;
    v78.value._countAndFlagsBits = 0x61737265766E6F43;
    v78.value._object = (void *)0xEF74694B6E6F6974;
    v79._countAndFlagsBits = 0;
    v79._object = (void *)0xE000000000000000;
    v123._countAndFlagsBits = 0;
    v80 = NSLocalizedString(_:tableName:bundle:value:comment:)(v77, v78, (NSBundle)v76, v79, v123);

    v113 = (void *)MEMORY[0x1E0DEA968];
    aBlock = v80;
    specialized Dictionary.subscript.setter((uint64_t)&aBlock, v72, v74);
    v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v83 = v82;
    v84 = objc_msgSend(v75, (SEL)&selRef_setCornerRadius_ + 6);
    v124._object = (void *)0xE000000000000000;
    v85._countAndFlagsBits = 0x4C45434E4143;
    v85._object = (void *)0xE600000000000000;
    v86.value._countAndFlagsBits = 0x61737265766E6F43;
    v86.value._object = (void *)0xEF74694B6E6F6974;
    v87._countAndFlagsBits = 0;
    v87._object = (void *)0xE000000000000000;
    v124._countAndFlagsBits = 0;
    v88 = NSLocalizedString(_:tableName:bundle:value:comment:)(v85, v86, (NSBundle)v84, v87, v124);

    v113 = (void *)MEMORY[0x1E0DEA968];
    aBlock = v88;
    specialized Dictionary.subscript.setter((uint64_t)&aBlock, v81, v83);
    v89 = (void *)objc_opt_self();
    v90 = -[NSObject groupUUID](v110, sel_groupUUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    *(_QWORD *)&v117 = dispatch thunk of CustomStringConvertible.description.getter();
    *((_QWORD *)&v117 + 1) = v91;
    (*(void (**)(char *, uint64_t))(v107 + 8))(v9, v6);
    v92._countAndFlagsBits = 46;
    v92._object = (void *)0xE100000000000000;
    String.append(_:)(v92);
    v93._countAndFlagsBits = TUConversationActivitySession.uniqueIdentifier.getter();
    String.append(_:)(v93);
    swift_bridgeObjectRelease();
    v94 = (void *)MEMORY[0x1C3B72E00](v117, *((_QWORD *)&v117 + 1));
    swift_bridgeObjectRelease();
    specialized _dictionaryUpCast<A, B, C, D>(_:)();
    v96 = v95;
    swift_bridgeObjectRelease();
    v97 = outlined bridged method (mnnnnbnn) of @objc static IMUserNotification.userNotification(withIdentifier:timeout:alertLevel:displayFlags:displayInformation:)((uint64_t)v94, 3, 0, 0.0, v96, v89);

    if (v97)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      v117 = 0u;
      v118 = 0u;
    }
    v98 = v108;
    outlined init with take of Any?((uint64_t)&v117, (uint64_t)&aBlock, &demangling cache variable for type metadata for Any?);
    if (v113)
    {
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMUserNotification);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v99 = v116;
        objc_msgSend(v99, sel_setUsesNotificationCenter_, 0);
        outlined bridged method (mbgnn) of @objc IMUserNotification.representedApplicationBundle.setter(0xD000000000000017, 0x80000001BD67DEE0, v99);
        if (objc_msgSend((id)objc_opt_self(), sel_sharedInstance))
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          v117 = 0u;
          v118 = 0u;
        }
        outlined init with take of Any?((uint64_t)&v117, (uint64_t)&aBlock, &demangling cache variable for type metadata for Any?);
        if (!v113)
        {

          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&aBlock, &demangling cache variable for type metadata for Any?);
          swift_release();
          swift_release();
          return;
        }
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMUserNotificationCenter);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v100 = v116;
          v101 = swift_allocObject();
          *(_QWORD *)(v101 + 16) = partial apply for closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:);
          *(_QWORD *)(v101 + 24) = v98;
          v114 = partial apply for closure #1 in ConversationControlsManager.promptForReplaceAlertIfNeeded(_:);
          v115 = v101;
          aBlock._countAndFlagsBits = MEMORY[0x1E0C809B0];
          aBlock._object = (void *)1107296256;
          v112 = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
          v113 = &block_descriptor_437;
          v102 = _Block_copy(&aBlock);
          v103 = v99;
          swift_retain();
          swift_release();
          objc_msgSend(v100, sel_addUserNotification_listener_completionHandler_, v103, 0, v102);

          _Block_release(v102);
          swift_release();
          swift_release();

          return;
        }
        swift_release();
        swift_release();

LABEL_37:
        return;
      }
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&aBlock, &demangling cache variable for type metadata for Any?);
    }
    swift_release();
    swift_release();
    goto LABEL_37;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_1BD004000, v17, v18, "Activity was locally initiated, not prompting to replace", v19, 2u);
    MEMORY[0x1C3B751B8](v19, -1, -1);
  }

  v20 = type metadata accessor for SpringBoardUtilities();
  swift_retain();
  specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)(v20, a2, a3);
  swift_release();
  swift_release();

}

uint64_t closure #1 in ConversationControlsManager.promptForReplaceAlertIfNeeded(_:)(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (a1)
  {
    if (objc_msgSend((id)a1, sel_response))
    {
      a1 = 0;
    }
    else
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v3 = type metadata accessor for Logger();
      __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
      v4 = Logger.logObject.getter();
      v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v6 = 0;
        _os_log_impl(&dword_1BD004000, v4, v5, "User accepted replacing current activity with screen sharing activity.", v6, 2u);
        MEMORY[0x1C3B751B8](v6, -1, -1);
      }

      a1 = 1;
    }
  }
  return a2(a1);
}

Swift::Void __swiftcall ConversationControlsManager.declineOrCancelScreenShareRequest()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void (*v18)(_BYTE *, _QWORD);
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  _WORD *v25;
  NSObject *v26;
  _BYTE v27[112];
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_93();
  v28 = v4;
  v29 = v5;
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_16_2();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = OUTLINED_FUNCTION_17_2();
  v8 = (uint8_t *)__swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v9 = OUTLINED_FUNCTION_18_13();
  if (OUTLINED_FUNCTION_4_14(v9))
  {
    v10 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_581(v10);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "Declining screen share request- presenting default hud", v2);
    OUTLINED_FUNCTION_60();
  }

  v11 = OUTLINED_FUNCTION_132_4((uint64_t)v0->isa);
  if (v11
    && (v12 = (void *)v11,
        specialized Conversation.currentScreenSharingRequest(ignoring:)(),
        v14 = v13,
        v12,
        v14))
  {
    v16 = OUTLINED_FUNCTION_2_11(v15, sel_UUID);
    OUTLINED_FUNCTION_202_1();

    OUTLINED_FUNCTION_334();
    v18 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(v17 + 680))(v27);
    v20 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v21 = *(_QWORD *)(*v20 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
    v22 = *v20;
    *(_QWORD *)(v22 + 16) = v21 + 1;
    OUTLINED_FUNCTION_260_0(v22+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    v18(v27, 0);
    OUTLINED_FUNCTION_555();
    ConversationController.declineOrCancelScreenShareRequest(for:)();
    OUTLINED_FUNCTION_334();
    (*(void (**)(void))(v23 + 2400))();

    OUTLINED_FUNCTION_52_1();
  }
  else
  {
    v26 = Logger.logObject.getter();
    v24 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_108_4(v26))
    {
      v25 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_52_3(v25);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v26, v24, "Cannot decline nil current screen share request", v8);
      OUTLINED_FUNCTION_60();
    }

  }
}

Swift::Void __swiftcall ConversationControlsManager.cancelJoinCountdown()()
{
  uint8_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _WORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_96();
  v23 = v2;
  v24 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_136_1();
  v10 = OUTLINED_FUNCTION_547(v9);
  if (v10 != 96)
    goto LABEL_7;
  OUTLINED_FUNCTION_59(v10, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *(_QWORD *)v0 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint8_t *, _QWORD, uint64_t))(v1 + 104))(v0, *MEMORY[0x1E0DEF740], v7);
  v11 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (one-time initialization token for conversationControls != -1)
LABEL_9:
    swift_once();
  v12 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v12, (uint64_t)&static Logger.conversationControls);
  v13 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v13))
  {
    v14 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_220_0(v14);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v11, (os_log_type_t)v7, "cancelJoinCountdown", v0);
    OUTLINED_FUNCTION_60();
  }

  ConversationController.cancelJoinCountdown()();
  OUTLINED_FUNCTION_136_1();
  v16 = OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v15 + 752));
  OUTLINED_FUNCTION_503(v16);
  OUTLINED_FUNCTION_43();
  ConversationControlsManager.showHUD()();
  v17 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_77_0((uint64_t)v6, v18, v19, v17);
  OUTLINED_FUNCTION_136_1();
  v21 = (*(uint64_t (**)(char *))(v20 + 2456))(v6);
  OUTLINED_FUNCTION_32_18(v21, &demangling cache variable for type metadata for Participant?);
LABEL_7:
  OUTLINED_FUNCTION_65_1();
}

void ConversationControlsManager.noticeTapped(notice:isSystemAperturePresentation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_442();
  a20 = v22;
  a21 = v23;
  v25 = v24;
  v27 = v26;
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_481();
  outlined init with copy of RadarReporting(v27, (uint64_t)&a10);
  v28 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v28 + 16) = v21;
  outlined init with take of Notice(&a10, v28 + 24);
  *(_BYTE *)(v28 + 64) = v25;
  ConversationControlsNoticeCoordinator.noticeTapped(notice:completionHandler:)();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_10_10();
}

void closure #1 in ConversationControlsManager.noticeTapped(notice:isSystemAperturePresentation:)(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[40];
  char v36;

  v8 = type metadata accessor for AppLaunchNotice(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess();
  v11 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 16);
  if (v11)
  {
    v12 = v11;
    if ((a1 & 1) != 0)
    {
      outlined init with copy of RadarReporting(a3, (uint64_t)v35);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
      if (swift_dynamicCast())
      {
        outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for AppLaunchNotice);
        ConversationControlsManager.showHUD()();
        if ((a4 & 1) != 0 && (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x400))())
        {
          v14 = v13;
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v14 + 96))(0x7420656369746F4ELL, 0xED00006465707061, ObjectType, v14);

          swift_unknownObjectRelease();
          return;
        }
      }
      else
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v19 = type metadata accessor for Logger();
        __swift_project_value_buffer(v19, (uint64_t)&static Logger.conversationControls);
        v20 = Logger.logObject.getter();
        v21 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v22 = 0;
          _os_log_impl(&dword_1BD004000, v20, v21, "Present HUD: noticeTapped (transition)", v22, 2u);
          MEMORY[0x1C3B751B8](v22, -1, -1);
        }

        v23 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        v24 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x3E8))();
        if (v24)
        {
          v26 = v25;
          v27 = swift_getObjectType();
          outlined init with copy of RadarReporting(a3, (uint64_t)v35);
          v36 = 0;
          (*(void (**)(_QWORD, _BYTE *, _QWORD, _QWORD, uint64_t, uint64_t))(v26 + 16))(0, v35, 0, 0, v27, v26);
          swift_unknownObjectRelease();
          v24 = outlined destroy of ConversationControlsType((uint64_t)v35);
        }
        if ((a4 & 1) != 0)
        {
          v24 = (*(uint64_t (**)(uint64_t))((*v23 & *v12) + 0x400))(v24);
          if (v24)
          {
            v29 = v28;
            v30 = swift_getObjectType();
            (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v29 + 96))(0x7420656369746F4ELL, 0xED00006465707061, v30, v29);
            v24 = swift_unknownObjectRelease();
          }
        }
        if ((*(uint64_t (**)(uint64_t))((*v23 & *v12) + 0x430))(v24))
        {
          v32 = v31;
          v33 = swift_getObjectType();
          outlined init with copy of RadarReporting(a3, (uint64_t)v35);
          v36 = 0;
          (*(void (**)(_BYTE *, uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 80))(v35, 1, 0, v33, v32);
          swift_unknownObjectRelease();

          outlined destroy of ConversationControlsType((uint64_t)v35);
          return;
        }
      }
    }
    else if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v11) + 0x400))())
    {
      v17 = v16;
      v18 = swift_getObjectType();
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v17 + 32))(0x7420656369746F4ELL, 0xED00006465707061, 1, v18, v17);
      swift_unknownObjectRelease();
    }

  }
}

void ConversationControlsManager.appLaunchButtonTapped(completion:)()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  _QWORD *v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[10];
  uint64_t v35[5];

  OUTLINED_FUNCTION_93();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_5_27();
  v34[7] = v5;
  MEMORY[0x1E0C80A78](v6);
  v34[6] = (char *)v34 - v7;
  v34[8] = OUTLINED_FUNCTION_239_0();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_5_27();
  v34[4] = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v34 - v11;
  v34[9] = OUTLINED_FUNCTION_413();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_79();
  v16 = v14 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v34 - v18;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v20 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v20, (uint64_t)&static Logger.conversationControls);
  v21 = OUTLINED_FUNCTION_582();
  v34[5] = v0;
  Logger.logObject.getter();
  v22 = OUTLINED_FUNCTION_583();
  v23 = OUTLINED_FUNCTION_241(v22);
  v24 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v34[3] = v12;
  if (v23)
  {
    v25 = OUTLINED_FUNCTION_105();
    v34[1] = v16;
    v26 = (uint8_t *)v25;
    v27 = OUTLINED_FUNCTION_105();
    v34[2] = v3;
    *(_DWORD *)v26 = 136315138;
    v35[0] = v27;
    v34[0] = v26 + 4;
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v21) + 0x930))(v27);
    ConversationControlsAppLaunchButtonType.description.getter();
    v29 = v28;
    v31 = v30;
    outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for ConversationControlsAppLaunchButtonType);
    v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v31, v35);
    OUTLINED_FUNCTION_540(v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v1, "appLaunchButtonTapped, type:%s", v26);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  (*(void (**)(void))((*v24 & *v21) + 0x930))();
  v33 = (char *)&loc_1BD26F178 + 4 * aMpup[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void ConversationControlsManager.presentCollaboration(_:completion:)(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t ObjectType;
  int v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  id v57;
  _QWORD v58[2];
  uint8_t *v59;
  uint64_t v60;
  void *v61;
  void (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v66 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Collaboration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v63 = v9;
  v64 = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v58 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)v58 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v58 - v20;
  v65 = v3;
  v22 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults + 8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 720))(ObjectType, v22) & 1) != 0)
  {
    v62 = a2;
    v24 = *(unsigned __int8 *)(a1 + 16);
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v21, type metadata accessor for Collaboration);
    v25 = a1;
    if (v24)
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for Collaboration);
      v26 = v65;
LABEL_4:
      v27 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v26) + 0x290))();
      if (v27)
      {
        v28 = (void *)v27;
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v29 = type metadata accessor for Logger();
        __swift_project_value_buffer(v29, (uint64_t)&static Logger.conversationControls);
        outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v19, type metadata accessor for Collaboration);
        v30 = Logger.logObject.getter();
        v31 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v30, v31))
        {
          v61 = v28;
          v32 = (uint8_t *)swift_slowAlloc();
          v60 = swift_slowAlloc();
          v68 = v60;
          v65 = (_QWORD *)v25;
          *(_DWORD *)v32 = 136315138;
          v58[1] = v32 + 4;
          v59 = v32;
          outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v19, (uint64_t)v8, type metadata accessor for Collaboration);
          __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v63);
          specialized >> prefix<A>(_:)((uint64_t)v8);
          v34 = v33;
          v36 = v35;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Collaboration?);
          v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v68);
          v25 = (uint64_t)v65;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v28 = v61;
          swift_bridgeObjectRelease();
          outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Collaboration);
          v37 = v31;
          v38 = v59;
          _os_log_impl(&dword_1BD004000, v30, v37, "Opening collaboration activity %s", v59, 0xCu);
          v39 = v60;
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v39, -1, -1);
          MEMORY[0x1C3B751B8](v38, -1, -1);
        }
        else
        {
          outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Collaboration);
        }

        v52 = v64;
        type metadata accessor for SpringBoardUtilities();
        v53 = swift_allocObject();
        swift_unknownObjectWeakInit();
        outlined init with copy of ConversationControlsAppLaunchButtonType(v25, (uint64_t)v16, type metadata accessor for Collaboration);
        v54 = (*(unsigned __int8 *)(v52 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
        v55 = (_QWORD *)swift_allocObject();
        v56 = (uint64_t)v62;
        v55[2] = v53;
        v55[3] = v56;
        v55[4] = v66;
        outlined init with take of StagedCollaboration((uint64_t)v16, (uint64_t)v55 + v54, type metadata accessor for Collaboration);
        *(_QWORD *)((char *)v55 + ((v11 + v54 + 7) & 0xFFFFFFFFFFFFFFF8)) = v28;
        swift_retain();
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v56);
        v57 = v28;
        static SpringBoardUtilities.requestPasscodeUnlock(_:)((void (*)(uint64_t))partial apply for closure #1 in ConversationControlsManager.presentCollaboration(_:completion:));
        swift_release();
        swift_release();

        return;
      }
      v50 = v62;
      if (!v62)
        return;
      v51 = 0;
LABEL_23:
      v50(v51);
      return;
    }
    v40 = *((_QWORD *)v21 + 5);
    outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for Collaboration);
    v26 = v65;
    if (!v40)
      goto LABEL_4;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v41 = type metadata accessor for Logger();
    __swift_project_value_buffer(v41, (uint64_t)&static Logger.conversationControls);
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v13, type metadata accessor for Collaboration);
    v42 = Logger.logObject.getter();
    v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      v45 = swift_slowAlloc();
      v68 = v45;
      *(_DWORD *)v44 = 136315138;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v13, (uint64_t)v8, type metadata accessor for Collaboration);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v63);
      specialized >> prefix<A>(_:)((uint64_t)v8);
      v47 = v46;
      v49 = v48;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Collaboration?);
      v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v49, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Collaboration);
      _os_log_impl(&dword_1BD004000, v42, v43, "App not installed for collaboration activity %s, opening app store", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v45, -1, -1);
      MEMORY[0x1C3B751B8](v44, -1, -1);
    }
    else
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Collaboration);
    }

    ConversationControlsManager.presentAppStore()();
    v50 = v62;
    if (v62)
    {
      v51 = 1;
      goto LABEL_23;
    }
  }
  else if (a2)
  {
    a2(1);
  }
}

Swift::Void __swiftcall ConversationControlsManager.presentAppStore()()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  _WORD *v28;
  id v29;
  NSURL *v30;
  void *v31;
  void *v32;
  void *v33;
  _QWORD v34[3];
  uint64_t v35;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77_1();
  v7 = OUTLINED_FUNCTION_32_3();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_58_5();
  v9 = type metadata accessor for URLComponents();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_25_4();
  v12 = (*(_QWORD *(**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & v11) + 0x900))(v34);
  if (!v35)
  {
    OUTLINED_FUNCTION_587((uint64_t)v12, &demangling cache variable for type metadata for Activity?);
    goto LABEL_10;
  }
  v1 = __swift_project_boxed_opaque_existential_1(v34, v35);
  v13 = OUTLINED_FUNCTION_391();
  v14(v13);
  v16 = v15;
  OUTLINED_FUNCTION_12_6();
  if (!v16)
  {
LABEL_10:
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v26 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v26, (uint64_t)&static Logger.conversationControls);
    v27 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v27))
    {
      v28 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_124_3(v28);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "Unable to present App Store page, no bundleIdentifier", v2);
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_18;
  }
  URLComponents.init()();
  URLComponents.scheme.setter();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<URLQueryItem>);
  OUTLINED_FUNCTION_407();
  type metadata accessor for URLQueryItem();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BD6441D0;
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_61();
  URLQueryItem.init(name:value:)();
  OUTLINED_FUNCTION_30_4();
  URLComponents.queryItems.setter();
  URLComponents.url.getter();
  OUTLINED_FUNCTION_69_0(v4, 1, v7);
  if (v17)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v4, &demangling cache variable for type metadata for URL?);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v18 = OUTLINED_FUNCTION_17_2();
    v19 = __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationControls);
    OUTLINED_FUNCTION_86();
    Logger.logObject.getter();
    v20 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_4_14(v20))
    {
      v21 = (uint8_t *)OUTLINED_FUNCTION_105();
      v34[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v21 = 136315138;
      OUTLINED_FUNCTION_86();
      v22 = OUTLINED_FUNCTION_202_0();
      v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, v24);
      OUTLINED_FUNCTION_540(v25);
      OUTLINED_FUNCTION_26_38();
      OUTLINED_FUNCTION_11_11();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v19, (os_log_type_t)v3, "Unable to create app store url from %s", v21);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_19_1();

    (*(void (**)(uint8_t *, uint64_t))(v5 + 8))(v2, v9);
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_30_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v3, v4, v7);
  v29 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v29)
  {
    v31 = v29;
    URL._bridgeToObjectiveC()(v30);
    v33 = v32;
    objc_msgSend(v31, sel_openURL_configuration_completionHandler_, v32, 0, 0);

    OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    (*(void (**)(uint8_t *, uint64_t))(v5 + 8))(v2, v9);
LABEL_18:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  __break(1u);
}

void ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)()
{
  uint64_t *v0;
  uint8_t *v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  os_log_type_t v27;
  _WORD *v28;
  uint64_t v29;
  os_log_type_t v30;
  _WORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)();
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)();
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void (*v46)(uint64_t);
  id v47;
  id v48;
  os_log_type_t v49;
  void *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  _WORD *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  id v75;
  void (**v76)();
  void (*v77)();
  void (**v78)(uint64_t);
  uint64_t v79;
  void (*v80)();
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint8_t *v90;
  void (*v91)(uint64_t);
  uint64_t v92;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v91 = v5;
  v92 = v6;
  LODWORD(v88) = v7;
  v8 = OUTLINED_FUNCTION_33_0();
  v85 = *(_QWORD *)(v8 - 8);
  v86 = v8;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v84 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v87 = v12;
  OUTLINED_FUNCTION_414();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  v14 = OUTLINED_FUNCTION_101_0();
  v15 = type metadata accessor for StagedCollaboration(v14);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x1E0C80A78](v15);
  v83 = (uint64_t)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v89 = (char *)&v79 - v20;
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_138_0();
  MEMORY[0x1E0C80A78](v21);
  v90 = (uint8_t *)&v79 - v22;
  v23 = MEMORY[0x1E0DEEDD8];
  v24 = OUTLINED_FUNCTION_133_0(*v0);
  if (v24)
  {
    v25 = (void *)v24;
    (*(void (**)(void))(((uint64_t)v23->isa & *v0) + 0x7D8))();
    if (swift_getEnumCaseMultiPayload())
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v2, type metadata accessor for ForegroundCollaborationState);
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v26 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v26, (uint64_t)&static Logger.conversationControls);
      v27 = OUTLINED_FUNCTION_37_4();
      if (OUTLINED_FUNCTION_78_0(v23))
      {
        v28 = (_WORD *)OUTLINED_FUNCTION_7_8();
        OUTLINED_FUNCTION_47_2(v28);
        OUTLINED_FUNCTION_130(&dword_1BD004000, v23, v27, "Cannot start collaboration as no shareable content was found by ConversationControlsManager", v2);
        OUTLINED_FUNCTION_60();
      }

      if (v91)
        OUTLINED_FUNCTION_353((uint64_t (*)(_QWORD))v91);

    }
    else
    {
      v32 = (uint64_t)v90;
      outlined init with take of StagedCollaboration((uint64_t)v2, (uint64_t)v90, type metadata accessor for StagedCollaboration);
      v33 = OUTLINED_FUNCTION_7_0();
      swift_unknownObjectWeakInit();
      OUTLINED_FUNCTION_259(v32, v3);
      OUTLINED_FUNCTION_259(v3, (uint64_t)v89);
      v34 = *(unsigned __int8 *)(v16 + 80);
      v35 = (v34 + 40) & ~v34;
      v81 = v17 + 7;
      v82 = v34 | 7;
      v36 = (v17 + 7 + v35) & 0xFFFFFFFFFFFFFFF8;
      v37 = (void (*)())swift_allocObject();
      v38 = v91;
      v39 = v92;
      *((_QWORD *)v37 + 2) = v33;
      *((_QWORD *)v37 + 3) = v38;
      *((_QWORD *)v37 + 4) = v39;
      v40 = v3;
      v41 = v37;
      outlined init with take of StagedCollaboration(v40, (uint64_t)v37 + v35, type metadata accessor for StagedCollaboration);
      *(_QWORD *)((char *)v41 + v36) = v25;
      v42 = v90;
      v43 = *(int *)(v15 + 40);
      v44 = v33;
      v45 = *(void **)&v90[v43];
      swift_retain();
      v46 = v38;
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v38);
      v47 = v25;
      v48 = v45;
      v49 = v48;
      SWShareableContent.collaborationInitiator.getter();
      OUTLINED_FUNCTION_37_0();
      if ((v88 & 1) != 0)
      {
        v50 = v45;
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v51 = OUTLINED_FUNCTION_17_2();
        v52 = OUTLINED_FUNCTION_3(v51, (uint64_t)&static Logger.conversationControls);
        v53 = static os_log_type_t.info.getter();
        v54 = OUTLINED_FUNCTION_13_0(v53);
        v55 = (uint64_t)v89;
        if (v54)
        {
          v56 = (_WORD *)OUTLINED_FUNCTION_7_8();
          OUTLINED_FUNCTION_47_2(v56);
          OUTLINED_FUNCTION_130(&dword_1BD004000, v52, v49, "Collaboration initiator was disclosed prior to initiation; skipping alert",
            v42);
          OUTLINED_FUNCTION_60();
        }

        v58 = OUTLINED_FUNCTION_9(v57, sel_UUID);
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        CollaborationInitiationManager.addDisclosedInitiator(_:toConversationUUID:)((uint64_t)v50);
        OUTLINED_FUNCTION_96_1(v85);
        closure #1 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(v44, v91, v92, v55, (uint64_t)v47);
        OUTLINED_FUNCTION_14_12();

        OUTLINED_FUNCTION_74();
        OUTLINED_FUNCTION_68_2(v55);
        v59 = (uint64_t)v42;
      }
      else
      {
        v80 = v41;
        v88 = ~v34;
        outlined destroy of AccountUpdateNotice((uint64_t)v89, type metadata accessor for StagedCollaboration);
        OUTLINED_FUNCTION_14_12();
        v60 = OUTLINED_FUNCTION_415();
        OUTLINED_FUNCTION_77_0(v87, v61, v62, v60);
        v63 = v83;
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v42, v83, type metadata accessor for StagedCollaboration);
        type metadata accessor for MainActor();
        v64 = v47;
        v65 = v46;
        v66 = (uint64_t)v46;
        v67 = v92;
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v66);
        v89 = v64;
        v68 = v4;
        v69 = v45;
        OUTLINED_FUNCTION_21_7();
        v70 = static MainActor.shared.getter();
        v71 = (v34 + 56) & v88;
        v72 = (v81 + v71) & 0xFFFFFFFFFFFFFFF8;
        v73 = (_QWORD *)swift_allocObject();
        v74 = MEMORY[0x1E0DF06E8];
        v73[2] = v70;
        v73[3] = v74;
        v73[4] = v68;
        v75 = v89;
        v73[5] = v89;
        v73[6] = v69;
        outlined init with take of StagedCollaboration(v63, (uint64_t)v73 + v71, type metadata accessor for StagedCollaboration);
        v76 = (void (**)())((char *)v73 + v72);
        v77 = v80;
        *v76 = partial apply for closure #1 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:);
        v76[1] = v77;
        v78 = (void (**)(uint64_t))((char *)v73 + ((v72 + 23) & 0xFFFFFFFFFFFFFFF8));
        *v78 = v65;
        v78[1] = (void (*)(uint64_t))v67;
        _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();

        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_19();
        v59 = (uint64_t)v90;
      }
      outlined destroy of AccountUpdateNotice(v59, type metadata accessor for StagedCollaboration);
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v29 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v29, (uint64_t)&static Logger.conversationControls);
    v30 = OUTLINED_FUNCTION_37_4();
    if (os_log_type_enabled(v23, v30))
    {
      v31 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_124_3(v31);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v23, v30, "Cannot start collaboration as no conversation is being tracked by ConversationControlsManager", v1);
      OUTLINED_FUNCTION_60();
    }

    if (v91)
      OUTLINED_FUNCTION_353((uint64_t (*)(_QWORD))v91);
  }
  OUTLINED_FUNCTION_52_1();
}

void ConversationControlsManager.presentTVRemote()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  Class isa;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  os_log_type_t v21;
  uint8_t *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  NSObject *v31;
  uint64_t v32;

  v1 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "Presenting TV remote control for split session", v5, 2u);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  v6 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_neighborhoodActivityConduit);
  v7 = objc_msgSend(v6, sel_activeSplitSessionTV);

  if (v7)
  {
    v8 = objc_msgSend(v7, sel_knownIdentifiersByHandleType);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type NSNumber and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    isa = Int._bridgeToObjectiveC()().super.super.isa;
    specialized Dictionary.subscript.getter((uint64_t)isa, v9);
    v12 = v11;
    v14 = v13;

    swift_bridgeObjectRelease();
    if (v14)
    {
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TVRViewServiceConfigContext);
      v31 = TVRViewServiceConfigContext.__allocating_init(deviceIdentifier:identifierType:deviceType:launchContext:launchMethod:)(v12, v14, 0, 1, 12, 1);
      v15 = (void *)objc_opt_self();
      v16 = objc_msgSend(v15, sel_sharedInstance);
      objc_msgSend(v16, sel_dismiss);

      v17 = objc_msgSend(v15, sel_sharedInstance);
      objc_msgSend(v17, sel_presentWithContext_, v31);

      if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x400))())
      {
        v19 = v18;
        ObjectType = swift_getObjectType();
        (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v19 + 32))(0xD000000000000014, 0x80000001BD680670, 1, ObjectType, v19);

        swift_unknownObjectRelease();
        return;
      }

    }
    else
    {
      v31 = v7;
      v23 = Logger.logObject.getter();
      v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v32 = v26;
        *(_DWORD *)v25 = 136315138;
        v27 = -[NSObject debugDescription](v31, sel_debugDescription);
        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v30 = v29;

        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v23, v24, "Unable to get deviceIdentifier for activeSplitSessionTV:%s", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v26, -1, -1);
        MEMORY[0x1C3B751B8](v25, -1, -1);

        return;
      }

    }
  }
  else
  {
    v31 = Logger.logObject.getter();
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1BD004000, v31, v21, "Unable to present TV remote, no active TV.", v22, 2u);
      MEMORY[0x1C3B751B8](v22, -1, -1);
    }
  }

}

void closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(char a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  NSObject *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  NSObject *v28;
  uint64_t v29;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = MEMORY[0x1C3B752C0](a4 + 16);
  if (!v10)
  {
LABEL_5:
    if (!a2)
      return;
LABEL_16:
    a2(a1 & 1);
    return;
  }
  v11 = v10;
  if ((a1 & 1) == 0)
  {

    if (!a2)
      return;
    a1 = 0;
    goto LABEL_16;
  }
  v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v13 = (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v10->isa) + 0x920))(0);
  v14 = (*(uint64_t (**)(uint64_t))((*v12 & (uint64_t)v11->isa) + 0x8E0))(v13);
  if (v14)
  {
    v15 = (void *)v14;
    v29 = TUConversationActivitySession.uniqueIdentifier.getter();
    v17 = v16;
    v18 = type metadata accessor for TaskPriority();
    a1 = 1;
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v18);
    v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    v20 = static MainActor.shared.getter();
    v21 = (_QWORD *)swift_allocObject();
    v22 = MEMORY[0x1E0DF06E8];
    v21[2] = v20;
    v21[3] = v22;
    v23 = v29;
    v21[4] = v19;
    v21[5] = v23;
    v21[6] = v17;
    swift_release();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v11->isa) + 0x8B8))();

    goto LABEL_5;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v24 = type metadata accessor for Logger();
  __swift_project_value_buffer(v24, (uint64_t)&static Logger.conversationControls);
  v25 = Logger.logObject.getter();
  v26 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_1BD004000, v25, v26, "Not kicking applicationState timer because we couldn't find an activity", v27, 2u);
    MEMORY[0x1C3B751B8](v27, -1, -1);
    v28 = v11;
  }
  else
  {
    v28 = v25;
    v25 = v11;
  }

  if (a2)
  {
    a1 = 1;
    goto LABEL_16;
  }
}

uint64_t closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  type metadata accessor for MainActor();
  v6[13] = static MainActor.shared.getter();
  v6[14] = dispatch thunk of Actor.unownedExecutor.getter();
  v6[15] = v7;
  return swift_task_switch();
}

uint64_t closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 80) + 16;
  OUTLINED_FUNCTION_2_0();
  v2 = (void *)MEMORY[0x1C3B752C0](v1);
  OUTLINED_FUNCTION_406(v2);
  if (v1)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v3;
    *v3 = v0;
    v3[1] = closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:);
    return static Task<>.sleep(nanoseconds:)();
  }
  else
  {
    swift_release();
    return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v10;

  swift_release();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_469();
  swift_bridgeObjectRetain_n();
  Logger.logObject.getter();
  v4 = OUTLINED_FUNCTION_12_0();
  v5 = OUTLINED_FUNCTION_5_3(v4);
  v6 = *(_QWORD *)(v2 + 96);
  if (v5)
  {
    v7 = *(_QWORD *)(v2 + 88);
    v8 = (uint8_t *)OUTLINED_FUNCTION_105();
    v10 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v8 = 136315138;
    OUTLINED_FUNCTION_86();
    *(_QWORD *)(v2 + 64) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v6, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_11_11();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v1, "Timer for activity %s was cancelled early", v8);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_1();

  return OUTLINED_FUNCTION_165(*(uint64_t (**)(void))(v2 + 8));
}

void closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)()
{
  swift_release();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1BD270F08(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  _QWORD *v21;

  if (a1)
  {
    v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x8E0))();
    if (!v4)
    {
LABEL_17:

      return OUTLINED_FUNCTION_165(*(uint64_t (**)(void))(v1 + 8));
    }
    v5 = (void *)v4;
    v7 = *(_QWORD *)(v1 + 88);
    v6 = *(NSObject **)(v1 + 96);
    v8 = v4;
    if (TUConversationActivitySession.uniqueIdentifier.getter() == v7 && v9 == v6)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = v9;
      v11 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_27();
      if ((v11 & 1) == 0)
      {
LABEL_16:

        goto LABEL_17;
      }
    }
    OUTLINED_FUNCTION_334();
    v13 = OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v12 + 2232));
    if (OUTLINED_FUNCTION_9(v13, sel_applicationState) == (id)1)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v14 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationControls);
      v15 = OUTLINED_FUNCTION_60_3();
      Logger.logObject.getter();
      v16 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_41_3(v16))
      {
        v17 = (uint8_t *)OUTLINED_FUNCTION_105();
        v21 = (_QWORD *)OUTLINED_FUNCTION_105();
        *(_DWORD *)v17 = 138412290;
        *(_QWORD *)(v2 - 8) = v15;
        v18 = v15;
        OUTLINED_FUNCTION_450();
        *v21 = v5;

        OUTLINED_FUNCTION_48(&dword_1BD004000, v8, (os_log_type_t)v7, "Activity %@ didn't transition applicationStates in time, resetting to .needsLaunch", v17);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_334();
      OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v19 + 2336));
    }
    goto LABEL_16;
  }
  return OUTLINED_FUNCTION_165(*(uint64_t (**)(void))(v1 + 8));
}

void ConversationControlsManager.presentCurrentActivity(completion:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *oslog;

  v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x8E0))();
  if (v5)
  {
    oslog = v5;
    specialized ConversationControlsManager.presentActivity(activity:completion:)(v5, a1, a2, v2);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
    oslog = Logger.logObject.getter();
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1BD004000, oslog, v7, "No activity to launch", v8, 2u);
      MEMORY[0x1C3B751B8](v8, -1, -1);
    }
  }

}

Swift::Void __swiftcall ConversationControlsManager.collaborateButtonTapped()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_206();
  if (OUTLINED_FUNCTION_131_4(v0))
  {
    OUTLINED_FUNCTION_15_69();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
    v1 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_218_0(v1, (__n128)xmmword_1BD6441D0);
    OUTLINED_FUNCTION_345(v2, 40, 0x80000001BD67F6A0, v3);
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_10();
  }
  ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)();
}

Swift::Void __swiftcall ConversationControlsManager.notNowButtonTapped(button:)(UIControl *button)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_206();
  if (OUTLINED_FUNCTION_131_4(v1))
  {
    OUTLINED_FUNCTION_15_69();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
    v2 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_218_0(v2, (__n128)xmmword_1BD6441D0);
    OUTLINED_FUNCTION_345(v3, 36, 0x80000001BD67F6D0, v4);
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_10();
  }
  ConversationControlsManager.suppressCollaborationHUD()();
}

void ConversationControlsManager.suppressCollaborationHUD()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  char *v5;
  _BYTE v6[32];

  v1 = type metadata accessor for ForegroundCollaborationState(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x7E8))(v6);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v4, (uint64_t)v3, type metadata accessor for ForegroundCollaborationState);
  v5 = (char *)sub_1BD27156C + 4 * byte_1BD654927[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BD27156C()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  outlined destroy of AccountUpdateNotice(v1, type metadata accessor for ForegroundCollaborationState);
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool))
              + 48);
  outlined init with take of StagedCollaboration(v2, v1, type metadata accessor for StagedCollaboration);
  *(_BYTE *)(v1 + v4) = 1;
  swift_storeEnumTagMultiPayload();
  return v0(v3 - 80, 0);
}

Swift::Void __swiftcall ConversationControlsManager.okAndDismissButtonTapped(button:)(UIControl *button)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
  v4 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v4))
  {
    v5 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v5);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v6, v7, "Ok/Dismiss button tapped");
    OUTLINED_FUNCTION_60();
  }

  if ((OUTLINED_FUNCTION_12_67(**(_QWORD **)((char *)v1
                                            + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features)) & 1) != 0
    && OUTLINED_FUNCTION_35_24(*v1))
  {
    v8 = OUTLINED_FUNCTION_15_69();
    OUTLINED_FUNCTION_648(0xD000000000000018, 0x80000001BD67F720, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 80));
    OUTLINED_FUNCTION_10();
  }
  if (OUTLINED_FUNCTION_35_24(*v1))
  {
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_257_0();
    OUTLINED_FUNCTION_96_7(24, 0x80000001BD67F700, v9, v10);
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

Swift::Void __swiftcall ConversationControlsManager.swapButtonTapped(button:)(UIControl *button)
{
  _QWORD *v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationControls);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    v4 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v4);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v5, v6, "Swap held call button tapped");
    OUTLINED_FUNCTION_60();
  }

  ConversationControlsManager.jumpToAppIfNeeded()();
  if (OUTLINED_FUNCTION_131_4(*v1))
  {
    v7 = OUTLINED_FUNCTION_15_69();
    OUTLINED_FUNCTION_349(v7);
    OUTLINED_FUNCTION_10();
  }
  objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_swapCalls);
}

void ConversationControlsManager.jumpToAppIfNeeded()()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  unsigned __int8 v23;
  void *v24;
  id v25;
  unsigned __int8 v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t i;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  char v49;
  Swift::String v50;
  unint64_t v51;
  void *v52;
  id v53;
  id v54;
  unint64_t v55;
  id v56;
  char v57[8];
  uint64_t v58;

  v1 = objc_msgSend((id)objc_opt_self(), sel_configurationForDefaultMainDisplayMonitor);
  objc_msgSend(v1, sel_setNeedsUserInteractivePriority_, 1);
  v56 = objc_msgSend((id)objc_opt_self(), sel_monitorWithConfiguration_, v1);
  v2 = objc_msgSend(v56, sel_currentLayout);
  if (!v2)
  {
LABEL_23:
    objc_msgSend(v56, sel_invalidate);

    return;
  }
  v3 = (uint64_t)v2;
  v4 = objc_msgSend(v2, sel_elements);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for FBSDisplayLayoutElement);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v53 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter];
  v6 = objc_msgSend(v53, sel_currentCalls);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v55 = v5;
  if (v7 >> 62)
    goto LABEL_44;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8)
  {
LABEL_11:
    swift_bridgeObjectRelease_n();

LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
LABEL_4:
  v9 = 4;
  while (1)
  {
    if ((v7 & 0xC000000000000001) != 0)
      v10 = (id)MEMORY[0x1C3B73D18](v9 - 4, v7);
    else
      v10 = *(id *)(v7 + 8 * v9);
    v11 = v10;
    v12 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter();
      if (!v8)
        goto LABEL_11;
      goto LABEL_4;
    }
    if (objc_msgSend(v10, sel_status) == 2)
      break;

    ++v9;
    if (v12 == v8)
      goto LABEL_11;
  }
  v52 = (void *)v3;
  swift_bridgeObjectRelease_n();
  v13 = objc_msgSend(v53, sel_currentCalls);
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter();
    if (v15)
      goto LABEL_15;
    goto LABEL_22;
  }
  v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15)
  {
LABEL_22:
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
LABEL_15:
  v3 = 4;
  while (1)
  {
    if ((v14 & 0xC000000000000001) != 0)
      v16 = (id)MEMORY[0x1C3B73D18](v3 - 4, v14);
    else
      v16 = *(id *)(v14 + 8 * v3);
    v7 = (unint64_t)v16;
    v17 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
      goto LABEL_43;
    if (objc_msgSend(v16, sel_status) == 1)
      break;

    ++v3;
    if (v17 == v15)
      goto LABEL_22;
  }
  swift_bridgeObjectRelease_n();
  outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(objc_msgSend(v11, sel_provider), (SEL *)&selRef_bundleIdentifier);
  v51 = ConversationControlsManager.phoneToICSBundleID(_:)(v18, v19);
  v21 = v20;
  swift_bridgeObjectRelease();
  if (!v21)
  {

    goto LABEL_12;
  }
  v22 = objc_msgSend(v11, sel_provider);
  v23 = objc_msgSend(v22, sel_isSystemProvider);

  v24 = v52;
  if ((v23 & 1) != 0)
  {
    v25 = objc_msgSend((id)v7, sel_provider);
    v26 = objc_msgSend(v25, sel_isSystemProvider);

    if ((v26 & 1) != 0)
    {

LABEL_70:
      swift_bridgeObjectRelease();

      goto LABEL_12;
    }
  }
  v27 = objc_msgSend(v53, sel_currentCalls);
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v29 = specialized Sequence.compactMap<A>(_:)(v28, v0);
  swift_bridgeObjectRelease();
  v30 = specialized Set.init<A>(_:)(v29);
  swift_bridgeObjectRetain();
  v31 = Set.init(minimumCapacity:)();
  v58 = v31;
  if (v55 >> 62)
  {
    swift_bridgeObjectRetain();
    v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v32)
      goto LABEL_49;
LABEL_30:
    v54 = (id)v30;
    if (v32 >= 1)
    {
      for (i = 0; i != v32; ++i)
      {
        if ((v55 & 0xC000000000000001) != 0)
          v34 = (id)MEMORY[0x1C3B73D18](i, v55);
        else
          v34 = *(id *)(v55 + 8 * i + 32);
        v35 = v34;
        if (objc_msgSend(v34, sel_isUIApplicationElement))
        {
          v36 = outlined bridged method (pb) of @objc FBSDisplayLayoutElement.bundleIdentifier.getter(v35);
          v38 = v37;

          if (v38)
          {
            specialized Set._Variant.insert(_:)(v57, v36, v38);
            swift_bridgeObjectRelease();
          }
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v31 = v58;
      v24 = v52;
      v30 = (uint64_t)v54;
      goto LABEL_50;
    }
  }
  else
  {
    v32 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v32)
      goto LABEL_30;
LABEL_49:
    swift_bridgeObjectRelease();
LABEL_50:
    v39 = specialized _NativeSet.intersection(_:)(v31, v30);
    swift_bridgeObjectRelease();
    v40 = *(_QWORD *)(v39 + 16);
    swift_release();
    if (!v40)
    {

      goto LABEL_70;
    }
    if (!v32)
    {
LABEL_68:
      v50._countAndFlagsBits = v51;
      v50._object = v21;
      ConversationControlsManager.openApp(withBundleIdentifier:)(v50);

      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRetain();
    v41 = 4;
    while (1)
    {
      v42 = (v55 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1C3B73D18](v41 - 4, v55)
          : *(id *)(v55 + 8 * v41);
      v43 = v42;
      v44 = v41 - 3;
      if (__OFADD__(v41 - 4, 1))
        break;
      if (objc_msgSend(v42, sel_isUIApplicationElement))
      {
        v45 = outlined bridged method (pb) of @objc FBSDisplayLayoutElement.bundleIdentifier.getter(v43);
        v47 = v46;

        v24 = v52;
        if (v47)
        {
          if (v45 == v51 && v47 == v21)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_72;
          }
          v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v49 & 1) != 0)
          {
            swift_bridgeObjectRelease();
LABEL_72:
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            goto LABEL_23;
          }
        }
      }
      else
      {

        v24 = v52;
      }
      ++v41;
      if (v44 == v32)
      {
        swift_bridgeObjectRelease();
        goto LABEL_68;
      }
    }
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall ConversationControlsManager.resumeCallButtonTapped()()
{
  _QWORD *v0;
  uint64_t v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v1, (uint64_t)&static Logger.conversationControls);
  v2 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v2))
  {
    v3 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v3);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v4, v5, "Resume call button tapped");
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x270));
  objc_opt_self();
  v6 = swift_dynamicCastObjCClass();
  if (v6)
  {
    v7 = v6;
    v8 = *(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
    objc_msgSend(v8, sel_unholdCall_, v7);

  }
  OUTLINED_FUNCTION_9_8();
}

Swift::Void __swiftcall ConversationControlsManager.shareNameAndPhotoTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_185();
}

Swift::Void __swiftcall ConversationControlsManager.shareNameTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_185();
}

Swift::Void __swiftcall ConversationControlsManager.acceptNameTapped(button:)(UIControl *button)
{
  OUTLINED_FUNCTION_185();
}

void ConversationControlsManager.shareNameAndPhotoTapped(button:)()
{
  os_log_type_t v0;
  NSObject *v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  void (*v8)(void);
  const char *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  os_log_type_t v17;
  _WORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_93();
  v24 = v5;
  v25 = v6;
  v8 = v7;
  v10 = v9;
  OUTLINED_FUNCTION_413();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_51_0();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - v14;
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_138_0();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v16 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v16, (uint64_t)&static Logger.conversationControls);
  v17 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_23_5(v17))
  {
    v18 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_124_3(v18);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v1, v0, v10, v2);
    OUTLINED_FUNCTION_60();
  }

  if (one-time initialization token for shared != -1)
    swift_once();
  v19 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_182_0((uint64_t)v1->isa);
  OUTLINED_FUNCTION_654();
  v8();
  v20 = OUTLINED_FUNCTION_113();
  (*(void (**)(uint64_t))((*v19 & (uint64_t)v1->isa) + 0x930))(v20);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v4, (uint64_t)v15, type metadata accessor for ConversationControlsAppLaunchButtonType);
  if (swift_getEnumCaseMultiPayload() - 9 >= 3)
  {
    OUTLINED_FUNCTION_68_2((uint64_t)v15);
    OUTLINED_FUNCTION_68_2(v4);
  }
  else
  {
    outlined destroy of AccountUpdateNotice(v4, type metadata accessor for ConversationControlsAppLaunchButtonType);
    OUTLINED_FUNCTION_153_1();
    OUTLINED_FUNCTION_352();
    OUTLINED_FUNCTION_153();
    (*(void (**)(uint64_t))(v21 + 2360))(v3);
  }
  if (OUTLINED_FUNCTION_81_7(*(uint64_t (**)(void))((*v19 & (uint64_t)v1->isa) + 0x400)))
  {
    OUTLINED_FUNCTION_67_12();
    OUTLINED_FUNCTION_257_0();
    OUTLINED_FUNCTION_104_6(v24, v25, v22, v23);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationControlsManager.acceptScreenShareRequestTapped(button:)(UIControl *button)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_30_6();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
  v6 = OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_643();
  v7 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v8 = 136315138;
    ObjC metadata update function for ConversationControlsManager();
    v9 = v6;
    v10 = String.init<A>(reflecting:)();
    v12 = OUTLINED_FUNCTION_45_5(v10, v11);
    OUTLINED_FUNCTION_61_0(v12);
    OUTLINED_FUNCTION_253_0();

    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v2, v3, "Allow screen share request tapped %s", v8);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v13 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_147_0(v1, v14, v15, v13);
  OUTLINED_FUNCTION_60_3();
  v16 = OUTLINED_FUNCTION_652_0();
  v17 = (_QWORD *)OUTLINED_FUNCTION_15();
  v18 = MEMORY[0x1E0DF06E8];
  v17[2] = v16;
  v17[3] = v18;
  v17[4] = v6;
  OUTLINED_FUNCTION_607();
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in ConversationControlsManager.acceptScreenShareRequestTapped(button:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a4;
  v5 = type metadata accessor for UUID();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[10] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in ConversationControlsManager.acceptScreenShareRequestTapped(button:)()
{
  void *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, _QWORD);
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(uint64_t **)(v1 + 48);
  swift_release();
  ConversationControlsManager.removeIncomingScreenShareRequest()();
  if (OUTLINED_FUNCTION_133_0(*v2))
  {
    specialized Conversation.currentScreenSharingRequest(ignoring:)();
    OUTLINED_FUNCTION_37_0();
    if (v0)
    {
      v5 = *(_QWORD *)(v1 + 64);
      v4 = *(_QWORD *)(v1 + 72);
      v6 = *(_QWORD *)(v1 + 56);
      v7 = OUTLINED_FUNCTION_123(v3, sel_UUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      OUTLINED_FUNCTION_9_28();
      v9 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t))(v8 + 680))(v1 + 16);
      v11 = v10;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v12 = *(_QWORD *)(*v11 + 16);
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = *v11;
      *(_QWORD *)(v13 + 16) = v12 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v12, v4, v6);
      v9(v1 + 16, 0);

    }
  }
  OUTLINED_FUNCTION_508();
  ConversationControlsManager.showHUD()();
  ConversationControlsManager.startScreenShareWithCountdown(completion:)();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t ConversationControlsManager.removeIncomingScreenShareRequest()()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)&static Logger.conversationControls);
  v2 = v0;
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v5)
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v18 = v8;
    *(_DWORD *)v7 = 136315394;
    if ((*(uint64_t (**)(void))((*v6 & *v2) + 0x568))())
    {
      type metadata accessor for HUDActivity(0);
      v9 = String.init<A>(reflecting:)();
      v11 = v10;
    }
    else
    {
      v11 = 0xE300000000000000;
      v9 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v11, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    type metadata accessor for ConversationControlsManager(0);
    v13 = v2;
    v14 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v3, v4, "Ending incomingScreenShareRequest activity %s %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v8, -1, -1);
    MEMORY[0x1C3B751B8](v7, -1, -1);

  }
  else
  {

  }
  v16 = (*(uint64_t (**)(uint64_t))((*v6 & *v2) + 0x568))(v12);
  if (v16)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 224))(v16);
    swift_release();
  }
  return (*(uint64_t (**)(_QWORD))((*v6 & *v2) + 0x570))(0);
}

Swift::Void __swiftcall ConversationControlsManager.cancelScreenShareRequestTapped(button:)(UIControl *button)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_30_6();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v7, (uint64_t)&static Logger.conversationControls);
  v8 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v8))
  {
    v9 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_220_0(v9);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v2, v3, "Cancel screen share request tapped", v4);
    OUTLINED_FUNCTION_60();
  }

  v10 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_147_0(v1, v11, v12, v10);
  OUTLINED_FUNCTION_60_3();
  v13 = OUTLINED_FUNCTION_652_0();
  v14 = (_QWORD *)OUTLINED_FUNCTION_15();
  v15 = MEMORY[0x1E0DF06E8];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v5;
  OUTLINED_FUNCTION_607();
  swift_release();
  OUTLINED_FUNCTION_91();
}

uint64_t closure #1 in ConversationControlsManager.cancelScreenShareRequestTapped(button:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in ConversationControlsManager.cancelScreenShareRequestTapped(button:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_521();
  ConversationControlsManager.removeIncomingScreenShareRequest()();
  if (OUTLINED_FUNCTION_129_3(*v0))
  {
    OUTLINED_FUNCTION_67_12();
    OUTLINED_FUNCTION_257_0();
    OUTLINED_FUNCTION_590();
    OUTLINED_FUNCTION_96_7(41, v2, v3, v4);
    OUTLINED_FUNCTION_10();
  }
  ConversationControlsManager.declineOrCancelScreenShareRequest()();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v1 + 8));
}

Swift::Void __swiftcall ConversationControlsManager.declineScreenShareRequestTapped(button:)(UIControl *button)
{
  _QWORD *v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(unint64_t);

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationControls);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    v4 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v4);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v5, v6, "Decline screen share request tapped");
    OUTLINED_FUNCTION_60();
  }

  if (OUTLINED_FUNCTION_35_24(*v1))
  {
    OUTLINED_FUNCTION_15_69();
    v7 = OUTLINED_FUNCTION_569(21);
    v8(v7);
    OUTLINED_FUNCTION_10();
  }
  ConversationControlsManager.declineOrCancelScreenShareRequest()();
}

Swift::Void __swiftcall ConversationControlsManager.acceptRemoteControlRequestTapped(button:)(UIControl *button)
{
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint8_t *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(unint64_t);
  _QWORD *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  Class isa;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  Swift::String v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t);
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  id v100[9];

  OUTLINED_FUNCTION_93();
  v6 = type metadata accessor for PersonNameComponents();
  OUTLINED_FUNCTION_47_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v90 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v94 = v10;
  v95 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v87 - v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  v97 = (uint64_t)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Participant();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_41();
  v96 = v19;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v20 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v20, (uint64_t)&static Logger.conversationControls);
  v21 = OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_643();
  v22 = OUTLINED_FUNCTION_12_0();
  v23 = OUTLINED_FUNCTION_51_3(v22);
  v91 = v1;
  v93 = v5;
  if (v23)
  {
    v24 = (uint8_t *)OUTLINED_FUNCTION_105();
    v25 = (void *)OUTLINED_FUNCTION_105();
    v92 = v14;
    v100[0] = v25;
    *(_DWORD *)v24 = 136315138;
    v88 = v24 + 4;
    v98 = v21;
    ObjC metadata update function for ConversationControlsManager();
    v26 = v21;
    v89 = v6;
    v27 = v26;
    v28 = String.init<A>(reflecting:)();
    v30 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, (uint64_t *)v100);
    OUTLINED_FUNCTION_530(v30);
    OUTLINED_FUNCTION_450();

    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v2, v4, "Allow remote control request tapped %s", v24);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v21) + 0x400))())
  {
    OUTLINED_FUNCTION_17_49();
    v31 = OUTLINED_FUNCTION_569(20);
    v32(v31);
    OUTLINED_FUNCTION_10();
  }
  if (one-time initialization token for shared != -1)
    swift_once();
  v33 = (_QWORD *)(*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 888))();
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_9_28();
  (*(void (**)(id *__return_ptr))(v34 + 376))(v100);
  v35 = v100[0];
  if ((unint64_t)v100[0] >> 61)
  {
    v38 = 1;
    v37 = v97;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (RemoteControlRequest, Participant, Bool));
    OUTLINED_FUNCTION_469();
    v36 = swift_projectBox() + *(int *)(v1 + 48);
    v37 = v97;
    OUTLINED_FUNCTION_605(v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    v38 = 0;
  }
  __swift_storeEnumTagSinglePayload(v37, v38, 1, v17);
  outlined consume of RemoteControlState((unint64_t)v35);
  OUTLINED_FUNCTION_69_0(v37, 1, v17);
  if (v49)
  {
    v39 = OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_96_3(v39, (uint64_t *)&demangling cache variable for type metadata for Participant?);
  }
  else
  {
    v40 = v37;
    v41 = v96;
    OUTLINED_FUNCTION_605(v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    OUTLINED_FUNCTION_9_28();
    v43 = (*(uint64_t (**)(void))(v42 + 2312))();
    MEMORY[0x1E0C80A78](v43);
    *(&v87 - 2) = v41;
    v44 = v3;
    specialized _ArrayProtocol.filter(_:)((uint64_t (*)(char *))partial apply for closure #1 in closure #5 in ScreenSharingBroadcasterView.body.getter, (uint64_t)(&v87 - 4), v45);
    v46 = v94;
    specialized Collection.first.getter(v47, v94);
    OUTLINED_FUNCTION_13_3();
    v48 = v95;
    OUTLINED_FUNCTION_69_0(v46, 1, v95);
    if (v49)
    {
      OUTLINED_FUNCTION_30_4();
      v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v41, v17);
      OUTLINED_FUNCTION_32_18(v50, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      v97 = v44;
      outlined init with take of StagedCollaboration(v46, (uint64_t)v14, type metadata accessor for Participant);
      v51 = *(void **)&v14[*(int *)(v48 + 28)];
      if (v51)
      {
        v52 = v51;
        outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v52);
        if (v53)
        {
          if ((objc_msgSend(v52, sel_shouldHideContact) & 1) != 0)
          {
            v92 = v14;
            OUTLINED_FUNCTION_8_8();
            v54 = v90;
            PersonNameComponents.init()();
            PersonNameComponents.givenName.setter();
            PersonNameComponents.familyName.setter();
            if (one-time initialization token for initials != -1)
              swift_once();
            OUTLINED_FUNCTION_2_0();
            v55 = (id)static NSPersonNameComponentsFormatter.initials;
            isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            v57 = objc_msgSend(v55, sel_stringFromPersonNameComponents_, isa);

            v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v60 = v59;

            (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v54, v6);
            v98 = (_QWORD *)v58;
            v99 = v60;
            lazy protocol witness table accessor for type String and conformance String();
            StringProtocol.localizedUppercase.getter();

            OUTLINED_FUNCTION_133();
            OUTLINED_FUNCTION_30_4();
            OUTLINED_FUNCTION_13_3();
            OUTLINED_FUNCTION_19_1();
            outlined destroy of AccountUpdateNotice((uint64_t)v92, type metadata accessor for Participant);
            (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v17);
            goto LABEL_32;
          }

          OUTLINED_FUNCTION_2_1();
        }
        else
        {

        }
      }
      v94 = v17;
      v61 = v93;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v14, v93, type metadata accessor for Participant);
      OUTLINED_FUNCTION_11_1();
      ParticipantContactDetailsCache.contactDetails(for:)(v61, v62, v63, v64, v65, v66, v67, v68, v87, (uint64_t)v88, v89, v90, v91, (uint64_t)v92, v93, v94, v95, v96, v97,
        (uint64_t)v98);
      v69 = v100[0];
      v70 = v100[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_53();

      OUTLINED_FUNCTION_11_0();
      OUTLINED_FUNCTION_68_2(v61);
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_133();
      v71 = OUTLINED_FUNCTION_53();
      if (v69)
      {
        v72 = OUTLINED_FUNCTION_25_1(v71, sel_identifier);
        OUTLINED_FUNCTION_37_0();
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        Participant.handle.getter();
        v73._countAndFlagsBits = OUTLINED_FUNCTION_38_21();
        String.hashWithSalt(salt:)(v73);
        OUTLINED_FUNCTION_13_3();
        OUTLINED_FUNCTION_53();
        v74 = OUTLINED_FUNCTION_64();
        v76 = specialized Sequence<>.contains(_:)(v74, v75, v33);
        OUTLINED_FUNCTION_30_4();
        v77 = OUTLINED_FUNCTION_2_1();
        if ((v76 & 1) == 0)
        {
          OUTLINED_FUNCTION_9_28();
          v84 = (*(uint64_t (**)(void))(v83 + 496))();
          OUTLINED_FUNCTION_37_17(v84, type metadata accessor for Participant);
          v85 = OUTLINED_FUNCTION_531();
          v86(v85);
          goto LABEL_33;
        }
        OUTLINED_FUNCTION_37_17(v77, type metadata accessor for Participant);
        v78 = OUTLINED_FUNCTION_531();
        v80(v78, v79);
      }
      else
      {
        v81 = OUTLINED_FUNCTION_30_4();
        OUTLINED_FUNCTION_37_17(v81, type metadata accessor for Participant);
        (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v94);
      }
    }
  }
LABEL_32:
  OUTLINED_FUNCTION_9_28();
  OUTLINED_FUNCTION_419(*(uint64_t (**)(uint64_t))(v82 + 504));
LABEL_33:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationControlsManager.declineRemoteControlRequestTapped(button:)(UIControl *button)
{
  _QWORD *v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationControls);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    v4 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v4);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v5, v6, "Decline remote control request tapped");
    OUTLINED_FUNCTION_60();
  }

  if (OUTLINED_FUNCTION_35_24(*v1))
  {
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_257_0();
    OUTLINED_FUNCTION_96_7(21, 0x80000001BD67F7A0, v7, v8);
    OUTLINED_FUNCTION_10();
  }
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_351();
  OUTLINED_FUNCTION_353(*(uint64_t (**)(_QWORD))(v9 + 504));
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall ConversationControlsManager.cancelRemoteControlRequestTapped(button:)(UIControl *button)
{
  _QWORD *v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t (*v12)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationControls);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    v4 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v4);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v5, v6, "Cancel remote control request tapped");
    OUTLINED_FUNCTION_60();
  }

  if ((OUTLINED_FUNCTION_12_67(**(_QWORD **)((char *)v1
                                            + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features)) & 1) != 0
    && OUTLINED_FUNCTION_35_24(*v1))
  {
    OUTLINED_FUNCTION_15_69();
    OUTLINED_FUNCTION_590();
    OUTLINED_FUNCTION_648(v7, v8, v9, v10);
    OUTLINED_FUNCTION_10();
  }
  if (OUTLINED_FUNCTION_35_24(*v1))
  {
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_257_0();
    OUTLINED_FUNCTION_96_7(20, 0x80000001BD674810, v11, v12);
    OUTLINED_FUNCTION_10();
  }
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_39_6();
  (*(void (**)(void))(v13 + 512))();
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall ConversationControlsManager.endRemoteControlSessionTapped(button:)(UIControl *button)
{
  _QWORD *v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t (*v12)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationControls);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    v4 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v4);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v5, v6, "End remote control session tapped");
    OUTLINED_FUNCTION_60();
  }

  if ((OUTLINED_FUNCTION_12_67(**(_QWORD **)((char *)v1
                                            + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features)) & 1) != 0
    && OUTLINED_FUNCTION_35_24(*v1))
  {
    OUTLINED_FUNCTION_15_69();
    v7 = OUTLINED_FUNCTION_313_0();
    OUTLINED_FUNCTION_648(v7, v8, v9, v10);
    OUTLINED_FUNCTION_10();
  }
  if (OUTLINED_FUNCTION_35_24(*v1))
  {
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_257_0();
    OUTLINED_FUNCTION_96_7(33, 0x80000001BD67F810, v11, v12);
    OUTLINED_FUNCTION_10();
  }
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_39_6();
  (*(void (**)(void))(v13 + 520))();
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall ConversationControlsManager.learnMoreNotTrustedContactTapped(button:)(UIControl *button)
{
  NSObject *v1;
  uint8_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  unint64_t v12;
  void (*v13)(unint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  NSObject *v20;
  os_log_type_t v21;
  _WORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  NSURL *v26;
  NSObject *v27;
  NSObject *v28;
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;
  id v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;

  OUTLINED_FUNCTION_93();
  v42 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_101_0();
  v7 = type metadata accessor for URL();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_1();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v10 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_41_3(v10))
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v11 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v1, v4, "Learn more about not trusted contacts tapped", v11);
    OUTLINED_FUNCTION_60();
  }

  if ((OUTLINED_FUNCTION_12_67(**(_QWORD **)((char *)&v1->isa
                                            + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features)) & 1) != 0
    && OUTLINED_FUNCTION_296_0())
  {
    OUTLINED_FUNCTION_274_0();
    v12 = OUTLINED_FUNCTION_313_0();
    v13(v12);
    OUTLINED_FUNCTION_10();
  }
  v15 = OUTLINED_FUNCTION_296_0();
  if (v15)
  {
    v16 = v14;
    v17 = OUTLINED_FUNCTION_15_6();
    (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v16 + 32))(0xD00000000000002CLL, 0x80000001BD67F870, 1, v17, v16);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_61();
  URL.init(string:)();
  v18 = OUTLINED_FUNCTION_69_0(v3, 1, v7);
  if (v19)
  {
    OUTLINED_FUNCTION_30_7(v18, &demangling cache variable for type metadata for URL?);
    v20 = OUTLINED_FUNCTION_26_31();
    v21 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_13_0(v21))
    {
      v22 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_124_3(v22);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v20, (os_log_type_t)v15, "Failed to create URL", v2);
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    v23 = OUTLINED_FUNCTION_38_21();
    OUTLINED_FUNCTION_533(v23, v24, v25);
    URL._bridgeToObjectiveC()(v26);
    v28 = v27;
    TUOpenURLWithError();
    OUTLINED_FUNCTION_4_39();
    v41 = 0;
    if ((_DWORD)v3)
    {
      v29 = *(void (**)(uint64_t))(v5 + 8);
      v30 = 0;
      v31 = OUTLINED_FUNCTION_124_0();
      v29(v31);
    }
    else
    {
      v32 = 0;
      OUTLINED_FUNCTION_26_31();
      v33 = OUTLINED_FUNCTION_232();
      if (OUTLINED_FUNCTION_21_12(v33))
      {
        v34 = (uint8_t *)OUTLINED_FUNCTION_105();
        v40 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v34 = 136315138;
        v35 = OUTLINED_FUNCTION_2_0();
        if (v41)
        {
          OUTLINED_FUNCTION_59(v35, &lazy cache variable for type metadata for NSError);
          v36 = v41;
          v37 = String.init<A>(reflecting:)();
          v39 = v38;
        }
        else
        {
          v39 = 0xE300000000000000;
          v37 = 7104878;
        }
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, &v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_21_0();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v28, v33, "Failed to launch learn more URL, reason: %s", v34);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_39_0((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    }

  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationControlsManager.dismissEnhancedEmergencyRequestTapped(button:)(UIControl *button)
{
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  _WORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  unsigned __int8 v93;
  uint64_t v94;
  _QWORD v95[5];
  char v96;
  _OWORD v97[2];
  uint64_t v98;
  char v99;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v5 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v5))
  {
    v6 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_220_0(v6);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v1, v2, "EnhancedEmergency: dismiss enhanced emergency request tapped", v3);
    OUTLINED_FUNCTION_60();
  }

  if (OUTLINED_FUNCTION_35_24((uint64_t)v1->isa))
  {
    v7 = OUTLINED_FUNCTION_17_49();
    OUTLINED_FUNCTION_127_3(v7, v8, v9, v10, v11, v12, v13, v14, v78, *((uint64_t *)&v78 + 1), v80, v81, v82, v83, v84, v85, v86, v87, v88,
      v89,
      v90,
      v91,
      v92,
      v93);
    OUTLINED_FUNCTION_10();
    outlined destroy of ConversationControlsType((uint64_t)&v90);
  }
  OUTLINED_FUNCTION_38_3();
  v15 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v15))
  {
    v16 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v16);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v17, v18, "EnhancedEmergency: send request wanna dismiss notification");
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_10_21();
  if (OUTLINED_FUNCTION_335())
  {
    v19 = OUTLINED_FUNCTION_15_69();
    OUTLINED_FUNCTION_401(v19);
    OUTLINED_FUNCTION_10();
  }
  else
  {
    v98 = 0;
    memset(v97, 0, sizeof(v97));
    v99 = -1;
  }
  v95[0] = 19;
  OUTLINED_FUNCTION_527();
  v96 = v20;
  OUTLINED_FUNCTION_63_4((uint64_t)v97, (uint64_t)&v90);
  OUTLINED_FUNCTION_63_4((uint64_t)v95, (uint64_t)&v94);
  if (v93 == 255)
  {
    OUTLINED_FUNCTION_9_42((uint64_t)v95);
    OUTLINED_FUNCTION_9_42((uint64_t)v97);
    OUTLINED_FUNCTION_649();
    if (v36)
    {
      OUTLINED_FUNCTION_408(v58, &demangling cache variable for type metadata for ConversationControlsType?, v59, v60, v61, v62, v63, v64, v78, *((uint64_t *)&v78 + 1), v80, v81, v82, v83);
      goto LABEL_19;
    }
LABEL_22:
    OUTLINED_FUNCTION_408(v58, &demangling cache variable for type metadata for (ConversationControlsType?, ConversationControlsType?), v59, v60, v61, v62, v63, v64, v78, *((uint64_t *)&v78 + 1), v80, v81, v82, v83);
    goto LABEL_23;
  }
  OUTLINED_FUNCTION_664(v21, v22, &demangling cache variable for type metadata for ConversationControlsType?, v23, v24, v25, v26, v27, v78);
  OUTLINED_FUNCTION_649();
  if (v36)
  {
    OUTLINED_FUNCTION_9_42((uint64_t)v95);
    OUTLINED_FUNCTION_9_42((uint64_t)v97);
    v58 = OUTLINED_FUNCTION_100(v66, v67, v68, v69, v70, v71);
    goto LABEL_22;
  }
  v37 = OUTLINED_FUNCTION_526(v28, v29, v30, v31, v32, v33, v34, v35, v78);
  OUTLINED_FUNCTION_543((uint64_t)v37, v38, v39, v40, v41, v42);
  v44 = v43;
  OUTLINED_FUNCTION_14_15(v43, v45, v46, v47, v48, v49, v50, v51, v79);
  OUTLINED_FUNCTION_90_1((uint64_t)v95);
  OUTLINED_FUNCTION_90_1((uint64_t)v97);
  OUTLINED_FUNCTION_100(v52, v53, v54, v55, v56, v57);
  OUTLINED_FUNCTION_90_1((uint64_t)&v90);
  if ((v44 & 1) == 0)
  {
LABEL_23:
    v65 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (one-time initialization token for enhancedEmergencyRequestWannaDismissNotification == -1)
      goto LABEL_24;
    goto LABEL_27;
  }
LABEL_19:
  v65 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (one-time initialization token for enhancedEmergencyUploadDismissDuringStreamingNotification != -1)
LABEL_27:
    swift_once();
LABEL_24:
  v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v73 = (void *)MEMORY[0x1C3B72E00](v72);
  v74 = OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_489(v74, sel_postNotificationName_object_);

  if (OUTLINED_FUNCTION_335())
  {
    OUTLINED_FUNCTION_15_6();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
    v75 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_89_11(v75, (__n128)xmmword_1BD646740);
    OUTLINED_FUNCTION_105_6(v76, v77);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_397();
}

#error "1BD274328: call analysis failed (funcsize=121)"

Swift::Void __swiftcall ConversationControlsManager.choosePhotoEnhancedEmergencyRequestTapped(button:)(UIControl *button)
{
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  _WORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  unsigned __int8 v94;
  uint64_t v95;
  _QWORD v96[5];
  char v97;
  _OWORD v98[2];
  uint64_t v99;
  char v100;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  OUTLINED_FUNCTION_11_17();
  v5 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v5))
  {
    v6 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_220_0(v6);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v1, v2, "EnhancedEmergency: choose photo enhanced emergency request tapped", v3);
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_136_1();
  if (OUTLINED_FUNCTION_335())
  {
    v7 = OUTLINED_FUNCTION_17_49();
    OUTLINED_FUNCTION_127_3(v7, v8, v9, v10, v11, v12, v13, v14, v79, *((uint64_t *)&v79 + 1), v81, v82, v83, v84, v85, v86, v87, v88, v89,
      v90,
      v91,
      v92,
      v93,
      v94);
    OUTLINED_FUNCTION_10();
    outlined destroy of ConversationControlsType((uint64_t)&v91);
  }
  OUTLINED_FUNCTION_38_3();
  v15 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v15))
  {
    v16 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v16);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v17, v18, "EnhancedEmergency: send request to choose photo notification");
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_136_1();
  if (OUTLINED_FUNCTION_44_10())
  {
    v19 = OUTLINED_FUNCTION_15_69();
    OUTLINED_FUNCTION_401(v19);
    OUTLINED_FUNCTION_10();
  }
  else
  {
    v99 = 0;
    memset(v98, 0, sizeof(v98));
    v100 = -1;
  }
  v96[0] = 19;
  OUTLINED_FUNCTION_527();
  v97 = v20;
  OUTLINED_FUNCTION_63_4((uint64_t)v98, (uint64_t)&v91);
  OUTLINED_FUNCTION_63_4((uint64_t)v96, (uint64_t)&v95);
  if (v94 == 255)
  {
    OUTLINED_FUNCTION_9_42((uint64_t)v96);
    OUTLINED_FUNCTION_9_42((uint64_t)v98);
    OUTLINED_FUNCTION_649();
    if (v36)
    {
      OUTLINED_FUNCTION_408(v58, &demangling cache variable for type metadata for ConversationControlsType?, v59, v60, v61, v62, v63, v64, v79, *((uint64_t *)&v79 + 1), v81, v82, v83, v84);
      goto LABEL_19;
    }
LABEL_22:
    OUTLINED_FUNCTION_408(v58, &demangling cache variable for type metadata for (ConversationControlsType?, ConversationControlsType?), v59, v60, v61, v62, v63, v64, v79, *((uint64_t *)&v79 + 1), v81, v82, v83, v84);
    goto LABEL_23;
  }
  OUTLINED_FUNCTION_664(v21, v22, &demangling cache variable for type metadata for ConversationControlsType?, v23, v24, v25, v26, v27, v79);
  OUTLINED_FUNCTION_649();
  if (v36)
  {
    OUTLINED_FUNCTION_9_42((uint64_t)v96);
    OUTLINED_FUNCTION_9_42((uint64_t)v98);
    v58 = OUTLINED_FUNCTION_100(v66, v67, v68, v69, v70, v71);
    goto LABEL_22;
  }
  v37 = OUTLINED_FUNCTION_526(v28, v29, v30, v31, v32, v33, v34, v35, v79);
  OUTLINED_FUNCTION_543((uint64_t)v37, v38, v39, v40, v41, v42);
  v44 = v43;
  OUTLINED_FUNCTION_14_15(v43, v45, v46, v47, v48, v49, v50, v51, v80);
  OUTLINED_FUNCTION_90_1((uint64_t)v96);
  OUTLINED_FUNCTION_90_1((uint64_t)v98);
  OUTLINED_FUNCTION_100(v52, v53, v54, v55, v56, v57);
  OUTLINED_FUNCTION_90_1((uint64_t)&v91);
  if ((v44 & 1) == 0)
  {
LABEL_23:
    v65 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (one-time initialization token for enhancedEmergencyRequestToChoosePhotoNotification == -1)
      goto LABEL_24;
    goto LABEL_29;
  }
LABEL_19:
  v65 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (one-time initialization token for enhancedEmergencyUploadPickerDuringStreamingNotification != -1)
LABEL_29:
    swift_once();
LABEL_24:
  v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v73 = (void *)MEMORY[0x1C3B72E00](v72);
  v74 = OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_489(v74, sel_postNotificationName_object_);

  if (OUTLINED_FUNCTION_335())
  {
    v75 = OUTLINED_FUNCTION_15_69();
    OUTLINED_FUNCTION_349(v75);
    OUTLINED_FUNCTION_10();
  }
  if (OUTLINED_FUNCTION_44_10())
  {
    OUTLINED_FUNCTION_15_6();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
    v76 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_89_11(v76, (__n128)xmmword_1BD646740);
    OUTLINED_FUNCTION_105_6(v77, v78);
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_10();
  }
}

unint64_t ConversationControlsManager.phoneToICSBundleID(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = a1;
  if (!a2)
    goto LABEL_7;
  if (a1 != 0xD000000000000015 || a2 != 0x80000001BD680650)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      return 0xD000000000000017;
LABEL_7:
    swift_bridgeObjectRetain();
    return v2;
  }
  return 0xD000000000000017;
}

Swift::Void __swiftcall ConversationControlsManager.pttMarkChannelActive()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_410(v1);
  v2 = OUTLINED_FUNCTION_15_69();
  v3 = OUTLINED_FUNCTION_101(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 216));
  OUTLINED_FUNCTION_10();
  if ((v3 & 1) == 0
    || (OUTLINED_FUNCTION_10_21(), OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v4 + 1688)))
    || (OUTLINED_FUNCTION_74_5(),
        v5 = OUTLINED_FUNCTION_15_69(),
        v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 224))(v5, v3),
        OUTLINED_FUNCTION_10(),
        v6))
  {
    OUTLINED_FUNCTION_91();
  }
  else
  {
    ConversationControlsManager.pttChannelState.setter();
  }
}

Swift::Void __swiftcall ConversationControlsManager.pttLeaveButtonTapped(button:)(UIControl *button)
{
  NSObject *v1;
  uint64_t v2;
  _QWORD *v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  _WORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  __CFUserNotification *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(_QWORD);

  OUTLINED_FUNCTION_96();
  v6 = v1;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v9 = OUTLINED_FUNCTION_7_22();
  *v3 = v9;
  OUTLINED_FUNCTION_4_57(v9, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v1 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_74_5();
  v10 = OUTLINED_FUNCTION_15_69();
  v11 = OUTLINED_FUNCTION_101(v10, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 216));
  OUTLINED_FUNCTION_10();
  if ((v11 & 1) == 0)
    goto LABEL_14;
  OUTLINED_FUNCTION_74_5();
  objc_opt_self();
  v12 = OUTLINED_FUNCTION_328();
  if (!v12)
  {
    OUTLINED_FUNCTION_113();
    goto LABEL_14;
  }
  v3 = (_QWORD *)v12;
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_16;
LABEL_5:
  v13 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v13, (uint64_t)&static Logger.conversationControls);
  v14 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v14))
  {
    v15 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_480(v15);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v1, v4, "PTT Leave Button Tapped", v5);
    OUTLINED_FUNCTION_60();
  }

  v16 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_confirmLeavePTTChannelAlert;
  v17 = *(uint64_t *)((char *)&v1->isa
                   + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_confirmLeavePTTChannelAlert);
  if (v17)
  {
    v18 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 144);
    v19 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v20 = (__CFUserNotification *)v18(v19);
    OUTLINED_FUNCTION_43();
    if (v20)
    {
      CFUserNotificationCancel(v20);
      OUTLINED_FUNCTION_669(0);

    }
  }
  v21 = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_251();
  type metadata accessor for PlatformAlert();
  v22 = objc_msgSend(v3, sel_channelDisplayName);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_637();

  v23 = OUTLINED_FUNCTION_391();
  v26 = static PlatformAlert.confirmLeavePTTChannel(_:handler:)(v23, v24, v25, v21);
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_669((uint64_t)v26);
  v27 = *(uint64_t *)((char *)&v6->isa + v16);
  if (v27)
  {
    v28 = *(void (**)(_QWORD))(*(_QWORD *)v27 + 336);
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v28(0);
    OUTLINED_FUNCTION_43();
  }
  ConversationControlsManager.updatePTTPresentationForLeaveChannelAlert(isPresented:)(1);
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_17_22();
LABEL_14:
  OUTLINED_FUNCTION_65_1();
}

void closure #1 in ConversationControlsManager.pttLeaveButtonTapped(button:)(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (char *)v4;
    if ((a1 & 1) != 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v6 = type metadata accessor for Logger();
      __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
      v7 = Logger.logObject.getter();
      v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_1BD004000, v7, v8, "User has confirmed that they want to leave the PTT channel.", v9, 2u);
        MEMORY[0x1C3B751B8](v9, -1, -1);
      }

      v10 = *(id *)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController];
      ConversationController.pttLeaveChannel()();

    }
    ConversationControlsManager.confirmLeavePTTChannelAlert.setter(0);
    ConversationControlsManager.updatePTTPresentationForLeaveChannelAlert(isPresented:)(0);

  }
}

uint64_t ConversationControlsManager.updatePTTPresentationForLeaveChannelAlert(isPresented:)(char a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  char v18;

  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x400);
  if (!v4()
    || (v6 = v5,
        v7 = swift_getObjectType(),
        LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(v7, v6),
        result = swift_unknownObjectRelease(),
        (v6 & 1) == 0))
  {
    v9 = (*(uint64_t (**)(void))((*v3 & **(_QWORD **)((char *)v1
                                                   + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features))
                              + 0x50))();
    result = v4();
    v11 = v10;
    if ((v9 & 1) != 0)
    {
      if ((a1 & 1) != 0)
      {
        if (!result)
          return result;
        ObjectType = swift_getObjectType();
        (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v11 + 96))(0xD00000000000002ELL, 0x80000001BD6805F0, ObjectType, v11);
      }
      else
      {
        if (!result)
          return result;
        v14 = swift_getObjectType();
        (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 88))(0xD00000000000002FLL, 0x80000001BD6805C0, 1, v14, v11);
      }
      return swift_unknownObjectRelease();
    }
    else if (result)
    {
      v13 = swift_getObjectType();
      v15 = 3;
      v16 = 0u;
      v17 = 0u;
      v18 = 6;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v11 + 16))(&v15, 1, v13, v11);
      swift_unknownObjectRelease();
      return outlined destroy of ConversationControlsType((uint64_t)&v15);
    }
  }
  return result;
}

Swift::Void __swiftcall ConversationControlsManager.dismissConfirmLeavePTTChannelAlert()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  __CFUserNotification *v8;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_confirmLeavePTTChannelAlert);
    if (v5)
    {
      v6 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 144);
      v7 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v8 = (__CFUserNotification *)v6(v7);
      OUTLINED_FUNCTION_43();
      if (v8)
      {
        CFUserNotificationCancel(v8);
        OUTLINED_FUNCTION_669(0);
        ConversationControlsManager.updatePTTPresentationForLeaveChannelAlert(isPresented:)(0);

      }
    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationControlsManager.pttDoneButtonTapped(recognizer:)(UITapGestureRecognizer *recognizer)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v5 = OUTLINED_FUNCTION_7_22();
  *v1 = v5;
  OUTLINED_FUNCTION_17(v5, *MEMORY[0x1E0DEF740]);
  v6 = OUTLINED_FUNCTION_83_12();
  v7 = OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  if (OUTLINED_FUNCTION_9(v7, sel_state) != (id)3)
    goto LABEL_7;
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_9;
LABEL_4:
  v8 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v8, (uint64_t)&static Logger.conversationControls);
  v9 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v9))
  {
    v10 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v10);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v11, v12, "PTT Done Button Tapped");
    OUTLINED_FUNCTION_60();
  }

  ConversationController.pttStopTransmit()();
LABEL_7:
  OUTLINED_FUNCTION_91();
}

void ConversationControlsManager.pttTalkButtonGestureChanged(recognizer:)(void *a1)
{
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  _WORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = (char *)objc_msgSend(a1, sel_state);
  if ((unint64_t)(v2 - 3) >= 3)
  {
    if (v2 == (char *)1)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v9 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v9, (uint64_t)&static Logger.conversationControls);
      v10 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_5_3(v10))
      {
        v11 = (_WORD *)OUTLINED_FUNCTION_7_8();
        OUTLINED_FUNCTION_47_2(v11);
        OUTLINED_FUNCTION_2_5(&dword_1BD004000, v12, v13, "PTT Start Transmit Action Occurred");
        OUTLINED_FUNCTION_60();
      }

      v14 = OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x6F8));
      OUTLINED_FUNCTION_419(*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 248));
      OUTLINED_FUNCTION_43();
      ConversationController.pttStartTransmit()();
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
    v4 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v4))
    {
      v5 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_47_2(v5);
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v6, v7, "PTT Stop Transmit Action Occurred");
      OUTLINED_FUNCTION_60();
    }

    v8 = OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x6F8));
    OUTLINED_FUNCTION_353(*(uint64_t (**)(_QWORD))(*(_QWORD *)v8 + 248));
    OUTLINED_FUNCTION_43();
    ConversationController.pttStopTransmit()();
  }
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(Swift::Bool dismissBannerOnAppOpen)
{
  uint64_t *v1;
  uint8_t *v2;
  _BOOL4 v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  os_log_type_t v9;
  os_log_type_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  os_log_type_t v23;
  _WORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = (uint8_t *)v1;
  v3 = dismissBannerOnAppOpen;
  OUTLINED_FUNCTION_27_1(*v1);
  v4 = OUTLINED_FUNCTION_15_69();
  v5 = (void *)OUTLINED_FUNCTION_187(v4);
  OUTLINED_FUNCTION_10();
  outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(v5, (SEL *)&selRef_bundleIdentifier);
  if (v6)
  {
    v7 = v6;
    v8 = ConversationControlsManager.isActiveCallGreenTea3P()();
    if (!v8)
    {
      swift_bridgeObjectRelease();
      return;
    }
    HIDWORD(v25) = v3;
    OUTLINED_FUNCTION_59(v8, &lazy cache variable for type metadata for FBSOpenApplicationOptions);
    v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD645380;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_354();
    v12 = MEMORY[0x1E0DEAFA0];
    *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(inited + 72) = 1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_354();
    *(_QWORD *)(inited + 168) = v12;
    *(_BYTE *)(inited + 144) = 1;
    v13 = Dictionary.init(dictionaryLiteral:)();
    @nonobjc FBSOpenApplicationOptions.__allocating_init(dictionary:)(v13);
    v15 = v14;
    v16 = objc_msgSend((id)objc_opt_self(), sel_serviceWithDefaultShellEndpoint);
    if (v16)
    {
      v17 = v16;
      v18 = OUTLINED_FUNCTION_153_1();
      v19 = (void *)MEMORY[0x1C3B72E00](v18);
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_481();
      v20 = OUTLINED_FUNCTION_15();
      *(_BYTE *)(v20 + 16) = v3;
      *(_QWORD *)(v20 + 24) = v7;
      v21 = OUTLINED_FUNCTION_117((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> (), v25, MEMORY[0x1E0C809B0], 1107296256, v26, v27);
      swift_release();
      objc_msgSend(v17, sel_openApplication_withOptions_completion_, v19, v15, v21);
      _Block_release(v21);

    }
    else
    {
      OUTLINED_FUNCTION_133();
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v22 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v22, (uint64_t)&static Logger.conversationControls);
      v23 = OUTLINED_FUNCTION_31_6();
      if (OUTLINED_FUNCTION_13_0(v23))
      {
        v24 = (_WORD *)OUTLINED_FUNCTION_7_8();
        OUTLINED_FUNCTION_47_2(v24);
        OUTLINED_FUNCTION_130(&dword_1BD004000, 1, v10, "Unable to launch GreenTea3P App because FBSOpenApplicationService was null", v2);
        OUTLINED_FUNCTION_60();
      }

    }
  }
  OUTLINED_FUNCTION_20_9();
}

Swift::Bool __swiftcall ConversationControlsManager.isActiveCallGreenTea3P()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  Swift::Bool result;

  OUTLINED_FUNCTION_27_1(*v1);
  v2 = OUTLINED_FUNCTION_67_12();
  v3 = (void *)(*(uint64_t (**)(uint64_t))(v0 + 160))(v2);
  OUTLINED_FUNCTION_10();
  objc_msgSend(v3, sel_supportsDynamicSystemUI);
  OUTLINED_FUNCTION_49_5();
  if ((_DWORD)v1)
  {
    objc_msgSend(objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init), sel_groupConversations);
    OUTLINED_FUNCTION_49_5();
    TUDeviceHasChinaSKU();
  }
  OUTLINED_FUNCTION_0();
  return result;
}

void closure #1 in ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  if ((a3 & 1) != 0)
  {
    v4 = a4 + 16;
    swift_beginAccess();
    v5 = (_QWORD *)MEMORY[0x1C3B752C0](v4);
    if (v5)
    {
      v6 = v5;
      v7 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x400))();
      v9 = v8;

      if (v7)
      {
        ObjectType = swift_getObjectType();
        (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32))(0xD000000000000018, 0x80000001BD6805A0, 1, ObjectType, v9);
        swift_unknownObjectRelease();
      }
    }
  }
}

Swift::Void __swiftcall ConversationControlsManager.endGreenTea3PCallButtonTapped(button:)(UIControl *button)
{
  _QWORD *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;

  v3 = v1;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v6 = OUTLINED_FUNCTION_7_22();
  *v2 = v6;
  OUTLINED_FUNCTION_4_57(v6, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v1 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v7 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v7, (uint64_t)&static Logger.conversationControls);
  v8 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v8))
  {
    v9 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v9);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v10, v11, "endGreenTea3PCallButtonTapped");
    OUTLINED_FUNCTION_60();
  }

  if (ConversationControlsManager.isActiveCallGreenTea3P()())
  {
    OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x270));
    objc_opt_self();
    v12 = OUTLINED_FUNCTION_328();
    if (v12)
    {
      v13 = v12;
      v14 = ConversationControlsManager.heldCalls()();
      if (v14 >> 62)
        v15 = _CocoaArrayWrapper.endIndex.getter();
      else
        v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_27();
      v16 = *(void **)((char *)v3 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
      if (v15 < 1)
        objc_msgSend(v16, sel_disconnectCall_withReason_, v13, 0);
      else
        objc_msgSend(v16, sel_disconnectCurrentCallAndActivateHeld);
    }
    OUTLINED_FUNCTION_113();
  }
  OUTLINED_FUNCTION_91();
}

uint64_t closure #1 in ConversationControlsManager.heldCalls()(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  void (*v14)(char *, uint64_t);
  char v15;
  uint64_t v17;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  swift_beginAccess();
  v11 = MEMORY[0x1C3B752C0](a2 + 16);
  if (!v11)
    goto LABEL_5;
  v12 = (_QWORD *)v11;
  if (!objc_msgSend(a1, sel_isOnHold))
  {

LABEL_5:
    v15 = 0;
    return v15 & 1;
  }
  v13 = objc_msgSend(a1, sel_uniqueProxyIdentifierUUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x278))();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  LOBYTE(v13) = dispatch thunk of static Equatable.== infix(_:_:)();

  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v14(v10, v4);
  v15 = v13 ^ 1;
  return v15 & 1;
}

void thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool)(uint64_t a1, void (*a2)(void))
{
  a2();
  OUTLINED_FUNCTION_0();
}

void thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool)(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall ConversationControlsManager.updateGreenTea3PCallStateIfNeeded()()
{
  _QWORD *v0;
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unsigned int v10;
  id v11;
  unsigned int v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t isEscapingClosureAtFileLocation;
  void *v18;
  uint64_t v19;
  os_log_type_t v20;
  _WORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, unint64_t, unint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD aBlock[6];

  v3 = v0;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v6 = OUTLINED_FUNCTION_7_22();
  *v1 = v6;
  OUTLINED_FUNCTION_4_57(v6, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x270));
  v7 = OUTLINED_FUNCTION_15_69();
  v8 = (void *)OUTLINED_FUNCTION_187(v7);
  v9 = OUTLINED_FUNCTION_10();
  v10 = OUTLINED_FUNCTION_9(v9, sel_supportsDynamicSystemUI);

  if (!v10)
    goto LABEL_15;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v12 = objc_msgSend(v11, sel_groupConversations);

  if (!v12 || !TUDeviceHasChinaSKU())
    goto LABEL_15;
  objc_msgSend(*(id *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_fetchCurrentCalls);
  v13 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  aBlock[4] = specialized thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool);
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool);
  aBlock[3] = &block_descriptor_134;
  v14 = _Block_copy(aBlock);
  v15 = swift_release();
  v16 = OUTLINED_FUNCTION_50_11(v15, sel_callsPassingTest_);

  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    goto LABEL_17;
  OUTLINED_FUNCTION_59(isEscapingClosureAtFileLocation, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  OUTLINED_FUNCTION_73_8();
  OUTLINED_FUNCTION_14_18();
  if (!(v13 >> 62))
  {
    v18 = *(void **)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_8;
  }
LABEL_18:
  OUTLINED_FUNCTION_8_8();
  v18 = (void *)_CocoaArrayWrapper.endIndex.getter();
  OUTLINED_FUNCTION_2_1();
LABEL_8:
  OUTLINED_FUNCTION_2_1();
  if ((uint64_t)v18 <= 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v19 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v19, (uint64_t)&static Logger.conversationControls);
    v20 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v20))
    {
      v21 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_47_2(v21);
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v22, v23, "updateGreenTea3PHUD: No GreenTea3P calls remaining, dismissing UI");
      OUTLINED_FUNCTION_60();
    }

    if (OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))((*v2 & *v3) + 0x3E8)))
    {
      v25 = v24;
      v26 = OUTLINED_FUNCTION_15_6();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
      v27 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v27 + 16) = xmmword_1BD645380;
      *(_QWORD *)(v27 + 32) = 23;
      *(_OWORD *)(v27 + 40) = 0u;
      *(_OWORD *)(v27 + 56) = 0u;
      *(_BYTE *)(v27 + 72) = 6;
      v28 = OUTLINED_FUNCTION_495(v27, 6, (__n128)0);
      v29(v28, 0xD000000000000016, 0x80000001BD67F930, 0, v26, v25);
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_10();
    }
  }
LABEL_15:
  OUTLINED_FUNCTION_91();
}

uint64_t closure #1 in ConversationControlsManager.updateGreenTea3PCallStateIfNeeded()(void *a1)
{
  id v2;
  unsigned int v3;

  v2 = objc_msgSend(a1, sel_provider);
  v3 = objc_msgSend(v2, sel_supportsDynamicSystemUI);

  if (!v3)
    return 0;
  if ((objc_msgSend(a1, sel_isActive) & 1) != 0)
    return 1;
  return (uint64_t)objc_msgSend(a1, sel_isOnHold);
}

Swift::Void __swiftcall ConversationControlsManager.setupGreenTea3PStateObservers()()
{
  uint64_t v0;
  id v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t *v4;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v2 = objc_msgSend(v1, sel_groupConversations);

  if (v2 && TUDeviceHasChinaSKU())
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_299();
    v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC15ConversationKit22ConversationController_greenTea3PCallStatusChanged);
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_394(*v4, (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers());
  }
  OUTLINED_FUNCTION_9_0();
}

void closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  void *v23;
  unsigned int v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t aBlock;
  __int128 v61;
  __int128 v62;
  uint64_t v63;

  v58 = a2;
  v5 = type metadata accessor for UUID();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v57 - v10;
  v12 = type metadata accessor for DispatchPredicate();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_28:
    swift_once();
    goto LABEL_6;
  }
  swift_beginAccess();
  v17 = MEMORY[0x1C3B752C0](a3 + 2);
  if (!v17)
    return;
  a3 = (_QWORD *)v17;
  ObjectType = swift_getObjectType();
  v19 = v58;
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 200))(ObjectType, v58);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x278))(v20);
  v21 = static UUID.== infix(_:_:)();
  v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22(v9, v5);
  v22(v11, v5);
  if ((v21 & 1) == 0)
    goto LABEL_25;
  v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 160))(ObjectType, v19);
  v24 = objc_msgSend(v23, sel_supportsDynamicSystemUI);

  if (!v24)
    goto LABEL_25;
  v6 = v19;
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_28;
LABEL_6:
  v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)&static Logger.conversationControls);
  swift_unknownObjectRetain_n();
  v26 = Logger.logObject.getter();
  v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v59 = v29;
    aBlock = a1;
    *(_DWORD *)v28 = 136315138;
    *(_QWORD *)&v61 = v6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
    v30 = String.init<A>(reflecting:)();
    aBlock = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v26, v27, "greenTea3PCallStatusChanged %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v29, -1, -1);
    MEMORY[0x1C3B751B8](v28, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v32 = *(void **)((char *)a3 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
  v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = partial apply for closure #1 in closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers();
  *(_QWORD *)(v34 + 24) = v33;
  *((_QWORD *)&v62 + 1) = thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool)partial apply;
  v63 = v34;
  aBlock = MEMORY[0x1E0C809B0];
  *(_QWORD *)&v61 = 1107296256;
  *((_QWORD *)&v61 + 1) = thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool);
  *(_QWORD *)&v62 = &block_descriptor_378;
  v35 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v36 = objc_msgSend(v32, sel_callsPassingTest_, v35);
  _Block_release(v35);
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v35 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v37 >> 62))
    {
      v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain();
  v38 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_12:
  v39 = swift_bridgeObjectRelease();
  v40 = *MEMORY[0x1E0DEEDD8] & *a3;
  if (v38 < 1)
  {
    v45 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x270);
    v45(v39);
    v47 = v46;
    v48 = swift_getObjectType();
    LODWORD(v47) = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 184))(v48, v47);
    v49 = swift_unknownObjectRelease();
    switch((int)v47)
    {
      case 1:
        v45(v49);
        v51 = v50;
        v52 = swift_getObjectType();
        LOBYTE(v51) = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 376))(v52, v51);
        swift_unknownObjectRelease();
        if ((v51 & 1) == 0)
          goto LABEL_19;
        ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(1);
        goto LABEL_24;
      case 2:
LABEL_19:
        v40 = *MEMORY[0x1E0DEEDD8] & *a3;
        break;
      case 4:
        if (!(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x400))(v49))
          goto LABEL_24;
        v42 = v53;
        v43 = swift_getObjectType();
        v44 = 22;
        goto LABEL_15;
      case 6:
        if (!(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x3E8))(v49))
          goto LABEL_24;
        v55 = v54;
        swift_getObjectType();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
        v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = xmmword_1BD645380;
        *(_QWORD *)(v56 + 32) = 23;
        *(_OWORD *)(v56 + 40) = 0u;
        *(_OWORD *)(v56 + 56) = 0u;
        *(_BYTE *)(v56 + 72) = 6;
        *(_QWORD *)(v56 + 80) = 22;
        *(_OWORD *)(v56 + 88) = 0u;
        *(_OWORD *)(v56 + 104) = 0u;
        *(_BYTE *)(v56 + 120) = 6;
        (*(void (**)(void))(v55 + 32))();
        swift_release();
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        return;
      default:
        goto LABEL_24;
    }
  }
  if (!(*(uint64_t (**)(void))(v40 + 1024))())
  {
LABEL_24:
    swift_release();
LABEL_25:

    return;
  }
  v42 = v41;
  v43 = swift_getObjectType();
  v44 = 23;
LABEL_15:
  aBlock = v44;
  v61 = 0u;
  v62 = 0u;
  LOBYTE(v63) = 6;
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v42 + 16))(&aBlock, 1, v43, v42);

  swift_unknownObjectRelease();
  outlined destroy of ConversationControlsType((uint64_t)&aBlock);
  swift_release();
}

id closure #1 in closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  void (*v14)(char *, uint64_t);
  id v15;
  id v16;
  uint64_t v18;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - v9;
  swift_beginAccess();
  v11 = MEMORY[0x1C3B752C0](a2 + 16);
  if (!v11)
    return 0;
  v12 = (_QWORD *)v11;
  v13 = objc_msgSend(a1, sel_uniqueProxyIdentifierUUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x278))();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  LOBYTE(v13) = dispatch thunk of static Equatable.== infix(_:_:)();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v14(v10, v4);
  if ((v13 & 1) != 0)
  {
    v15 = 0;
  }
  else
  {
    v16 = objc_msgSend(a1, sel_provider);
    v15 = objc_msgSend(v16, sel_supportsDynamicSystemUI);

  }
  return v15;
}

Swift::Void __swiftcall ConversationControlsManager.avLessContinueButtonTapped(button:)(UIControl *button)
{
  uint64_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  _WORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_3_81();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_59(v12, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *(_QWORD *)v2 = OUTLINED_FUNCTION_7_22();
  OUTLINED_FUNCTION_131_2(*MEMORY[0x1E0DEF740], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104));
  v13 = OUTLINED_FUNCTION_132_2();
  OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if ((v13 & 1) != 0)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v14 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v14, (uint64_t)&static Logger.conversationControls);
  v15 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_7_9(v15))
  {
    v16 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_581(v16);
    OUTLINED_FUNCTION_130(&dword_1BD004000, v13, v10, "avLessContinueButtonTapped", v2);
    OUTLINED_FUNCTION_60();
  }

  v17 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_396(v17, v18, (uint64_t *)&demangling cache variable for type metadata for Date?);
  v19 = OUTLINED_FUNCTION_69_0(v1, 1, v6);
  if (v20)
  {
    OUTLINED_FUNCTION_30_7(v19, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  else
  {
    OUTLINED_FUNCTION_260_0((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    v21 = OUTLINED_FUNCTION_555();
    CNKCoreAnalyticsReporter.reportAVLessLeaveConfirmation(presentedAt:action:)(v21, 0);
    OUTLINED_FUNCTION_101((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  OUTLINED_FUNCTION_552();
  OUTLINED_FUNCTION_133_3();
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationControlsManager.continueHandoffButtonTapped()()
{
  NSObject *v0;
  uint64_t *v1;
  uint64_t v2;
  os_log_type_t v3;
  os_log_type_t v4;
  uint64_t v5;
  NSObject *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  id v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  os_log_type_t v31;
  uint8_t *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  _WORD *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_93();
  v6 = v0;
  v7 = (uint8_t *)OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v8);
  v9 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_59(v11, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DEF740], v9);
  LOBYTE(v0) = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_59_4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v0 & 1) == 0)
  {
    __break(1u);
LABEL_28:
    swift_once();
LABEL_16:
    v38 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v38, (uint64_t)&static Logger.conversationControls);
    v39 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_13_0(v39))
    {
      v40 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_124_3(v40);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v6, (os_log_type_t)v0, "Cannot continue handoff as no conversation was being tracked by Conversation Controls", v7);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_25;
  }
  v0 = *(NSObject **)((char *)&v6->isa + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults);
  v12 = *(uint64_t *)((char *)&v6[1].isa + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults);
  v13 = OUTLINED_FUNCTION_15_6();
  if ((OUTLINED_FUNCTION_52(v13, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 688)) & 1) == 0)
    goto LABEL_26;
  v14 = (void *)OUTLINED_FUNCTION_132_4((uint64_t)v6->isa);
  if (!v14)
  {
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_16;
    goto LABEL_28;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, sel_state);
  if (v16 == (id)1)
  {
    v17 = OUTLINED_FUNCTION_25_1(1, sel_localParticipantAssociation);
    OUTLINED_FUNCTION_639(v17);
    if (v12)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v18 = OUTLINED_FUNCTION_17_2();
      v19 = __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationControls);
      v20 = v15;
      Logger.logObject.getter();
      v21 = OUTLINED_FUNCTION_638();
      if (OUTLINED_FUNCTION_250(v21))
      {
        v22 = (uint8_t *)OUTLINED_FUNCTION_105();
        v51 = OUTLINED_FUNCTION_105();
        v53 = v51;
        *(_DWORD *)v22 = 136315138;
        v23 = OUTLINED_FUNCTION_2_11(v51, sel_UUID);
        OUTLINED_FUNCTION_202_1();

        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v24 = OUTLINED_FUNCTION_229_0();
        OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        v26 = OUTLINED_FUNCTION_9_57(v24, v25, &v53);
        OUTLINED_FUNCTION_61_0(v26);
        OUTLINED_FUNCTION_253_0();

        OUTLINED_FUNCTION_54_1();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v19, v3, "Joining conversation %s via handoff", v22);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      ConversationController.joinConversation()();
      goto LABEL_26;
    }
  }
  v27 = OUTLINED_FUNCTION_25_1((uint64_t)v16, sel_handoffEligibility);
  if (!v27)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v41 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v41, (uint64_t)&static Logger.conversationControls);
    v6 = v15;
    v42 = OUTLINED_FUNCTION_26_31();
    v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)OUTLINED_FUNCTION_105();
      v52 = OUTLINED_FUNCTION_105();
      v53 = v52;
      *(_DWORD *)v44 = 136315138;
      v45 = OUTLINED_FUNCTION_123(v52, sel_UUID);
      OUTLINED_FUNCTION_202_1();

      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      v46 = OUTLINED_FUNCTION_229_0();
      OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      v48 = OUTLINED_FUNCTION_304(v46, v47, &v53);
      OUTLINED_FUNCTION_61_0(v48);
      OUTLINED_FUNCTION_26_38();

      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v42, v43, "Cannot continue handoff as conversation %s tracked by Conversation Controls was not handoff eligible", v44);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

LABEL_25:
    goto LABEL_26;
  }
  v28 = v27;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v29 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v29, (uint64_t)&static Logger.conversationControls);
  v30 = OUTLINED_FUNCTION_582();
  Logger.logObject.getter();
  v31 = OUTLINED_FUNCTION_583();
  if (OUTLINED_FUNCTION_241(v31))
  {
    v32 = (uint8_t *)OUTLINED_FUNCTION_105();
    v53 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v32 = 136315138;
    v33 = objc_msgSend(v30, sel_UUID, v32 + 4);
    OUTLINED_FUNCTION_202_1();

    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v34 = OUTLINED_FUNCTION_229_0();
    v36 = v35;
    OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v37 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v53);
    OUTLINED_FUNCTION_61_0(v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v2, v4, "Continuing handoff for eligible conversation %s", v32);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v49 = *(Class *)((char *)&v6->isa + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
  v50 = v28;
  objc_msgSend(v49, sel_continueHandoffForConversationWithEligibility_, v50);

LABEL_26:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationControlsManager.lagunaPullButtonTapped()()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t isa;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  os_log_type_t v22;
  _WORD *v23;
  uint64_t v24;
  os_log_type_t v25;
  _WORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  OUTLINED_FUNCTION_96();
  v4 = v0;
  v5 = (uint8_t *)OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x1E0DEF740], v7);
  isa = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_39_0((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((isa & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v7 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults + 8);
  v11 = OUTLINED_FUNCTION_15_6();
  if ((OUTLINED_FUNCTION_39_0(v11, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 632)) & 1) != 0)
  {
    isa = (uint64_t)v4;
    v12 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x290))();
    if (v12)
    {
      v13 = (void *)v12;
      v14 = *(void **)((char *)v4 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
      v15 = OUTLINED_FUNCTION_25_1(v12, sel_neighborhoodActivityConduit);
      v16 = objc_msgSend(v15, sel_activeSplitSessionTV);

      if (v16)
      {
        v18 = OUTLINED_FUNCTION_25_1(v17, sel_neighborhoodActivityConduit);
        v19 = OUTLINED_FUNCTION_123((uint64_t)v18, sel_UUID);
        OUTLINED_FUNCTION_202_1();

        isa = (uint64_t)UUID._bridgeToObjectiveC()().super.isa;
        OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
        v29[4] = closure #1 in ConversationControlsManager.lagunaPullButtonTapped();
        v29[5] = 0;
        v29[0] = MEMORY[0x1E0C809B0];
        v29[1] = 1107296256;
        v29[2] = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
        v29[3] = &block_descriptor_138;
        v20 = _Block_copy(v29);
        objc_msgSend(v18, sel_pullConversation_fromTVDevice_completion_, isa, v16, v20);
        _Block_release(v20);

      }
      else
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v24 = OUTLINED_FUNCTION_17_2();
        OUTLINED_FUNCTION_3(v24, (uint64_t)&static Logger.conversationControls);
        v25 = OUTLINED_FUNCTION_232();
        if (OUTLINED_FUNCTION_5_3(v25))
        {
          v26 = (_WORD *)OUTLINED_FUNCTION_7_8();
          OUTLINED_FUNCTION_47_2(v26);
          OUTLINED_FUNCTION_2_5(&dword_1BD004000, v27, v28, "Cannot pull laguna conversation since no activeSplitSessionTV");
          OUTLINED_FUNCTION_60();
        }

        isa = (uint64_t)v13;
      }
LABEL_14:

      goto LABEL_15;
    }
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_7:
      v21 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v21, (uint64_t)&static Logger.conversationControls);
      v22 = OUTLINED_FUNCTION_232();
      if (OUTLINED_FUNCTION_23_5(v22))
      {
        v23 = (_WORD *)OUTLINED_FUNCTION_7_8();
        OUTLINED_FUNCTION_124_3(v23);
        OUTLINED_FUNCTION_130(&dword_1BD004000, isa, (os_log_type_t)v7, "Cannot pull laguna conversation since no conversation was being tracked by Conversation Controls", v5);
        OUTLINED_FUNCTION_60();
      }
      goto LABEL_14;
    }
LABEL_17:
    swift_once();
    goto LABEL_7;
  }
LABEL_15:
  OUTLINED_FUNCTION_65_1();
}

void closure #1 in ConversationControlsManager.lagunaPullButtonTapped()(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  NSObject *oslog;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  v4 = a2;
  v5 = a2;
  oslog = Logger.logObject.getter();
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 67109378;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 8) = 2112;
    if (a2)
    {
      v9 = a2;
      v10 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v10 = 0;
    }
    *v8 = v10;

    _os_log_impl(&dword_1BD004000, oslog, v6, "Laguna pull conversation success: %{BOOL}d error: %@", (uint8_t *)v7, 0x12u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v8, -1, -1);
    MEMORY[0x1C3B751B8](v7, -1, -1);

  }
  else
  {

  }
}

Swift::Void __swiftcall ConversationControlsManager.acceptCallButtonTapped(button:)(UIControl *button)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  void *v12;
  void (**v13)(uint64_t, id);
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  _WORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(unint64_t);

  OUTLINED_FUNCTION_93();
  v4 = v1;
  v5 = (_QWORD *)OUTLINED_FUNCTION_8_13();
  v6 = *(v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, _QWORD *))(v6 + 104))(v2, *MEMORY[0x1E0DEF740], v5);
  v8 = OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_39_0((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  v5 = *(_QWORD **)((char *)v4 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_notificationCenter);
  if (one-time initialization token for cnk_acceptCallButtonTapped != -1)
LABEL_31:
    swift_once();
  objc_msgSend(v5, sel_postNotificationName_object_, static NSNotificationName.cnk_acceptCallButtonTapped, v4);
  OUTLINED_FUNCTION_383(0x636361206C6C6163, 0x7065u);
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_27_1(*v4);
  v10 = OUTLINED_FUNCTION_106_5();
  v11 = (uint64_t (*)(uint64_t))v2[20];
  v12 = (void *)v11(v10);
  v13 = (void (**)(uint64_t, id))objc_msgSend(v12, sel_isFaceTimeProvider);

  if (!(_DWORD)v13
    || (v14 = (void *)(*(uint64_t (**)(void))((*v9 & *v4) + 0x290))()) != 0
    && (v15 = v14,
        v13 = (void (**)(uint64_t, id))objc_msgSend(v14, sel_resolvedAudioVideoMode),
        v15,
        v13 == (void (**)(uint64_t, id))1))
  {
    ConversationController.joinConversation()();
  }
  else
  {
    if (OUTLINED_FUNCTION_146_1())
    {
      v16 = OUTLINED_FUNCTION_83_13();
      v13[5](v16, v13);
      OUTLINED_FUNCTION_10();
    }
    OUTLINED_FUNCTION_9_28();
    if (OUTLINED_FUNCTION_8_64(*(uint64_t (**)(void))(v17 + 1072)))
    {
      v18 = OUTLINED_FUNCTION_83_13();
      v13[14](v18, v13);
      OUTLINED_FUNCTION_10();
    }
    ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
  }
  if (ConversationControlsManager.isActiveCallGreenTea3P()() && OUTLINED_FUNCTION_146_1())
  {
    OUTLINED_FUNCTION_637();
    ObjectType = swift_getObjectType();
    if ((OUTLINED_FUNCTION_584(ObjectType, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 72)) & 1) == 0)
    {
      v20 = OUTLINED_FUNCTION_12_67(**(_QWORD **)((char *)v4
                                                + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features));
      ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)((v20 & 1) == 0);
    }
    swift_unknownObjectRelease();
  }
  if (OUTLINED_FUNCTION_146_1())
  {
    OUTLINED_FUNCTION_637();
    v21 = *(uint64_t **)((char *)v4 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features);
    OUTLINED_FUNCTION_9_28();
    if (((*(uint64_t (**)(void))(v22 + 168))() & 1) != 0
      || (OUTLINED_FUNCTION_12_67(*v21) & 1) != 0
      || (objc_msgSend((id)v11(v10), sel_isTelephonyProvider), OUTLINED_FUNCTION_4_39(), !(_DWORD)v2))
    {
LABEL_28:
      swift_unknownObjectRelease();
      goto LABEL_29;
    }
    OUTLINED_FUNCTION_9_28();
    if (((*(uint64_t (**)(void))(v23 + 640))() & 1) != 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v24 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v24, (uint64_t)&static Logger.conversationControls);
      v25 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_5_3(v25))
      {
        v26 = (_WORD *)OUTLINED_FUNCTION_7_8();
        OUTLINED_FUNCTION_47_2(v26);
        OUTLINED_FUNCTION_2_5(&dword_1BD004000, v27, v28, "multiple calls: skipping banner dismissal for answered telephony");
        OUTLINED_FUNCTION_60();
      }

      goto LABEL_28;
    }
    swift_getObjectType();
    OUTLINED_FUNCTION_590();
    v29 = OUTLINED_FUNCTION_569(23);
    v30(v29);
    OUTLINED_FUNCTION_19_0();
  }
LABEL_29:
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationControlsManager.invalidateCallWaitingSystemApertureAssertionIfNeeded(reason:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t ObjectType;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x400))();
  if (result)
  {
    v7 = v6;
    ConversationControlsManager.wantsCallWaitingInSystemAperture.getter();
    if ((v8 & 1) != 0)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 80))(a1, a2, ObjectType, v7);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall ConversationControlsManager.rejectCallButtonTapped(button:)(UIControl *button)
{
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v10 = OUTLINED_FUNCTION_7_22();
  *v2 = v10;
  OUTLINED_FUNCTION_17(v10, *MEMORY[0x1E0DEF740]);
  v11 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_383(0x6A6572206C6C6163, 0x6365u);
    if (objc_msgSend(*(id *)((char *)v4 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags), sel_callScreeningEnabledM3))
    {
      v12 = OUTLINED_FUNCTION_415();
      OUTLINED_FUNCTION_147_0((uint64_t)v7, v13, v14, v12);
      OUTLINED_FUNCTION_60_3();
      v15 = OUTLINED_FUNCTION_652_0();
      v16 = (_QWORD *)OUTLINED_FUNCTION_15();
      v17 = MEMORY[0x1E0DF06E8];
      v16[2] = v15;
      v16[3] = v17;
      v16[4] = v4;
      OUTLINED_FUNCTION_607();
      swift_release();
    }
    else
    {
      rejectCall #1 @Sendable () in ConversationControlsManager.rejectCallButtonTapped(button:)(v4);
    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

void rejectCall #1 @Sendable () in ConversationControlsManager.rejectCallButtonTapped(button:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x270))();
  v2 = v1;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 184))(ObjectType, v2);
  swift_unknownObjectRelease();
  ConversationController.leaveConversation(reason:)();
}

uint64_t closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[18] = a4;
  type metadata accessor for MainActor();
  v4[19] = static MainActor.shared.getter();
  v4[20] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[21] = v5;
  return swift_task_switch();
}

uint64_t closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:)()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return OUTLINED_FUNCTION_4_4();
}

{
  return swift_task_switch();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v0 + 176) = static AnsweringMachineComposer.shared;
  swift_unknownObjectRetain();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(void **)(v0 + 176);
  if (v1)
  {
    OUTLINED_FUNCTION_27_1(**(_QWORD **)(v0 + 144));
    v2 = OUTLINED_FUNCTION_146();
    OUTLINED_FUNCTION_525(v2);
    OUTLINED_FUNCTION_10();
    v3 = OUTLINED_FUNCTION_311_0();
    v4 = MEMORY[0x1C3B72E00](v3);
    *(_QWORD *)(v0 + 184) = v4;
    OUTLINED_FUNCTION_30_4();
    *(_QWORD *)(v0 + 56) = v0 + 192;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:);
    v5 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    v6 = (_QWORD *)(v0 + 80);
    v6[1] = 0x40000000;
    v6[2] = @objc completion handler block implementation for <A>@escaping @callee_unowned @convention(block) (@unowned Bool) -> () with result type Bool;
    v6[3] = &block_descriptor_370;
    v6[4] = v5;
    objc_msgSend(v1, sel_screenCallWithUUID_manualScreening_completion_, v4, 0, v6);
    return swift_continuation_await();
  }
  else
  {
    swift_release();
    rejectCall #1 @Sendable () in ConversationControlsManager.rejectCallButtonTapped(button:)(*(_QWORD **)(v0 + 144));
    return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
  }
}

{
  OUTLINED_FUNCTION_459();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void *v1;
  char v2;

  v1 = *(void **)(v0 + 184);
  swift_release();
  OUTLINED_FUNCTION_10();
  v2 = *(_BYTE *)(v0 + 192);

  if ((v2 & 1) == 0)
    rejectCall #1 @Sendable () in ConversationControlsManager.rejectCallButtonTapped(button:)(*(_QWORD **)(v0 + 144));
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

void ConversationControlsManager.wantsCallWaitingInSystemAperture.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  char v10;
  unsigned __int8 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char v22;
  id v23;
  uint64_t v24;
  id v25;
  BOOL v26;
  BOOL v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  _WORD *v38;
  const char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint32_t v43;
  os_log_type_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  os_log_type_t v48;
  _WORD *v49;
  id v50;
  char v51;
  unsigned int v52;
  uint64_t v53;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v3 = OUTLINED_FUNCTION_17_2();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  v6 = v4;
  v53 = v3;
  OUTLINED_FUNCTION_291(v1, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v7 = OUTLINED_FUNCTION_328_0(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)((char *)v2
                                                                                         + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features))
                                                   + 0x50));
  v8 = *(void **)((char *)v2 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
  v9 = (unint64_t)v8;
  v10 = TUCallCenter.wantsCallWaiting.getter(v7);
  v11 = objc_msgSend(v8, sel_cnk_hasTooManyCallsForCallWaitingBanner);
  OUTLINED_FUNCTION_153();
  if ((OUTLINED_FUNCTION_328_0(*(uint64_t (**)(void))(v12 + 192)) & 1) != 0)
  {
    v13 = OUTLINED_FUNCTION_182_0(*v2);
    v15 = v14;
    ObjectType = swift_getObjectType();
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 512))(ObjectType, v15);
    v18 = OUTLINED_FUNCTION_10();
    v19 = (uint64_t)OUTLINED_FUNCTION_2_11(v18, sel_currentAudioAndVideoCallCount);
    v51 = v17;
    if (v19 == 1)
    {
      v19 = OUTLINED_FUNCTION_570(1);
      v52 = v19;
      v20 = v6;
      if ((v17 & 1) == 0)
      {
        v21 = 0;
        goto LABEL_11;
      }
    }
    else
    {
      v52 = 0;
      v22 = v17;
      v21 = 0;
      v20 = v6;
      if ((v22 & 1) == 0)
        goto LABEL_11;
    }
    LODWORD(v7) = v20;
    v23 = OUTLINED_FUNCTION_2_11(v19, sel_currentCallGroups);
    OUTLINED_FUNCTION_59((uint64_t)v23, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
    v13 = OUTLINED_FUNCTION_627();

    if (v13 >> 62)
    {
      OUTLINED_FUNCTION_399();
      v20 = _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_27();
    }
    else
    {
      v20 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    OUTLINED_FUNCTION_27();
    v21 = v20 > 1;
    OUTLINED_FUNCTION_430();
LABEL_11:
    v24 = (uint64_t)OUTLINED_FUNCTION_2_11(v19, sel_currentAudioAndVideoCallCount);
    if (v24 >= 1 && (v24 = OUTLINED_FUNCTION_570(v24), (v24 & 1) != 0))
    {
      if ((v52 & 1) != 0)
      {
        v10 = 0;
LABEL_27:
        v28 = OUTLINED_FUNCTION_2_11(v24, sel_currentCallGroups);
        OUTLINED_FUNCTION_59((uint64_t)v28, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
        v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v9 >> 62)
        {
          swift_bridgeObjectRetain();
          v29 = _CocoaArrayWrapper.endIndex.getter();
          OUTLINED_FUNCTION_27();
        }
        else
        {
          v29 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v6 = v20;
        v30 = OUTLINED_FUNCTION_27();
        if (v29 < 4)
          v11 = 0;
        else
          v11 = OUTLINED_FUNCTION_570(v30);
        goto LABEL_32;
      }
      v26 = 1;
    }
    else
    {
      LODWORD(v7) = v20;
      v25 = OUTLINED_FUNCTION_2_11(v24, sel_currentCallGroups);
      OUTLINED_FUNCTION_59((uint64_t)v25, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
      v13 = OUTLINED_FUNCTION_627();

      if (v13 >> 62)
      {
        OUTLINED_FUNCTION_399();
        v20 = _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_27();
      }
      else
      {
        v20 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v1 = v52;
      OUTLINED_FUNCTION_27();
      v26 = v20 == 2;
      if ((v52 & 1) != 0)
      {
        v10 = 0;
        OUTLINED_FUNCTION_430();
        goto LABEL_27;
      }
      OUTLINED_FUNCTION_430();
    }
    OUTLINED_FUNCTION_406(objc_msgSend(v8, sel_callWithStatus_, 3));
    if ((v51 & 1) != 0)
      v27 = v21;
    else
      v27 = v26;
    if (v13)
      v10 = 0;
    else
      v10 = v27;
    goto LABEL_27;
  }
LABEL_32:
  OUTLINED_FUNCTION_153();
  if ((OUTLINED_FUNCTION_328_0(*(uint64_t (**)(void))(v31 + 168)) & 1) != 0
    || ((v7 ^ 1) & 1) != 0
    || (v10 & 1) == 0
    || (v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_38_3();
    v44 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_14(v44))
    {
      v45 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v45 = 67109632;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v45 + 8) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v45 + 14) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v39 = "shouldShowSystemApertureOverAssociatedScene is false (isSystemApertureEnabled: %{BOOL}d, wantsCallWaiting: %"
            "{BOOL}d, hasTooManyCalls: %{BOOL}d";
      v40 = v9;
      v41 = v8;
      v42 = (uint8_t *)v45;
      v43 = 20;
      goto LABEL_41;
    }
  }
  else
  {
    v9 = OUTLINED_FUNCTION_182_0(*v2);
    v33 = v32;
    v34 = OUTLINED_FUNCTION_15_6();
    v35 = OUTLINED_FUNCTION_6_9(v34, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 128));
    v36 = OUTLINED_FUNCTION_10();
    if ((v35 & 1) != 0)
    {
      OUTLINED_FUNCTION_38_3();
      v37 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_4_14(v37))
      {
        v38 = (_WORD *)OUTLINED_FUNCTION_7_8();
        OUTLINED_FUNCTION_47_2(v38);
        v39 = "shouldShowSystemApertureOverAssociatedScene is false (activeCall is video, wantsCallWaiting)";
        v40 = v9;
        v41 = v8;
        v42 = (uint8_t *)v35;
        v43 = 2;
LABEL_41:
        _os_log_impl(&dword_1BD004000, v40, v41, v39, v42, v43);
        goto LABEL_42;
      }
    }
    else
    {
      v46 = OUTLINED_FUNCTION_2_11(v36, sel_incomingCall);
      OUTLINED_FUNCTION_406(v46);
      if (!v9)
      {
        v50 = OUTLINED_FUNCTION_2_11(v47, sel_incomingVideoCall);
        OUTLINED_FUNCTION_406(v50);
      }
      OUTLINED_FUNCTION_38_3();
      v48 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_4_14(v48))
      {
        v49 = (_WORD *)OUTLINED_FUNCTION_7_8();
        OUTLINED_FUNCTION_47_2(v49);
        OUTLINED_FUNCTION_130(&dword_1BD004000, v9, (os_log_type_t)v8, "shouldShowSystemApertureOverAssociatedScene is true (active and incoming call is NOT video, wantsCallWaiting)", (uint8_t *)v35);
LABEL_42:
        OUTLINED_FUNCTION_60();
      }
    }
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v53);
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationControlsManager.callAgainButtonTapped(button:)(UIControl *button)
{
  char v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v5 = OUTLINED_FUNCTION_7_22();
  *v2 = v5;
  OUTLINED_FUNCTION_4_57(v5, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v1 & 1) != 0)
  {
    ConversationController.callBack()();
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ConversationControlsManager.acceptScreenShare()()
{
  ConversationControlsManager.acceptScreenShare()();
}

Swift::Void __swiftcall ConversationControlsManager.acceptScreenShareWithDisplayStyle()()
{
  ConversationControlsManager.acceptScreenShare()();
}

void ConversationControlsManager.acceptScreenShare()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  OUTLINED_FUNCTION_9_33();
  v1 = OUTLINED_FUNCTION_133_0(v0);
  if (v1)
  {
    v2 = (void *)v1;
    ConversationController.requestScreenSharingPicker(with:)();
    OUTLINED_FUNCTION_7_1(v2);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

Swift::Void __swiftcall ConversationControlsManager.declineScreenShare()()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  v1 = OUTLINED_FUNCTION_133_0(*v0);
  if (v1)
  {
    v5 = (id)v1;
    specialized Conversation.currentScreenSharingRequest(ignoring:)();
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_conversationManager);
      objc_msgSend(v4, sel_cancelOrDenyScreenShareRequest_forConversation_, v3, v5);

      OUTLINED_FUNCTION_15_9(v4);
    }
    else
    {
      OUTLINED_FUNCTION_15_9(v5);
    }
  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

uint64_t ConversationControlsManager.addIncomingScreenSharingRequestActivity()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v4);
  type metadata accessor for MainActor();
  v5 = v0;
  v6 = static MainActor.shared.getter();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x1E0DF06E8];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v5;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in ConversationControlsManager.addIncomingScreenSharingRequestActivity()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[22] = a4;
  v5 = type metadata accessor for Date();
  v4[23] = v5;
  v4[24] = *(_QWORD *)(v5 - 8);
  v4[25] = swift_task_alloc();
  v6 = type metadata accessor for UUID();
  v4[26] = v6;
  v4[27] = *(_QWORD *)(v6 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = type metadata accessor for HUDActivityManager.BannerUpdate(0);
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[32] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in ConversationControlsManager.addIncomingScreenSharingRequestActivity()()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  os_log_type_t v2;
  id *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  os_log_type_t v8;
  _BOOL4 v9;
  id v10;
  uint8_t *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  id v29;
  uint8_t *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  _WORD *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  BOOL v70;
  id v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(_QWORD);
  uint64_t v104;
  os_log_type_t v105;
  os_log_type_t v106;
  _WORD *v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  NSObject *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  os_log_type_t v131;

  v3 = (id *)(v1 + 176);
  swift_release();
  OUTLINED_FUNCTION_9_28();
  v5 = (*(uint64_t (**)(void))(v4 + 1384))();
  swift_release();
  if (v5)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v0 = (uint64_t (*)(uint64_t))*v3;
    v6 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
    v7 = OUTLINED_FUNCTION_60_3();
    Logger.logObject.getter();
    v8 = OUTLINED_FUNCTION_12_0();
    v9 = OUTLINED_FUNCTION_4_14(v8);
    v10 = *v3;
    if (v9)
    {
      v11 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v1 + 160) = v10;
      ObjC metadata update function for ConversationControlsManager();
      v12 = v10;
      v13 = String.init<A>(reflecting:)();
      *(_QWORD *)(v1 + 168) = OUTLINED_FUNCTION_451(v13, v14, v15, v16, v17, v18, v19, v20, v110, v113, v116, v120);
      OUTLINED_FUNCTION_26_38();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_48(&dword_1BD004000, v5, v2, "Removing incomingScreenSharingRequest activity due to new request %s", v11);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    ConversationControlsManager.removeIncomingScreenShareRequest()();
  }
  OUTLINED_FUNCTION_9_28();
  v22 = (*(uint64_t (**)(void))(v21 + 1000))();
  swift_unknownObjectRelease();
  if (!v22)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v40 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v40, (uint64_t)&static Logger.conversationControls);
    v41 = OUTLINED_FUNCTION_12_0();
    if (!OUTLINED_FUNCTION_23_5(v41))
      goto LABEL_27;
    v42 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_124_3(v42);
    v43 = "ConversationControlsManager does not have a systemBannerPresenter so not creating Activity for incomginsScreen"
          "SharingRequest from this instance";
LABEL_26:
    OUTLINED_FUNCTION_130(&dword_1BD004000, v22, (os_log_type_t)(v1 - 80), v43, (uint8_t *)v0);
    OUTLINED_FUNCTION_60();
  }
  v121 = (_QWORD *)(v1 + 144);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v23 = *v3;
  v24 = OUTLINED_FUNCTION_17_2();
  v25 = __swift_project_value_buffer(v24, (uint64_t)&static Logger.conversationControls);
  v26 = v23;
  v126 = v25;
  OUTLINED_FUNCTION_38_3();
  v27 = OUTLINED_FUNCTION_12_0();
  v28 = OUTLINED_FUNCTION_4_14(v27);
  v29 = *v3;
  if (v28)
  {
    v30 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v30 = 136315138;
    *v121 = v29;
    ObjC metadata update function for ConversationControlsManager();
    v31 = v29;
    v32 = String.init<A>(reflecting:)();
    *(_QWORD *)(v1 + 152) = OUTLINED_FUNCTION_451(v32, v33, v34, v35, v36, v37, v38, v39, v110, v113, v116, (uint64_t)v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_58_1();

    OUTLINED_FUNCTION_48(&dword_1BD004000, v23, v2, "Starting incomingScreenSharingRequest activity %s", v30);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_12_67(**(_QWORD **)(*(_QWORD *)(v1 + 176)
                                      + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features));
  OUTLINED_FUNCTION_9_28();
  v45 = *(_QWORD *)(v1 + 240);
  v47 = *(_QWORD *)(v1 + 224);
  v46 = *(_QWORD *)(v1 + 232);
  v48 = *(_QWORD *)(v1 + 216);
  v130 = *(_QWORD *)(v1 + 248);
  v127 = *(_QWORD *)(v1 + 208);
  v128 = *(_QWORD *)(v1 + 192);
  v49 = *(uint64_t **)(v1 + 176);
  v129 = *(_QWORD *)(v1 + 184);
  if ((v50 & 1) != 0)
  {
    v117 = (*(uint64_t (**)(void))(v44 + 1336))();
    *(_QWORD *)(v1 + 64) = 25;
    *(_OWORD *)(v1 + 72) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_BYTE *)(v1 + 104) = 6;
    OUTLINED_FUNCTION_27_1(*v49);
    v52 = v51;
    UUID.init()();
    OUTLINED_FUNCTION_369_0(*(int *)(v46 + 44));
    OUTLINED_FUNCTION_368();
    *(_QWORD *)(v45 + 56) = 0;
    *(_BYTE *)(v45 + 64) = 1;
    *(_QWORD *)(v47 + 8) = v52;
    swift_unknownObjectWeakAssign();
    v53 = OUTLINED_FUNCTION_563();
    v54(v53, v47, v127);
    v55 = v49;
    OUTLINED_FUNCTION_562();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v127);
    v56 = outlined destroy of ConversationControlsType(v1 + 64);
    OUTLINED_FUNCTION_309_0(v56, v57, v58, v59, v60, v61, v62, v63, v47, v1 + 64, v117, (uint64_t)v121, v126, v127, v128, v129);
    *(_QWORD *)(v45 + *(int *)(v46 + 40)) = v49;
    v0 = type metadata accessor for HUDActivityManager.BannerUpdate;
    outlined init with take of StagedCollaboration(v45, v130, type metadata accessor for HUDActivityManager.BannerUpdate);
    v22 = v118;
    OUTLINED_FUNCTION_9_28();
    v65 = (*(uint64_t (**)(uint64_t))(v64 + 248))(v130);

    OUTLINED_FUNCTION_94(v130);
    if (v65)
    {
      v66 = *v3;
      swift_retain_n();
      v67 = v66;
      v68 = OUTLINED_FUNCTION_542();
      v69 = static os_log_type_t.default.getter();
      v70 = OUTLINED_FUNCTION_78_0(v68);
      v71 = *v3;
      if (v70)
      {
        v131 = v69;
        v72 = OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_105();
        *(_DWORD *)v72 = 136315394;
        *(_QWORD *)(v1 + 112) = v71;
        ObjC metadata update function for ConversationControlsManager();
        v73 = v71;
        v74 = String.init<A>(reflecting:)();
        *(_QWORD *)(v1 + 120) = OUTLINED_FUNCTION_451(v74, v75, v76, v77, v78, v79, v80, v81, v111, v114, (uint64_t)v118, v122);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_2_1();

        *(_WORD *)(v72 + 12) = 2080;
        *(_QWORD *)(v1 + 128) = v65;
        type metadata accessor for HUDActivity(0);
        OUTLINED_FUNCTION_21_7();
        v82 = String.init<A>(reflecting:)();
        *(_QWORD *)(v1 + 136) = OUTLINED_FUNCTION_451(v82, v83, v84, v85, v86, v87, v88, v89, v112, v115, v119, v123);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_23_0();
        OUTLINED_FUNCTION_26_6(&dword_1BD004000, v68, v131, "presented incomingScreenSharingRequest activity %s %s", (uint8_t *)v72);
        OUTLINED_FUNCTION_25_6();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_23_0();
      OUTLINED_FUNCTION_449();
      v108 = OUTLINED_FUNCTION_21_7();
      ((void (*)(uint64_t))v3)(v108);
      goto LABEL_29;
    }
    OUTLINED_FUNCTION_542();
    v105 = OUTLINED_FUNCTION_12_0();
    if (!OUTLINED_FUNCTION_23_5(v105))
      goto LABEL_27;
    goto LABEL_25;
  }
  v124 = (*(uint64_t (**)(void))(v44 + 1360))();
  *(_QWORD *)(v1 + 16) = 25;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_BYTE *)(v1 + 56) = 6;
  UUID.init()();
  OUTLINED_FUNCTION_369_0(*(int *)(v46 + 44));
  OUTLINED_FUNCTION_368();
  *(_QWORD *)(v45 + 56) = 0;
  *(_BYTE *)(v45 + 64) = 1;
  *(_QWORD *)(v47 + 8) = 0;
  swift_unknownObjectWeakAssign();
  v90 = OUTLINED_FUNCTION_563();
  v91(v90, v47, v127);
  v92 = v49;
  OUTLINED_FUNCTION_562();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v127);
  v93 = outlined destroy of ConversationControlsType(v1 + 16);
  OUTLINED_FUNCTION_309_0(v93, v94, v95, v96, v97, v98, v99, v100, v110, v113, v1 + 16, v124, v126, v127, v128, v129);
  *(_QWORD *)(v45 + *(int *)(v46 + 40)) = v49;
  outlined init with take of StagedCollaboration(v45, v130, type metadata accessor for HUDActivityManager.BannerUpdate);
  v22 = v125;
  OUTLINED_FUNCTION_9_28();
  v0 = (uint64_t (*)(uint64_t))(*(uint64_t (**)(uint64_t))(v101 + 264))(v130);

  v102 = OUTLINED_FUNCTION_202_0();
  outlined destroy of AccountUpdateNotice(v102, v103);
  if (v0)
  {
    OUTLINED_FUNCTION_449();
    v104 = OUTLINED_FUNCTION_11_1();
    ((void (*)(uint64_t))v3)(v104);
LABEL_29:
    swift_release();
    goto LABEL_30;
  }
  OUTLINED_FUNCTION_542();
  v106 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_23_5(v106))
  {
LABEL_25:
    v107 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_124_3(v107);
    v43 = "Could not present activity with screen sharing request";
    goto LABEL_26;
  }
LABEL_27:

LABEL_30:
  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_81_0();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void closure #1 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v10 = type metadata accessor for StagedCollaboration(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = MEMORY[0x1C3B752C0](a1 + 16);
  if (v13)
  {
    v14 = (_QWORD *)v13;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)&static Logger.conversationControls);
    outlined init with copy of ConversationControlsAppLaunchButtonType(a4, (uint64_t)v12, type metadata accessor for StagedCollaboration);
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v35 = a4;
      v19 = (uint8_t *)v18;
      v20 = swift_slowAlloc();
      v36 = a5;
      v21 = v20;
      v40 = v20;
      v37 = a3;
      *(_DWORD *)v19 = 136315138;
      v34 = v19 + 4;
      outlined bridged method (ob) of @objc LPLinkMetadata.title.getter(objc_msgSend(*(id *)&v12[*(int *)(v10 + 40)], sel_metadata, v19 + 4));
      v38 = v22;
      v39 = v23;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
      v24 = String.init<A>(describing:)();
      v38 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for StagedCollaboration);
      _os_log_impl(&dword_1BD004000, v16, v17, "initiateBackgroundCollaboration for: %s", v19, 0xCu);
      swift_arrayDestroy();
      v26 = v21;
      a5 = v36;
      MEMORY[0x1C3B751B8](v26, -1, -1);
      v27 = v19;
      a4 = v35;
      MEMORY[0x1C3B751B8](v27, -1, -1);
    }
    else
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for StagedCollaboration);
    }

    v28 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v29 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v14) + 0x308))();
    if (v29)
    {
      v30 = v29;
      objc_msgSend(v29, sel_initiateBackgroundCollaborationForContent_faceTimeConversation_, *(_QWORD *)(a4 + *(int *)(v10 + 40)), a5);

    }
    if ((*(uint64_t (**)(void))((*v28 & *v14) + 0x3E8))())
    {
      v32 = v31;
      swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1BD6441D0;
      *(_QWORD *)(v33 + 32) = 11;
      *(_OWORD *)(v33 + 40) = 0u;
      *(_OWORD *)(v33 + 56) = 0u;
      *(_BYTE *)(v33 + 72) = 6;
      (*(void (**)(void))(v32 + 32))();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    if (a2)
      a2(1);

  }
  else if (a2)
  {
    a2(0);
  }
}

uint64_t closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;

  *(_QWORD *)(v8 + 88) = v13;
  *(_OWORD *)(v8 + 72) = v12;
  *(_QWORD *)(v8 + 56) = a7;
  *(_QWORD *)(v8 + 64) = a8;
  *(_QWORD *)(v8 + 40) = a5;
  *(_QWORD *)(v8 + 48) = a6;
  *(_QWORD *)(v8 + 32) = a4;
  v9 = type metadata accessor for UUID();
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 112) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(_QWORD *)(v8 + 120) = static MainActor.shared.getter();
  *(_QWORD *)(v8 + 128) = dispatch thunk of Actor.unownedExecutor.getter();
  *(_QWORD *)(v8 + 136) = v10;
  return swift_task_switch();
}

uint64_t closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = objc_msgSend(*(id *)(v1 + 40), sel_UUID);
  OUTLINED_FUNCTION_653();
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v4 = (uint64_t *)(v2 + *(int *)(OUTLINED_FUNCTION_205() + 28));
  v5 = *v4;
  v6 = v4[1];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 144) = v7;
  *v7 = v1;
  v7[1] = closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:);
  return CollaborationInitiationManager.ensureInitiatorDisclosure(inConversationUUID:initiator:itemTitle:alertHostWindow:viewController:)(*(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 48), v5, v6, 0, 0);
}

{
  os_log_type_t v0;
  uint8_t *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;

  v3 = *(unsigned __int8 *)(v2 + 160);
  v4 = swift_release();
  if ((_DWORD)v3 == 1)
  {
    (*(void (**)(uint64_t))(v2 + 64))(v4);
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
    v6 = OUTLINED_FUNCTION_18_13();
    if (OUTLINED_FUNCTION_23_5(v6))
    {
      v7 = (_WORD *)OUTLINED_FUNCTION_7_8();
      OUTLINED_FUNCTION_124_3(v7);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v3, v0, "User declined to start collaboration after initiator disclosure", v1);
      OUTLINED_FUNCTION_60();
    }

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  void *v10;
  uint8_t *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v17;

  swift_release();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = *(void **)(v2 + 152);
  v4 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
  v5 = (id)OUTLINED_FUNCTION_469();
  v6 = v3;
  v7 = v0;
  Logger.logObject.getter();
  v8 = OUTLINED_FUNCTION_232();
  v9 = OUTLINED_FUNCTION_5_3(v8);
  v10 = *(void **)(v2 + 152);
  if (v9)
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_105();
    v17 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v2 + 16) = v10;
    v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v13 = String.init<A>(reflecting:)();
    *(_QWORD *)(v2 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v17);
    OUTLINED_FUNCTION_26_38();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_10_9();
    OUTLINED_FUNCTION_10_9();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v7, v1, "Failed to ensure collaboration initiator disclosure with error: %s", v11);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_10_9();

  v15 = *(uint64_t (**)(_QWORD))(v2 + 80);
  if (v15)
    OUTLINED_FUNCTION_353(v15);
  OUTLINED_FUNCTION_19_2();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *v2;
  *(_QWORD *)(*v2 + 152) = v1;
  swift_task_dealloc();
  v6 = *(_QWORD *)(v4 + 104);
  v5 = *(_QWORD *)(v4 + 112);
  v7 = *(_QWORD *)(v4 + 96);
  if (!v1)
    *(_BYTE *)(v4 + 160) = a1 & 1;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  return swift_task_switch();
}

void closure #1 in ConversationControlsManager.presentCollaboration(_:completion:)(char a1, uint64_t a2, void (*a3)(id), uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _BOOL4 v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  void (*v37)(id);
  void *v38;
  id v39;
  _QWORD v40[2];
  void (*v41)(id);
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v40[1] = a4;
  v41 = a3;
  v10 = type metadata accessor for ForegroundCollaborationState(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2 + 16;
  swift_beginAccess();
  v14 = MEMORY[0x1C3B752C0](a2 + 16);
  if (v14)
  {
    v15 = (void *)v14;
    v16 = *(id *)(v14 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);

    v17 = (uint64_t)v16 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    swift_beginAccess();
    outlined init with copy of RadarReporting(v17, (uint64_t)v42);

    v19 = v43;
    v18 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 72))(v19, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    v21 = v20 != 0;
    if ((a1 & 1) != 0 && v20)
    {
      swift_beginAccess();
      v22 = MEMORY[0x1C3B752C0](v13);
      if (v22)
      {
        v23 = (_QWORD *)v22;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (highlightURL: URL, started: Date));
        v24 = (char *)a5 + *(int *)(type metadata accessor for Collaboration(0) + 44);
        v25 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v12, v24, v25);
        v26 = v20;
        static Date.now.getter();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v23) + 0x7E0))(v12);

      }
      else
      {
        v36 = v20;
      }
      v37 = v41;
      v38 = (void *)MEMORY[0x1C3B72E00](*a5, a5[1]);
      v39 = objc_msgSend(v20, sel_openCollaborationWithIdentifier_forConversation_, v38, a6);

      if (v37)
        v37(v39);

      goto LABEL_18;
    }
  }
  else
  {
    v21 = 0;
    v20 = 0;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BD645380;
  LOBYTE(v42[0]) = a1 & 1;
  v28 = String.init<A>(reflecting:)();
  v30 = v29;
  v31 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
  v32 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v27 + 64) = v32;
  *(_QWORD *)(v27 + 32) = v28;
  *(_QWORD *)(v27 + 40) = v30;
  if (v21)
  {
    v42[0] = v20;
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUConversationManager);
    v33 = v20;
    v34 = String.init<A>(reflecting:)();
  }
  else
  {
    v35 = 0xE300000000000000;
    v34 = 7104878;
  }
  *(_QWORD *)(v27 + 96) = v31;
  *(_QWORD *)(v27 + 104) = v32;
  *(_QWORD *)(v27 + 72) = v34;
  *(_QWORD *)(v27 + 80) = v35;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (v41)
    v41(0);
LABEL_18:

}

id closure #1 in ConversationControlsManager.presentActivity(activity:completion:)(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  unsigned int v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  id result;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  NSURL *v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t aBlock;
  uint64_t v68;
  uint64_t (*v69)(uint64_t);
  void *v70;
  void (*v71)();
  _QWORD *v72;

  v61 = a3;
  v62 = a4;
  v6 = type metadata accessor for DispatchWorkItemFlags();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v63 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for URL();
  v60 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v57 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v14);
  v59 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
  v17 = a1;
  v18 = a1;
  v19 = Logger.logObject.getter();
  v20 = static os_log_type_t.default.getter();
  v21 = os_log_type_enabled(v19, v20);
  v64 = v11;
  v65 = v10;
  if (v21)
  {
    v55 = v9;
    v56 = v7;
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    aBlock = v23;
    *(_DWORD *)v22 = 136315138;
    if (a1)
    {
      v66 = (uint64_t)a1;
      v24 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      v25 = String.init<A>(reflecting:)();
      v27 = v26;
    }
    else
    {
      v27 = 0xE300000000000000;
      v25 = 7104878;
    }
    v66 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v27, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BD004000, v19, v20, "LaunchApplication error:%s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v23, -1, -1);
    MEMORY[0x1C3B751B8](v22, -1, -1);

    v9 = v55;
    v7 = v56;
  }
  else
  {

  }
  v28 = a2[3];
  v29 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v28);
  v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 104))(v28, v29);
  if (!v30
    || (v31 = v30,
        v32 = objc_msgSend(v30, sel_activity),
        v33 = objc_msgSend(v32, sel_isScreenSharingActivity),
        v31,
        v32,
        !v33))
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v45 = (void *)static OS_dispatch_queue.main.getter();
    v46 = (_QWORD *)swift_allocObject();
    v48 = v61;
    v47 = v62;
    v46[2] = v61;
    v46[3] = v47;
    v46[4] = a1;
    v71 = partial apply for closure #1 in closure #1 in ConversationControlsManager.presentActivity(activity:completion:);
    v72 = v46;
    aBlock = MEMORY[0x1E0C809B0];
    v68 = 1107296256;
    v69 = thunk for @escaping @callee_guaranteed () -> ();
    v70 = &block_descriptor_391;
    v49 = _Block_copy(&aBlock);
    v50 = a1;
LABEL_21:
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v48);
    swift_release();
    v54 = v63;
    static DispatchQoS.unspecified.getter();
    aBlock = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B7361C](0, v54, v9, v49);
    _Block_release(v49);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v54, v65);
  }
  v34 = Logger.logObject.getter();
  v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v36 = 0;
    _os_log_impl(&dword_1BD004000, v34, v35, "Posting notification to present Screen Sharing UI", v36, 2u);
    MEMORY[0x1C3B751B8](v36, -1, -1);
  }

  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  v38 = (uint64_t)v59;
  v39 = v60;
  if (result)
  {
    v40 = result;
    v41 = objc_msgSend((id)objc_opt_self(), sel_screenSharingAppURL);
    v42 = v58;
    if (v41)
    {
      v43 = v57;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v38, v43, v42);
      __swift_storeEnumTagSinglePayload(v38, 0, 1, v42);
      if (__swift_getEnumTagSinglePayload(v38, 1, v42) == 1)
      {
        v41 = 0;
      }
      else
      {
        URL._bridgeToObjectiveC()(v44);
        v41 = v51;
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v42);
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload(v38, 1, 1, v58);
    }
    objc_msgSend(v40, sel_openURL_configuration_completionHandler_, v41, 0, 0);

    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v45 = (void *)static OS_dispatch_queue.main.getter();
    v52 = swift_allocObject();
    v48 = v61;
    v53 = v62;
    *(_QWORD *)(v52 + 16) = v61;
    *(_QWORD *)(v52 + 24) = v53;
    v71 = partial apply for closure #2 in closure #1 in ConversationControlsManager.presentActivity(activity:completion:);
    v72 = (_QWORD *)v52;
    aBlock = MEMORY[0x1E0C809B0];
    v68 = 1107296256;
    v69 = thunk for @escaping @callee_guaranteed () -> ();
    v70 = &block_descriptor_397;
    v49 = _Block_copy(&aBlock);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id TVRViewServiceConfigContext.__allocating_init(deviceIdentifier:identifierType:deviceType:launchContext:launchMethod:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  void *v13;
  id v14;

  v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v13 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithDeviceIdentifier_identifierType_deviceType_launchContext_launchMethod_, v13, a3, a4, a5, a6);

  return v14;
}

void closure #1 in ConversationControlsManager.viewActivity(_:)(char a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  if ((a1 & 1) != 0)
  {
    v2 = a2 + 16;
    swift_beginAccess();
    v3 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
    if (v3)
    {
      v4 = v3;
      v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x400))();
      v7 = v6;

      if (v5)
      {
        ObjectType = swift_getObjectType();
        (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v7 + 32))(0xD00000000000001BLL, 0x80000001BD6807D0, 1, ObjectType, v7);
        swift_unknownObjectRelease();
      }
    }
  }
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerLocalStateObservers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_9_70();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v2, (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerLocalStateObservers());
  OUTLINED_FUNCTION_9_70();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalScreenSharing);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v3, (uint64_t)partial apply for closure #2 in ConversationControlsManager.setupConversationControllerLocalStateObservers());
  OUTLINED_FUNCTION_9_70();
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFailToStartCamera);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v4, (uint64_t)partial apply for closure #3 in ConversationControlsManager.setupConversationControllerLocalStateObservers());
  OUTLINED_FUNCTION_9_70();
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioRouteDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v5, (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerLocalStateObservers());
  OUTLINED_FUNCTION_9_70();
  v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_carPlayConnectedDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v6, (uint64_t)partial apply for closure #5 in ConversationControlsManager.setupConversationControllerLocalStateObservers());
  OUTLINED_FUNCTION_9_70();
  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_bluetoothAudioFormatChanged);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v7, (uint64_t)partial apply for closure #6 in ConversationControlsManager.setupConversationControllerLocalStateObservers());
  OUTLINED_FUNCTION_299();
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipantRequestedVideoUpgrade);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_394(*v8, (uint64_t)partial apply for closure #7 in ConversationControlsManager.setupConversationControllerLocalStateObservers());
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerConversationStateObservers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_9_70();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationStateDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v2, (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers());
  OUTLINED_FUNCTION_9_70();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateWantsHoldMusic);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v3, (uint64_t)partial apply for closure #2 in ConversationControlsManager.setupConversationControllerConversationStateObservers());
  OUTLINED_FUNCTION_9_70();
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isTrackingActiveConversationDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v4, (uint64_t)partial apply for closure #3 in ConversationControlsManager.setupConversationControllerConversationStateObservers());
  OUTLINED_FUNCTION_9_70();
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_avModeDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v5, (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerConversationStateObservers());
  OUTLINED_FUNCTION_9_70();
  v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v6, (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerConversationStateObservers());
  OUTLINED_FUNCTION_9_70();
  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_groupNameAndPhotoDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v7, (uint64_t)partial apply for closure #6 in ConversationControlsManager.setupConversationControllerConversationStateObservers());
  OUTLINED_FUNCTION_9_70();
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_oneToOneModeDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v8, (uint64_t)partial apply for closure #7 in ConversationControlsManager.setupConversationControllerConversationStateObservers());
  OUTLINED_FUNCTION_9_70();
  v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didFinishMigratingConversations);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v9, (uint64_t)partial apply for closure #8 in ConversationControlsManager.setupConversationControllerConversationStateObservers());
  OUTLINED_FUNCTION_9_70();
  v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callStatusDidChange);
  OUTLINED_FUNCTION_2_0();
  v11 = OUTLINED_FUNCTION_1_102(*v10, (uint64_t)partial apply for closure #9 in ConversationControlsManager.setupConversationControllerConversationStateObservers());
  OUTLINED_FUNCTION_299();
  v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingAvailabilityDidChange);
  OUTLINED_FUNCTION_2_0();
  v13 = *v12;
  *v12 = (uint64_t)partial apply for closure #10 in ConversationControlsManager.setupConversationControllerConversationStateObservers();
  v12[1] = v11;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v13);
  v14 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_notificationCenter);
  if (one-time initialization token for DidChangeIsWaitingOnFirstFrameNotification != -1)
    swift_once();
  objc_msgSend(v14, sel_addObserver_selector_name_object_, v0, sel_handleDidChangeIsWaitingOnFirstRemoteFrame_, static ConversationController.DidChangeIsWaitingOnFirstFrameNotification, 0);
  objc_msgSend(v14, sel_addObserver_selector_name_object_, v0, sel_handleIsScreeningChanged_, *MEMORY[0x1E0DBD4E8], 0);
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_9_70();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v2, (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_9_70();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v3, (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_9_70();
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeActive);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v4, (uint64_t)partial apply for closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_9_70();
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateParticipantAVMode);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v5, (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_9_70();
  v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantDidBecomeInactive);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v6, (uint64_t)partial apply for closure #5 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_9_70();
  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v7, (uint64_t)partial apply for closure #6 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_9_70();
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipantScreenInfo);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v8, (uint64_t)partial apply for closure #7 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_9_70();
  v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v9, (uint64_t)partial apply for closure #8 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_9_70();
  v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_isWaitingOnFirstRemoteFrameDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v10, (uint64_t)partial apply for closure #9 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_9_70();
  v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_audioPausedDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v11, (uint64_t)partial apply for closure #10 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_9_70();
  v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didToggleCaptions);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v12, (uint64_t)partial apply for closure #11 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_299();
  v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_participantDidReact);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_394(*v13, (uint64_t)partial apply for closure #12 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers());
  OUTLINED_FUNCTION_397();
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_9_70();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_activitiesDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v2, (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers());
  OUTLINED_FUNCTION_9_70();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_collaborationNoticePosted);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v3, (uint64_t)partial apply for closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers());
  OUTLINED_FUNCTION_9_70();
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_appLaunchStateChanged);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v4, (uint64_t)partial apply for closure #3 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers());
  OUTLINED_FUNCTION_9_70();
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_screenSharingRequestsChanged);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v5, (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers());
  OUTLINED_FUNCTION_299();
  v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_sessionActionNoticePosted);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_394(*v6, (uint64_t)partial apply for closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers());
}

Swift::Void __swiftcall ConversationControlsManager.setupConversationControllerGondolaStateObservers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_9_70();
  v2 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestStateDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v2, (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerGondolaStateObservers());
  OUTLINED_FUNCTION_9_70();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didInviteOtherParticipants);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v3, (uint64_t)partial apply for closure #2 in ConversationControlsManager.setupConversationControllerGondolaStateObservers());
  OUTLINED_FUNCTION_9_70();
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v4, (uint64_t)partial apply for closure #3 in ConversationControlsManager.setupConversationControllerGondolaStateObservers());
  OUTLINED_FUNCTION_9_70();
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemovePendingParticipant);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v5, (uint64_t)partial apply for closure #4 in ConversationControlsManager.setupConversationControllerGondolaStateObservers());
  OUTLINED_FUNCTION_9_70();
  v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didApprovePendingParticipant);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v6, (uint64_t)partial apply for closure #5 in ConversationControlsManager.setupConversationControllerGondolaStateObservers());
  OUTLINED_FUNCTION_9_70();
  v7 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationIgnoreLetMeInRequestsDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v7, (uint64_t)partial apply for closure #6 in ConversationControlsManager.setupConversationControllerGondolaStateObservers());
  OUTLINED_FUNCTION_9_70();
  v8 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalMemberAuthorizedToChangeGroupMembership);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_1_102(*v8, (uint64_t)partial apply for closure #7 in ConversationControlsManager.setupConversationControllerGondolaStateObservers());
  OUTLINED_FUNCTION_299();
  v9 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_visibleParticipantKickableStatusDidChange);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_394(*v9, (uint64_t)partial apply for closure #8 in ConversationControlsManager.setupConversationControllerGondolaStateObservers());
}

uint64_t ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v2);
  v52 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Just<Call>);
  v42 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>);
  v10 = *(_QWORD *)(v9 - 8);
  v44 = v9;
  v45 = v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>);
  v14 = *(_QWORD *)(v13 - 8);
  v46 = v13;
  v47 = v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)>);
  v51 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v43 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.Debounce<Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)>, OS_dispatch_queue>);
  v19 = *(_QWORD *)(v18 - 8);
  v53 = v18;
  v54 = v19;
  MEMORY[0x1E0C80A78](v18);
  v48 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController);
  v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = (uint64_t *)(v21 + OBJC_IVAR____TtC15ConversationKit22ConversationController_pttCallStatusDidChange);
  swift_beginAccess();
  v24 = *v23;
  *v23 = (uint64_t)partial apply for closure #1 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers();
  v23[1] = v22;
  v25 = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v24);
  v57 = (id)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x270))(v25);
  v58 = v26;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
  Just.init(_:)();
  ConversationControlsManager.pttCallUpdateSubject.getter();
  v57 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Call, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Just<Call> and conformance Just<A>, (uint64_t *)&demangling cache variable for type metadata for Just<Call>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type CurrentValueSubject<Call, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Call, Never>);
  Publisher.merge<A>(with:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v6);
  v57 = *(id *)((char *)v1
              + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_incomingTransmissionReceivedSubject);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>> and conformance Publishers.Merge<A, B>, &demangling cache variable for type metadata for Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  v28 = v44;
  Publisher.combineLatest<A>(_:)();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v28);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool));
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>> and conformance Publishers.CombineLatest<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>);
  v29 = v43;
  v30 = v46;
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v30);
  v31 = v50;
  static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v57 = (id)static OS_dispatch_queue.main.getter();
  v32 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  v33 = v52;
  __swift_storeEnumTagSinglePayload(v52, 1, 1, v32);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)> and conformance Publishers.CompactMap<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)>);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v35 = v48;
  v34 = v49;
  Publisher.debounce<A>(for:scheduler:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v56);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v29, v34);
  v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = partial apply for closure #3 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers();
  *(_QWORD *)(v37 + 24) = v36;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.Debounce<Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)>, OS_dispatch_queue> and conformance Publishers.Debounce<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.Debounce<Publishers.CompactMap<Publishers.CombineLatest<Publishers.Merge<Just<Call>, CurrentValueSubject<Call, Never>>, CurrentValueSubject<Bool, Never>>, (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)>, OS_dispatch_queue>);
  v38 = v53;
  v39 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v35, v38);
  return ConversationControlsManager.pttCallStatusUpdateCancellable.setter(v39);
}

void closure #1 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    swift_beginAccess();
    v11 = (_QWORD *)MEMORY[0x1C3B752C0](a5 + 16);
    if (v11)
    {
      v12 = v11;
      v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v14 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v11) + 0x978))();
      (*(void (**)(uint64_t))((*v13 & *v12) + 0x9B0))(v14);

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #2 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(char a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t (*v18)(_OWORD *);
  uint64_t (*v19)(_OWORD *, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_OWORD *, _QWORD);
  uint64_t v23;
  _QWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  swift_beginAccess();
  v10 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 2);
  if (!v10)
    return;
  a2 = v10;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if ((a1 & 1) != ((*(unsigned int (**)(void))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x640))() & 0x100) >> 8)
  {
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_5:
      v11 = type metadata accessor for Logger();
      __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
      v12 = Logger.logObject.getter();
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        *(_DWORD *)v14 = 136315138;
        *(_QWORD *)&v25[0] = v15;
        if ((a1 & 1) != 0)
          v16 = 1702195828;
        else
          v16 = 0x65736C6166;
        if ((a1 & 1) != 0)
          v17 = 0xE400000000000000;
        else
          v17 = 0xE500000000000000;
        v24[1] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, (uint64_t *)v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v12, v13, "didUpdateLocalScreenSharing, enabled: %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v15, -1, -1);
        MEMORY[0x1C3B751B8](v14, -1, -1);
      }

      v18 = *(uint64_t (**)(_OWORD *))((*v2 & *a2) + 0x650);
      v19 = (uint64_t (*)(_OWORD *, _QWORD))v18(v25);
      *(_BYTE *)(v20 + 1) = a1 & 1;
      v21 = v19(v25, 0);
      if ((a1 & 1) != 0)
      {
        v22 = (uint64_t (*)(_OWORD *, _QWORD))v18(v25);
        *(_BYTE *)(v23 + 17) = 0;
        v21 = v22(v25, 0);
      }
      (*(void (**)(uint64_t))((*v2 & *a2) + 0x9B0))(v21);
      v26 = 0;
      memset(v25, 0, sizeof(v25));
      (*(void (**)(_OWORD *))((*v2 & *a2) + 0x9B8))(v25);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for Activity?);
      ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
      goto LABEL_16;
    }
LABEL_19:
    swift_once();
    goto LABEL_5;
  }
LABEL_16:

}

uint64_t closure #3 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t result;
  uint64_t v8;

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    swift_beginAccess();
    result = MEMORY[0x1C3B752C0](a1 + 16);
    if (result)
      ConversationControlsManager.localVideoStateChangedAlert.getter();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #4 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(void *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  os_log_t v27;
  uint8_t *v28;
  uint64_t v29;
  _QWORD *v30;
  os_log_t v31[2];
  uint8_t *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = (_QWORD *)type metadata accessor for DispatchPredicate();
  v5 = *(v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (os_log_t *)((char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(_QWORD *, _QWORD *))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  swift_beginAccess();
  v9 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 2);
  if (!v9)
    return;
  a2 = v9;
  if (a1)
  {
    v5 = MEMORY[0x1E0DEEDD8];
    v10 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x580);
    v4 = a1;
    v11 = v10();
    if (!v11)
    {
LABEL_13:

      goto LABEL_14;
    }
    v7 = (_QWORD *)v11;
    if ((objc_msgSend(v4, sel_isEqualToRouteIgnoringIsRecommended_, v11) & 1) != 0)
    {
LABEL_12:

      goto LABEL_13;
    }
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_7:
      v12 = type metadata accessor for Logger();
      __swift_project_value_buffer(v12, (uint64_t)&static Logger.conversationControls);
      v13 = v4;
      v14 = Logger.logObject.getter();
      v15 = static os_log_type_t.default.getter();
      v16 = v15;
      if (os_log_type_enabled(v14, v15))
      {
        v17 = swift_slowAlloc();
        v33 = v16;
        v18 = v17;
        v34 = swift_slowAlloc();
        v36 = v34;
        *(_DWORD *)v18 = 136315138;
        v31[1] = (os_log_t)(v18 + 4);
        v32 = (uint8_t *)v18;
        v19 = v13;
        v20 = objc_msgSend(v19, sel_description);
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v31[0] = v14;
        v22 = v13;
        v23 = v21;
        v25 = v24;

        v5 = MEMORY[0x1E0DEEDD8];
        v26 = v23;
        v13 = v22;
        v35 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v25, &v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        v27 = v31[0];
        v28 = v32;
        _os_log_impl(&dword_1BD004000, v31[0], (os_log_type_t)v33, "audioRouteDidChange: %s", v32, 0xCu);
        v29 = v34;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v29, -1, -1);
        MEMORY[0x1C3B751B8](v28, -1, -1);

      }
      else
      {

      }
      v30 = v13;
      ConversationControlsManager.audioRoute.setter(a1);
      (*(void (**)(void))((*(_QWORD *)v5 & *a2) + 0x9B0))();
      goto LABEL_12;
    }
LABEL_17:
    swift_once();
    goto LABEL_7;
  }
  v4 = v9;
LABEL_14:

}

void closure #5 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _DWORD v14[2];

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  swift_beginAccess();
  v9 = MEMORY[0x1C3B752C0](a2 + 16);
  if (!v9)
    return;
  a2 = (char *)v9;
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_9;
LABEL_4:
  v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
  v11 = Logger.logObject.getter();
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v13 = 67109120;
    v14[1] = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v11, v12, "carPlayConnectedDidChange: %{BOOL}d", v13, 8u);
    MEMORY[0x1C3B751B8](v13, -1, -1);
  }

  ConversationController.localVideoSupported.getter();
  ConversationControlsManager.localVideoButtonState.getter();
  ConversationControlsManager.localVideoButtonState.setter();

}

void closure #6 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = type metadata accessor for DispatchPredicate();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    swift_beginAccess();
    v8 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v8)
    {
      v9 = (void *)v8;
      ConversationControlsManager.bluetoothAudioFormat.setter();

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #7 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    swift_beginAccess();
    v9 = (_QWORD *)MEMORY[0x1C3B752C0](a3 + 16);
    if (v9)
    {
      v10 = v9;
      if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x400))())
      {
        v12 = v11;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v12 + 48))(ObjectType, v12);

        swift_unknownObjectRelease();
      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *__return_ptr);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t (*v50)(void);
  void *v51;
  void *v52;
  unsigned __int8 v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[3];
  uint64_t v74;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v17 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_46:
    swift_once();
    goto LABEL_19;
  }
  swift_beginAccess();
  v18 = (_QWORD *)MEMORY[0x1C3B752C0](a3 + 2);
  if (!v18)
    return;
  a3 = v18;
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v19 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v18) + 0x978))();
  (*(void (**)(uint64_t))((*v3 & *a3) + 0x9B0))(v19);
  v20 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v20);
  (*(void (**)(char *))((*v3 & *a3) + 0x998))(v12);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for Participant?);
  v21 = *(void (**)(uint64_t *__return_ptr))((*v3 & *a3) + 0x3D0);
  v21(v73);
  if (v74)
  {
    outlined init with copy of RadarReporting((uint64_t)v73, (uint64_t)v70);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v73, &demangling cache variable for type metadata for CallControlsService?);
    v22 = v71;
    v23 = v72;
    __swift_project_boxed_opaque_existential_1(v70, v71);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 104))(a2, v22, v23);
    v24 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v73, &demangling cache variable for type metadata for CallControlsService?);
  }
  ((void (*)(uint64_t *__return_ptr, uint64_t))v21)(v73, v24);
  if (v74)
  {
    outlined init with copy of RadarReporting((uint64_t)v73, (uint64_t)v70);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v73, &demangling cache variable for type metadata for CallControlsService?);
    v25 = v71;
    v26 = v72;
    __swift_project_boxed_opaque_existential_1(v70, v71);
    v27 = (*(uint64_t (**)(void))((*v3 & *a3) + 0x840))();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 112))(v27, v25, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v73, &demangling cache variable for type metadata for CallControlsService?);
  }
  if (a2 == 4)
  {
    v28 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v28);
    type metadata accessor for MainActor();
    a3 = a3;
    v29 = static MainActor.shared.getter();
    v30 = (_QWORD *)swift_allocObject();
    v31 = MEMORY[0x1E0DF06E8];
    v30[2] = v29;
    v30[3] = v31;
    v30[4] = a3;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    v32 = swift_release();
    v33 = *(_QWORD *)((char *)a3 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeShareCardHandle);
    if (v33)
    {
      v34 = *(void **)(v33 + 16);
      swift_retain();
      objc_msgSend(v34, sel_invalidate);
      ConversationControlsManager.activeShareCardHandle.setter(0);
      v32 = swift_release();
    }
    if ((*(uint64_t (**)(uint64_t))((*v3 & *a3) + 0x3E8))(v32))
    {
      v36 = v35;
      swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1BD645380;
      *(_QWORD *)(v37 + 32) = 24;
      *(_OWORD *)(v37 + 40) = 0u;
      *(_OWORD *)(v37 + 56) = 0u;
      *(_BYTE *)(v37 + 72) = 6;
      *(_QWORD *)(v37 + 80) = 25;
      *(_OWORD *)(v37 + 88) = 0u;
      *(_OWORD *)(v37 + 104) = 0u;
      *(_BYTE *)(v37 + 120) = 6;
      (*(void (**)(void))(v36 + 32))();
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_40;
  }
  ConversationController.localVideoSupported.getter();
  ConversationControlsManager.localVideoButtonState.getter();
  ConversationControlsManager.localVideoButtonState.setter();
  if (a2 != 2 && (a1 == 3 || a2 != 3)
    || ((*(void (**)(void))((*v3 & *a3) + 0x270))(),
        v39 = v38,
        ObjectType = swift_getObjectType(),
        LOBYTE(v39) = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 136))(ObjectType, v39),
        swift_unknownObjectRelease(),
        (v39 & 1) != 0))
  {
LABEL_40:

    return;
  }
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_46;
LABEL_19:
  v41 = type metadata accessor for Logger();
  __swift_project_value_buffer(v41, (uint64_t)&static Logger.conversationControls);
  v42 = Logger.logObject.getter();
  v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = swift_slowAlloc();
    v45 = swift_slowAlloc();
    v73[0] = v45;
    *(_DWORD *)v44 = 136315394;
    v70[0] = a1;
    type metadata accessor for TUConversationState(0);
    v46 = String.init<A>(reflecting:)();
    v70[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    v70[0] = a2;
    v48 = String.init<A>(reflecting:)();
    v70[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v42, v43, "conversationStateDidChange, from:%s to:%s -> present HUD", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v45, -1, -1);
    MEMORY[0x1C3B751B8](v44, -1, -1);
  }

  v50 = *(uint64_t (**)(void))((*v3 & *a3) + 0x290);
  v51 = (void *)v50();
  if (v51)
  {
    v52 = v51;
    v53 = objc_msgSend(v51, sel_isContinuitySession);

  }
  else
  {
    v53 = 0;
  }
  v54 = v50();
  if (v54)
  {
    v55 = (void *)v54;
    specialized Conversation.currentScreenSharingRequest(ignoring:)();
    v57 = v56;

    if (v57)
    {
      if (objc_msgSend(*(id *)((char *)a3+ OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags), sel_usesModernScreenSharingFromMessages))
      {
        if (objc_msgSend(v57, sel_type) == (id)4)
        {
          ConversationControlsManager.addIncomingScreenSharingRequestActivity()();
        }
        else if (objc_msgSend(v57, sel_type) == (id)2)
        {
          ConversationControlsManager.startScreenShareWithCountdown(completion:)();
        }

        goto LABEL_35;
      }

    }
  }
  if ((v53 & 1) == 0)
    ConversationControlsManager.showHUD()();
LABEL_35:
  v58 = (void *)v50();
  if (!v58)
    goto LABEL_40;
  v59 = v58;
  v60 = objc_msgSend(v58, sel_activeRemoteParticipants);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  v61 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.compactMap<A>(_:)(v61);
  v63 = v62;
  swift_bridgeObjectRelease();
  specialized Set.init<A>(_:)(v63);
  (*(void (**)(void))((*v3 & *a3) + 0x2C8))();
  if (a2 != 3)
    goto LABEL_38;
  v64 = objc_msgSend(v59, sel_activeRemoteParticipants);
  v65 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v66 = specialized Set.count.getter(v65);
  swift_bridgeObjectRelease();
  if (v66
    || (v67 = objc_msgSend(v59, sel_pendingMembers),
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember), lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember), v68 = static Set._unconditionallyBridgeFromObjectiveC(_:)(), v67, v69 = specialized Set.count.getter(v68), swift_bridgeObjectRelease(), v69 < 1)|| (objc_msgSend(v59, sel_ignoreLMIRequests) & 1) != 0)
  {
LABEL_38:
    (*(void (**)(_QWORD))((*v3 & *a3) + 0x828))(0);
  }
  else
  {
    ConversationControlsManager.scheduleDelayedLMIBanner()();
  }

}

uint64_t closure #1 in closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_521();
  ConversationControlsManager.removeIncomingScreenShareRequest()();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ConversationControlsManager.scheduleDelayedLMIBanner()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void (*v15)(char *, uint64_t);
  uint64_t (*v16)(char *, uint64_t);
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags();
  v23 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS();
  v21 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTime();
  v8 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - v12;
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x828))(1);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v14 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  MEMORY[0x1C3B72C50](v11, 30.0);
  v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, v7);
  v16 = (uint64_t (*)(char *, uint64_t))v15;
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in ConversationControlsManager.scheduleDelayedLMIBanner();
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_369;
  v18 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B735B0](v13, v6, v3, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
  return v16(v13, v20);
}

void closure #2 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(char a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  _DWORD v17[2];

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  swift_beginAccess();
  v9 = MEMORY[0x1C3B752C0](a2 + 2);
  if (!v9)
    return;
  a2 = (_QWORD *)v9;
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_13;
LABEL_4:
  v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
  v11 = Logger.logObject.getter();
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v13 = 67109120;
    v17[1] = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v11, v12, "Controls manager handling didUpdateWantsHoldMusic:%{BOOL}d", v13, 8u);
    MEMORY[0x1C3B751B8](v13, -1, -1);
  }

  if ((a1 & 1) != 0)
  {
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x400))())
    {
      v15 = v14;
      ObjectType = swift_getObjectType();
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v15 + 32))(0xD000000000000015, 0x80000001BD680530, 1, ObjectType, v15);

      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
    ConversationControlsManager.showHUD()();
  }

}

void closure #3 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = type metadata accessor for DispatchPredicate();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    swift_beginAccess();
    v8 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v8)
    {
      v9 = (void *)v8;
      ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #4 in ConversationControlsManager.setupConversationControllerConversationStateObservers()()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  result = OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_26();
  }
  __break(1u);
  return result;
}

void closure #6 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchPredicate();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  swift_beginAccess();
  v13 = (_QWORD *)MEMORY[0x1C3B752C0](a4 + 2);
  if (!v13)
    return;
  a4 = v13;
  v14 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v15 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v13) + 0x290))();
  if (v15)
  {
    v8 = (uint64_t)v15;
    if (objc_msgSend(v15, sel_state) != (id)3)
    {
LABEL_9:

      a4 = (_QWORD *)v8;
      goto LABEL_10;
    }
    v16 = type metadata accessor for Participant(0);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v16);
    (*(void (**)(char *))((*v14 & *a4) + 0x998))(v7);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_6:
      v17 = type metadata accessor for Logger();
      __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationControls);
      v18 = Logger.logObject.getter();
      v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_1BD004000, v18, v19, "Present HUD: groupNameAndPhotoDidChange", v20, 2u);
        MEMORY[0x1C3B751B8](v20, -1, -1);
      }

      ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
      goto LABEL_9;
    }
LABEL_13:
    swift_once();
    goto LABEL_6;
  }
LABEL_10:

}

void closure #7 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    swift_beginAccess();
    v9 = (_QWORD *)MEMORY[0x1C3B752C0](a3 + 16);
    if (v9)
    {
      v10 = v9;
      v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v12 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x290))();
      if (v12)
      {
        v13 = v12;
        if (objc_msgSend(v12, sel_state) == (id)3)
        {
          (*(void (**)(void))((*v11 & *v10) + 0x978))();
          ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
        }

        v10 = v13;
      }

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #8 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    swift_beginAccess();
    v10 = (_QWORD *)MEMORY[0x1C3B752C0](a1 + 16);
    if (v10)
    {
      v11 = v10;
      v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x978))();
      v13 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v13);
      (*(void (**)(char *))((*v12 & *v11) + 0x998))(v4);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Participant?);
      ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #9 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (**v22)(uint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  char v59;

  v52 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v51 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v51 - v12;
  v14 = type metadata accessor for DispatchPredicate();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v17 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  v18 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_26:
    swift_once();
LABEL_8:
    v31 = type metadata accessor for Logger();
    __swift_project_value_buffer(v31, (uint64_t)&static Logger.conversationKit);
    swift_unknownObjectRetain_n();
    v32 = Logger.logObject.getter();
    v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v56 = v35;
      *(_DWORD *)v34 = 136315138;
      ObjectType = swift_getObjectType();
      LODWORD(v53[0]) = (*(uint64_t (**)(uint64_t))(v52 + 184))(ObjectType);
      type metadata accessor for TUCallStatus(0);
      v37 = String.init<A>(reflecting:)();
      v53[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v32, v33, "ConversationControlsManager Skipping call status update: %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v35, -1, -1);
      MEMORY[0x1C3B751B8](v34, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return;
  }
  swift_beginAccess();
  v19 = MEMORY[0x1C3B752C0](a3 + 16);
  if (!v19)
  {
LABEL_7:
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_8;
    goto LABEL_26;
  }
  v20 = (_QWORD *)v19;
  v21 = swift_getObjectType();
  v22 = (uint64_t (**)(uint64_t, uint64_t))v52;
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 200))(v21, v52);
  v24 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v20) + 0x278))(v23);
  v25 = static UUID.== infix(_:_:)();
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v11, v7);
  v27 = ((uint64_t (*)(char *, uint64_t))v26)(v13, v7);
  if ((v25 & 1) == 0)
  {

    goto LABEL_7;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))((*v24 & *v20) + 0x3D0))(&v56, v27);
  if ((_QWORD)v58)
  {
    outlined init with copy of RadarReporting((uint64_t)&v56, (uint64_t)v53);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v56, &demangling cache variable for type metadata for CallControlsService?);
    v28 = v54;
    v29 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    v30 = v22[23](v21, (uint64_t)v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 96))(v30, v28, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v56, &demangling cache variable for type metadata for CallControlsService?);
  }
  objc_opt_self();
  v39 = swift_dynamicCastObjCClass();
  if (v39)
  {
    v40 = (void *)v39;
    swift_unknownObjectRetain();
    if (objc_msgSend(v40, sel_status) == 2)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v41 = type metadata accessor for Logger();
      __swift_project_value_buffer(v41, (uint64_t)&static Logger.conversationControls);
      v42 = Logger.logObject.getter();
      v43 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v44 = 0;
        _os_log_impl(&dword_1BD004000, v42, v43, "Invalidating screen share request because call became held", v44, 2u);
        MEMORY[0x1C3B751B8](v44, -1, -1);
      }

      ConversationControlsManager.declineOrCancelScreenShareRequest()();
    }
    v39 = swift_unknownObjectRelease();
  }
  (*(void (**)(uint64_t))((*v24 & *v20) + 0x978))(v39);
  v45 = type metadata accessor for Participant(0);
  v46 = v51;
  __swift_storeEnumTagSinglePayload(v51, 1, 1, v45);
  (*(void (**)(uint64_t))((*v24 & *v20) + 0x998))(v46);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v46, &demangling cache variable for type metadata for Participant?);
  ConversationControlsManager.shouldShowCallAgainHUD(forCall:)((uint64_t)a1, (uint64_t)v22);
  if ((v47 & 1) != 0)
  {
    if ((*(uint64_t (**)(void))((*v24 & *v20) + 0x430))())
    {
      v49 = v48;
      v50 = swift_getObjectType();
      v56 = 10;
      v57 = 0u;
      v58 = 0u;
      v59 = 6;
      (*(void (**)(uint64_t *, uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 80))(&v56, 1, 0, v50, v49);
      swift_unknownObjectRelease();

      outlined destroy of ConversationControlsType((uint64_t)&v56);
      return;
    }
  }
  else
  {
    ConversationControlsManager.notifyDelegates(about:forceUpdate:)(a1, v22, 0);
  }

}

void closure #10 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    swift_beginAccess();
    v9 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 16);
    if (v9)
    {
      v10 = v9;
      (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x660))(a1 & 1);

    }
  }
  else
  {
    __break(1u);
  }
}

void ConversationControlsManager.controlsHUDUpdate(for:)(void *a1, uint64_t (**a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  NSObject *v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (**v84)(uint64_t, uint64_t);
  _QWORD v85[6];
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  char v90;

  v6 = v3;
  OUTLINED_FUNCTION_214_0();
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (OUTLINED_FUNCTION_109_9(v10))
  {
    v11 = OUTLINED_FUNCTION_15_69();
    v12 = OUTLINED_FUNCTION_101(v11, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 40));
    OUTLINED_FUNCTION_10();
  }
  else
  {
    v12 = 0;
  }
  OUTLINED_FUNCTION_154();
  if ((OUTLINED_FUNCTION_328_0(*(uint64_t (**)(void))(v13 + 88)) & 1) != 0)
  {
    OUTLINED_FUNCTION_154();
    v15 = OUTLINED_FUNCTION_328_0(*(uint64_t (**)(void))(v14 + 168)) & v12 ^ 1;
  }
  else
  {
    v15 = 0;
  }
  objc_opt_self();
  v16 = swift_dynamicCastObjCClass();
  if (!v16)
    goto LABEL_15;
  v12 = v16;
  objc_opt_self();
  v17 = swift_unknownObjectRetain();
  v18 = objc_msgSend(OUTLINED_FUNCTION_25_1(v17, sel_sharedInstance), sel_activeConversationForCall_, v12);
  OUTLINED_FUNCTION_6_16();
  if (!v5)
  {
    OUTLINED_FUNCTION_9_10();
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_154();
  v20 = (*(uint64_t (**)(void))(v19 + 1384))();
  v21 = swift_release();
  if (!v20 && (v21 = (uint64_t)OUTLINED_FUNCTION_20_4(v21, sel_state), v21 != 2)
    || (v22 = OUTLINED_FUNCTION_9(v21, sel_status), (_DWORD)v22 != 1))
  {
    OUTLINED_FUNCTION_9_10();

    if ((v15 & 1) == 0)
      goto LABEL_21;
    goto LABEL_18;
  }
  v23 = OUTLINED_FUNCTION_20_4((uint64_t)v22, sel_screenSharingRequests);
  v84 = a2;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUScreenSharingRequest);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUScreenSharingRequest and conformance NSObject, &lazy cache variable for type metadata for TUScreenSharingRequest);
  v24 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v12 = 0;
  specialized Sequence.first(where:)(v24);
  v26 = v25;
  a2 = v84;
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_9_10();
  if (!v26)
  {
LABEL_15:
    if ((v15 & 1) == 0)
      goto LABEL_21;
LABEL_18:
    v27 = OUTLINED_FUNCTION_650();
    if (OUTLINED_FUNCTION_644(v27, a2[23]) == 4)
    {
      (*(void (**)(void))((*v9 & (uint64_t)v6->isa) + 0x270))();
      v28 = OUTLINED_FUNCTION_15_69();
      OUTLINED_FUNCTION_187(v28);
      OUTLINED_FUNCTION_653();
      static ConversationControlsType.firstOrThirdPartyIncomingCall(for:)(v29, v30);
      OUTLINED_FUNCTION_10();

      goto LABEL_20;
    }
LABEL_21:
    v31 = OUTLINED_FUNCTION_650();
    if ((OUTLINED_FUNCTION_644(v31, a2[17]) & 1) != 0)
    {
      OUTLINED_FUNCTION_290(21);
      *(_WORD *)(v2 + 40) = 6;
LABEL_46:
      *(_BYTE *)(v2 + 42) = 0;
      goto LABEL_47;
    }
    v32 = a2[20];
    v33 = v32(v31, (uint64_t)a2);
    v34 = -[NSObject supportsDynamicSystemUI](v33, sel_supportsDynamicSystemUI);

    if (v34
      && (v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init),
          v35 = -[NSObject groupConversations](v33, sel_groupConversations),
          v33,
          v35)
      && TUDeviceHasChinaSKU())
    {
      v36 = OUTLINED_FUNCTION_98_3(a2[23]);
      v37 = 22;
      if (v36 != 4)
        v37 = 23;
      v87 = v37;
      v88 = 0u;
      v89 = 0u;
      v90 = 6;
      outlined init with take of ConversationControlsType((__int128 *)&v87, (_OWORD *)v2);
    }
    else
    {
      if (OUTLINED_FUNCTION_98_3(a2[23]) == 1)
        HIDWORD(v79) = SBSIsSystemApertureAvailable() ^ 1;
      else
        HIDWORD(v79) = 0;
      type metadata accessor for PlaceholderCall();
      v38 = swift_dynamicCastClass();
      if (v38)
        v39 = *(_BYTE *)(v38 + 16) == 3;
      else
        v39 = 0;
      LODWORD(v83) = v15;
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v82 = v2;
      v40 = OUTLINED_FUNCTION_17_2();
      v80 = __swift_project_value_buffer(v40, (uint64_t)&static Logger.conversationControls);
      OUTLINED_FUNCTION_11_17();
      v41 = OUTLINED_FUNCTION_12_0();
      if (os_log_type_enabled(v33, v41))
      {
        v42 = (uint8_t *)OUTLINED_FUNCTION_105();
        v87 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v42 = 136315138;
        LOBYTE(v85[0]) = v39;
        v43 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, &v87);
        OUTLINED_FUNCTION_441();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_133();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v33, v41, "ConversationControlsManager isHandoffCall is %s", v42);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      if (v39 || (v83 & 1) == 0)
        goto LABEL_42;
      v45 = objc_msgSend((id)OUTLINED_FUNCTION_266_0(), sel_identifier);
      OUTLINED_FUNCTION_49_5();
      OUTLINED_FUNCTION_640();
      v46 = v31;

      OUTLINED_FUNCTION_65_2();
      v47 = String.count.getter();
      swift_bridgeObjectRelease();
      if (v47 < 1
        || (objc_msgSend((id)OUTLINED_FUNCTION_266_0(), sel_isFaceTimeProvider),
            OUTLINED_FUNCTION_49_5(),
            (v33 & 1) != 0)
        || (OUTLINED_FUNCTION_98_3(a2[13]) & 1) == 0
        && (OUTLINED_FUNCTION_98_3(a2[12]) & 1) == 0
        && ((OUTLINED_FUNCTION_98_3(a2[15]) | HIDWORD(v79)) & 1) == 0)
      {
LABEL_42:
        OUTLINED_FUNCTION_351();
        if ((OUTLINED_FUNCTION_328_0(*(uint64_t (**)(void))(v48 + 80)) & 1) == 0)
        {
          ConversationControlsManager.shouldPresentCollaborationHUD.getter();
          if ((v49 & 1) != 0)
          {
            *(_QWORD *)v82 = 11;
            *(_OWORD *)(v82 + 8) = 0u;
            *(_OWORD *)(v82 + 24) = 0u;
            *(_WORD *)(v82 + 40) = 6;
            *(_BYTE *)(v82 + 42) = 0;
            *(_QWORD *)(v82 + 48) = 0;
            return;
          }
        }
        OUTLINED_FUNCTION_351();
        v2 = v82;
        (*(void (**)(void))(v50 + 2120))();
        OUTLINED_FUNCTION_351();
        *(_BYTE *)(v82 + 41) = (*(uint64_t (**)(void))(v51 + 2152))() & 1;
        goto LABEL_46;
      }
      objc_msgSend((id)OUTLINED_FUNCTION_266_0(), sel_isSystemProvider);
      OUTLINED_FUNCTION_49_5();
      v52 = 9;
      if ((_DWORD)v33)
        v52 = 7;
      v87 = v52;
      v88 = 0u;
      v89 = 0u;
      v90 = 6;
      if ((OUTLINED_FUNCTION_98_3(a2[27]) & 1) != 0)
      {
        outlined destroy of ConversationControlsType((uint64_t)&v87);
        v87 = 3;
        v88 = 0u;
        v89 = 0u;
        v90 = 6;
      }
      swift_unknownObjectRetain_n();
      Logger.logObject.getter();
      v53 = OUTLINED_FUNCTION_638();
      if (OUTLINED_FUNCTION_250(v53))
      {
        v54 = OUTLINED_FUNCTION_105();
        v86 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v54 = 136315394;
        OUTLINED_FUNCTION_2_0();
        outlined init with copy of ConversationControlsType((uint64_t)&v87, (uint64_t)v85);
        v62 = specialized >> prefix<A>(_:)((uint64_t)v85, v55, v56, v57, v58, v59, v60, v61);
        OUTLINED_FUNCTION_408(v62, &demangling cache variable for type metadata for ConversationControlsType?, v63, v64, v65, v66, v67, v68, v78, v79, v80, v81, v82, v83);
        v69 = OUTLINED_FUNCTION_64();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v70, v71);
        OUTLINED_FUNCTION_441();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_2_1();
        *(_WORD *)(v54 + 12) = 2080;
        v72 = objc_msgSend((id)v32(v31, (uint64_t)a2), sel_identifier);
        OUTLINED_FUNCTION_49_5();
        v73 = OUTLINED_FUNCTION_640();
        v75 = v74;

        v85[0] = v73;
        v85[1] = v75;
        v76 = String.init<A>(reflecting:)();
        v85[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v77, &v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_427();
        OUTLINED_FUNCTION_13_3();
        OUTLINED_FUNCTION_26_6(&dword_1BD004000, v6, v46, "Requesting ControlsHUDUpdate with controlsType %s for provider.identifier: %s", (uint8_t *)v54);
        OUTLINED_FUNCTION_25_6();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_427();
      v2 = v82;
      OUTLINED_FUNCTION_2_0();
      outlined init with copy of ConversationControlsType((uint64_t)&v87, v82);
      outlined destroy of ConversationControlsType((uint64_t)&v87);
    }
LABEL_20:
    *(_WORD *)(v2 + 41) = 257;
    goto LABEL_47;
  }
  OUTLINED_FUNCTION_290(25);
  *(_WORD *)(v2 + 40) = 262;
  *(_BYTE *)(v2 + 42) = 1;
LABEL_47:
  *(_QWORD *)(v2 + 48) = 0;
}

uint64_t ConversationControlsManager.controlsHUDUpdateForActiveCall.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t (**v2)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_214_0();
  OUTLINED_FUNCTION_27_1(v0);
  OUTLINED_FUNCTION_653();
  ConversationControlsManager.controlsHUDUpdate(for:)(v1, v2);
  return OUTLINED_FUNCTION_9_8();
}

void ConversationControlsManager.shouldPresentCollaborationHUD.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t EnumCaseMultiPayload;
  uint64_t v5;

  OUTLINED_FUNCTION_414();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_30_6();
  if (OUTLINED_FUNCTION_109_9(*v0))
  {
    v3 = OUTLINED_FUNCTION_146();
    OUTLINED_FUNCTION_52(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32));
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_136_1();
  OUTLINED_FUNCTION_549();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload)
  {
    OUTLINED_FUNCTION_35_2(EnumCaseMultiPayload, type metadata accessor for ForegroundCollaborationState);
  }
  else
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (collaboration: StagedCollaboration, isBannerSuppressed: Bool));
    OUTLINED_FUNCTION_35_2(v5, type metadata accessor for StagedCollaboration);
  }
  OUTLINED_FUNCTION_91();
}

void ConversationControlsManager.handleDidChangeIsWaitingOnFirstRemoteFrame(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(uint64_t, char *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  _DWORD v39[10];
  __int128 v40;
  __int128 v41;

  OUTLINED_FUNCTION_93();
  v36 = v0;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (void (**)(uint64_t, char *))((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_79();
  v13 = v11 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v36 - v15;
  v17 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_300_0();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_83_4();
  OUTLINED_FUNCTION_59(v19, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v1 + 104))(v2, *MEMORY[0x1E0DEF740], v17);
  v20 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v1 + 8))(v2, v17);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (!Notification.userInfo.getter())
  {
    v40 = 0u;
    v41 = 0u;
    goto LABEL_14;
  }
  v37 = 0xD000000000000025;
  v38 = 0x80000001BD67F970;
  OUTLINED_FUNCTION_516();
  OUTLINED_FUNCTION_493();
  OUTLINED_FUNCTION_27();
  outlined destroy of AnyHashable((uint64_t)v39);
  if (!*((_QWORD *)&v41 + 1))
  {
LABEL_14:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v40, &demangling cache variable for type metadata for Any?);
    OUTLINED_FUNCTION_60_2();
    v22 = __swift_storeEnumTagSinglePayload(v33, v34, v35, v9);
    goto LABEL_15;
  }
  v21 = OUTLINED_FUNCTION_97();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, v21 ^ 1u, 1, v9);
  v22 = OUTLINED_FUNCTION_69_0((uint64_t)v8, 1, v9);
  if (!v23)
  {
    OUTLINED_FUNCTION_533((uint64_t)v16, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    OUTLINED_FUNCTION_27_1(*v36);
    v24 = OUTLINED_FUNCTION_83_13();
    v8[25](v24, (char *)v8);
    OUTLINED_FUNCTION_10();
    v25 = static UUID.== infix(_:_:)();
    v3 = *(_QWORD *)(v3 + 8);
    ((void (*)(uint64_t, uint64_t))v3)(v13, v9);
    if ((v25 & 1) == 0)
      goto LABEL_19;
    v26 = Notification.userInfo.getter();
    if (v26)
    {
      v20 = v26;
      v37 = 0xD000000000000021;
      v38 = 0x80000001BD67F9A0;
      OUTLINED_FUNCTION_516();
      OUTLINED_FUNCTION_493();
      OUTLINED_FUNCTION_27();
      outlined destroy of AnyHashable((uint64_t)v39);
      if (*((_QWORD *)&v41 + 1))
      {
        if ((OUTLINED_FUNCTION_97() & 1) != 0)
        {
          LODWORD(v13) = LOBYTE(v39[0]);
          if (one-time initialization token for conversationControls == -1)
          {
LABEL_10:
            v27 = OUTLINED_FUNCTION_17_2();
            OUTLINED_FUNCTION_3(v27, (uint64_t)&static Logger.conversationControls);
            v28 = OUTLINED_FUNCTION_12_0();
            if (OUTLINED_FUNCTION_4_14(v28))
            {
              v29 = (uint8_t *)OUTLINED_FUNCTION_105();
              *(_DWORD *)v29 = 67109120;
              v39[0] = v13;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl(&dword_1BD004000, (os_log_t)v20, v5, "Handling didChangeIsWaitingOnFirstRemoteFrameNotification: isWaiting == %{BOOL}d", v29, 8u);
              OUTLINED_FUNCTION_60();
            }

            v30 = (char *)v36
                + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isWaitingOnFirstRemoteFrame;
            OUTLINED_FUNCTION_2_0();
            *v30 = v13;
            OUTLINED_FUNCTION_9_28();
            (*(void (**)(void))(v31 + 2424))();
            OUTLINED_FUNCTION_9_28();
            (*(void (**)(void))(v32 + 2480))();
            OUTLINED_FUNCTION_133_3();
            goto LABEL_19;
          }
LABEL_21:
          swift_once();
          goto LABEL_10;
        }
LABEL_19:
        ((void (*)(char *, uint64_t))v3)(v16, v9);
        goto LABEL_16;
      }
    }
    else
    {
      v40 = 0u;
      v41 = 0u;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v40, &demangling cache variable for type metadata for Any?);
    goto LABEL_19;
  }
LABEL_15:
  OUTLINED_FUNCTION_275(v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_16:
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationControlsManager.handleIsScreeningChanged(_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v9 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x978))(result);
    (*(void (**)(uint64_t))((*v8 & *v1) + 0x9B0))(v9);
    return ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void @objc ConversationControlsManager.handleDidChangeIsWaitingOnFirstRemoteFrame(_:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  id v9;

  type metadata accessor for Notification();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  v9 = a1;
  a4(v4);

  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_91();
}

void closure #1 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v10, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v11 = OUTLINED_FUNCTION_7_22();
  *v3 = v11;
  OUTLINED_FUNCTION_17(v11, *MEMORY[0x1E0DEF740]);
  v12 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_0();
    v13 = MEMORY[0x1C3B752C0](a3 + 16);
    if (v13)
    {
      v14 = (void *)v13;
      OUTLINED_FUNCTION_39_6();
      (*(void (**)(void))(v15 + 2424))();
      v16 = OUTLINED_FUNCTION_14_2();
      OUTLINED_FUNCTION_77_0((uint64_t)v8, v17, v18, v16);
      OUTLINED_FUNCTION_39_6();
      v20 = (*(uint64_t (**)(char *))(v19 + 2456))(v8);
      OUTLINED_FUNCTION_96_3(v20, &demangling cache variable for type metadata for Participant?);
      OUTLINED_FUNCTION_133_3();
      PassthroughSubject.send(_:)();

    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

void closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *updated;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  _QWORD *v40;
  uint8_t *v41;
  void (*v42)(__int128 *, _QWORD);
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  uint64_t (*v60)(void);
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  void *v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void (*v87)(unint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  id v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double *v97;
  int *v98;
  void (**v99)();
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  uint64_t (**v113)();
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  _UNKNOWN **v124;

  *(_QWORD *)&v121 = a1;
  v4 = type metadata accessor for Date();
  v115 = *(_QWORD *)(v4 - 8);
  v116 = v4;
  MEMORY[0x1E0C80A78](v4);
  v114 = (uint64_t)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID();
  v119 = *(_QWORD *)(v6 - 8);
  v120 = v6;
  v7 = *(_QWORD *)(v119 + 64);
  v8 = MEMORY[0x1E0C80A78](v6);
  v112 = (uint64_t)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v110 = (uint64_t)&v105 - v10;
  MEMORY[0x1E0C80A78](v9);
  v118 = (uint64_t)&v105 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v108 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v108 + 64);
  v14 = MEMORY[0x1E0C80A78](v12);
  v109 = (uint64_t)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v117 = (uint64_t)&v105 - v15;
  v111 = (int *)type metadata accessor for SessionActivationRequestNotice(0);
  MEMORY[0x1E0C80A78](v111);
  v113 = (uint64_t (**)())((char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  updated = (int *)type metadata accessor for AccountUpdateNotice(0);
  MEMORY[0x1E0C80A78](updated);
  v19 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchPredicate();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *(_QWORD *)v26 = static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x1E0DEF740], v23);
  v27 = _dispatchPreconditionTest(_:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  if ((v27 & 1) == 0)
  {
    __break(1u);
LABEL_32:
    swift_once();
    goto LABEL_12;
  }
  swift_beginAccess();
  v28 = (_QWORD *)MEMORY[0x1C3B752C0](a3 + 2);
  if (!v28)
    return;
  a3 = v28;
  v29 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v28) + 0x978))();
  v26 = (char *)type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, (uint64_t)v26);
  (*(void (**)(char *))((*v29 & *a3) + 0x998))(v22);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for Participant?);
  v30 = PassthroughSubject.send(_:)();
  v31 = v121 + *((int *)v26 + 7);
  if (*(_QWORD *)v31)
  {
    if ((*(_BYTE *)(v31 + 16) & 1) == 0)
    {
      v32 = *(_QWORD *)(v31 + 8);
      v33 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x2C0))(v30);
      specialized Set.contains(_:)(v32, v33);
      v35 = v34;
      swift_bridgeObjectRelease();
      if ((v35 & 1) != 0)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v36 = type metadata accessor for Logger();
        __swift_project_value_buffer(v36, (uint64_t)&static Logger.conversationControls);
        v37 = Logger.logObject.getter();
        v38 = static os_log_type_t.default.getter();
        v39 = os_log_type_enabled(v37, v38);
        v40 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        if (v39)
        {
          v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v41 = 0;
          _os_log_impl(&dword_1BD004000, v37, v38, "visibleParticipantDidBecomeActive - already joined, no notice", v41, 2u);
          MEMORY[0x1C3B751B8](v41, -1, -1);
        }

        v42 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))((*v40 & *a3) + 0x2D0))(&v122);
        specialized Set._Variant.remove(_:)();
        v42(&v122, 0);
        goto LABEL_23;
      }
    }
  }
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_32;
LABEL_12:
  v43 = type metadata accessor for Logger();
  v107 = __swift_project_value_buffer(v43, (uint64_t)&static Logger.conversationControls);
  v44 = Logger.logObject.getter();
  v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    _os_log_impl(&dword_1BD004000, v44, v45, "visibleParticipantDidBecomeActive - present joined notice", v46, 2u);
    MEMORY[0x1C3B751B8](v46, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  v47 = *(unsigned __int8 *)(*((_QWORD *)v26 - 1) + 80);
  v48 = (v47 + 32) & ~v47;
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1BD6441D0;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v121, v49 + v48, type metadata accessor for Participant);
  UUID.init()();
  Date.init()();
  *v19 = 0;
  *((_QWORD *)v19 + 1) = v49;
  v19[updated[8]] = 2;
  v50 = &v19[updated[9]];
  *(_QWORD *)v50 = 0;
  *((_QWORD *)v50 + 1) = 0;
  v19[updated[10]] = 1;
  v51 = &v19[updated[11]];
  *(_QWORD *)v51 = 0;
  *((_QWORD *)v51 + 1) = 0;
  v52 = &v19[updated[12]];
  *(_QWORD *)v52 = 0;
  *((_QWORD *)v52 + 1) = 0;
  v53 = updated[13];
  v121 = xmmword_1BD6491B0;
  *(_OWORD *)&v19[v53] = xmmword_1BD6491B0;
  specialized ConversationControlsManager.post(notice:)((uint64_t)v19, (uint64_t)a3, (uint64_t)type metadata accessor for AccountUpdateNotice, (uint64_t)&protocol witness table for AccountUpdateNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v54, v55, v56, v105, (uint64_t)v106, v107, v108, v109, v110, (uint64_t)v111, v112, (uint64_t)v113, v114, v115,
    v116,
    v117,
    v118);
  v57 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a3) + 0x320))() & 1) == 0
    || (v58 = (*(uint64_t (**)(void))((*v57 & *a3) + 0x8D8))()) == 0)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for AccountUpdateNotice);
LABEL_23:

    return;
  }
  v59 = (void *)v58;
  v60 = *(uint64_t (**)(void))((*v57 & *a3) + 0x290);
  v61 = (void *)v60();
  if (!v61)
    goto LABEL_24;
  v62 = v61;
  v63 = objc_msgSend(v61, sel_mergedActiveRemoteParticipants);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  v64 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v65 = specialized Set.count.getter(v64);
  swift_bridgeObjectRelease();
  if (v65 == 1)
  {
    v66 = Logger.logObject.getter();
    v67 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v68 = 0;
      _os_log_impl(&dword_1BD004000, v66, v67, "visibleParticipantDidBecomeActive - Posting activation request notice", v68, 2u);
      MEMORY[0x1C3B751B8](v68, -1, -1);
    }

    v107 = swift_allocObject();
    v69 = swift_unknownObjectWeakInit();
    v70 = (void *)((uint64_t (*)(uint64_t))v60)(v69);
    if (v70)
    {
      v71 = v70;
      v72 = objc_msgSend(v70, sel_UUID);

      v73 = v117;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v74 = 0;
    }
    else
    {
      v74 = 1;
      v73 = v117;
    }
    v75 = v118;
    v76 = v120;
    __swift_storeEnumTagSinglePayload(v73, v74, 1, v120);
    v77 = v73;
    v78 = objc_msgSend(v59, sel_UUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v79 = v109;
    outlined init with copy of FeatureEligibility?(v77, v109, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v106 = v59;
    v80 = v119;
    v81 = v110;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16))(v110, v75, v76);
    v82 = (*(unsigned __int8 *)(v108 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
    v83 = v76;
    v84 = (v13 + *(unsigned __int8 *)(v80 + 80) + v82) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    v85 = swift_allocObject();
    *(_QWORD *)(v85 + 16) = v107;
    outlined init with take of Any?(v79, v85 + v82, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v86 = v85 + v84;
    v87 = *(void (**)(unint64_t, uint64_t, uint64_t))(v80 + 32);
    v87(v86, v81, v83);
    v88 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
    v123 = v89;
    v124 = &protocol witness table for TUConversationActivitySession;
    v90 = v106;
    *(_QWORD *)&v122 = v106;
    v91 = one-time initialization token for shared;
    swift_retain();
    swift_retain();
    v92 = v90;
    if (v91 != -1)
      swift_once();
    v93 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 968))();
    v94 = v112;
    UUID.init()();
    v95 = v114;
    Date.init()();
    v96 = v120;
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v118, v120);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v117, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v97 = (double *)v113;
    *v113 = partial apply for closure #1 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
    *((_QWORD *)v97 + 1) = v85;
    v97[2] = v93;
    v98 = v111;
    v87((unint64_t)v97 + v111[6], v94, v96);
    (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))((char *)v97 + v98[7], v95, v116);
    *((_BYTE *)v97 + v98[8]) = 3;
    *((_BYTE *)v97 + v98[9]) = 1;
    *((_BYTE *)v97 + v98[10]) = 1;
    *(_OWORD *)((char *)v97 + v98[11]) = v121;
    v99 = (void (**)())((char *)v97 + v98[12]);
    *v99 = partial apply for closure #2 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers();
    v99[1] = (void (*)())v88;
    v100 = (_QWORD *)((char *)v97 + v98[13]);
    *v100 = 0;
    v100[1] = 0;
    v101 = (_QWORD *)((char *)v97 + v98[14]);
    *v101 = 0;
    v101[1] = 0;
    outlined init with take of Notice(&v122, (uint64_t)v97 + v98[15]);
    swift_release();
    swift_release();
    specialized ConversationControlsManager.post(notice:)((uint64_t)v97, (uint64_t)a3, (uint64_t)type metadata accessor for SessionActivationRequestNotice, (uint64_t)&protocol witness table for SessionActivationRequestNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v102, v103, v104, v105, (uint64_t)v106, v107, v108, v109, v110, (uint64_t)v111, v112, (uint64_t)v113, v114, v115,
      v116,
      v117,
      v118);

    outlined destroy of AccountUpdateNotice((uint64_t)v97, type metadata accessor for SessionActivationRequestNotice);
  }
  else
  {
LABEL_24:

  }
  outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for AccountUpdateNotice);
}

uint64_t closure #1 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  int EnumTagSinglePayload;
  uint64_t *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  NSObject *v63;
  int v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v80;
  uint64_t (*v81)(void);
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91[5];

  v88 = a3;
  v91[4] = *MEMORY[0x1E0C80C00];
  v5 = type metadata accessor for UUID();
  v87 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v89 = (char *)&v80 - v10;
  MEMORY[0x1E0C80A78](v9);
  v83 = (char *)&v80 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  v13 = MEMORY[0x1E0C80A78](v12);
  v85 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v80 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v18);
  v86 = (uint64_t)&v80 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v84 = (char *)&v80 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v80 - v26;
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v80 - v28;
  swift_beginAccess();
  v30 = (_QWORD *)MEMORY[0x1C3B752C0](a1 + 16);
  if (!v30)
    return 0;
  v31 = v30;
  v82 = v8;
  v81 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v30) + 0x290);
  v32 = (void *)v81();
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(v32, sel_UUID);

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    v35 = 0;
  }
  else
  {
    v35 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v29, v35, 1, v5);
  v36 = (uint64_t)&v16[*(int *)(v12 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v29, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?(a2, v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v36, 1, v5);
    if (EnumTagSinglePayload == 1)
      v38 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
    else
      v38 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    if (EnumTagSinglePayload == 1)
      v39 = -1;
    else
      v39 = 0;
    v40 = v87;
  }
  else
  {
    outlined init with copy of FeatureEligibility?((uint64_t)v16, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v36, 1, v5) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v40 = v87;
      (*(void (**)(char *, uint64_t))(v87 + 8))(v27, v5);
      v39 = 0;
      v38 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    }
    else
    {
      v80 = v20;
      v41 = v87;
      v42 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v83, v36, v5);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      v39 = dispatch thunk of static Equatable.== infix(_:_:)();
      v43 = *(void (**)(char *, uint64_t))(v41 + 8);
      v43(v42, v5);
      v38 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v43(v27, v5);
      v40 = v41;
      v20 = v80;
    }
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, v38);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 16);
  v45 = v88;
  v46 = v89;
  v47 = v44(v89, v88, v5);
  if ((v39 & 1) != 0)
  {
    v48 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v31) + 0x8D8))(v47);
    if (v48)
    {
      v49 = v48;
      v50 = objc_msgSend(v48, sel_UUID);

      v51 = (uint64_t)v84;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v52 = 0;
    }
    else
    {
      v52 = 1;
      v51 = (uint64_t)v84;
    }
    v53 = (uint64_t)v85;
    v55 = v86;
    __swift_storeEnumTagSinglePayload(v51, v52, 1, v5);
    v56 = v89;
    v44((char *)v55, (uint64_t)v89, v5);
    __swift_storeEnumTagSinglePayload(v55, 0, 1, v5);
    v57 = v53 + *(int *)(v12 + 48);
    outlined init with copy of FeatureEligibility?(v51, v53, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of FeatureEligibility?(v55, v57, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v53, 1, v5) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v51, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v54 = *(void (**)(char *, uint64_t))(v87 + 8);
      v54(v56, v5);
      v58 = __swift_getEnumTagSinglePayload(v57, 1, v5);
      v45 = v88;
      if (v58 == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v53, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_39:

        return 0;
      }
      goto LABEL_26;
    }
    outlined init with copy of FeatureEligibility?(v53, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v59 = __swift_getEnumTagSinglePayload(v57, 1, v5);
    v45 = v88;
    if (v59 == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v86, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v51, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v54 = *(void (**)(char *, uint64_t))(v87 + 8);
      v54(v89, v5);
      v54(v20, v5);
LABEL_26:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v53, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
      goto LABEL_27;
    }
    v76 = v87;
    v77 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v83, v57, v5);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    LODWORD(v85) = dispatch thunk of static Equatable.== infix(_:_:)();
    v78 = v51;
    v54 = *(void (**)(char *, uint64_t))(v76 + 8);
    v54(v77, v5);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v86, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v78, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v54(v89, v5);
    v54(v20, v5);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v53, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if ((v85 & 1) != 0)
      goto LABEL_39;
  }
  else
  {
    v54 = *(void (**)(char *, uint64_t))(v40 + 8);
    v54(v46, v5);
  }
LABEL_27:
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v60 = type metadata accessor for Logger();
  __swift_project_value_buffer(v60, (uint64_t)&static Logger.conversationControls);
  v61 = v82;
  v44(v82, v45, v5);
  v62 = v31;
  v63 = Logger.logObject.getter();
  v64 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v63, (os_log_type_t)v64))
  {
    LODWORD(v88) = v64;
    v65 = swift_slowAlloc();
    v66 = (_QWORD *)swift_slowAlloc();
    v89 = (char *)swift_slowAlloc();
    v91[0] = (uint64_t)v89;
    *(_DWORD *)v65 = 136315650;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v67 = dispatch thunk of CustomStringConvertible.description.getter();
    v90 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v68, v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v69 = ((uint64_t (*)(char *, uint64_t))v54)(v61, v5);
    *(_WORD *)(v65 + 12) = 2112;
    v70 = ((uint64_t (*)(uint64_t))v81)(v69);
    v71 = v70;
    if (v70)
      v90 = v70;
    else
      v90 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v66 = v71;

    *(_WORD *)(v65 + 22) = 2112;
    v73 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v62) + 0x8D8))();
    v74 = v73;
    if (v73)
      v90 = v73;
    else
      v90 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v66[1] = v74;

    _os_log_impl(&dword_1BD004000, v63, (os_log_type_t)v88, "SessionActivationRequestNotice for stagedActivity %s is no longer valid on conversation %@ with stagedActivity %@", (uint8_t *)v65, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v66, -1, -1);
    v72 = 1;
    v75 = v89;
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v75, -1, -1);
    MEMORY[0x1C3B751B8](v65, -1, -1);

  }
  else
  {

    v54(v61, v5);
    return 1;
  }
  return v72;
}

void closure #2 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    ConversationControlsManager.presentCurrentActivity(completion:)(0, 0);

  }
}

void closure #4 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, _QWORD *a2)
{
  int *updated;
  uint64_t v5;
  BOOL *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char v21;
  char v22;
  char v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[14];

  updated = (int *)type metadata accessor for AccountUpdateNotice(0);
  MEMORY[0x1E0C80A78](updated);
  v6 = (BOOL *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Participant(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_5;
  }
  swift_beginAccess();
  v16 = MEMORY[0x1C3B752C0](a2 + 2);
  if (!v16)
    return;
  a2 = (_QWORD *)v16;
  if ((ConversationControlsManager.isLocalMemberAssociatedTo(_:)(a1) & 1) == 0)
  {
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x2B8))();
    Participant.isActiveWithAV.getter();
    v22 = v21;
    outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant);
    if ((v22 & 1) != 0)
    {
      Participant.isActiveWithAV.getter();
      v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      v25 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BD6441D0;
      outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v26 + v25, type metadata accessor for Participant);
      UUID.init()();
      Date.init()();
      *v6 = (v24 & 1) == 0;
      *((_QWORD *)v6 + 1) = v26;
      v6[updated[8]] = 2;
      v27 = (char *)&v6[updated[9]];
      *(_QWORD *)v27 = 0;
      *((_QWORD *)v27 + 1) = 0;
      v6[updated[10]] = 1;
      v28 = (char *)&v6[updated[11]];
      *(_QWORD *)v28 = 0;
      *((_QWORD *)v28 + 1) = 0;
      v29 = (char *)&v6[updated[12]];
      *(_QWORD *)v29 = 0;
      *((_QWORD *)v29 + 1) = 0;
      *(_OWORD *)&v6[updated[13]] = xmmword_1BD6491B0;
      specialized ConversationControlsManager.post(notice:)((uint64_t)v6, (uint64_t)a2, (uint64_t)type metadata accessor for AccountUpdateNotice, (uint64_t)&protocol witness table for AccountUpdateNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v30, v31, v32, v33[0], v33[1], v33[2], v33[3], v33[4], v33[5], v33[6], v33[7], v33[8], v33[9], v33[10],
        v33[11],
        v33[12],
        v33[13]);

      outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for AccountUpdateNotice);
      return;
    }
    goto LABEL_10;
  }
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_13;
LABEL_5:
  v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationControls);
  v18 = Logger.logObject.getter();
  v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1BD004000, v18, v19, "skipping participant av mode change notice for local primary", v20, 2u);
    MEMORY[0x1C3B751B8](v20, -1, -1);
  }

LABEL_10:
}

uint64_t ConversationControlsManager.isLocalMemberAssociatedTo(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  unsigned int v11;
  id v12;
  void *v13;
  id v14;
  unsigned __int8 v15;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x290))();
  if (result)
  {
    v4 = (void *)result;
    v5 = objc_msgSend((id)result, sel_localMember);
    if (v5)
    {
      v6 = v5;
      v7 = *(void **)(a1 + *(int *)(type metadata accessor for Participant(0) + 28));
      if (!v7)
      {

        return 0;
      }
      v8 = v7;
      v9 = objc_msgSend(v6, sel_lightweightPrimary);
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(v9, sel_isEqualToHandle_, v8);

        if (v11)
        {

          return 1;
        }
      }
      v12 = objc_msgSend(v6, sel_association);
      if (v12)
      {
        v13 = v12;
        v14 = objc_msgSend(v12, sel_handle);
        v15 = objc_msgSend(v14, sel_isEqualToHandle_, v8);

        return (v15 & 1) != 0;
      }

    }
    return 0;
  }
  return result;
}

void closure #5 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  int *updated;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  _QWORD *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  updated = (int *)type metadata accessor for AccountUpdateNotice(0);
  MEMORY[0x1E0C80A78](updated);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  swift_beginAccess();
  v16 = (_QWORD *)MEMORY[0x1C3B752C0](a3 + 2);
  if (!v16)
    return;
  a3 = v16;
  v17 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v16) + 0x978))();
  v11 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  (*(void (**)(char *))((*v17 & *a3) + 0x998))(v10);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
  PassthroughSubject.send(_:)();
  v18 = objc_retain(*(id *)((char *)a3
                          + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController));
  ConversationController.lookupActiveConversation()();

  if (!v37)
  {

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v35, &demangling cache variable for type metadata for Conversation?);
    return;
  }
  outlined init with take of Notice(&v35, (uint64_t)v39);
  v19 = v40;
  v20 = v41;
  __swift_project_boxed_opaque_existential_1(v39, v40);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 56))(v19, v20) == 3)
  {
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_6:
      v21 = type metadata accessor for Logger();
      __swift_project_value_buffer(v21, (uint64_t)&static Logger.conversationControls);
      v22 = Logger.logObject.getter();
      v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_1BD004000, v22, v23, "visibleParticipantDidBecomeInactive - present leave notice", v24, 2u);
        MEMORY[0x1C3B751B8](v24, -1, -1);
      }

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
      v25 = *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
      v26 = (v25 + 32) & ~v25;
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1BD6441D0;
      outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v27 + v26, type metadata accessor for Participant);
      UUID.init()();
      Date.init()();
      *v7 = 1;
      *((_QWORD *)v7 + 1) = v27;
      v7[updated[8]] = 2;
      v28 = &v7[updated[9]];
      *(_QWORD *)v28 = 0;
      *((_QWORD *)v28 + 1) = 0;
      v7[updated[10]] = 1;
      v29 = &v7[updated[11]];
      *(_QWORD *)v29 = 0;
      *((_QWORD *)v29 + 1) = 0;
      v30 = &v7[updated[12]];
      *(_QWORD *)v30 = 0;
      *((_QWORD *)v30 + 1) = 0;
      *(_OWORD *)&v7[updated[13]] = xmmword_1BD6491B0;
      specialized ConversationControlsManager.post(notice:)((uint64_t)v7, (uint64_t)a3, (uint64_t)type metadata accessor for AccountUpdateNotice, (uint64_t)&protocol witness table for AccountUpdateNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v31, v32, v33, v34, v35, *((uint64_t *)&v35 + 1), v36, v37, v38, v39[0], v39[1], v39[2], v40, v41,
        v42,
        v43,
        v44);

      outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for AccountUpdateNotice);
      goto LABEL_11;
    }
LABEL_14:
    swift_once();
    goto LABEL_6;
  }

LABEL_11:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

void closure #6 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    swift_beginAccess();
    v16 = (_QWORD *)MEMORY[0x1C3B752C0](a3 + 16);
    if (v16)
    {
      v17 = v16;
      v18 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v16) + 0x978))();
      PassthroughSubject.send(_:)();
      outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v10, type metadata accessor for Participant.State);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v19 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v19);
        (*(void (**)(char *))((*v18 & *v17) + 0x998))(v7);

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
        v20 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v10, v20);
      }
      else
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v7, type metadata accessor for Participant);
        v21 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v21);
        (*(void (**)(char *))((*v18 & *v17) + 0x998))(v7);

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Participant?);
        outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for Participant.State);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #7 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchPredicate();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    swift_beginAccess();
    v12 = (_QWORD *)MEMORY[0x1C3B752C0](a3 + 16);
    if (v12)
    {
      v13 = v12;
      v14 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v15 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x978))();
      (*(void (**)(uint64_t))((*v14 & *v13) + 0x9B0))(v15);
      v16 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v16);
      (*(void (**)(char *))((*v14 & *v13) + 0x998))(v6);

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #8 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchPredicate();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    swift_beginAccess();
    v12 = (_QWORD *)MEMORY[0x1C3B752C0](a3 + 16);
    if (v12)
    {
      v13 = v12;
      v14 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x978))();
      v15 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v15);
      (*(void (**)(char *))((*v14 & *v13) + 0x998))(v6);

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #9 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = type metadata accessor for DispatchPredicate();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    swift_beginAccess();
    v8 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 16);
    if (v8)
    {
      v9 = v8;
      v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v11 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v8) + 0x978))();
      (*(void (**)(uint64_t))((*v10 & *v9) + 0x9B0))(v11);

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #10 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;

  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    swift_beginAccess();
    v10 = MEMORY[0x1C3B752C0](a3 + 16);
    if (v10)
    {
      v11 = (_QWORD *)v10;
      if ((a2 & 1) == 0)
        ConversationController.localVideoSupported.getter();
      ConversationControlsManager.localVideoButtonState.getter();
      ConversationControlsManager.localVideoButtonState.setter();
      if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v11) + 0x448))())
      {
        v13 = v12;
        ObjectType = swift_getObjectType();
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v13 + 64))(a2 & 1, ObjectType, v13);

        swift_unknownObjectRelease();
      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #11 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;

  v3 = type metadata accessor for DispatchPredicate();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    swift_beginAccess();
    v8 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 16);
    if (v8)
    {
      v9 = v8;
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v8) + 0x9B0))();

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #12 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  _QWORD *v62;
  char *v63;
  int v64;
  os_log_type_t v65;
  uint8_t *v66;
  char *v67;
  NSObject *v68;
  os_log_type_t v69;
  __objc2_class_ro **p_info;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t *v88;
  int *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  double v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t *v97;
  uint64_t v98;
  os_log_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  uint64_t v118[4];
  uint64_t v119[10];
  _QWORD v120[9];
  unsigned __int8 v121;

  v113 = a3;
  v114 = a1;
  v110 = a2;
  v105 = type metadata accessor for ReactionNotice(0);
  MEMORY[0x1E0C80A78](v105);
  v106 = (uint64_t *)((char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantReaction?);
  v7 = MEMORY[0x1E0C80A78](v6);
  v104 = (uint64_t)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v109 = (char *)&v98 - v9;
  v10 = type metadata accessor for ParticipantReaction(0);
  v107 = *(_QWORD *)(v10 - 8);
  v108 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v111 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v112 = (char *)&v98 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Participant(0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v98 - v21;
  v23 = type metadata accessor for DispatchPredicate();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (uint64_t *)((char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v26 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x1E0DEF740], v23);
  v27 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v24 + 8))(v26, v23);
  if ((v27 & 1) == 0)
  {
    __break(1u);
LABEL_34:
    swift_once();
    goto LABEL_6;
  }
  swift_beginAccess();
  v28 = (char *)MEMORY[0x1C3B752C0](a4 + 16);
  if (!v28)
    return;
  a4 = v28;
  if (!*(_QWORD *)(v114 + *(int *)(v17 + 28)))
  {
LABEL_26:

    return;
  }
  v29 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v28) + 0x430))();
  if (!v29)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v57 = type metadata accessor for Logger();
    __swift_project_value_buffer(v57, (uint64_t)&static Logger.conversationControls);
    v58 = a4;
    v59 = Logger.logObject.getter();
    v60 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      v62 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v61 = 138412290;
      v120[0] = v58;
      v63 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v62 = a4;

      _os_log_impl(&dword_1BD004000, v59, v60, "conversationControllerManager: %@ inCallConversationControlsDelegate not set. Ignoring participantDidReact callback", v61, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v62, -1, -1);
      MEMORY[0x1C3B751B8](v61, -1, -1);

LABEL_17:
      return;
    }

    return;
  }
  v31 = v29;
  v32 = v30;
  ObjectType = swift_getObjectType();
  v34 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 48);
  v102 = v31;
  v103 = v34(ObjectType, v32);
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_34;
LABEL_6:
  v35 = type metadata accessor for Logger();
  v36 = __swift_project_value_buffer(v35, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v114, (uint64_t)v22, type metadata accessor for Participant);
  v37 = v113;
  swift_bridgeObjectRetain_n();
  v101 = v36;
  v38 = Logger.logObject.getter();
  v39 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    v99 = v38;
    v41 = v40;
    v100 = swift_slowAlloc();
    v119[0] = v100;
    *(_DWORD *)v41 = 136315650;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v22, (uint64_t)v16, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v17);
    specialized >> prefix<A>(_:)((uint64_t)v16);
    v43 = v42;
    v45 = v44;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, &demangling cache variable for type metadata for Participant?);
    v120[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v45, v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of AccountUpdateNotice((uint64_t)v22, type metadata accessor for Participant);
    LOBYTE(v43) = v39;
    *(_WORD *)(v41 + 12) = 2080;
    v46 = v103;
    LOBYTE(v120[0]) = v103 & 1;
    v47 = String.init<A>(reflecting:)();
    v120[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v48, v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 22) = 2080;
    v49 = v110;
    v120[0] = v110;
    v120[1] = v113;
    swift_bridgeObjectRetain();
    v50 = String.init<A>(reflecting:)();
    v120[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, v119);
    v37 = v113;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v52 = v99;
    _os_log_impl(&dword_1BD004000, v99, (os_log_type_t)v43, "reactingParticipant: %s isScreenSharingVisible:%s reaction:%s", (uint8_t *)v41, 0x20u);
    v53 = v100;
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v53, -1, -1);
    MEMORY[0x1C3B751B8](v41, -1, -1);

    v55 = (uint64_t)v111;
    v54 = (uint64_t)v112;
    v56 = (uint64_t)v109;
  }
  else
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v22, type metadata accessor for Participant);

    swift_bridgeObjectRelease_n();
    v55 = (uint64_t)v111;
    v54 = (uint64_t)v112;
    v56 = (uint64_t)v109;
    v49 = v110;
    v46 = v103;
  }
  Participant.videoInfo.getter();
  outlined init with take of Any?((uint64_t)v119, (uint64_t)v120, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v120[0])
  {
    v64 = v121;
    outlined release of LinearGradient((uint64_t)v119);
    if ((v64 & v46 & 1) != 0)
    {
      v59 = Logger.logObject.getter();
      v65 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v59, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v66 = 0;
        _os_log_impl(&dword_1BD004000, v59, v65, "Ignoring reaction from participant whose camera is mixed with screen", v66, 2u);
        MEMORY[0x1C3B751B8](v66, -1, -1);

        swift_unknownObjectRelease();
        goto LABEL_17;
      }

      swift_unknownObjectRelease();
      goto LABEL_26;
    }
  }
  outlined init with copy of ConversationControlsAppLaunchButtonType(v114, (uint64_t)v20, type metadata accessor for Participant);
  swift_bridgeObjectRetain();
  ParticipantReaction.init(participant:reaction:)((uint64_t)v20, v49, v37, v56);
  if (__swift_getEnumTagSinglePayload(v56, 1, v108) == 1)
  {
    swift_unknownObjectRelease();

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v56, (uint64_t *)&demangling cache variable for type metadata for ParticipantReaction?);
  }
  else
  {
    outlined init with take of StagedCollaboration(v56, v54, type metadata accessor for ParticipantReaction);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v54, v55, type metadata accessor for ParticipantReaction);
    v67 = a4;
    v68 = Logger.logObject.getter();
    v69 = static os_log_type_t.default.getter();
    p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtC15ConversationKit22InCallControlsBaseCell + 32);
    if (os_log_type_enabled(v68, v69))
    {
      v71 = swift_slowAlloc();
      v114 = swift_slowAlloc();
      v118[0] = v114;
      *(_DWORD *)v71 = 136315394;
      v72 = v104;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v55, v104, type metadata accessor for ParticipantReaction);
      __swift_storeEnumTagSinglePayload(v72, 0, 1, v108);
      specialized >> prefix<A>(_:)(v72);
      v73 = v55;
      v75 = v74;
      v77 = v76;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v72, (uint64_t *)&demangling cache variable for type metadata for ParticipantReaction?);
      v115[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v77, v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v78 = v73;
      p_info = &OBJC_METACLASS____TtC15ConversationKit22InCallControlsBaseCell.info;
      outlined destroy of AccountUpdateNotice(v78, type metadata accessor for ParticipantReaction);
      *(_WORD *)(v71 + 12) = 2080;
      v79 = swift_beginAccess();
      specialized NoticeQueueStore.peek()(v115, v79);
      swift_endAccess();
      v80 = v116;
      if (v116)
      {
        v81 = v117;
        __swift_project_boxed_opaque_existential_1(v115, v116);
        v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 120))(v80, v81);
        v84 = v83;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v115);
        v115[0] = v82;
        v115[1] = v84;
        v85 = String.init<A>(reflecting:)();
        v87 = v86;
      }
      else
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v115, (uint64_t *)&demangling cache variable for type metadata for Notice?);
        v87 = 0xE300000000000000;
        v85 = 7104878;
      }
      v89 = (int *)v105;
      v88 = v106;
      v115[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v85, v87, v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v68, v69, "participantDidReact - reaction: %s reactionNoticeHistory:%s", (uint8_t *)v71, 0x16u);
      v90 = v114;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v90, -1, -1);
      MEMORY[0x1C3B751B8](v71, -1, -1);

      v54 = (uint64_t)v112;
    }
    else
    {
      outlined destroy of AccountUpdateNotice(v55, type metadata accessor for ParticipantReaction);

      v89 = (int *)v105;
      v88 = v106;
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantReaction>);
    v91 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
    v92 = swift_allocObject();
    *(_OWORD *)(v92 + 16) = xmmword_1BD6441D0;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v54, v92 + v91, type metadata accessor for ParticipantReaction);
    UUID.init()();
    Date.init()();
    if (one-time initialization token for shared != -1)
      swift_once();
    v93 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1056))();
    *v88 = v92;
    *((_BYTE *)v88 + v89[7]) = 0;
    v94 = (uint64_t *)((char *)v88 + v89[8]);
    *v94 = 0;
    v94[1] = 0;
    *((_BYTE *)v88 + v89[9]) = 1;
    v95 = (uint64_t *)((char *)v88 + v89[10]);
    *v95 = 0;
    v95[1] = 0;
    v96 = (uint64_t *)((char *)v88 + v89[11]);
    *v96 = 0;
    v96[1] = 0;
    *(double *)((char *)v88 + v89[12]) = v93;
    *(_OWORD *)((char *)v88 + v89[13]) = xmmword_1BD6491B0;
    v97 = (uint64_t *)((char *)p_info[200] + (_QWORD)v67);
    swift_beginAccess();
    specialized CoalescingNoticeQueue.push(notice:)((uint64_t)v88, v97);
    swift_endAccess();
    ConversationControlsManager.updateReactionNotice()();

    swift_unknownObjectRelease();
    outlined destroy of AccountUpdateNotice((uint64_t)v88, type metadata accessor for ReactionNotice);
    outlined destroy of AccountUpdateNotice(v54, type metadata accessor for ParticipantReaction);
  }
}

void closure #1 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(unint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  unsigned int v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[5];

  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  swift_beginAccess();
  v10 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 2);
  if (!v10)
    return;
  a2 = v10;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x8C8))(v50);
  if (!a1)
    goto LABEL_25;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
      goto LABEL_6;
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
    goto LABEL_24;
LABEL_6:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0)
    v12 = (id)MEMORY[0x1C3B73D18](0, a1);
  else
    v12 = *(id *)(a1 + 32);
  v13 = v12;
  swift_bridgeObjectRelease();
  outlined init with copy of FeatureEligibility?((uint64_t)v50, (uint64_t)&v44, &demangling cache variable for type metadata for Activity?);
  if (v45)
  {
    outlined init with take of Notice(&v44, (uint64_t)v47);
    v14 = TUConversationActivitySession.uniqueIdentifier.getter();
    v16 = v15;
    v17 = v48;
    v18 = v49;
    __swift_project_boxed_opaque_existential_1(v47, v48);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 104))(v17, v18);
    if (v19)
    {
      v20 = (void *)v19;
      v21 = TUConversationActivitySession.uniqueIdentifier.getter();
      v23 = v22;

      if (v14 == v21 && v16 == v23)
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_21;
      }
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {
LABEL_19:

LABEL_21:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
        goto LABEL_25;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(_QWORD))((*v2 & *a2) + 0x8B8))(0);
    goto LABEL_19;
  }

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v44, &demangling cache variable for type metadata for Activity?);
LABEL_25:
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v26 = type metadata accessor for Logger();
  __swift_project_value_buffer(v26, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of FeatureEligibility?((uint64_t)v50, (uint64_t)v47, &demangling cache variable for type metadata for Activity?);
  v27 = Logger.logObject.getter();
  v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v46 = v30;
    *(_DWORD *)v29 = 136315138;
    outlined init with copy of FeatureEligibility?((uint64_t)v47, (uint64_t)&v44, &demangling cache variable for type metadata for Activity?);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity?);
    v31 = String.init<A>(describing:)();
    *(_QWORD *)&v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, &v46);
    v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v47, &demangling cache variable for type metadata for Activity?);
    _os_log_impl(&dword_1BD004000, v27, v28, "activitiesDidChange for activity:%s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v30, -1, -1);
    MEMORY[0x1C3B751B8](v29, -1, -1);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v47, &demangling cache variable for type metadata for Activity?);
  }

  outlined init with copy of FeatureEligibility?((uint64_t)v50, (uint64_t)v47, &demangling cache variable for type metadata for Activity?);
  if (v48)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v33 = (void *)v44;
      v34 = (*(uint64_t (**)(void))((*v2 & *a2) + 0x8B0))();
      swift_release();
      if (!v34)
        (*(void (**)(id))((*v2 & *a2) + 0x920))(objc_msgSend(v33, sel_applicationState));

    }
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v47, &demangling cache variable for type metadata for Activity?);
  }
  (*(void (**)(void))((*v2 & *a2) + 0x978))();
  (*(void (**)(_QWORD *))((*v2 & *a2) + 0x9B8))(v50);
  v35 = ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
  v36 = (void *)(*(uint64_t (**)(uint64_t))((*v2 & *a2) + 0x290))(v35);
  if (v36)
  {
    v37 = v36;
    v38 = objc_msgSend(v36, sel_stagedActivitySession);

    if (v38)
    {
      v39 = objc_msgSend(v38, sel_activity);
      v40 = objc_msgSend(v39, sel_isPlaceholderActivity);

      if (v40)
      {
        v41 = Logger.logObject.getter();
        v42 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v43 = 0;
          _os_log_impl(&dword_1BD004000, v41, v42, "Force presenting HUD because we received a placeholder activity", v43, 2u);
          MEMORY[0x1C3B751B8](v43, -1, -1);
        }

        ConversationControlsManager.showHUD()();
      }
    }
  }

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v50, &demangling cache variable for type metadata for Activity?);
}

void closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  _BOOL4 v38;
  uint8_t *v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  int *v51;
  _OWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *boxed_opaque_existential_1;
  BOOL v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  void (**v64)();
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint8_t *v69;
  uint8_t *v70;
  os_log_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  _OWORD *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81[4];

  v74 = a3;
  v75 = a2;
  v79 = a1;
  v76 = (int *)type metadata accessor for SessionActionNotice(0);
  MEMORY[0x1E0C80A78](v76);
  v77 = (_OWORD *)((char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Collaboration(0);
  v78 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v78 + 64);
  v11 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v69 - v13);
  v15 = type metadata accessor for DispatchPredicate();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v18 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
  v19 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  swift_beginAccess();
  v20 = (char *)MEMORY[0x1C3B752C0](a4 + 16);
  if (!v20)
    return;
  a4 = v20;
  v21 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v20) + 0x290))();
  if (!v21)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
    goto LABEL_12;
  }
  v22 = (void *)v21;
  v23 = specialized Conversation.activities.getter();
  Array<A>.currentCollaboration.getter(v23, (uint64_t)v8);

  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
LABEL_12:

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Collaboration?);
    return;
  }
  outlined init with take of StagedCollaboration((uint64_t)v8, (uint64_t)v14, type metadata accessor for Collaboration);
  v25 = *v14;
  v24 = v14[1];
  swift_bridgeObjectRetain();
  v26 = objc_msgSend(v79, sel_collaboration);
  v27 = objc_msgSend(v26, sel_collaborationIdentifier);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v30 = v29;

  if (v25 == v28 && v24 == v30)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
      goto LABEL_18;
  }
  if (objc_msgSend(v79, sel_sessionEventType) == (id)15)
  {
    if (one-time initialization token for conversationControls == -1)
    {
LABEL_16:
      v33 = type metadata accessor for Logger();
      __swift_project_value_buffer(v33, (uint64_t)&static Logger.conversationControls);
      v34 = v79;
      v35 = Logger.logObject.getter();
      v36 = static os_log_type_t.default.getter();
      v37 = v36;
      v38 = os_log_type_enabled(v35, v36);
      v79 = v34;
      if (v38)
      {
        HIDWORD(v73) = v37;
        v39 = (uint8_t *)swift_slowAlloc();
        v72 = swift_slowAlloc();
        v81[0] = v72;
        v70 = v39;
        v71 = v35;
        *(_DWORD *)v39 = 136315138;
        v69 = v39 + 4;
        v40 = v34;
        v41 = objc_msgSend(v40, sel_description);
        v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v44 = v43;

        v80 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v44, v81);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        v46 = v70;
        v45 = v71;
        _os_log_impl(&dword_1BD004000, v71, BYTE4(v73), "Showing HUD for collaboration added noticed posted:%s", v70, 0xCu);
        v47 = v72;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v47, -1, -1);
        MEMORY[0x1C3B751B8](v46, -1, -1);

      }
      else
      {

      }
      v48 = swift_allocObject();
      swift_unknownObjectWeakInit();
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v14, (uint64_t)v12, type metadata accessor for Collaboration);
      v49 = (*(unsigned __int8 *)(v78 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
      v50 = swift_allocObject();
      *(_QWORD *)(v50 + 16) = v48;
      outlined init with take of StagedCollaboration((uint64_t)v12, v50 + v49, type metadata accessor for Collaboration);
      if ((specialized ConversationControlsManager.shouldShowCollaborationNotice(for:)((uint64_t)v14, a4) & 1) != 0)
      {
        v51 = v76;
        v52 = v77;
        v53 = (uint64_t)v77 + v76[5];
        v54 = v75;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v75, v53, type metadata accessor for Participant);
        v55 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload(v53, 0, 1, v55);
        outlined init with copy of RadarReporting(v74, (uint64_t)v52 + v51[6]);
        v56 = (uint64_t *)((char *)v52 + v51[7]);
        v56[3] = v9;
        v56[4] = (uint64_t)&protocol witness table for Collaboration;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v56);
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v14, (uint64_t)boxed_opaque_existential_1, type metadata accessor for Collaboration);
        v58 = *(_QWORD *)(v54 + *(int *)(v55 + 28)) == 0;
        v59 = objc_msgSend(v79, sel_UUID);
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v61 = v14[4];
        v60 = v14[5];
        swift_bridgeObjectRetain();
        swift_retain();
        Date.init()();
        *v52 = xmmword_1BD6548E0;
        v52[1] = xmmword_1BD646A10;
        *((_BYTE *)v52 + v51[8]) = v58;
        v62 = (char *)v52 + v51[9];
        *(_QWORD *)v62 = 0;
        v62[8] = 1;
        v63 = (_QWORD *)((char *)v52 + v51[12]);
        *v63 = v61;
        v63[1] = v60;
        *((_BYTE *)v52 + v51[13]) = 1;
        v64 = (void (**)())((char *)v52 + v51[14]);
        *v64 = partial apply for closure #1 in closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers();
        v64[1] = (void (*)())v50;
        v65 = (_QWORD *)((char *)v52 + v51[15]);
        *v65 = 0;
        v65[1] = 0;
        specialized ConversationControlsManager.post(notice:)((uint64_t)v52, (uint64_t)a4, (uint64_t)type metadata accessor for SessionActionNotice, (uint64_t)&protocol witness table for SessionActionNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v66, v67, v68, (uint64_t)v69, (uint64_t)v70, (uint64_t)v71, v72, v73, v74, v75, (uint64_t)v76, (uint64_t)v77, v78, (uint64_t)v79,
          v80,
          v81[0],
          v81[1]);

        swift_release();
        outlined destroy of AccountUpdateNotice((uint64_t)v52, type metadata accessor for SessionActionNotice);
        outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for Collaboration);
        return;
      }
      outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for Collaboration);
      swift_release();
      goto LABEL_23;
    }
LABEL_26:
    swift_once();
    goto LABEL_16;
  }
LABEL_18:
  outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for Collaboration);
LABEL_23:

}

void closure #1 in closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    ConversationControlsManager.presentCollaboration(_:completion:)(a2, 0, 0);

  }
}

void closure #3 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[5];
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char v41;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, unint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, unint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_10;
  }
  swift_beginAccess();
  v15 = MEMORY[0x1C3B752C0](a4 + 2);
  if (!v15)
    return;
  a4 = (_QWORD *)v15;
  if (a3 == 1)
    v11 = 0x75614C736465656ELL;
  else
    v11 = 0x756F72676B636162;
  if (a3 == 1)
    v10 = 0xEB0000000068636ELL;
  else
    v10 = 0xEA0000000000646ELL;
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_20;
LABEL_10:
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of RadarReporting(a2, (uint64_t)&v38);
  swift_bridgeObjectRetain();
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v35 = a3;
    v21 = v20;
    v37 = v20;
    *(_DWORD *)v19 = 136315394;
    v34 = v11;
    outlined init with copy of RadarReporting((uint64_t)&v38, (uint64_t)v36);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    v22 = String.init<A>(describing:)();
    v36[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    v36[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v10, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BD004000, v17, v18, "appLaunchStateChanged for activity:%s with state:%s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    v24 = v21;
    a3 = v35;
    MEMORY[0x1C3B751B8](v24, -1, -1);
    MEMORY[0x1C3B751B8](v19, -1, -1);

  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);

    swift_bridgeObjectRelease_n();
  }
  v25 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a4) + 0x920))(a3);
  v26 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v26);
  (*(void (**)(char *))((*v25 & *a4) + 0x998))(v9);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
  v27 = (*(uint64_t (**)(void))((*v25 & *a4) + 0x400))();
  if (v27)
  {
    v29 = v28;
    ObjectType = swift_getObjectType();
    v40 = 0;
    v38 = 0u;
    v39 = 0u;
    v41 = 6;
    (*(void (**)(__int128 *, _QWORD, uint64_t, uint64_t))(v29 + 16))(&v38, 0, ObjectType, v29);
    swift_unknownObjectRelease();
    v27 = outlined destroy of ConversationControlsType((uint64_t)&v38);
  }
  if ((*(uint64_t (**)(uint64_t))((*v25 & *a4) + 0x430))(v27))
  {
    v32 = v31;
    v33 = swift_getObjectType();
    v40 = 0;
    v38 = 0u;
    v39 = 0u;
    v41 = 6;
    (*(void (**)(__int128 *, uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 80))(&v38, 1, 0, v33, v32);
    swift_unknownObjectRelease();

    outlined destroy of ConversationControlsType((uint64_t)&v38);
  }
  else
  {

  }
}

void closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  NSObject *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  void (*v42)(uint64_t *, _QWORD);
  uint64_t (*v43)(uint64_t *);
  void (*v44)(uint64_t *, _QWORD);
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  NSObject *v55;
  _QWORD *v56;
  uint64_t v57;
  NSObject *v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  NSObject *v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t ObjectType;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  char *v103;
  char *v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned __int8 v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  char v116;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v5);
  v103 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate();
  v11 = *(NSObject **)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  ((void (*)(uint64_t *, _QWORD, uint64_t))v11[13].isa)(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = _dispatchPreconditionTest(_:)();
  ((void (*)(uint64_t *, uint64_t))v11[1].isa)(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_68;
  }
  swift_beginAccess();
  v15 = MEMORY[0x1C3B752C0](a2 + 16);
  if (!v15)
    return;
  v11 = v15;
  if (objc_msgSend(*(id *)(v15 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags), sel_requestToScreenShareEnabled))
  {
    v102 = v11;
    if (a1)
    {
      v16 = swift_bridgeObjectRetain();
      v17 = specialized Set.count.getter(v16);
      if (v17)
      {
        v18 = v17;
        v112 = MEMORY[0x1E0DEE9D8];
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v17 & ~(v17 >> 63), 0);
        v19 = a1 & 0xC000000000000001;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v20 = __CocoaSet.startIndex.getter();
          v22 = 1;
        }
        else
        {
          v20 = specialized _NativeSet.startIndex.getter(a1);
          v22 = v25 & 1;
        }
        v109 = v20;
        v110 = v21;
        v111 = v22;
        if ((v18 & 0x8000000000000000) == 0)
        {
          v26 = a1 & 0xFFFFFFFFFFFFFF8;
          if (a1 < 0)
            v26 = a1;
          v106 = v7;
          v107 = (_QWORD *)v26;
          v104 = v9;
          v105 = a1 & 0xC000000000000001;
          while (1)
          {
            specialized Set.subscript.getter(v109, v110, v111, a1);
            v28 = v27;
            v29 = objc_msgSend(v27, sel_UUID);
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            v30 = v112;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v30 + 16) + 1, 1);
              v30 = v112;
            }
            v32 = *(_QWORD *)(v30 + 16);
            v31 = *(_QWORD *)(v30 + 24);
            if (v32 >= v31 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
              v30 = v112;
            }
            *(_QWORD *)(v30 + 16) = v32 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v30+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v32, v9, v108);
            v112 = v30;
            if (v19)
            {
              if ((v111 & 1) == 0)
              {
                __break(1u);
                return;
              }
              if (__CocoaSet.Index.handleBitPattern.getter())
                swift_isUniquelyReferenced_nonNull_native();
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUScreenSharingRequest>.Index);
              v42 = (void (*)(uint64_t *, _QWORD))Set.Index._asCocoa.modify();
              __CocoaSet.formIndex(after:isUnique:)();
              v42(&v113, 0);
            }
            else
            {
              v33 = v109;
              v34 = v110;
              v35 = v111;
              v36 = specialized _NativeSet.index(after:)(v109, v110, v111, a1);
              v38 = v37;
              v40 = v39;
              v41 = v35;
              v19 = v105;
              outlined consume of Set<TUHandle>.Index._Variant(v33, v34, v41);
              v109 = v36;
              v110 = v38;
              v9 = v104;
              v7 = v106;
              v111 = v40 & 1;
            }
            if (!--v18)
            {
              outlined consume of Set<TUHandle>.Index._Variant(v109, v110, v111);
              swift_bridgeObjectRelease();
              v24 = v112;
              goto LABEL_28;
            }
          }
        }
        __break(1u);
        goto LABEL_71;
      }
      swift_bridgeObjectRelease();
      v24 = MEMORY[0x1E0DEE9D8];
LABEL_28:
      v11 = v102;
    }
    else
    {
      v24 = 0;
    }
    v13 = (uint64_t *)MEMORY[0x1E0DEEDD8];
    v43 = *(uint64_t (**)(uint64_t *))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v11->isa) + 0x2A8);
    swift_bridgeObjectRetain();
    v44 = (void (*)(uint64_t *, _QWORD))v43(&v113);
    if (*(_QWORD *)(*v45 + 16) >= specialized MutableCollection._halfStablePartition(isSuffixElement:)(v45, v24))
    {
      specialized Array.replaceSubrange<A>(_:with:)();
      v44(&v113, 0);
      v46 = swift_bridgeObjectRelease();
      v7 = *(_QWORD *)((*v13 & (uint64_t)v11->isa) + 0x290);
      v47 = ((uint64_t (*)(uint64_t))v7)(v46);
      if (v47)
      {
        v48 = (void *)v47;
        specialized Conversation.currentScreenSharingRequest(ignoring:)();
        v2 = v49;

        if (v2)
        {
          if (one-time initialization token for conversationControls == -1)
          {
LABEL_33:
            v50 = type metadata accessor for Logger();
            v51 = __swift_project_value_buffer(v50, (uint64_t)&static Logger.conversationControls);
            v23 = v2;
            v52 = Logger.logObject.getter();
            v53 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v52, v53))
            {
              v108 = v51;
              v54 = (uint8_t *)swift_slowAlloc();
              v107 = (_QWORD *)swift_slowAlloc();
              *(_DWORD *)v54 = 138412290;
              v113 = (uint64_t)v23;
              v55 = v23;
              v13 = (uint64_t *)MEMORY[0x1E0DEEDD8];
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              v56 = v107;
              *v107 = v2;

              _os_log_impl(&dword_1BD004000, v52, v53, "Current screen sharing request %@", v54, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
              swift_arrayDestroy();
              MEMORY[0x1C3B751B8](v56, -1, -1);
              MEMORY[0x1C3B751B8](v54, -1, -1);
            }
            else
            {

              v52 = v23;
            }

            v67 = v102;
            v68 = ((uint64_t (*)(void))v7)();
            if (v68)
            {
              v69 = (void *)v68;
              specialized Conversation.currentScreenSharingRequest(ignoring:)();
              v71 = v70;

              if (v71)
              {
                v72 = objc_msgSend(v71, sel_type);

                if (v72 == (id)1)
                {
                  v94 = (*(uint64_t (**)(void))((*v13 & (uint64_t)v67->isa) + 0x430))();
                  if (v94)
                  {
                    v96 = v95;
                    ObjectType = swift_getObjectType();
                    (*(void (**)(uint64_t, uint64_t))(v96 + 88))(ObjectType, v96);
                    v94 = swift_unknownObjectRelease();
                  }
                  v98 = (*(uint64_t (**)(uint64_t))((*v13 & (uint64_t)v67->isa) + 0x3E8))(v94);
                  if (v98)
                  {
                    v100 = v99;
                    v101 = swift_getObjectType();
                    v113 = 24;
                    v114 = 0u;
                    v115 = 0u;
                    v116 = 6;
                    (*(void (**)(uint64_t, uint64_t *, _QWORD, _QWORD, uint64_t, uint64_t))(v100 + 16))(3, &v113, 0, 0, v101, v100);
                    swift_unknownObjectRelease();
                    v98 = outlined destroy of ConversationControlsType((uint64_t)&v113);
                  }
                  (*(void (**)(uint64_t))((*v13 & (uint64_t)v67->isa) + 0x978))(v98);
                }
                else if (v72 == (id)4)
                {
                  if ((*(uint64_t (**)(void))((*v13 & (uint64_t)v67->isa) + 0x430))())
                  {
                    v74 = v73;
                    v75 = swift_getObjectType();
                    (*(void (**)(uint64_t, uint64_t))(v74 + 88))(v75, v74);
                    swift_unknownObjectRelease();
                  }
                  v67 = v67;
                  v76 = Logger.logObject.getter();
                  v77 = static os_log_type_t.default.getter();
                  if (os_log_type_enabled(v76, v77))
                  {
                    v78 = (uint8_t *)swift_slowAlloc();
                    v79 = swift_slowAlloc();
                    v113 = v79;
                    *(_DWORD *)v78 = 136315138;
                    v80 = (*(uint64_t (**)(void))((*v13 & (uint64_t)v67->isa) + 0x568))();
                    if (v80)
                    {
                      v109 = v80;
                      type metadata accessor for HUDActivity(0);
                      v81 = String.init<A>(reflecting:)();
                      v83 = v82;
                    }
                    else
                    {
                      v81 = 7104878;
                      v83 = 0xE300000000000000;
                    }
                    v109 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v81, v83, &v113);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();

                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_1BD004000, v76, v77, "incomingRequestToScreenShare current activity %s", v78, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x1C3B751B8](v79, -1, -1);
                    MEMORY[0x1C3B751B8](v78, -1, -1);

                  }
                  else
                  {

                  }
                  ConversationControlsManager.addIncomingScreenSharingRequestActivity()();
                }
              }
            }

            goto LABEL_65;
          }
LABEL_71:
          swift_once();
          goto LABEL_33;
        }
      }
      if (one-time initialization token for conversationControls == -1)
      {
LABEL_36:
        v57 = type metadata accessor for Logger();
        __swift_project_value_buffer(v57, (uint64_t)&static Logger.conversationControls);
        v58 = v11;
        v59 = Logger.logObject.getter();
        v60 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v59, v60))
        {
          v61 = (uint8_t *)swift_slowAlloc();
          v62 = swift_slowAlloc();
          v113 = v62;
          *(_DWORD *)v61 = 136315138;
          v63 = ((uint64_t (*)(void))v7)();
          if (v63)
          {
            v109 = v63;
            type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
            v64 = String.init<A>(reflecting:)();
            v66 = v65;
          }
          else
          {
            v64 = 7104878;
            v66 = 0xE300000000000000;
          }
          v109 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v64, v66, &v113);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v59, v60, "No screen sharing request exists for conversation %s", v61, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v62, -1, -1);
          MEMORY[0x1C3B751B8](v61, -1, -1);

        }
        else
        {

        }
        v84 = (uint64_t)v103;
        v85 = type metadata accessor for TaskPriority();
        __swift_storeEnumTagSinglePayload(v84, 1, 1, v85);
        type metadata accessor for MainActor();
        v23 = v58;
        v86 = static MainActor.shared.getter();
        v87 = (_QWORD *)swift_allocObject();
        v88 = MEMORY[0x1E0DF06E8];
        v87[2] = v86;
        v87[3] = v88;
        v87[4] = v23;
        _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
        v89 = swift_release();
        v90 = (*(uint64_t (**)(uint64_t))((*v13 & (uint64_t)v23->isa) + 0x3E8))(v89);
        if (v90)
        {
          v92 = v91;
          swift_getObjectType();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
          v93 = swift_allocObject();
          *(_OWORD *)(v93 + 16) = xmmword_1BD645380;
          *(_QWORD *)(v93 + 32) = 24;
          *(_OWORD *)(v93 + 40) = 0u;
          *(_OWORD *)(v93 + 56) = 0u;
          *(_BYTE *)(v93 + 72) = 6;
          *(_QWORD *)(v93 + 80) = 25;
          *(_OWORD *)(v93 + 88) = 0u;
          *(_OWORD *)(v93 + 104) = 0u;
          *(_BYTE *)(v93 + 120) = 6;
          (*(void (**)(void))(v92 + 32))();
          swift_bridgeObjectRelease();
          v90 = swift_unknownObjectRelease();
        }
        (*(void (**)(uint64_t))((*v13 & (uint64_t)v23->isa) + 0x978))(v90);
        goto LABEL_65;
      }
LABEL_69:
      swift_once();
      goto LABEL_36;
    }
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v23 = v11;
LABEL_65:

}

uint64_t closure #3 in closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #3 in closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_521();
  ConversationControlsManager.removeIncomingScreenShareRequest()();
  OUTLINED_FUNCTION_508();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  NSObject *v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint8_t *v36;
  NSObject *v37;
  _QWORD *v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  _QWORD *v44;
  id v45;
  unsigned int v46;
  id v47;
  void *v48;
  id v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  NSObject *v60;
  NSObject *v61;
  id v62;
  void (*v63)();
  uint64_t v64;
  id v65;
  void *v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  BOOL v73;
  id v74;
  NSObject *v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t *v84;
  void (**v85)();
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  _QWORD *v95;
  NSObject *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;

  v107 = a2;
  v11 = type metadata accessor for SessionActionNotice(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v14);
  v105 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL();
  v106 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v106 + 64);
  v18 = MEMORY[0x1E0C80A78](v16);
  v104 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v103 = (char *)&v90 - v19;
  swift_beginAccess();
  v20 = MEMORY[0x1C3B752C0](a6 + 16);
  if (!v20)
    return;
  v21 = (_QWORD *)v20;
  v98 = v16;
  v99 = a1;
  v22 = a3;
  SessionActionNotice.NoticeType.init(notice:)(v22, &v108);
  v23 = v110;
  if (v110 >> 2 != 0xFFFFFFFF)
  {
    v95 = v21;
    v100 = v108;
    v101 = v109;
    v102 = v111;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v31 = type metadata accessor for Logger();
    __swift_project_value_buffer(v31, (uint64_t)&static Logger.conversationControls);
    v32 = v22;
    v33 = Logger.logObject.getter();
    v34 = static os_log_type_t.default.getter();
    v35 = os_log_type_enabled(v33, v34);
    v94 = (int *)v11;
    HIDWORD(v93) = a5;
    v92 = a4;
    v97 = v23;
    if (v35)
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v91 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v36 = 138412290;
      v108 = (uint64_t)v32;
      v37 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v38 = v91;
      *v91 = v32;

      _os_log_impl(&dword_1BD004000, v33, v34, "Received actionNotice: %@", v36, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v38, -1, -1);
      v23 = v97;
      MEMORY[0x1C3B751B8](v36, -1, -1);
    }
    else
    {

      v33 = v32;
    }
    v39 = v95;

    v40 = -[NSObject session](v32, sel_session);
    v108 = v100;
    v109 = v101;
    v110 = v23;
    v111 = v102;
    SessionActionNotice.NoticeType.isSessionChange.getter();
    v41 = v106;
    v96 = v32;
    if ((v42 & 1) != 0)
    {
      v43 = type metadata accessor for Participant(0);
      v44 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      if (!*(_QWORD *)(v107 + *(int *)(v43 + 28)))
      {
        (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v39) + 0x920))(0);
        v45 = objc_msgSend(v40, sel_activity);
        v46 = objc_msgSend(v45, sel_isScreenSharingActivity);

        if (v46)
        {
          outlined consume of SessionActionNotice.NoticeType?(v100, v101, v23);
          ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);

          return;
        }
      }
      (*(void (**)(void))((*v44 & *v39) + 0x978))();
      v64 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v58 = swift_allocObject();
      *(_QWORD *)(v58 + 16) = v64;
      *(_QWORD *)(v58 + 24) = v40;
      v65 = v40;
      v66 = v40;
      v63 = partial apply for closure #1 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers();
      goto LABEL_24;
    }
    v47 = -[NSObject actionURL](v32, sel_actionURL);
    if (v47)
    {
      v48 = v47;
      v49 = v40;
      v50 = v104;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v51 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
      v52 = (uint64_t)v105;
      v53 = v98;
      v51(v105, v50, v98);
      __swift_storeEnumTagSinglePayload(v52, 0, 1, v53);
      if (__swift_getEnumTagSinglePayload(v52, 1, v53) != 1)
      {
        v54 = (uint64_t)v103;
        v51(v103, (char *)v52, v53);
        v105 = *(char **)((char *)v39 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter);
        v51(v50, (char *)v54, v53);
        v55 = (*(unsigned __int8 *)(v41 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
        v56 = swift_allocObject();
        v57 = v50;
        v58 = v56;
        v59 = v105;
        *(_QWORD *)(v56 + 16) = v105;
        v51((char *)(v56 + v55), v57, v53);
        v60 = v96;
        *(_QWORD *)(v58 + ((v17 + v55 + 7) & 0xFFFFFFFFFFFFFFF8)) = v96;
        v61 = v60;
        v62 = v59;
        v63 = partial apply for closure #2 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers();
LABEL_23:
        v66 = v49;
LABEL_24:
        v67 = v94;
        v68 = (uint64_t)v13 + v94[5];
        v69 = v107;
        outlined init with copy of ConversationControlsAppLaunchButtonType(v107, v68, type metadata accessor for Participant);
        v70 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload(v68, 0, 1, v70);
        outlined init with copy of RadarReporting(v99, (uint64_t)v13 + v67[6]);
        v71 = (_QWORD *)((char *)v13 + v67[7]);
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
        v71[3] = v72;
        v71[4] = &protocol witness table for TUConversationActivitySession;
        *v71 = v66;
        v73 = *(_QWORD *)(v69 + *(int *)(v70 + 28)) == 0;
        v74 = v66;
        v75 = v96;
        v76 = -[NSObject UUID](v96, sel_UUID);
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v77 = -[NSObject bundleIdentifier](v75, sel_bundleIdentifier);
        v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v80 = v79;

        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v63);
        Date.init()();
        v81 = v101;
        *v13 = v100;
        v13[1] = v81;
        v82 = v102;
        v13[2] = v97;
        v13[3] = v82;
        *((_BYTE *)v13 + v67[8]) = v73;
        v83 = (char *)v13 + v67[9];
        *(_QWORD *)v83 = v92;
        v83[8] = BYTE4(v93) & 1;
        v84 = (_QWORD *)((char *)v13 + v67[12]);
        *v84 = v78;
        v84[1] = v80;
        *((_BYTE *)v13 + v67[13]) = 1;
        v85 = (void (**)())((char *)v13 + v67[14]);
        *v85 = v63;
        v85[1] = (void (*)())v58;
        v86 = (_QWORD *)((char *)v13 + v67[15]);
        *v86 = 0;
        v86[1] = 0;
        specialized ConversationControlsManager.post(notice:)((uint64_t)v13, (uint64_t)v39, (uint64_t)type metadata accessor for SessionActionNotice, (uint64_t)&protocol witness table for SessionActionNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v87, v88, v89, v90, (uint64_t)v91, v92, v93, (uint64_t)v94, (uint64_t)v95, (uint64_t)v96, v97, v98, v99, v100,
          v101,
          v102,
          (uint64_t)v103);

        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v63);
        outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for SessionActionNotice);
        return;
      }
    }
    else
    {
      v49 = v40;
      v52 = (uint64_t)v105;
      __swift_storeEnumTagSinglePayload((uint64_t)v105, 1, 1, v98);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for URL?);
    v63 = 0;
    v58 = 0;
    goto LABEL_23;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v24 = type metadata accessor for Logger();
  __swift_project_value_buffer(v24, (uint64_t)&static Logger.conversationControls);
  v25 = v22;
  v26 = Logger.logObject.getter();
  v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v28 = 138412290;
    v108 = (uint64_t)v25;
    v30 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v29 = v25;

    _os_log_impl(&dword_1BD004000, v26, v27, "Unsupported notice:%@", v28, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v29, -1, -1);
    MEMORY[0x1C3B751B8](v28, -1, -1);

  }
  else
  {

  }
}

void closure #1 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, void *a2)
{
  uint64_t v3;
  char *v4;
  char *v5;
  id v6;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (char *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v4) + 0x920))(0);
    ConversationControlsManager.presentCurrentActivity(completion:)(0, 0);
    v6 = *(id *)&v5[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_coreAnalyticsReporter];
    CNKCoreAnalyticsReporter.reportStartedNoticeLaunch(_:)(a2);

  }
}

void closure #2 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(void *a1, uint64_t a2, void *a3)
{
  id v4;
  NSURL *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;

  v4 = objc_msgSend(a1, sel_conversationManager);
  URL._bridgeToObjectiveC()(v5);
  v7 = v6;
  v8 = objc_msgSend(a3, sel_bundleIdentifier);
  if (!v8)
  {
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = (id)MEMORY[0x1C3B72E00](v9);
    swift_bridgeObjectRelease();
    v8 = v10;
  }
  v11 = v8;
  objc_msgSend(v4, sel_activateConversationNoticeWithActionURL_bundleIdentifier_, v7);

}

void closure #1 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  swift_beginAccess();
  v9 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 2);
  if (!v9)
    return;
  a2 = v9;
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x9B0))();
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_13;
LABEL_4:
  v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
  v11 = Logger.logObject.getter();
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1BD004000, v11, v12, "Present HUD: letMeInRequestStateDidChange", v13, 2u);
    MEMORY[0x1C3B751B8](v13, -1, -1);
  }

  v14 = (*(uint64_t (**)(void))((*v2 & *a2) + 0x430))();
  if (v14)
  {
    v16 = v15;
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *__return_ptr))((*v2 & *a2) + 0x848))(v25);
    (*(void (**)(_QWORD *, uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 80))(v25, 1, 0, ObjectType, v16);
    swift_unknownObjectRelease();
    v14 = outlined destroy of ConversationControlsType((uint64_t)v25);
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t))((*v2 & *a2) + 0x3D0))(v25, v14);
  if (v25[3])
  {
    outlined init with copy of RadarReporting((uint64_t)v25, (uint64_t)v22);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for CallControlsService?);
    v18 = v23;
    v19 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v20 = (_QWORD *)(*(_QWORD *)((char *)a2
                               + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController)
                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
    swift_beginAccess();
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v19 + 120))(*v20, v18, v19);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v25, &demangling cache variable for type metadata for CallControlsService?);
  }
}

void closure #2 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    swift_beginAccess();
    v11 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 16);
    if (v11)
    {
      v12 = v11;
      v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v11) + 0x978))();
      v14 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v14);
      (*(void (**)(char *))((*v13 & *v12) + 0x998))(v5);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
      ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #3 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char **v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  unsigned __int8 v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t ObjectType;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int EnumTagSinglePayload;
  id v57;
  Swift::String v58;
  Swift::String_optional v59;
  Swift::String v60;
  uint64_t v61;
  void *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  unint64_t v70;
  __int128 v71;
  __int128 v72;
  _UNKNOWN **v73;
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  char v80;
  Swift::String v81;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v71 - v10;
  v12 = type metadata accessor for DispatchPredicate();
  v13 = *(char ***)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v15 = static OS_dispatch_queue.main.getter();
  ((void (*)(uint64_t *, _QWORD, uint64_t))v13[13])(v15, *MEMORY[0x1E0DEF740], v12);
  v16 = _dispatchPreconditionTest(_:)();
  ((void (*)(uint64_t *, uint64_t))v13[1])(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_31:
    swift_once();
    goto LABEL_13;
  }
  swift_beginAccess();
  v17 = MEMORY[0x1C3B752C0](a2 + 2);
  if (!v17)
    return;
  a2 = (_QWORD *)v17;
  v18 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v18);
  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x998))(v11);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
  (*(void (**)(uint64_t *__return_ptr))((*v2 & *a2) + 0x3D0))(&v77);
  if ((_QWORD)v79)
  {
    outlined init with copy of RadarReporting((uint64_t)&v77, (uint64_t)v74);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v77, &demangling cache variable for type metadata for CallControlsService?);
    v19 = v75;
    v20 = v76;
    __swift_project_boxed_opaque_existential_1(v74, v75);
    v21 = (*(uint64_t (**)(void))((*v2 & *a2) + 0x290))();
    if (v21)
    {
      v22 = v21;
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
      *((_QWORD *)&v72 + 1) = v23;
      v73 = &protocol witness table for TUConversation;
      *(_QWORD *)&v71 = v22;
    }
    else
    {
      v73 = 0;
      v71 = 0u;
      v72 = 0u;
    }
    (*(void (**)(__int128 *, uint64_t, uint64_t))(v20 + 128))(&v71, v19, v20);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v71, &demangling cache variable for type metadata for Conversation?);
    v24 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v77, &demangling cache variable for type metadata for CallControlsService?);
  }
  v3 = *(uint64_t (**)(uint64_t))((*v2 & *a2) + 0x840);
  v25 = v3(v24);
  v13 = &selRef__backlightLuminance;
  if (v25 <= 0x1Fu)
  {
    v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((*v2 & *a2) + 0x290))(v25, v26, v27, v28, v29);
    if (!v30
      || (v31 = v30, v32 = objc_msgSend(v30, sel_ignoreLMIRequests), v31, (v32 & 1) == 0))
    {
      v48 = (*(uint64_t (**)(_QWORD))((*v2 & *a2) + 0x828))(0);
      v49 = (*(uint64_t (**)(uint64_t))((*v2 & *a2) + 0x430))(v48);
      if (v49)
      {
        v51 = v50;
        ObjectType = swift_getObjectType();
        v77 = 2;
        v78 = 0u;
        v79 = 0u;
        v80 = 6;
        (*(void (**)(uint64_t *, uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 80))(&v77, 1, 0, ObjectType, v51);
        swift_unknownObjectRelease();
        v49 = outlined destroy of ConversationControlsType((uint64_t)&v77);
      }
      if ((*(uint64_t (**)(uint64_t))((*v2 & *a2) + 0x3E8))(v49))
      {
        v54 = v53;
        v55 = swift_getObjectType();
        v77 = 2;
        v78 = 0u;
        v79 = 0u;
        v80 = 6;
        (*(void (**)(uint64_t, uint64_t *, _QWORD, _QWORD, uint64_t, uint64_t))(v54 + 16))(1, &v77, 0, 0, v55, v54);
        swift_unknownObjectRelease();
        outlined destroy of ConversationControlsType((uint64_t)&v77);
      }
      specialized Collection.first.getter(*(_QWORD *)(a1 + *(int *)(v18 + 44)), (uint64_t)v9);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v18);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
      if (*(_QWORD *)(a1 + *(int *)(v18 + 36) + 8) && EnumTagSinglePayload == 1)
      {
        v57 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        v81._object = (void *)0xE000000000000000;
        v58._object = (void *)0x80000001BD6804D0;
        v58._countAndFlagsBits = 0xD00000000000001BLL;
        v59.value._countAndFlagsBits = 0x61737265766E6F43;
        v59.value._object = (void *)0xEF74694B6E6F6974;
        v60._countAndFlagsBits = 0;
        v60._object = (void *)0xE000000000000000;
        v81._countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v58, v59, (NSBundle)v57, v60, v81);

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = xmmword_1BD6441D0;
        Participant.contactDetails.getter();
        v62 = (void *)v77;
        v63 = v78;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        *(_QWORD *)(v61 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v61 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_OWORD *)(v61 + 32) = v63;
        v64 = String.init(format:_:)();
        v66 = v65;
        swift_bridgeObjectRelease();
      }
      else
      {
        Participant.contactDetails.getter();
        v67 = (void *)v77;
        v66 = *((_QWORD *)&v78 + 1);
        v64 = v78;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      v68 = (void *)MEMORY[0x1C3B72E00](v64, v66);
      swift_bridgeObjectRelease();
      objc_msgSend(a2, sel_accessibilityDidAddPendingParticipant_, v68);

      goto LABEL_26;
    }
  }
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_31;
LABEL_13:
  v33 = type metadata accessor for Logger();
  __swift_project_value_buffer(v33, (uint64_t)&static Logger.conversationControls);
  a2 = a2;
  v34 = Logger.logObject.getter();
  v35 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v34, v35))
  {

LABEL_26:
    return;
  }
  v36 = swift_slowAlloc();
  v37 = swift_slowAlloc();
  v77 = v37;
  *(_DWORD *)v36 = 136315394;
  LOBYTE(v74[0]) = ((unsigned __int8 (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v3)(v37, v38, v39, v40, v41) > 0x1Fu;
  v42 = String.init<A>(reflecting:)();
  v74[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, &v77);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  v44 = swift_bridgeObjectRelease();
  *(_WORD *)(v36 + 12) = 2080;
  v45 = (void *)(*(uint64_t (**)(uint64_t))((*v2 & *a2) + 0x290))(v44);
  if (v45)
  {
    v46 = v45;
    v47 = objc_msgSend(v45, v13[316]);

  }
  else
  {
    v47 = 0;
  }
  LOBYTE(v74[0]) = v47;
  v69 = String.init<A>(reflecting:)();
  v74[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v70, &v77);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BD004000, v34, v35, "Ignoring pending participant because the user has not yet joined (%s) or LMI requests are muted (%s)", (uint8_t *)v36, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1C3B751B8](v37, -1, -1);
  MEMORY[0x1C3B751B8](v36, -1, -1);

}

void closure #4 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  _UNKNOWN **v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    swift_beginAccess();
    v11 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v11)
    {
      v12 = (_QWORD *)v11;
      v13 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v13);
      v14 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      (*(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x998))(v5);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
      v15 = ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1);
      (*(void (**)(_QWORD *__return_ptr, uint64_t))((*v14 & *v12) + 0x3D0))(v27, v15);
      if (v27[3])
      {
        outlined init with copy of RadarReporting((uint64_t)v27, (uint64_t)v24);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, &demangling cache variable for type metadata for CallControlsService?);
        v16 = v25;
        v17 = v26;
        __swift_project_boxed_opaque_existential_1(v24, v25);
        v18 = (*(uint64_t (**)(void))((*v14 & *v12) + 0x290))();
        if (v18)
        {
          v19 = v18;
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
          *((_QWORD *)&v22 + 1) = v20;
          v23 = &protocol witness table for TUConversation;
          *(_QWORD *)&v21 = v19;
        }
        else
        {
          v23 = 0;
          v21 = 0u;
          v22 = 0u;
        }
        (*(void (**)(__int128 *, uint64_t, uint64_t))(v17 + 128))(&v21, v16, v17);

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v21, &demangling cache variable for type metadata for Conversation?);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      }
      else
      {

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, &demangling cache variable for type metadata for CallControlsService?);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #5 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  _UNKNOWN **v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchPredicate();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    swift_beginAccess();
    v12 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v12)
    {
      v13 = (_QWORD *)v12;
      outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v6, type metadata accessor for Participant);
      v14 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v14);
      v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      (*(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v13) + 0x998))(v6);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      v16 = ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1);
      (*(void (**)(_QWORD *__return_ptr, uint64_t))((*v15 & *v13) + 0x3D0))(v28, v16);
      if (v28[3])
      {
        outlined init with copy of RadarReporting((uint64_t)v28, (uint64_t)v25);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, &demangling cache variable for type metadata for CallControlsService?);
        v17 = v26;
        v18 = v27;
        __swift_project_boxed_opaque_existential_1(v25, v26);
        v19 = (*(uint64_t (**)(void))((*v15 & *v13) + 0x290))();
        if (v19)
        {
          v20 = v19;
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
          *((_QWORD *)&v23 + 1) = v21;
          v24 = &protocol witness table for TUConversation;
          *(_QWORD *)&v22 = v20;
        }
        else
        {
          v24 = 0;
          v22 = 0u;
          v23 = 0u;
        }
        (*(void (**)(__int128 *, uint64_t, uint64_t))(v18 + 128))(&v22, v17, v18);

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v22, &demangling cache variable for type metadata for Conversation?);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      }
      else
      {

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, &demangling cache variable for type metadata for CallControlsService?);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #6 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;

  v3 = type metadata accessor for DispatchPredicate();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    swift_beginAccess();
    v8 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 16);
    if (v8)
    {
      v9 = v8;
      if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v8) + 0x448))())
      {
        v11 = v10;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v11 + 72))(ObjectType, v11);

        swift_unknownObjectRelease();
      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #7 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    swift_beginAccess();
    v9 = (_QWORD *)MEMORY[0x1C3B752C0](a2 + 16);
    if (v9)
    {
      v10 = v9;
      (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x9A0))(a1 & 1);

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #8 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  uint64_t v13;

  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    swift_beginAccess();
    v10 = MEMORY[0x1C3B752C0](a3 + 16);
    if (v10)
    {
      v11 = (_QWORD *)v10;
      Participant.isKickingAvailable.getter();
      (*(void (**)(uint64_t, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v11) + 0x9A8))(a1, v12 & 1);

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  _QWORD v24[3];

  v24[0] = a1;
  v5 = type metadata accessor for UUID();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v24 - v10;
  v12 = type metadata accessor for DispatchPredicate();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (_QWORD *)((char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    swift_beginAccess();
    v17 = MEMORY[0x1C3B752C0](a3 + 16);
    if (v17)
    {
      v18 = (_QWORD *)v17;
      v19 = v24[0];
      ObjectType = swift_getObjectType();
      if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 216))(ObjectType, a2) & 1) != 0
        && (v21 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 200))(ObjectType, a2),
            (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v18) + 0x278))(v21),
            v22 = static UUID.== infix(_:_:)(),
            v23 = *(void (**)(char *, uint64_t))(v6 + 8),
            v23(v9, v5),
            v23(v11, v5),
            (v22 & 1) != 0))
      {
        if ((*(unsigned int (**)(uint64_t, uint64_t))(a2 + 184))(ObjectType, a2) == 6
          && ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v18) + 0x770))() & 1) != 0)
        {
          objc_msgSend(v18, sel_dismissConfirmLeavePTTChannelAlert);
        }
        ConversationControlsManager.pttCallUpdateSubject.getter();
        v24[1] = v19;
        v24[2] = a2;
        CurrentValueSubject.send(_:)();

        swift_release();
      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void *closure #2 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()()
{
  void *v0;
  id v1;

  objc_opt_self();
  v0 = (void *)swift_dynamicCastObjCClass();
  if (v0)
  {
    swift_unknownObjectRetain();
    if (objc_msgSend(v0, sel_isPTT))
    {
      if (objc_msgSend(v0, sel_isReceivingTransmission))
        v1 = objc_msgSend(v0, sel_activeRemoteParticipant);
    }
    else
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  return v0;
}

void *specialized thunk for @escaping @callee_guaranteed (@guaranteed Call, @unowned Bool) -> (@owned (call: TUCall, activeRemoteParticipant: TUParticipant?, isIncomingTransmission: Bool)?)@<X0>(uint64_t a1@<X8>)
{
  void *result;
  uint64_t v3;
  char v4;

  result = closure #2 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return result;
}

void closure #3 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(void *a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t (*v46)(void);
  uint64_t (*v47)(void);
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint8_t *v71;
  NSObject *v72;
  uint8_t *v73;
  uint64_t (*v74)(void);
  uint64_t v75;
  void *v76;
  unint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  char v85;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PushToTalkNotice.NoticeType(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for UUID();
  v79 = *(_QWORD *)(v14 - 8);
  v80 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for PushToTalkNotice(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v20 = MEMORY[0x1C3B752C0](a4 + 16);
  if (!v20)
    return;
  v21 = (_QWORD *)v20;
  if (objc_msgSend(a1, sel_status) == 6)
  {
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v21) + 0x400))())
    {
      v23 = v22;
      ObjectType = swift_getObjectType();
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v23 + 32))(0xD00000000000001CLL, 0x80000001BD680690, 1, ObjectType, v23);

      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_33;
  }
  if (!a2)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v30 = type metadata accessor for Logger();
    __swift_project_value_buffer(v30, (uint64_t)&static Logger.conversationControls);
    v31 = Logger.logObject.getter();
    v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1BD004000, v31, v32, "Updating PushToTalk HUD because a call update was made", v33, 2u);
      MEMORY[0x1C3B751B8](v33, -1, -1);
    }

    if (!(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v21) + 0x400))())
      goto LABEL_32;
    v35 = v34;
    v36 = swift_getObjectType();
    v82 = 3;
    v83 = 0u;
    v84 = 0u;
    v85 = 6;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v35 + 16))(&v82, 1, v36, v35);
    swift_unknownObjectRelease();
    goto LABEL_27;
  }
  v76 = a1;
  v25 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v21) + 0x400);
  v78 = a2;
  v74 = v25;
  if (v25())
  {
    v27 = v26;
    v28 = swift_getObjectType();
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 72))(v28, v27);
    swift_unknownObjectRelease();
  }
  else
  {
    v29 = 0;
  }
  v37 = objc_msgSend(v78, sel_name);
  v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v77 = v38;

  if ((v29 & 1) != 0 || (a3 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v49 = type metadata accessor for Logger();
    __swift_project_value_buffer(v49, (uint64_t)&static Logger.conversationControls);
    v50 = Logger.logObject.getter();
    v51 = static os_log_type_t.default.getter();
    v52 = os_log_type_enabled(v50, v51);
    a1 = v76;
    if (v52)
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_1BD004000, v50, v51, "Skipping notice because an active participant was set but it did not contain a name or SpringBoard was locked. Posting a normal HUD update instead.", v53, 2u);
      MEMORY[0x1C3B751B8](v53, -1, -1);
    }

    if (!v74())
    {

      goto LABEL_32;
    }
    v55 = v54;
    v56 = swift_getObjectType();
    v82 = 3;
    v83 = 0u;
    v84 = 0u;
    v85 = 6;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v55 + 16))(&v82, 1, v56, v55);
    swift_unknownObjectRelease();

LABEL_27:
    outlined destroy of ConversationControlsType((uint64_t)&v82);
LABEL_32:
    specialized ConversationControlsManager.updatePTTChannelState(call:)(a1);
LABEL_33:

    return;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v39 = type metadata accessor for Logger();
  __swift_project_value_buffer(v39, (uint64_t)&static Logger.conversationControls);
  v40 = v77;
  swift_bridgeObjectRetain_n();
  v41 = Logger.logObject.getter();
  v42 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    v74 = (uint64_t (*)(void))swift_slowAlloc();
    v82 = (uint64_t)v74;
    v73 = v43;
    *(_DWORD *)v43 = 136315138;
    v71 = v43 + 4;
    swift_bridgeObjectRetain();
    v72 = v41;
    v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v75, v77, &v82);
    v40 = v77;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    v44 = v42;
    v45 = v73;
    _os_log_impl(&dword_1BD004000, v41, v44, "Posting PushToTalkNotice because the active speaker changed to %s", v73, 0xCu);
    v46 = v74;
    swift_arrayDestroy();
    v47 = v46;
    v48 = v75;
    MEMORY[0x1C3B751B8](v47, -1, -1);
    MEMORY[0x1C3B751B8](v45, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    v48 = v75;
  }
  UUID.init()();
  *v13 = v48;
  v13[1] = v40;
  v57 = objc_msgSend(v78, sel_imageURL);
  if (v57)
  {
    v58 = v57;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v59 = 0;
  }
  else
  {
    v59 = 1;
  }
  v60 = type metadata accessor for URL();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v59, 1, v60);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?));
  outlined init with take of Any?((uint64_t)v10, (uint64_t)v13 + *(int *)(v61 + 48), &demangling cache variable for type metadata for URL?);
  swift_storeEnumTagMultiPayload();
  Date.init()();
  if (one-time initialization token for shared != -1)
    swift_once();
  v62 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 984))();
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v19, v16, v80);
  outlined init with take of StagedCollaboration((uint64_t)v13, (uint64_t)&v19[v17[5]], type metadata accessor for PushToTalkNotice.NoticeType);
  v19[v17[7]] = 5;
  v63 = &v19[v17[8]];
  *(_QWORD *)v63 = 0;
  *((_QWORD *)v63 + 1) = 0;
  *(double *)&v19[v17[9]] = v62;
  v19[v17[10]] = 1;
  v64 = &v19[v17[11]];
  *(_QWORD *)v64 = 0;
  *((_QWORD *)v64 + 1) = 0;
  v65 = &v19[v17[12]];
  *(_QWORD *)v65 = 0;
  *((_QWORD *)v65 + 1) = 0;
  v19[v17[13]] = 1;
  v66 = &v19[v17[14]];
  *(_QWORD *)v66 = 0;
  *((_QWORD *)v66 + 1) = 0;
  specialized ConversationControlsManager.post(notice:)((uint64_t)v19, (uint64_t)v21, (uint64_t)type metadata accessor for PushToTalkNotice, (uint64_t)&protocol witness table for PushToTalkNotice, (uint64_t)specialized ConversationControlsNoticeCoordinator.post(notice:), v67, v68, v69, v70, (uint64_t)v71, (uint64_t)v72, (uint64_t)v73, (uint64_t)v74, v75, (uint64_t)v76, v77, (uint64_t)v78, v79, v80,
    v81,
    v82,
    v83);
  LOBYTE(v82) = 0;
  CurrentValueSubject.send(_:)();

  specialized ConversationControlsManager.updatePTTChannelState(call:)(v76);
  outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for PushToTalkNotice);
}

Swift::Void __swiftcall ConversationControlsManager.incomingTransmissionReceived()()
{
  void *v0;
  uint64_t v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v1, (uint64_t)&static Logger.conversationControls);
  v2 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v2))
  {
    v3 = (_WORD *)OUTLINED_FUNCTION_7_8();
    OUTLINED_FUNCTION_47_2(v3);
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v4, v5, "PushToTalk incoming transmission received");
    OUTLINED_FUNCTION_60();
  }

  CurrentValueSubject.send(_:)();
  OUTLINED_FUNCTION_45_0();
}

#error "1BD2871E8: call analysis failed (funcsize=135)"

uint64_t ConversationControlsManager.isIgnoredScreenSharingRequestUUID(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_33();
  v2 = OUTLINED_FUNCTION_668(v1);
  v6 = v0;
  v3 = specialized Sequence.contains(where:)((uint64_t (*)(char *))partial apply for specialized closure #1 in Sequence<>.contains(_:), (uint64_t)&v5, v2);
  OUTLINED_FUNCTION_27();
  return v3 & 1;
}

void ConversationControlsManager.isShownAboveCoverSheetWithoutPasscode.getter()
{
  char v0;

  ConversationControlsManager.isShownAboveCoverSheet.getter();
  if ((v0 & 1) != 0)
  {
    type metadata accessor for SpringBoardUtilities();
    OUTLINED_FUNCTION_61();
    static SpringBoardUtilities.checkSpringBoardState(for:)();
  }
  OUTLINED_FUNCTION_0();
}

#error "1BD287378: call analysis failed (funcsize=44)"

void closure #1 in ConversationControlsManager.scheduleDelayedLMIBanner()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  char v29;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = v2;
    v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x820))() & 1) != 0
      && (*(unsigned __int8 (**)(void))((*v4 & *v3) + 0x840))() <= 0x1Fu)
    {
      v5 = (void *)(*(uint64_t (**)(void))((*v4 & *v3) + 0x290))();
      if (v5)
      {
        v6 = v5;
        if (objc_msgSend(v5, sel_state) != (id)3
          || (v7 = objc_msgSend(v6, sel_pendingMembers),
              type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember), lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember), v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)(), v7, v9 = specialized Set.count.getter(v8), swift_bridgeObjectRelease(), v9 < 1)|| (objc_msgSend(v6, sel_ignoreLMIRequests) & 1) != 0)
        {

          return;
        }
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v10 = type metadata accessor for Logger();
        __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
        v11 = Logger.logObject.getter();
        v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc();
          v14 = swift_slowAlloc();
          *(_DWORD *)v13 = 136315138;
          v26 = v14;
          v15 = String.init<A>(reflecting:)();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v26);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v11, v12, "Showing LMI banner since the first person to join the call has been ignoring LMI requests (didn't see LMI banner or open drawer) for %s seconds since they joined", v13, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v14, -1, -1);
          MEMORY[0x1C3B751B8](v13, -1, -1);
        }

        v19 = (*(uint64_t (**)(uint64_t, uint64_t))((*v4 & *v3) + 0x430))(v17, v18);
        if (v19)
        {
          v21 = v20;
          ObjectType = swift_getObjectType();
          v26 = 2;
          v27 = 0u;
          v28 = 0u;
          v29 = 6;
          (*(void (**)(uint64_t *, uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 80))(&v26, 1, 0, ObjectType, v21);
          swift_unknownObjectRelease();
          v19 = outlined destroy of ConversationControlsType((uint64_t)&v26);
        }
        if ((*(uint64_t (**)(uint64_t))((*v4 & *v3) + 0x3E8))(v19))
        {
          v24 = v23;
          v25 = swift_getObjectType();
          v26 = 2;
          v27 = 0u;
          v28 = 0u;
          v29 = 6;
          (*(void (**)(uint64_t, uint64_t *, _QWORD, _QWORD, uint64_t, uint64_t))(v24 + 16))(1, &v26, 0, 0, v25, v24);
          swift_unknownObjectRelease();

          outlined destroy of ConversationControlsType((uint64_t)&v26);
          return;
        }

      }
    }

  }
}

void ConversationControlsManager.videoCameraOffForScreenSharingAlert.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  _QWORD v9[4];
  __int16 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  Swift::String v14;

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AD0];
  v9[0] = 0xD000000000000010;
  v9[1] = 0x80000001BD680550;
  v9[2] = 1;
  v9[3] = v0;
  v10 = 0;
  v11 = 4;
  v12 = 0;
  v13 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v9);

  swift_bridgeObjectRelease();
  if (v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v4 = objc_msgSend(v2, sel_imageWithTintColor_, v3);

  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v14._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0x6143206F65646956;
  v6._object = (void *)0xEC0000006172656DLL;
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v14);

  static NSAttributedString.localizedString(_:prefixImage:imageBounds:)();
}

void sub_1BD28795C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;

  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v0, *(SEL *)(v2 + 864));
  v5._countAndFlagsBits = v1 + 26;
  v9._object = v3;
  v5._object = (void *)0x80000001BD680570;
  v6.value._countAndFlagsBits = 0x61737265766E6F43;
  v6.value._object = (void *)0xEF74694B6E6F6974;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v9);

  NSMutableAttributedString.__allocating_init(string:)(v8);
}

uint64_t sub_1BD2879E4()
{
  void *v0;
  uint64_t v1;

  return v1;
}

void ConversationControlsManager.videoCameraOnOrOffAlert.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  _QWORD v9[4];
  __int16 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  Swift::String v14;

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = (void *)*MEMORY[0x1E0DC4AD0];
  v9[0] = 0x69662E6F65646976;
  v9[1] = 0xEA00000000006C6CLL;
  v9[2] = 1;
  v9[3] = v0;
  v10 = 0;
  v11 = 4;
  v12 = 0;
  v13 = 0;
  v1 = v0;
  v2 = static UIImage.symbolImage(for:)((uint64_t)v9);

  swift_bridgeObjectRelease();
  if (v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v4 = objc_msgSend(v2, sel_imageWithTintColor_, v3);

  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
  v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v14._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0x6143206F65646956;
  v6._object = (void *)0xEC0000006172656DLL;
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v14);

  static NSAttributedString.localizedString(_:prefixImage:imageBounds:)();
}

void sub_1BD287BE4()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;

  v4 = swift_bridgeObjectRelease();
  v5 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x610))(v4);
  v6 = objc_msgSend(v1, *(SEL *)(v3 + 864));
  if ((v5 & 0x100) != 0)
  {
    v7 = 0x4E4F5F4F45444956;
    v8 = 0xE800000000000000;
  }
  else
  {
    v7 = 0x464F5F4F45444956;
    v8 = 0xE900000000000046;
  }
  v9.value._countAndFlagsBits = 0x61737265766E6F43;
  v9.value._object = (void *)0xEF74694B6E6F6974;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, v9, (NSBundle)v6, v10, v13);

  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0;
  v12._object = v2;
  NSMutableAttributedString.__allocating_init(string:)(v12);
}

uint64_t sub_1BD287CD0()
{
  void *v0;
  uint64_t v1;

  return v1;
}

void ConversationControlsManager.dismissReactionNotice()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD v23[3];
  uint64_t v24;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator);
  LOBYTE(v23[0]) = 0;
  ConversationControlsNoticeCoordinator.flushNotices(priority:)((ConversationKit::NoticePriority)v23);
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x88))(v23);
  if (v24)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
    v7 = type metadata accessor for ReactionNotice(0);
    v8 = swift_dynamicCast();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, v8 ^ 1u, 1, v7);
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v7) != 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
      ConversationControlsNoticeCoordinator.dismissAndGetNextNotice(dismissContext:)();
      v9 = v24;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for Notice?);
      if (!v9)
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v10 = type metadata accessor for Logger();
        __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
        v11 = Logger.logObject.getter();
        v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v13 = 0;
          _os_log_impl(&dword_1BD004000, v11, v12, "No more notices, dismissing banner", v13, 2u);
          MEMORY[0x1C3B751B8](v13, -1, -1);
        }

        if ((*(uint64_t (**)(void))((*v6 & *v1) + 0x400))())
        {
          v15 = v14;
          ObjectType = swift_getObjectType();
          (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v15 + 32))(0xD000000000000025, 0x80000001BD6804A0, 1, ObjectType, v15);
          swift_unknownObjectRelease();
        }
      }
      return;
    }
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    v17 = type metadata accessor for ReactionNotice(0);
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v17);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ReactionNotice?);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationControls);
  v19 = Logger.logObject.getter();
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1BD004000, v19, v20, "[dismissReactionNotice] Not showing reaction notice, ignoring", v21, 2u);
    MEMORY[0x1C3B751B8](v21, -1, -1);
  }

}

void ConversationControlsManager.postReactionNotice()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = swift_beginAccess();
  specialized NoticeQueueStore.peek()(&v6, v2);
  swift_endAccess();
  if (v7)
  {
    outlined init with take of Notice(&v6, (uint64_t)v8);
    v3 = v9;
    v4 = v10;
    v5 = __swift_project_boxed_opaque_existential_1(v8, v9);
    specialized ConversationControlsManager.post(notice:)((uint64_t)v5, v1, v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v6, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  }
}

uint64_t ScreenSharingControlStateManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t ScreenSharingControlStateManager.__deallocating_deinit()
{
  ScreenSharingControlStateManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t ScreenSharingControlStateManager.init()()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<ShareMenuActionState, Never>);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = CurrentValueSubject.init(_:)();
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 208))();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = CurrentValueSubject.init(_:)();
  return v0;
}

Swift::Void __swiftcall ConversationControlsManager.joinConversation(from:)(UIControl *from)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_39_6();
  if (OUTLINED_FUNCTION_547(v3) == 96)
  {
    OUTLINED_FUNCTION_39_6();
    v5 = (*(uint64_t (**)(void))(v4 + 752))();
    OUTLINED_FUNCTION_503(v5);
    OUTLINED_FUNCTION_43();
    objc_msgSend(v2, sel_joinButtonTappedWithButton_, v1);
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

uint64_t protocol witness for ConversationControlsCountdownJoinButtonDelegate.invalidateDismissTimer() in conformance ConversationControlsManager()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA08))();
}

uint64_t protocol witness for ConversationControlsCountdownJoinButtonDelegate.scheduleDismissTimer() in conformance ConversationControlsManager()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA00))();
}

void ConduitApprovalDelegate.init(_:)()
{
  void *v0;
  objc_class *v1;
  objc_super v2;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_448();
  v2.receiver = v0;
  v2.super_class = v1;
  objc_msgSendSuper2(&v2, sel_init);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_45_0();
}

void ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v21;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_11_2();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v12, (uint64_t)&static Logger.conversationControls);
  v13 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_11(v13))
  {
    v14 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v14 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "Split session approval requested", v14);
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_59(v15, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v16 = (void *)OUTLINED_FUNCTION_7_22();
  v17 = MEMORY[0x1C3B752C0]((char *)v0 + OBJC_IVAR____TtC15ConversationKit23ConduitApprovalDelegate_manager);
  v18 = (_QWORD *)OUTLINED_FUNCTION_15();
  v18[2] = v17;
  v18[3] = v7;
  v18[4] = v9;
  v18[5] = v5;
  v18[6] = v3;
  v19 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v20 = v9;
  swift_retain();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v21 = OUTLINED_FUNCTION_673();
  MEMORY[0x1C3B7361C](v21);
  _Block_release(v19);

  OUTLINED_FUNCTION_63_19();
  OUTLINED_FUNCTION_268_0();
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *updated;
  uint64_t v15;
  _BOOL8 *v16;
  _QWORD *v17;
  uint64_t (*v18)(void);
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void (**v28)();
  void (**v29)();
  _QWORD *v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;

  v10 = type metadata accessor for UUID();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = (int *)type metadata accessor for SystemUpdateNotice(0);
  MEMORY[0x1E0C80A78](updated);
  v16 = (_BOOL8 *)((char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v33 = v11;
    v34 = v10;
    if (a2 == 1)
    {
      v17 = a1;
      v32 = 0;
    }
    else
    {
      v18 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x8D0);
      v19 = a1;
      v20 = (void *)v18();

      v32 = v20 != 0;
    }
    v21 = outlined bridged method (pb) of @objc TUNearbyDeviceHandle.name.getter(a3);
    if (v22)
      v23 = v21;
    else
      v23 = 0x206E776F6E6B6E55;
    if (v22)
      v24 = v22;
    else
      v24 = 0xEE00656369766544;
    v36 = 0;
    memset(v35, 0, sizeof(v35));
    UUID.init()();
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = a4;
    *(_QWORD *)(v25 + 24) = a5;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = a4;
    *(_QWORD *)(v26 + 24) = a5;
    swift_retain_n();
    Date.init()();
    *v16 = v32;
    v16[1] = v23;
    v16[2] = v24;
    outlined init with take of Any?((uint64_t)v35, (uint64_t)(v16 + 3), &demangling cache variable for type metadata for Activity?);
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v16 + updated[6], v13, v34);
    *((_BYTE *)v16 + updated[8]) = 1;
    v27 = (_BOOL8 *)((char *)v16 + updated[9]);
    *v27 = 0;
    v27[1] = 0;
    *((_BYTE *)v16 + updated[10]) = 0;
    v28 = (void (**)())((char *)v16 + updated[11]);
    *v28 = partial apply for closure #1 in closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:);
    v28[1] = (void (*)())v25;
    v29 = (void (**)())((char *)v16 + updated[12]);
    *v29 = partial apply for closure #2 in closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:);
    v29[1] = (void (*)())v26;
    *((_BYTE *)v16 + updated[13]) = 2;
    v30 = (_BOOL8 *)((char *)v16 + updated[14]);
    *v30 = 0;
    v30[1] = 0;
    specialized ConversationControlsNoticeCoordinator.post(notice:)();
    outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for SystemUpdateNotice);

  }
}

void thunk for @escaping @callee_unowned @convention(block) (@unowned ObjCBool, @unowned NSError?) -> ()(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

Swift::Void __swiftcall ConduitApprovalDelegate.cancelSplitSessionApproval()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v5, (uint64_t)&static Logger.conversationControls);
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_41_3(v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v7 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, v1, "Split session approval cancelled", v7);
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v9 = (void *)OUTLINED_FUNCTION_7_22();
  v10 = MEMORY[0x1C3B752C0]((char *)v0 + OBJC_IVAR____TtC15ConversationKit23ConduitApprovalDelegate_manager);
  *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v10;
  v11 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  swift_release();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_229_1();
  v12 = OUTLINED_FUNCTION_338();
  MEMORY[0x1C3B7361C](v12);
  _Block_release(v11);

  OUTLINED_FUNCTION_63_19();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConduitApprovalDelegate.cancelSplitSessionApproval()(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t updated;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  void (*v10)(_QWORD *__return_ptr);
  char *v11;
  _QWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  _QWORD v27[3];
  uint64_t v28;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SystemUpdateNotice?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for SystemUpdateNotice(0);
  MEMORY[0x1E0C80A78](updated);
  v7 = (char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_9;
  v8 = *(_QWORD **)&a1[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator];
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = *(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v8) + 0x88);
  v11 = a1;
  v12 = v8;
  v10(v27);

  if (!v28)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, updated);
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice);
  v13 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, v13 ^ 1u, 1, updated);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, updated) == 1)
  {
LABEL_8:

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for SystemUpdateNotice?);
LABEL_9:
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)&static Logger.conversationControls);
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1BD004000, v16, v17, "[cancelSplitSessionApproval] Not showing approval notice, ignoring", v18, 2u);
      MEMORY[0x1C3B751B8](v18, -1, -1);
    }

    return;
  }
  outlined init with take of StagedCollaboration((uint64_t)v4, (uint64_t)v7, type metadata accessor for SystemUpdateNotice);
  if (!*((_QWORD *)v7 + 2))
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for SystemUpdateNotice);

    goto LABEL_9;
  }
  v14 = v12;
  ConversationControlsNoticeCoordinator.dismissAndGetNextNotice(dismissContext:)();

  if (v28)
  {

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for Notice?);
LABEL_21:
    outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for SystemUpdateNotice);
    return;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for Notice?);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)&static Logger.conversationControls);
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1BD004000, v20, v21, "No more notices, dismissing banner", v22, 2u);
    MEMORY[0x1C3B751B8](v22, -1, -1);
  }

  if ((*(uint64_t (**)(void))((*v9 & *(_QWORD *)v11) + 0x400))())
  {
    v24 = v23;
    ObjectType = swift_getObjectType();
    (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v24 + 32))(0xD000000000000025, 0x80000001BD6804A0, 1, ObjectType, v24);

    swift_unknownObjectRelease();
    goto LABEL_21;
  }
  outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for SystemUpdateNotice);

}

void ConduitApprovalDelegate.init()()
{
  OUTLINED_FUNCTION_300();
  __break(1u);
}

uint64_t ConduitLagunaNoticeManager.PushBannerInfo.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_33_0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

id ConduitLagunaNoticeManager.PushBannerInfo.suggestion.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + *(int *)(type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0) + 20)));
}

uint64_t ConduitLagunaNoticeManager.PushBannerInfo.isSystemBanner.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0) + 24));
}

void ConduitLagunaNoticeManager.PushBannerInfo.isSystemBanner.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0) + 24)) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ConduitLagunaNoticeManager.PushBannerInfo.isSystemBanner.modify())(_QWORD)
{
  type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConduitLagunaNoticeManager.PushBannerInfo.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = v0;
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_0();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  OUTLINED_FUNCTION_2_1();
  v3._countAndFlagsBits = 0x7473656767757320;
  v3._object = (void *)0xEC0000003A6E6F69;
  String.append(_:)(v3);
  v4 = OUTLINED_FUNCTION_672();
  v5 = objc_msgSend(*(id *)(v0 + *(int *)(v4 + 20)), sel_description);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v6._countAndFlagsBits = OUTLINED_FUNCTION_318();
  String.append(_:)(v6);
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_61();
  v7._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v7);
  if (*(_BYTE *)(v1 + *(int *)(v4 + 24)))
    v8 = 1702195828;
  else
    v8 = 0x65736C6166;
  if (*(_BYTE *)(v1 + *(int *)(v4 + 24)))
    v9 = 0xE400000000000000;
  else
    v9 = 0xE500000000000000;
  v10 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  OUTLINED_FUNCTION_13_3();
  return 0x696669746E656469;
}

uint64_t default argument 2 of ConduitLagunaNoticeManager.PushBannerInfo.init(identifier:suggestion:isSystemBanner:)()
{
  return 0;
}

void ConduitLagunaNoticeManager.PushBannerInfo.init(identifier:suggestion:isSystemBanner:)(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  v7 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  *(_QWORD *)(a3 + *(int *)(v7 + 20)) = a1;
  *(_BYTE *)(a3 + *(int *)(v7 + 24)) = a2;
  OUTLINED_FUNCTION_18();
}

void ConduitLagunaNoticeManager.pushBannerInfo.getter()
{
  ConduitLagunaNoticeManager.pushBannerInfo.getter(&OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo, (uint64_t)&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?, (void (*)(uint64_t))outlined init with copy of FeatureEligibility?);
}

void key path getter for ConduitLagunaNoticeManager.pushBannerInfo : ConduitLagunaNoticeManager(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v3, a2, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
}

void key path setter for ConduitLagunaNoticeManager.pushBannerInfo : ConduitLagunaNoticeManager(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  MEMORY[0x1E0C80A78](v2);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)&v4 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  ConduitLagunaNoticeManager.pushBannerInfo.setter();
}

void ConduitLagunaNoticeManager.pushBannerInfo.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_65_2();
  outlined assign with copy of ConduitLagunaNoticeManager.PushBannerInfo?(v0, v1);
  OUTLINED_FUNCTION_25_29();
  ConduitLagunaNoticeManager.pushBannerInfo.didset();
  OUTLINED_FUNCTION_96_3(v2, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  OUTLINED_FUNCTION_9_0();
}

void ConduitLagunaNoticeManager.pushBannerInfo.didset()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;

  v1 = (_QWORD *)MEMORY[0x1C3B752C0](v0 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager);
  if (v1)
  {
    v2 = v1;
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x960))();

  }
}

char *ConduitLagunaNoticeManager.init(_:queue:callCenter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  v6 = (objc_class *)OUTLINED_FUNCTION_15_6();
  swift_unknownObjectWeakInit();
  v7 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo];
  v8 = OUTLINED_FUNCTION_672();
  OUTLINED_FUNCTION_77_0(v7, v9, v10, v8);
  OUTLINED_FUNCTION_448();
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_queue] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_callCenter] = a3;
  v12.receiver = v3;
  v12.super_class = v6;
  objc_msgSendSuper2(&v12, sel_init);
  OUTLINED_FUNCTION_49_5();
  return v3;
}

void ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:splitSessionStarted:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_11_2();
  v3 = ConduitLagunaNoticeManager.updateState()();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_7_22();
  v4 = MEMORY[0x1C3B752C0](v0 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager);
  *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v4;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  swift_release();
  OUTLINED_FUNCTION_269();
  OUTLINED_FUNCTION_585(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_429();
}

void sub_1BD2895D4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  const void *v21;
  uint64_t v22;

  _Block_release(v21);

  OUTLINED_FUNCTION_63_19();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConduitLagunaNoticeManager.updateState()()
{
  void *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v15 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v9 = (void *)static OS_dispatch_queue.main.getter();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = partial apply for closure #1 in ConduitLagunaNoticeManager.updateState();
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_319;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void closure #1 in ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:splitSessionStarted:)(_QWORD *a1)
{
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;

  if (a1)
  {
    v1 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x400);
    v5 = a1;
    if (v1())
    {
      v3 = v2;
      ObjectType = swift_getObjectType();
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(0xD000000000000016, 0x80000001BD680460, 1, ObjectType, v3);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void sub_1BD289900()
{
  void *v0;
  void *v1;
  void *v2;

}

void ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:suggestionUpdated:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  v19 = *(_QWORD *)(OUTLINED_FUNCTION_20_3() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_58_5();
  v7 = type metadata accessor for DispatchTime();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_79();
  v11 = v9 - v10;
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_138_0();
  OUTLINED_FUNCTION_59(v13, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v14 = (void *)OUTLINED_FUNCTION_7_22();
  static DispatchTime.now()();
  MEMORY[0x1C3B72C50](v11, 1.0);
  v18 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v18(v11, v7);
  *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v0;
  v15 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v16 = v0;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B735B0](v4, v3, v1, v15);
  _Block_release(v15);

  OUTLINED_FUNCTION_63_19();
  OUTLINED_FUNCTION_96_1(v19);
  v17 = OUTLINED_FUNCTION_202_0();
  ((void (*)(uint64_t))v18)(v17);
  OUTLINED_FUNCTION_52_1();
}

void ConduitLagunaNoticeManager.conversationManager(_:stateChangedFor:fromOldConversation:)()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_330();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_7_22();
  v9 = MEMORY[0x1C3B752C0](&v0[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager]);
  v10 = (_QWORD *)OUTLINED_FUNCTION_15();
  v10[2] = v9;
  v10[3] = v5;
  v10[4] = v3;
  v10[5] = v1;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v11 = v5;
  v12 = v3;
  v13 = v1;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_229_1();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_429();
}

void sub_1BD289D28(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  const void *v21;

  _Block_release(v21);

  OUTLINED_FUNCTION_63_19();
  OUTLINED_FUNCTION_268_0();
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConduitLagunaNoticeManager.conversationManager(_:stateChangedFor:fromOldConversation:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  void *v33;
  int v34;
  void *v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  id v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;

  v40 = a3;
  v7 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v41 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v39 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v39 - v20;
  if (a1)
  {
    v43 = v8;
    v39 = a4;
    v22 = a1;
    v44 = a2;
    v23 = objc_msgSend(a2, sel_UUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v24 = 1;
    v25 = __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v7);
    v26 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v22) + 0x290);
    v42 = v22;
    v27 = (void *)v26(v25);
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v27, sel_UUID);

      static UUID._unconditionallyBridgeFromObjectiveC(_:)();
      v24 = 0;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v19, v24, 1, v7);
    v30 = (uint64_t)&v12[*(int *)(v10 + 48)];
    outlined init with copy of FeatureEligibility?((uint64_t)v21, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of FeatureEligibility?((uint64_t)v19, v30, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v7);
    v32 = v43;
    v33 = v44;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v34 = __swift_getEnumTagSinglePayload(v30, 1, v7);
      v35 = v42;
      if (v34 == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        goto LABEL_11;
      }
    }
    else
    {
      outlined init with copy of FeatureEligibility?((uint64_t)v12, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v30, 1, v7) != 1)
      {
        v36 = v41;
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v41, v30, v7);
        lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
        v37 = dispatch thunk of static Equatable.== infix(_:_:)();
        v38 = *(void (**)(char *, uint64_t))(v32 + 8);
        v38(v36, v7);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v38(v16, v7);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v35 = v42;
        if ((v37 & 1) != 0)
        {
LABEL_11:
          if (objc_msgSend(v33, sel_state) == (id)4 && objc_msgSend(v40, sel_state) != (id)4)
            ConduitLagunaNoticeManager.updateState()();
        }
LABEL_14:

        return;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v7);
      v35 = v42;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_14;
  }
}

void sub_1BD28A180()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

}

void ConduitLagunaNoticeManager.conversationManager(_:remoteMembersChangedFor:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  OUTLINED_FUNCTION_7_22();
  v6 = MEMORY[0x1C3B752C0](v0 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager);
  v7 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v2;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v8 = v2;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  OUTLINED_FUNCTION_585(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_228_0();
  OUTLINED_FUNCTION_673();
  OUTLINED_FUNCTION_429();
}

void sub_1BD28A2F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  const void *v21;
  uint64_t v22;

  _Block_release(v21);

  OUTLINED_FUNCTION_63_19();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConduitLagunaNoticeManager.conversationManager(_:remoteMembersChangedFor:)(_QWORD *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  _QWORD *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void (*v17)(_BYTE *, uint64_t);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  uint64_t (**v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  _QWORD *v27;
  _BYTE v28[56];

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v28[-v9 - 8];
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 600))() & 1) != 0 && a1)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v12 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290);
    v27 = a1;
    v13 = v12();
    if (v13)
    {
      v14 = (void *)v13;
      v15 = objc_msgSend(a2, sel_UUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v16 = objc_msgSend(v14, sel_UUID);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v16) = static UUID.== infix(_:_:)();
      v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
      if ((v16 & 1) != 0 && objc_msgSend(a2, sel_isContinuitySession))
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v18 = type metadata accessor for Logger();
        __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationControls);
        v19 = Logger.logObject.getter();
        v20 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v21 = 0;
          _os_log_impl(&dword_1BD004000, v19, v20, "Updating presentation banner for laguna pull back banner", v21, 2u);
          MEMORY[0x1C3B751B8](v21, -1, -1);
        }

        v22 = (void *)(*(uint64_t (**)(void))((*v11 & *v27) + 0x270))();
        ConversationControlsManager.controlsHUDUpdate(for:)(v22, v23);
        swift_unknownObjectRelease();
        if ((*(uint64_t (**)(void))((*v11 & *v27) + 0x400))())
        {
          v25 = v24;
          ObjectType = swift_getObjectType();
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v25 + 16))(v28, v28[41], ObjectType, v25);
          swift_unknownObjectRelease();

          outlined destroy of ControlsHUDUpdate((uint64_t)v28);
        }
        else
        {
          outlined destroy of ControlsHUDUpdate((uint64_t)v28);

        }
      }
      else
      {

      }
    }
    else
    {

    }
  }
}

void sub_1BD28A684()
{
  void *v0;
  void *v1;
  void *v2;

}

void ConduitLagunaNoticeManager.teardownBanner()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  void *v28;
  void (*v29)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  id v30;
  uint64_t v31;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v31 - v6;
  v8 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_5;
  }
  v16 = v1 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v16, (uint64_t)v7, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
    return;
  }
  outlined init with take of StagedCollaboration((uint64_t)v7, (uint64_t)v10, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_12;
LABEL_5:
  v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationControls);
  v18 = Logger.logObject.getter();
  v19 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1BD004000, v18, v19, "teardownBanner", v20, 2u);
    MEMORY[0x1C3B751B8](v20, -1, -1);
  }

  v21 = (_QWORD *)MEMORY[0x1C3B752C0](v1 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager);
  if (v21)
  {
    v22 = v21;
    v23 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v21) + 0x3E8))();
    v25 = v24;

    if (v23)
    {
      ObjectType = swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationControlsType>);
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1BD6441D0;
      v28 = *(void **)&v10[*(int *)(v8 + 20)];
      *(_QWORD *)(v27 + 32) = v28;
      *(_BYTE *)(v27 + 72) = 2;
      v29 = *(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v25 + 32);
      v30 = v28;
      v29(v27, 0x6E776F6472616574, 0xEE0072656E6E6142, 1, ObjectType, v25);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v8);
  ConduitLagunaNoticeManager.pushBannerInfo.setter();
  outlined destroy of AccountUpdateNotice((uint64_t)v10, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
}

void ConduitLagunaNoticeManager.presentBanner(for:)(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  char v23;
  char *v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint8_t *v36;
  NSObject *v37;
  _QWORD *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(_QWORD, _QWORD *, uint64_t (*)(int, void *), uint64_t, _QWORD *, uint64_t);
  NSObject *v57;
  char *v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[5];
  char v66;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  v62 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v63 = v9;
  v64 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t)&v59 - v10;
  v12 = type metadata accessor for DispatchPredicate();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_24:
    swift_once();
    goto LABEL_11;
  }
  v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager);
  v17 = (_QWORD *)MEMORY[0x1C3B752C0](v2 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager);
  v13 = MEMORY[0x1E0DEEDD8];
  if (v17
    && (v18 = v17,
        v19 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v17) + 0x430))(),
        v21 = v20,
        v18,
        v19))
  {
    ObjectType = swift_getObjectType();
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 72))(ObjectType, v21);
    swift_unknownObjectRelease();
  }
  else
  {
    v23 = 1;
  }
  UUID.init()();
  v24 = (char *)*(int *)(v7 + 20);
  *(_QWORD *)&v24[v11] = a1;
  *(_BYTE *)(v11 + *(int *)(v7 + 24)) = v23 & 1;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v11, (uint64_t)v6, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  a1 = a1;
  ConduitLagunaNoticeManager.pushBannerInfo.setter();
  if ((v23 & 1) == 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v39 = type metadata accessor for Logger();
    __swift_project_value_buffer(v39, (uint64_t)&static Logger.conversationControls);
    v40 = Logger.logObject.getter();
    v41 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_1BD004000, v40, v41, "presentBanner - HUD controls cannot be dismissed so skipping banner presentation", v42, 2u);
      MEMORY[0x1C3B751B8](v42, -1, -1);
    }

    goto LABEL_22;
  }
  v60 = v24;
  v25 = (_QWORD *)MEMORY[0x1C3B752C0](v15);
  if (v25)
  {
    v26 = v25;
    v27 = (*(uint64_t (**)(void))((*(_QWORD *)v13 & *v25) + 0x430))();
    v29 = v28;

    if (v27)
    {
      v30 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v29 + 88))(v30, v29);
      swift_unknownObjectRelease();
    }
  }
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_24;
LABEL_11:
  v31 = type metadata accessor for Logger();
  __swift_project_value_buffer(v31, (uint64_t)&static Logger.conversationControls);
  v32 = a1;
  v33 = Logger.logObject.getter();
  v34 = static os_log_type_t.default.getter();
  v35 = os_log_type_enabled(v33, v34);
  v61 = v2;
  if (v35)
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v59 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v36 = 138412290;
    v65[0] = v32;
    v37 = v32;
    v13 = MEMORY[0x1E0DEEDD8];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v38 = v59;
    *v59 = v32;

    _os_log_impl(&dword_1BD004000, v33, v34, "presentBanner - presenting suggestion banner for suggestion: %@", v36, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v38, -1, -1);
    MEMORY[0x1C3B751B8](v36, -1, -1);
  }
  else
  {

    v33 = v32;
  }

  v43 = (_QWORD *)MEMORY[0x1C3B752C0](v15);
  if (v43)
  {
    v44 = v43;
    v45 = (*(uint64_t (**)(void))((*(_QWORD *)v13 & *v43) + 0x3E8))();
    v47 = v46;

    if (v45)
    {
      v48 = swift_getObjectType();
      v49 = *(char **)&v60[v11];
      v59 = (_QWORD *)v48;
      v60 = v49;
      v65[0] = v49;
      v66 = 2;
      v50 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v51 = v64;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v11, v64, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
      v52 = v32;
      v53 = (*(unsigned __int8 *)(v62 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      v54 = (v63 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
      v55 = swift_allocObject();
      outlined init with take of StagedCollaboration(v51, v55 + v53, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
      *(_QWORD *)(v55 + v54) = v52;
      *(_QWORD *)(v55 + ((v54 + 15) & 0xFFFFFFFFFFFFFFF8)) = v50;
      v56 = *(void (**)(_QWORD, _QWORD *, uint64_t (*)(int, void *), uint64_t, _QWORD *, uint64_t))(v47 + 16);
      v57 = v52;
      v58 = v60;
      swift_retain();
      v56(0, v65, partial apply for closure #1 in ConduitLagunaNoticeManager.presentBanner(for:), v55, v59, v47);
      swift_unknownObjectRelease();
      swift_release();
      outlined destroy of ConversationControlsType((uint64_t)v65);
      outlined destroy of AccountUpdateNotice(v11, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
      swift_release();
      return;
    }
  }
LABEL_22:
  outlined destroy of AccountUpdateNotice(v11, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
}

uint64_t closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)(int a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v31 = a5;
  v29 = a4;
  v30 = a1;
  v7 = type metadata accessor for DispatchWorkItemFlags();
  v34 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v28 = static OS_dispatch_queue.main.getter();
  outlined init with copy of ConversationControlsAppLaunchButtonType(a3, (uint64_t)v16, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a2;
  outlined init with take of StagedCollaboration((uint64_t)v16, v19 + v17, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
  v20 = v29;
  *(_QWORD *)(v19 + v18) = v29;
  v21 = v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v21 = v31;
  *(_BYTE *)(v21 + 8) = v30;
  aBlock[4] = partial apply for closure #1 in closure #1 in ConduitLagunaNoticeManager.presentBanner(for:);
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_331;
  v22 = _Block_copy(aBlock);
  v23 = a2;
  v24 = v20;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v25 = (void *)v28;
  MEMORY[0x1C3B7361C](0, v12, v9, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v33);
}

void closure #1 in closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)(void *a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  os_log_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  id v46;
  uint64_t v47;
  id v48;
  os_log_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char v55;
  _QWORD *v56;
  os_log_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  id v65[3];

  v61 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v56 - v13;
  v15 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v56 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v56 - v22;
  v62 = a4 + 16;
  v63 = v14;
  if (a1)
  {
    v24 = a1;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)&static Logger.conversationControls);
    outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v23, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
    v26 = a1;
    v27 = a1;
    v28 = Logger.logObject.getter();
    v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v57 = v28;
      v31 = v30;
      v32 = swift_slowAlloc();
      v60 = v12;
      v56 = (_QWORD *)v32;
      v58 = swift_slowAlloc();
      v65[0] = (id)v58;
      *(_DWORD *)v31 = 136315394;
      v33 = ConduitLagunaNoticeManager.PushBannerInfo.description.getter();
      v64 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, (uint64_t *)v65);
      v59 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice((uint64_t)v23, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
      *(_WORD *)(v31 + 12) = 2112;
      v35 = a1;
      v36 = _swift_stdlib_bridgeErrorToNSError();
      v64 = v36;
      v18 = v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v37 = v56;
      *v56 = v36;

      v38 = v57;
      _os_log_impl(&dword_1BD004000, v57, v29, "presentBanner - failed to present banner for %s with reason %@", (uint8_t *)v31, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      v39 = v37;
      v12 = v60;
      MEMORY[0x1C3B751B8](v39, -1, -1);
      v40 = v58;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v40, -1, -1);
      MEMORY[0x1C3B751B8](v31, -1, -1);

    }
    else
    {

      outlined destroy of AccountUpdateNotice((uint64_t)v23, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
    }
  }
  else
  {
    v58 = a2;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v41 = type metadata accessor for Logger();
    __swift_project_value_buffer(v41, (uint64_t)&static Logger.conversationControls);
    v42 = a3;
    v43 = Logger.logObject.getter();
    v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v60 = v12;
      v45 = (uint8_t *)swift_slowAlloc();
      v57 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)v45 = 138412290;
      v65[0] = v42;
      v46 = v42;
      v59 = v18;
      v47 = v15;
      v48 = v46;
      v12 = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v49 = v57;
      v57->isa = (Class)v42;

      v15 = v47;
      v18 = v59;
      _os_log_impl(&dword_1BD004000, v43, v44, "presentBanner - presented suggestion banner for suggestion: %@", v45, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v49, -1, -1);
      MEMORY[0x1C3B751B8](v45, -1, -1);

    }
    else
    {

    }
    a2 = v58;
  }
  v50 = v62;
  v51 = (uint64_t)v63;
  swift_beginAccess();
  v52 = MEMORY[0x1C3B752C0](v50);
  if (v52)
  {
    v53 = (void *)v52;
    v54 = v52 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo;
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v54, v51, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
    if (__swift_getEnumTagSinglePayload(v51, 1, v15) == 1)
    {

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v51, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
      return;
    }
    outlined init with take of StagedCollaboration(v51, (uint64_t)v21, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
    outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v18, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
    if ((v61 & 1) != 0)
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v18, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
    }
    else
    {
      v55 = static UUID.== infix(_:_:)();
      outlined destroy of AccountUpdateNotice((uint64_t)v18, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
      if ((v55 & 1) != 0)
      {
        v21[*(int *)(v15 + 24)] = 0;
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v21, (uint64_t)v12, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v15);
        ConduitLagunaNoticeManager.pushBannerInfo.setter();

        outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
        return;
      }
    }
    outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);

  }
}

void closure #1 in ConduitLagunaNoticeManager.updateState()(char *a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  const char *v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  char *v16;
  id v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  void *v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  void *v53;
  id v54;
  unsigned __int8 v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  void *v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  os_log_type_t v70;
  uint8_t *v71;
  id v72;
  id v73;
  uint64_t v74[3];

  v2 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_callCenter];
  v3 = objc_msgSend(v2, sel_neighborhoodActivityConduit);
  v4 = objc_msgSend(v3, sel_activeSplitSessionTV);

  if (v4)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v6, v7))
      goto LABEL_19;
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = "updateState - called but in split session, so tearing down any banners";
LABEL_18:
    _os_log_impl(&dword_1BD004000, v6, v7, v9, v8, 2u);
    MEMORY[0x1C3B751B8](v8, -1, -1);
LABEL_19:

    ConduitLagunaNoticeManager.teardownBanner()();
    return;
  }
  v10 = (_QWORD *)MEMORY[0x1C3B752C0](&a1[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_manager]);
  if (!v10
    || (v11 = v10, v72 = (id)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x290))(), v11, !v72))
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v29 = type metadata accessor for Logger();
    __swift_project_value_buffer(v29, (uint64_t)&static Logger.conversationControls);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v6, v7))
      goto LABEL_19;
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = "updateState - called but no conversation, _head scratch_";
    goto LABEL_18;
  }
  if (objc_msgSend(v72, sel_state) == (id)3)
  {
    v12 = objc_msgSend(v2, sel_neighborhoodActivityConduit);
    v13 = objc_msgSend(v12, sel_suggestion);

    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationControls);
    v15 = v13;
    v16 = a1;
    v17 = v15;
    v18 = v16;
    v19 = Logger.logObject.getter();
    v20 = static os_log_type_t.default.getter();
    v21 = (_QWORD *)&unk_1EF4FC000;
    if (os_log_type_enabled(v19, v20))
    {
      v22 = 7104878;
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v74[0] = v24;
      *(_DWORD *)v23 = 136315394;
      if (v17)
      {
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestion);
        v25 = v17;
        v26 = String.init<A>(reflecting:)();
        v28 = v27;
      }
      else
      {
        v28 = 0xE300000000000000;
        v26 = 7104878;
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v28, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v38 = (uint64_t)&v18[OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo];
      swift_beginAccess();
      v39 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
      if (__swift_getEnumTagSinglePayload(v38, 1, v39))
      {
        v40 = 0xE300000000000000;
      }
      else
      {
        v73 = *(id *)(v38 + *(int *)(v39 + 20));
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestion);
        v41 = v73;
        v22 = String.init<A>(reflecting:)();
        v40 = v42;
      }
      v73 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v40, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v19, v20, "updateState - Suggestion: %s \n currentDeviceNotice: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v24, -1, -1);
      MEMORY[0x1C3B751B8](v23, -1, -1);

      v21 = &unk_1EF4FC000;
    }
    else
    {

    }
    v43 = (uint64_t)&v18[v21[436]];
    swift_beginAccess();
    v44 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
    if (__swift_getEnumTagSinglePayload(v43, 1, v44))
    {
      if (v17)
      {
        v45 = v17;
        v46 = Logger.logObject.getter();
        v47 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = (uint8_t *)swift_slowAlloc();
          v49 = (void *)swift_slowAlloc();
          v73 = v49;
          *(_DWORD *)v48 = 136315138;
          type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestion);
          v50 = v45;
          v51 = String.init<A>(reflecting:)();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v51, v52, (uint64_t *)&v73);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v46, v47, "updateState - Present banner for: %s", v48, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v49, -1, -1);
          MEMORY[0x1C3B751B8](v48, -1, -1);

        }
        else
        {

        }
        ConduitLagunaNoticeManager.presentBanner(for:)(v45);
        goto LABEL_61;
      }
      v59 = Logger.logObject.getter();
      v60 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v61 = 0;
        _os_log_impl(&dword_1BD004000, v59, v60, "updateState - Suggestion is still nil.", v61, 2u);
        MEMORY[0x1C3B751B8](v61, -1, -1);
      }

LABEL_58:
      return;
    }
    v53 = *(void **)(v43 + *(int *)(v44 + 20));
    if (!v17)
    {
      v62 = v53;
      v63 = Logger.logObject.getter();
      v64 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = (uint8_t *)swift_slowAlloc();
        v66 = (void *)swift_slowAlloc();
        v73 = v66;
        *(_DWORD *)v65 = 136315138;
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestion);
        v67 = v62;
        v68 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v69, (uint64_t *)&v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v63, v64, "updateState - Teardown banner for: %s", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v66, -1, -1);
        MEMORY[0x1C3B751B8](v65, -1, -1);

      }
      else
      {

      }
      ConduitLagunaNoticeManager.teardownBanner()();

      goto LABEL_58;
    }
    v45 = v17;
    v54 = v53;
    v55 = objc_msgSend(v54, sel_isEqual_, v45);
    v56 = Logger.logObject.getter();
    if ((v55 & 1) != 0)
    {
      v57 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v56, v57))
      {
        v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v58 = 0;
        _os_log_impl(&dword_1BD004000, v56, v57, "updateState - suggestion unchanged", v58, 2u);
        MEMORY[0x1C3B751B8](v58, -1, -1);

        goto LABEL_58;
      }

    }
    else
    {
      v70 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v56, v70))
      {
        v71 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v71 = 0;
        _os_log_impl(&dword_1BD004000, v56, v70, "updateState - new suggestion, update banner", v71, 2u);
        MEMORY[0x1C3B751B8](v71, -1, -1);
      }

      ConduitLagunaNoticeManager.presentBanner(for:)(v45);
    }

LABEL_61:
    return;
  }
  if (objc_msgSend(v72, sel_state) == (id)4)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v30 = type metadata accessor for Logger();
    __swift_project_value_buffer(v30, (uint64_t)&static Logger.conversationControls);
    v31 = Logger.logObject.getter();
    v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1BD004000, v31, v32, "updateState - called but in leaving conversation, so tearing down", v33, 2u);
      MEMORY[0x1C3B751B8](v33, -1, -1);
    }

    ConduitLagunaNoticeManager.teardownBanner()();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v34 = type metadata accessor for Logger();
    __swift_project_value_buffer(v34, (uint64_t)&static Logger.conversationControls);
    v35 = Logger.logObject.getter();
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_1BD004000, v35, v36, "updateState - called but not in a joined conversation. Ignore", v37, 2u);
      MEMORY[0x1C3B751B8](v37, -1, -1);
    }

  }
}

void ConduitLagunaNoticeManager.rejectSuggestion(_:)(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[6];

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for TUNearbySuggestionResult);
  v3 = a1;
  v4 = TUNearbySuggestionResult.__allocating_init(suggestion:selectedActivity:type:)(v3, 0, 3);
  v5 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_callCenter), sel_neighborhoodActivityConduit);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  v9[4] = partial apply for closure #1 in ConduitLagunaNoticeManager.rejectSuggestion(_:);
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
  v9[3] = &block_descriptor_410;
  v7 = _Block_copy(v9);
  v8 = v3;
  swift_release();
  objc_msgSend(v5, sel_respondToSuggestionWithResult_completion_, v4, v7);
  _Block_release(v7);

}

id TUNearbySuggestionResult.__allocating_init(suggestion:selectedActivity:type:)(void *a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithSuggestion_selectedActivity_type_, a1, a2, a3);

  return v5;
}

void closure #1 in ConduitLagunaNoticeManager.rejectSuggestion(_:)(char a1, void *a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v15;
  NSObject *oslog;

  if ((a1 & 1) == 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
    v6 = a3;
    v7 = a2;
    v8 = v6;
    v9 = a2;
    oslog = Logger.logObject.getter();
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v10))
    {
      v11 = swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412546;
      v13 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v12 = v8;

      *(_WORD *)(v11 + 12) = 2112;
      if (a2)
      {
        v14 = a2;
        v15 = _swift_stdlib_bridgeErrorToNSError();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v15 = 0;
      }
      v12[1] = v15;

      _os_log_impl(&dword_1BD004000, oslog, v10, "rejectSuggestion:%@ failed with error: %@", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v12, -1, -1);
      MEMORY[0x1C3B751B8](v11, -1, -1);

    }
    else
    {

    }
  }
}

void closure #1 in ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40[3];

  v37 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v33 - v9;
  v11 = type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1;
  if (a1)
  {
    v14 = one-time initialization token for conversationControls;
    v15 = a1;
    if (v14 != -1)
      swift_once();
    v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
    v17 = v15;
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v33 = v13;
      v21 = v20;
      v22 = (_QWORD *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v39 = (uint64_t)v17;
      v40[0] = v23;
      *(_DWORD *)v21 = 138412546;
      v35 = v8;
      v36 = a3;
      v34 = v11;
      v24 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v22 = v38;

      *(_WORD *)(v21 + 12) = 2080;
      v25 = SystemBannerDismissalReason.description.getter(v37);
      v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v40);
      v11 = v34;
      a3 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v8 = v35;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v18, v19, "systemBannerWasDismissed - deviceHandle: %@ - reason: %s", (uint8_t *)v21, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v22, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v23, -1, -1);
      v27 = v21;
      v13 = v33;
      MEMORY[0x1C3B751B8](v27, -1, -1);

      goto LABEL_12;
    }

  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v28 = type metadata accessor for Logger();
    __swift_project_value_buffer(v28, (uint64_t)&static Logger.conversationControls);
    v17 = Logger.logObject.getter();
    v29 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1BD004000, v17, v29, "systemBannerWasDismissed - different banner type was dismissed", v30, 2u);
      MEMORY[0x1C3B751B8](v30, -1, -1);
    }
  }

LABEL_12:
  v31 = a3 + OBJC_IVAR____TtC15ConversationKit26ConduitLagunaNoticeManager_pushBannerInfo;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v31, (uint64_t)v10, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  }
  else
  {
    outlined init with take of StagedCollaboration((uint64_t)v10, (uint64_t)v13, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
    if (v38)
    {
      if (v37 == 1)
      {
        v32 = v38;
        ConduitLagunaNoticeManager.rejectSuggestion(_:)(v32);

      }
    }
    v13[*(int *)(v11 + 24)] = 0;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v13, (uint64_t)v8, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v11);
    ConduitLagunaNoticeManager.pushBannerInfo.setter();
    outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo);
  }
}

void closure #1 in ConduitLagunaNoticeManager.pushSession(lightweightHandoff:selectedActivity:completion:)(char a1, void *a2, void *a3, uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  uint64_t v20;

  if ((a1 & 1) != 0)
  {
LABEL_8:
    if (!a5)
      return;
    goto LABEL_9;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
  v10 = a3;
  v11 = a2;
  v12 = v10;
  v13 = a2;
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v14, v15))
  {

    goto LABEL_8;
  }
  v16 = swift_slowAlloc();
  v17 = (_QWORD *)swift_slowAlloc();
  *(_DWORD *)v16 = 138412802;
  v18 = v12;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *v17 = v12;

  *(_WORD *)(v16 + 12) = 1024;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v16 + 18) = 2112;
  if (a2)
  {
    v19 = a2;
    v20 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
  }
  else
  {
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v20 = 0;
  }
  v17[1] = v20;

  _os_log_impl(&dword_1BD004000, v14, v15, "pushSession for suggestion:%@ as lightweightHandoff:%{BOOL}d failed with error: %@", (uint8_t *)v16, 0x1Cu);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
  swift_arrayDestroy();
  MEMORY[0x1C3B751B8](v17, -1, -1);
  MEMORY[0x1C3B751B8](v16, -1, -1);

  if (a5)
LABEL_9:
    a5(a1 & 1);
}

void ConduitLagunaNoticeManager.init()()
{
  OUTLINED_FUNCTION_300();
  __break(1u);
}

UIModalPresentationStyle __swiftcall ConversationControlsManager.adaptivePresentationStyle(for:traitCollection:)(UIPresentationController a1, UITraitCollection traitCollection)
{
  return -1;
}

uint64_t specialized Conversation.activities.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_activitySessions);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUConversationActivitySession and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
  v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized _copyCollectionToContiguousArray<A>(_:)(v2);
  swift_bridgeObjectRelease();
  specialized _arrayForceCast<A, B>(_:)();
  v4 = v3;
  swift_release();
  TUConversation.collaborations.getter();
  specialized _arrayForceCast<A, B>(_:)();
  swift_bridgeObjectRelease();
  specialized Array.append<A>(contentsOf:)();
  return v4;
}

BOOL specialized Conversation.canDisplayScreenSharingRequest.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_avMode) == (id)2 || objc_msgSend(v0, sel_avMode) == (id)1;
}

uint64_t specialized closure #1 in Sequence<>.contains(_:)(uint64_t a1, uint64_t a2)
{
  return specialized closure #1 in Sequence<>.contains(_:)(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0CB0998], &lazy protocol witness table cache variable for type UUID and conformance UUID) & 1;
}

{
  return specialized closure #1 in Sequence<>.contains(_:)(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0CB1658], lazy protocol witness table cache variable for type IndexPath and conformance IndexPath) & 1;
}

uint64_t specialized closure #1 in Sequence<>.contains(_:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), _QWORD *a4)
{
  a3(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(a4, a3);
  OUTLINED_FUNCTION_202_0();
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

BOOL specialized closure #1 in Sequence<>.contains(_:)(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

void specialized _NativeSet.resize(capacity:)(uint64_t a1)
{
  specialized _NativeSet.resize(capacity:)(a1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUHandle>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUConversationParticipant>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUScreenSharingRequest>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUConversationMember>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, &demangling cache variable for type metadata for _SetStorage<SGURL>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, &demangling cache variable for type metadata for _SetStorage<CNComposeRecipient>);
}

{
  specialized _NativeSet.resize(capacity:)(a1, &demangling cache variable for type metadata for _SetStorage<TUConversationInvitationPreference>);
}

#error "1BD28D70C: call analysis failed (funcsize=107)"

void specialized _NativeSet.resize(capacity:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  _QWORD *v33;

  OUTLINED_FUNCTION_288(a1, a2);
  OUTLINED_FUNCTION_29_41();
  OUTLINED_FUNCTION_273_0();
  if (v5)
  {
    v33 = v2;
    v6 = 1 << *(_BYTE *)(v3 + 32);
    v7 = v3 + 56;
    if (v6 < 64)
      v8 = ~(-1 << v6);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v6 + 63) >> 6;
    v11 = v4 + 56;
    OUTLINED_FUNCTION_11_1();
    v12 = 0;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v13 | (v12 << 6); ; i = v21 + (v12 << 6))
    {
      v22 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * i);
      v23 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40)) & ~(-1 << *(_BYTE *)(v4 + 32));
      if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) == 0)
      {
        OUTLINED_FUNCTION_40_2();
        while (1)
        {
          OUTLINED_FUNCTION_144();
          if (v27)
          {
            if ((v24 & 1) != 0)
              break;
          }
          if (v25 == v26)
            v25 = 0;
          if (*(_QWORD *)(v11 + 8 * v25) != -1)
          {
            OUTLINED_FUNCTION_38_2();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_39_3();
LABEL_31:
      OUTLINED_FUNCTION_418();
      *(_QWORD *)(v11 + v29) |= 1 << v28;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v28) = v22;
      OUTLINED_FUNCTION_87_7();
      if (v9)
        goto LABEL_6;
LABEL_7:
      if (__OFADD__(v12, 1))
        goto LABEL_39;
      if (v12 + 1 >= v10)
        goto LABEL_33;
      OUTLINED_FUNCTION_646();
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v10)
          goto LABEL_33;
        if (!*(_QWORD *)(v7 + 8 * v12))
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v10)
            goto LABEL_33;
          if (!*(_QWORD *)(v7 + 8 * v12))
          {
            v17 = v15 + 3;
            if (v17 >= v10)
            {
LABEL_33:
              OUTLINED_FUNCTION_11_0();
              v2 = v33;
              OUTLINED_FUNCTION_68_10();
              if (v31 ^ v32 | v27)
                OUTLINED_FUNCTION_291_1(v30);
              else
                OUTLINED_FUNCTION_114_9(v30);
              *(_QWORD *)(v3 + 16) = 0;
              break;
            }
            if (!*(_QWORD *)(v7 + 8 * v17))
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_40;
                if (v12 >= v10)
                  goto LABEL_33;
                OUTLINED_FUNCTION_645();
                if (v18)
                  goto LABEL_20;
              }
            }
            v12 = v17;
          }
        }
      }
LABEL_20:
      OUTLINED_FUNCTION_47_5();
      v9 = v20 & v19;
    }
  }
  OUTLINED_FUNCTION_11_0();
  *v2 = v4;
  OUTLINED_FUNCTION_9_5();
}

#error "1BD28E0D4: call analysis failed (funcsize=90)"

void specialized _NativeSet.resize(capacity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11, uint64_t a12)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_69_12();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<UInt64>);
  OUTLINED_FUNCTION_29_41();
  OUTLINED_FUNCTION_660();
  if (v19)
  {
    OUTLINED_FUNCTION_200();
    OUTLINED_FUNCTION_492();
    if (!v12)
      goto LABEL_4;
LABEL_3:
    OUTLINED_FUNCTION_416();
    while (1)
    {
      OUTLINED_FUNCTION_663();
      static Hasher._hash(seed:_:)();
      OUTLINED_FUNCTION_326_0();
      if (v22)
      {
        OUTLINED_FUNCTION_40_2();
        while (1)
        {
          OUTLINED_FUNCTION_144();
          if (v22)
          {
            if ((v24 & 1) != 0)
              break;
          }
          if (v25 == v26)
            v25 = 0;
          if (*(_QWORD *)(v17 + 8 * v25) != -1)
          {
            OUTLINED_FUNCTION_38_2();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_39_3();
LABEL_28:
      OUTLINED_FUNCTION_162_2(v23);
      if (v12)
        goto LABEL_3;
LABEL_4:
      v20 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_36;
      if (v20 >= v16)
        goto LABEL_30;
      ++v18;
      if (!v15[v20])
      {
        v18 = v20 + 1;
        if (v20 + 1 >= v16)
          goto LABEL_30;
        if (!v15[v18])
        {
          v18 = v20 + 2;
          if (v20 + 2 >= v16)
            goto LABEL_30;
          if (!v15[v18])
          {
            v21 = v20 + 3;
            if (v21 >= v16)
            {
LABEL_30:
              if (a12 > 63)
                OUTLINED_FUNCTION_509();
              else
                *v15 = a10;
              v12 = a11;
              *(_QWORD *)(v14 + 16) = 0;
              break;
            }
            if (!v15[v21])
            {
              while (1)
              {
                v18 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_37;
                if (v18 >= v16)
                  goto LABEL_30;
                ++v21;
                if (v15[v18])
                  goto LABEL_17;
              }
            }
            v18 = v21;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_422();
    }
  }
  OUTLINED_FUNCTION_11_0();
  *v12 = v13;
  OUTLINED_FUNCTION_8_0();
}

{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_69_12();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<UnsafeMutableRawPointer>);
  OUTLINED_FUNCTION_29_41();
  OUTLINED_FUNCTION_660();
  if (v19)
  {
    OUTLINED_FUNCTION_200();
    OUTLINED_FUNCTION_492();
    if (!v12)
      goto LABEL_4;
LABEL_3:
    OUTLINED_FUNCTION_416();
    while (1)
    {
      OUTLINED_FUNCTION_663();
      static Hasher._hash(seed:_:)();
      OUTLINED_FUNCTION_326_0();
      if (v22)
      {
        OUTLINED_FUNCTION_40_2();
        while (1)
        {
          OUTLINED_FUNCTION_144();
          if (v22)
          {
            if ((v24 & 1) != 0)
              break;
          }
          if (v25 == v26)
            v25 = 0;
          if (*(_QWORD *)(v17 + 8 * v25) != -1)
          {
            OUTLINED_FUNCTION_38_2();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_39_3();
LABEL_28:
      OUTLINED_FUNCTION_162_2(v23);
      if (v12)
        goto LABEL_3;
LABEL_4:
      v20 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_36;
      if (v20 >= v16)
        goto LABEL_30;
      ++v18;
      if (!v15[v20])
      {
        v18 = v20 + 1;
        if (v20 + 1 >= v16)
          goto LABEL_30;
        if (!v15[v18])
        {
          v18 = v20 + 2;
          if (v20 + 2 >= v16)
            goto LABEL_30;
          if (!v15[v18])
          {
            v21 = v20 + 3;
            if (v21 >= v16)
            {
LABEL_30:
              if (a12 > 63)
                OUTLINED_FUNCTION_509();
              else
                *v15 = a10;
              v12 = a11;
              *(_QWORD *)(v14 + 16) = 0;
              break;
            }
            if (!v15[v21])
            {
              while (1)
              {
                v18 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_37;
                if (v18 >= v16)
                  goto LABEL_30;
                ++v21;
                if (v15[v18])
                  goto LABEL_17;
              }
            }
            v18 = v21;
          }
        }
      }
LABEL_17:
      OUTLINED_FUNCTION_422();
    }
  }
  OUTLINED_FUNCTION_11_0();
  *v12 = v13;
  OUTLINED_FUNCTION_8_0();
}

#error "1BD28E498: call analysis failed (funcsize=121)"

uint64_t specialized _NativeSet.resize(capacity:)(uint64_t a1)
{
  return specialized _NativeSet.resize(capacity:)(a1, &demangling cache variable for type metadata for _SetStorage<TranscriptionViewModel.CaptionID>);
}

{
  return specialized _NativeSet.resize(capacity:)(a1, &demangling cache variable for type metadata for _SetStorage<CaptionSectioner.CaptionID>);
}

#error "1BD28E6F0: call analysis failed (funcsize=88)"

#error "1BD28E85C: call analysis failed (funcsize=90)"

double UIEdgeInsetsInsetRect_0(double a1)
{
  return a1 + 0.0;
}

uint64_t sub_1BD28EA88()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t sub_1BD28EAA4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  if (*(_QWORD *)(v0 + 24))
    OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)()
{
  uint64_t *v0;

  return closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(v0[2], v0[3], v0[4]);
}

uint64_t partial apply for closure #1 in ConversationControlsManager.heldCalls()(void *a1)
{
  uint64_t v1;

  return closure #1 in ConversationControlsManager.heldCalls()(a1, v1);
}

uint64_t sub_1BD28EADC()
{
  return OUTLINED_FUNCTION_23_4();
}

void partial apply for thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool)()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  OUTLINED_FUNCTION_0();
}

uint64_t specialized MutableCollection._halfStablePartition(isSuffixElement:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47;
  char *v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(char *, unint64_t, uint64_t);
  unint64_t v55;
  uint64_t (*v56)(unint64_t, char *, uint64_t);
  BOOL v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v62 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v61 = (char *)&v58 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v71 = (char *)&v58 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v73 = (char *)&v58 - v13;
  MEMORY[0x1E0C80A78](v12);
  v68 = (char *)&v58 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v58 - v19;
  v67 = a1;
  v21 = *a1;
  v22 = *(char **)(*a1 + 16);
  if (v22)
  {
    v23 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v60 = v21 + v23;
    v75 = *(_QWORD *)(v5 + 72);
    v63 = a2 + v23;
    v59 = v21;
    swift_bridgeObjectRetain();
    v24 = 0;
    v65 = a2;
    v66 = v23;
    v69 = v5;
    v58 = v18;
    v64 = (uint64_t)v22;
    v25 = v68;
    do
    {
      if (a2)
      {
        v70 = v24;
        v26 = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain_n();
        if (v26)
        {
          v72 = (void (*)(char *, uint64_t, uint64_t))(v60 + v75 * (_QWORD)v70);
          v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
          v28 = v63;
          v74 = v27;
          while (1)
          {
            v27((uint64_t)v20, v28, v4);
            __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v4);
            if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v4) == 1)
              break;
            v29 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
            v29(v25, v20, v4);
            lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
            v30 = dispatch thunk of static Equatable.== infix(_:_:)();
            v31 = *(void (**)(char *, uint64_t))(v5 + 8);
            v31(v25, v4);
            if ((v30 & 1) != 0)
            {
              v72 = (void (*)(char *, uint64_t, uint64_t))v29;
              v33 = v59;
              swift_bridgeObjectRelease();
              v34 = v65;
              result = swift_bridgeObjectRelease_n();
              v36 = v70;
              v37 = v70 + 1;
              if (!__OFADD__(v70, 1))
              {
                v38 = *(char **)(v33 + 16);
                if (v37 == v38)
                  goto LABEL_39;
                v39 = v33;
                v40 = v66;
                v41 = (uint64_t)v58;
                while (v37 < v38)
                {
                  v70 = v36;
                  v68 = v37;
                  v64 = (_QWORD)v37 * v75;
                  v42 = v39 + v40 + (_QWORD)v37 * v75;
                  v43 = v74;
                  v74((uint64_t)v73, v42, v4);
                  v44 = *(_QWORD *)(v34 + 16);
                  swift_bridgeObjectRetain();
                  v45 = v63;
                  if (v44)
                  {
                    while (1)
                    {
                      v43(v41, v45, v4);
                      __swift_storeEnumTagSinglePayload(v41, 0, 1, v4);
                      if (__swift_getEnumTagSinglePayload(v41, 1, v4) == 1)
                        break;
                      v46 = v71;
                      v72(v71, v41, v4);
                      v47 = dispatch thunk of static Equatable.== infix(_:_:)();
                      v31(v46, v4);
                      if ((v47 & 1) != 0)
                      {
                        v34 = v65;
                        swift_bridgeObjectRelease();
                        result = ((uint64_t (*)(char *, uint64_t))v31)(v73, v4);
                        v36 = v70;
                        v40 = v66;
                        v49 = v68;
                        goto LABEL_35;
                      }
                      v45 += v75;
                      --v44;
                      v43 = v74;
                      if (!v44)
                        goto LABEL_21;
                    }
                  }
                  else
                  {
LABEL_21:
                    __swift_storeEnumTagSinglePayload(v41, 1, 1, v4);
                  }
                  v34 = v65;
                  swift_bridgeObjectRelease();
                  result = ((uint64_t (*)(char *, uint64_t))v31)(v73, v4);
                  v48 = v70;
                  v49 = v68;
                  v40 = v66;
                  if (v70 != v68)
                  {
                    if (((unint64_t)v70 & 0x8000000000000000) != 0)
                      goto LABEL_43;
                    v50 = *v67;
                    v51 = *(_QWORD *)(*v67 + 16);
                    if ((unint64_t)v70 >= v51)
                      goto LABEL_44;
                    v52 = v50 + v66;
                    v53 = (_QWORD)v70 * v75;
                    v54 = (void (*)(char *, unint64_t, uint64_t))v74;
                    result = ((uint64_t (*)(char *, unint64_t, uint64_t))v74)(v61, v50 + v66 + (_QWORD)v70 * v75, v4);
                    if ((unint64_t)v68 >= v51)
                      goto LABEL_45;
                    v49 = v68;
                    v54(v62, v52 + v64, v4);
                    result = swift_isUniquelyReferenced_nonNull_native();
                    *v67 = v50;
                    if ((result & 1) == 0)
                    {
                      result = specialized _ArrayBuffer._consumeAndCreateNew()();
                      v50 = result;
                      *v67 = result;
                    }
                    v34 = v65;
                    v40 = v66;
                    if ((unint64_t)v70 >= *(_QWORD *)(v50 + 16))
                      goto LABEL_46;
                    v55 = v50 + v66 + v53;
                    v56 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v69 + 40);
                    result = v56(v55, v62, v4);
                    if ((unint64_t)v49 >= *(_QWORD *)(*v67 + 16))
                      goto LABEL_47;
                    result = v56(*v67 + v40 + v64, v61, v4);
                    v48 = v70;
                  }
                  v57 = __OFADD__(v48, 1);
                  v36 = v48 + 1;
                  if (v57)
                    goto LABEL_42;
LABEL_35:
                  v57 = __OFADD__(v49, 1);
                  v37 = v49 + 1;
                  if (v57)
                    goto LABEL_41;
                  v39 = *v67;
                  v38 = *(char **)(*v67 + 16);
                  if (v37 == v38)
                  {
                    v70 = v36;
                    goto LABEL_39;
                  }
                }
                __break(1u);
LABEL_41:
                __break(1u);
LABEL_42:
                __break(1u);
LABEL_43:
                __break(1u);
LABEL_44:
                __break(1u);
LABEL_45:
                __break(1u);
LABEL_46:
                __break(1u);
LABEL_47:
                __break(1u);
              }
              __break(1u);
              return result;
            }
            v28 += v75;
            --v26;
            v5 = v69;
            v27 = v74;
            if (!v26)
              goto LABEL_9;
          }
        }
        else
        {
LABEL_9:
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v4);
        }
        a2 = v65;
        swift_bridgeObjectRelease_n();
        v24 = v70;
        v22 = (char *)v64;
      }
      ++v24;
    }
    while (v24 != v22);
    v32 = v59;
    swift_bridgeObjectRelease();
    v70 = *(char **)(v32 + 16);
  }
  else
  {
    v70 = 0;
  }
LABEL_39:
  swift_bridgeObjectRelease();
  return (uint64_t)v70;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, unint64_t, uint64_t);
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v47 = OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_5_27();
  v35 = v6;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_18_0();
  v36 = v8;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_18_0();
  v37 = v10;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_62();
  v44 = v12;
  v43 = type metadata accessor for UUID();
  v13 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_5_27();
  v46 = v14;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_62();
  v45 = v16;
  v38 = a1;
  v17 = *a1;
  v40 = *(_QWORD *)(v17 + 16);
  if (!v40)
  {
    v22 = 0;
LABEL_9:
    swift_release();
    return v22;
  }
  v18 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v48 = *(_QWORD *)(v2 + 72);
  v41 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v13 + 16);
  v42 = *(void (**)(uint64_t))(*(_QWORD *)a2 + 184);
  swift_bridgeObjectRetain();
  v49 = 0;
  v34 = v18;
  v39 = v17;
  while (1)
  {
    v19 = v41(v45, v17 + v18 + *(int *)(v47 + 32), v43);
    v42(v19);
    v41(v46, v44 + *(int *)(v47 + 32), v43);
    outlined destroy of HUDActivityManager.BannerUpdate(v44);
    v20 = static UUID.== infix(_:_:)();
    v21 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v21(v46, v43);
    v21(v45, v43);
    if ((v20 & 1) != 0)
      break;
    v18 += v48;
    ++v49;
    v17 = v39;
    if (v40 == v49)
    {
      swift_bridgeObjectRelease();
      v22 = *(_QWORD *)(v39 + 16);
      goto LABEL_9;
    }
  }
  v23 = v39;
  result = swift_bridgeObjectRelease();
  v22 = v49;
  if (!__OFADD__(v49, 1))
  {
    v25 = *(_QWORD *)(v39 + 16);
    if (v49 + 1 == v25)
      goto LABEL_9;
    v26 = v48 + v18;
    v27 = v49 + 1;
    while (v27 < v25)
    {
      outlined init with copy of HUDActivityManager.BannerUpdate(v23 + v26, v44);
      v28 = v41(v45, v44 + *(int *)(v47 + 32), v43);
      v42(v28);
      v41(v46, v37 + *(int *)(v47 + 32), v43);
      outlined destroy of HUDActivityManager.BannerUpdate(v37);
      v29 = static UUID.== infix(_:_:)();
      v21(v46, v43);
      v21(v45, v43);
      result = outlined destroy of HUDActivityManager.BannerUpdate(v44);
      if ((v29 & 1) == 0)
      {
        if (v27 != v22)
        {
          if ((v22 & 0x8000000000000000) != 0)
            goto LABEL_29;
          v30 = *v38;
          v31 = *(_QWORD *)(*v38 + 16);
          if (v22 >= v31)
            goto LABEL_30;
          result = outlined init with copy of HUDActivityManager.BannerUpdate(v30 + v34 + v22 * v48, v36);
          if (v27 >= v31)
            goto LABEL_31;
          outlined init with copy of HUDActivityManager.BannerUpdate(v30 + v26, v35);
          result = swift_isUniquelyReferenced_nonNull_native();
          *v38 = v30;
          if ((result & 1) == 0)
          {
            result = specialized _ArrayBuffer._consumeAndCreateNew()();
            v30 = result;
            *v38 = result;
          }
          if (v22 >= *(_QWORD *)(v30 + 16))
            goto LABEL_32;
          result = outlined assign with take of HUDActivityManager.BannerUpdate(v35, v30 + v34 + v22 * v48);
          if (v27 >= *(_QWORD *)(*v38 + 16))
            goto LABEL_33;
          result = outlined assign with take of HUDActivityManager.BannerUpdate(v36, *v38 + v26);
        }
        if (__OFADD__(v22++, 1))
          goto LABEL_28;
      }
      v33 = v27 + 1;
      if (__OFADD__(v27, 1))
        goto LABEL_27;
      v23 = *v38;
      v25 = *(_QWORD *)(*v38 + 16);
      ++v27;
      v26 += v48;
      if (v33 == v25)
        goto LABEL_9;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  __break(1u);
  return result;
}

void specialized ContiguousArray.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int EnumTagSinglePayload;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v48 = a2;
  v53 = type metadata accessor for TranscriptionViewModel.Caption(0);
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v46 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v46 - v16;
  v18 = a4 >> 1;
  v49 = a3;
  v19 = __OFSUB__(a4 >> 1, a3);
  v20 = (a4 >> 1) - a3;
  if (v19)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v21 = *v4;
  v22 = *(_QWORD *)(*v4 + 16);
  v23 = v22 + v20;
  if (__OFADD__(v22, v20))
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v52 = v18;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v21;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v25 = *(_QWORD *)(v21 + 24) >> 1, v25 < v23))
  {
    if (v22 <= v23)
      v26 = v22 + v20;
    else
      v26 = v22;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v26, 1);
    v21 = *v4;
    v25 = *(_QWORD *)(*v4 + 24) >> 1;
  }
  v27 = v25 - *(_QWORD *)(v21 + 16);
  if (v52 == v49)
  {
    if (v20 <= 0)
    {
      v20 = 0;
      v28 = v49;
      goto LABEL_17;
    }
    goto LABEL_41;
  }
  if (v27 < v20)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  specialized UnsafeMutablePointer.initialize(from:count:)(v48 + *(_QWORD *)(v51 + 72) * v49, v20);
  if (v20 <= 0)
  {
    v28 = v52;
  }
  else
  {
    v29 = *(_QWORD *)(v21 + 16);
    v19 = __OFADD__(v29, v20);
    v30 = v29 + v20;
    v28 = v52;
    if (v19)
    {
LABEL_43:
      __break(1u);
      return;
    }
    *(_QWORD *)(v21 + 16) = v30;
  }
LABEL_17:
  if (v20 == v27)
  {
    v46 = a1;
    v31 = *(_QWORD *)(v21 + 16);
    v32 = v53;
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v53);
    outlined init with copy of FeatureEligibility?((uint64_t)v17, (uint64_t)v15, &demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v32);
    v34 = (uint64_t)v50;
    if (EnumTagSinglePayload != 1)
    {
      v35 = &demangling cache variable for type metadata for TranscriptionViewModel.Caption?;
      v47 = v15;
      do
      {
        v36 = v35;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, v35);
        v37 = *v4;
        v38 = *(_QWORD *)(*v4 + 24);
        v39 = v38 >> 1;
        if ((uint64_t)(v38 >> 1) < v31 + 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v31 + 1, 1);
          v37 = *v4;
          v39 = *(_QWORD *)(*v4 + 24) >> 1;
        }
        swift_retain();
        outlined init with copy of FeatureEligibility?((uint64_t)v17, (uint64_t)v12, v36);
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v53) == 1)
        {
LABEL_35:
          swift_release();
          v35 = v36;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, v36);
        }
        else
        {
          while (1)
          {
            outlined init with take of StagedCollaboration((uint64_t)v12, v34, type metadata accessor for TranscriptionViewModel.Caption);
            if (v31 >= v39)
              break;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, v36);
            v40 = v34;
            v41 = *(_QWORD *)(v51 + 72);
            outlined init with take of StagedCollaboration(v40, v37+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ v41 * v31, type metadata accessor for TranscriptionViewModel.Caption);
            if (v28 == v52)
            {
              v42 = 1;
              v28 = v52;
            }
            else
            {
              if (v28 < v49 || v28 >= v52)
              {
                __break(1u);
                goto LABEL_39;
              }
              outlined init with copy of ConversationControlsAppLaunchButtonType(v48 + v41 * v28, (uint64_t)v17, type metadata accessor for TranscriptionViewModel.Caption);
              v42 = 0;
              ++v28;
            }
            v44 = v53;
            __swift_storeEnumTagSinglePayload((uint64_t)v17, v42, 1, v53);
            outlined init with copy of FeatureEligibility?((uint64_t)v17, (uint64_t)v12, v36);
            v45 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v44);
            ++v31;
            v34 = (uint64_t)v50;
            if (v45 == 1)
              goto LABEL_35;
          }
          outlined destroy of AccountUpdateNotice(v34, type metadata accessor for TranscriptionViewModel.Caption);
          swift_release();
          v35 = v36;
        }
        *(_QWORD *)(*v4 + 16) = v31;
        v15 = v47;
        outlined init with copy of FeatureEligibility?((uint64_t)v17, (uint64_t)v47, v35);
      }
      while (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v53) != 1);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
    swift_unknownObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for TranscriptionViewModel.Caption?);
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t specialized _NativeSet.intersection(_:)(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v6 = (_QWORD *)((char *)v12 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v5, v6);
    specialized closure #1 in _NativeSet.intersection(_:)(v6, v5, a2, v3);
    v8 = v7;
    swift_release();
  }
  else
  {
    v9 = (unint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v5, v9);
    specialized closure #1 in _NativeSet.intersection(_:)(v9, v5, a2, v3);
    v8 = v10;
    swift_release();
    MEMORY[0x1C3B751B8](v9, -1, -1);
  }
  return v8;
}

void specialized closure #1 in _NativeSet.intersection(_:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  Swift::Int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v34 = 0;
    v60 = a3 + 56;
    v61 = 0;
    v35 = 1 << *(_BYTE *)(a3 + 32);
    if (v35 < 64)
      v36 = ~(-1 << v35);
    else
      v36 = -1;
    v37 = v36 & *(_QWORD *)(a3 + 56);
    v63 = (unint64_t)(v35 + 63) >> 6;
    v38 = a4 + 56;
    while (1)
    {
      while (1)
      {
        if (v37)
        {
          v39 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          v40 = v39 | (v34 << 6);
        }
        else
        {
          v41 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          if (v41 >= v63)
            goto LABEL_79;
          v42 = *(_QWORD *)(v60 + 8 * v41);
          ++v34;
          if (!v42)
          {
            v34 = v41 + 1;
            if (v41 + 1 >= v63)
              goto LABEL_79;
            v42 = *(_QWORD *)(v60 + 8 * v34);
            if (!v42)
            {
              v34 = v41 + 2;
              if (v41 + 2 >= v63)
                goto LABEL_79;
              v42 = *(_QWORD *)(v60 + 8 * v34);
              if (!v42)
              {
                v43 = v41 + 3;
                if (v43 >= v63)
                  goto LABEL_79;
                v42 = *(_QWORD *)(v60 + 8 * v43);
                if (!v42)
                {
                  while (1)
                  {
                    v34 = v43 + 1;
                    if (__OFADD__(v43, 1))
                      goto LABEL_85;
                    if (v34 >= v63)
                      break;
                    v42 = *(_QWORD *)(v60 + 8 * v34);
                    ++v43;
                    if (v42)
                      goto LABEL_61;
                  }
LABEL_79:
                  swift_retain();
                  specialized _NativeSet.extractSubset(using:count:)(a1, a2, v61, v5);
                  return;
                }
                v34 = v43;
              }
            }
          }
LABEL_61:
          v37 = (v42 - 1) & v42;
          v40 = __clz(__rbit64(v42)) + (v34 << 6);
        }
        v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
        v46 = *v44;
        v45 = v44[1];
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        v47 = Hasher._finalize()();
        v48 = -1 << *(_BYTE *)(v4 + 32);
        v49 = v47 & ~v48;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) != 0)
          break;
LABEL_78:
        swift_bridgeObjectRelease();
        v5 = a3;
        v4 = a4;
      }
      v50 = *(_QWORD *)(a4 + 48);
      v51 = (_QWORD *)(v50 + 16 * v49);
      v52 = *v51 == v46 && v51[1] == v45;
      if (!v52 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        v53 = ~v48;
        do
        {
          v49 = (v49 + 1) & v53;
          if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
            goto LABEL_78;
          v54 = (_QWORD *)(v50 + 16 * v49);
          v55 = *v54 == v46 && v54[1] == v45;
        }
        while (!v55 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
      }
      swift_bridgeObjectRelease();
      *(unint64_t *)((char *)a1 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
        goto LABEL_83;
    }
  }
  v6 = 0;
  v58 = a4 + 56;
  v7 = 1 << *(_BYTE *)(a4 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  v59 = (unint64_t)(v7 + 63) >> 6;
  v61 = 0;
  v10 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v62 = v6;
      v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v13 >= v59)
      goto LABEL_79;
    v14 = *(_QWORD *)(v58 + 8 * v13);
    v15 = v6 + 1;
    if (!v14)
    {
      v15 = v6 + 2;
      if (v6 + 2 >= v59)
        goto LABEL_79;
      v14 = *(_QWORD *)(v58 + 8 * v15);
      if (!v14)
      {
        v15 = v6 + 3;
        if (v6 + 3 >= v59)
          goto LABEL_79;
        v14 = *(_QWORD *)(v58 + 8 * v15);
        if (!v14)
          break;
      }
    }
LABEL_21:
    v9 = (v14 - 1) & v14;
    v62 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_22:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    v20 = Hasher._finalize()();
    v21 = -1 << *(_BYTE *)(v5 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    v24 = 1 << v22;
    if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) == 0)
      goto LABEL_36;
    v25 = *(_QWORD *)(a3 + 48);
    v26 = (_QWORD *)(v25 + 16 * v22);
    v27 = *v26 == v19 && v26[1] == v18;
    if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      a1[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
    else
    {
      v28 = ~v21;
      for (i = v22 + 1; ; i = v30 + 1)
      {
        v30 = i & v28;
        if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
          break;
        v31 = (_QWORD *)(v25 + 16 * v30);
        v32 = *v31 == v19 && v31[1] == v18;
        if (v32 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v23 = v30 >> 6;
          v24 = 1 << v30;
          goto LABEL_38;
        }
      }
LABEL_36:
      swift_bridgeObjectRelease();
      v6 = v62;
      v5 = a3;
      v4 = a4;
    }
  }
  v16 = v6 + 4;
  if (v6 + 4 >= v59)
    goto LABEL_79;
  v14 = *(_QWORD *)(v58 + 8 * v16);
  if (v14)
  {
    v15 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v59)
      goto LABEL_79;
    v14 = *(_QWORD *)(v58 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_21;
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
}

void outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(void *a1)
{
  outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(a1, (SEL *)&selRef_displayName);
}

void outlined bridged method (ob) of @objc TUCallProvider.bundleIdentifier.getter(void *a1)
{
  outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(a1, (SEL *)&selRef_bundleIdentifier);
}

void outlined bridged method (ob) of @objc TUConversationLink.displayName.getter(void *a1, SEL *a2)
{
  void *v2;
  id v3;

  v3 = objc_msgSend(a1, *a2);
  OUTLINED_FUNCTION_37_0();
  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_18();
}

uint64_t type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConduitLagunaNoticeManager.PushBannerInfo);
}

uint64_t sub_1BD28FE2C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  OUTLINED_FUNCTION_41_13();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.pushSession(lightweightHandoff:selectedActivity:completion:)(char a1, void *a2)
{
  uint64_t v2;

  closure #1 in ConduitLagunaNoticeManager.pushSession(lightweightHandoff:selectedActivity:completion:)(a1, a2, *(void **)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(void (**)(_QWORD))(v2 + 32));
}

void outlined bridged method (mbnn) of @objc FTServerBag.object(forKey:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;

  v4 = (void *)MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_27();
  v5 = objc_msgSend(a3, sel_objectForKey_, v4);

  OUTLINED_FUNCTION_18();
}

id outlined bridged method (mnnnnbnn) of @objc static IMUserNotification.userNotification(withIdentifier:timeout:alertLevel:displayFlags:displayInformation:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6)
{
  Class isa;
  id v12;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(a6, sel_userNotificationWithIdentifier_timeout_alertLevel_displayFlags_displayInformation_, a1, a2, a3, isa, a4);

  return v12;
}

void outlined bridged method (mbgnn) of @objc IMUserNotification.representedApplicationBundle.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  objc_msgSend(a3, sel_setRepresentedApplicationBundle_, v4);

}

uint64_t outlined bridged method (pb) of @objc TUNearbyDeviceHandle.name.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_name);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

char *specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  char *v39;
  id v40;
  void **v41;
  void *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54[2];
  _BYTE v55[8];
  __int128 v56;
  __int128 v57;
  _UNKNOWN **v58;

  v46 = a2;
  v47 = a4;
  v9 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v45 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))((char *)&v45 - v13, v15, v16);
  v58 = 0;
  v56 = 0u;
  v57 = 0u;
  v17 = swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantMediaProviderCreator(v17, (uint64_t)v55);
  v50 = 0;
  v18 = swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantCaptionsProviderCreator(v18, (uint64_t)v54);
  v19 = (void *)objc_opt_self();
  swift_unknownObjectRetain();
  v20 = objc_msgSend(v19, sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  v21 = (_QWORD *)swift_allocObject();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  v52 = v22;
  v53 = &protocol witness table for TUIDSLookupManager;
  v49 = v20;
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v23 = MEMORY[0x1E0DEE9D8];
  v21[2] = Dictionary.init(dictionaryLiteral:)();
  v21[3] = Dictionary.init(dictionaryLiteral:)();
  v21[5] = 0;
  swift_unknownObjectWeakInit();
  v21[6] = v23;
  outlined init with copy of RadarReporting((uint64_t)&v49, (uint64_t)(v21 + 7));
  v24 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v24, sel_addObserver_selector_name_object_, v21, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E0DBD648], v49);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
  if (one-time initialization token for shared != -1)
    swift_once();
  v25 = static Defaults.shared;
  v26 = objc_allocWithZone((Class)type metadata accessor for ConversationController(0));
  outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)v55, (uint64_t)&v48);
  outlined init with copy of DefaultParticipantCaptionsProviderCreator((uint64_t)v54, (uint64_t)&v49);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, a5);
  swift_retain();
  specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(a1, v46, (uint64_t)v12, (uint64_t)&v48, (uint64_t)&v49, 0, (uint64_t)&v56, 0, (uint64_t)v21, v25, (uint64_t)v26, a5, a6, v44, v45, v46, v47, v48, (uint64_t)v49,
    v50,
    v51,
    v52,
    v53,
    v54[0],
    v54[1]);
  v28 = v27;
  outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v54);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)v55);
  v29 = type metadata accessor for EntitlementsChecker();
  v30 = swift_allocObject();
  v31 = objc_allocWithZone(MEMORY[0x1E0DBD2F0]);
  v32 = v28;
  *(_QWORD *)(v30 + 16) = objc_msgSend(v31, sel_init);
  *((_QWORD *)&v57 + 1) = v29;
  v58 = &protocol witness table for EntitlementsChecker;
  *(_QWORD *)&v56 = v30;
  v33 = static Defaults.shared;
  v34 = (void *)objc_opt_self();
  swift_retain();
  v35 = objc_msgSend(v34, sel_sharedInstance);
  v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v37 = (void *)(*(uint64_t (**)(id, __int128 *, uint64_t, _UNKNOWN **, id, id))(v47 + 2416))(v32, &v56, v33, &protocol witness table for Defaults, v35, v36);
  v38 = objc_allocWithZone(MEMORY[0x1E0CD73A8]);
  v39 = v37;
  v40 = objc_msgSend(v38, sel_init);

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, a5);
  v41 = (void **)&v39[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_contentExtractor];
  swift_beginAccess();
  v42 = *v41;
  *v41 = v40;

  return v39;
}

_QWORD *specialized ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  char *v49;
  id v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void *v70;
  char *v71;
  uint64_t v72;
  void *v73;
  id v74;
  id v75;
  uint64_t v76;
  char v77;
  char *v78;
  BOOL v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t ObjectType;
  uint64_t (*v84)(uint64_t, uint64_t);
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t);
  char *v89;
  uint64_t v90;
  void *v91;
  objc_class *v92;
  id v93;
  id v94;
  _QWORD *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  void *v101;
  void *v102;
  _QWORD *v103;
  id v104;
  id v105;
  id v106;
  char *v107;
  id v108;
  id v109;
  void **v110;
  void *v111;
  uint64_t v112;
  _QWORD *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  void *v145;
  char *v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  objc_super v152;
  BOOL v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  uint64_t v160[5];

  v147 = a5;
  v145 = a4;
  v151 = a3;
  v144 = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>.Publisher);
  v148 = *(_QWORD *)(v13 - 8);
  v149 = v13;
  MEMORY[0x1E0C80A78](v13);
  v146 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>);
  v141 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v140 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  v16 = MEMORY[0x1E0C80A78](v139);
  v138 = (uint64_t)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v137 = (char *)&v118 - v18;
  v136 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>);
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v134 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ForegroundApp?>);
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v131 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<TUCallTransmissionMode>);
  v128 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v127 = (char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationControlsManager.PushToTalkChannelState>);
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v124 = (char *)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TUCallBluetoothAudioFormat?>);
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v121 = (char *)&v118 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TURoute?>);
  v150 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v120 = (char *)&v118 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  v119 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v26 = (char *)&v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for OS_dispatch_queue.Attributes();
  MEMORY[0x1E0C80A78](v27);
  v28 = type metadata accessor for DispatchQoS();
  MEMORY[0x1E0C80A78](v28);
  v160[3] = a9;
  v160[4] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v160);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 32))(boxed_opaque_existential_1, a2, a9);
  v30 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&a6[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_ignoredScreenSharingRequestUUIDs] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&a6[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_initiallyActiveParticipantIdentifiers] = MEMORY[0x1E0DEE9E8];
  v31 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_coreAnalyticsReporter;
  v32 = objc_allocWithZone((Class)CNKCoreAnalyticsReporter);
  v33 = a6;
  *(_QWORD *)&a6[v31] = objc_msgSend(v32, sel_init);
  v34 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator;
  *(_QWORD *)&v33[v34] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConversationControlsNoticeCoordinator()), sel_init);
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeNoticeCancellable] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_contentExtractor] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowCallDetailsWhenReady] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isOnScreenSubscription] = 0;
  v35 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_features;
  if (one-time initialization token for shared != -1)
    swift_once();
  v36 = static Features.shared;
  *(_QWORD *)&v33[v35] = static Features.shared;
  v37 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_notificationCenter;
  v38 = (void *)objc_opt_self();
  v39 = v36;
  *(_QWORD *)&v33[v37] = objc_msgSend(v38, sel_defaultCenter);
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeShareCardHandle] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_minReactionCountForNotice] = 1;
  v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_canPostReactionNotice] = 0;
  swift_unknownObjectWeakInit();
  v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_hasInitializedCallControlsService] = 0;
  v40 = &v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___callControlsService];
  *((_QWORD *)v40 + 1) = 0;
  *((_QWORD *)v40 + 2) = 0;
  *(_QWORD *)v40 = 0;
  *(_OWORD *)(v40 + 24) = xmmword_1BD64E9C0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemBannerPresenter + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemConversationControlsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_systemAudioConversationControlsDelegate
                + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallConversationControlsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_inCallDetailsViewControllerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_handoffCompletedDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conduitLagunaNoticeManager] = 0;
  v41 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_lagunaQueue;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.unspecified.getter();
  v157 = v30;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))MEMORY[0x1E0DEF810]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v119 + 104))(v26, *MEMORY[0x1E0DEF8D0], v130);
  *(_QWORD *)&v33[v41] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v42 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  swift_allocObject();
  *(_QWORD *)&v33[v42] = PassthroughSubject.init()();
  v43 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activityManager;
  if (one-time initialization token for shared != -1)
    swift_once();
  v130 = a10;
  v44 = static HUDActivityManager.shared;
  *(_QWORD *)&v33[v43] = static HUDActivityManager.shared;
  v45 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_bannerActivityManager;
  v46 = one-time initialization token for shared;
  v47 = v44;
  if (v46 != -1)
    swift_once();
  v48 = static BannerActivityManager.shared;
  *(_QWORD *)&v33[v45] = static BannerActivityManager.shared;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_incomingScreenSharingRequestActivity] = 0;
  v49 = &v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__audioRoute];
  v157 = 0;
  v50 = v48;
  v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TURoute?);
  v51 = v120;
  Published.init(initialValue:)();
  v52 = v143;
  (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v49, v51, v143);
  v53 = &v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__bluetoothAudioFormat];
  v157 = 0;
  LOBYTE(v158) = 1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TUCallBluetoothAudioFormat?);
  v54 = v121;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v53, v54, v123);
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_cancellables] = MEMORY[0x1E0DEE9D8];
  v55 = &v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__pttChannelState];
  LOBYTE(v157) = 0;
  v56 = v124;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v55, v56, v126);
  v57 = &v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__pttChannelTransmissionMode];
  v157 = 1;
  type metadata accessor for TUCallTransmissionMode(0);
  v58 = v127;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v128 + 32))(v57, v58, v129);
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttViewModel] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager____lazy_storage___pttCallUpdateSubject] = 0;
  v59 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_incomingTransmissionReceivedSubject;
  LOBYTE(v157) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  swift_allocObject();
  *(_QWORD *)&v33[v59] = CurrentValueSubject.init(_:)();
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_pttCallStatusUpdateCancellable] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_pttCallIncomingTransmissionReceivedCancellable] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_confirmLeavePTTChannelAlert] = 0;
  v60 = &v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__foregroundApp];
  v157 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ForegroundApp?);
  v61 = v131;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v60, v61, v133);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [ConversationControlsManager.CollaborationPrompt]);
  Cache.init(countLimit:)();
  type metadata accessor for ForegroundCollaborationState(0);
  swift_storeEnumTagMultiPayload();
  v62 = &v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__ephemeralAlert];
  v157 = 0;
  v158 = 0;
  v159 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for EphemeralAlert?);
  v63 = v134;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v62, v63, v136);
  v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowDelayedLMIBanner] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isWaitingOnFirstRemoteFrame] = 0;
  v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_shouldShowAVLessLeaveConfirmation] = 0;
  v64 = (uint64_t)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_avLessLeaveConfirmationPresentedDate];
  v65 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v64, 1, 1, v65);
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activityLaunchTimer] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_applicationState] = 0;
  v66 = &v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager__appLaunchButtonType];
  v67 = (uint64_t)v137;
  swift_storeEnumTagMultiPayload();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v67, v138, type metadata accessor for ConversationControlsAppLaunchButtonType);
  v68 = v140;
  Published.init(initialValue:)();
  outlined destroy of AccountUpdateNotice(v67, type metadata accessor for ConversationControlsAppLaunchButtonType);
  (*(void (**)(char *, char *, uint64_t))(v141 + 32))(v66, v68, v142);
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_updateForegroundCollaborationStateTask] = 0;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_screenShareCountdownTimer] = 0;
  v69 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_participantStateDidChangeSubject;
  swift_allocObject();
  *(_QWORD *)&v33[v69] = PassthroughSubject.init()();
  v70 = v144;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationController] = v144;
  type metadata accessor for ConversationControlsJoinCountdownActionController();
  swift_allocObject();
  v71 = v70;
  ConversationControlsJoinCountdownActionController.init()();
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_countdownController] = v72;
  v73 = v145;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter] = v145;
  v74 = v73;
  v75 = objc_msgSend(v74, sel_conversationManager);
  type metadata accessor for CollaborationInitiationManager();
  v76 = swift_allocObject();
  *(_QWORD *)(v76 + 16) = v75;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_collaborationInitiationManager] = v76;
  ConversationController.hasMessageCapableRemoteParticipants.getter();
  LOBYTE(v75) = v77;
  swift_beginAccess();
  v156 = v75 & 1;
  Published.init(initialValue:)();
  swift_endAccess();
  v78 = &v71[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
  swift_beginAccess();
  v79 = *(_QWORD *)v78 == 3;
  swift_beginAccess();
  LOBYTE(v155) = v79;
  Published.init(initialValue:)();
  swift_endAccess();
  v80 = ConversationController.audioRoute.getter();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(v150 + 8))(v49, v52);
  v155 = v80;
  Published.init(initialValue:)();
  swift_endAccess();
  v81 = &v71[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  v82 = *((_QWORD *)v81 + 1);
  ObjectType = swift_getObjectType();
  v84 = *(uint64_t (**)(uint64_t, uint64_t))(v82 + 352);
  swift_unknownObjectRetain();
  LOBYTE(v82) = v84(ObjectType, v82);
  swift_unknownObjectRelease();
  swift_beginAccess();
  v153 = (v82 & 1) == 0;
  Published.init(initialValue:)();
  swift_endAccess();
  ConversationController.localVideoSupported.getter();
  LOBYTE(v68) = v85;
  v86 = *((_QWORD *)v81 + 1);
  v87 = swift_getObjectType();
  v88 = *(uint64_t (**)(uint64_t, uint64_t))(v86 + 304);
  swift_unknownObjectRetain();
  LOBYTE(v86) = v88(v87, v86);
  swift_unknownObjectRelease();
  swift_beginAccess();
  v153 = v68 & 1;
  v154 = v86 & 1;
  Published.init(initialValue:)();
  swift_endAccess();
  outlined init with copy of RadarReporting((uint64_t)v160, (uint64_t)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_entitlementsChecker]);
  v89 = &v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_defaults];
  v90 = v130;
  *(_QWORD *)v89 = v151;
  *((_QWORD *)v89 + 1) = v90;
  v91 = v147;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_featureFlags] = v147;
  *(_QWORD *)&v33[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_reactionNoticeHistory] = MEMORY[0x1E0DEE9D8];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();

  v92 = (objc_class *)type metadata accessor for ConversationControlsManager(0);
  v152.receiver = v33;
  v152.super_class = v92;
  v93 = objc_msgSendSuper2(&v152, sel_init);
  v94 = objc_allocWithZone((Class)type metadata accessor for ConduitApprovalDelegate());
  v95 = v93;
  ConduitApprovalDelegate.init(_:)();
  v96 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate;
  v97 = *(void **)((char *)v95 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate);
  *(_QWORD *)((char *)v95 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_approvalDelegate) = v98;

  v99 = objc_msgSend(v74, sel_neighborhoodActivityConduit);
  objc_msgSend(v99, sel_setApprovalDelegate_, *(_QWORD *)((char *)v95 + v96));

  if (objc_msgSend(v91, sel_lagunaEnabled))
  {
    v100 = OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_lagunaQueue;
    v101 = *(void **)((char *)v95 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_lagunaQueue);
    v102 = (void *)objc_opt_self();
    v103 = v95;
    v104 = v101;
    v105 = objc_msgSend(v102, sel_sharedInstance);
    v106 = objc_allocWithZone((Class)type metadata accessor for ConduitLagunaNoticeManager(0));
    v107 = ConduitLagunaNoticeManager.init(_:queue:callCenter:)((uint64_t)v103, (uint64_t)v104, (uint64_t)v105);
    v108 = objc_msgSend(v74, sel_neighborhoodActivityConduit);
    objc_msgSend(v108, sel_addDelegate_queue_, v107, v104);

    v109 = objc_msgSend(v74, sel_conversationManager);
    objc_msgSend(v109, sel_addDelegate_queue_, v107, *(_QWORD *)((char *)v95 + v100));

    v110 = (void **)((char *)v103
                   + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conduitLagunaNoticeManager);
    swift_beginAccess();
    v111 = *v110;
    *v110 = v107;

  }
  v112 = ConversationControlsManager.updateShareButtonState()();
  v113 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v95) + 0x960))(v112);
  ConversationControlsManager.setupConversationControllerObservers()();
  v114 = v146;
  (*(void (**)(void))((*v113 & **(_QWORD **)((char *)v95
                                           + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator))
                    + 0xA0))();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Published<Notice?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Notice?>.Publisher);
  v115 = v149;
  v116 = Publisher<>.sink(receiveValue:)();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v160);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v114, v115);
  *(_QWORD *)((char *)v95 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_activeNoticeCancellable) = v116;
  swift_release();
  return v95;
}

char *specialized ConversationControlsManager.__allocating_init(activeCall:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  char v14;
  char v15;
  char *v16;

  OUTLINED_FUNCTION_96();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (one-time initialization token for shared != -1)
    swift_once();
  v9 = (void *)static PlaceholderCallCenter.shared;
  v10 = objc_allocWithZone((Class)type metadata accessor for CallCenter());
  v11 = v9;
  v12 = (void *)OUTLINED_FUNCTION_630();
  v16 = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v12, v13, v14, v15);
  return specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(v7, v16, v5, v3, v1);
}

char *specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(void *a1, void *a2, uint64_t a3)
{
  void *v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  char *v26;
  id v27;
  void **v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _UNKNOWN **v37;
  uint64_t v38[2];
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  _UNKNOWN **v42;

  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  v42 = 0;
  v40 = 0u;
  v41 = 0u;
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v33, (uint64_t)&v39);
  v34 = 0;
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v33, (uint64_t)v38);
  v6 = (void *)objc_opt_self();
  swift_unknownObjectRetain();
  v7 = objc_msgSend(v6, sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  v8 = (_QWORD *)swift_allocObject();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  v36 = v9;
  v37 = &protocol witness table for TUIDSLookupManager;
  v33 = v7;
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v10 = MEMORY[0x1E0DEE9D8];
  v8[2] = Dictionary.init(dictionaryLiteral:)();
  v8[3] = Dictionary.init(dictionaryLiteral:)();
  v8[5] = 0;
  swift_unknownObjectWeakInit();
  v8[6] = v10;
  outlined init with copy of RadarReporting((uint64_t)&v33, (uint64_t)(v8 + 7));
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v11, sel_addObserver_selector_name_object_, v8, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E0DBD648], v33);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  if (one-time initialization token for shared != -1)
    swift_once();
  v12 = static Defaults.shared;
  v13 = objc_allocWithZone((Class)type metadata accessor for ConversationController(0));
  outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)&v39, (uint64_t)&v32);
  outlined init with copy of DefaultParticipantCaptionsProviderCreator((uint64_t)v38, (uint64_t)&v33);
  v14 = a2;
  swift_retain();
  specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)((uint64_t)a1, (uint64_t)v14, (uint64_t)&v32, (uint64_t)&v33, 0, (uint64_t)&v40, 0, (uint64_t)v8, v12, (uint64_t)v13, v31, v32, (uint64_t)v33, v34, v35, v36, (uint64_t)v37, v38[0], v38[1],
    v39,
    v40,
    *((_BYTE **)&v40 + 1));
  v16 = v15;
  outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v38);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)&v39);
  v17 = type metadata accessor for EntitlementsChecker();
  v18 = swift_allocObject();
  v19 = objc_allocWithZone(MEMORY[0x1E0DBD2F0]);
  v20 = v16;
  *(_QWORD *)(v18 + 16) = objc_msgSend(v19, sel_init);
  *((_QWORD *)&v41 + 1) = v17;
  v42 = &protocol witness table for EntitlementsChecker;
  *(_QWORD *)&v40 = v18;
  v21 = static Defaults.shared;
  v22 = (void *)objc_opt_self();
  swift_retain();
  v23 = objc_msgSend(v22, sel_sharedInstance);
  v24 = (void *)(*(uint64_t (**)(id, __int128 *, uint64_t, _UNKNOWN **, id, id))(a3 + 2416))(v20, &v40, v21, &protocol witness table for Defaults, v23, objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init));
  v25 = objc_allocWithZone(MEMORY[0x1E0CD73A8]);
  v26 = v24;
  v27 = objc_msgSend(v25, sel_init);

  v28 = (void **)&v26[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_contentExtractor];
  swift_beginAccess();
  v29 = *v28;
  *v28 = v27;

  return v26;
}

void partial apply for closure #1 in ConversationControlsManager.viewActivity(_:)(char a1)
{
  uint64_t v1;

  closure #1 in ConversationControlsManager.viewActivity(_:)(a1, v1);
}

char *specialized ConversationControlsManager.__allocating_init(activeCall:callCenter:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  char *v30;
  id v31;
  void **v32;
  void *v33;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _UNKNOWN **v41;
  uint64_t v42[2];
  _BYTE *v43;
  __int128 v44;
  __int128 v45;
  _UNKNOWN **v46;

  v46 = 0;
  v44 = 0u;
  v45 = 0u;
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)&v37, (uint64_t)&v43);
  v38 = 0;
  swift_unknownObjectWeakInit();
  outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)&v37, (uint64_t)v42);
  v10 = (void *)objc_opt_self();
  swift_unknownObjectRetain();
  v11 = objc_msgSend(v10, sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  v12 = (_QWORD *)swift_allocObject();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  v40 = v13;
  v41 = &protocol witness table for TUIDSLookupManager;
  v37 = v11;
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v14 = MEMORY[0x1E0DEE9D8];
  v12[2] = Dictionary.init(dictionaryLiteral:)();
  v12[3] = Dictionary.init(dictionaryLiteral:)();
  v12[5] = 0;
  swift_unknownObjectWeakInit();
  v12[6] = v14;
  outlined init with copy of RadarReporting((uint64_t)&v37, (uint64_t)(v12 + 7));
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v15, sel_addObserver_selector_name_object_, v12, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E0DBD648], v37);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
  if (one-time initialization token for shared != -1)
    swift_once();
  v16 = static Defaults.shared;
  v17 = objc_allocWithZone((Class)type metadata accessor for ConversationController(0));
  outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)&v43, (uint64_t)&v36);
  outlined init with copy of DefaultParticipantCaptionsProviderCreator((uint64_t)v42, (uint64_t)&v37);
  v18 = a2;
  swift_retain();
  specialized ConversationController.init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(a1, (uint64_t)v18, (uint64_t)&v36, (uint64_t)&v37, 0, (uint64_t)&v44, 0, (uint64_t)v12, v16, (uint64_t)v17, a4, a5, v35, v36, (uint64_t)v37, v38, v39, v40, (uint64_t)v41,
    v42[0],
    v42[1],
    v43,
    v44,
    *((uint64_t *)&v44 + 1));
  v20 = v19;
  outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v42);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)&v43);
  v21 = type metadata accessor for EntitlementsChecker();
  v22 = swift_allocObject();
  v23 = objc_allocWithZone(MEMORY[0x1E0DBD2F0]);
  v24 = v20;
  *(_QWORD *)(v22 + 16) = objc_msgSend(v23, sel_init);
  *((_QWORD *)&v45 + 1) = v21;
  v46 = &protocol witness table for EntitlementsChecker;
  *(_QWORD *)&v44 = v22;
  v25 = static Defaults.shared;
  v26 = (void *)objc_opt_self();
  swift_retain();
  v27 = objc_msgSend(v26, sel_sharedInstance);
  v28 = (void *)(*(uint64_t (**)(id, __int128 *, uint64_t, _UNKNOWN **, id, id))(a3 + 2416))(v24, &v44, v25, &protocol witness table for Defaults, v27, objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init));
  v29 = objc_allocWithZone(MEMORY[0x1E0CD73A8]);
  v30 = v28;
  v31 = objc_msgSend(v29, sel_init);

  swift_unknownObjectRelease();
  v32 = (void **)&v30[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_contentExtractor];
  swift_beginAccess();
  v33 = *v32;
  *v32 = v31;

  return v30;
}

void specialized ConversationControlsManager.post(notice:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_442();
  a21 = v22;
  a22 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  a13 = v32(0);
  a14 = v27;
  v33 = __swift_allocate_boxed_opaque_existential_1(&a10);
  OUTLINED_FUNCTION_467(v31, (uint64_t)v33);
  ((void (*)(uint64_t *, _QWORD))v25)(v33, *(_QWORD *)((char *)v29 + OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_noticeCoordinator));
  v34 = OUTLINED_FUNCTION_81_7(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v29) + 0x430));
  if (v34)
  {
    v35 = OUTLINED_FUNCTION_67_12();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 128))(&a10, v35, v25);
    v34 = OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_557(v34);
  OUTLINED_FUNCTION_10_10();
}

uint64_t specialized ConversationControlsManager.post(notice:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v10[5];

  v10[3] = a3;
  v10[4] = a4;
  __swift_allocate_boxed_opaque_existential_1(v10);
  (*(void (**)(void))(*(_QWORD *)(a3 - 8) + 16))();
  specialized ConversationControlsNoticeCoordinator.post(notice:)();
  if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x430))())
  {
    v7 = v6;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 128))(v10, ObjectType, v7);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t specialized ConversationControlsManager.presentActivity(activity:completion:)(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  unsigned int v22;
  id v23;
  id v24;
  unsigned __int8 v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  _QWORD aBlock[6];
  id v51[5];
  uint64_t v52;
  id v53[6];

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
  v53[3] = v7;
  v53[4] = &protocol witness table for TUConversationActivitySession;
  v53[0] = a1;
  v8 = one-time initialization token for conversationControls;
  v9 = a1;
  if (v8 != -1)
    swift_once();
  v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of RadarReporting((uint64_t)v53, (uint64_t)aBlock);
  v11 = Logger.logObject.getter();
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = a3;
    v15 = a4;
    v16 = swift_slowAlloc();
    v52 = v16;
    *(_DWORD *)v13 = 136315138;
    outlined init with copy of RadarReporting((uint64_t)aBlock, (uint64_t)v51);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    v17 = String.init<A>(describing:)();
    v51[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    _os_log_impl(&dword_1BD004000, v11, v12, "Launching activity: %s", v13, 0xCu);
    swift_arrayDestroy();
    v19 = v16;
    a4 = v15;
    a3 = v14;
    MEMORY[0x1C3B751B8](v19, -1, -1);
    MEMORY[0x1C3B751B8](v13, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  }

  v20 = v53[0];
  v21 = objc_msgSend(v53[0], sel_activity);
  v22 = objc_msgSend(v21, sel_isSupported);

  if (v22)
  {
    outlined init with copy of RadarReporting((uint64_t)v53, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v23 = v51[0];
      v24 = objc_msgSend(v51[0], sel_activity);
      v25 = objc_msgSend(v24, sel_isScreenSharingActivity);

      if ((v25 & 1) != 0 && objc_msgSend(v23, sel_isLocallyInitiated))
      {
        outlined init with copy of RadarReporting((uint64_t)v53, (uint64_t)aBlock);
        v26 = Logger.logObject.getter();
        v27 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc();
          v29 = swift_slowAlloc();
          v52 = v29;
          *(_DWORD *)v28 = 136315138;
          outlined init with copy of RadarReporting((uint64_t)aBlock, (uint64_t)v51);
          v30 = String.init<A>(describing:)();
          v51[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v52);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
          _os_log_impl(&dword_1BD004000, v26, v27, "Unsupported activity: %s, cannot open screenshare for host", v28, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v29, -1, -1);
          MEMORY[0x1C3B751B8](v28, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        }

        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
      }
      v40 = objc_msgSend(*(id *)((char *)a4+ OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_conversationManager);
      outlined init with copy of RadarReporting((uint64_t)v53, (uint64_t)v51);
      v46 = swift_allocObject();
      outlined init with take of Notice((__int128 *)v51, v46 + 16);
      *(_QWORD *)(v46 + 56) = a2;
      *(_QWORD *)(v46 + 64) = a3;
      aBlock[4] = partial apply for closure #1 in ConversationControlsManager.presentActivity(activity:completion:);
      aBlock[5] = v46;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
      aBlock[3] = &block_descriptor_385;
      v47 = _Block_copy(aBlock);
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
      swift_release();
      -[NSObject launchApplicationForActivitySession:completionHandler:](v40, sel_launchApplicationForActivitySession_completionHandler_, v23, v47);
      _Block_release(v47);

    }
    else
    {
      outlined init with copy of RadarReporting((uint64_t)v53, (uint64_t)aBlock);
      v40 = Logger.logObject.getter();
      v41 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v52 = v43;
        *(_DWORD *)v42 = 136315138;
        outlined init with copy of RadarReporting((uint64_t)aBlock, (uint64_t)v51);
        v44 = String.init<A>(describing:)();
        v51[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        _os_log_impl(&dword_1BD004000, v40, v41, "Activity: %s, is not a valid activity session", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v43, -1, -1);
        MEMORY[0x1C3B751B8](v42, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      }
    }

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  }
  outlined bridged method (ob) of @objc TUConversationActivity.bundleIdentifier.getter(objc_msgSend(v20, sel_activity));
  if (v32)
  {
    v33 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a4) + 0x7B0))();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {
      outlined init with copy of RadarReporting((uint64_t)v53, (uint64_t)aBlock);
      v34 = Logger.logObject.getter();
      v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v37 = swift_slowAlloc();
        v52 = v37;
        *(_DWORD *)v36 = 136315138;
        outlined init with copy of RadarReporting((uint64_t)aBlock, (uint64_t)v51);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
        v38 = String.init<A>(describing:)();
        v51[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, &v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        _os_log_impl(&dword_1BD004000, v34, v35, "Unsupported activity: %s, presenting App Store", v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v37, -1, -1);
        MEMORY[0x1C3B751B8](v36, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      }

      ConversationControlsManager.presentAppStore()();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
}

uint64_t specialized ConversationControlsManager.presentActivity(activity:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  char *v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  id v21;
  id v22;
  unsigned __int8 v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t *v48;
  uint64_t v49;
  _QWORD aBlock[6];
  id v52[5];
  uint64_t v53;
  uint64_t v54[6];

  v54[3] = a5;
  v54[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v54);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of RadarReporting((uint64_t)v54, (uint64_t)aBlock);
  v13 = Logger.logObject.getter();
  v14 = static os_log_type_t.default.getter();
  v15 = "rolsViewControllerDelegate";
  if (os_log_type_enabled(v13, v14))
  {
    v48 = boxed_opaque_existential_1;
    v49 = a3;
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v53 = v17;
    *(_DWORD *)v16 = 136315138;
    outlined init with copy of RadarReporting((uint64_t)aBlock, (uint64_t)v52);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    v18 = String.init<A>(describing:)();
    v52[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v15 = "ConversationControlsViewControllerDelegate" + 16;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    _os_log_impl(&dword_1BD004000, v13, v14, "Launching activity: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v17, -1, -1);
    v20 = v16;
    a3 = v49;
    MEMORY[0x1C3B751B8](v20, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  }

  if (((*(uint64_t (**)(uint64_t, uint64_t))(a6 + 40))(a5, a6) & 1) != 0)
  {
    outlined init with copy of RadarReporting((uint64_t)v54, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v21 = v52[0];
      v22 = objc_msgSend(v52[0], sel_activity);
      v23 = objc_msgSend(v22, sel_isScreenSharingActivity);

      if ((v23 & 1) != 0 && objc_msgSend(v21, sel_isLocallyInitiated))
      {
        outlined init with copy of RadarReporting((uint64_t)v54, (uint64_t)aBlock);
        v24 = Logger.logObject.getter();
        v25 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc();
          v27 = swift_slowAlloc();
          v53 = v27;
          *(_DWORD *)v26 = *((_QWORD *)v15 + 34);
          outlined init with copy of RadarReporting((uint64_t)aBlock, (uint64_t)v52);
          v28 = String.init<A>(describing:)();
          v52[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v53);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
          _os_log_impl(&dword_1BD004000, v24, v25, "Unsupported activity: %s, cannot open screenshare for host", v26, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v27, -1, -1);
          MEMORY[0x1C3B751B8](v26, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        }

        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      }
      v39 = objc_msgSend(*(id *)((char *)a4+ OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_callCenter), sel_conversationManager, v48);
      outlined init with copy of RadarReporting((uint64_t)v54, (uint64_t)v52);
      v45 = swift_allocObject();
      outlined init with take of Notice((__int128 *)v52, v45 + 16);
      *(_QWORD *)(v45 + 56) = a2;
      *(_QWORD *)(v45 + 64) = a3;
      aBlock[4] = closure #1 in ConversationControlsManager.presentActivity(activity:completion:)partial apply;
      aBlock[5] = v45;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
      aBlock[3] = &block_descriptor_428;
      v46 = _Block_copy(aBlock);
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
      swift_release();
      -[NSObject launchApplicationForActivitySession:completionHandler:](v39, sel_launchApplicationForActivitySession_completionHandler_, v21, v46);
      _Block_release(v46);

    }
    else
    {
      outlined init with copy of RadarReporting((uint64_t)v54, (uint64_t)aBlock);
      v39 = Logger.logObject.getter();
      v40 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        v42 = swift_slowAlloc();
        v53 = v42;
        *(_DWORD *)v41 = *((_QWORD *)v15 + 34);
        outlined init with copy of RadarReporting((uint64_t)aBlock, (uint64_t)v52);
        v43 = String.init<A>(describing:)();
        v52[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, &v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        _os_log_impl(&dword_1BD004000, v39, v40, "Activity: %s, is not a valid activity session", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v42, -1, -1);
        MEMORY[0x1C3B751B8](v41, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      }
    }

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  }
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 32))(a5, a6);
  if (v31)
  {
    v32 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a4) + 0x7B0))(v30);
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
    {
      outlined init with copy of RadarReporting((uint64_t)v54, (uint64_t)aBlock);
      v33 = Logger.logObject.getter();
      v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = swift_slowAlloc();
        v53 = v36;
        *(_DWORD *)v35 = *((_QWORD *)v15 + 34);
        outlined init with copy of RadarReporting((uint64_t)aBlock, (uint64_t)v52);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
        v37 = String.init<A>(describing:)();
        v52[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, &v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        _os_log_impl(&dword_1BD004000, v33, v34, "Unsupported activity: %s, presenting App Store", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v36, -1, -1);
        MEMORY[0x1C3B751B8](v35, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      }

      ConversationControlsManager.presentAppStore()();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
}

void sub_1BD292F80()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x4D8))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD292FB4(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  ConversationControlsManager.shouldOpenMessages.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD292FD0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x508))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD293004(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  ConversationControlsManager.shouldEnableStartingStagedActivity.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD293020()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x580))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD293060()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x5E0))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD293094(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_65_6(a1);
  ConversationControlsManager.localAudioEnabled.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2930B8()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x698))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2930EC()
{
  ConversationControlsManager.pttChannelState.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD29310C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x6C8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD293140()
{
  ConversationControlsManager.pttChannelTransmissionMode.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD293160()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x778))();
  OUTLINED_FUNCTION_0();
}

uint64_t outlined assign with copy of ForegroundCollaborationState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForegroundCollaborationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1BD2931DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_1_0();
  *(_QWORD *)v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x7F0))();
  *(_QWORD *)(v0 + 8) = v2;
  *(_BYTE *)(v0 + 16) = v3;
  OUTLINED_FUNCTION_0();
}

void sub_1BD293218()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x930))();
  OUTLINED_FUNCTION_0();
}

uint64_t specialized CoalescingNoticeQueue.push(notice:)(uint64_t a1, uint64_t *a2)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[5];
  uint64_t v42[3];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[6];

  v49[3] = type metadata accessor for ReactionNotice(0);
  v49[4] = (uint64_t)&protocol witness table for ReactionNotice;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v49);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for ReactionNotice);
  v5 = *a2;
  v6 = MEMORY[0x1E0DEE9D8];
  v42[0] = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  if (v7)
  {
    v8 = 0;
    v9 = v5 + 32;
    while (v8 < *(_QWORD *)(v5 + 16))
    {
      outlined init with copy of RadarReporting(v9, (uint64_t)&v46);
      v10 = v47;
      v11 = v48;
      __swift_project_boxed_opaque_existential_1(&v46, v47);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11) & 1) != 0)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
      }
      else
      {
        outlined init with take of Notice(&v46, (uint64_t)&v43);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v12 = v42[0];
        v13 = *(_QWORD *)(v42[0] + 16);
        if (v13 >= *(_QWORD *)(v42[0] + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v12 = v42[0];
        }
        *(_QWORD *)(v12 + 16) = v13 + 1;
        outlined init with take of Notice(&v43, v12 + 40 * v13 + 32);
      }
      ++v8;
      v9 += 40;
      if (v7 == v8)
      {
        v6 = v42[0];
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v6;
  specialized BidirectionalCollection.last.getter(v6, (uint64_t)&v43);
  if (!v44)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v43, (uint64_t *)&demangling cache variable for type metadata for Notice?);
LABEL_20:
    outlined init with copy of RadarReporting((uint64_t)v49, (uint64_t)&v46);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v27 = *(_QWORD *)(*a2 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v27);
    v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v46, v47);
    MEMORY[0x1E0C80A78](v28);
    v30 = (char *)v41 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v30);
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, (uint64_t)v30, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  }
  outlined init with take of Notice(&v43, (uint64_t)&v46);
  v14 = v47;
  v15 = v48;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v46, v47);
  if (((*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v15 + 208))(v49, v14, v15) & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    goto LABEL_20;
  }
  if (one-time initialization token for conversationControls != -1)
LABEL_25:
    swift_once();
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
  outlined init with copy of RadarReporting((uint64_t)v49, (uint64_t)&v43);
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v42[0] = v20;
    *(_DWORD *)v19 = 136315394;
    __swift_project_boxed_opaque_existential_1(&v43, v44);
    v21 = ReactionNotice.description.getter();
    v41[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
    *(_WORD *)(v19 + 12) = 2080;
    swift_beginAccess();
    v23 = v47;
    v24 = v48;
    __swift_project_boxed_opaque_existential_1(&v46, v47);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 120))(v23, v24);
    v41[1] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v17, v18, "Coalesced notice:%s into existingNotice:%s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v20, -1, -1);
    MEMORY[0x1C3B751B8](v19, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }

  specialized RangeReplaceableCollection<>.removeLast()();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  swift_beginAccess();
  outlined init with copy of RadarReporting((uint64_t)&v46, (uint64_t)&v43);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v32 = *(_QWORD *)(*a2 + 16);
  specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
  v33 = v44;
  v34 = v45;
  v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v43, v44);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v38 + 16))(v37);
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, (uint64_t)v37, a2, v33, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  v39 = *a2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  *a2 = v39;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  v10 = type metadata accessor for ReactionNotice(0);
  v11 = &protocol witness table for ReactionNotice;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  outlined init with take of StagedCollaboration(a2, (uint64_t)boxed_opaque_existential_1, type metadata accessor for ReactionNotice);
  v7 = *a3;
  *(_QWORD *)(v7 + 16) = a1 + 1;
  return outlined init with take of Notice(&v9, v7 + 40 * a1 + 32);
}

uint64_t specialized ConversationControlsManager.shouldShowCollaborationNotice(for:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  int v8;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;

  v4 = type metadata accessor for Collaboration(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v6, v7);
  v8 = v6[16];
  if (v8 == 2 || v8 == 3)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for Collaboration);
    return 0;
  }
  if (v6[*(int *)(v4 + 48)] == 1
    && (v10 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x290))()) != 0)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_resolvedAudioVideoMode);

    outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for Collaboration);
    if (v12 == (id)1)
      return 0;
  }
  else
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for Collaboration);
  }
  return 1;
}

uint64_t specialized ConversationControlsManager.shouldShowCollaborationNotice(for:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Collaboration(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a4 + 112))(a3, a4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Collaboration?);
    return 1;
  }
  outlined init with take of StagedCollaboration((uint64_t)v9, (uint64_t)v12, type metadata accessor for Collaboration);
  v14 = v12[16];
  if (v14 == 2 || v14 == 3)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for Collaboration);
  }
  else
  {
    if (v12[*(int *)(v10 + 48)] != 1
      || (v15 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x290))()) == 0)
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for Collaboration);
      return 1;
    }
    v16 = v15;
    v17 = objc_msgSend(v15, sel_resolvedAudioVideoMode);

    outlined destroy of AccountUpdateNotice((uint64_t)v12, type metadata accessor for Collaboration);
    if (v17 != (id)1)
      return 1;
  }
  return 0;
}

uint64_t type metadata accessor for ConversationControlsManager(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConversationControlsManager);
}

uint64_t sub_1BD293B00()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)()
{
  uint64_t v0;

  closure #1 in ConduitLagunaNoticeManager.systemBannerWasDismissed(for:reason:)(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BD293B28()
{
  return objectdestroy_84Tm();
}

uint64_t partial apply for closure #1 in ConversationControlsManager.updateForegroundCollaborationState()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_378(v1);
  return closure #1 in ConversationControlsManager.updateForegroundCollaborationState()(v2, v3, v4, v5);
}

void partial apply for closure #1 in ConversationControlsManager.openApp(withBundleIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in ConversationControlsManager.openApp(withBundleIdentifier:)(a1, a2, v2);
}

void partial apply for closure #1 in ConversationControlsManager.openMessagesButtonTapped()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in ConversationControlsManager.openMessagesButtonTapped()(a1, v1);
}

uint64_t sub_1BD293BA0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsManager.noticeTapped(notice:isSystemAperturePresentation:)(char a1)
{
  uint64_t v1;

  closure #1 in ConversationControlsManager.noticeTapped(notice:isSystemAperturePresentation:)(a1, *(_QWORD *)(v1 + 16), v1 + 24, *(_BYTE *)(v1 + 64));
}

uint64_t sub_1BD293BD8()
{
  return objectdestroy_98Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void partial apply for closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(char a1)
{
  uint64_t v1;

  closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(a1, *(void (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void partial apply for closure #2 in ConversationControlsManager.appLaunchButtonTapped(completion:)(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  if ((a1 & 1) != 0)
  {
    v2 = *(uint64_t (**)(uint64_t))(v1 + 16);
    if (v2)
      OUTLINED_FUNCTION_419(v2);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD293C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_470();
  OUTLINED_FUNCTION_285();
  if (*(_QWORD *)(v1 + 24))
    OUTLINED_FUNCTION_76();

  v3 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_96_1(*(_QWORD *)(v3 - 8));
  OUTLINED_FUNCTION_267_0();
  OUTLINED_FUNCTION_267_0();
  OUTLINED_FUNCTION_458(*(int *)(v0 + 36));
  OUTLINED_FUNCTION_458(*(int *)(v0 + 40));
  OUTLINED_FUNCTION_579();
  OUTLINED_FUNCTION_487();
  return OUTLINED_FUNCTION_17_33();
}

void partial apply for closure #1 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_11_19();
  closure #1 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), v0 + v2, *(_QWORD *)(v0 + v1));
}

uint64_t sub_1BD293CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_470();
  v3 = (v2 + 56) & ~v2;
  v5 = (((*(_QWORD *)(v4 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_109_8();

  v6 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_75(v6);
  OUTLINED_FUNCTION_267_0();
  OUTLINED_FUNCTION_267_0();
  OUTLINED_FUNCTION_458(*(int *)(v0 + 36));
  OUTLINED_FUNCTION_458(*(int *)(v0 + 40));
  swift_release();
  if (*(_QWORD *)(v1 + v5))
    swift_release();
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_205() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1[3];
  v14 = v1[2];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (uint64_t)v1 + v4;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = swift_task_alloc();
  v12 = (_QWORD *)OUTLINED_FUNCTION_61_5(v11);
  *v12 = v2;
  v12[1] = partial apply for closure #1 in ConversationControlsManager.updateForegroundCollaborationState();
  return closure #2 in ConversationControlsManager.initiateBackgroundCollaboration(forDisclosedInitiator:completion:)(a1, v14, v5, v6, v7, v8, v9, v10);
}

uint64_t partial apply for closure #1 in ConversationControlsManager.acceptScreenShareRequestTapped(button:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ConversationControlsManager.acceptScreenShareRequestTapped(button:)(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in ConversationControlsManager.cancelScreenShareRequestTapped(button:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ConversationControlsManager.cancelScreenShareRequestTapped(button:)(v2, v3, v4, v5);
}

void partial apply for closure #1 in ConversationControlsManager.pttLeaveButtonTapped(button:)(char a1)
{
  uint64_t v1;

  closure #1 in ConversationControlsManager.pttLeaveButtonTapped(button:)(a1, v1);
}

uint64_t sub_1BD293F44()
{
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void partial apply for closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(a1, a2, v2);
}

uint64_t partial apply for closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ConversationControlsManager.rejectCallButtonTapped(button:)(v2, v3, v4, v5);
}

void partial apply for closure #1 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  closure #1 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, a2, a3, a4, v4);
}

void partial apply for closure #2 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(char a1)
{
  _QWORD *v1;

  closure #2 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, v1);
}

uint64_t partial apply for closure #3 in ConversationControlsManager.setupConversationControllerLocalStateObservers()()
{
  uint64_t v0;

  return closure #3 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(v0);
}

void partial apply for closure #4 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(void *a1)
{
  _QWORD *v1;

  closure #4 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, v1);
}

void partial apply for closure #5 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(char a1)
{
  char *v1;

  closure #5 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, v1);
}

void partial apply for closure #6 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1)
{
  uint64_t v1;

  closure #6 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, v1);
}

void partial apply for closure #7 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #7 in ConversationControlsManager.setupConversationControllerLocalStateObservers()(a1, a2, v2);
}

void partial apply for closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, a2, v2);
}

void partial apply for closure #2 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(char a1)
{
  _QWORD *v1;

  closure #2 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, v1);
}

void partial apply for closure #3 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1)
{
  uint64_t v1;

  closure #3 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, v1);
}

uint64_t partial apply for closure #4 in ConversationControlsManager.setupConversationControllerConversationStateObservers()()
{
  return closure #4 in ConversationControlsManager.setupConversationControllerConversationStateObservers()();
}

void partial apply for closure #6 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  closure #6 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, a2, a3, v3);
}

void partial apply for closure #7 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(uint64_t a1, char a2)
{
  uint64_t v2;

  closure #7 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, a2 & 1, v2);
}

void partial apply for closure #8 in ConversationControlsManager.setupConversationControllerConversationStateObservers()()
{
  uint64_t v0;

  closure #8 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(v0);
}

void partial apply for closure #9 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(void *a1, uint64_t a2)
{
  uint64_t v2;

  closure #9 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, a2, v2);
}

void partial apply for closure #10 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(char a1)
{
  uint64_t v1;

  closure #10 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(a1, v1);
}

void partial apply for closure #1 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void partial apply for closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void partial apply for closure #4 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1)
{
  _QWORD *v1;

  closure #4 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, v1);
}

void partial apply for closure #5 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  closure #5 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void partial apply for closure #6 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #6 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void partial apply for closure #7 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #7 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void partial apply for closure #8 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #8 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void partial apply for closure #9 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1)
{
  uint64_t v1;

  closure #9 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, v1);
}

void partial apply for closure #10 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, char a2)
{
  uint64_t v2;

  closure #10 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, v2);
}

void partial apply for closure #11 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1)
{
  uint64_t v1;

  closure #11 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, v1);
}

void partial apply for closure #12 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  closure #12 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(a1, a2, a3, v3);
}

void partial apply for closure #1 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(unint64_t a1)
{
  _QWORD *v1;

  closure #1 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(a1, v1);
}

void partial apply for closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(a1, a2, a3, v3);
}

void partial apply for closure #3 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  closure #3 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(a1, a2, a3, v3);
}

void partial apply for closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1)
{
  uint64_t v1;

  closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(a1, v1);
}

void partial apply for closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  uint64_t v5;

  closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(a1, a2, a3, a4, a5 & 1, v5);
}

void partial apply for closure #1 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  _QWORD *v1;

  closure #1 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #2 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  uint64_t v1;

  closure #2 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #3 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  _QWORD *v1;

  closure #3 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #4 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  uint64_t v1;

  closure #4 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #5 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  uint64_t v1;

  closure #5 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #6 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1)
{
  uint64_t v1;

  closure #6 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #7 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(char a1)
{
  uint64_t v1;

  closure #7 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, v1);
}

void partial apply for closure #8 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #8 in ConversationControlsManager.setupConversationControllerGondolaStateObservers()(a1, a2, v2);
}

uint64_t sub_1BD29415C()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_109_8();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)()
{
  uint64_t v0;

  closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1BD294198()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConduitApprovalDelegate.cancelSplitSessionApproval()()
{
  uint64_t v0;

  closure #1 in ConduitApprovalDelegate.cancelSplitSessionApproval()(*(char **)(v0 + 16));
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:splitSessionStarted:)()
{
  uint64_t v0;

  closure #1 in ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:splitSessionStarted:)(*(_QWORD **)(v0 + 16));
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.neighborhoodActivityConduit(_:suggestionUpdated:)()
{
  ConduitLagunaNoticeManager.updateState()();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD2941DC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_109_8();

  OUTLINED_FUNCTION_41_13();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.conversationManager(_:stateChangedFor:fromOldConversation:)()
{
  uint64_t v0;

  closure #1 in ConduitLagunaNoticeManager.conversationManager(_:stateChangedFor:fromOldConversation:)(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BD294210()
{
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.conversationManager(_:remoteMembersChangedFor:)()
{
  uint64_t v0;

  closure #1 in ConduitLagunaNoticeManager.conversationManager(_:remoteMembersChangedFor:)(*(_QWORD **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1BD294238()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_668(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294268()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x2C0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2942A0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x2F0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2942D8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x308))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294310()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x328))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294344(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x330))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294374()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x370))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2943A8(_QWORD *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x378))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2943E0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x388))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294414(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x390))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294444()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x3A0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD29447C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x3D0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2944B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_131_4(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD2944E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_129_3(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD294510()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x418))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD294548()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_109_9(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD294578()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_204_0(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD2945A8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x460))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2945E0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x478))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294618()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x490))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD294650()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_411(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294680()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x4F0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2946B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, (void (*)(uint64_t))ConversationControlsManager.$shouldOpenMessages.setter);
}

void sub_1BD2946D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x520))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, (void (*)(uint64_t))ConversationControlsManager.$shouldEnableStartingStagedActivity.setter);
}

void sub_1BD294728()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x538))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294760()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x550))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294798()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x568))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2947D0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x598))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for Published<TURoute?>.Publisher, (void (*)(uint64_t))ConversationControlsManager.$audioRoute.setter);
}

void sub_1BD294824()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x5C8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for Published<TUCallBluetoothAudioFormat?>.Publisher, (void (*)(uint64_t))ConversationControlsManager.$bluetoothAudioFormat.setter);
}

void sub_1BD294878()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x5F8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2948A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, (void (*)(uint64_t))ConversationControlsManager.$localAudioEnabled.setter);
}

void sub_1BD2948CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x628))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2948FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for Published<ControlsActionState>.Publisher, (void (*)(uint64_t))ConversationControlsManager.$localVideoButtonState.setter);
}

void sub_1BD294928()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x658))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD29495C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x660))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD29498C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x6B0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2949BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<ConversationControlsManager.PushToTalkChannelState>.Publisher, (void (*)(uint64_t))ConversationControlsManager.$pttChannelState.setter);
}

void sub_1BD2949E0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x6E0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ConversationControlsManager.$shouldOpenMessages : ConversationControlsManager(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for Published<TUCallTransmissionMode>.Publisher, (void (*)(uint64_t))ConversationControlsManager.$pttChannelTransmissionMode.setter);
}

void sub_1BD294A34()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x6F8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294A6C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x790))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294AA0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x7D8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294AD4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x808))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294B08()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x820))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294B3C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x828))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294B6C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x850))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294BA0(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  ConversationControlsManager.isWaitingOnFirstRemoteFrame.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294BBC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x868))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294BF0(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  ConversationControlsManager.shouldShowAVLessLeaveConfirmation.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294C0C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x8B0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294C44()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x918))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294C78(_QWORD *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x920))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD294CB0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x948))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294CE4()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x9D8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD294D1C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xA18))();
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of SystemBannerPresenter.presentBanner(as:type:reply:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of SystemBannerPresenter.dismissPresentedBanner(forReason:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of SystemBannerPresenter.getConversationControlsTypeForPresentedBanner()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.updatePresentedHUD(type:replacingNotice:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.updatePresentedHUDCornerRadius()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.dismissPresentedBanner(forReason:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.invalidatePersistentSystemApertureAlert(reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.requestEphemeralSystemApertureAlert(reason:shouldOverridePersistentAssertion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.requestPersistentSystemApertureAlert(reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of SystemConversationControlsDelegate.presentShareCardViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of SystemAudioConversationControlsDelegate.presentShareCardViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.layoutStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.isFullScreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.updateInCallConversationControls(type:showControlsIfHidden:forceUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.dismissControls()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.handleToggleLayoutAction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.handleUserDidToggleCaptions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.didAcceptCall()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.presentCallDetails()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.didRequestPostNotice(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.presentShareCardViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of InCallConversationControlsDelegate.closeVideoMessageCallBack()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of ConversationControlsDismissalTimerDelegate.invalidateAndRescheduleTimer(reschedule:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.updated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.update(participant:isKickingAvailable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.update(with:updateReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ConversationControlsDetailsViewControllerDelegate.updateRemoteAudioPaused(audioPaused:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

void destroy for ControlsHUDUpdate(uint64_t a1)
{
  switch(*(_BYTE *)(a1 + 40))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1(a1);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for ControlsHUDUpdate(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  char v6;
  void *v7;
  id v8;
  uint64_t v9;
  __int128 v10;

  switch(*(_BYTE *)(a2 + 40))
  {
    case 0:
      v4 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
      break;
    case 1:
      v5 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v5;
      v6 = 1;
      goto LABEL_6;
    case 2:
      v7 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 2;
      v8 = v7;
      break;
    case 3:
      v9 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v9;
      v6 = 3;
LABEL_6:
      *(_BYTE *)(a1 + 40) = v6;
      swift_bridgeObjectRetain();
      break;
    case 5:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 40) = 5;
      swift_unknownObjectRetain();
      break;
    default:
      v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      break;
  }
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for ControlsHUDUpdate(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  id v7;
  __int128 v8;
  __int128 v9;

  if ((__int128 *)a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1);
    switch(*((_BYTE *)a2 + 40))
    {
      case 0:
        v4 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v4;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
        *(_BYTE *)(a1 + 40) = 0;
        break;
      case 1:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v5 = 1;
        goto LABEL_7;
      case 2:
        v6 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 40) = 2;
        v7 = v6;
        break;
      case 3:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v5 = 3;
LABEL_7:
        *(_BYTE *)(a1 + 40) = v5;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 40) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        v8 = *a2;
        v9 = a2[1];
        *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
        *(_OWORD *)a1 = v8;
        *(_OWORD *)(a1 + 16) = v9;
        break;
    }
  }
  *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
  *(_BYTE *)(a1 + 42) = *((_BYTE *)a2 + 42);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  return a1;
}

uint64_t assignWithTake for ControlsHUDUpdate(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1);
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlsHUDUpdate(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 56))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 41);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlsHUDUpdate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlsHUDUpdate()
{
  return &type metadata for ControlsHUDUpdate;
}

uint64_t ObjC metadata update function for ConversationControlsManager()
{
  return type metadata accessor for ConversationControlsManager(0);
}

void type metadata completion function for ConversationControlsManager()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  type metadata accessor for Published<Bool>(319, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<TURoute?>(319, &lazy cache variable for type metadata for Published<TURoute?>, &demangling cache variable for type metadata for TURoute?);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<TURoute?>(319, (unint64_t *)&lazy cache variable for type metadata for Published<TUCallBluetoothAudioFormat?>, (uint64_t *)&demangling cache variable for type metadata for TUCallBluetoothAudioFormat?);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<ControlsActionState>);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Published<Bool>(319, (unint64_t *)&lazy cache variable for type metadata for Published<ConversationControlsManager.PushToTalkChannelState>);
          if (v4 <= 0x3F)
          {
            type metadata accessor for Published<TUCallTransmissionMode>(319, &lazy cache variable for type metadata for Published<TUCallTransmissionMode>, (uint64_t (*)(uint64_t))type metadata accessor for TUCallTransmissionMode, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
            if (v5 <= 0x3F)
            {
              type metadata accessor for Published<TURoute?>(319, (unint64_t *)&lazy cache variable for type metadata for Published<ForegroundApp?>, (uint64_t *)&demangling cache variable for type metadata for ForegroundApp?);
              if (v6 <= 0x3F)
              {
                type metadata accessor for Cache<String, [ConversationControlsManager.CollaborationPrompt]>();
                if (v7 <= 0x3F)
                {
                  type metadata accessor for ForegroundCollaborationState(319);
                  if (v8 <= 0x3F)
                  {
                    type metadata accessor for Published<TURoute?>(319, &lazy cache variable for type metadata for Published<EphemeralAlert?>, &demangling cache variable for type metadata for EphemeralAlert?);
                    if (v9 <= 0x3F)
                    {
                      type metadata accessor for Published<TUCallTransmissionMode>(319, (unint64_t *)&lazy cache variable for type metadata for Date?, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                      if (v10 <= 0x3F)
                      {
                        type metadata accessor for Published<TUCallTransmissionMode>(319, &lazy cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>, type metadata accessor for ConversationControlsAppLaunchButtonType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
                        if (v11 <= 0x3F)
                          swift_updateClassMetadata2();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for ConversationControlsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsManager.activeCall.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of ConversationControlsManager.callUUID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of ConversationControlsManager.hasMultipleCalls.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of ConversationControlsManager.activeBannerIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of ConversationControlsManager.conversation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of ConversationControlsManager.ignoredScreenSharingRequestUUIDs.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of ConversationControlsManager.ignoredScreenSharingRequestUUIDs.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of ConversationControlsManager.ignoredScreenSharingRequestUUIDs.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of ConversationControlsManager.mostRecentActiveConversation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.localParticipant.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of ConversationControlsManager.initiallyActiveParticipantIdentifiers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of ConversationControlsManager.initiallyActiveParticipantIdentifiers.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of ConversationControlsManager.initiallyActiveParticipantIdentifiers.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of ConversationControlsManager.countdownController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.countdownController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.countdownController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x300))();
}

uint64_t dispatch thunk of ConversationControlsManager.contentExtractor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x308))();
}

uint64_t dispatch thunk of ConversationControlsManager.contentExtractor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x310))();
}

uint64_t dispatch thunk of ConversationControlsManager.contentExtractor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x318))();
}

uint64_t dispatch thunk of ConversationControlsManager.conversationIsAVLess.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x320))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowCallDetailsWhenReady.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x328))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowCallDetailsWhenReady.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x330))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowCallDetailsWhenReady.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x338))();
}

uint64_t dispatch thunk of ConversationControlsManager.minReactionCountForNotice.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x370))();
}

uint64_t dispatch thunk of ConversationControlsManager.minReactionCountForNotice.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x378))();
}

uint64_t dispatch thunk of ConversationControlsManager.minReactionCountForNotice.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x380))();
}

uint64_t dispatch thunk of ConversationControlsManager.canPostReactionNotice.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of ConversationControlsManager.canPostReactionNotice.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x390))();
}

uint64_t dispatch thunk of ConversationControlsManager.canPostReactionNotice.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x398))();
}

uint64_t dispatch thunk of ConversationControlsManager.videoTileConversationController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A0))();
}

uint64_t dispatch thunk of ConversationControlsManager.videoTileConversationController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A8))();
}

uint64_t dispatch thunk of ConversationControlsManager.videoTileConversationController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.callControlsService.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3D0))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemBannerPresenter.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3E8))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemBannerPresenter.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemBannerPresenter.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemConversationControlsDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x400))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemConversationControlsDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x408))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemConversationControlsDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x410))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemAudioConversationControlsDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x418))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemAudioConversationControlsDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x420))();
}

uint64_t dispatch thunk of ConversationControlsManager.systemAudioConversationControlsDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x428))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallConversationControlsDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x430))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallConversationControlsDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x438))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallConversationControlsDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x440))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallDetailsViewControllerDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x448))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallDetailsViewControllerDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x450))();
}

uint64_t dispatch thunk of ConversationControlsManager.inCallDetailsViewControllerDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x458))();
}

uint64_t dispatch thunk of ConversationControlsManager.audioRoutingDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x460))();
}

uint64_t dispatch thunk of ConversationControlsManager.audioRoutingDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x468))();
}

uint64_t dispatch thunk of ConversationControlsManager.audioRoutingDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x470))();
}

uint64_t dispatch thunk of ConversationControlsManager.localAudioTogglingDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x478))();
}

uint64_t dispatch thunk of ConversationControlsManager.localAudioTogglingDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x480))();
}

uint64_t dispatch thunk of ConversationControlsManager.localAudioTogglingDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x488))();
}

uint64_t dispatch thunk of ConversationControlsManager.handoffCompletedDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x490))();
}

uint64_t dispatch thunk of ConversationControlsManager.handoffCompletedDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x498))();
}

uint64_t dispatch thunk of ConversationControlsManager.handoffCompletedDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4A0))();
}

uint64_t dispatch thunk of ConversationControlsManager.conduitLagunaNoticeManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4C0))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldOpenMessages.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4D8))();
}

uint64_t dispatch thunk of ConversationControlsManager.$shouldOpenMessages.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x4F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldEnableStartingStagedActivity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x508))();
}

uint64_t dispatch thunk of ConversationControlsManager.$shouldEnableStartingStagedActivity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x520))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x538))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x540))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x548))();
}

uint64_t dispatch thunk of ConversationControlsManager.bannerActivityManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x550))();
}

uint64_t dispatch thunk of ConversationControlsManager.bannerActivityManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x558))();
}

uint64_t dispatch thunk of ConversationControlsManager.bannerActivityManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x560))();
}

uint64_t dispatch thunk of ConversationControlsManager.incomingScreenSharingRequestActivity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x568))();
}

uint64_t dispatch thunk of ConversationControlsManager.incomingScreenSharingRequestActivity.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x570))();
}

uint64_t dispatch thunk of ConversationControlsManager.incomingScreenSharingRequestActivity.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x578))();
}

uint64_t dispatch thunk of ConversationControlsManager.audioRoute.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x580))();
}

uint64_t dispatch thunk of ConversationControlsManager.$audioRoute.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x598))();
}

uint64_t dispatch thunk of ConversationControlsManager.bluetoothAudioFormat.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.$bluetoothAudioFormat.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5C8))();
}

uint64_t dispatch thunk of ConversationControlsManager.localAudioEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5E0))();
}

uint64_t dispatch thunk of ConversationControlsManager.$localAudioEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x5F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.localVideoButtonState.getter()
{
  _QWORD *v0;
  __int16 v1;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x610))();
  return v1 & 1 | ((HIBYTE(v1) & 1) << 8);
}

uint64_t dispatch thunk of ConversationControlsManager.$localVideoButtonState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x628))();
}

uint64_t dispatch thunk of ConversationControlsManager.shareMenuButtonState.getter()
{
  _QWORD *v0;
  __int16 v1;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x640))();
  return v1 & 1 | ((HIBYTE(v1) & 1) << 8);
}

uint64_t dispatch thunk of ConversationControlsManager.shareMenuButtonState.setter(__int16 a1, uint64_t a2, __int16 a3)
{
  _QWORD *v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x648))(a1 & 0x101, a2, a3 & 0x101);
}

uint64_t dispatch thunk of ConversationControlsManager.shareMenuButtonState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x650))();
}

uint64_t dispatch thunk of ConversationControlsManager.screenSharingAvailable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x658))();
}

uint64_t dispatch thunk of ConversationControlsManager.screenSharingAvailable.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x660))();
}

uint64_t dispatch thunk of ConversationControlsManager.screenSharingAvailable.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x668))();
}

uint64_t dispatch thunk of ConversationControlsManager.shareMenuButtonStatePublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x670))();
}

uint64_t dispatch thunk of ConversationControlsManager.screenSharingAvailablePublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x678))();
}

uint64_t dispatch thunk of ConversationControlsManager.pttChannelState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x698))();
}

uint64_t dispatch thunk of ConversationControlsManager.$pttChannelState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x6B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.pttChannelTransmissionMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x6C8))();
}

uint64_t dispatch thunk of ConversationControlsManager.$pttChannelTransmissionMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x6E0))();
}

uint64_t dispatch thunk of ConversationControlsManager.pttViewModel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x6F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.isConfirmLeavePTTChannelAlertPresented.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x770))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundApp.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x778))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundApp.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x780))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundApp.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x788))();
}

uint64_t dispatch thunk of ConversationControlsManager.$foregroundApp.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x790))();
}

uint64_t dispatch thunk of ConversationControlsManager.$foregroundApp.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x798))();
}

uint64_t dispatch thunk of ConversationControlsManager.$foregroundApp.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x7A0))();
}

uint64_t dispatch thunk of ConversationControlsManager.refreshShareableContentWithBundleIdentifier(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x7A8))();
}

uint64_t dispatch thunk of ConversationControlsManager.isAppUnsupportedOnSharePlayPlatform(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x7B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundCollaborationState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x7D8))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundCollaborationState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x7E0))();
}

uint64_t dispatch thunk of ConversationControlsManager.foregroundCollaborationState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x7E8))();
}

uint64_t dispatch thunk of ConversationControlsManager.ephemeralAlert.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x7F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.ephemeralAlert.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x7F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.ephemeralAlert.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x800))();
}

uint64_t dispatch thunk of ConversationControlsManager.$ephemeralAlert.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x808))();
}

uint64_t dispatch thunk of ConversationControlsManager.$ephemeralAlert.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x810))();
}

uint64_t dispatch thunk of ConversationControlsManager.$ephemeralAlert.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x818))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowDelayedLMIBanner.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x820))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowDelayedLMIBanner.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x828))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowDelayedLMIBanner.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x830))();
}

uint64_t dispatch thunk of ConversationControlsManager.gridLayoutStyle.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x838))();
}

uint64_t dispatch thunk of ConversationControlsManager.controlsMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x840))();
}

uint64_t dispatch thunk of ConversationControlsManager.conversationHUDType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x848))();
}

uint64_t dispatch thunk of ConversationControlsManager.isWaitingOnFirstRemoteFrame.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x850))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowAVLessLeaveConfirmation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x868))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityLaunchTimer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityLaunchTimer.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8B8))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityLaunchTimer.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8C0))();
}

uint64_t dispatch thunk of ConversationControlsManager.currentActivity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8C8))();
}

uint64_t dispatch thunk of ConversationControlsManager.currentSharePlayActivity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8D0))();
}

uint64_t dispatch thunk of ConversationControlsManager.stagedSharePlayActivity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8D8))();
}

uint64_t dispatch thunk of ConversationControlsManager.currentOrStagedSharePlayActivity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8E0))();
}

uint64_t dispatch thunk of ConversationControlsManager.currentCollaboration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8E8))();
}

uint64_t dispatch thunk of ConversationControlsManager.stagedCollaboration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.stagedOrCurrentCollaboration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x8F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.activityToShowInHUD.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x900))();
}

uint64_t dispatch thunk of ConversationControlsManager.remoteParticipants.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x908))();
}

uint64_t dispatch thunk of ConversationControlsManager.shouldShowSharePlayActivityInHUD(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x910))();
}

uint64_t dispatch thunk of ConversationControlsManager.applicationState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x918))();
}

uint64_t dispatch thunk of ConversationControlsManager.applicationState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x920))();
}

uint64_t dispatch thunk of ConversationControlsManager.applicationState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x928))();
}

uint64_t dispatch thunk of ConversationControlsManager.appLaunchButtonType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x930))();
}

uint64_t dispatch thunk of ConversationControlsManager.appLaunchButtonType.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x938))();
}

uint64_t dispatch thunk of ConversationControlsManager.appLaunchButtonType.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x940))();
}

uint64_t dispatch thunk of ConversationControlsManager.$appLaunchButtonType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x948))();
}

uint64_t dispatch thunk of ConversationControlsManager.$appLaunchButtonType.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x950))();
}

uint64_t dispatch thunk of ConversationControlsManager.$appLaunchButtonType.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x958))();
}

uint64_t dispatch thunk of ConversationControlsManager.configureAppLaunchButtonType()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x960))();
}

uint64_t dispatch thunk of ConversationControlsManager.isAlertAvailable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x968))();
}

uint64_t dispatch thunk of ConversationControlsManager.__allocating_init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 2416))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateControlsState()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x978))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateConversation()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x980))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateControlsCornerRadius()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x988))();
}

uint64_t dispatch thunk of ConversationControlsManager.reviewLMIRequests()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x990))();
}

uint64_t dispatch thunk of ConversationControlsManager.reloadDetailsView(participant:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x998))();
}

uint64_t dispatch thunk of ConversationControlsManager.reloadDetailsView(isLocalMemberAuthorizedToChangeGroupMembership:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9A0))();
}

uint64_t dispatch thunk of ConversationControlsManager.reloadDetailsView(participant:isKickingAvailable:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9A8))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateDetailsViewMode()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9B0))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateDetails(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9B8))();
}

uint64_t dispatch thunk of ConversationControlsManager.layoutStyleUpdated()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9C0))();
}

uint64_t dispatch thunk of ConversationControlsManager.bannerPresentationManagerDidDismissBanner(type:reason:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9C8))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateActiveCallForAVModeChange(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9D0))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateForegroundCollaborationStateTask.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9D8))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateForegroundCollaborationStateTask.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9E0))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateForegroundCollaborationStateTask.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9E8))();
}

uint64_t dispatch thunk of ConversationControlsManager.updateForegroundCollaborationState()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9F0))();
}

uint64_t dispatch thunk of ConversationControlsManager.suppressingSystemNotices.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x9F8))();
}

uint64_t dispatch thunk of ConversationControlsManager.scheduleDismissTimer()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA00))();
}

uint64_t dispatch thunk of ConversationControlsManager.invalidateDismissTimer()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA08))();
}

uint64_t dispatch thunk of ConversationControlsManager.invalidateAndRescheduleDismissTimer(reschedule:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA10))();
}

uint64_t dispatch thunk of ConversationControlsManager.screenShareCountdownTimer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA18))();
}

void type metadata accessor for Published<Bool>(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = type metadata accessor for Published();
    if (!v4)
      atomic_store(v3, a2);
  }
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for Cache<String, [ConversationControlsManager.CollaborationPrompt]>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Cache<String, [ConversationControlsManager.CollaborationPrompt]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for [ConversationControlsManager.CollaborationPrompt]);
    v0 = type metadata accessor for Cache();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Cache<String, [ConversationControlsManager.CollaborationPrompt]>);
  }
}

void type metadata accessor for Published<TURoute?>(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = type metadata accessor for Published();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for Published<TUCallTransmissionMode>(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
  OUTLINED_FUNCTION_18();
}

uint64_t storeEnumTagSinglePayload for ConversationControlsManager.PushToTalkChannelState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BD296960 + 4 * byte_1BD654948[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BD296994 + 4 * byte_1BD654943[v4]))();
}

uint64_t sub_1BD296994(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD29699C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD2969A4);
  return result;
}

uint64_t sub_1BD2969B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD2969B8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BD2969BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2969C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConversationControlsManager.PushToTalkChannelState()
{
  return &type metadata for ConversationControlsManager.PushToTalkChannelState;
}

uint64_t type metadata accessor for ScreenSharingControlStateManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ConduitApprovalDelegate()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConduitApprovalDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConduitApprovalDelegate.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t ObjC metadata update function for ConduitLagunaNoticeManager()
{
  return type metadata accessor for ConduitLagunaNoticeManager(0);
}

uint64_t type metadata accessor for ConduitLagunaNoticeManager(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConduitLagunaNoticeManager);
}

void type metadata completion function for ConduitLagunaNoticeManager()
{
  unint64_t v0;

  type metadata accessor for Published<TUCallTransmissionMode>(319, &lazy cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?, type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ConduitLagunaNoticeManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConduitLagunaNoticeManager.__allocating_init(_:queue:callCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

_QWORD *initializeBufferWithCopyOfBuffer for ConduitLagunaNoticeManager.PushBannerInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v10;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v11 = v10;
  }
  return a1;
}

uint64_t initializeWithCopy for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v10 = v9;
  return a1;
}

uint64_t assignWithCopy for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ConduitLagunaNoticeManager.PushBannerInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ConduitLagunaNoticeManager.PushBannerInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD296D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    __swift_getEnumTagSinglePayload(a1, a2, v4);
  else
    OUTLINED_FUNCTION_18();
}

uint64_t storeEnumTagSinglePayload for ConduitLagunaNoticeManager.PushBannerInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD296DC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_33_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    OUTLINED_FUNCTION_0_29(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for ConduitLagunaNoticeManager.PushBannerInfo()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ConversationControlsManager.CollaborationPrompt(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ConversationControlsManager.CollaborationPrompt(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 10) = v3;
  return result;
}

uint64_t getEnumTag for ConversationControlsManager.CollaborationPrompt(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t destructiveInjectEnumTag for ConversationControlsManager.CollaborationPrompt(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 9) = v2;
  return result;
}

void *type metadata accessor for ConversationControlsManager.CollaborationPrompt()
{
  return &unk_1E7628BA8;
}

unint64_t lazy protocol witness table accessor for type ConversationControlsManager.CollaborationPrompt and conformance ConversationControlsManager.CollaborationPrompt()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ConversationControlsManager.CollaborationPrompt and conformance ConversationControlsManager.CollaborationPrompt;
  if (!lazy protocol witness table cache variable for type ConversationControlsManager.CollaborationPrompt and conformance ConversationControlsManager.CollaborationPrompt)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationControlsManager.CollaborationPrompt, &unk_1E7628BA8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsManager.CollaborationPrompt and conformance ConversationControlsManager.CollaborationPrompt);
  }
  return result;
}

uint64_t sub_1BD296F9C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned ObjCBool, @unowned NSError?) -> ()(char a1, uint64_t a2)
{
  uint64_t v2;

  thunk for @escaping @callee_unowned @convention(block) (@unowned ObjCBool, @unowned NSError?) -> ()(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t outlined assign with copy of ConduitLagunaNoticeManager.PushBannerInfo?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConduitLagunaNoticeManager.PushBannerInfo?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of TranscriptionViewModel.Caption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptionViewModel.Caption(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ControlsHUDUpdate(uint64_t a1)
{
  destroy for ControlsHUDUpdate(a1);
  return a1;
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.updateState()()
{
  uint64_t v0;

  closure #1 in ConduitLagunaNoticeManager.updateState()(*(char **)(v0 + 16));
}

uint64_t sub_1BD297080()
{
  uint64_t v0;

  OUTLINED_FUNCTION_96();
  type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  OUTLINED_FUNCTION_577_0();
  v0 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_96_1(*(_QWORD *)(v0 - 8));
  OUTLINED_FUNCTION_539();
  OUTLINED_FUNCTION_579();
  swift_release();
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)(int a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  OUTLINED_FUNCTION_376();
  return closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)(a1, a2, v2 + v7, *(void **)(v2 + v6), *(_QWORD *)(v2 + (v5 & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BD29714C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_96();
  type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  OUTLINED_FUNCTION_577_0();

  v1 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_96_1(*(_QWORD *)(v1 - 8));
  OUTLINED_FUNCTION_539();
  OUTLINED_FUNCTION_579();
  swift_release();
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_17_33();
}

void partial apply for closure #1 in closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
  OUTLINED_FUNCTION_376();
  closure #1 in closure #1 in ConduitLagunaNoticeManager.presentBanner(for:)(*(void **)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + (v1 & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + (v1 & 0xFFFFFFFFFFFFFFF8) + 8));
}

void partial apply for closure #1 in closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)()
{
  uint64_t v0;

  (*(void (**)(uint64_t, _QWORD))(v0 + 16))(1, 0);
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #2 in closure #1 in ConduitApprovalDelegate.approveSplitSession(for:requestedFromDevice:pullContext:completion:)()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 16))(0, 0);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD297254()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  OUTLINED_FUNCTION_96();
  v1 = *(_QWORD *)(OUTLINED_FUNCTION_32_3() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_39_0(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));

  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_17_33();
}

void partial apply for closure #2 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_32_3();
  OUTLINED_FUNCTION_11_19();
  closure #2 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(*(void **)(v0 + 16), v0 + v1, *(void **)(v0 + v2));
}

uint64_t sub_1BD2972EC()
{
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_110_5();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  uint64_t v0;

  closure #1 in closure #5 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t outlined consume of SessionActionNotice.NoticeType?(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 2 != 0xFFFFFFFF)
    return outlined consume of SessionActionNotice.NoticeType(result, a2, a3);
  return result;
}

uint64_t partial apply for closure #3 in closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #3 in closure #4 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in ConversationControlsManager.addIncomingScreenSharingRequestActivity()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ConversationControlsManager.addIncomingScreenSharingRequestActivity()(v2, v3, v4, v5);
}

uint64_t sub_1BD2973C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_239_0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  OUTLINED_FUNCTION_285();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v2 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRelease();
  v3 = OUTLINED_FUNCTION_32_3();
  OUTLINED_FUNCTION_17_1(v3);
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_6_10();
}

void partial apply for closure #1 in closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_239_0() - 8) + 80);
  closure #1 in closure #2 in ConversationControlsManager.setupConversationControllerSharePlayStateObservers()(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1BD297484()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumTagSinglePayload;
  void (*v8)(uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_93();
  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?)
                 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = OUTLINED_FUNCTION_33_0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  OUTLINED_FUNCTION_285();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0 + v2, 1, v4);
  v8 = *(void (**)(uint64_t))(v5 + 8);
  if (!EnumTagSinglePayload)
  {
    v9 = OUTLINED_FUNCTION_124_0();
    v8(v9);
  }
  ((void (*)(unint64_t, uint64_t))v8)(v0 + ((v2 + v3 + v6) & ~v6), v4);
  OUTLINED_FUNCTION_178();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?)
                 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8) + 80);
  return closure #1 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(*(_QWORD *)(v0 + 16), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

void partial apply for closure #2 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()()
{
  uint64_t v0;

  closure #2 in closure #3 in ConversationControlsManager.setupConversationControllerRemoteParticipantStateObservers()(v0);
}

uint64_t objectdestroy_84Tm()
{
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_109_8();
  return OUTLINED_FUNCTION_370();
}

uint64_t partial apply for closure #1 in closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #1 in ConversationControlsManager.setupConversationControllerConversationStateObservers()(v2, v3, v4, v5);
}

void partial apply for closure #1 in ConversationControlsManager.scheduleDelayedLMIBanner()()
{
  uint64_t v0;

  closure #1 in ConversationControlsManager.scheduleDelayedLMIBanner()(v0);
}

id partial apply for closure #1 in closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(void *a1)
{
  uint64_t v1;

  return closure #1 in closure #1 in ConversationControlsManager.setupGreenTea3PStateObservers()(a1, v1);
}

uint64_t sub_1BD297630()
{
  return OUTLINED_FUNCTION_23_4();
}

id partial apply for closure #1 in ConversationControlsManager.presentActivity(activity:completion:)(void *a1)
{
  _QWORD *v1;

  return closure #1 in ConversationControlsManager.presentActivity(activity:completion:)(a1, v1 + 2, v1[7], v1[8]);
}

uint64_t sub_1BD29764C()
{
  return objectdestroy_98Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_98Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 16))
    OUTLINED_FUNCTION_53_2();
  a1(*(_QWORD *)(v1 + 32));
  OUTLINED_FUNCTION_43_2();
  return OUTLINED_FUNCTION_370();
}

void partial apply for closure #1 in closure #1 in ConversationControlsManager.presentActivity(activity:completion:)()
{
  uint64_t v0;
  void (*v1)(BOOL);

  v1 = *(void (**)(BOOL))(v0 + 16);
  if (v1)
    v1(*(_QWORD *)(v0 + 32) == 0);
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #2 in closure #1 in ConversationControlsManager.presentActivity(activity:completion:)()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  v1 = *(uint64_t (**)(uint64_t))(v0 + 16);
  if (v1)
    OUTLINED_FUNCTION_419(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD2976DC()
{
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_76();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_61_5(v3);
  v5 = OUTLINED_FUNCTION_378(v4);
  return closure #1 in closure #3 in ConversationControlsManager.appLaunchButtonTapped(completion:)(v5, v6, v7, v8, v1, v2);
}

void partial apply for closure #1 in ConduitLagunaNoticeManager.rejectSuggestion(_:)(char a1, void *a2)
{
  uint64_t v2;

  closure #1 in ConduitLagunaNoticeManager.rejectSuggestion(_:)(a1, a2, *(void **)(v2 + 16));
}

void partial apply for closure #1 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(a1, a2, v2);
}

void partial apply for closure #3 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(void *a1, void *a2, char a3)
{
  uint64_t v3;

  closure #3 in ConversationControlsManager.setupConversationControllerPushToTalkStateObservers()(a1, a2, a3, v3);
}

void partial apply for thunk for @escaping @callee_guaranteed (@guaranteed TUCall, @guaranteed TUParticipant?, @unowned Bool) -> ()(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  OUTLINED_FUNCTION_0();
}

void specialized ConversationControlsManager.updatePTTChannelState(call:)(void *a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  void *v6;
  id v7;
  unsigned int v8;

  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)&static Logger.conversationControls);
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1BD004000, v2, v3, "Update PTT Channel state for call called", v4, 2u);
    MEMORY[0x1C3B751B8](v4, -1, -1);
  }

  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  if (!v5)
    goto LABEL_10;
  v6 = (void *)v5;
  swift_unknownObjectRetain();
  if (!objc_msgSend(v6, sel_isPTT))
  {

LABEL_10:
    ConversationControlsManager.pttChannelState.setter();
    return;
  }
  if (objc_msgSend(v6, sel_serviceStatus)
    || (v7 = objc_msgSend(v6, sel_provider),
        v8 = objc_msgSend(v7, sel_audioSessionID),
        v7,
        !v8))
  {
    ConversationControlsManager.pttChannelState.setter();
  }
  else
  {
    if (objc_msgSend(v6, sel_status) != 1
      || (objc_msgSend(v6, sel_isReceivingTransmission) & 1) != 0
      && (objc_msgSend(v6, sel_isSendingTransmission) & 1) != 0
      || (objc_msgSend(v6, sel_isReceivingTransmission) & 1) != 0
      || (objc_msgSend(v6, sel_isSendingTransmission) & 1) != 0)
    {
      ConversationControlsManager.pttChannelState.setter();
    }
    objc_msgSend(v6, sel_transmissionMode);
    ConversationControlsManager.pttChannelTransmissionMode.setter();
  }

}

void partial apply for closure #1 in ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)()
{
  closure #1 in ConversationControlsManager.init(conversationController:entitlementsChecker:defaults:callCenter:featureFlags:)();
}

void partial apply for closure #1 in ConversationControlsManager.inCallConversationControlsDelegate.didset(char *a1)
{
  uint64_t v1;

  closure #1 in ConversationControlsManager.inCallConversationControlsDelegate.didset(a1, v1);
}

uint64_t sub_1BD297A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_239_0();
  OUTLINED_FUNCTION_470();
  v2 = (v1 + 40) & ~v1;
  v4 = *(_QWORD *)(v3 + 64);
  OUTLINED_FUNCTION_285();
  if (*(_QWORD *)(v0 + 24))
    OUTLINED_FUNCTION_76();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v2 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRelease();
  v5 = OUTLINED_FUNCTION_32_3();
  OUTLINED_FUNCTION_17_1(v5);

  OUTLINED_FUNCTION_487();
  return OUTLINED_FUNCTION_6_10();
}

void partial apply for closure #1 in ConversationControlsManager.presentCollaboration(_:completion:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_239_0();
  OUTLINED_FUNCTION_11_19();
  closure #1 in ConversationControlsManager.presentCollaboration(_:completion:)(a1, *(_QWORD *)(v1 + 16), *(void (**)(id))(v1 + 24), *(_QWORD *)(v1 + 32), (_QWORD *)(v1 + v3), *(_QWORD *)(v1 + v4));
}

uint64_t objectdestroy_381Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (*(_QWORD *)(v0 + 56))
    swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(char a1)
{
  uint64_t v1;

  closure #2 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t partial apply for closure #1 in ConversationControlsManager.promptForReplaceAlertIfNeeded(_:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ConversationControlsManager.promptForReplaceAlertIfNeeded(_:)(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1BD297B68()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t sub_1BD297B74()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_53_2();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  OUTLINED_FUNCTION_41_13();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(void *a1)
{
  uint64_t v1;

  closure #1 in closure #1 in ConversationControlsManager.startScreenShareWithCountdown(completion:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

uint64_t OUTLINED_FUNCTION_75_10()
{
  return objectdestroy_84Tm();
}

void OUTLINED_FUNCTION_87_7()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

double OUTLINED_FUNCTION_89_11(uint64_t a1, __n128 a2)
{
  double result;

  *(__n128 *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 32) = 18;
  result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_BYTE *)(a1 + 72) = 6;
  *(_QWORD *)(a1 + 80) = 17;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_BYTE *)(a1 + 120) = 6;
  *(_QWORD *)(a1 + 128) = 19;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_BYTE *)(a1 + 168) = 6;
  return result;
}

uint64_t OUTLINED_FUNCTION_104_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v4;

  return a4(a1, a2, 1, a3, v4);
}

uint64_t OUTLINED_FUNCTION_106_5()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_109_9@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x430))();
}

uint64_t OUTLINED_FUNCTION_127_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,__int128 a22,__int128 a23,char a24)
{
  uint64_t v24;

  a21 = 7;
  a22 = 0u;
  a23 = 0u;
  a24 = 6;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v24 + 16))(&a21, 1, a1, v24);
}

uint64_t OUTLINED_FUNCTION_129_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x400))();
}

uint64_t OUTLINED_FUNCTION_131_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x3E8))();
}

uint64_t OUTLINED_FUNCTION_132_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x290))();
}

uint64_t OUTLINED_FUNCTION_133_3()
{
  return ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_145_2()
{
  _QWORD *v0;
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & *v0) + 0x270))();
}

uint64_t OUTLINED_FUNCTION_146_1()
{
  _QWORD *v0;
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & *v0) + 0x400))();
}

uint64_t OUTLINED_FUNCTION_161_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 104))(v1, v2);
}

void OUTLINED_FUNCTION_162_2(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= v4 << a1;
  *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * a1) = v2;
  ++*(_QWORD *)(v1 + 16);
}

_QWORD *OUTLINED_FUNCTION_167()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 128), *(_QWORD *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_173_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_182_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x270))();
}

uint64_t OUTLINED_FUNCTION_187(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 160))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_199_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_202_1()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_204_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x448))();
}

uint64_t OUTLINED_FUNCTION_211_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t *, uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 80))(&a9, 1, 0, v10, v9);
}

double OUTLINED_FUNCTION_218_0(uint64_t a1, __n128 a2)
{
  double result;

  *(__n128 *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 32) = 11;
  result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_BYTE *)(a1 + 72) = 6;
  return result;
}

_WORD *OUTLINED_FUNCTION_220_0(_WORD *result)
{
  *result = 0;
  return result;
}

_QWORD *OUTLINED_FUNCTION_221_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  _QWORD *v10;

  return (*(_QWORD *(**)(uint64_t *__return_ptr))((*v10 & *v9) + 0x848))(&a9);
}

uint64_t OUTLINED_FUNCTION_228_0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_229_1()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

BOOL OUTLINED_FUNCTION_241(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_242()
{
  _QWORD *v0;
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & *v0) + 0x900))();
}

uint64_t OUTLINED_FUNCTION_247_0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  return (*(uint64_t (**)(void))((*v2 & **(_QWORD **)(v0 + *(_QWORD *)(v1 + 3880))) + 0xC0))();
}

uint64_t OUTLINED_FUNCTION_248_0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

BOOL OUTLINED_FUNCTION_250(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_253_0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_254_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_260_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_262_0()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t OUTLINED_FUNCTION_263_0()
{
  _QWORD *v0;
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & *v0) + 0x840))();
}

uint64_t OUTLINED_FUNCTION_265_0()
{
  return static Published.subscript.getter();
}

uint64_t OUTLINED_FUNCTION_266_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_267_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_268_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 144));
}

uint64_t OUTLINED_FUNCTION_271_1()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_274_0()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_277()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_279_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x960))();
}

uint64_t OUTLINED_FUNCTION_280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))((v1 & a1) + 0x7E0))(v2);
}

uint64_t OUTLINED_FUNCTION_281_0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t))((*v2 & *v0) + 0x938))(v1);
}

void OUTLINED_FUNCTION_287()
{
  unint64_t *v0;

  type metadata accessor for NSObject(0, v0);
}

uint64_t OUTLINED_FUNCTION_288(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

double OUTLINED_FUNCTION_290@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)v1 = a1;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

void OUTLINED_FUNCTION_291_1(char a1@<W8>)
{
  _QWORD *v1;

  *v1 = -1 << a1;
}

uint64_t OUTLINED_FUNCTION_296_0()
{
  _QWORD *v0;
  _QWORD *v1;

  return (*(uint64_t (**)(void))((*v1 & *v0) + 0x400))();
}

void OUTLINED_FUNCTION_305(uint64_t a1, uint64_t *a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_309_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a15 + 32))(v18 + *(int *)(v16 + 36), v17, a16);
}

uint64_t OUTLINED_FUNCTION_311_1@<X0>(uint64_t a1@<X8>, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000019, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

unint64_t OUTLINED_FUNCTION_313_0()
{
  return 0xD000000000000021;
}

uint64_t OUTLINED_FUNCTION_328_0@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_338()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_339()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_340_0()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_342_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return specialized UnsafeMutablePointer.assign(repeating:count:)(0, (unint64_t)(a1 + 63) >> 6, *(_QWORD **)(v1 - 176));
}

uint64_t OUTLINED_FUNCTION_343@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return specialized UnsafeMutablePointer.assign(repeating:count:)(0, (unint64_t)(a1 + 63) >> 6, a4);
}

uint64_t OUTLINED_FUNCTION_344_0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_345@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  return a4(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3, 1, v5, v4);
}

uint64_t OUTLINED_FUNCTION_349(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_352()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_353@<X0>(uint64_t (*a1)(_QWORD)@<X8>)
{
  return a1(0);
}

uint64_t OUTLINED_FUNCTION_354()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_355()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_357(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t OUTLINED_FUNCTION_359(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t OUTLINED_FUNCTION_362(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

void OUTLINED_FUNCTION_363(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v2 = va_arg(va1, _QWORD);
  v4 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  outlined init with copy of RadarReporting((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t OUTLINED_FUNCTION_368()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = 0x4089000000000000;
  return outlined init with copy of ConversationControlsType(v0, (uint64_t)(v1 + 1));
}

uint64_t OUTLINED_FUNCTION_369_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + a1 + 8) = 0;
  return swift_unknownObjectWeakInit();
}

uint64_t OUTLINED_FUNCTION_370()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_372(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, _QWORD))
{
  return a6(a1, a2, 0);
}

id OUTLINED_FUNCTION_373(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 1);
}

uint64_t OUTLINED_FUNCTION_378(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_383(uint64_t a1, unsigned __int16 a2)
{
  return ConversationControlsManager.invalidateCallWaitingSystemApertureAssertionIfNeeded(reason:)(a1, a2 | 0xED00006465740000);
}

uint64_t OUTLINED_FUNCTION_391()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_392()
{
  uint64_t v0;

  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v0);
}

uint64_t OUTLINED_FUNCTION_394@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;

  *v3 = a2;
  v3[1] = v2;
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(result);
}

void OUTLINED_FUNCTION_396(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of FeatureEligibility?(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_399()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_400(_QWORD *a1)
{
  unint64_t *v1;

  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop(a1, v1);
}

uint64_t OUTLINED_FUNCTION_401(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_408(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_410@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x270))();
}

uint64_t OUTLINED_FUNCTION_411@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x4C0))();
}

uint64_t OUTLINED_FUNCTION_412()
{
  return ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_413()
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(0);
}

uint64_t OUTLINED_FUNCTION_414()
{
  return type metadata accessor for ForegroundCollaborationState(0);
}

uint64_t OUTLINED_FUNCTION_419@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  return a1(1);
}

uint64_t OUTLINED_FUNCTION_424()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_425()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void OUTLINED_FUNCTION_426(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)va, a2);
}

void OUTLINED_FUNCTION_428(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 - 104, a2);
}

void OUTLINED_FUNCTION_429()
{
  JUMPOUT(0x1C3B7361CLL);
}

double OUTLINED_FUNCTION_437()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 32) = 0;
  result = 0.0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_440()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_443(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t OUTLINED_FUNCTION_448()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t OUTLINED_FUNCTION_450()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_451(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

void OUTLINED_FUNCTION_458(uint64_t a1@<X8>)
{
  uint64_t v1;

}

void OUTLINED_FUNCTION_459()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
}

uint64_t OUTLINED_FUNCTION_464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v0, v2);
}

void OUTLINED_FUNCTION_467(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_469()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_473()
{
  ConversationControlsManager.ephemeralAlert.setter();
}

uint64_t OUTLINED_FUNCTION_479()
{
  return swift_getKeyPath();
}

_WORD *OUTLINED_FUNCTION_480(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_481()
{
  return swift_unknownObjectWeakInit();
}

id OUTLINED_FUNCTION_489(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3, 0);
}

uint64_t OUTLINED_FUNCTION_491()
{
  return swift_release();
}

void OUTLINED_FUNCTION_493()
{
  specialized Dictionary.subscript.getter();
}

uint64_t OUTLINED_FUNCTION_494()
{
  return String.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_495@<X0>(uint64_t result@<X0>, char a2@<W8>, __n128 a3@<Q0>)
{
  uint64_t v3;

  *(_QWORD *)(result + 80) = v3;
  *(__n128 *)(result + 88) = a3;
  *(__n128 *)(result + 104) = a3;
  *(_BYTE *)(result + 120) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_496()
{
  return static Published.subscript.setter();
}

uint64_t OUTLINED_FUNCTION_501(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + v2) = a1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_502()
{
  return specialized Conversation.activities.getter();
}

uint64_t OUTLINED_FUNCTION_503(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 264))(a1);
}

uint64_t OUTLINED_FUNCTION_504()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_505()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_508()
{
  return ConversationControlsManager.notifyDelegates(about:forceUpdate:)(0, 0, 1);
}

uint64_t OUTLINED_FUNCTION_509()
{
  _QWORD *v0;
  uint64_t v1;

  return specialized UnsafeMutablePointer.assign(repeating:count:)(0, v1, v0);
}

Swift::Int OUTLINED_FUNCTION_511()
{
  return Hasher._finalize()();
}

uint64_t OUTLINED_FUNCTION_513()
{
  return Hasher.init(_seed:)();
}

uint64_t OUTLINED_FUNCTION_515@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  return v3(v1 + a1, v2);
}

uint64_t OUTLINED_FUNCTION_516()
{
  return AnyHashable.init<A>(_:)();
}

void OUTLINED_FUNCTION_518(char a1@<W8>)
{
  uint64_t v1;

  **(_QWORD **)(v1 - 176) = -1 << a1;
}

void OUTLINED_FUNCTION_519(char a1@<W8>, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  *a4 = -1 << a1;
}

uint64_t OUTLINED_FUNCTION_520(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_521()
{
  return swift_release();
}

void OUTLINED_FUNCTION_522(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  outlined init with copy of RadarReporting((uint64_t)&a14, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_525(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(a1, v1);
}

_OWORD *OUTLINED_FUNCTION_526(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  __int128 *v9;

  return outlined init with take of ConversationControlsType(v9, &a9);
}

double OUTLINED_FUNCTION_527()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

void OUTLINED_FUNCTION_528()
{
  uint64_t v0;

  outlined init with copy of RadarReporting(v0 - 104, v0 - 144);
}

uint64_t OUTLINED_FUNCTION_529()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_530(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return v1 - 168;
}

uint64_t OUTLINED_FUNCTION_531()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_532()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_537@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void OUTLINED_FUNCTION_539()
{
  uint64_t v0;
  uint64_t v1;

}

uint64_t OUTLINED_FUNCTION_540(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t OUTLINED_FUNCTION_542()
{
  return Logger.logObject.getter();
}

void OUTLINED_FUNCTION_543(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  static ConversationControlsType.== infix(_:_:)((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_544()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t OUTLINED_FUNCTION_545()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_546(_QWORD *a1)
{
  uint64_t v1;

  return v1 + *a1;
}

uint64_t OUTLINED_FUNCTION_547@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 2112))();
}

uint64_t OUTLINED_FUNCTION_549()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_550()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_552()
{
  ConversationControlsManager.shouldShowAVLessLeaveConfirmation.setter(0);
}

uint64_t OUTLINED_FUNCTION_554(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_555()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_557(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  return (*(uint64_t (**)(_QWORD))(a3 + 8))(v3 & 1);
}

void OUTLINED_FUNCTION_561()
{
  type metadata accessor for TUConversationState(0);
}

uint64_t OUTLINED_FUNCTION_562()
{
  return static Date.now.getter();
}

uint64_t OUTLINED_FUNCTION_563()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 + 65) = 0;
  return v1 + *(int *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_567(__int128 *a1)
{
  uint64_t v1;

  return outlined init with take of Notice(a1, v1);
}

unint64_t OUTLINED_FUNCTION_569(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_570(uint64_t a1)
{
  return TUCallCenter.cnk_hasIncomingAudioOrVideoCall.getter(a1);
}

void OUTLINED_FUNCTION_571(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + a1);
  *v2 = 0;
  v2[1] = 0;
}

void OUTLINED_FUNCTION_579()
{
  uint64_t v0;
  uint64_t v1;

}

uint64_t OUTLINED_FUNCTION_580()
{
  return Logger.logObject.getter();
}

_WORD *OUTLINED_FUNCTION_581(_WORD *result)
{
  *result = 0;
  return result;
}

id OUTLINED_FUNCTION_582()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_583()
{
  return static os_log_type_t.default.getter();
}

void OUTLINED_FUNCTION_585(_QWORD *a1)
{
  void (*v1)(uint64_t);

  lazy protocol witness table accessor for type UUID and conformance UUID(a1, v1);
}

void OUTLINED_FUNCTION_587(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 - 120, a2);
}

void OUTLINED_FUNCTION_589()
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void OUTLINED_FUNCTION_594()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  outlined destroy of AccountUpdateNotice(v1, v0);
}

void OUTLINED_FUNCTION_595()
{
  void *v0;

  free(v0);
}

char *OUTLINED_FUNCTION_597(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

uint64_t OUTLINED_FUNCTION_598_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_599()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_601()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_602()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_605@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

void OUTLINED_FUNCTION_607()
{
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
}

uint64_t OUTLINED_FUNCTION_609@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

uint64_t OUTLINED_FUNCTION_610()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_611()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_612()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_613()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_614()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_615()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_616()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_617()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_618()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_622@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 1912))();
}

void OUTLINED_FUNCTION_624(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined init with take of Any?(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_627()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_628()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_630()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_636(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x12u);
}

uint64_t OUTLINED_FUNCTION_638()
{
  return static os_log_type_t.default.getter();
}

void OUTLINED_FUNCTION_639(void *a1)
{

}

uint64_t OUTLINED_FUNCTION_640()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t OUTLINED_FUNCTION_641()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_643()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_644@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_647()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v4;

  return a4(a1, a2, a3, v4);
}

uint64_t OUTLINED_FUNCTION_652_0()
{
  return static MainActor.shared.getter();
}

void OUTLINED_FUNCTION_655(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with take of StagedCollaboration(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_657(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_661()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t OUTLINED_FUNCTION_663()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

void OUTLINED_FUNCTION_664(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  outlined init with copy of FeatureEligibility?((uint64_t)va1, (uint64_t)va, a3);
}

uint64_t OUTLINED_FUNCTION_667@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x320))();
}

uint64_t OUTLINED_FUNCTION_668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x298))();
}

uint64_t OUTLINED_FUNCTION_669(uint64_t a1)
{
  return ConversationControlsManager.confirmLeavePTTChannelAlert.setter(a1);
}

uint64_t OUTLINED_FUNCTION_671()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 232))();
}

uint64_t OUTLINED_FUNCTION_672()
{
  return type metadata accessor for ConduitLagunaNoticeManager.PushBannerInfo(0);
}

uint64_t OUTLINED_FUNCTION_673()
{
  return 0;
}

void OUTLINED_FUNCTION_674()
{
  ConversationController.lookupActiveConversation()();
}

uint64_t OUTLINED_FUNCTION_675()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_676()
{
  _QWORD *v0;
  uint64_t result;

  result = v0[5] + v0[6];
  *(_QWORD *)(result + 8) = v0[4];
  return result;
}

UIFont __swiftcall UIFont.withTraits(_:)(UIFontDescriptorSymbolicTraits a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v7;

  v2 = *(_QWORD *)&a1;
  v3 = objc_msgSend(v1, sel_fontDescriptor);
  v4 = objc_msgSend(v3, sel_fontDescriptorWithSymbolicTraits_, v2);

  if (!v4)
    return (UIFont)v7;
  v5 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v4, 0.0);

  return (UIFont)v5;
}

double UIFont.languageAwareExtraBottomPadding(for:)()
{
  return 0.0;
}

uint64_t static _UIFontTextStyleVariant.cnk_shortMedium.getter()
{
  return 264;
}

void ParticipantVideoCameraView.__allocating_init(style:)(char a1)
{
  objc_class *v1;
  char v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v2 = a1 & 1;
  v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = v2;
  v10.receiver = v3;
  v10.super_class = v1;
  OUTLINED_FUNCTION_0_106((uint64_t)v3, sel_initWithFrame_, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_36();
}

id ParticipantVideoCameraView.videoLayer.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_layer);
}

BOOL static ParticipantVideoCameraView.Style.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void ParticipantVideoCameraView.Style.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int ParticipantVideoCameraView.Style.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ParticipantVideoCameraView.Style(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ParticipantVideoCameraView.Style.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ParticipantVideoCameraView.Style()
{
  char *v0;

  return ParticipantVideoCameraView.Style.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ParticipantVideoCameraView.Style(uint64_t a1)
{
  char *v1;

  ParticipantVideoCameraView.Style.hash(into:)(a1, *v1);
}

void ParticipantVideoCameraView.init(style:)(char a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = a1 & 1;
  v10.receiver = v1;
  v10.super_class = ObjectType;
  OUTLINED_FUNCTION_0_106((uint64_t)ObjectType, sel_initWithFrame_, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_36();
}

id ParticipantVideoCameraView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantVideoCameraView.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id ParticipantVideoCameraView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantVideoCameraView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ParticipantVideoCameraView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t lazy protocol witness table accessor for type ParticipantVideoCameraView.Style and conformance ParticipantVideoCameraView.Style()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantVideoCameraView.Style and conformance ParticipantVideoCameraView.Style;
  if (!lazy protocol witness table cache variable for type ParticipantVideoCameraView.Style and conformance ParticipantVideoCameraView.Style)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantVideoCameraView.Style, &type metadata for ParticipantVideoCameraView.Style);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantVideoCameraView.Style and conformance ParticipantVideoCameraView.Style);
  }
  return result;
}

uint64_t type metadata accessor for ParticipantVideoCameraView()
{
  return objc_opt_self();
}

uint64_t method lookup function for ParticipantVideoCameraView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantVideoCameraView.__allocating_init(style:)(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 88))(a1 & 1);
}

uint64_t storeEnumTagSinglePayload for ParticipantVideoCameraView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD299104 + 4 * byte_1BD655115[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD299138 + 4 * byte_1BD655110[v4]))();
}

uint64_t sub_1BD299138(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD299140(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD299148);
  return result;
}

uint64_t sub_1BD299154(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD29915CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD299160(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD299168(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticipantVideoCameraView.Style()
{
  return &type metadata for ParticipantVideoCameraView.Style;
}

void ParticipantBorderView.borderWidth.didset()
{
  _QWORD *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView), sel_maskView);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_layer);
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
    objc_msgSend(v3, sel_setBorderWidth_);

  }
}

void ParticipantBorderView.borderWidth.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

uint64_t ParticipantBorderView.borderWidth.setter(double a1)
{
  return ParticipantBorderView.borderWidth.setter(&OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_borderWidth, (uint64_t (*)(uint64_t))ParticipantBorderView.borderWidth.didset, a1);
}

uint64_t (*ParticipantBorderView.borderWidth.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return ParticipantBorderView.borderWidth.modify;
}

uint64_t ParticipantBorderView.borderWidth.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantBorderView.borderWidth.didset);
}

void ParticipantBorderView.customCornerRadius.didset()
{
  uint64_t v0;
  id v1;
  void *v2;
  double *v3;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView), sel_maskView));
  if (v1)
  {
    v2 = v1;
    v3 = (double *)(v0 + OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_customCornerRadius);
    swift_beginAccess();
    objc_msgSend(v2, sel__setContinuousCornerRadius_, *v3);

  }
}

void ParticipantBorderView.customCornerRadius.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

uint64_t ParticipantBorderView.customCornerRadius.setter(double a1)
{
  return ParticipantBorderView.borderWidth.setter(&OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_customCornerRadius, (uint64_t (*)(uint64_t))ParticipantBorderView.customCornerRadius.didset, a1);
}

uint64_t ParticipantBorderView.borderWidth.setter(_QWORD *a1, uint64_t (*a2)(uint64_t), double a3)
{
  uint64_t v3;
  double *v6;
  uint64_t v7;

  v6 = (double *)(v3 + *a1);
  v7 = OUTLINED_FUNCTION_2_0();
  *v6 = a3;
  return a2(v7);
}

uint64_t (*ParticipantBorderView.customCornerRadius.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return ParticipantBorderView.customCornerRadius.modify;
}

uint64_t ParticipantBorderView.customCornerRadius.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantBorderView.customCornerRadius.didset);
}

id ParticipantBorderView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

char *ParticipantBorderView.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  double v8;
  objc_super *v9;
  SEL v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double *v19;
  id v20;
  id v21;

  OUTLINED_FUNCTION_17_7();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_borderWidth] = 0x4008000000000000;
  v1 = OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_customCornerRadius;
  v2 = one-time initialization token for shared;
  v3 = v0;
  if (v2 != -1)
    swift_once();
  OUTLINED_FUNCTION_11_6();
  *(_QWORD *)&v3[v1] = v4;
  v5 = OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView;
  v6 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 13);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v6);

  *(_QWORD *)&v3[v5] = v7;
  type metadata accessor for ParticipantBorderView();
  v8 = OUTLINED_FUNCTION_15_0();
  v11 = objc_msgSendSuper2(v9, v10, v8);
  objc_opt_self();
  v12 = (char *)v11;
  v13 = OUTLINED_FUNCTION_5_88();
  objc_msgSend(v12, sel_setBackgroundColor_, v13);

  v14 = OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView;
  v15 = *(id *)&v12[OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView];
  objc_msgSend(v12, sel_bounds);
  objc_msgSend(v15, sel_setFrame_);

  objc_msgSend(v12, sel_addSubview_, *(_QWORD *)&v12[v14]);
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v17 = objc_msgSend(v16, sel_layer);
  closure #1 in ParticipantBorderView.init(frame:)(v17, v12);

  v18 = OUTLINED_FUNCTION_5_88();
  objc_msgSend(v16, sel_setBackgroundColor_, v18);

  v19 = (double *)&v12[OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_customCornerRadius];
  OUTLINED_FUNCTION_2_0();
  objc_msgSend(v16, sel__setContinuousCornerRadius_, *v19);
  v20 = *(id *)&v12[v14];
  v21 = v16;
  objc_msgSend(v20, sel_setMaskView_, v21);

  return v12;
}

id closure #1 in ParticipantBorderView.init(frame:)(void *a1, _QWORD *a2)
{
  id v4;
  id v5;

  v4 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  v5 = objc_msgSend(v4, sel_CGColor);

  objc_msgSend(a1, sel_setBorderColor_, v5);
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x68))();
  return objc_msgSend(a1, sel_setBorderWidth_);
}

id ParticipantBorderView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantBorderView.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_borderWidth] = 0x4008000000000000;
  v2 = OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_customCornerRadius;
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_11_6();
  *(_QWORD *)&v0[v2] = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView;
  v5 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 13);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v5);

  *(_QWORD *)&v1[v4] = v6;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ParticipantBorderView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for ParticipantBorderView();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  ParticipantBorderView._layout()();
}

void ParticipantBorderView._layout()()
{
  char *v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit21ParticipantBorderView_blurView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  v2 = objc_msgSend(v1, sel_maskView);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v3, sel_setFrame_);

  }
}

id ParticipantBorderView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ParticipantBorderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ParticipantBorderView()
{
  return objc_opt_self();
}

void sub_1BD299A90(_QWORD **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x68))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD299ACC(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x70))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD299B04(_QWORD **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x80))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD299B40(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x88))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for ParticipantBorderView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantBorderView.borderWidth.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ParticipantBorderView.borderWidth.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ParticipantBorderView.borderWidth.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ParticipantBorderView.customCornerRadius.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ParticipantBorderView.customCornerRadius.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ParticipantBorderView.customCornerRadius.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t static StagedCollaboration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  char v21;

  OUTLINED_FUNCTION_59(a1, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  if ((static NSObject.== infix(_:_:)() & 1) == 0)
    return 0;
  if (*(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8))
    return 0;
  v4 = OUTLINED_FUNCTION_205();
  if ((static UUID.== infix(_:_:)() & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_34_2();
  if (v5)
  {
    if (!v6)
      return 0;
    v9 = *v7 == *v8 && v5 == v6;
    if (!v9 && (OUTLINED_FUNCTION_13() & 1) == 0)
      return 0;
  }
  else if (v6)
  {
    return 0;
  }
  OUTLINED_FUNCTION_34_2();
  if (v11)
  {
    if (!v12)
      return 0;
    v10 = *v13;
    if (*v13 != *v14 || v11 != v12)
    {
      v10 = OUTLINED_FUNCTION_13();
      if ((v10 & 1) == 0)
        return 0;
    }
  }
  else if (v12)
  {
    return 0;
  }
  v16 = *(int *)(v4 + 36);
  v17 = *(void **)(a1 + v16);
  v18 = *(void **)(a2 + v16);
  if (v17)
  {
    if (v18)
    {
      OUTLINED_FUNCTION_59(v10, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      v19 = v18;
      v20 = v17;
      v21 = static NSObject.== infix(_:_:)();

      if ((v21 & 1) != 0)
        return static NSObject.== infix(_:_:)() & 1;
    }
  }
  else if (!v18)
  {
    return static NSObject.== infix(_:_:)() & 1;
  }
  return 0;
}

uint64_t type metadata accessor for StagedCollaboration(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for StagedCollaboration);
}

void Collaboration.title.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56) != 1)
    OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_0();
}

void UIImage.__allocating_init(data:)(uint64_t a1, unint64_t a2)
{
  id v4;
  Class isa;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, sel_initWithData_, isa);
  outlined consume of Data._Representation(a1, a2);

  OUTLINED_FUNCTION_18();
}

void StagedCollaboration.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_25_40();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void StagedCollaboration.init(foregroundApp:shareableContent:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int *v6;
  _QWORD *v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  *(_BYTE *)(a3 + 8) = 2;
  v6 = (int *)type metadata accessor for StagedCollaboration(0);
  UUID.init()();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + v6[10]) = a2;
  v7 = a1;
  v8 = a2;
  outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(objc_msgSend(v8, sel_metadata), (SEL *)&selRef_title);
  v9 = (_QWORD *)(a3 + v6[7]);
  *v9 = v10;
  v9[1] = v11;
  v12 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x68))();
  v13 = (uint64_t *)(a3 + v6[8]);
  *v13 = v12;
  v13[1] = v14;
  if (one-time initialization token for collaboration != -1)
    swift_once();
  v15 = static ActivityType.Image.collaboration;
  v16 = (id)static ActivityType.Image.collaboration;

  *(_QWORD *)(a3 + v6[9]) = v15;
}

BOOL Collaboration.isAppInstalled.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 16) != 0;
}

uint64_t Collaboration.State.init(highlightState:)(unint64_t a1)
{
  if (a1 >= 3)
    return 3;
  else
    return 0x201u >> (8 * a1);
}

BOOL static Collaboration.State.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void Collaboration.State.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

void Collaboration.State.hashValue.getter(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(a1);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Collaboration.State(char *a1, char *a2)
{
  return static Collaboration.State.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance Collaboration.State()
{
  unsigned __int8 *v0;

  Collaboration.State.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance Collaboration.State(uint64_t a1)
{
  unsigned __int8 *v1;

  Collaboration.State.hash(into:)(a1, *v1);
}

void Collaboration.Metadata.localizedApplicationName.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void Collaboration.Metadata.title.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void Collaboration.Metadata.image.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 32);
  OUTLINED_FUNCTION_0();
}

void Collaboration.Metadata.init(localizedApplicationName:title:imageData:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v12;

  if (a6 >> 60 == 15)
  {
    v12 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_59(a1, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    UIImage.__allocating_init(data:)(a5, a6);
  }
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = v12;
}

void Collaboration.Metadata.hash(into:)()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;

  if (v0[1])
  {
    OUTLINED_FUNCTION_20_5();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_18_57();
    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    OUTLINED_FUNCTION_31_14();
  }
  if (v0[3])
  {
    OUTLINED_FUNCTION_20_5();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_18_57();
    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    OUTLINED_FUNCTION_31_14();
  }
  v1 = (void *)v0[4];
  if (v1)
  {
    OUTLINED_FUNCTION_20_5();
    v2 = v1;
    OUTLINED_FUNCTION_14_75();

  }
  else
  {
    OUTLINED_FUNCTION_31_14();
  }
}

void static Collaboration.Metadata.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  void *v12;
  void *v13;
  id v14;
  id v15;

  v3 = a1;
  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      goto LABEL_22;
LABEL_10:
    v8 = v3[3];
    v9 = a2[3];
    if (v8)
    {
      if (!v9)
        goto LABEL_22;
      a1 = (_QWORD *)v3[2];
      if (a1 != (_QWORD *)a2[2] || v8 != v9)
      {
        v11 = OUTLINED_FUNCTION_13();
        a1 = 0;
        if ((v11 & 1) == 0)
          goto LABEL_22;
      }
    }
    else if (v9)
    {
      goto LABEL_22;
    }
    v12 = (void *)v3[4];
    v13 = (void *)a2[4];
    if (v12 && v13)
    {
      OUTLINED_FUNCTION_59((uint64_t)a1, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      v14 = v13;
      v15 = v12;
      static NSObject.== infix(_:_:)();

    }
    goto LABEL_22;
  }
  if (v5)
  {
    a1 = (_QWORD *)*a1;
    if (*v3 == *a2 && v4 == v5)
      goto LABEL_10;
    v7 = OUTLINED_FUNCTION_13();
    a1 = 0;
    if ((v7 & 1) != 0)
      goto LABEL_10;
  }
LABEL_22:
  OUTLINED_FUNCTION_18();
}

void Collaboration.Metadata.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  Collaboration.Metadata.hash(into:)();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Collaboration.Metadata()
{
  Hasher.init(_seed:)();
  Collaboration.Metadata.hash(into:)();
  return Hasher._finalize()();
}

void Collaboration.uniqueIdentifier.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t Collaboration.state.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t Collaboration.type.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t Collaboration.activeRemoteParticipantCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

void Collaboration.bundleIdentifier.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t Collaboration.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of Collaboration.Metadata?(v1 + 48, a1);
}

void Collaboration.messagesIdentifier.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t Collaboration.highlightURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_239_0();
  OUTLINED_FUNCTION_32_3();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t Collaboration.isLocallyInitiated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_239_0() + 48));
}

void Collaboration.init(highlight:state:)(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  unsigned __int8 v34;

  *(_BYTE *)(a3 + 17) = 2;
  *(_QWORD *)(a3 + 24) = 0;
  v6 = objc_msgSend(a1, sel_collaborationIdentifier);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v9 = v8;

  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 8) = v9;
  *(_BYTE *)(a3 + 16) = a2;
  v10 = SWCollaborationHighlight.applicationRecord.getter();
  v11 = v10;
  if (v10)
  {
    v12 = v10;
    outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(v12, (SEL *)&selRef_bundleIdentifier);
    v14 = v13;
    v16 = v15;
    v17 = objc_msgSend(v12, sel_localizedName);
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0;
    v14 = 0;
    v16 = 0;
  }
  *(_QWORD *)(a3 + 32) = v14;
  *(_QWORD *)(a3 + 40) = v16;
  v21 = outlined bridged method (pb) of @objc SWCollaborationHighlight.title.getter(a1);
  *(_QWORD *)(a3 + 48) = v18;
  *(_QWORD *)(a3 + 56) = v20;
  *(_QWORD *)(a3 + 64) = v21;
  *(_QWORD *)(a3 + 72) = v22;
  *(_QWORD *)(a3 + 80) = 0;
  SWCollaborationHighlight.messagesIdentifier.getter();
  *(_QWORD *)(a3 + 88) = v23;
  *(_QWORD *)(a3 + 96) = v24;
  v25 = objc_msgSend(a1, sel_URL);
  v26 = OUTLINED_FUNCTION_239_0();
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  v27 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v28 = objc_msgSend(v27, sel_frontmostAudioOrVideoCall);

  if (v28)
  {
    v29 = OUTLINED_FUNCTION_28_45();
    v30 = objc_msgSend(v29, sel_activeConversationForCall_, v28);

    if (v30)
    {
      v31 = OUTLINED_FUNCTION_28_45();
      v32 = objc_msgSend(v31, sel_conversationManager);

      v33 = objc_msgSend(v32, sel_collaborationManager);
      if (v33)
      {
        v34 = objc_msgSend(v33, sel_isCollaborationLocallyInitiatedForConversation_, v30);

        *(_BYTE *)(a3 + *(int *)(v26 + 48)) = v34;
        return;
      }

    }
    else
    {
      v30 = v28;
    }

  }
  *(_BYTE *)(a3 + *(int *)(v26 + 48)) = 0;
}

id SWCollaborationHighlight.applicationRecord.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  NSURL *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for URL();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  v7 = objc_msgSend(v1, sel_URL);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL._bridgeToObjectiveC()(v8);
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v11 = objc_msgSend(v6, sel_lsAppRecordForURL_, v10);

  if (!v11)
    return v11;
  v12 = v11;
  outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(v12, (SEL *)&selRef_bundleIdentifier);
  if (!v14)
    return v11;
  if (v13 == 0xD00000000000001CLL && v14 == 0x80000001BD680A70)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      return v11;
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v17 = objc_msgSend(v16, sel_conversationManager);

  v18 = objc_msgSend(v1, sel_collaborationIdentifier);
  if (!v18)
  {
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v18 = (id)MEMORY[0x1C3B72E00](v19);
    swift_bridgeObjectRelease();
  }
  v20 = objc_msgSend(v17, sel_ckBundleIDForCollaborationIdentifier_, v18);

  if (!v20)
  {

    return 0;
  }
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v22 = *(_QWORD *)(v21 + 16);
  if (!v22)
  {
LABEL_14:

    swift_bridgeObjectRelease();
    return 0;
  }
  v23 = (uint64_t *)(v21 + 40);
  while (1)
  {
    v25 = *(v23 - 1);
    v24 = *v23;
    objc_allocWithZone(MEMORY[0x1E0CA5870]);
    swift_bridgeObjectRetain();
    v11 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v25, v24, 1);
    if (v11)
      break;
    v23 += 2;
    if (!--v22)
      goto LABEL_14;
  }

  swift_bridgeObjectRelease();
  return v11;
}

void SWCollaborationHighlight.messagesIdentifier.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = objc_msgSend(v0, sel_attributions);
  OUTLINED_FUNCTION_59((uint64_t)v1, &lazy cache variable for type metadata for SLAttribution);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v5 = v2;
    else
      v5 = v2 & 0xFFFFFFFFFFFFFF8;
    OUTLINED_FUNCTION_124();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_7_15();
    if (v5)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0)
    MEMORY[0x1C3B73D18](0, v2);
  else
    v3 = *(id *)(v2 + 32);
  OUTLINED_FUNCTION_7_15();
  v4 = objc_msgSend((id)(v2 & 0xC000000000000001), sel_uniqueIdentifier);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_33_34();
LABEL_11:
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_18();
}

void Collaboration.subtitle.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56) != 1)
    OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_0();
}

void Collaboration.image.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD);
  uint64_t v9;

  v1 = OUTLINED_FUNCTION_239_0();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = 0;
  if (*(_QWORD *)(v0 + 56) != 1)
  {
    v4 = *(void **)(v0 + 80);
    v5 = v4;
  }
  v6 = OUTLINED_FUNCTION_21_6();
  outlined init with copy of RecentsCallItem(v6, v7, v8);
  if (!v4)
    ActivityType.placeholderImage.getter(v3[17]);
  outlined destroy of Collaboration((uint64_t)v3);
  OUTLINED_FUNCTION_18();
}

void Collaboration.icon.getter()
{
  uint64_t v0;

  ActivityType.icon.getter(*(_BYTE *)(v0 + 17));
}

void Collaboration.concatenatedDescription.getter()
{
  uint64_t v0;
  id v2;

  if (*(_QWORD *)(v0 + 56) == 1 || *(_QWORD *)(v0 + 72) == 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_0_107(22, 0x80000001BD6809B0);
    swift_bridgeObjectRelease();

  }
  else
  {
    OUTLINED_FUNCTION_124();
  }
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_45_0();
}

void Collaboration.ongoingDescription.getter()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v4._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001BD6809D0;
  v1._countAndFlagsBits = 0xD00000000000002BLL;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v4);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_45_0();
}

uint64_t Collaboration.metadataHash.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Metadata?);
  lazy protocol witness table accessor for type Collaboration.Metadata and conformance Collaboration.Metadata();
  return Optional<A>.hashValue.getter();
}

uint64_t Collaboration.collaboration.getter@<X0>(uint64_t a1@<X8>)
{
  return Collaboration.collaboration.getter((void (*)(_QWORD))type metadata accessor for Collaboration, a1);
}

uint64_t protocol witness for Activity.uniqueIdentifier.getter in conformance Collaboration()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t protocol witness for Activity.type.getter in conformance Collaboration()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t protocol witness for Activity.activeRemoteParticipantCount.getter in conformance Collaboration()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t protocol witness for Activity.bundleIdentifier.getter in conformance Collaboration()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void protocol witness for Activity.ongoingDescription.getter in conformance Collaboration()
{
  Collaboration.ongoingDescription.getter();
}

id StagedCollaboration.foregroundApp.getter()
{
  id *v0;

  return *v0;
}

uint64_t StagedCollaboration.type.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t StagedCollaboration.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for StagedCollaboration(0);
  OUTLINED_FUNCTION_33_0();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

void StagedCollaboration.title.getter()
{
  type metadata accessor for StagedCollaboration(0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void StagedCollaboration.subtitle.getter()
{
  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void StagedCollaboration.image.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + *(int *)(OUTLINED_FUNCTION_205() + 36));
  OUTLINED_FUNCTION_0();
}

id StagedCollaboration.shareableContent.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(OUTLINED_FUNCTION_205() + 40));
}

uint64_t StagedCollaboration.description.getter()
{
  void **v0;
  uint64_t v1;
  Swift::String v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Swift::String v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  void *v17;

  v1 = 7104878;
  _StringGuts.grow(_:)(80);
  v2._countAndFlagsBits = 0xD00000000000002CLL;
  v2._object = (void *)0x80000001BD680A00;
  String.append(_:)(v2);
  v17 = *v0;
  type metadata accessor for ForegroundApp();
  v3 = v17;
  v4._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v4);
  OUTLINED_FUNCTION_53();
  v5._countAndFlagsBits = 0x6974202020200A2CLL;
  v5._object = (void *)0xED0000203A656C74;
  String.append(_:)(v5);
  v6 = OUTLINED_FUNCTION_205();
  if (*(void **)((char *)v0 + *(int *)(v6 + 28) + 8))
  {
    OUTLINED_FUNCTION_22_52();
    v7 = String.init<A>(reflecting:)();
    v9 = v8;
  }
  else
  {
    v9 = 0xE300000000000000;
    v7 = 7104878;
  }
  v10 = v9;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  v11._object = (void *)0x80000001BD680A30;
  v11._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v11);
  if (*(void **)((char *)v0 + *(int *)(v6 + 32) + 8))
  {
    OUTLINED_FUNCTION_22_52();
    v1 = String.init<A>(reflecting:)();
    v13 = v12;
  }
  else
  {
    v13 = (void *)0xE300000000000000;
  }
  v14._countAndFlagsBits = v1;
  v14._object = v13;
  String.append(_:)(v14);
  OUTLINED_FUNCTION_2_1();
  v15._countAndFlagsBits = 62;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  return 0;
}

void StagedCollaboration.hash(into:)()
{
  uint64_t v0;
  int *v1;
  void *v2;
  id v3;
  id v4;

  v1 = (int *)type metadata accessor for StagedCollaboration(0);
  if (*(_QWORD *)(v0 + v1[7] + 8))
  {
    OUTLINED_FUNCTION_20_5();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_19_53();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    OUTLINED_FUNCTION_31_14();
  }
  if (*(_QWORD *)(v0 + v1[8] + 8))
  {
    OUTLINED_FUNCTION_20_5();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_19_53();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    OUTLINED_FUNCTION_31_14();
  }
  v2 = *(void **)(v0 + v1[9]);
  if (v2)
  {
    OUTLINED_FUNCTION_20_5();
    v3 = v2;
    OUTLINED_FUNCTION_14_75();

  }
  else
  {
    OUTLINED_FUNCTION_31_14();
  }
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance StagedCollaboration()
{
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_25_40();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void StagedCollaboration.uniqueIdentifier.getter()
{
  type metadata accessor for StagedCollaboration(0);
  UUID.uuidString.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t StagedCollaboration.activeRemoteParticipantCount.getter()
{
  return 0;
}

void StagedCollaboration.bundleIdentifier.getter()
{
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t StagedCollaboration.isAppInstalled.getter()
{
  return 1;
}

void StagedCollaboration.icon.getter()
{
  uint64_t v0;

  ActivityType.icon.getter(*(_BYTE *)(v0 + 8));
}

void StagedCollaboration.concatenatedDescription.getter()
{
  uint64_t v0;
  id v1;

  if (!*(_QWORD *)(v0 + *(int *)(type metadata accessor for StagedCollaboration(0) + 28) + 8))
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_0_107(26, 0x80000001BD680A50);
    OUTLINED_FUNCTION_33_34();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_45_0();
}

void StagedCollaboration.ongoingDescription.getter()
{
  OUTLINED_FUNCTION_34_0();
}

void StagedCollaboration.metadataHash.getter()
{
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_25_40();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t StagedCollaboration.stagedCollaboration.getter@<X0>(uint64_t a1@<X8>)
{
  return Collaboration.collaboration.getter((void (*)(_QWORD))type metadata accessor for StagedCollaboration, a1);
}

uint64_t Collaboration.collaboration.getter@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;

  v4 = v2;
  outlined init with copy of RecentsCallItem(v4, a2, a1);
  v6 = ((uint64_t (*)(_QWORD))a1)(0);
  return __swift_storeEnumTagSinglePayload(a2, 0, 1, v6);
}

uint64_t protocol witness for Activity.type.getter in conformance StagedCollaboration()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t protocol witness for Activity.title.getter in conformance StagedCollaboration(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t protocol witness for Activity.subtitle.getter in conformance StagedCollaboration(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

void *protocol witness for Activity.image.getter in conformance StagedCollaboration(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 36));
  v3 = v2;
  return v2;
}

void outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(void *a1)
{
  outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(a1, (SEL *)&selRef_bundleIdentifier);
}

uint64_t outlined bridged method (pb) of @objc SWCollaborationHighlight.title.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void outlined bridged method (ob) of @objc LPLinkMetadata.title.getter(void *a1)
{
  outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(a1, (SEL *)&selRef_title);
}

void outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(void *a1, SEL *a2)
{
  id v3;

  v3 = objc_msgSend(a1, *a2);

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_73();
  }
  OUTLINED_FUNCTION_18();
}

uint64_t outlined init with copy of Collaboration.Metadata?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Metadata?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for Collaboration(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for Collaboration);
}

unint64_t lazy protocol witness table accessor for type Collaboration.Metadata and conformance Collaboration.Metadata()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata;
  if (!lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Collaboration.Metadata, &type metadata for Collaboration.Metadata);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata;
  if (!lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Collaboration.Metadata, &type metadata for Collaboration.Metadata);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Metadata and conformance Collaboration.Metadata);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Collaboration.State and conformance Collaboration.State()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Collaboration.State and conformance Collaboration.State;
  if (!lazy protocol witness table cache variable for type Collaboration.State and conformance Collaboration.State)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Collaboration.State, &type metadata for Collaboration.State);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.State and conformance Collaboration.State);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type StagedCollaboration and conformance StagedCollaboration()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type StagedCollaboration and conformance StagedCollaboration;
  if (!lazy protocol witness table cache variable for type StagedCollaboration and conformance StagedCollaboration)
  {
    v1 = type metadata accessor for StagedCollaboration(255);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for StagedCollaboration, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type StagedCollaboration and conformance StagedCollaboration);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Collaboration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_QWORD *)(a1 + 40) = a2[5];
    v8 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8 == 1)
    {
      v9 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v9;
      *(_QWORD *)(a1 + 80) = a2[10];
    }
    else
    {
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v8;
      v11 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v11;
      v12 = (void *)a2[10];
      *(_QWORD *)(a1 + 80) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = v12;
    }
    v14 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v14;
    v15 = *(int *)(a3 + 44);
    v16 = a1 + v15;
    v17 = (uint64_t)a2 + v15;
    v18 = type metadata accessor for URL();
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    *(_BYTE *)(a1 + *(int *)(a3 + 48)) = *((_BYTE *)a2 + *(int *)(a3 + 48));
  }
  return a1;
}

uint64_t destroy for Collaboration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = type metadata accessor for URL();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for Collaboration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    v9 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v9;
    v10 = *(void **)(a2 + 80);
    *(_QWORD *)(a1 + 80) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = v10;
  }
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  v13 = *(int *)(a3 + 44);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for URL();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  *(_BYTE *)(a1 + *(int *)(a3 + 48)) = *(_BYTE *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t assignWithCopy for Collaboration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (__int128 *)(a1 + 48);
  v7 = (__int128 *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *v6 = v9;
      *(_OWORD *)(a1 + 64) = v10;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      v13 = *(void **)(a2 + 80);
      *(_QWORD *)(a1 + 80) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = v13;
    }
  }
  else if (v8 == 1)
  {
    outlined destroy of Collaboration.Metadata(a1 + 48);
    v11 = *(_QWORD *)(a2 + 80);
    v12 = *(_OWORD *)(a2 + 64);
    *v6 = *v7;
    *(_OWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 80) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v15 = *(void **)(a1 + 80);
    v16 = *(void **)(a2 + 80);
    *(_QWORD *)(a1 + 80) = v16;
    v17 = v16;

  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = *(int *)(a3 + 44);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  *(_BYTE *)(a1 + *(int *)(a3 + 48)) = *(_BYTE *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t outlined destroy of Collaboration.Metadata(uint64_t a1)
{
  destroy for Collaboration.Metadata(a1);
  return a1;
}

uint64_t initializeWithTake for Collaboration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v7 = *(int *)(a3 + 44);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 48)) = *(_BYTE *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t assignWithTake for Collaboration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56) != 1)
  {
    v7 = *(_QWORD *)(a2 + 56);
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v9;
      swift_bridgeObjectRelease();
      v10 = *(void **)(a1 + 80);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

      goto LABEL_6;
    }
    outlined destroy of Collaboration.Metadata(a1 + 48);
  }
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
LABEL_6:
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 44);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  *(_BYTE *)(a1 + *(int *)(a3 + 48)) = *(_BYTE *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD29BBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + 8));
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_1_16(a1 + *(int *)(a3 + 44), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for Collaboration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD29BC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_15_13();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_0_29(v1 + *(int *)(v4 + 44), v0, v0, v5);
  }
}

uint64_t type metadata completion function for Collaboration()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Collaboration.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD29BD84 + 4 * byte_1BD655205[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD29BDB8 + 4 * byte_1BD655200[v4]))();
}

uint64_t sub_1BD29BDB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD29BDC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD29BDC8);
  return result;
}

uint64_t sub_1BD29BDD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD29BDDCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD29BDE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD29BDE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Collaboration.State()
{
  OUTLINED_FUNCTION_34_0();
}

void destroy for Collaboration.Metadata(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for Collaboration.Metadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for Collaboration.Metadata(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for Collaboration.Metadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration.Metadata(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Collaboration.Metadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for Collaboration.Metadata()
{
  OUTLINED_FUNCTION_34_0();
}

char *initializeBufferWithCopyOfBuffer for StagedCollaboration(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[8] = *((_BYTE *)a2 + 8);
    v8 = a3[6];
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for UUID();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = a3[7];
    v15 = a3[8];
    v16 = &v7[v14];
    v17 = (char **)((char *)a2 + v14);
    v18 = v17[1];
    *(_QWORD *)v16 = *v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = &v7[v15];
    v20 = (char **)((char *)a2 + v15);
    v21 = v20[1];
    *(_QWORD *)v19 = *v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = a3[9];
    v23 = a3[10];
    v24 = *(char **)((char *)a2 + v22);
    *(_QWORD *)&v7[v22] = v24;
    v25 = *(char **)((char *)a2 + v23);
    *(_QWORD *)&v7[v23] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = v24;
    v27 = v25;
  }
  return v7;
}

void destroy for StagedCollaboration(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + a2[6];
  v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for StagedCollaboration(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (_QWORD *)(a1 + v14);
  v19 = (_QWORD *)(a2 + v14);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[9];
  v22 = a3[10];
  v23 = *(void **)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v23;
  v24 = *(void **)(a2 + v22);
  *(_QWORD *)(a1 + v22) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = v23;
  v26 = v24;
  return a1;
}

uint64_t assignWithCopy for StagedCollaboration(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = *(void **)(a1 + v19);
  v21 = *(void **)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v21;
  v22 = v21;

  v23 = a3[10];
  v24 = *(void **)(a2 + v23);
  v25 = *(void **)(a1 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  v26 = v24;

  return a1;
}

uint64_t initializeWithTake for StagedCollaboration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  v11 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for StagedCollaboration(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);

  v23 = a3[10];
  v24 = *(void **)(a1 + v23);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);

  return a1;
}

uint64_t getEnumTagSinglePayload for StagedCollaboration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD29C4EC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_93_0(*a1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_1_16((uint64_t)a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for StagedCollaboration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD29C54C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_15_13();
  if (v3)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_0_29((uint64_t)v1 + *(int *)(v4 + 24), v0, v0, v5);
  }
}

uint64_t type metadata completion function for StagedCollaboration()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ObservableNotificationHandler.init(name:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 0;
  ObservationRegistrar.init()();
  v7 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
  v8 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  v9 = a1;
  swift_retain();
  v10 = static MainActor.shared.getter();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v9;
  v11[5] = v8;
  OUTLINED_FUNCTION_22();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v6, (uint64_t)&async function pointer to partial apply for closure #1 in ObservableNotificationHandler.init(name:), (uint64_t)v11);
  ObservableNotificationHandler.notificationTask.setter();

  return v2;
}

uint64_t sub_1BD29C76C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void ObservableNotificationHandler.deinit()
{
  uint64_t v0;

  swift_release();
  v0 = OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_17_1(v0);
  OUTLINED_FUNCTION_0();
}

uint64_t ObservableNotificationHandler.notificationTask.getter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_1_103();
  OUTLINED_FUNCTION_19();
  return swift_retain();
}

void ObservableNotificationHandler.notificationTask.setter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_34_3(KeyPath, (uint64_t)partial apply for closure #1 in ObservableNotificationHandler.notificationTask.setter, *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v0 + 224), v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_14_1();
}

uint64_t ObservableNotificationHandler.trackingProperty.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  OUTLINED_FUNCTION_1_103();
  OUTLINED_FUNCTION_19();
  return *(unsigned __int8 *)(v0 + 24);
}

void ObservableNotificationHandler.trackingProperty.setter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;

  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_34_3(KeyPath, (uint64_t)partial apply for closure #1 in ObservableNotificationHandler.trackingProperty.setter, *(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v0 + 224), v2);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_14_1();
}

Swift::Void __swiftcall ObservableNotificationHandler.willReturnChangingValue()()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_1_103();
  swift_release();
}

uint64_t ObservableNotificationHandler.access<A>(keyPath:)()
{
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type ObservableNotificationHandler and conformance ObservableNotificationHandler, (uint64_t (*)(uint64_t))type metadata accessor for ObservableNotificationHandler, (uint64_t)&protocol conformance descriptor for ObservableNotificationHandler);
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t ObservableNotificationHandler.withMutation<A, B>(keyPath:_:)()
{
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type ObservableNotificationHandler and conformance ObservableNotificationHandler, (uint64_t (*)(uint64_t))type metadata accessor for ObservableNotificationHandler, (uint64_t)&protocol conformance descriptor for ObservableNotificationHandler);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void key path setter for ObservableNotificationHandler.notificationTask : ObservableNotificationHandler()
{
  swift_retain();
  ObservableNotificationHandler.notificationTask.setter();
}

uint64_t closure #1 in ObservableNotificationHandler.notificationTask.setter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 16) = a2;
  swift_retain();
  return swift_release();
}

void ObservableNotificationHandler.__allocating_init(name:)(void *a1)
{
  swift_allocObject();
  ObservableNotificationHandler.init(name:)(a1);
  OUTLINED_FUNCTION_0();
}

uint64_t closure #1 in ObservableNotificationHandler.init(name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[13] = a4;
  v5[14] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notification?);
  v5[15] = swift_task_alloc();
  v6 = type metadata accessor for Notification();
  v5[16] = v6;
  v5[17] = *(_QWORD *)(v6 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v5[20] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncMapSequence<NSNotificationCenter.Notifications, String>.Iterator);
  v5[21] = v7;
  v5[22] = *(_QWORD *)(v7 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncMapSequence<NSNotificationCenter.Notifications, String>);
  v5[25] = v8;
  v5[26] = *(_QWORD *)(v8 - 8);
  v5[27] = swift_task_alloc();
  v5[28] = type metadata accessor for MainActor();
  v5[29] = static MainActor.shared.getter();
  v5[30] = dispatch thunk of Actor.unownedExecutor.getter();
  v5[31] = v9;
  return swift_task_switch();
}

uint64_t closure #1 in ObservableNotificationHandler.init(name:)()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v2 = NSNotificationCenter.notifications(named:object:)();

  v0[11] = v2;
  type metadata accessor for NSNotificationCenter.Notifications();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type NSNotificationCenter.Notifications and conformance NSNotificationCenter.Notifications, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1EF0], MEMORY[0x1E0CB1F00]);
  AsyncMapSequence.init(_:transform:)();
  AsyncMapSequence.base.getter();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.Iterator.transform.getter();
  AsyncMapSequence.Iterator.init(_:transform:)();
  swift_beginAccess();
  v3 = static MainActor.shared.getter();
  v0[32] = v3;
  if (v3)
  {
    swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter();
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v0[33] = v4;
  v0[34] = v6;
  return swift_task_switch();
}

{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 280) = AsyncMapSequence.Iterator.baseIterator.modify();
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type NSNotificationCenter.Notifications.Iterator and conformance NSNotificationCenter.Notifications.Iterator, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1EE0], MEMORY[0x1E0CB1EE8]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v1;
  *v1 = v0;
  v1[1] = closure #1 in ObservableNotificationHandler.init(name:);
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 280))(v2 + 16, 0);
  return swift_task_switch();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  int *v12;

  v2 = v0[15];
  v1 = v0[16];
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    outlined destroy of Notification?(v2);
    OUTLINED_FUNCTION_19();
    return swift_task_switch();
  }
  else
  {
    v5 = v0[23];
    v4 = v0[24];
    v6 = v0[21];
    v7 = v0[22];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0[17] + 32))(v0[18], v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6);
    v8 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[38] = v9;
    v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v0[39] = v10;
    v10(v5, v6);
    v12 = (int *)((char *)v8 + *v8);
    v11 = (_QWORD *)swift_task_alloc();
    v0[40] = v11;
    *v11 = v0;
    v11[1] = closure #1 in ObservableNotificationHandler.init(name:);
    return ((uint64_t (*)(_QWORD *, _QWORD))v12)(v0 + 9, v0[18]);
  }
}

{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 280))(v0 + 16, 1);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 136);
  v2 = *(_QWORD *)(*v0 + 144);
  v4 = *(_QWORD *)(*v0 + 128);
  swift_task_dealloc();
  swift_release();
  *(_QWORD *)(v1 + 328) = *(_QWORD *)(v1 + 80);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

{
  swift_release();
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    swift_getKeyPath();
    (*(void (**)(void))(*(_QWORD *)v2 + 224))();
    swift_release();
    OUTLINED_FUNCTION_19();
    v3 = static MainActor.shared.getter();
    *(_QWORD *)(v0 + 256) = v3;
    if (v3)
    {
      swift_getObjectType();
      v4 = dispatch thunk of Actor.unownedExecutor.getter();
      v6 = v5;
    }
    else
    {
      v4 = 0;
      v6 = 0;
    }
    *(_QWORD *)(v0 + 264) = v4;
    *(_QWORD *)(v0 + 272) = v6;
    return swift_task_switch();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_0_108(*(uint64_t (**)(_QWORD, _QWORD))(v0 + 312));
    OUTLINED_FUNCTION_4_92();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_release();
  OUTLINED_FUNCTION_0_108(*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8));
  OUTLINED_FUNCTION_4_92();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BD29D2A4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ObservableNotificationHandler.init(name:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in ObservableNotificationHandler.init(name:)(a1, v4, v5, v7, v6);
}

uint64_t type metadata accessor for ObservableNotificationHandler()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ObservableNotificationHandler;
  if (!type metadata singleton initialization cache for ObservableNotificationHandler)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t closure #1 in closure #1 in ObservableNotificationHandler.init(name:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in ObservableNotificationHandler.init(name:)()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 16);
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ObservableNotificationHandler.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  v0 = OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_17_1(v0);
  return swift_deallocClassInstance();
}

uint64_t ObjC metadata update function for ObservableNotificationHandler()
{
  return type metadata accessor for ObservableNotificationHandler();
}

uint64_t type metadata completion function for ObservableNotificationHandler()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ObservableNotificationHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObservableNotificationHandler.__allocating_init(name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of ObservableNotificationHandler.willReturnChangingValue()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ObservableNotificationHandler.access<A>(keyPath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ObservableNotificationHandler.withMutation<A, B>(keyPath:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

void partial apply for closure #1 in ObservableNotificationHandler.trackingProperty.setter()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 24) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1BD29D4DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ObservableNotificationHandler.notificationTask.getter();
  *a1 = result;
  return result;
}

uint64_t partial apply for closure #1 in ObservableNotificationHandler.notificationTask.setter()
{
  uint64_t v0;

  return closure #1 in ObservableNotificationHandler.notificationTask.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void specialized MutableCollection.subscript.getter(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;

  v3 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(a3 + 16);
  if (v4 >= a1)
  {
    v6 = __OFSUB__(v4, v3);
    v5 = (uint64_t)(v4 - v3) < 0;
  }
  else
  {
    v6 = 0;
    v5 = 1;
  }
  if (v5 != v6)
    goto LABEL_11;
  if (v3 < 0)
  {
LABEL_12:
    __break(1u);
    JUMPOUT(0x1BD29D5E8);
  }
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_73_11();
  OUTLINED_FUNCTION_18();
}

uint64_t static RecentsCollectionViewSection.callItemCases.getter()
{
  OUTLINED_FUNCTION_40_32();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_96_8();
  return specialized Array.init<A>(_:)();
}

ConversationKit::RecentsCollectionViewSection_optional __swiftcall RecentsCollectionViewSection.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 13;
  if ((unint64_t)rawValue < 0xD)
    v2 = rawValue;
  *v1 = v2;
  return (ConversationKit::RecentsCollectionViewSection_optional)rawValue;
}

uint64_t RecentsCollectionViewSection.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ConversationKit::RecentsCollectionViewSection_optional protocol witness for RawRepresentable.init(rawValue:) in conformance RecentsCollectionViewSection(Swift::Int *a1)
{
  return RecentsCollectionViewSection.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance RecentsCollectionViewSection(uint64_t *a1@<X8>)
{
  *a1 = RecentsCollectionViewSection.rawValue.getter();
  OUTLINED_FUNCTION_0();
}

void protocol witness for static CaseIterable.allCases.getter in conformance RecentsCollectionViewSection(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static RecentsCollectionViewSection.allCases.getter;
}

uint64_t RecentsCollectionViewModel.sections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RecentsCollectionViewModel.init(with:now:upcomingSectionItemLimit:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = static RecentsCollectionViewModel.sections(from:now:upcomingSectionItemLimit:)();
  OUTLINED_FUNCTION_27();
  v3 = OUTLINED_FUNCTION_33();
  result = OUTLINED_FUNCTION_17_1(v3);
  *a1 = v2;
  return result;
}

uint64_t RecentsCollectionViewModel.sectionable(for:identifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v6;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *v4;
  if (*(_QWORD *)(v6 + 16)
    && (result = specialized __RawDictionaryStorage.find<A>(_:)(*(unsigned __int8 *)result), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * result);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = v10 + 32;
      OUTLINED_FUNCTION_16_31();
      while (1)
      {
        outlined init with copy of IDSLookupManager(v12, (uint64_t)&v18);
        v13 = v19;
        v14 = v20;
        __swift_project_boxed_opaque_existential_1(&v18, v19);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14) == a2 && v15 == a3)
          break;
        v17 = OUTLINED_FUNCTION_13();
        OUTLINED_FUNCTION_27();
        if ((v17 & 1) != 0)
          goto LABEL_16;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
        v12 += 40;
        if (!--v11)
        {
          OUTLINED_FUNCTION_2_1();
          goto LABEL_14;
        }
      }
      OUTLINED_FUNCTION_2_1();
LABEL_16:
      OUTLINED_FUNCTION_53();
      outlined init with take of Notice(&v18, a4);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_14:
      *(_QWORD *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
    }
    return OUTLINED_FUNCTION_2_1();
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

void RecentsCollectionViewModel.sectionable(with:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v75[40];
  _QWORD v76[6];

  OUTLINED_FUNCTION_93();
  v66 = v1;
  v65 = v2;
  v60 = v3;
  v64 = type metadata accessor for RecentOngoingConversationMetadata(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v63 = v5;
  v62 = OUTLINED_FUNCTION_93_6();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  v61 = v7;
  v69 = type metadata accessor for RecentsCallItemType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v73 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = OUTLINED_FUNCTION_98_4();
  v68 = *(_QWORD *)(v72 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_5_27();
  v70 = v14;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v15);
  v71 = (uint64_t)&v59 - v16;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_62();
  v67 = v18;
  v19 = *v0;
  specialized _NativeDictionary.makeIterator()(*v0, v76);
  v20 = v76[0];
  v74 = v76[1];
  v21 = v76[3];
  v22 = v76[4];
  v23 = (unint64_t)(v76[2] + 64) >> 6;
  v59 = v19;
  OUTLINED_FUNCTION_16_31();
  v24 = MEMORY[0x1E0DEE9D8];
  if (!v22)
    goto LABEL_3;
LABEL_2:
  v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v26 = v25 | (v21 << 6);
  while (1)
  {
    v35 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v26);
    v36 = *(_QWORD *)(v35 + 16);
    v37 = *(_QWORD *)(v24 + 16);
    if (__OFADD__(v37, v36))
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      OUTLINED_FUNCTION_0_45();
      OUTLINED_FUNCTION_22_1();
      __break(1u);
      JUMPOUT(0x1BD29DF60);
    }
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || v37 + v36 > *(_QWORD *)(v24 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v24 = v38;
    }
    if (*(_QWORD *)(v35 + 16))
    {
      v39 = *(_QWORD *)(v24 + 16);
      if ((*(_QWORD *)(v24 + 24) >> 1) - v39 < v36)
        goto LABEL_55;
      v40 = v24 + 40 * v39 + 32;
      if (v35 + 32 < v40 + 40 * v36 && v40 < v35 + 32 + 40 * v36)
        goto LABEL_58;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCollectionViewSectionable);
      swift_arrayInitWithCopy();
      if (v36)
      {
        v42 = *(_QWORD *)(v24 + 16);
        v43 = __OFADD__(v42, v36);
        v44 = v42 + v36;
        if (v43)
          goto LABEL_56;
        *(_QWORD *)(v24 + 16) = v44;
      }
    }
    else if (v36)
    {
      goto LABEL_54;
    }
    OUTLINED_FUNCTION_30_4();
    if (v22)
      goto LABEL_2;
LABEL_3:
    v27 = v21 + 1;
    if (__OFADD__(v21, 1))
      goto LABEL_57;
    if (v27 >= v23)
      break;
    v28 = *(_QWORD *)(v74 + 8 * v27);
    v29 = v21 + 1;
    if (!v28)
    {
      if (v21 + 2 >= v23)
        break;
      OUTLINED_FUNCTION_90_10();
      if (!v28)
      {
        if (v30 + 2 >= v23)
          break;
        OUTLINED_FUNCTION_90_10();
        if (!v28)
        {
          if (v31 + 3 >= v23)
            break;
          OUTLINED_FUNCTION_90_10();
          if (!v28)
          {
            if (v32 + 4 >= v23)
              break;
            OUTLINED_FUNCTION_90_10();
            if (!v28)
            {
              v29 = v33 + 5;
              if (v33 + 5 >= v23)
                break;
              v28 = *(_QWORD *)(v74 + 8 * v29);
              if (!v28)
              {
                v34 = v21 + 7;
                do
                {
                  if (v34 >= v23)
                    goto LABEL_38;
                  v28 = *(_QWORD *)(v74 + 8 * v34++);
                }
                while (!v28);
                v29 = v34 - 1;
              }
            }
          }
        }
      }
    }
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    v21 = v29;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  swift_release();
  v45 = *(_QWORD *)(v24 + 16);
  if (v45)
  {
    v46 = v24 + 32;
    swift_bridgeObjectRetain();
    v47 = MEMORY[0x1E0DEE9D8];
    do
    {
      outlined init with copy of IDSLookupManager(v46, (uint64_t)v75);
      OUTLINED_FUNCTION_101_10((uint64_t)v75);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCollectionViewSectionable);
      v48 = v72;
      v49 = OUTLINED_FUNCTION_97();
      OUTLINED_FUNCTION_72((uint64_t)v12, v49 ^ 1u);
      OUTLINED_FUNCTION_103();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v48) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
      }
      else
      {
        v50 = v67;
        OUTLINED_FUNCTION_51_27((uint64_t)v12, v67);
        OUTLINED_FUNCTION_51_27(v50, v71);
        if ((OUTLINED_FUNCTION_83_8() & 1) == 0)
          v47 = OUTLINED_FUNCTION_80_8();
        v51 = *(_QWORD *)(v47 + 16);
        if (v51 >= *(_QWORD *)(v47 + 24) >> 1)
          v47 = OUTLINED_FUNCTION_80_8();
        *(_QWORD *)(v47 + 16) = v51 + 1;
        OUTLINED_FUNCTION_30_36();
        OUTLINED_FUNCTION_51_27(v71, v47 + v52 + *(_QWORD *)(v53 + 72) * v51);
      }
      v46 += 40;
      --v45;
    }
    while (v45);
    OUTLINED_FUNCTION_19_1();
  }
  else
  {
    OUTLINED_FUNCTION_2_1();
    v47 = MEMORY[0x1E0DEE9D8];
  }
  v54 = v70;
  if (*(_QWORD *)(v47 + 16))
  {
    OUTLINED_FUNCTION_30_36();
    v56 = v47 + v55;
    v74 = *(_QWORD *)(v57 + 72);
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_100_3(v56, v54);
    outlined init with copy of CaptionSectioner.SpeakerSection(v54, v73, type metadata accessor for RecentsCallItemType);
    v58 = (char *)&loc_1BD29DD5C + *((int *)qword_1BD29DF60 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  OUTLINED_FUNCTION_83_14(v60, 1);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_52_1();
}

void RecentsCollectionViewModel.videoMessageCallItem(withUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE v91[40];
  _QWORD v92[6];

  OUTLINED_FUNCTION_93();
  a19 = v22;
  a20 = v23;
  v85 = v24;
  v81 = v25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = 0;
  v89 = OUTLINED_FUNCTION_98_4();
  v87 = *(_QWORD *)(v89 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_5_27();
  v83 = v30;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v31);
  v88 = (uint64_t)&v80 - v32;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_62();
  v86 = v34;
  v35 = *v20;
  specialized _NativeDictionary.makeIterator()(*v20, v92);
  v36 = v92[0];
  v90 = v92[1];
  v37 = v92[3];
  v38 = v92[4];
  v39 = (unint64_t)(v92[2] + 64) >> 6;
  v82 = v35;
  OUTLINED_FUNCTION_16_31();
  v40 = MEMORY[0x1E0DEE9D8];
  if (!v38)
    goto LABEL_3;
LABEL_2:
  v41 = __clz(__rbit64(v38));
  v38 &= v38 - 1;
  v42 = v41 | (v37 << 6);
  while (1)
  {
    v51 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v42);
    v21 = *(_QWORD *)(v51 + 16);
    v52 = *(_QWORD *)(v40 + 16);
    if (__OFADD__(v52, v21))
    {
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      OUTLINED_FUNCTION_0_45();
      OUTLINED_FUNCTION_22_1();
      __break(1u);
LABEL_65:
      outlined destroy of AccountUpdateNotice(v21, type metadata accessor for RecentsCallItem);
      OUTLINED_FUNCTION_58_1();
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || v52 + v21 > *(_QWORD *)(v40 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v40 = v53;
    }
    if (*(_QWORD *)(v51 + 16))
    {
      v54 = *(_QWORD *)(v40 + 16);
      if ((*(_QWORD *)(v40 + 24) >> 1) - v54 < v21)
        goto LABEL_61;
      v55 = v40 + 40 * v54 + 32;
      if (v51 + 32 < v55 + 40 * v21 && v55 < v51 + 32 + 40 * v21)
        goto LABEL_64;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCollectionViewSectionable);
      swift_arrayInitWithCopy();
      if (v21)
      {
        v57 = *(_QWORD *)(v40 + 16);
        v58 = __OFADD__(v57, v21);
        v59 = v57 + v21;
        if (v58)
          goto LABEL_62;
        *(_QWORD *)(v40 + 16) = v59;
      }
    }
    else if (v21)
    {
      goto LABEL_60;
    }
    OUTLINED_FUNCTION_53();
    if (v38)
      goto LABEL_2;
LABEL_3:
    v43 = v37 + 1;
    if (__OFADD__(v37, 1))
      goto LABEL_63;
    if (v43 >= v39)
      goto LABEL_38;
    v44 = *(_QWORD *)(v90 + 8 * v43);
    v45 = v37 + 1;
    if (!v44)
    {
      if (v37 + 2 >= v39)
        goto LABEL_38;
      OUTLINED_FUNCTION_85_11();
      if (!v44)
      {
        if (v46 + 2 >= v39)
          goto LABEL_38;
        OUTLINED_FUNCTION_85_11();
        if (!v44)
        {
          if (v47 + 3 >= v39)
            goto LABEL_38;
          OUTLINED_FUNCTION_85_11();
          if (!v44)
          {
            if (v48 + 4 >= v39)
              goto LABEL_38;
            OUTLINED_FUNCTION_85_11();
            if (!v44)
            {
              v45 = v49 + 5;
              if (v49 + 5 >= v39)
                goto LABEL_38;
              v44 = *(_QWORD *)(v90 + 8 * v45);
              if (!v44)
                break;
            }
          }
        }
      }
    }
LABEL_20:
    v38 = (v44 - 1) & v44;
    v42 = __clz(__rbit64(v44)) + (v45 << 6);
    v37 = v45;
  }
  v50 = v37 + 7;
  while (v50 < v39)
  {
    v44 = *(_QWORD *)(v90 + 8 * v50++);
    if (v44)
    {
      v45 = v50 - 1;
      goto LABEL_20;
    }
  }
LABEL_38:
  swift_bridgeObjectRelease();
  swift_release();
  v60 = *(_QWORD *)(v40 + 16);
  if (v60)
  {
    v61 = v40 + 32;
    swift_bridgeObjectRetain();
    v62 = MEMORY[0x1E0DEE9D8];
    do
    {
      outlined init with copy of IDSLookupManager(v61, (uint64_t)v91);
      OUTLINED_FUNCTION_101_10((uint64_t)v91);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentsCollectionViewSectionable);
      v63 = v89;
      v64 = OUTLINED_FUNCTION_97();
      __swift_storeEnumTagSinglePayload((uint64_t)v28, v64 ^ 1u, 1, v63);
      OUTLINED_FUNCTION_103();
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v63) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
      }
      else
      {
        v65 = v86;
        OUTLINED_FUNCTION_92_9((uint64_t)v28, v86);
        OUTLINED_FUNCTION_92_9(v65, v88);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v62 = OUTLINED_FUNCTION_72_10();
        v66 = *(_QWORD *)(v62 + 16);
        if (v66 >= *(_QWORD *)(v62 + 24) >> 1)
          v62 = OUTLINED_FUNCTION_72_10();
        *(_QWORD *)(v62 + 16) = v66 + 1;
        OUTLINED_FUNCTION_30_36();
        OUTLINED_FUNCTION_92_9(v69, v62 + v67 + *(_QWORD *)(v68 + 72) * v66);
      }
      v61 += 40;
      --v60;
    }
    while (v60);
    OUTLINED_FUNCTION_19_1();
  }
  else
  {
    swift_bridgeObjectRelease();
    v62 = MEMORY[0x1E0DEE9D8];
  }
  v70 = *(_QWORD *)(v62 + 16);
  v71 = v85;
  v72 = v84;
  v21 = v83;
  if (v70)
  {
    OUTLINED_FUNCTION_30_36();
    v74 = v62 + v73;
    v76 = *(_QWORD *)(v75 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      OUTLINED_FUNCTION_100_3(v74, v21);
      v77 = closure #3 in RecentsCollectionViewModel.videoMessageCallItem(withUUID:)(v21, v71);
      if (v72)
        goto LABEL_65;
      if ((v77 & 1) != 0)
      {
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_99_6(v21, type metadata accessor for RecentsCallItem, (uint64_t)&a14);
        v78 = v74;
        v79 = 0;
        goto LABEL_58;
      }
      OUTLINED_FUNCTION_110(v21);
      v74 += v76;
      if (!--v70)
      {
        OUTLINED_FUNCTION_58_1();
        break;
      }
    }
  }
  v78 = v81;
  v79 = 1;
LABEL_58:
  OUTLINED_FUNCTION_83_14(v78, v79);
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #3 in RecentsCollectionViewModel.videoMessageCallItem(withUUID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a2;
  v2 = type metadata accessor for UUID();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v34);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - v17;
  v19 = RecentsCallItem.messageIndicatorViewModel.getter();
  if (v19)
  {
    v20 = v19;
    v33 = v3;
    v21 = objc_msgSend(v19, sel_messageUUID);

    if (v21)
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    v23 = (uint64_t)v9;
    __swift_storeEnumTagSinglePayload((uint64_t)v15, v22, 1, v2);
    outlined init with take of CaptionSectioner.SpeakerSection?((uint64_t)v15, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v3 = v33;
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v2);
    v23 = (uint64_t)v9;
  }
  v24 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v35, v2);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v2);
  v25 = (uint64_t)&v6[*(int *)(v24 + 48)];
  outlined init with copy of UUID?((uint64_t)v18, (uint64_t)v6);
  outlined init with copy of UUID?((uint64_t)v12, v25);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v2) == 1)
  {
    v26 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v25, 1, v2) == 1)
    {
      v27 = -1;
    }
    else
    {
      v26 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
      v27 = 0;
    }
  }
  else
  {
    outlined init with copy of UUID?((uint64_t)v6, v23);
    if (__swift_getEnumTagSinglePayload(v25, 1, v2) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v23, v2);
      v27 = 0;
      v26 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    }
    else
    {
      v28 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v32, v25, v2);
      lazy protocol witness table accessor for type UUID and conformance UUID();
      v35 = v23;
      v27 = dispatch thunk of static Equatable.== infix(_:_:)();
      v29 = *(void (**)(char *, uint64_t))(v3 + 8);
      v29(v28, v2);
      v26 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v29((char *)v35, v2);
    }
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, v26);
  return v27 & 1;
}

void *specialized UnsafeMutablePointer.initialize(from:count:)(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_45();
    OUTLINED_FUNCTION_31_2();
  }
  else
  {
    v3 = a1 + 32 * a2;
    if (a3 + 32 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_26_41();
      return OUTLINED_FUNCTION_6_73(v6, v7, v8);
    }
    OUTLINED_FUNCTION_0_45();
    OUTLINED_FUNCTION_30_1();
  }
  result = (void *)OUTLINED_FUNCTION_22_1();
  __break(1u);
  return result;
}

{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_45();
    OUTLINED_FUNCTION_31_2();
  }
  else
  {
    v3 = a1 + 4 * a2;
    if (a3 + 4 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_26_41();
      return OUTLINED_FUNCTION_6_73(v6, v7, v8);
    }
    OUTLINED_FUNCTION_0_45();
    OUTLINED_FUNCTION_30_1();
  }
  result = (void *)OUTLINED_FUNCTION_22_1();
  __break(1u);
  return result;
}

{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_45();
    OUTLINED_FUNCTION_31_2();
  }
  else
  {
    v3 = a1 + 72 * a2;
    if (a3 + 72 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_26_41();
      return OUTLINED_FUNCTION_6_73(v6, v7, v8);
    }
    OUTLINED_FUNCTION_0_45();
    OUTLINED_FUNCTION_30_1();
  }
  result = (void *)OUTLINED_FUNCTION_22_1();
  __break(1u);
  return result;
}

uint64_t specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int EnumTagSinglePayload;
  char *v33;
  char v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  _QWORD *v49;
  void (*v50)(uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;

  v61 = a4;
  v42 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v7 = MEMORY[0x1E0C80A78](v6);
  v51 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v47 = (char *)&v40 - v10;
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v40 - v11;
  v53 = type metadata accessor for Date();
  v12 = *(_QWORD *)(v53 - 8);
  v13 = MEMORY[0x1E0C80A78](v53);
  v44 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v13);
  v46 = (char *)&v40 - v16;
  v41 = a2;
  v52 = a3;
  if (a3 == a2)
    return result;
  v17 = 40 * v52 - 40;
  v45 = v12;
  while (2)
  {
    v18 = v42;
    v43 = v17;
    do
    {
      v19 = *v61 + v17;
      outlined init with copy of IDSLookupManager(v19 + 40, (uint64_t)&v58);
      outlined init with copy of IDSLookupManager(v19, (uint64_t)v55);
      v21 = v59;
      v20 = v60;
      v22 = __swift_project_boxed_opaque_existential_1(&v58, v59);
      v23 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v24 = (uint64_t)v54;
      v23(v21, v20);
      v25 = v53;
      if (__swift_getEnumTagSinglePayload(v24, 1, v53) == 1)
        goto LABEL_7;
      v49 = v22;
      v50 = v23;
      v26 = v46;
      v48 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v48(v46, v54, v25);
      v28 = v56;
      v27 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      v29 = (uint64_t)v47;
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v27);
      v25 = v53;
      if (__swift_getEnumTagSinglePayload(v29, 1, v53) == 1)
      {
        v30 = v45;
        (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v25);
        v24 = v29;
        v12 = v30;
        v23 = v50;
LABEL_7:
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v24, (uint64_t *)&demangling cache variable for type metadata for Date?);
        v31 = (uint64_t)v51;
        v23(v21, v20);
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v31, 1, v25);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v31, (uint64_t *)&demangling cache variable for type metadata for Date?);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
        if (EnumTagSinglePayload == 1)
          break;
        goto LABEL_10;
      }
      v33 = v44;
      v48(v44, (char *)v29, v25);
      v34 = static Date.> infix(_:_:)();
      v35 = v45;
      v36 = *(void (**)(char *, uint64_t))(v45 + 8);
      v36(v33, v25);
      v36(v26, v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
      v12 = v35;
      if ((v34 & 1) == 0)
        break;
LABEL_10:
      v37 = *v61;
      if (!*v61)
      {
        __break(1u);
        return result;
      }
      v38 = v37 + v17;
      outlined init with take of Notice((__int128 *)(v37 + v17 + 40), (uint64_t)&v58);
      v39 = *(_OWORD *)(v38 + 16);
      *(_OWORD *)(v38 + 40) = *(_OWORD *)v38;
      *(_OWORD *)(v38 + 56) = v39;
      *(_QWORD *)(v38 + 72) = *(_QWORD *)(v38 + 32);
      result = outlined init with take of Notice(&v58, v38);
      v17 -= 40;
      ++v18;
    }
    while (v52 != v18);
    v17 = v43 + 40;
    if (++v52 != v41)
      continue;
    return result;
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v34 = a1;
  v7 = type metadata accessor for Date();
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v32 - v12;
  v44 = a3;
  v33 = a2;
  if (a3 != a2)
  {
    v14 = 40 * v44 - 40;
    while (2)
    {
      v15 = v34;
      v35 = v14;
      while (1)
      {
        v16 = *a4 + v14;
        outlined init with copy of IDSLookupManager(v16 + 40, (uint64_t)&v41);
        outlined init with copy of IDSLookupManager(v16, (uint64_t)v38);
        v17 = v42;
        v18 = v43;
        __swift_project_boxed_opaque_existential_1(&v41, v42);
        v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 104))(v17, v18);
        if (!v19)
          break;
        v20 = (void *)v19;
        v22 = v39;
        v21 = v40;
        __swift_project_boxed_opaque_existential_1(v38, v39);
        v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 104))(v22, v21);
        if (v23)
        {
          v24 = (void *)v23;
          v25 = objc_msgSend(v20, sel_timestamp);
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          v26 = objc_msgSend(v24, sel_timestamp);
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          LOBYTE(v26) = static Date.> infix(_:_:)();
          v27 = v37;
          v28 = *(void (**)(char *, uint64_t))(v36 + 8);
          v28(v10, v37);
          v28(v13, v27);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
          result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
          if ((v26 & 1) == 0)
            goto LABEL_13;
        }
        else
        {

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
          result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
        }
        v29 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        v30 = v29 + v14;
        outlined init with take of Notice((__int128 *)(v29 + v14 + 40), (uint64_t)&v41);
        v31 = *(_OWORD *)(v30 + 16);
        *(_OWORD *)(v30 + 40) = *(_OWORD *)v30;
        *(_OWORD *)(v30 + 56) = v31;
        *(_QWORD *)(v30 + 72) = *(_QWORD *)(v30 + 32);
        result = outlined init with take of Notice(&v41, v30);
        v14 -= 40;
        if (v44 == ++v15)
          goto LABEL_13;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
LABEL_13:
      v14 = v35 + 40;
      if (++v44 != v33)
        continue;
      break;
    }
  }
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int EnumTagSinglePayload;
  unint64_t v46;
  BOOL v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  BOOL v51;
  unint64_t v52;
  __int128 v53;
  __int128 v54;
  unint64_t v56;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  unint64_t v72;
  BOOL v73;
  char *v74;
  BOOL v75;
  __int128 v76;
  __int128 v77;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  unint64_t v87;
  char *v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  _QWORD v95[3];
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[3];
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;

  v101 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v8 = MEMORY[0x1E0C80A78](v7);
  v85 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v83 = (char *)&v80 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v89 = (void (*)(char *, char *, uint64_t))((char *)&v80 - v13);
  v14 = MEMORY[0x1E0C80A78](v12);
  v86 = (char *)&v80 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v84 = (void (*)(char *, char *, uint64_t))((char *)&v80 - v17);
  MEMORY[0x1E0C80A78](v16);
  v88 = (char *)&v80 - v18;
  v19 = type metadata accessor for Date();
  v92 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v82 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v80 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v81 = (char *)&v80 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (uint64_t)(a2 - a1) / 40;
  v30 = (uint64_t)(a3 - a2) / 40;
  v90 = v27;
  if (v29 >= v30)
  {
    v56 = v101;
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - a2) / 40, v101);
    v94 = v56 + 40 * v30;
    if ((uint64_t)(a3 - a2) < 40 || a1 >= a2)
      goto LABEL_54;
    v86 = v24;
    v58 = a3 - 40;
    v91 = a1;
    while (1)
    {
      v87 = v94 - 40;
      outlined init with copy of IDSLookupManager(v94 - 40, (uint64_t)v98);
      v93 = a2;
      v88 = (char *)(a2 - 40);
      outlined init with copy of IDSLookupManager(a2 - 40, (uint64_t)v95);
      v60 = v99;
      v59 = v100;
      __swift_project_boxed_opaque_existential_1(v98, v99);
      v61 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
      v62 = (uint64_t)v89;
      v61(v60, v59);
      v63 = v90;
      if (__swift_getEnumTagSinglePayload(v62, 1, v90) == 1)
        goto LABEL_36;
      v84 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
      v84(v86, (char *)v89, v63);
      v64 = v96;
      v65 = v97;
      __swift_project_boxed_opaque_existential_1(v95, v96);
      v66 = v64;
      v62 = (uint64_t)v83;
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v66, v65);
      if (__swift_getEnumTagSinglePayload(v62, 1, v63) == 1)
        break;
      v69 = v82;
      v84(v82, (char *)v62, v63);
      v70 = v86;
      v68 = static Date.> infix(_:_:)();
      v71 = *(void (**)(char *, uint64_t))(v92 + 8);
      v71(v69, v63);
      v71(v70, v63);
LABEL_38:
      a2 = v93;
      v72 = v58 + 40;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
      if ((v68 & 1) != 0)
      {
        v73 = v72 != a2 || v58 >= a2;
        v74 = v88;
        a2 = (unint64_t)v88;
        if (!v73)
          goto LABEL_50;
      }
      else
      {
        v75 = v72 != v94 || v58 >= v94;
        v74 = (char *)v87;
        v94 = v87;
        if (!v75)
          goto LABEL_50;
      }
      v76 = *(_OWORD *)v74;
      v77 = *((_OWORD *)v74 + 1);
      *(_QWORD *)(v58 + 32) = *((_QWORD *)v74 + 4);
      *(_OWORD *)v58 = v76;
      *(_OWORD *)(v58 + 16) = v77;
LABEL_50:
      v58 -= 40;
      if (v94 <= v101 || a2 <= v91)
        goto LABEL_54;
    }
    (*(void (**)(char *, uint64_t))(v92 + 8))(v86, v63);
LABEL_36:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v62, (uint64_t *)&demangling cache variable for type metadata for Date?);
    v67 = (uint64_t)v85;
    v61(v60, v59);
    v68 = __swift_getEnumTagSinglePayload(v67, 1, v63) != 1;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v67, (uint64_t *)&demangling cache variable for type metadata for Date?);
    goto LABEL_38;
  }
  v31 = v27;
  v85 = (char *)&v80 - v28;
  v32 = v101;
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (uint64_t)(a2 - a1) / 40, v101);
  v94 = v32 + 40 * v29;
  if ((uint64_t)(a2 - a1) >= 40 && a2 < a3)
  {
    v87 = a3;
    while (1)
    {
      outlined init with copy of IDSLookupManager(a2, (uint64_t)v98);
      outlined init with copy of IDSLookupManager(v101, (uint64_t)v95);
      v34 = v99;
      v35 = v100;
      __swift_project_boxed_opaque_existential_1(v98, v99);
      v36 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v37 = (uint64_t)v88;
      v36(v34, v35);
      v38 = v31;
      if (__swift_getEnumTagSinglePayload(v37, 1, v31) == 1)
        goto LABEL_10;
      v91 = a1;
      v93 = a2;
      v39 = v85;
      v89 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
      v89(v85, v88, v38);
      v40 = v96;
      v41 = v97;
      __swift_project_boxed_opaque_existential_1(v95, v96);
      v42 = v40;
      v43 = v90;
      v37 = (uint64_t)v84;
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v41);
      v38 = v43;
      if (__swift_getEnumTagSinglePayload(v37, 1, v43) == 1)
        break;
      v48 = v81;
      v89(v81, (char *)v37, v43);
      v49 = static Date.> infix(_:_:)();
      v50 = *(void (**)(char *, uint64_t))(v92 + 8);
      v50(v48, v43);
      v50(v39, v43);
      v31 = v43;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
      a2 = v93;
      a1 = v91;
      if ((v49 & 1) == 0)
      {
LABEL_11:
        v46 = v101;
        v47 = a1 != v101 || a1 >= v101 + 40;
        v101 += 40;
        goto LABEL_19;
      }
LABEL_16:
      v51 = a1 == a2;
      v46 = a2;
      a2 += 40;
      v47 = !v51 || a1 >= a2;
LABEL_19:
      v52 = v87;
      if (v47)
      {
        v53 = *(_OWORD *)v46;
        v54 = *(_OWORD *)(v46 + 16);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(v46 + 32);
        *(_OWORD *)a1 = v53;
        *(_OWORD *)(a1 + 16) = v54;
      }
      a1 += 40;
      if (v101 >= v94 || a2 >= v52)
        goto LABEL_27;
    }
    (*(void (**)(char *, uint64_t))(v92 + 8))(v39, v43);
    a2 = v93;
    a1 = v91;
LABEL_10:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v37, (uint64_t *)&demangling cache variable for type metadata for Date?);
    v44 = (uint64_t)v86;
    v31 = v38;
    v36(v34, v35);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v44, 1, v38);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v44, (uint64_t *)&demangling cache variable for type metadata for Date?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
    if (EnumTagSinglePayload == 1)
      goto LABEL_11;
    goto LABEL_16;
  }
LABEL_27:
  a2 = a1;
LABEL_54:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v101, (uint64_t)(v94 - v101) / 40, a2);
  return 1;
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  char *v29;
  id v30;
  char *v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  unint64_t v36;
  BOOL v37;
  BOOL v38;
  __int128 v39;
  __int128 v40;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  unint64_t v52;
  char *v53;
  id v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  BOOL v59;
  unint64_t v60;
  __int128 v62;
  __int128 v63;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[3];
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;

  v8 = type metadata accessor for Date();
  v71 = *(_QWORD *)(v8 - 8);
  v72 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v70 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v69 = (char *)&v67 - v11;
  v12 = (uint64_t)(a2 - a1) / 40;
  v13 = (uint64_t)(a3 - a2) / 40;
  if (v12 >= v13)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - a2) / 40, a4);
    v14 = a4 + 40 * v13;
    v16 = (uint64_t)(a3 - a2) < 40 || a1 >= a2;
    v42 = a4;
    if (v16)
      goto LABEL_59;
    v73 = a4;
    v17 = a3 - 40;
    while (1)
    {
      v18 = v14 - 40;
      outlined init with copy of IDSLookupManager(v14 - 40, (uint64_t)v77);
      v19 = a2 - 40;
      outlined init with copy of IDSLookupManager(a2 - 40, (uint64_t)v74);
      v20 = v78;
      v21 = v79;
      __swift_project_boxed_opaque_existential_1(v77, v78);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 104))(v20, v21);
      if (v22)
      {
        v23 = (void *)v22;
        v80 = v14;
        v24 = v75;
        v25 = v76;
        __swift_project_boxed_opaque_existential_1(v74, v75);
        v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 104))(v24, v25);
        if (v26)
        {
          v27 = (void *)v26;
          v28 = objc_msgSend(v23, sel_timestamp);
          v68 = a2;
          v29 = v69;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          v30 = objc_msgSend(v27, sel_timestamp);
          v31 = v70;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          v32 = static Date.> infix(_:_:)();
          v33 = v72;
          v34 = *(void (**)(char *, uint64_t))(v71 + 8);
          v34(v31, v72);
          v35 = v29;
          a2 = v68;
          v34(v35, v33);
        }
        else
        {

          v32 = 1;
        }
        v14 = v80;
      }
      else
      {
        v32 = 0;
      }
      v36 = v17 + 40;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
      if ((v32 & 1) != 0)
      {
        v37 = v36 != a2 || v17 >= a2;
        a2 = v19;
        if (!v37)
          goto LABEL_31;
      }
      else
      {
        v38 = v36 != v14 || v17 >= v14;
        v19 = v18;
        v14 = v18;
        if (!v38)
          goto LABEL_31;
      }
      v39 = *(_OWORD *)v19;
      v40 = *(_OWORD *)(v19 + 16);
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(v19 + 32);
      *(_OWORD *)v17 = v39;
      *(_OWORD *)(v17 + 16) = v40;
LABEL_31:
      v17 -= 40;
      if (v14 <= v73 || a2 <= a1)
      {
        v42 = v73;
        goto LABEL_59;
      }
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, (uint64_t)(a2 - a1) / 40, a4);
  v14 = a4 + 40 * v12;
  if ((uint64_t)(a2 - a1) >= 40 && a2 < a3)
  {
    v42 = a4;
    v80 = a3;
    while (1)
    {
      outlined init with copy of IDSLookupManager(a2, (uint64_t)v77);
      outlined init with copy of IDSLookupManager(v42, (uint64_t)v74);
      v43 = v78;
      v44 = v79;
      __swift_project_boxed_opaque_existential_1(v77, v78);
      v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 104))(v43, v44);
      if (v45)
      {
        v46 = (void *)v45;
        v47 = v75;
        v48 = v76;
        __swift_project_boxed_opaque_existential_1(v74, v75);
        v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 104))(v47, v48);
        if (!v49)
        {

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
LABEL_54:
          v59 = a1 == a2;
          v60 = a2;
          a2 += 40;
          if (v59 && a1 < a2)
            goto LABEL_47;
          goto LABEL_46;
        }
        v50 = (void *)v49;
        v51 = objc_msgSend(v46, sel_timestamp);
        v52 = v14;
        v53 = v69;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v54 = objc_msgSend(v50, sel_timestamp);
        v55 = v70;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v54) = static Date.> infix(_:_:)();
        v56 = v72;
        v57 = *(void (**)(char *, uint64_t))(v71 + 8);
        v57(v55, v72);
        v58 = v53;
        v14 = v52;
        a3 = v80;
        v57(v58, v56);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
        if ((v54 & 1) != 0)
          goto LABEL_54;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
      }
      v59 = a1 == v42;
      v60 = v42;
      v42 += 40;
      if (v59 && a1 < v42)
        goto LABEL_47;
LABEL_46:
      v62 = *(_OWORD *)v60;
      v63 = *(_OWORD *)(v60 + 16);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(v60 + 32);
      *(_OWORD *)a1 = v62;
      *(_OWORD *)(a1 + 16) = v63;
LABEL_47:
      a1 += 40;
      if (v42 >= v14 || a2 >= a3)
      {
        a2 = a1;
        goto LABEL_59;
      }
    }
  }
  a2 = a1;
  v42 = a4;
LABEL_59:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v42, (uint64_t)(v14 - v42) / 40, a2);
  return 1;
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v7 = OUTLINED_FUNCTION_5_89(a1, a2, a3, a4);
  OUTLINED_FUNCTION_11_67(v7);
  v8 = *(_QWORD *)(v4 + 56);
  v9 = OUTLINED_FUNCTION_33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v6, v5, v9);
  OUTLINED_FUNCTION_20_56();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v10;
    OUTLINED_FUNCTION_91();
  }
}

{
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_30_43(a1, a2, a3, a4);
  if (v6)
    __break(1u);
  else
    OUTLINED_FUNCTION_45_31(v4, v5);
}

{
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v7 = OUTLINED_FUNCTION_5_89(a1, a2, a3, a4);
  OUTLINED_FUNCTION_11_67(v7);
  outlined init with take of ParticipantGridView.FrozenFrameOverlayState(v5, (void *)(*(_QWORD *)(v4 + 56) + 80 * v6));
  OUTLINED_FUNCTION_20_56();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v8;
    OUTLINED_FUNCTION_91();
  }
}

{
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_22_53(a1, a2, a3, a4);
  outlined init with take of ScreenSharingStateMonitor.Observation();
  OUTLINED_FUNCTION_20_56();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v5;
    OUTLINED_FUNCTION_0();
  }
}

{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  char v13;

  v5 = OUTLINED_FUNCTION_31_44(a1, a2, a3, a4);
  v7 = v6 + 40 * v5;
  v9 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  outlined init with take of Any(v11, (_OWORD *)(*(_QWORD *)(v10 + 56) + 32 * v5));
  OUTLINED_FUNCTION_20_56();
  if (v13)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v12;
    OUTLINED_FUNCTION_0();
  }
}

{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  char v11;

  v5 = OUTLINED_FUNCTION_31_44(a1, a2, a3, a4);
  *(_BYTE *)(v7 + v5) = v6;
  outlined init with take of Notice(v9, *(_QWORD *)(v8 + 56) + 40 * v5);
  OUTLINED_FUNCTION_20_56();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v10;
    OUTLINED_FUNCTION_0();
  }
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v7 = OUTLINED_FUNCTION_5_89(a1, a2, a3, a4);
  OUTLINED_FUNCTION_11_67(v7);
  *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6) = v5;
  OUTLINED_FUNCTION_20_56();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v8;
    OUTLINED_FUNCTION_91();
  }
}

{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  const void *v7;
  uint64_t v8;
  char v9;

  v5 = OUTLINED_FUNCTION_22_53(a1, a2, a3, a4);
  memcpy((void *)(v6 + 72 * v5), v7, 0x41uLL);
  OUTLINED_FUNCTION_20_56();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v8;
    OUTLINED_FUNCTION_0();
  }
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)(unint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = a6[6] + 24 * result;
  *(_BYTE *)v6 = a2 & 1;
  *(_QWORD *)(v6 + 8) = a3;
  *(_WORD *)(v6 + 16) = a4;
  *(_BYTE *)(v6 + 18) = BYTE2(a4) & 1;
  *(_BYTE *)(v6 + 19) = BYTE3(a4);
  *(_BYTE *)(v6 + 20) = BYTE4(a4) & 1;
  *(_BYTE *)(v6 + 21) = BYTE5(a4) & 1;
  *(_BYTE *)(v6 + 22) = BYTE6(a4) & 1;
  *(_QWORD *)(a6[7] + 8 * result) = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char v5;

  *(_QWORD *)(a3 + 8 * (a1 >> 6) + 64) |= 1 << a1;
  outlined init with take of Any(a2, (_OWORD *)(*(_QWORD *)(a3 + 56) + 32 * a1));
  OUTLINED_FUNCTION_20_56();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a3 + 16) = v4;
    OUTLINED_FUNCTION_0();
  }
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t v7;
  char v8;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  outlined init with take of Any(a4, (_OWORD *)(a5[7] + 32 * a1));
  OUTLINED_FUNCTION_20_56();
  if (v8)
  {
    __break(1u);
  }
  else
  {
    a5[2] = v7;
    OUTLINED_FUNCTION_0();
  }
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_13_69(a1, a2, a3, a4);
  if (v6)
    __break(1u);
  else
    OUTLINED_FUNCTION_45_31(v4, v5);
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a5[6] + a1) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * a1);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    OUTLINED_FUNCTION_78_13((uint64_t)a5, v8);
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_9_71(a1, a2, a3, a4, a5);
  if (v7)
    __break(1u);
  else
    OUTLINED_FUNCTION_78_13(v5, v6);
}

unint64_t lazy protocol witness table accessor for type [RecentsCollectionViewSection] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [RecentsCollectionViewSection] and conformance [A];
  if (!lazy protocol witness table cache variable for type [RecentsCollectionViewSection] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [RecentsCollectionViewSection]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [RecentsCollectionViewSection] and conformance [A]);
  }
  return result;
}

uint64_t dispatch thunk of RecentsCollectionViewSectionable.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RecentsCollectionViewSectionable.sectionDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RecentsCollectionViewSectionable.dataSourceId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RecentsCollectionViewSectionable.isOngoing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RecentsCollectionViewSectionable.sectionOverride.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

ValueMetadata *type metadata accessor for RecentsCollectionViewModel()
{
  return &type metadata for RecentsCollectionViewModel;
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  result = OUTLINED_FUNCTION_94_5(a1, a2, a3);
  *(_BYTE *)(v6 + result) = v5;
  v7 = (_QWORD *)(*(_QWORD *)(v4 + 56) + 16 * result);
  *v7 = v8;
  v7[1] = v9;
  v10 = *(_QWORD *)(v4 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    *(_QWORD *)(v4 + 16) = v12;
  return result;
}

{
  unint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  result = OUTLINED_FUNCTION_94_5(a1, a2, a3);
  *(_QWORD *)(v6 + 8 * result) = v5;
  v7 = (_QWORD *)(*(_QWORD *)(v4 + 56) + 32 * result);
  *v7 = v8;
  v7[1] = v9;
  v7[2] = v10;
  v7[3] = v11;
  v12 = *(_QWORD *)(v4 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    *(_QWORD *)(v4 + 16) = v14;
  return result;
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2 & 1;
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    OUTLINED_FUNCTION_45_31((uint64_t)a4, v6);
}

unint64_t specialized _NativeDictionary._insert(at:key:value:)(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

void specialized _NativeDictionary._insert(at:key:value:)(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for ObjectTracker.RuleGroup(0);
  outlined init with take of CaptionSectioner.SpeakerSection(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for ObjectTracker.RuleGroup);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  OUTLINED_FUNCTION_20_56();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    a4[2] = v10;
    OUTLINED_FUNCTION_91();
  }
}

void *outlined init with take of ParticipantGridView.FrozenFrameOverlayState(const void *a1, void *a2)
{
  __swift_memcpy74_8(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_39_40@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

_QWORD *OUTLINED_FUNCTION_76_11(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_89_12()
{
  return Calendar.isDate(_:equalTo:toGranularity:)();
}

uint64_t OUTLINED_FUNCTION_93_6()
{
  return type metadata accessor for RecentCallRecentItemMetadata(0);
}

void OUTLINED_FUNCTION_99_6(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  outlined init with take of CaptionSectioner.SpeakerSection(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t OUTLINED_FUNCTION_101_10(uint64_t a1)
{
  uint64_t v1;

  return outlined init with copy of IDSLookupManager(a1, v1 - 208);
}

uint64_t OUTLINED_FUNCTION_102_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_104_7()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void OUTLINED_FUNCTION_106_6()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  outlined destroy of AccountUpdateNotice(v0, v1);
}

void CallDisplayInfo.displayName.getter(unint64_t a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ListFormatStyle<StringStyle, [String]>.Width);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ListFormatStyle<StringStyle, [String]>.ListType);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v39 = v14 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ListFormatStyle<StringStyle, [String]>);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v19 = v18 - v17;
  if (!a3)
  {
    swift_bridgeObjectRetain();
    return;
  }
  if (a3 == 1)
  {
    v20 = objc_msgSend((id)a1, sel_displayName);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    OUTLINED_FUNCTION_44_33((void *)a1, a2);
    return;
  }
  v37 = v10;
  v38 = v12;
  v36 = v19;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = _CocoaArrayWrapper.endIndex.getter();
    outlined consume of CallDisplayInfo((void *)a1, a2, 2);
  }
  else
  {
    v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v21)
    goto LABEL_17;
  v32 = v7;
  v33 = v16;
  v34 = v15;
  v35 = v6;
  v40 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v22 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v23 = (id)MEMORY[0x1C3B73D18](v22, a1);
      else
        v23 = *(id *)(a1 + 8 * v22 + 32);
      v24 = v23;
      v25 = objc_msgSend(v23, sel_displayName, v32, v33, v34, v35);
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v28 = v27;

      v29 = *(_QWORD *)(v40 + 16);
      if (v29 >= *(_QWORD *)(v40 + 24) >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      ++v22;
      *(_QWORD *)(v40 + 16) = v29 + 1;
      v30 = v40 + 16 * v29;
      *(_QWORD *)(v30 + 32) = v26;
      *(_QWORD *)(v30 + 40) = v28;
    }
    while (v21 != v22);
    v15 = v34;
    v6 = v35;
    v7 = v32;
    v16 = v33;
LABEL_17:
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v38 + 104))(v39, *MEMORY[0x1E0CAEE60], v11);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v37, *MEMORY[0x1E0CAEE78], v6);
    OUTLINED_FUNCTION_57_0();
    OUTLINED_FUNCTION_35_26(&lazy protocol witness table cache variable for type [String] and conformance [A], v31, MEMORY[0x1E0DEAF38]);
    static FormatStyle.list<A>(type:width:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v37, v6);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v11);
    lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type ListFormatStyle<StringStyle, [String]> and conformance ListFormatStyle<A, B>, &demangling cache variable for type metadata for ListFormatStyle<StringStyle, [String]>, MEMORY[0x1E0CAEEB0]);
    Sequence.formatted<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v36, v15);
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

uint64_t CallDisplayInfo.displayLabel.getter(void *a1, void *a2, char a3)
{
  id v5;
  uint64_t v6;

  if (a3 != 1)
    return 0;
  v5 = objc_msgSend(a1, sel_callerIdSubstring);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_44_33(a1, a2);
  return v6;
}

void static CallDisplayInfo.== infix(_:_:)(void *a1, void *a2, char a3, void *a4, void *a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
      {
        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
        outlined copy of CallDisplayInfo(a1, a2, 1);
        outlined copy of CallDisplayInfo(a4, a5, 1);
        static NSObject.== infix(_:_:)();
        OUTLINED_FUNCTION_44_33(a4, a5);
        OUTLINED_FUNCTION_44_33(a1, a2);
      }
    }
    else if (a6 == 2)
    {
      specialized static Array<A>.== infix(_:_:)();
    }
  }
  else if (!a6 && (a1 != a4 || a2 != a5))
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

void protocol witness for static Equatable.== infix(_:_:) in conformance CallDisplayInfo(uint64_t a1, uint64_t a2)
{
  static CallDisplayInfo.== infix(_:_:)(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16), *(void **)a2, *(void **)(a2 + 8), *(_BYTE *)(a2 + 16));
}

void ConversationPresentationStateProvider.audioVideoMode.getter()
{
  OUTLINED_FUNCTION_47_16();
  OUTLINED_FUNCTION_36();
}

void ConversationPresentationStateProvider.audioVideoModePublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_10_24();
  OUTLINED_FUNCTION_13_47();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_21_53(&lazy protocol witness table cache variable for type CurrentValueSubject<TUConversationAVMode, Never> and conformance CurrentValueSubject<A, B>, v1, MEMORY[0x1E0C95FB8]);
  lazy protocol witness table accessor for type TUConversationAVMode and conformance TUConversationAVMode();
  OUTLINED_FUNCTION_5_59();
  OUTLINED_FUNCTION_13_23(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<TUConversationAVMode, Never>> and conformance Publishers.RemoveDuplicates<A>, v2, MEMORY[0x1E0C958E0]);
  OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_50_25();
  OUTLINED_FUNCTION_65_1();
}

void ConversationPresentationStateProvider.isSendingVideo.getter()
{
  OUTLINED_FUNCTION_39_41();
  OUTLINED_FUNCTION_36();
}

void ConversationPresentationStateProvider.isSendingVideoPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_18_58();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_21_53(lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, v1, MEMORY[0x1E0C95FB8]);
  OUTLINED_FUNCTION_16_60();
  OUTLINED_FUNCTION_35_26(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>> and conformance Publishers.RemoveDuplicates<A>, v2, MEMORY[0x1E0C958E0]);
  OUTLINED_FUNCTION_15_71();
  OUTLINED_FUNCTION_8_78();
  OUTLINED_FUNCTION_51_28();
  OUTLINED_FUNCTION_91();
}

void ConversationPresentationStateProvider.isMuted.getter()
{
  OUTLINED_FUNCTION_39_41();
  OUTLINED_FUNCTION_36();
}

void ConversationPresentationStateProvider.isMutedPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_18_58();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_21_53(lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, v1, MEMORY[0x1E0C95FB8]);
  OUTLINED_FUNCTION_16_60();
  OUTLINED_FUNCTION_35_26(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>> and conformance Publishers.RemoveDuplicates<A>, v2, MEMORY[0x1E0C958E0]);
  OUTLINED_FUNCTION_15_71();
  OUTLINED_FUNCTION_8_78();
  OUTLINED_FUNCTION_51_28();
  OUTLINED_FUNCTION_91();
}

uint64_t ConversationPresentationStateProvider.callDisplayInfo.getter()
{
  uint64_t v1;

  OUTLINED_FUNCTION_47_16();
  return v1;
}

void ConversationPresentationStateProvider.callDisplayInfoPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_10_24();
  OUTLINED_FUNCTION_13_47();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_21_53(&lazy protocol witness table cache variable for type CurrentValueSubject<CallDisplayInfo, Never> and conformance CurrentValueSubject<A, B>, v1, MEMORY[0x1E0C95FB8]);
  lazy protocol witness table accessor for type CallDisplayInfo and conformance CallDisplayInfo();
  OUTLINED_FUNCTION_5_59();
  OUTLINED_FUNCTION_13_23(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<CallDisplayInfo, Never>> and conformance Publishers.RemoveDuplicates<A>, v2, MEMORY[0x1E0C958E0]);
  OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_50_25();
  OUTLINED_FUNCTION_65_1();
}

uint64_t ConversationPresentationStateProvider.callDurationString.getter()
{
  uint64_t v1;

  CurrentValueSubject.value.getter();
  return v1;
}

void ConversationPresentationStateProvider.callDurationStringPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_10_24();
  OUTLINED_FUNCTION_13_47();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_21_53(&lazy protocol witness table cache variable for type CurrentValueSubject<String?, Never> and conformance CurrentValueSubject<A, B>, v1, MEMORY[0x1E0C95FB8]);
  lazy protocol witness table accessor for type String? and conformance <A> A?();
  OUTLINED_FUNCTION_5_59();
  OUTLINED_FUNCTION_13_23(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<String?, Never>> and conformance Publishers.RemoveDuplicates<A>, v2, MEMORY[0x1E0C958E0]);
  OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_50_25();
  OUTLINED_FUNCTION_65_1();
}

void ConversationPresentationStateProvider.image.getter()
{
  OUTLINED_FUNCTION_47_16();
  OUTLINED_FUNCTION_36();
}

void ConversationPresentationStateProvider.imagePublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_10_24();
  OUTLINED_FUNCTION_13_47();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_21_53(&lazy protocol witness table cache variable for type CurrentValueSubject<UIImage?, Never> and conformance CurrentValueSubject<A, B>, v1, MEMORY[0x1E0C95FB8]);
  lazy protocol witness table accessor for type UIImage? and conformance <A> A?();
  OUTLINED_FUNCTION_5_59();
  OUTLINED_FUNCTION_13_23(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<UIImage?, Never>> and conformance Publishers.RemoveDuplicates<A>, v2, MEMORY[0x1E0C958E0]);
  OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_6_17();
  OUTLINED_FUNCTION_50_25();
  OUTLINED_FUNCTION_65_1();
}

void ConversationPresentationStateProvider.isOneToOneModeEnabled.getter()
{
  OUTLINED_FUNCTION_39_41();
  OUTLINED_FUNCTION_36();
}

void ConversationPresentationStateProvider.isOneToOneModeEnabledPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_18_58();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_21_53(lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, v1, MEMORY[0x1E0C95FB8]);
  OUTLINED_FUNCTION_16_60();
  OUTLINED_FUNCTION_35_26(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>> and conformance Publishers.RemoveDuplicates<A>, v2, MEMORY[0x1E0C958E0]);
  OUTLINED_FUNCTION_15_71();
  OUTLINED_FUNCTION_8_78();
  OUTLINED_FUNCTION_51_28();
  OUTLINED_FUNCTION_91();
}

void ConversationPresentationStateProvider.hasHeldCall.getter()
{
  OUTLINED_FUNCTION_39_41();
  OUTLINED_FUNCTION_36();
}

void ConversationPresentationStateProvider.hasHeldCallPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_18_58();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_21_53(lazy protocol witness table cache variable for type CurrentValueSubject<Bool, Never> and conformance CurrentValueSubject<A, B>, v1, MEMORY[0x1E0C95FB8]);
  OUTLINED_FUNCTION_16_60();
  OUTLINED_FUNCTION_35_26(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<Bool, Never>> and conformance Publishers.RemoveDuplicates<A>, v2, MEMORY[0x1E0C958E0]);
  OUTLINED_FUNCTION_15_71();
  OUTLINED_FUNCTION_8_78();
  OUTLINED_FUNCTION_51_28();
  OUTLINED_FUNCTION_91();
}

uint64_t ConversationPresentationStateProvider.isEmergency.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t key path getter for ConversationPresentationStateProvider.stateManager : ConversationPresentationStateProvider@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 88;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v4);
  v6 = *(_QWORD *)(v3 + 96);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t key path setter for ConversationPresentationStateProvider.stateManager : ConversationPresentationStateProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 96) = v2;
  return swift_unknownObjectWeakAssign();
}

void ConversationPresentationStateProvider.stateManager.getter()
{
  OUTLINED_FUNCTION_4_93();
  OUTLINED_FUNCTION_26();
}

void ConversationPresentationStateProvider.stateManager.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 96) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void ConversationPresentationStateProvider.stateManager.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  OUTLINED_FUNCTION_26();
}

void (*sub_1BD2A1284(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  return ConversationPresentationStateProvider.stateManager.modify;
}

void ConversationPresentationStateProvider.stateManager.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 96) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t ConversationPresentationStateProvider.__allocating_init(avMode:isSendingVideo:isMuted:callDisplayInfo:callDurationString:image:isOneToOneModeEnabled:isEmergency:hasHeldCall:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6, uint64_t a7, uint64_t a8, void *a9, char a10, char a11)
{
  uint64_t v16;

  v16 = OUTLINED_FUNCTION_15();
  ConversationPresentationStateProvider.init(avMode:isSendingVideo:isMuted:callDisplayInfo:callDurationString:image:isOneToOneModeEnabled:isEmergency:hasHeldCall:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  return v16;
}

uint64_t ConversationPresentationStateProvider.init(avMode:isSendingVideo:isMuted:callDisplayInfo:callDurationString:image:isOneToOneModeEnabled:isEmergency:hasHeldCall:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6, uint64_t a7, uint64_t a8, void *a9, char a10, char a11)
{
  uint64_t v11;
  uint64_t v12;
  id v16;
  uint64_t v17;

  v12 = v11;
  *(_QWORD *)(v11 + 96) = 0;
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<TUConversationAVMode, Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)(v11 + 16) = OUTLINED_FUNCTION_11_68();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<Bool, Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)(v11 + 24) = OUTLINED_FUNCTION_11_68();
  OUTLINED_FUNCTION_28_47();
  *(_QWORD *)(v11 + 32) = OUTLINED_FUNCTION_11_68();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<UIImage?, Never>);
  OUTLINED_FUNCTION_14_0();
  v16 = a9;
  *(_QWORD *)(v11 + 56) = CurrentValueSubject.init(_:)();
  OUTLINED_FUNCTION_28_47();
  *(_QWORD *)(v11 + 64) = OUTLINED_FUNCTION_11_68();
  *(_BYTE *)(v11 + 80) = a11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<String?, Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)(v11 + 48) = OUTLINED_FUNCTION_11_68();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<CallDisplayInfo, Never>);
  OUTLINED_FUNCTION_14_0();
  outlined copy of CallDisplayInfo(a4, a5, a6);
  *(_QWORD *)(v11 + 40) = CurrentValueSubject.init(_:)();
  OUTLINED_FUNCTION_28_47();
  v17 = OUTLINED_FUNCTION_11_68();

  outlined consume of CallDisplayInfo(a4, a5, a6);
  *(_QWORD *)(v12 + 72) = v17;
  return v12;
}

Swift::Void __swiftcall ConversationPresentationStateProvider.toggleSendingVideo()()
{
  OUTLINED_FUNCTION_4_93();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2A1580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_32_34();
    OUTLINED_FUNCTION_3_64(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ConversationPresentationStateProvider.toggleMuted()()
{
  OUTLINED_FUNCTION_4_93();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2A15B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_32_34();
    OUTLINED_FUNCTION_3_64(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ConversationPresentationStateProvider.endCall()()
{
  OUTLINED_FUNCTION_4_93();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2A15F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_32_34();
    OUTLINED_FUNCTION_3_64(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t ConversationPresentationStateProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 88);
  return v0;
}

uint64_t ConversationPresentationStateProvider.__deallocating_deinit()
{
  ConversationPresentationStateProvider.deinit();
  return swift_deallocClassInstance();
}

void protocol witness for ConversationPresentationStateProviding.audioVideoMode.getter in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.audioVideoMode.getter();
}

void protocol witness for ConversationPresentationStateProviding.audioVideoModePublisher.getter in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.audioVideoModePublisher.getter();
}

uint64_t protocol witness for ConversationPresentationStateProviding.isSendingVideo.getter in conformance ConversationPresentationStateProvider()
{
  char v0;

  ConversationPresentationStateProvider.isSendingVideo.getter();
  return v0 & 1;
}

void protocol witness for ConversationPresentationStateProviding.isSendingVideoPublisher.getter in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.isSendingVideoPublisher.getter();
}

uint64_t protocol witness for ConversationPresentationStateProviding.isMuted.getter in conformance ConversationPresentationStateProvider()
{
  char v0;

  ConversationPresentationStateProvider.isMuted.getter();
  return v0 & 1;
}

void protocol witness for ConversationPresentationStateProviding.isMutedPublisher.getter in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.isMutedPublisher.getter();
}

uint64_t protocol witness for ConversationPresentationStateProviding.hasHeldCall.getter in conformance ConversationPresentationStateProvider()
{
  char v0;

  ConversationPresentationStateProvider.hasHeldCall.getter();
  return v0 & 1;
}

void protocol witness for ConversationPresentationStateProviding.hasHeldCallPublisher.getter in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.hasHeldCallPublisher.getter();
}

uint64_t protocol witness for ConversationPresentationStateProviding.callDisplayInfo.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.callDisplayInfo.getter();
}

void protocol witness for ConversationPresentationStateProviding.callDisplayInfoPublisher.getter in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.callDisplayInfoPublisher.getter();
}

void protocol witness for ConversationPresentationStateProviding.image.getter in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.image.getter();
}

void protocol witness for ConversationPresentationStateProviding.imagePublisher.getter in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.imagePublisher.getter();
}

uint64_t protocol witness for ConversationPresentationStateProviding.isOneToOneModeEnabled.getter in conformance ConversationPresentationStateProvider()
{
  char v0;

  ConversationPresentationStateProvider.isOneToOneModeEnabled.getter();
  return v0 & 1;
}

void protocol witness for ConversationPresentationStateProviding.isOneToOneModeEnabledPublisher.getter in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.isOneToOneModeEnabledPublisher.getter();
}

uint64_t protocol witness for ConversationPresentationStateProviding.isEmergency.getter in conformance ConversationPresentationStateProvider()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 80);
}

uint64_t protocol witness for ConversationPresentationStateProviding.callDurationString.getter in conformance ConversationPresentationStateProvider()
{
  return ConversationPresentationStateProvider.callDurationString.getter();
}

void protocol witness for ConversationPresentationStateProviding.callDurationStringPublisher.getter in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.callDurationStringPublisher.getter();
}

void protocol witness for ConversationPresentationStateProviding.toggleSendingVideo() in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.toggleSendingVideo()();
}

void protocol witness for ConversationPresentationStateProviding.toggleMuted() in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.toggleMuted()();
}

void protocol witness for ConversationPresentationStateProviding.endCall() in conformance ConversationPresentationStateProvider()
{
  ConversationPresentationStateProvider.endCall()();
}

void ConversationPresentationStateProvider.onAudioVideoModeUpdated(_:)()
{
  OUTLINED_FUNCTION_48_29();
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onSendingVideoStateUpdated(_:)(Swift::Bool a1)
{
  OUTLINED_FUNCTION_29_43();
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onMutedStateUpdated(_:)(Swift::Bool a1)
{
  OUTLINED_FUNCTION_29_43();
  OUTLINED_FUNCTION_36();
}

uint64_t ConversationPresentationStateProvider.onCallDisplayInfoUpdated(_:)()
{
  return OUTLINED_FUNCTION_48_29();
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onCallDurationUpdated(_:)(Swift::String_optional a1)
{
  CurrentValueSubject.send(_:)();
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onImageUpdated(_:)(UIImage_optional a1)
{
  OUTLINED_FUNCTION_48_29();
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onOneToOneModeEnabledStateUpdated(_:)(Swift::Bool a1)
{
  OUTLINED_FUNCTION_29_43();
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall ConversationPresentationStateProvider.onHasHeldCallUpdated(_:)(Swift::Bool a1)
{
  OUTLINED_FUNCTION_29_43();
  OUTLINED_FUNCTION_36();
}

id outlined copy of CallDisplayInfo(id result, id a2, char a3)
{
  if (a3 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a3 != 1)
  {
    if (a3)
      return result;
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TUConversationAVMode and conformance TUConversationAVMode()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type TUConversationAVMode and conformance TUConversationAVMode;
  if (!lazy protocol witness table cache variable for type TUConversationAVMode and conformance TUConversationAVMode)
  {
    type metadata accessor for TUConversationAVMode(255);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for TUConversationAVMode, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationAVMode and conformance TUConversationAVMode);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CallDisplayInfo and conformance CallDisplayInfo()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CallDisplayInfo and conformance CallDisplayInfo;
  if (!lazy protocol witness table cache variable for type CallDisplayInfo and conformance CallDisplayInfo)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallDisplayInfo, &type metadata for CallDisplayInfo);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CallDisplayInfo and conformance CallDisplayInfo);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type String? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = lazy protocol witness table cache variable for type String? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type String? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for String?);
    v2 = MEMORY[0x1E0DEA990];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type UIImage? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type UIImage? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type UIImage? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for UIImage?);
    v2 = lazy protocol witness table accessor for type UIImage and conformance NSObject();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIImage? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type UIImage and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UIImage and conformance NSObject;
  if (!lazy protocol witness table cache variable for type UIImage and conformance NSObject)
  {
    v1 = _sSo8NSObjectCMaTm_0(255, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFD00], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIImage and conformance NSObject);
  }
  return result;
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isSendingVideoPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isMuted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isMutedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.hasHeldCall.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.hasHeldCallPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.callDisplayInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.callDisplayInfoPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.image.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.imagePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isOneToOneModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isOneToOneModeEnabledPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.isEmergency.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.callDurationString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.callDurationStringPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.toggleSendingVideo()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.toggleMuted()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of ConversationPresentationStateProviding.endCall()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

void destroy for CallDisplayInfo(uint64_t a1)
{
  outlined consume of CallDisplayInfo(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t initializeBufferWithCopyOfBuffer for CallDisplayInfo(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  outlined copy of CallDisplayInfo(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CallDisplayInfo(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  outlined copy of CallDisplayInfo(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  outlined consume of CallDisplayInfo(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CallDisplayInfo(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  outlined consume of CallDisplayInfo(v4, v5, v6);
  return a1;
}

uint64_t getEnumTag for CallDisplayInfo(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t destructiveInjectEnumTag for CallDisplayInfo(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CallDisplayInfo()
{
  return &type metadata for CallDisplayInfo;
}

uint64_t type metadata accessor for ConversationPresentationStateProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationPresentationStateProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationPresentationStateProvider.__allocating_init(avMode:isSendingVideo:isMuted:callDisplayInfo:callDurationString:image:isOneToOneModeEnabled:isEmergency:hasHeldCall:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

char *specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

uint64_t specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

{
  uint64_t *v3;
  uint64_t result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(_QWORD *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  _QWORD *result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>, type metadata accessor for Participant, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<CaptionSectioner.Caption>, type metadata accessor for CaptionSectioner.Caption, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<TranscriptionViewModel.Caption>, type metadata accessor for TranscriptionViewModel.Caption, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<Participant.Caption>, type metadata accessor for Participant.Caption, (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

{
  specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB1658], (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.moveInitialize(from:count:), (void (*)(uint64_t, uint64_t, char *))specialized UnsafeMutablePointer.initialize(from:count:));
}

char *specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Float>);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

uint64_t specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ConversationLink>);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)();
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantMediaPriorities>);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)();
  }
  swift_release();
  return v10;
}

_QWORD *specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(_QWORD *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantPresentationContext>);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    specialized UnsafeMutablePointer.initialize(from:count:)(v13, v8, v12);
  }
  swift_release();
  return v10;
}

uint64_t OUTLINED_FUNCTION_39_41()
{
  return CurrentValueSubject.value.getter();
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t result;
  char *v29;
  char *v30;
  void (*v31)(char *, _QWORD);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54[40];
  uint64_t v55;

  v42 = a5;
  v43 = a8;
  v49 = a1;
  v50 = a2;
  v41 = *(_QWORD *)(a5 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v51 = v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v46 = (char *)&v37 - v15;
  v16 = a4;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_41();
  v45 = v18;
  v19 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_5_27();
  v40 = v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v37 - v23;
  v47 = v8;
  v25 = a6;
  v26 = dispatch thunk of Collection.count.getter();
  if (!v26)
    return static Array._allocateUninitialized(_:)();
  v27 = v26;
  v38 = v19;
  v55 = MEMORY[0x1C3B73DB4](v16);
  v48 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v27);
  v39 = v24;
  result = dispatch thunk of Collection.startIndex.getter();
  if (v27 < 0)
  {
    __break(1u);
  }
  else
  {
    v52 = v25;
    v29 = v46;
    v30 = v39;
    while (1)
    {
      v31 = (void (*)(char *, _QWORD))dispatch thunk of Collection.subscript.read();
      (*(void (**)(char *))(v14 + 16))(v29);
      v31(v54, 0);
      v32 = v53;
      v49(v29, v51);
      if (v32)
        break;
      v53 = 0;
      OUTLINED_FUNCTION_47_17();
      ContiguousArray.append(_:)();
      dispatch thunk of Collection.formIndex(after:)();
      if (!--v27)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v40, v30, v38);
        _expectEnd<A>(of:is:)();
        v33 = OUTLINED_FUNCTION_50();
        v34(v33);
        return v55;
      }
    }
    OUTLINED_FUNCTION_47_17();
    v35 = OUTLINED_FUNCTION_58_20();
    v36(v35, v38);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v43, v51, v42);
  }
  return result;
}

uint64_t _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t result;
  char *v32;
  uint64_t v33;
  int EnumTagSinglePayload;
  char *v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  void (*v53)(char *, char *);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v39 = a8;
  v40 = a5;
  v9 = v8;
  v53 = a1;
  v54 = a2;
  v38 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v52 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v51 = (char *)v37 - v14;
  v16 = v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v55 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v43 = (char *)v37 - v18;
  v19 = type metadata accessor for Optional();
  v41 = *(_QWORD *)(v19 - 8);
  v42 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v48 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a6;
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v50 = (char *)v37 - v29;
  v30 = dispatch thunk of Sequence.underestimatedCount.getter();
  v57 = MEMORY[0x1C3B73DB4](a4);
  type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v45, v16);
  v48 = v16;
  result = dispatch thunk of Sequence.makeIterator()();
  if (v30 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v30)
  {
    swift_getAssociatedConformanceWitness();
    v32 = v50;
    while (1)
    {
      dispatch thunk of IteratorProtocol.next()();
      result = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v53(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v39, v52, v40);
        return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v24, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      if (!--v30)
      {
        v33 = (uint64_t)v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v33 = (uint64_t)v49;
  v32 = v50;
LABEL_9:
  dispatch thunk of IteratorProtocol.next()();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v33, 1, AssociatedTypeWitness);
  v35 = v43;
  if (EnumTagSinglePayload == 1)
  {
    v36 = (uint64_t)v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v36, v42);
    return v57;
  }
  else
  {
    v52 = *(char **)(v55 + 32);
    v36 = (uint64_t)v49;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v52)(v35, v36, AssociatedTypeWitness);
      v53(v35, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v35, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      dispatch thunk of IteratorProtocol.next()();
      if (__swift_getEnumTagSinglePayload(v36, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v35, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(v39, v51, v40);
  }
}

BOOL Float.isAboveThreshold.getter(float a1)
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 328))() < (float)(a1 + 0.01);
}

BOOL static MostActiveParticipantsController.ProminenceChangeReason.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void MostActiveParticipantsController.ProminenceChangeReason.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

Swift::Int MostActiveParticipantsController.ProminenceChangeReason.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MostActiveParticipantsController<A>.ProminenceChangeReason(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MostActiveParticipantsController.ProminenceChangeReason.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MostActiveParticipantsController<A>.ProminenceChangeReason()
{
  char *v0;

  return MostActiveParticipantsController.ProminenceChangeReason.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance MostActiveParticipantsController<A>.ProminenceChangeReason(uint64_t a1)
{
  char *v1;

  MostActiveParticipantsController.ProminenceChangeReason.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MostActiveParticipantsController<A>.ProminenceChangeReason()
{
  char *v0;
  _BYTE v2[72];

  Hasher.init(_seed:)();
  MostActiveParticipantsController.ProminenceChangeReason.hash(into:)((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

uint64_t MostActiveParticipantsController.ActivityDetails.participantIdentifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t MostActiveParticipantsController.ActivityDetails.participantIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.participantIdentifier.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float MostActiveParticipantsController.ActivityDetails.currentEMA.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_32_35(*(int *)(a1 + 36));
}

void MostActiveParticipantsController.ActivityDetails.currentEMA.setter(uint64_t a1, float a2)
{
  OUTLINED_FUNCTION_31_45(*(int *)(a1 + 36), a2);
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.currentEMA.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float MostActiveParticipantsController.ActivityDetails.currentTimeScale.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_32_35(*(int *)(a1 + 40));
}

void MostActiveParticipantsController.ActivityDetails.currentTimeScale.setter(uint64_t a1, float a2)
{
  OUTLINED_FUNCTION_31_45(*(int *)(a1 + 40), a2);
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.currentTimeScale.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MostActiveParticipantsController.ActivityDetails.isActive.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

uint64_t MostActiveParticipantsController.ActivityDetails.isActive.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 44)) = result;
  return result;
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.isActive.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float MostActiveParticipantsController.ActivityDetails.prominenceWeight.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_32_35(*(int *)(a1 + 48));
}

void MostActiveParticipantsController.ActivityDetails.prominenceWeight.setter(uint64_t a1, float a2)
{
  OUTLINED_FUNCTION_31_45(*(int *)(a1 + 48), a2);
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.prominenceWeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float MostActiveParticipantsController.ActivityDetails.audioPriority.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_32_35(*(int *)(a1 + 52));
}

void MostActiveParticipantsController.ActivityDetails.audioPriority.setter(uint64_t a1, float a2)
{
  OUTLINED_FUNCTION_31_45(*(int *)(a1 + 52), a2);
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.audioPriority.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float MostActiveParticipantsController.ActivityDetails.videoPriority.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_32_35(*(int *)(a1 + 56));
}

void MostActiveParticipantsController.ActivityDetails.videoPriority.setter(uint64_t a1, float a2)
{
  OUTLINED_FUNCTION_31_45(*(int *)(a1 + 56), a2);
}

uint64_t (*MostActiveParticipantsController.ActivityDetails.videoPriority.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

BOOL static MostActiveParticipantsController.ActivityDetails.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t active;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_6_6();
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
    return 0;
  active = type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, a3, a4, v8);
  OUTLINED_FUNCTION_13_70(*(int *)(active + 36));
  if (!v11)
    return 0;
  OUTLINED_FUNCTION_13_70(*(int *)(v10 + 40));
  if (!v11)
    return 0;
  if (*(unsigned __int8 *)(v5 + *(int *)(v12 + 44)) != *(unsigned __int8 *)(v4 + *(int *)(v12 + 44)))
    return 0;
  OUTLINED_FUNCTION_13_70(*(int *)(v12 + 48));
  if (!v11)
    return 0;
  OUTLINED_FUNCTION_13_70(*(int *)(v13 + 52));
  if (!v11)
    return 0;
  OUTLINED_FUNCTION_13_70(*(int *)(v14 + 56));
  return v11 != 0;
}

int *MostActiveParticipantsController.ActivityDetails.init(participantIdentifier:currentEMA:currentTimeScale:isActive:prominenceWeight:audioPriority:videoPriority:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>, float a7@<S1>, float a8@<S2>, float a9@<S3>, float a10@<S4>)
{
  uint64_t v19;
  int *result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  result = (int *)type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, a3, a4, v19);
  *(float *)(a5 + result[9]) = a6;
  *(float *)(a5 + result[10]) = a7;
  *(_BYTE *)(a5 + result[11]) = a2;
  *(float *)(a5 + result[12]) = a8;
  *(float *)(a5 + result[13]) = a9;
  *(float *)(a5 + result[14]) = a10;
  return result;
}

BOOL protocol witness for static Comparable.< infix(_:_:) in conformance MostActiveParticipantsController<A>.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static MostActiveParticipantsController.ActivityDetails.< infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

BOOL static MostActiveParticipantsController.ActivityDetails.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t active;

  active = type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, a3, a4, a4);
  return (float)(*(float *)(a2 + *(int *)(active + 36)) * *(float *)(a2 + *(int *)(active + 48))) < (float)(*(float *)(a1 + *(int *)(active + 36)) * *(float *)(a1 + *(int *)(active + 48)));
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MostActiveParticipantsController<A>.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static MostActiveParticipantsController.ActivityDetails.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t key path getter for MostActiveParticipantsController.mostActiveParticipantDidChange : <A>MostActiveParticipantsController<A>@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)(unsigned __int8 *a1)@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unsigned __int8 *);
  __int128 v11;

  v11 = *(_OWORD *)(a3 + a2 - 16);
  v5 = *a1;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 24);
  if (v6)
  {
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = v11;
    *(_QWORD *)(v8 + 32) = v6;
    *(_QWORD *)(v8 + 40) = v7;
    v9 = partial apply for thunk for @escaping @callee_guaranteed (@unowned MostActiveParticipantsController<A>.ProminenceChangeReason) -> ();
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (void (*)(unsigned __int8 *))v8;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v6);
}

uint64_t key path setter for MostActiveParticipantsController.mostActiveParticipantDidChange : <A>MostActiveParticipantsController<A>(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char);
  uint64_t v10;
  uint64_t v11;

  v5 = *a1;
  v6 = a1[1];
  if (*a1)
  {
    v7 = a4 + a3;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed MostActiveParticipantsController<A>.ProminenceChangeReason) -> (@out ());
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v10 = *a2;
  swift_beginAccess();
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v5);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v11);
}

void MostActiveParticipantsController.mostActiveParticipantDidChange.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*(_QWORD *)(v0 + 16));
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_32();
}

void MostActiveParticipantsController.mostActiveParticipantDidChange.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_2_0();
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
  OUTLINED_FUNCTION_9_0();
}

void MostActiveParticipantsController.mostActiveParticipantDidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for MostActiveParticipantsController.participantEMADidChange : <A>MostActiveParticipantsController<A>@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)(uint64_t a1, float *a2, float *a3, float *a4)@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, float *, float *, float *);
  __int128 v11;

  v11 = *(_OWORD *)(a3 + a2 - 16);
  v5 = *a1;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 32);
  v7 = *(_QWORD *)(v5 + 40);
  if (v6)
  {
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = v11;
    *(_QWORD *)(v8 + 32) = v6;
    *(_QWORD *)(v8 + 40) = v7;
    v9 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A, @unowned Float, @unowned Float, @unowned Float) -> ();
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (void (*)(uint64_t, float *, float *, float *))v8;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v6);
}

uint64_t key path setter for MostActiveParticipantsController.participantEMADidChange : <A>MostActiveParticipantsController<A>(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, float, float, float);
  uint64_t v10;
  uint64_t v11;

  v5 = *a1;
  v6 = a1[1];
  if (*a1)
  {
    v7 = a4 + a3;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A, @in_guaranteed Float, @in_guaranteed Float, @in_guaranteed Float) -> (@out ());
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v10 = *a2;
  swift_beginAccess();
  v11 = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v10 + 32) = v9;
  *(_QWORD *)(v10 + 40) = v8;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v5);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v11);
}

void MostActiveParticipantsController.participantEMADidChange.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*(_QWORD *)(v0 + 32));
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_32();
}

void MostActiveParticipantsController.participantEMADidChange.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_2_0();
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
  OUTLINED_FUNCTION_9_0();
}

void MostActiveParticipantsController.participantEMADidChange.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MostActiveParticipantsController.currentVideoProminentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  OUTLINED_FUNCTION_49_1(*(_QWORD *)(*(_QWORD *)v0 + 112));
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_34_28();
  v1 = OUTLINED_FUNCTION_50();
  v2(v1);
  OUTLINED_FUNCTION_9_0();
}

void MostActiveParticipantsController.currentVideoProminentIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_49_1(*(_QWORD *)(*(_QWORD *)v1 + 112));
  OUTLINED_FUNCTION_2_0();
  v3 = OUTLINED_FUNCTION_34_28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_9_0();
}

void MostActiveParticipantsController.currentVideoProminentIdentifier.modify()
{
  OUTLINED_FUNCTION_56_26();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t MostActiveParticipantsController.configuration.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 120);
  OUTLINED_FUNCTION_2_0();
  return *(_QWORD *)v1;
}

uint64_t MostActiveParticipantsController.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  OUTLINED_FUNCTION_49_1(*(_QWORD *)(*(_QWORD *)v1 + 120));
  result = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)v1 = a1;
  return result;
}

void MostActiveParticipantsController.configuration.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

BOOL MostActiveParticipantsController.mostActiveParticipantProminenceChangeReason.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v10;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  v3 = type metadata accessor for Optional();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - v5;
  v7 = (uint64_t)v0 + *(_QWORD *)(v1 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v2) != 1;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v8;
  _QWORD aBlock[6];
  uint64_t v10;

  v10 = static Array._allocateUninitialized(_:)();
  v1 = *(void **)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  v2 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v2 + 16) = &v10;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v3 + 16) = partial apply for closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = partial apply for thunk for @callee_guaranteed () -> ();
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_48;
  v4 = _Block_copy(aBlock);
  v5 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v4);

  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = OUTLINED_FUNCTION_43();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

uint64_t closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *a2;
  v4 = (uint64_t *)((char *)a2 + *(_QWORD *)(*a2 + 128));
  swift_beginAccess();
  v15 = *v4;
  v5 = *(_QWORD *)(v3 + 88);
  v13 = *(_QWORD *)(v3 + 80);
  v14 = v5;
  type metadata accessor for MostActiveParticipantsController.ActivityDetails(255, v13, v5, v6);
  v7 = type metadata accessor for Array();
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v7);
  v10 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, uint64_t))partial apply for closure #1 in MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:), (uint64_t)&v12, v7, v13, MEMORY[0x1E0DEDCE8], v8, MEMORY[0x1E0DEDD18], v9);
  swift_bridgeObjectRelease();
  *a1 = v10;
  return swift_bridgeObjectRelease();
}

void MostActiveParticipantsController.__allocating_init(participantIdentifiers:configuration:)()
{
  OUTLINED_FUNCTION_6_6();
  swift_allocObject();
  MostActiveParticipantsController.init(participantIdentifiers:configuration:)();
  OUTLINED_FUNCTION_18();
}

_OWORD *MostActiveParticipantsController.init(participantIdentifiers:configuration:)()
{
  _OWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v31 = v4;
  v32 = v3;
  v5 = *(_QWORD **)v0;
  v36 = OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  v35 = v7;
  OUTLINED_FUNCTION_56_7();
  v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_81();
  type metadata accessor for OS_dispatch_queue.Attributes();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v12 = OUTLINED_FUNCTION_16_61();
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v16 = v15 - v14;
  v0[1] = 0u;
  v0[2] = 0u;
  v17 = v5[10];
  __swift_storeEnumTagSinglePayload((uint64_t)v0 + v5[14], 1, 1, v17);
  v18 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, v17, v5[11], v19);
  *(_QWORD *)((char *)v0 + v18) = static Array._allocateUninitialized(_:)();
  *(_QWORD *)((char *)v0 + *(_QWORD *)(*(_QWORD *)v0 + 136)) = 0;
  v20 = static Date.distantPast.getter();
  v21 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  OUTLINED_FUNCTION_59(v20, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.unspecified.getter();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, v10, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v1, *MEMORY[0x1E0DEF8D0], v30);
  *(_QWORD *)((char *)v0 + v21) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(_QWORD *)((char *)v0 + *(_QWORD *)(*(_QWORD *)v0 + 120)) = v31;
  v22 = *(void **)((char *)v0 + v21);
  v23 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v23 + 16) = v2;
  *(_QWORD *)(v23 + 24) = v32;
  v24 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed @Sendable () -> ());
  v25 = v22;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_26_42((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v16, v35, v24);
  _Block_release(v24);

  v26 = OUTLINED_FUNCTION_58_20();
  v27(v26, v36);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v16, v34);
  OUTLINED_FUNCTION_58_2();
  return v2;
}

uint64_t closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t active;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v13 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v14 = v3;
  v15 = a2;
  v4 = type metadata accessor for Array();
  active = type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, v13, v3, v5);
  v7 = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v4);
  v9 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, uint64_t))partial apply for closure #1 in closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:), (uint64_t)&v12, v4, active, MEMORY[0x1E0DEDCE8], v7, MEMORY[0x1E0DEDD18], v8);
  v10 = (uint64_t *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 128));
  swift_beginAccess();
  *v10 = v9;
  return swift_bridgeObjectRelease();
}

int *closure #1 in closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  float v10;
  uint64_t v12;

  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v8);
  if (one-time initialization token for shared != -1)
    swift_once();
  v10 = (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 408))();
  return MostActiveParticipantsController.ActivityDetails.init(participantIdentifier:currentEMA:currentTimeScale:isActive:prominenceWeight:audioPriority:videoPriority:)((uint64_t)v8, 0, a2, a3, a4, 0.0, v10, 1.0, 0.0, 0.0);
}

void MostActiveParticipantsController.update(_:mediaPriorities:)()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 *v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  unint64_t v13;
  _QWORD *v14;
  _OWORD *v15;
  __int128 v16;
  id v17;
  void *v18;
  _QWORD v19[6];
  __int128 v20;
  __int128 v21;
  __int128 v22;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v6 = *v0;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_43_37();
  v9 = *(_QWORD *)(v1 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_54_28();
  v12 = v3[1];
  v20 = *v3;
  v21 = v12;
  v22 = v3[2];
  v18 = *(void **)((char *)v0 + *(_QWORD *)(v6 + 152));
  OUTLINED_FUNCTION_24_34((uint64_t)v0, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  v13 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v1;
  v14[3] = *(_QWORD *)(v6 + 88);
  v14[4] = v0;
  OUTLINED_FUNCTION_24_34((uint64_t)v14 + v13, (uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
  v15 = (_OWORD *)((char *)v14 + ((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  v16 = v21;
  *v15 = v20;
  v15[1] = v16;
  v15[2] = v22;
  v19[4] = partial apply for closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:);
  v19[5] = v14;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  v19[3] = &block_descriptor_15_3;
  _Block_copy(v19);
  v17 = v18;
  OUTLINED_FUNCTION_22_54();
  outlined retain of ParticipantMediaPriorities((void **)&v20);
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_26_42((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OUTLINED_FUNCTION_5_91();
}

void sub_1BD2A4854()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50_3();

  OUTLINED_FUNCTION_11_69(*(_QWORD *)(v2 - 192));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 208) + 8))(v0, *(_QWORD *)(v2 - 200));
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int *active;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  float v27;
  float v28;
  float v29;
  uint64_t v30;
  float v31;
  uint64_t v32;
  uint64_t v33;
  float v34;
  uint64_t v35;
  float (*v36)(void);
  char *v37;
  uint64_t v38;
  float v39;
  float v40;
  float v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int v47;
  float v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  float v53;
  float v54;
  uint64_t v55;
  uint64_t v56;
  float v57;
  float v58;
  char v59;
  float v60;
  float v61;
  float v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  int v67;
  float v68;
  uint64_t v69;
  char *v70;
  float v71;
  float v72;
  uint64_t v73;
  uint64_t v74;
  Swift::Int v75;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  Swift::Int v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  Swift::Int v93;
  unsigned __int8 v94;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 80);
  v85 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v86 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for Optional();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v10 = (char *)&v77 - v9;
  v11 = *(_QWORD *)(v6 + 88);
  active = (int *)type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, v7, v11, v12);
  v82 = *((_QWORD *)active - 1);
  v14 = MEMORY[0x1E0C80A78](active);
  v80 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v77 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v77 - v19;
  MEMORY[0x1E0C80A78](v18);
  v81 = (char *)&v77 - v21;
  v22 = *(_QWORD *)(v6 + 128);
  v88 = a1;
  v23 = (uint64_t *)((char *)a1 + v22);
  swift_beginAccess();
  v92 = *v23;
  v89 = v7;
  v90 = v11;
  v83 = v11;
  v24 = a2;
  v91 = a2;
  v25 = type metadata accessor for Array();
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v25);
  v87 = v25;
  Collection.firstIndex(where:)();
  swift_bridgeObjectRelease();
  v84 = v93;
  v26 = v94;
  v28 = *(float *)(a3 + 40);
  v27 = *(float *)(a3 + 44);
  v29 = v27 + 0.01;
  if (one-time initialization token for shared != -1)
    swift_once();
  v31 = (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 328))();
  v32 = v85;
  if (v31 < v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v10, v24, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
    v33 = (uint64_t)v88 + *(_QWORD *)(*v88 + 112);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 40))(v33, v10, v79);
    v30 = swift_endAccess();
  }
  v34 = v28 + 0.01;
  v35 = static Defaults.shared;
  v36 = *(float (**)(void))(*(_QWORD *)static Defaults.shared + 328);
  if (((float (*)(uint64_t))v36)(v30) >= (float)(v28 + 0.01) && v36() >= v29)
  {
    if (v26)
    {
      v49 = v86;
      v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 16))(v86, v24, v7);
      v39 = (*(float (**)(uint64_t))(*(_QWORD *)v35 + 408))(v50);
      v40 = 0.0;
      v41 = 1.0;
      v42 = v81;
      v43 = (uint64_t)v81;
      v44 = (uint64_t)v49;
      v45 = 0;
      goto LABEL_13;
    }
    swift_beginAccess();
    v65 = v77;
    Array.subscript.getter();
    v66 = swift_endAccess();
    v67 = v65[active[11]];
    if (((v67 ^ (((float (*)(uint64_t))v36)(v66) >= v34)) & 1) != 0)
      v68 = *(float *)&v65[active[10]];
    else
      v68 = (*(float (**)(void))(*(_QWORD *)v35 + 408))();
    v51 = v82;
    v42 = v81;
    v69 = v83;
    v70 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v86, v24, v7);
    v71 = *(float *)&v65[active[9]];
    v72 = *(float *)&v65[active[12]];
    (*(void (**)(char *, int *))(v51 + 8))(v65, active);
    v55 = (uint64_t)v42;
    v56 = (uint64_t)v70;
    v57 = v71;
    v58 = v68;
    v59 = 0;
    v60 = v72;
    v61 = v28;
    v62 = v27;
    v63 = v7;
    v64 = v69;
LABEL_20:
    MostActiveParticipantsController.ActivityDetails.init(participantIdentifier:currentEMA:currentTimeScale:isActive:prominenceWeight:audioPriority:videoPriority:)(v56, v59, v63, v64, v55, v57, v58, v60, v61, v62);
    swift_beginAccess();
    v73 = v87;
    Array._makeMutableAndUnique()();
    v74 = *v23;
    v75 = v84;
    Array._checkSubscript_mutating(_:)(v84);
    (*(void (**)(unint64_t, char *, int *))(v51 + 24))(v74+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v75, v42, active);
    TPNumberPadCharacter.rawValue.getter(v73);
    goto LABEL_21;
  }
  if (!v26)
  {
    swift_beginAccess();
    Array.subscript.getter();
    v46 = swift_endAccess();
    v47 = v20[active[11]];
    if (((v47 ^ (((float (*)(uint64_t))v36)(v46) >= v34)) & 1) != 0)
      v48 = *(float *)&v20[active[10]];
    else
      v48 = (*(float (**)(void))(*(_QWORD *)v35 + 408))();
    v51 = v82;
    v42 = v81;
    v52 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v86, v24, v7);
    v53 = *(float *)&v20[active[9]];
    v54 = *(float *)&v20[active[12]];
    (*(void (**)(char *, int *))(v51 + 8))(v20, active);
    v55 = (uint64_t)v42;
    v56 = (uint64_t)v52;
    v57 = v53;
    v58 = v48;
    v59 = 1;
    v60 = v54;
    v61 = v28;
    v62 = v27;
    v63 = v7;
    v64 = v83;
    goto LABEL_20;
  }
  v37 = v86;
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 16))(v86, v24, v7);
  v39 = (*(float (**)(uint64_t))(*(_QWORD *)v35 + 408))(v38);
  v40 = 1.0;
  v41 = 1.0;
  v42 = v81;
  v43 = (uint64_t)v81;
  v44 = (uint64_t)v37;
  v45 = 1;
LABEL_13:
  MostActiveParticipantsController.ActivityDetails.init(participantIdentifier:currentEMA:currentTimeScale:isActive:prominenceWeight:audioPriority:videoPriority:)(v44, v45, v7, v83, v43, v40, v39, v41, v28, v27);
  v51 = v82;
  (*(void (**)(char *, char *, int *))(v82 + 16))(v80, v42, active);
  swift_beginAccess();
  Array.append(_:)();
LABEL_21:
  swift_endAccess();
  MostActiveParticipantsController.startEMATimerIfNecessary()();
  return (*(uint64_t (**)(char *, int *))(v51 + 8))(v42, active);
}

void MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  double v37;
  double v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[7];

  OUTLINED_FUNCTION_51_29();
  v1 = v0;
  v2 = *v0;
  v3 = OUTLINED_FUNCTION_285_0();
  v60 = *(_QWORD *)(v3 - 8);
  v61 = v3;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v59 = v5;
  v6 = OUTLINED_FUNCTION_16_61();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v56 = v8;
  OUTLINED_FUNCTION_56_7();
  v9 = type metadata accessor for DispatchTimeInterval();
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v52 = v11;
  OUTLINED_FUNCTION_56_7();
  v51 = type metadata accessor for DispatchTime();
  v49 = *(_QWORD *)(v51 - 8);
  OUTLINED_FUNCTION_10_1();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v50 = (char *)&v47 - v16;
  OUTLINED_FUNCTION_56_7();
  ObjectType = type metadata accessor for OS_dispatch_source.TimerFlags();
  v18 = *(_QWORD *)(ObjectType - 8);
  MEMORY[0x1E0C80A78](ObjectType);
  OUTLINED_FUNCTION_77();
  v21 = v20 - v19;
  v22 = OUTLINED_FUNCTION_8_13();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (uint64_t *)((char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = v2;
  v26 = *(_QWORD *)(v2 + 152);
  v27 = *(void **)((char *)v1 + v26);
  *v25 = v27;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E0DEF740], v22);
  v28 = v27;
  v29 = _dispatchPreconditionTest(_:)();
  v30 = (*(uint64_t (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
  if ((v29 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (!*(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 136)))
  {
    v48 = *(_QWORD *)(*v1 + 136);
    OUTLINED_FUNCTION_59(v30, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_source);
    v47 = v31;
    v32 = *(void **)((char *)v1 + v26);
    v62[0] = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_source.TimerFlags and conformance OS_dispatch_source.TimerFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
    v33 = v32;
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_26_42((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_source.TimerFlags] and conformance [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    v29 = static OS_dispatch_source.makeTimerSource(flags:queue:)();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v21, ObjectType);
    ObjectType = swift_getObjectType();
    static DispatchTime.now()();
    if (one-time initialization token for shared == -1)
    {
LABEL_4:
      OUTLINED_FUNCTION_59_20();
      v34 = v50;
      MEMORY[0x1C3B72C50](v15);
      v35 = *(void (**)(char *, uint64_t))(v49 + 8);
      v36 = v51;
      v35(v15, v51);
      OUTLINED_FUNCTION_59_20();
      v38 = v37;
      v39 = v52;
      default argument 2 of OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v52);
      MEMORY[0x1C3B73730](v34, v39, ObjectType, v38);
      (*(void (**)(_QWORD *, uint64_t))(v53 + 8))(v39, v54);
      v35(v34, v36);
      v40 = OUTLINED_FUNCTION_15();
      swift_weakInit();
      v41 = (_QWORD *)OUTLINED_FUNCTION_15();
      v42 = v55;
      v41[2] = *(_QWORD *)(v55 + 80);
      v41[3] = *(_QWORD *)(v42 + 88);
      v41[4] = v40;
      v62[4] = partial apply for closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary();
      v62[5] = v41;
      v62[0] = MEMORY[0x1E0C809B0];
      v62[1] = 1107296256;
      v62[2] = thunk for @escaping @callee_guaranteed () -> ();
      v62[3] = &block_descriptor_70_0;
      v43 = _Block_copy(v62);
      swift_retain();
      default argument 0 of OS_dispatch_source.setEventHandler(qos:flags:handler:)(ObjectType);
      v44 = v59;
      default argument 1 of OS_dispatch_source.setEventHandler(qos:flags:handler:)();
      OS_dispatch_source.setEventHandler(qos:flags:handler:)();
      _Block_release(v43);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v44, v61);
      v45 = OUTLINED_FUNCTION_58_20();
      v46(v45);
      swift_release();
      OUTLINED_FUNCTION_43();
      OS_dispatch_source.resume()();
      *(_QWORD *)((char *)v1 + v48) = v29;
      swift_unknownObjectRelease();
      goto LABEL_5;
    }
LABEL_7:
    swift_once();
    goto LABEL_4;
  }
LABEL_5:
  OUTLINED_FUNCTION_7_7();
}

void MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;
  char v15;

  OUTLINED_FUNCTION_93();
  v15 = v2;
  v4 = v3;
  v5 = *v0;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_43_37();
  v8 = *(_QWORD *)(v1 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_54_28();
  v14 = *(void **)((char *)v0 + *(_QWORD *)(v5 + 152));
  OUTLINED_FUNCTION_24_34((uint64_t)v0, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  v11 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v1;
  v12[3] = *(_QWORD *)(v5 + 88);
  v12[4] = v0;
  OUTLINED_FUNCTION_24_34((uint64_t)v12 + v11, (uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  *((_BYTE *)v12 + v11 + v9) = v15;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed @Sendable () -> ());
  v13 = v14;
  OUTLINED_FUNCTION_22_54();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_26_42((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_4_94();
  OUTLINED_FUNCTION_5_91();
}

void sub_1BD2A5538()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_50_3();

  OUTLINED_FUNCTION_11_69(*(_QWORD *)(v1 - 144));
  OUTLINED_FUNCTION_21_54();
  OUTLINED_FUNCTION_58_2();
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)(uint64_t a1, uint64_t a2, char a3)
{
  MostActiveParticipantsController.boostParticipantEMAToMax(_:)();
  if ((a3 & 1) == 0)
  {
    MostActiveParticipantsController.updateActiveParticipantsEMA()();
    MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)();
  }
}

void MostActiveParticipantsController.boostParticipantEMAToMax(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  char v23;

  OUTLINED_FUNCTION_51_29();
  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 80);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v21 = *(_QWORD *)(type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, v3, *(_QWORD *)(v2 + 88), v5)- 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_5_27();
  v20 = v7;
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_113_7();
  v9 = (uint64_t *)((char *)v0 + *(_QWORD *)(v2 + 128));
  OUTLINED_FUNCTION_2_0();
  v10 = OUTLINED_FUNCTION_80_9();
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v10);
  Collection.firstIndex(where:)();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
  {
    OUTLINED_FUNCTION_38_35();
    if (one-time initialization token for shared != -1)
      swift_once();
    (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 408))();
    OUTLINED_FUNCTION_78_14();
    v11 = OUTLINED_FUNCTION_61_18();
    OUTLINED_FUNCTION_27_40(v1, v11, v12, v13, v14);
    OUTLINED_FUNCTION_2_0();
    Array.append(_:)();
    OUTLINED_FUNCTION_16_24();
  }
  else
  {
    OUTLINED_FUNCTION_2_0();
    Array.subscript.getter();
    OUTLINED_FUNCTION_16_24();
    OUTLINED_FUNCTION_38_35();
    if (one-time initialization token for shared != -1)
      swift_once();
    OUTLINED_FUNCTION_78_14();
    v15 = OUTLINED_FUNCTION_61_18();
    OUTLINED_FUNCTION_27_40(v20, v15, v16, v17, v18);
    OUTLINED_FUNCTION_2_0();
    Array._makeMutableAndUnique()();
    v19 = *v9;
    Array._checkSubscript_mutating(_:)(v22);
    OUTLINED_FUNCTION_24_34(v19+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v22, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40));
    TPNumberPadCharacter.rawValue.getter(v10);
    OUTLINED_FUNCTION_16_24();
    OUTLINED_FUNCTION_68_12(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  }
  OUTLINED_FUNCTION_7_7();
}

uint64_t MostActiveParticipantsController.updateActiveParticipantsEMA()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t active;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t result;
  _QWORD *v21;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t TupleTypeMetadata2;
  uint64_t v35;

  v2 = *(_QWORD *)v0;
  v29 = OUTLINED_FUNCTION_285_0();
  v28 = *(_QWORD *)(v29 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  v27 = v4;
  v26 = OUTLINED_FUNCTION_16_61();
  v25 = *(_QWORD *)(v26 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v24 = v6;
  v7 = *(_QWORD *)(v2 + 88);
  v23 = *(_QWORD *)(v2 + 80);
  v22[3] = v7;
  active = type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, v23, v7, v8);
  MEMORY[0x1E0C80A78](active);
  OUTLINED_FUNCTION_5_27();
  v31 = v10;
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_113_7();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v33 = *(_QWORD *)(type metadata accessor for Optional() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_42_32();
  MEMORY[0x1E0C80A78](v13);
  v32 = (char *)v22 - v14;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_66_18();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_44_34();
  v17 = *(void **)(v0 + v16);
  *(_QWORD *)v0 = v17;
  OUTLINED_FUNCTION_52_25(v18, *MEMORY[0x1E0DEF740]);
  v19 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  result = OUTLINED_FUNCTION_39_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v17 & 1) != 0)
  {
    v21 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
    OUTLINED_FUNCTION_2_0();
    v30 = v21;
    v35 = *v21;
    OUTLINED_FUNCTION_80_9();
    OUTLINED_FUNCTION_10_23();
  }
  __break(1u);
  return result;
}

void MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  OUTLINED_FUNCTION_51_29();
  v2 = *v0;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_16_61();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_56_7();
  type metadata accessor for Date();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_42_32();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_113_7();
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_66_18();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_44_34();
  v9 = *(void **)((char *)v0 + v8);
  *v0 = (uint64_t)v9;
  OUTLINED_FUNCTION_52_25(v10, *MEMORY[0x1E0DEF740]);
  v11 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_39_0((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v9 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_0();
    type metadata accessor for MostActiveParticipantsController.ActivityDetails(255, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v12);
    OUTLINED_FUNCTION_25_41();
    OUTLINED_FUNCTION_10_23();
  }
  __break(1u);
  JUMPOUT(0x1BD2A6368);
}

void MostActiveParticipantsController.markParticipantAsReacting(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v3 = *v0;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_18_59();
  v7 = MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_8_79(v7, v8, v9, v10, v11, v12, v13, v14, v16);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v1;
  v15[3] = *(_QWORD *)(v3 + 88);
  v15[4] = v2;
  OUTLINED_FUNCTION_36_38((uint64_t)v15);
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed @Sendable () -> ());
  OUTLINED_FUNCTION_72_16();
  OUTLINED_FUNCTION_22_54();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_26_42((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_4_94();
  OUTLINED_FUNCTION_5_91();
}

void sub_1BD2A64BC()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_50_3();

  OUTLINED_FUNCTION_11_69(*(_QWORD *)(v1 - 144));
  OUTLINED_FUNCTION_21_54();
  OUTLINED_FUNCTION_58_2();
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)()
{
  MostActiveParticipantsController.boostParticipantEMAToMax(_:)();
  MostActiveParticipantsController.updateActiveParticipantsEMA()();
  MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)();
}

void MostActiveParticipantsController.markParticipantAsOffline(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  v5 = *v0;
  OUTLINED_FUNCTION_285_0();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_18_59();
  v9 = MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_8_79(v9, v10, v11, v12, v13, v14, v15, v16, v19);
  v17 = (v3 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v2;
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v5 + 88);
  OUTLINED_FUNCTION_36_38(v18);
  *(_QWORD *)(v18 + v17) = v4;
  OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed @Sendable () -> ());
  OUTLINED_FUNCTION_72_16();
  OUTLINED_FUNCTION_22_54();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_26_42((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_4_94();
  OUTLINED_FUNCTION_5_91();
}

void sub_1BD2A665C()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_50_3();

  OUTLINED_FUNCTION_11_69(*(_QWORD *)(v1 - 144));
  OUTLINED_FUNCTION_21_54();
  OUTLINED_FUNCTION_58_2();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t active;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  float v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  Swift::Int v27;
  char v28;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 88);
  active = type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, v4, v9, v10);
  v12 = *(_QWORD *)(active - 8);
  v13 = MEMORY[0x1E0C80A78](active);
  v25 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v24 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (one-time initialization token for shared != -1)
    swift_once();
  v17 = (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 408))();
  MostActiveParticipantsController.ActivityDetails.init(participantIdentifier:currentEMA:currentTimeScale:isActive:prominenceWeight:audioPriority:videoPriority:)((uint64_t)v7, 0, v4, v9, (uint64_t)v16, 0.0, v17, 1.0, 0.0, 0.0);
  v18 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 128));
  v19 = swift_beginAccess();
  v26 = *v18;
  MEMORY[0x1E0C80A78](v19);
  *(&v24 - 4) = v4;
  *(&v24 - 3) = v9;
  *(&v24 - 2) = a1;
  v20 = type metadata accessor for Array();
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v20);
  Collection.firstIndex(where:)();
  swift_bridgeObjectRelease();
  if (v28 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v16, active);
    swift_beginAccess();
    Array.append(_:)();
  }
  else
  {
    v21 = v27;
    swift_beginAccess();
    Array._makeMutableAndUnique()();
    v22 = *v18;
    Array._checkSubscript_mutating(_:)(v21);
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 24))(v22+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v21, v16, active);
    TPNumberPadCharacter.rawValue.getter(v20);
  }
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, active);
}

uint64_t closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()(void (*a1)(char *, float, float, float), float a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t active;
  uint64_t v14;
  uint64_t v16;

  v8 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  active = type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, v11, v12, v11);
  v14 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v14, a5);
  a1(v10, a2, *(float *)(v14 + *(int *)(active + 52)), *(float *)(v14 + *(int *)(active + 56)));
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a5);
}

void MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t active;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  active = type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v7 = MEMORY[0x1C3B730D0](a1, active);
  if (v7 <= 2)
  {
    MEMORY[0x1E0C80A78](v7);
    OUTLINED_FUNCTION_25_41();
    OUTLINED_FUNCTION_10_23();
  }
  v8 = OUTLINED_FUNCTION_25_41();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF38], v8);
  v9 = Sequence.enumerated()();
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  type metadata accessor for EnumeratedSequence();
  OUTLINED_FUNCTION_10_23();
}

void sub_1BD2A6BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, char *))partial apply for thunk for @callee_guaranteed (@unowned Int, @in_guaranteed MostActiveParticipantsController<A>.ActivityDetails) -> (@out MostActiveParticipantsController<A>.ActivityDetails), v10, v9, v8, MEMORY[0x1E0DEDCE8], a1, MEMORY[0x1E0DEDD18], a8);
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BD2A6C00);
}

void MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  v5 = (_QWORD *)*v0;
  v6 = OUTLINED_FUNCTION_8_13();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v11 = *(void **)((char *)v0 + v5[19]);
  *(_QWORD *)(v9 - v8) = v11;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v9 - v8, *MEMORY[0x1E0DEF740], v6);
  v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_39_0(v10, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  *(_QWORD *)&v34 = v4;
  OUTLINED_FUNCTION_2_0();
  v13 = v5[10];
  v14 = v5[11];
  type metadata accessor for MostActiveParticipantsController.ActivityDetails(255, v13, v14, v15);
  v33 = v2;
  v16 = type metadata accessor for Array();
  swift_bridgeObjectRetain();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v16);
  v17 = OUTLINED_FUNCTION_67_13();
  v32[1] = v32;
  v34 = v36;
  v35 = v37;
  MEMORY[0x1E0C80A78](v17);
  v32[-2] = v13;
  v32[-1] = v14;
  v18 = type metadata accessor for ArraySlice();
  v19 = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEBF88], v18);
  v5 = (_QWORD *)_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, uint64_t))partial apply for closure #1 in MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:), (uint64_t)&v32[-4], v18, v13, MEMORY[0x1E0DEDCE8], v19, MEMORY[0x1E0DEDD18], v20);
  swift_unknownObjectRelease();
  *(_QWORD *)&v34 = v33;
  swift_bridgeObjectRetain();
  v21 = OUTLINED_FUNCTION_67_13();
  v34 = v36;
  v35 = v37;
  MEMORY[0x1E0C80A78](v21);
  v32[-2] = v13;
  v32[-1] = v14;
  v4 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, uint64_t))partial apply for closure #2 in MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:), (uint64_t)&v32[-4], v18, v13, MEMORY[0x1E0DEDCE8], v19, MEMORY[0x1E0DEDD18], v22);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_69_13();
  if ((static Array<A>.== infix(_:_:)() & 1) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v23 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v23 + 16) = xmmword_1BD645380;
      *(_QWORD *)&v36 = v5;
      OUTLINED_FUNCTION_25_41();
      v24 = OUTLINED_FUNCTION_62_21();
      v26 = v25;
      swift_bridgeObjectRelease();
      v27 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
      v28 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v23 + 64) = v28;
      *(_QWORD *)(v23 + 32) = v24;
      *(_QWORD *)(v23 + 40) = v26;
      *(_QWORD *)&v36 = v4;
      v29 = OUTLINED_FUNCTION_62_21();
      v31 = v30;
      OUTLINED_FUNCTION_2_1();
      *(_QWORD *)(v23 + 96) = v27;
      *(_QWORD *)(v23 + 104) = v28;
      *(_QWORD *)(v23 + 72) = v29;
      *(_QWORD *)(v23 + 80) = v31;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      goto LABEL_6;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(uint64_t (*a1)(BOOL))
{
  BOOL v2;

  v2 = MostActiveParticipantsController.mostActiveParticipantProminenceChangeReason.getter();
  return a1(v2);
}

void closure #1 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t active;

  active = type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(active - 8) + 16))(a5, a1, active);
  if (one-time initialization token for shared != -1)
    swift_once();
  *(float *)(a5 + *(int *)(active + 48)) = (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 448))();
}

void closure #2 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t active;
  uint64_t v9;
  uint64_t v10;

  active = type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, a3, a4, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(active - 8) + 16))(a5, a2, active);
  if (a1 == 2)
  {
    v9 = one-time initialization token for shared;
    v10 = 55;
  }
  else if (a1 == 1)
  {
    v9 = one-time initialization token for shared;
    v10 = 54;
  }
  else
  {
    v9 = one-time initialization token for shared;
    if (a1)
      v10 = 56;
    else
      v10 = 53;
  }
  if (v9 != -1)
    swift_once();
  *(float *)(a5 + *(int *)(active + 48)) = (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 8 * v10))();
}

uint64_t thunk for @callee_guaranteed (@unowned Int, @in_guaranteed MostActiveParticipantsController<A>.ActivityDetails) -> (@out MostActiveParticipantsController<A>.ActivityDetails)(char *a1, uint64_t (*a2)(uint64_t, char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t TupleTypeMetadata2;

  v7 = *(_QWORD *)a1;
  type metadata accessor for MostActiveParticipantsController.ActivityDetails(255, a4, a5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v7, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    MostActiveParticipantsController.updateActiveParticipantsEMA()();
    if ((MostActiveParticipantsController.activityDetailsAboveThreshold()() & 1) != 0)
      MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)();
    return swift_release();
  }
  return result;
}

uint64_t MostActiveParticipantsController.activityDetailsAboveThreshold()()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t result;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[3];
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_93();
  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 80);
  v18[0] = *(_QWORD *)(*v0 + 88);
  v18[2] = type metadata accessor for MostActiveParticipantsController.ActivityDetails(255, v3, v18[0], v4);
  v19 = type metadata accessor for Optional();
  v18[1] = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v5 = type metadata accessor for Optional();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - v7;
  v9 = OUTLINED_FUNCTION_8_13();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_81();
  v11 = *(void **)((char *)v0 + *(_QWORD *)(v2 + 152));
  *v1 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v1, *MEMORY[0x1E0DEF740], v9);
  v12 = v11;
  v13 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v1, v9);
  if ((v13 & 1) != 0)
  {
    OUTLINED_FUNCTION_56_26();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_107_0((uint64_t)v8, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    OUTLINED_FUNCTION_45_10((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v15 = (uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 128));
    v16 = OUTLINED_FUNCTION_2_0();
    v20 = *v15;
    MEMORY[0x1E0C80A78](v16);
    v17 = v18[0];
    v18[-2] = v3;
    v18[-1] = v17;
    type metadata accessor for Array();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_10_23();
  }
  __break(1u);
  return result;
}

BOOL closure #1 in MostActiveParticipantsController.activityDetailsAboveThreshold()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  float v4;

  v4 = *(float *)(a1
                + *(int *)(type metadata accessor for MostActiveParticipantsController.ActivityDetails(0, a2, a3, a4)
                         + 36));
  if (one-time initialization token for shared != -1)
    swift_once();
  return (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 464))() < v4;
}

void MostActiveParticipantsController.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v0[2]);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v0[4]);
  OUTLINED_FUNCTION_56_26();
  v1 = OUTLINED_FUNCTION_34_28();
  OUTLINED_FUNCTION_17_1(v1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v2 = type metadata accessor for Date();
  OUTLINED_FUNCTION_17_1(v2);

  OUTLINED_FUNCTION_18();
}

uint64_t MostActiveParticipantsController.__deallocating_deinit()
{
  MostActiveParticipantsController.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MostActiveParticipantsController.ActivityDetails);
}

uint64_t sub_1BD2A7578()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter()
{
  uint64_t v0;

  return closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter(*(uint64_t **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1BD2A75A4()
{
  return swift_deallocObject();
}

uint64_t sub_1BD2A75B4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)()
{
  uint64_t v0;

  return closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD2A75E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  OUTLINED_FUNCTION_23_48();
  v4 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_39_0(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)(*(uint64_t **)(v0 + 32), v0 + v2, v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

void **outlined retain of ParticipantMediaPriorities(void **a1)
{
  void *v2;
  id v3;

  v2 = *a1;
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_1BD2A76BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_23_48();
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_39_0(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return OUTLINED_FUNCTION_6_10();
}

void partial apply for closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)(*(_QWORD *)(v0 + 32), v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_1BD2A7728()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  OUTLINED_FUNCTION_76();
  OUTLINED_FUNCTION_39_0(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return OUTLINED_FUNCTION_6_10();
}

void partial apply for closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)()
{
  closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)();
}

uint64_t sub_1BD2A77A0()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  OUTLINED_FUNCTION_69_13();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

void base witness table accessor for Equatable in MostActiveParticipantsController<A>.ProminenceChangeReason()
{
  JUMPOUT(0x1C3B750C8);
}

void base witness table accessor for Equatable in MostActiveParticipantsController<A>.ActivityDetails()
{
  JUMPOUT(0x1C3B750C8);
}

uint64_t type metadata completion function for MostActiveParticipantsController()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MostActiveParticipantsController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MostActiveParticipantsController);
}

uint64_t method lookup function for MostActiveParticipantsController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MostActiveParticipantsController.__allocating_init(participantIdentifiers:configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t storeEnumTagSinglePayload for MostActiveParticipantsController.ProminenceChangeReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD2A79AC + 4 * byte_1BD6558E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD2A79E0 + 4 * byte_1BD6558E0[v4]))();
}

uint64_t sub_1BD2A79E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2A79E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD2A79F0);
  return result;
}

uint64_t sub_1BD2A79FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD2A7A04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD2A7A08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2A7A10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for MostActiveParticipantsController.ProminenceChangeReason(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MostActiveParticipantsController.ProminenceChangeReason);
}

uint64_t type metadata accessor for MostActiveParticipantsController.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MostActiveParticipantsController.Configuration);
}

uint64_t type metadata instantiation function for MostActiveParticipantsController.ActivityDetails()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata completion function for MostActiveParticipantsController.ActivityDetails()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MostActiveParticipantsController.ActivityDetails(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  _DWORD *v20;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  v8 = v7 & 0xFC | 3;
  v9 = v7 & 0x100000;
  if (v8 > 7
    || v9 != 0
    || ((((((((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 15) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL)
     + 4 > 0x18)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v13 = (_DWORD *)(((unint64_t)v4 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL);
    v14 = (_DWORD *)(((unint64_t)a2 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL);
    *v13 = *v14;
    v15 = ((unint64_t)v13 + 7) & 0xFFFFFFFFFFFFFFFCLL;
    v16 = ((unint64_t)v14 + 7) & 0xFFFFFFFFFFFFFFFCLL;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
    v17 = (_DWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFCLL);
    v18 = (_DWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFCLL);
    *v17 = *v18;
    v19 = (_DWORD *)(((unint64_t)v17 + 7) & 0xFFFFFFFFFFFFFCLL);
    v20 = (_DWORD *)(((unint64_t)v18 + 7) & 0xFFFFFFFFFFFFFCLL);
    *v19 = *v20;
    *(_DWORD *)(((unint64_t)v19 + 7) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v20 + 7) & 0xFFFFFFFFFFFFFCLL);
  }
  return v4;
}

uint64_t destroy for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t initializeWithCopy for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  v10 = ((unint64_t)v8 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = (_DWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFCLL);
  v12 = (_DWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFCLL);
  *v11 = *v12;
  v13 = (_DWORD *)(((unint64_t)v11 + 7) & 0xFFFFFFFFFFFFFCLL);
  v14 = (_DWORD *)(((unint64_t)v12 + 7) & 0xFFFFFFFFFFFFFCLL);
  *v13 = *v14;
  *(_DWORD *)(((unint64_t)v13 + 7) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v14 + 7) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t assignWithCopy for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  v10 = ((unint64_t)v8 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = (_DWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFCLL);
  v12 = (_DWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFCLL);
  *v11 = *v12;
  v13 = (_DWORD *)(((unint64_t)v11 + 7) & 0xFFFFFFFFFFFFFCLL);
  v14 = (_DWORD *)(((unint64_t)v12 + 7) & 0xFFFFFFFFFFFFFCLL);
  *v13 = *v14;
  *(_DWORD *)(((unint64_t)v13 + 7) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v14 + 7) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t initializeWithTake for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  v10 = ((unint64_t)v8 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = (_DWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFCLL);
  v12 = (_DWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFCLL);
  *v11 = *v12;
  v13 = (_DWORD *)(((unint64_t)v11 + 7) & 0xFFFFFFFFFFFFFCLL);
  v14 = (_DWORD *)(((unint64_t)v12 + 7) & 0xFFFFFFFFFFFFFCLL);
  *v13 = *v14;
  *(_DWORD *)(((unint64_t)v13 + 7) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v14 + 7) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t assignWithTake for MostActiveParticipantsController.ActivityDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (_DWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFFCLL);
  v8 = (_DWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFFCLL);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  v10 = ((unint64_t)v8 + 7) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = (_DWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFCLL);
  v12 = (_DWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFCLL);
  *v11 = *v12;
  v13 = (_DWORD *)(((unint64_t)v11 + 7) & 0xFFFFFFFFFFFFFCLL);
  v14 = (_DWORD *)(((unint64_t)v12 + 7) & 0xFFFFFFFFFFFFFCLL);
  *v13 = *v14;
  *(_DWORD *)(((unint64_t)v13 + 7) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v14 + 7) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for MostActiveParticipantsController.ActivityDetails(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 >= 0xFE)
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    v13 = *(unsigned __int8 *)(((((a1 + v8 + 3) & 0xFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFCLL) + 4);
    if (v13 >= 2)
      return ((v13 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  if (((((((((((v8 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 15) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL)
       + 4) & 0xFFFFFFFC) != 0)
    v9 = 2;
  else
    v9 = a2 - v7 + 1;
  if (v9 >= 0x10000)
    v10 = 4;
  else
    v10 = 2;
  if (v9 < 0x100)
    v10 = 1;
  if (v9 >= 2)
    v11 = v10;
  else
    v11 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1BD2A7F34 + 4 * byte_1BD6558EA[v11]))();
}

void storeEnumTagSinglePayload for MostActiveParticipantsController.ActivityDetails(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((((((((*(_DWORD *)(v5 + 64) + 3) & 0xFFFFFFFC) + 15) & 0xFFFFFFFC) + 7) & 0xFFFFFFFC) + 7) & 0xFFFFFFFC) == 0xFFFFFFFC)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((((((*(_DWORD *)(v5 + 64) + 3) & 0xFFFFFFFC) + 15) & 0xFFFFFFFC) + 7) & 0xFFFFFFFC) + 7) & 0xFFFFFFFC) != 0xFFFFFFFC)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((((((*(_QWORD *)(v5 + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 15) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL)+ 7) & 0xFFFFFFFFFFFFFFFCLL)+ 4);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1BD2A80C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0xFE)
      *(_BYTE *)(((((v5 + v4 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 4) = a2 + 1;
    else
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
  }
  return result;
}

void sub_1BD2A8128(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x1BD2A8130);
  JUMPOUT(0x1BD2A80E4);
}

uint64_t sub_1BD2A8148()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A, @in_guaranteed Float, @in_guaranteed Float, @in_guaranteed Float) -> (@out ())(uint64_t a1, float a2, float a3, float a4)
{
  uint64_t v4;
  void (*v5)(uint64_t, float *, float *, float *);
  float v6;
  float v7;
  float v8;

  v5 = *(void (**)(uint64_t, float *, float *, float *))(v4 + 32);
  v7 = a3;
  v8 = a2;
  v6 = a4;
  v5(a1, &v8, &v7, &v6);
  OUTLINED_FUNCTION_36();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed A, @unowned Float, @unowned Float, @unowned Float) -> ()(uint64_t a1, float *a2, float *a3, float *a4)
{
  uint64_t v4;

  (*(void (**)(float, float, float))(v4 + 32))(*a2, *a3, *a4);
  OUTLINED_FUNCTION_0();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed MostActiveParticipantsController<A>.ProminenceChangeReason) -> (@out ())(char a1)
{
  uint64_t v1;
  void (*v2)(char *);
  char v3;

  v2 = *(void (**)(char *))(v1 + 32);
  v3 = a1 & 1;
  v2(&v3);
  OUTLINED_FUNCTION_36();
}

void partial apply for thunk for @escaping @callee_guaranteed (@unowned MostActiveParticipantsController<A>.ProminenceChangeReason) -> ()(unsigned __int8 *a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD))(v1 + 32))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD2A8214()
{
  swift_release();
  OUTLINED_FUNCTION_76();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)()
{
  uint64_t v0;

  return closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(*(uint64_t (**)(BOOL))(v0 + 16));
}

uint64_t partial apply for closure #2 in MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 16))(a2, a1);
}

void partial apply for closure #2 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  closure #2 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t partial apply for thunk for @callee_guaranteed (@unowned Int, @in_guaranteed MostActiveParticipantsController<A>.ActivityDetails) -> (@out MostActiveParticipantsController<A>.ActivityDetails)(char *a1)
{
  uint64_t v1;

  return thunk for @callee_guaranteed (@unowned Int, @in_guaranteed MostActiveParticipantsController<A>.ActivityDetails) -> (@out MostActiveParticipantsController<A>.ActivityDetails)(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void partial apply for closure #1 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  closure #1 in MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_1BD2A82C4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()()
{
  uint64_t v0;

  return closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()(*(void (**)(char *, float, float, float))(v0 + 32), *(float *)(v0 + 56), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 16));
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.boostParticipantEMAToMax(_:)()
{
  return partial apply for closure #1 in MostActiveParticipantsController.boostParticipantEMAToMax(_:)() & 1;
}

{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

BOOL partial apply for closure #1 in MostActiveParticipantsController.activityDetailsAboveThreshold()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return closure #1 in MostActiveParticipantsController.activityDetailsAboveThreshold()(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_1BD2A8338()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD2A835C()
{
  OUTLINED_FUNCTION_76();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  return closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()();
}

int *partial apply for closure #1 in closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return closure #1 in closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t partial apply for closure #1 in MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return partial apply for closure #2 in MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_76_12()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t key path setter for PushToTalkDisclosureButton.text : PushToTalkDisclosureButton(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x78);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

void PushToTalkDisclosureButton.text.didset()
{
  char *v0;
  id v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v1 = PushToTalkDisclosureButton.label.getter();
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_text];
  swift_beginAccess();
  v3 = *((_QWORD *)v2 + 1);
  if (v3)
  {
    v4 = *(_QWORD *)v2;
    swift_bridgeObjectRetain();
    v5 = (void *)MEMORY[0x1C3B72E00](v4, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v1, sel_setText_, v5);

  v6 = *((_QWORD *)v2 + 1);
  if (v6)
  {
    v7 = *(_QWORD *)v2;
    swift_bridgeObjectRetain();
    v8 = (void *)MEMORY[0x1C3B72E00](v7, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v0, sel_setAccessibilityLabel_, v8);

}

uint64_t PushToTalkDisclosureButton.text.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_text);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void PushToTalkDisclosureButton.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_text);
  OUTLINED_FUNCTION_2_0();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  PushToTalkDisclosureButton.text.didset();
}

void (*PushToTalkDisclosureButton.text.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return PushToTalkDisclosureButton.text.modify;
}

void PushToTalkDisclosureButton.text.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    PushToTalkDisclosureButton.text.didset();
}

id PushToTalkDisclosureButton.label.getter()
{
  return PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___label, (uint64_t (*)(uint64_t))closure #1 in PushToTalkDisclosureButton.label.getter);
}

id closure #1 in PushToTalkDisclosureButton.label.getter(void *a1)
{
  id v2;
  id v3;
  double v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  if (one-time initialization token for disclosureButtonLabel != -1)
    swift_once();
  objc_msgSend(v2, sel_setFont_, static Fonts.PTT.disclosureButtonLabel);
  v3 = objc_msgSend(a1, sel_tintColor);
  objc_msgSend(v2, sel_setTextColor_, v3);

  objc_msgSend(v2, sel_setNumberOfLines_, 1);
  objc_msgSend(v2, sel_setClipsToBounds_, 1);
  objc_msgSend(v2, sel_setLineBreakMode_, 4);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v4) = 1144750080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);
  objc_msgSend(v2, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48F0]);
  objc_msgSend(v2, sel_setMinimumContentSizeCategory_, *MEMORY[0x1E0DC4908]);
  return v2;
}

id PushToTalkDisclosureButton.chevronImageView.getter()
{
  return PushToTalkDisclosureButton.label.getter(&OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___chevronImageView, (uint64_t (*)(uint64_t))closure #1 in PushToTalkDisclosureButton.chevronImageView.getter);
}

id PushToTalkDisclosureButton.label.getter(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id closure #1 in PushToTalkDisclosureButton.chevronImageView.getter(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  double v7;
  id v8;
  id v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v3 = (void *)*MEMORY[0x1E0DC4A88];
  v11 = 0x2E6E6F7276656863;
  v12 = 0xEF64726177726F66;
  v13 = 2;
  v14 = v3;
  LOWORD(v15) = 0;
  v16 = 5;
  LOBYTE(v17) = 0;
  v18 = 0;
  v4 = v3;
  v5 = static UIImage.symbolImage(for:)((uint64_t)&v11);

  swift_bridgeObjectRelease();
  if (v5)
  {
    objc_msgSend(v2, sel_setNumberOfLines_, 1, v11, v12, v13, v14, v15, v16, v17, v18);
    objc_msgSend(v2, sel_setClipsToBounds_, 1);
    if (one-time initialization token for disclosureButtonLabel != -1)
      swift_once();
    objc_msgSend(v2, sel_setFont_, static Fonts.PTT.disclosureButtonLabel);
    objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
    v6 = objc_msgSend(a1, sel_tintColor);
    objc_msgSend(v2, sel_setTextColor_, v6);

    LODWORD(v7) = 1144750080;
    objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);
    v8 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v5);
    v9 = objc_msgSend((id)objc_opt_self(), sel_attributedStringWithAttachment_, v8);

    objc_msgSend(v2, sel_setAttributedText_, v9);
    objc_msgSend(v2, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48F0]);
    objc_msgSend(v2, sel_setMinimumContentSizeCategory_, *MEMORY[0x1E0DC4908]);

  }
  return v2;
}

id PushToTalkDisclosureButton.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void PushToTalkDisclosureButton.init(frame:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  double v5;
  objc_super *v6;
  SEL v7;
  id v8;
  uint64_t v9;
  char *v10;
  id v11;
  double v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;

  OUTLINED_FUNCTION_17_7();
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_text];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_contentView;
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v4 = v0;
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_123((uint64_t)v4, sel_init);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___label] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___chevronImageView] = 0;

  v19 = type metadata accessor for PushToTalkDisclosureButton();
  v5 = OUTLINED_FUNCTION_15_0();
  v8 = objc_msgSendSuper2(v6, v7, v5, v4, v19);
  v9 = one-time initialization token for disclosureButtonLabel;
  v10 = (char *)v8;
  if (v9 != -1)
    swift_once();
  objc_msgSend(v10, sel_setTintColor_, static Colors.PTT.disclosureButtonLabel);
  v11 = PushToTalkDisclosureButton.chevronImageView.getter();
  LODWORD(v12) = 1148846080;
  objc_msgSend(v11, sel_setContentCompressionResistancePriority_forAxis_, 0, v12);

  v13 = OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_contentView;
  v14 = *(void **)&v10[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_contentView];
  objc_msgSend(v10, sel_addSubview_, v14);
  v15 = v14;
  v16 = PushToTalkDisclosureButton.label.getter();
  OUTLINED_FUNCTION_4_95((uint64_t)v16);

  v17 = *(id *)&v10[v13];
  v18 = PushToTalkDisclosureButton.chevronImageView.getter();
  OUTLINED_FUNCTION_4_95((uint64_t)v18);

  PushToTalkDisclosureButton.setupConstraints()();
}

uint64_t type metadata accessor for PushToTalkDisclosureButton()
{
  return objc_opt_self();
}

id PushToTalkDisclosureButton.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PushToTalkDisclosureButton.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_text];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_contentView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___label] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton____lazy_storage___chevronImageView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void PushToTalkDisclosureButton.setupConstraints()()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;

  v2 = v0;
  v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit26PushToTalkDisclosureButton_contentView];
  v4 = PushToTalkDisclosureButton.label.getter();
  v5 = PushToTalkDisclosureButton.chevronImageView.getter();

  OUTLINED_FUNCTION_18_4(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_);

  OUTLINED_FUNCTION_18_4(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD644140;
  v7 = OUTLINED_FUNCTION_123(v6, sel_topAnchor);
  v8 = OUTLINED_FUNCTION_9((uint64_t)v7, sel_topAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);
  OUTLINED_FUNCTION_71_3();

  *(_QWORD *)(v6 + 32) = v1;
  v11 = OUTLINED_FUNCTION_123(v10, sel_leadingAnchor);
  v12 = OUTLINED_FUNCTION_9((uint64_t)v11, sel_leadingAnchor);
  v13 = OUTLINED_FUNCTION_0_21((uint64_t)v12);
  OUTLINED_FUNCTION_71_3();

  *(_QWORD *)(v6 + 40) = v1;
  v15 = OUTLINED_FUNCTION_123(v14, sel_trailingAnchor);
  v16 = OUTLINED_FUNCTION_9((uint64_t)v15, (const char *)&selRef_setDateFormat_);
  v17 = OUTLINED_FUNCTION_0_21((uint64_t)v16);
  OUTLINED_FUNCTION_71_3();

  *(_QWORD *)(v6 + 48) = v1;
  v19 = OUTLINED_FUNCTION_123(v18, sel_bottomAnchor);
  v20 = OUTLINED_FUNCTION_9((uint64_t)v19, sel_bottomAnchor);
  v21 = OUTLINED_FUNCTION_0_21((uint64_t)v20);
  OUTLINED_FUNCTION_71_3();

  *(_QWORD *)(v6 + 56) = v1;
  OUTLINED_FUNCTION_17_4();
  v22 = v6;
  v23 = PushToTalkDisclosureButton.label.getter();
  v24 = objc_msgSend(v23, sel_centerYAnchor);

  v26 = OUTLINED_FUNCTION_123(v25, sel_centerYAnchor);
  v48 = OUTLINED_FUNCTION_48_1(v24, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6);

  v27 = PushToTalkDisclosureButton.label.getter();
  v28 = OUTLINED_FUNCTION_10_80(v27);

  v30 = OUTLINED_FUNCTION_123(v29, sel_leadingAnchor);
  OUTLINED_FUNCTION_48_1(v28, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6);

  v31 = PushToTalkDisclosureButton.chevronImageView.getter();
  v32 = objc_msgSend(v31, sel_centerYAnchor);

  v34 = OUTLINED_FUNCTION_123(v33, sel_centerYAnchor);
  v35 = OUTLINED_FUNCTION_48_1(v32, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6);

  v36 = PushToTalkDisclosureButton.chevronImageView.getter();
  v37 = OUTLINED_FUNCTION_10_80(v36);

  v38 = PushToTalkDisclosureButton.label.getter();
  v39 = objc_msgSend(v38, sel_trailingAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v39, 3.0);
  v41 = PushToTalkDisclosureButton.chevronImageView.getter();
  v42 = objc_msgSend(v41, sel_trailingAnchor);

  v44 = OUTLINED_FUNCTION_123(v43, sel_trailingAnchor);
  v45 = OUTLINED_FUNCTION_48_1(v42, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6);

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!__OFADD__(v46, 5))
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v46 + 5, 1);
    OUTLINED_FUNCTION_17_4();
    v47 = v48;
    OUTLINED_FUNCTION_13_4();
  }
  __break(1u);
  JUMPOUT(0x1BD2A9358);
}

id PushToTalkDisclosureButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushToTalkDisclosureButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD2A93C4@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x70))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t method lookup function for PushToTalkDisclosureButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushToTalkDisclosureButton.text.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of PushToTalkDisclosureButton.text.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of PushToTalkDisclosureButton.text.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

UIMenu __swiftcall UIMenu.init(menuItems:)(Swift::OpaquePointer menuItems)
{
  uint64_t v2;
  UIMenuElementSize preferredElementSize;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::OpaquePointer v7;
  UIImage_optional v8;

  if ((unint64_t)menuItems._rawValue >> 62)
  {
    OUTLINED_FUNCTION_17_8((uint64_t)menuItems._rawValue, &lazy cache variable for type metadata for UIMenuElement);
    preferredElementSize = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    v2 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    OUTLINED_FUNCTION_17_8(v2, &lazy cache variable for type metadata for UIMenuElement);
    preferredElementSize = (UIMenuElementSize)menuItems._rawValue;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_82();
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v4, v5, v8, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v7);
}

id static UIDeferredMenuElement.uncached(_:)(uint64_t a1, uint64_t a2)
{
  void *ObjCClassFromMetadata;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v9[6];

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v9[4] = partial apply for closure #1 in static UIDeferredMenuElement.uncached(_:);
  v9[5] = v5;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = thunk for @escaping @callee_guaranteed (@guaranteed @escaping @callee_guaranteed (@guaranteed [UIMenuElement]) -> ()) -> ();
  v9[3] = &block_descriptor_49;
  v6 = _Block_copy(v9);
  swift_retain();
  swift_release();
  v7 = objc_msgSend(ObjCClassFromMetadata, sel_elementWithUncachedProvider_, v6);
  _Block_release(v6);
  return v7;
}

uint64_t closure #1 in static UIDeferredMenuElement.uncached(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  v12 = static MainActor.shared.getter();
  v13 = (_QWORD *)swift_allocObject();
  v14 = MEMORY[0x1E0DF06E8];
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = a3;
  v13[7] = a4;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t sub_1BD2A974C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in static UIDeferredMenuElement.uncached(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return closure #1 in static UIDeferredMenuElement.uncached(_:)(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6)
{
  _QWORD *v6;
  _QWORD *v8;
  uint64_t (*v10)(void);

  v6[4] = a4;
  v6[5] = a5;
  v6[6] = type metadata accessor for MainActor();
  v6[7] = static MainActor.shared.getter();
  v10 = (uint64_t (*)(void))((char *)a6 + *a6);
  v8 = (_QWORD *)swift_task_alloc();
  v6[8] = v8;
  *v8 = v6;
  v8[1] = closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:);
  return v10();
}

uint64_t closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 80) = a1;
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:)()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(void (**)(uint64_t))(v0 + 32);
  swift_release();
  v2(v1);
  OUTLINED_FUNCTION_13_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v15;

  swift_release();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = *(void **)(v0 + 72);
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = v1;
  v4 = v1;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 72);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v0 + 16) = v8;
    v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v11 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_10_9();
    OUTLINED_FUNCTION_10_9();
    _os_log_impl(&dword_1BD004000, v5, v6, "Error getting menu elements: %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_10_9();

  v13 = *(void **)(v0 + 72);
  (*(void (**)(_QWORD))(v0 + 32))(MEMORY[0x1E0DEE9D8]);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed @escaping @callee_guaranteed (@guaranteed [UIMenuElement]) -> ()) -> ()(uint64_t a1, void *aBlock)
{
  void (*v2)(void (*)(uint64_t), uint64_t);
  void *v3;
  uint64_t v4;

  v2 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  v3 = _Block_copy(aBlock);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_retain();
  v2(partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned NSArray) -> (), v4);
  swift_release();
  return swift_release();
}

void thunk for @escaping @callee_unowned @convention(block) (@unowned NSArray) -> ()(uint64_t a1, uint64_t a2)
{
  Class isa;

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIMenuElement);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

void static UIMenuBuilder.buildArray(_:)()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  specialized _copySequenceToContiguousArray<A>(_:)(v0);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_0();
}

void static UIMenuBuilder.buildOptional(_:)()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void static UIMenuBuilder.buildPartialBlock(first:)()
{
  __n128 *v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIMenuBuilder.Item>);
  v0 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_4_96(v0, (__n128)xmmword_1BD6441D0);
  OUTLINED_FUNCTION_0();
}

uint64_t static UIMenuBuilder.buildPartialBlock(accumulated:next:)(uint64_t a1)
{
  __n128 *inited;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIMenuBuilder.Item>);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_4_96(inited, (__n128)xmmword_1BD6441D0);
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> static UIMenuBuilder.buildPartialBlock(accumulated:next:)()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_124();
  specialized Array.append<A>(contentsOf:)();
}

UIMenu UIMenu.init(title:options:_:)(uint64_t a1, uint64_t a2, UIMenuIdentifier_optional a3, uint64_t (*a4)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  UIMenuElementSize v30;
  UIMenuElementSize v31;
  Swift::String v32;
  Swift::String_optional v33;
  id v34;
  uint64_t v35;
  UIMenuElementSize v36;
  uint64_t v37;
  Swift::String v38;
  Swift::String_optional v39;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer children;
  void *v43;
  _BYTE v44[40];
  UIMenuElementSize v45;
  UIMenuElementSize v46;
  UIImage_optional v47;
  UIImage_optional v48;

  v45 = MEMORY[0x1E0DEE9D8];
  v46 = MEMORY[0x1E0DEE9D8];
  v5 = a4();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    children._rawValue = (void *)v5;
    v7 = v5 + 32;
    do
    {
      v8 = outlined init with copy of IDSLookupManager(v7, (uint64_t)v44);
      OUTLINED_FUNCTION_3_90(v8, v9, v10, v11, v12, v13, v14);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIMenuBuilder.Item);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
      v15 = OUTLINED_FUNCTION_1_104();
      if ((v15 & 1) != 0)
      {
        v22 = v43;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          OUTLINED_FUNCTION_2_94();
        OUTLINED_FUNCTION_9_72();
        specialized Array._endMutation()();

      }
      else
      {
        OUTLINED_FUNCTION_3_90(v15, v16, v17, v18, v19, v20, v21);
        v23 = swift_dynamicCast();
        if ((v23 & 1) != 0)
        {
          v30 = v45;
          if ((unint64_t)v45 >> 62)
          {
            _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIMenuElement);
            swift_bridgeObjectRetain();
            v31 = _bridgeCocoaArray<A>(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
            _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIMenuElement);
            v31 = v30;
          }
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_6_74();
          OUTLINED_FUNCTION_82();
          UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, v33, v47, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v31, children);
          OUTLINED_FUNCTION_11_70();
        }
        OUTLINED_FUNCTION_3_90(v23, v24, v25, v26, v27, v28, v29);
        OUTLINED_FUNCTION_6_74();
        if ((OUTLINED_FUNCTION_1_104() & 1) != 0)
        {
          v34 = v43;
          OUTLINED_FUNCTION_11_70();
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      v7 += 40;
      --v6;
    }
    while (v6);
    v35 = swift_bridgeObjectRelease();
    v36 = v45;
  }
  else
  {
    v35 = swift_bridgeObjectRelease();
    v36 = MEMORY[0x1E0DEE9D8];
  }
  if ((unint64_t)v36 >> 62)
  {
    OUTLINED_FUNCTION_17_8(v35, &lazy cache variable for type metadata for UIMenuElement);
    OUTLINED_FUNCTION_124();
    _bridgeCocoaArray<A>(_:)();
    OUTLINED_FUNCTION_13_3();
  }
  else
  {
    OUTLINED_FUNCTION_124();
    v37 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    OUTLINED_FUNCTION_17_8(v37, &lazy cache variable for type metadata for UIMenuElement);
  }
  OUTLINED_FUNCTION_13_3();
  specialized Array.append<A>(contentsOf:)();
  preferredElementSize = v46;
  OUTLINED_FUNCTION_82();
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v38, v39, v48, a3, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children);
}

uint64_t specialized _copySequenceToContiguousArray<A>(_:)(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _OWORD v25[2];
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30[2];

  result = swift_bridgeObjectRetain();
  v3 = 0;
  v4 = 0;
  v5 = 0;
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v8 = MEMORY[0x1E0DEE9D8] + 32;
  while (1)
  {
    while (1)
    {
      if (!v4)
        goto LABEL_5;
      v9 = *(_QWORD *)(v4 + 16);
      if (v3 == v9)
        break;
      if (v3 >= v9)
        goto LABEL_32;
      outlined init with copy of IDSLookupManager(v4 + 40 * v3 + 32, (uint64_t)v25);
      outlined init with take of UIMenuBuilder.Item?((uint64_t)v25, (uint64_t)&v27);
      if (!*((_QWORD *)&v28 + 1))
        goto LABEL_27;
      result = outlined init with take of Notice(&v27, (uint64_t)v30);
      if (!v5)
      {
        v12 = v7[3];
        if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_35;
        v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
        if (v13 <= 1)
          v14 = 1;
        else
          v14 = v13;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIMenuBuilder.Item>);
        v15 = (_QWORD *)swift_allocObject();
        v16 = (uint64_t)(_swift_stdlib_malloc_size(v15) - 32) / 40;
        v15[2] = v14;
        v15[3] = 2 * v16;
        v17 = (unint64_t)(v15 + 4);
        v18 = v7[3];
        v19 = v18 >> 1;
        if (v7[2])
        {
          if (v15 != v7 || v17 >= (unint64_t)&v7[5 * v19 + 4])
            memmove(v15 + 4, v7 + 4, 40 * v19);
          v7[2] = 0;
        }
        v8 = v17 + 40 * v19;
        v5 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - (v18 >> 1);
        result = swift_release();
        v7 = v15;
      }
      v21 = __OFSUB__(v5--, 1);
      if (v21)
        goto LABEL_33;
      ++v3;
      result = outlined init with take of Notice(v30, v8);
      v8 += 40;
    }
    v26 = 0;
    memset(v25, 0, sizeof(v25));
    result = outlined destroy of UIMenuBuilder.Item?((uint64_t)v25);
LABEL_5:
    v10 = *(_QWORD *)(a1 + 16);
    if (v6 == v10)
    {
      v29 = 0;
      v27 = 0u;
      v28 = 0u;
LABEL_27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = outlined destroy of UIMenuBuilder.Item?((uint64_t)&v27);
      v22 = v7[3];
      if (v22 >= 2)
      {
        v23 = v22 >> 1;
        v21 = __OFSUB__(v23, v5);
        v24 = v23 - v5;
        if (v21)
          goto LABEL_34;
        v7[2] = v24;
      }
      return (uint64_t)v7;
    }
    if (v6 >= v10)
      break;
    v11 = *(_QWORD *)(a1 + 8 * v6 + 32);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    v3 = 0;
    v4 = v11;
    ++v6;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for UIMenuBuilder()
{
  return &type metadata for UIMenuBuilder;
}

ValueMetadata *type metadata accessor for UIMenuDivider()
{
  return &type metadata for UIMenuDivider;
}

uint64_t outlined destroy of UIMenuBuilder.Item?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIMenuBuilder.Item?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with take of UIMenuBuilder.Item?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIMenuBuilder.Item?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD2AA2EC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned NSArray) -> ()(uint64_t a1)
{
  uint64_t v1;

  thunk for @escaping @callee_unowned @convention(block) (@unowned NSArray) -> ()(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BD2AA318()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (int *)v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in closure #1 in static UIDeferredMenuElement.uncached(_:)(a1, v4, v5, v6, v7, v8);
}

void specialized EffectsHandler.updateEffectsViews(localVideoEnabled:)(char a1)
{
  void *v1;
  char *v3;
  void *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t *v13;
  uint64_t v14;
  id v15;
  void *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  char *v29;

  MultiwayViewController.constraintController.getter();
  if (v3)
  {
    v29 = v3;
    MultiwayViewController.effectsBrowserViewController.getter();
    if (v4)
    {
      v26 = v4;
      MultiwayViewController.effectsAvailabilityDidChange(_:)(a1 & 1);
      if ((a1 & 1) != 0)
      {
        OUTLINED_FUNCTION_8_80(v5, v6, v7, v8, v9, v10, v11, v12, v25, (uint64_t)v26, v29);

      }
      else
      {
        v13 = (uint64_t *)&v29[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState];
        OUTLINED_FUNCTION_1();
        v14 = *v13;
        if ((unint64_t)(*v13 - 1) < 3)
        {
          v14 = 1;
        }
        else if ((unint64_t)(v14 - 4) < 3)
        {
          v14 = 4;
        }
        objc_msgSend(v1, sel_setControlsState_animated_, v14, 1);
        v15 = objc_msgSend(v26, sel_view);
        if (v15)
        {
          v16 = v15;
          OUTLINED_FUNCTION_17_55(v15, sel_setAlpha_);

          OUTLINED_FUNCTION_8_80(v17, v18, v19, v20, v21, v22, v23, v24, v25, (uint64_t)v26, v29);
        }
        else
        {
          __break(1u);
        }
      }
    }
    else
    {

    }
  }
}

Swift::Void __swiftcall EffectsHandler.updateEffectsViews(localVideoEnabled:)(Swift::Bool localVideoEnabled)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  void *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  char *v32;

  v3 = v2;
  v4 = v1;
  v6 = OUTLINED_FUNCTION_1_105(v1, v2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 152));
  if (v6)
  {
    v32 = (char *)v6;
    v7 = OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 64));
    if (v7)
    {
      v29 = (id)v7;
      v8 = (*(uint64_t (**)(Swift::Bool, uint64_t, uint64_t))(v3 + 168))(localVideoEnabled, v4, v3);
      if (localVideoEnabled)
      {
        OUTLINED_FUNCTION_8_80(v8, v9, v10, v11, v12, v13, v14, v15, v28, (uint64_t)v29, v32);

      }
      else
      {
        v16 = (uint64_t *)&v32[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState];
        OUTLINED_FUNCTION_1();
        v17 = *v16;
        if ((unint64_t)(*v16 - 1) < 3)
        {
          v17 = 1;
        }
        else if ((unint64_t)(v17 - 4) < 3)
        {
          v17 = 4;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 160))(v17, 1, v4, v3);
        v18 = objc_msgSend(v29, sel_view);
        if (v18)
        {
          v19 = v18;
          OUTLINED_FUNCTION_17_55(v18, sel_setAlpha_);

          OUTLINED_FUNCTION_8_80(v20, v21, v22, v23, v24, v25, v26, v27, v28, (uint64_t)v29, v32);
        }
        else
        {
          __break(1u);
        }
      }
    }
    else
    {

    }
  }
}

Swift::Void __swiftcall EffectsHandler.wipeEffectsState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = v0;
  if (((*(uint64_t (**)(void))(v0 + 32))() & 1) == 0)
    goto LABEL_8;
  v2 = OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40));
  if (v2)
  {
    v3 = (void *)v2;
    objc_opt_self();
    v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
      objc_msgSend(v4, sel_removeAllEffects);

  }
  v5 = (void *)OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88));
  if (v5)
  {
    v6 = v5;
    OUTLINED_FUNCTION_18_4(v5, sel_setMode_);

  }
  else
  {
LABEL_8:
    OUTLINED_FUNCTION_43_1();
  }
}

Swift::Void __swiftcall EffectsHandler.handleAVCServerTimeout()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v3 = v1;
  v4 = v0;
  v5 = type metadata accessor for DispatchWorkItemFlags();
  v17 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  v12 = os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_17_8(v12, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v13 = (void *)static OS_dispatch_queue.main.getter();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v4;
  v14[3] = v3;
  v14[4] = v2;
  aBlock[4] = partial apply for closure #1 in EffectsHandler.handleAVCServerTimeout();
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_50;
  v15 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v11, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void specialized EffectsHandler.automation_setEffectsMode(enabled:)(char a1)
{
  uint64_t v1;
  id *v3;

  v3 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects);
  OUTLINED_FUNCTION_1();
  if (*v3)
    objc_msgSend(*v3, sel_setMode_, a1 & 1);
  OUTLINED_FUNCTION_43_1();
}

Swift::Void __swiftcall EffectsHandler.automation_setEffectsMode(enabled:)(Swift::Bool enabled)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;

  v4 = (void *)OUTLINED_FUNCTION_1_105(v1, v2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 88));
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setMode_, enabled);
    OUTLINED_FUNCTION_7_1(v5);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

void specialized EffectsHandler.updateAVCEffects(with:)(unint64_t a1)
{
  uint64_t v1;
  id *v3;
  uint64_t v4;

  v3 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects);
  OUTLINED_FUNCTION_1();
  if (*v3)
  {
    if (a1 >= 3)
      v4 = 1;
    else
      v4 = a1;
    objc_msgSend(*v3, sel_setEffectType_, v4);
  }
  OUTLINED_FUNCTION_43_1();
}

void EffectsHandler.updateAVCEffects(with:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  void *v6;

  v4 = (void *)OUTLINED_FUNCTION_1_105(a2, a3, *(uint64_t (**)(uint64_t, uint64_t))(a3 + 88));
  if (v4)
  {
    if (a1 >= 3)
      v5 = 1;
    else
      v5 = a1;
    v6 = v4;
    objc_msgSend(v4, sel_setEffectType_, v5);
    OUTLINED_FUNCTION_7_1(v6);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

uint64_t specialized EffectsHandler.setUpEffectsObjectsIfNecessary()()
{
  char *v0;
  void *v1;
  void *v2;
  char *v3;
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  MultiwayViewController.effectsViewController.getter();
  OUTLINED_FUNCTION_406(v2);
  if (!v0)
  {
    type metadata accessor for CameraViewController();
    v3 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithMode_, *MEMORY[0x1E0D0D0C0]);
    specialized EffectsHandler.setUpEffectsViews(using:)(v3);

  }
  v4 = (uint64_t *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects];
  result = OUTLINED_FUNCTION_1();
  if (!*v4)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    result = OUTLINED_FUNCTION_12_69();
    if ((result & 1) != 0)
    {
      v6 = swift_dynamicCastObjCProtocolConditional();
      if (v6 && (v7 = v6, swift_getObjectType(), (v8 = dynamic_cast_existential_1_conditional(v7)) != 0))
      {
        v9 = v8;
        OUTLINED_FUNCTION_17_8(v8, &lazy cache variable for type metadata for AVCEffects);
        swift_getObjectType();
        v1;
        specialized AVCEffects.__allocating_init(delegate:)(v9);
        MultiwayViewController.avcEffects.setter();
        result = *v4;
        if (*v4)
          return (uint64_t)OUTLINED_FUNCTION_18_4((id)result, sel_setMode_);
      }
      else
      {
        OUTLINED_FUNCTION_14_76();
        result = OUTLINED_FUNCTION_2_95();
        __break(1u);
      }
    }
  }
  return result;
}

Swift::Void __swiftcall EffectsHandler.setUpEffectsObjectsIfNecessary()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;

  v2 = v0;
  v3 = (void *)(*(uint64_t (**)(void))(v0 + 40))();
  OUTLINED_FUNCTION_406(v3);
  if (!v1)
  {
    type metadata accessor for CameraViewController();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithMode_, *MEMORY[0x1E0D0D0C0]);
    OUTLINED_FUNCTION_7_85((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 200));

  }
  v5 = (void *)OUTLINED_FUNCTION_16_62();
  OUTLINED_FUNCTION_406(v5);
  if (!v1)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v6 = static Defaults.shared;
    if ((OUTLINED_FUNCTION_12_69() & 1) != 0)
    {
      if (OUTLINED_FUNCTION_5_92()
        && (OUTLINED_FUNCTION_10_81(), (v7 = dynamic_cast_existential_1_conditional(v6)) != 0))
      {
        v8 = v7;
        OUTLINED_FUNCTION_17_8(v7, &lazy cache variable for type metadata for AVCEffects);
        swift_getObjectType();
        OUTLINED_FUNCTION_21_55();
        v9 = specialized AVCEffects.__allocating_init(delegate:)(v8);
        OUTLINED_FUNCTION_7_85((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 96));
        v10 = (void *)OUTLINED_FUNCTION_16_62();
        if (v10)
        {
          v11 = v10;
          OUTLINED_FUNCTION_18_4(v10, sel_setMode_);

        }
      }
      else
      {
        OUTLINED_FUNCTION_14_76();
        OUTLINED_FUNCTION_2_95();
        __break(1u);
      }
    }
  }
}

void specialized EffectsHandler.setUpEffectsViews(using:)(char *a1)
{
  void *v1;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  UIView *v16;
  UIView *v17;
  UIView *v18;
  UIView *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  id v27;
  id v28;
  void (*v29)(id, uint64_t, uint64_t);
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;

  MultiwayViewController.inCallControlsViewController.getter();
  if (v3)
  {
    v4 = v3;
    objc_msgSend(a1, sel_setDelegate_, swift_dynamicCastObjCProtocolUnconditional());
    swift_getObjectType();
    dynamic_cast_existential_1_unconditional((uint64_t)v1);
    v6 = v5;
    v7 = &a1[OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate];
    swift_beginAccess();
    *((_QWORD *)v7 + 1) = v6;
    swift_unknownObjectWeakAssign();
    objc_msgSend(a1, sel_setUsesInternalCaptureSession_, 0);
    objc_msgSend(a1, sel_setShowsViewfinder_, 0);
    objc_msgSend(a1, sel_setEffectsPickerHidden_animated_, 1, 0);
    objc_msgSend(a1, sel_setEffectsPickerDrawer_, 0);
    v8 = objc_msgSend(a1, sel_view);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, sel_setAlpha_, 0.0);

      v10 = objc_msgSend(a1, sel_view);
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

        v12 = a1;
        MultiwayViewController.effectsViewController.setter(a1);
        v13 = v1;
        objc_msgSend(v12, sel_willMoveToParentViewController_, 0);
        v14 = objc_msgSend(v12, sel_view);
        if (v14)
        {
          v15 = v14;
          objc_msgSend(v14, sel_removeFromSuperview);

          objc_msgSend(v12, sel_removeFromParentViewController);
          objc_msgSend(v13, sel_addChildViewController_, v12);
          MultiwayViewController.localParticipantView.getter();
          if (v16)
          {
            v17 = v16;
            type metadata accessor for LocalParticipantView();
            if (swift_dynamicCastClass())
            {
              v18 = (UIView *)objc_msgSend(v12, sel_view);
              if (!v18)
              {
LABEL_24:
                __break(1u);
                return;
              }
              v19 = v18;
              LocalParticipantView.addEffectsView(effectsView:)(v18);

              v17 = v19;
            }

          }
          objc_msgSend(v12, sel_didMoveToParentViewController_, v13);

          v20 = swift_dynamicCastObjCProtocolConditional();
          if (v20)
          {
            v21 = v20;
            swift_getObjectType();
            v22 = dynamic_cast_existential_1_conditional(v21);
            if (v22)
            {
              v24 = v22;
              v25 = v23;
              ObjectType = swift_getObjectType();
              v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D0D0E0]), sel_initWithDelegate_contentPresenter_, v12, v24);
              objc_msgSend(v27, sel_setContentPresenterDelegate_, v24);
              objc_msgSend(v13, sel_loadViewIfNeeded);
              v28 = v27;
              MultiwayViewController.effectsBrowserViewController.setter(v27);
              v29 = *(void (**)(id, uint64_t, uint64_t))(v25 + 72);
              v30 = v28;
              v29(v27, ObjectType, v25);

            }
          }
          MultiwayViewController.constraintController.getter();
          if (!v31)
            goto LABEL_17;
          v32 = v31;
          v33 = v13;
          v34 = objc_msgSend(v33, sel_view);
          if (v34)
          {
            v35 = v34;
            MultiwayViewController.localParticipantView.getter();
            v37 = v36;
            v38 = objc_msgSend(v12, sel_view);
            MultiwayViewController.effectsControlsViewController.getter();
            v40 = (void *)v39;
            MultiwayViewConstraintsController.updateConstraints(with:controlsViewController:localParticipantView:effectsView:effectsBrowserViewController:)((uint64_t)v35, (uint64_t)v4, (uint64_t)v37, v38, v39);

            v41 = objc_msgSend(v33, sel_view);
            if (v41)
            {
              v42 = v41;
              objc_msgSend(v41, sel_layoutIfNeeded);

LABEL_17:
              return;
            }
            goto LABEL_23;
          }
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_21;
  }
}

void EffectsHandler.setUpEffectsViews(using:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char **v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  UIView *v28;
  UIView *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void (*v37)(id, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  char **v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t ObjectType;
  void *v56;

  v4 = v3;
  v6 = a2;
  v56 = (void *)OUTLINED_FUNCTION_1_105(a2, a3, *(uint64_t (**)(uint64_t, uint64_t))(a3 + 144));
  if (v56)
  {
    v8 = OUTLINED_FUNCTION_5_92();
    if (!v8)
      goto LABEL_31;
    objc_msgSend(a1, sel_setDelegate_, v8);
    swift_getObjectType();
    if (!dynamic_cast_existential_1_conditional(v3))
      goto LABEL_31;
    v10 = v9;
    v11 = &a1[OBJC_IVAR____TtC15ConversationKit20CameraViewController_cameraDelegate];
    swift_beginAccess();
    *((_QWORD *)v11 + 1) = v10;
    swift_unknownObjectWeakAssign();
    OUTLINED_FUNCTION_18_4(a1, sel_setUsesInternalCaptureSession_);
    OUTLINED_FUNCTION_18_4(a1, sel_setShowsViewfinder_);
    objc_msgSend(a1, sel_setEffectsPickerHidden_animated_, 1, 0);
    objc_msgSend(a1, sel_setEffectsPickerDrawer_, 0);
    v12 = &selRef_associatedAppBundleIdentifier;
    v13 = OUTLINED_FUNCTION_20_57();
    if (v13)
    {
      v14 = v13;
      OUTLINED_FUNCTION_17_55(v13, sel_setAlpha_);

      v15 = OUTLINED_FUNCTION_20_57();
      if (v15)
      {
        v16 = v15;
        OUTLINED_FUNCTION_18_4(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_);

        v17 = *(void (**)(char *, uint64_t, uint64_t))(a3 + 48);
        v18 = a1;
        v19 = v4;
        v17(a1, v6, a3);
        objc_opt_self();
        v20 = OUTLINED_FUNCTION_328();
        if (!v20)
          goto LABEL_14;
        v21 = (void *)v20;
        OUTLINED_FUNCTION_21_55();
        objc_msgSend(v18, sel_willMoveToParentViewController_, 0);
        v22 = OUTLINED_FUNCTION_19_55();
        if (v22)
        {
          v23 = v22;
          objc_msgSend(v22, sel_removeFromSuperview);

          objc_msgSend(v18, sel_removeFromParentViewController);
          objc_msgSend(v21, sel_addChildViewController_, v18);
          v19 = v4;
          v24 = OUTLINED_FUNCTION_6_9(v6, *(uint64_t (**)(uint64_t, uint64_t))(a3 + 128));
          if (v24)
          {
            v25 = (void *)v24;
            type metadata accessor for LocalParticipantView();
            v26 = swift_dynamicCastClass();
            if (v26)
            {
              v19 = v26;
              v27 = v6;
              v28 = (UIView *)OUTLINED_FUNCTION_19_55();
              if (!v28)
              {
LABEL_30:
                __break(1u);
LABEL_31:
                OUTLINED_FUNCTION_14_76();
                _assertionFailure(_:_:file:line:flags:)();
                __break(1u);
                return;
              }
              v29 = v28;
              LocalParticipantView.addEffectsView(effectsView:)(v28);

              v25 = v29;
              v6 = v27;
            }

          }
          objc_msgSend(v18, sel_didMoveToParentViewController_, v21);
          OUTLINED_FUNCTION_113();
LABEL_14:
          if (OUTLINED_FUNCTION_5_92())
          {
            v30 = OUTLINED_FUNCTION_10_81();
            OUTLINED_FUNCTION_17_8(v30, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
            v31 = dynamic_cast_existential_1_superclass_conditional(v19);
            if (v31)
            {
              v33 = v31;
              v34 = v32;
              ObjectType = swift_getObjectType();
              v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D0D0E0]), sel_initWithDelegate_contentPresenter_, v18, v33);
              objc_msgSend(v35, sel_setContentPresenterDelegate_, v33);
              (*(void (**)(id, uint64_t, uint64_t))(a3 + 176))(v35, v6, a3);
              v36 = v6;
              v37 = *(void (**)(id, uint64_t, uint64_t))(v34 + 72);
              v38 = v35;
              v37(v35, ObjectType, v34);
              v6 = v36;
              v12 = &selRef_associatedAppBundleIdentifier;

            }
          }
          objc_opt_self();
          v39 = OUTLINED_FUNCTION_328();
          if (!v39)
            goto LABEL_23;
          v40 = (void *)v39;
          v41 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 152);
          OUTLINED_FUNCTION_21_55();
          v42 = v41(v6, a3);
          if (!v42)
          {
            OUTLINED_FUNCTION_113();
            goto LABEL_23;
          }
          v43 = (void *)v42;
          v44 = v18;
          v45 = v6;
          v46 = objc_msgSend(v40, v12[143]);
          if (v46)
          {
            v47 = v46;
            v48 = (void *)OUTLINED_FUNCTION_6_9(v45, *(uint64_t (**)(uint64_t, uint64_t))(a3 + 128));
            v49 = objc_msgSend(v44, v12[143]);
            v50 = v12;
            v51 = v49;
            v52 = (void *)OUTLINED_FUNCTION_6_9(v45, *(uint64_t (**)(uint64_t, uint64_t))(a3 + 136));
            MultiwayViewConstraintsController.updateConstraints(with:controlsViewController:localParticipantView:effectsView:effectsBrowserViewController:)((uint64_t)v47, (uint64_t)v56, (uint64_t)v48, v51, (uint64_t)v52);

            v53 = objc_msgSend(v40, (SEL)v50 + 328);
            if (v53)
            {
              v54 = v53;
              objc_msgSend(v53, sel_layoutIfNeeded);
              OUTLINED_FUNCTION_113();

LABEL_23:
              return;
            }
            goto LABEL_29;
          }
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_27;
  }
}

void closure #1 in EffectsHandler.handleAVCServerTimeout()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  char *v7;

  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 152))(a2, a3);
  if (v5)
  {
    v6 = (char *)v5;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(a3 + 168))(0, a2, a3);
    v7 = &v6[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState];
    swift_beginAccess();
    if (*(_QWORD *)v7 <= 6uLL && ((1 << *(_QWORD *)v7) & 0x6C) != 0)
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 160))(1, 1, a2, a3);
    (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);

  }
}

uint64_t sub_1BD2AB7EC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in EffectsHandler.handleAVCServerTimeout()()
{
  uint64_t *v0;

  closure #1 in EffectsHandler.handleAVCServerTimeout()(v0[4], v0[2], v0[3]);
}

id specialized AVCEffects.__allocating_init(delegate:)(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithDelegate_, a1);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t dynamic_cast_existential_1_superclass_conditional(uint64_t a1)
{
  uint64_t result;

  result = swift_dynamicCastMetatype();
  if (result)
  {
    if (swift_conformsToProtocol2())
      return a1;
    else
      return 0;
  }
  return result;
}

uint64_t dispatch thunk of EffectsHandler.updateEffectsViews(localVideoEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EffectsHandler.wipeEffectsState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EffectsHandler.removeAllEffectsObjects()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EffectsHandler.effectsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EffectsHandler.effectsViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EffectsHandler.effectsViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EffectsHandler.effectsViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of EffectsHandler.effectsBrowserViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EffectsHandler.effectsBrowserViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of EffectsHandler.effectsBrowserViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of EffectsHandler.avcEffects.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EffectsHandler.avcEffects.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of EffectsHandler.avcEffects.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of EffectsHandler.handleAVCServerTimeout()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of EffectsHandler.automation_setEffectsMode(enabled:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of EffectsHandler.localParticipantView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of EffectsHandler.effectsControlsViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of EffectsHandler.inCallControlsViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of EffectsHandler.constraintController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of EffectsHandler.setControlsState(_:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t dispatch thunk of EffectsHandler.effectsAvailabilityDidChange(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of EffectsHandler.embedEffectsBrowserViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of EffectsHandler.updateAVCEffects(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of EffectsHandler.setUpEffectsObjectsIfNecessary()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of EffectsHandler.setUpEffectsViews(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dynamic_cast_existential_1_unconditional(uint64_t a1)
{
  uint64_t result;

  result = swift_conformsToProtocol2();
  if (result)
    return a1;
  __break(1u);
  return result;
}

double static SystemApertureLayoutMargins.concentric.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

id outlined copy of SystemApertureLayoutMargins(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
    return result;
  return result;
}

void destroy for SystemApertureLayoutMargins(uint64_t a1)
{
  outlined consume of SystemApertureLayoutMargins(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void outlined consume of SystemApertureLayoutMargins(id a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)

}

uint64_t initializeWithCopy for SystemApertureLayoutMargins(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  outlined copy of SystemApertureLayoutMargins(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for SystemApertureLayoutMargins(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  outlined copy of SystemApertureLayoutMargins(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  outlined consume of SystemApertureLayoutMargins(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SystemApertureLayoutMargins(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  outlined consume of SystemApertureLayoutMargins(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemApertureLayoutMargins(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemApertureLayoutMargins(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTag for SystemApertureLayoutMargins(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t destructiveInjectEnumTag for SystemApertureLayoutMargins(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SystemApertureLayoutMargins()
{
  return &type metadata for SystemApertureLayoutMargins;
}

uint64_t AudioMuteButtonViewModel.__allocating_init(service:)(__int128 *a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_15();
  AudioMuteButtonViewModel.init(service:)(a1);
  return v2;
}

uint64_t specialized IconButtonConfig.accessibilityLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = MEMORY[0x1E0DEAFA0];
  KeyPath = swift_getKeyPath();
  v8 = v2;
  v9 = a1;
  v10 = a2;
  specialized IconButtonConfig.withMutation<A, B>(keyPath:_:)(KeyPath, (uint64_t)partial apply for specialized closure #1 in IconButtonConfig.accessibilityLabel.setter, (uint64_t)&v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t AudioMuteButtonViewModel.init(service:)(__int128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  outlined init with take of Notice(a1, v1 + 16);
  return v1;
}

uint64_t AudioMuteButtonViewModel.controlType.getter()
{
  return AudioMuteButtonViewModel.config.getter();
}

uint64_t AudioMuteButtonViewModel.config.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  objc_class *v12;
  NSBundle v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  NSBundle v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v33;

  v1 = v0;
  v2 = type metadata accessor for Font.Leading();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  if (v1[8])
  {
    v7 = v1[8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v8 = OUTLINED_FUNCTION_15();
    strcpy((char *)(v8 + 16), "mic.slash.fill");
    *(_BYTE *)(v8 + 31) = -18;
    v9 = static Color.white.getter();
    static Font.subheadline.getter();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0CDD6D8], v2);
    v10 = Font.leading(_:)();
    OUTLINED_FUNCTION_27_0();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
    v11 = (void *)objc_opt_self();
    v12 = (objc_class *)objc_msgSend(v11, sel_conversationKit, xmmword_1BD6456D0, 0x401C000000000000, v9, v10, _s15ConversationKit12SystemSymbolVAASbRszlE19catalystCallControl4name5color15backgroundColorACySbGSS_7SwiftUI0K0VSbcAKSbctFZSSSbcfU_TA_0, v8, specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color), 0, specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color), 0, closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:), 0, partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:), 0, partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:), 0);
    OUTLINED_FUNCTION_7_14();
    v13.super.isa = v12;
    v18 = OUTLINED_FUNCTION_49_2(v14, v15, v16, v17, v13);
    v20 = v19;

    v21 = (objc_class *)objc_msgSend(v11, sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v22.super.isa = v21;
    v27 = OUTLINED_FUNCTION_49_2(v23, v24, v25, v26, v22);
    v29 = v28;

    v30 = v1[5];
    v31 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v30);
    LOBYTE(v21) = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 168))(v30, v31);
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_7_4();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<Bool>);
    swift_allocObject();
    v7 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)((uint64_t)&v33, v18, v20, 0, v27, v29, 0xD000000000000013, 0x80000001BD672490, v21 & 1, 1);
    v1[8] = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

BOOL AudioMuteButtonViewModel.enabled(for:)(uint64_t a1)
{
  return (a1 & 0xE100000000) != 0x100000000;
}

Swift::Void __swiftcall AudioMuteButtonViewModel.onAppear()()
{
  AudioMuteButtonViewModel.observeMutedStates()();
  AudioMuteButtonViewModel.updateLabels()();
}

Swift::Void __swiftcall AudioMuteButtonViewModel.observeMutedStates()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v11 = v0[5];
  v12 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 176))(v11, v12);
  v15 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v13 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v13);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<Bool, Never>);
  type metadata accessor for NSRunLoop();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AnyPublisher<Bool, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<Bool, Never>, MEMORY[0x1E0C95D90]);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  Publisher.receive<A>(on:options:)();
  outlined destroy of NSRunLoop.SchedulerOptions?(v5);

  swift_release();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_7_4();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<Bool, Never>, NSRunLoop>, MEMORY[0x1E0C95CB8]);
  v14 = Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_27_0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  v1[7] = v14;
  swift_release();
}

uint64_t AudioMuteButtonViewModel.updateLabels()()
{
  char v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String_optional v5;
  Swift::String v6;
  uint64_t v7;
  Swift::String v8;
  unint64_t v10;

  ((void (*)(void))AudioMuteButtonViewModel.config.getter)();
  v0 = specialized StateHolder.state.getter();
  v1 = swift_release();
  AudioMuteButtonViewModel.config.getter(v1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v10 = 0xE000000000000000;
  if ((v0 & 1) != 0)
  {
    v3 = 0x80000001BD681020;
    v4 = 0xD000000000000010;
  }
  else
  {
    v4 = 0x4D5F524557415244;
    v3 = 0xEE0058415F455455;
  }
  v5.value._countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v7 = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, v5, (NSBundle)v2, v6, *(Swift::String *)(&v10 - 1));

  specialized IconButtonConfig.accessibilityLabel.setter(v8._countAndFlagsBits, (uint64_t)v8._object);
  return swift_release();
}

Swift::Void __swiftcall AudioMuteButtonViewModel.didTap()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  AudioMuteButtonViewModel.config.getter();
  specialized StateHolder.state.getter();
  specialized StateHolder.state.setter();
  swift_release();
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  AudioMuteButtonViewModel.config.getter();
  v3 = specialized StateHolder.state.getter();
  OUTLINED_FUNCTION_27_0();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 184))(v3 & 1, v1, v2);
  AudioMuteButtonViewModel.updateLabels()();
}

uint64_t closure #1 in AudioMuteButtonViewModel.observeMutedStates()(unsigned __int8 *a1)
{
  int v1;
  uint64_t result;
  int v3;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    AudioMuteButtonViewModel.config.getter();
    v3 = specialized StateHolder.state.getter() & 1;
    swift_release();
    if (v1 != v3)
    {
      AudioMuteButtonViewModel.config.getter();
      specialized StateHolder.state.setter();
      swift_release();
      AudioMuteButtonViewModel.updateLabels()();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BD2AC49C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BD2AC4C0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in AudioMuteButtonViewModel.config.getter(char a1)
{
  if ((a1 & 1) != 0)
    return static Color.red.getter();
  else
    return static Color.white.getter();
}

uint64_t closure #2 in AudioMuteButtonViewModel.config.getter()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    AudioMuteButtonViewModel.didTap()();
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #2 in AudioMuteButtonViewModel.config.getter()
{
  return closure #2 in AudioMuteButtonViewModel.config.getter();
}

uint64_t AudioMuteButtonViewModel.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t AudioMuteButtonViewModel.__deallocating_deinit()
{
  AudioMuteButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

BOOL protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance AudioMuteButtonViewModel(uint64_t a1)
{
  return AudioMuteButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL);
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance AudioMuteButtonViewModel()
{
  return AudioMuteButtonViewModel.controlType.getter();
}

void protocol witness for CallControlsButtonViewModel.onAppear() in conformance AudioMuteButtonViewModel()
{
  AudioMuteButtonViewModel.onAppear()();
}

uint64_t specialized closure #1 in IconButtonConfig.accessibilityLabel.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 192) = a2;
  *(_QWORD *)(a1 + 200) = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t partial apply for closure #1 in AudioMuteButtonViewModel.observeMutedStates()(unsigned __int8 *a1)
{
  return closure #1 in AudioMuteButtonViewModel.observeMutedStates()(a1);
}

uint64_t sub_1BD2AC670@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AudioMuteButtonViewModel.config.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for AudioMuteButtonViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for AudioMuteButtonViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AudioMuteButtonViewModel.__allocating_init(service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1BD2AC6D8()
{
  return 8;
}

_QWORD *sub_1BD2AC6E4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t partial apply for specialized closure #1 in IconButtonConfig.accessibilityLabel.setter()
{
  uint64_t *v0;

  return specialized closure #1 in IconButtonConfig.accessibilityLabel.setter(v0[2], v0[3], v0[4]);
}

uint64_t InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t (*v6)(double);
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  OUTLINED_FUNCTION_86_7();
  v1 = v0;
  outlined init with copy of FeatureEligibility?(v0, (uint64_t)&v12, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  if (v13)
  {
    v2 = outlined init with take of Notice(&v12, (uint64_t)v9);
    OUTLINED_FUNCTION_59(v2, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v3 = v10;
    v4 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 8))(&v12, v3, v4);
    static UIImage.symbolImage(for:)((uint64_t)&v12);
    outlined release of SymbolImageDescription((uint64_t)&v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v12, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  }
  v5 = OUTLINED_FUNCTION_64_15();
  v7 = v6(v5);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v1, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  return v7;
}

uint64_t InCallControlButtonConfiguration.Regular.init(contentColor:discContentColor:disc:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 32) = a5 & 1;
  return result;
}

void InCallControlButtonConfiguration.init(regular:flat:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  __int128 v10;
  _OWORD v11[2];
  char v12;

  outlined init with take of Any?(a1, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for InCallControlButtonConfiguration.Regular?);
  v9 = v12;
  v10 = v11[1];
  *(_OWORD *)a5 = v11[0];
  *(_OWORD *)(a5 + 16) = v10;
  *(_BYTE *)(a5 + 32) = v9;
  *(_QWORD *)(a5 + 40) = a2;
  *(_QWORD *)(a5 + 48) = a3;
  *(_QWORD *)(a5 + 56) = a4;
  OUTLINED_FUNCTION_14_1();
}

uint64_t InCallControlButton.__allocating_init(style:imageName:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double v8;
  uint64_t (*v9)(double);
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_86_7();
  v1 = v0;
  outlined init with copy of FeatureEligibility?(v0, (uint64_t)&v12, &demangling cache variable for type metadata for ImageName?);
  if (v13)
  {
    v2 = outlined init with take of Notice(&v12, (uint64_t)v14);
    OUTLINED_FUNCTION_59(v2, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v4 = v3;
    v5 = v15;
    v6 = v16;
    v7 = __swift_project_boxed_opaque_existential_1(v14, v15);
    specialized static UIImage.image(named:)((uint64_t)v7, v4, v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v12, &demangling cache variable for type metadata for ImageName?);
  }
  v8 = OUTLINED_FUNCTION_64_15();
  v10 = v9(v8);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v1, &demangling cache variable for type metadata for ImageName?);
  return v10;
}

uint64_t key path setter for InCallControlButton.callbackCancellable : InCallControlButton(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD8);
  v3 = swift_retain();
  return v2(v3);
}

void InCallControlButton.callbackCancellable.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_retain();
  OUTLINED_FUNCTION_32();
}

uint64_t InCallControlButton.callbackCancellable.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_callbackCancellable);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return swift_release();
}

void InCallControlButton.callbackCancellable.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlButton.imageView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView);
  OUTLINED_FUNCTION_0();
}

uint64_t InCallControlButton.style.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style);
}

void InCallControlButton.label.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  OUTLINED_FUNCTION_0();
}

id InCallControlButton.discView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView);
}

void InCallControlButton.image.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_image);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  OUTLINED_FUNCTION_32();
}

void InCallControlButton.image.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  uint64_t v6;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_image);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  InCallControlButton.updateImage()();
  InCallControlButton.updateColors()(v6);

  OUTLINED_FUNCTION_9_0();
}

void InCallControlButton.image.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlButton.image.modify()
{
  char v0;
  uint64_t v1;

  OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
  {
    InCallControlButton.updateImage()();
    InCallControlButton.updateColors()(v1);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t InCallControlButton.imageLoadingTask.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageLoadingTask);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageLoadingTask) = a1;
  swift_retain();
  if (v2)
  {
    MEMORY[0x1C3B73268](v2, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    swift_release();
  }
  return swift_release();
}

void InCallControlButton.updateImage()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  id v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_30_6();
  v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView);
  if (v3)
  {
    v4 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x118);
    v12 = v3;
    v5 = v4();
    if (v5)
    {
      v6 = (void *)v5;
      static TaskPriority.userInitiated.getter();
      v7 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload(v0, 0, 1, v7);
      v8 = OUTLINED_FUNCTION_15();
      swift_unknownObjectWeakInit();
      v9 = (_QWORD *)OUTLINED_FUNCTION_15();
      v9[2] = 0;
      v9[3] = 0;
      v9[4] = v6;
      v9[5] = v8;
      v10 = v6;
      v11 = _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5(v0, (uint64_t)&async function pointer to partial apply for closure #1 in InCallControlButton.updateImage(), (uint64_t)v9);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0, &demangling cache variable for type metadata for TaskPriority?);
      InCallControlButton.imageLoadingTask.setter(v11);

    }
    else
    {
      InCallControlButton.imageLoadingTask.setter(0);
      OUTLINED_FUNCTION_14_9(v12, sel_setImage_);

    }
  }
}

uint64_t closure #1 in InCallControlButton.updateImage()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 56) = a5;
  return swift_task_switch();
}

void closure #1 in InCallControlButton.updateImage()()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 48), sel_imageByPreparingForDisplay);
  if (!v1)
    v1 = *(id *)(v0 + 48);
  *(_QWORD *)(v0 + 64) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1BD2ACF64(void *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_21_6();
  swift_unknownObjectWeakInit();

  type metadata accessor for MainActor();
  *(_QWORD *)(v1 + 72) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in InCallControlButton.updateImage()()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v0 = OUTLINED_FUNCTION_21_6();
  specialized closure #1 in closure #1 in InCallControlButton.updateImage()(v0, v1);
  swift_unknownObjectWeakDestroy();
  return swift_task_switch();
}

{
  uint64_t v0;

  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void specialized closure #1 in closure #1 in InCallControlButton.updateImage()(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    swift_beginAccess();
    v4 = (void *)MEMORY[0x1C3B752C0](a1);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_setImage_, a2);

    }
  }
}

void key path getter for InCallControlButton.symbolDescription : InCallControlButton(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v3[8];

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x150))(v3);
  outlined init with take of Any?((uint64_t)v3, a2, &demangling cache variable for type metadata for SymbolImageDescription?);
}

uint64_t key path setter for InCallControlButton.symbolDescription : InCallControlButton(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[8];

  outlined init with take of Any?(a1, (uint64_t)v5, &demangling cache variable for type metadata for SymbolImageDescription?);
  v3 = *(uint64_t (**)(_QWORD *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x158);
  outlined retain of SymbolImageDescription?(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SymbolImageDescription?);
  return v3(v5);
}

void InCallControlButton.symbolDescription.didset(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  _QWORD v37[8];
  char v38[8];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  __int16 v44;
  uint64_t v45;
  char v46;
  void *v47;

  outlined init with take of Any?((uint64_t)a1, (uint64_t)v37, &demangling cache variable for type metadata for SymbolImageDescription?);
  v14 = v37[0];
  v15 = v37[1];
  v3 = v37[4];
  v16 = v37[2];
  v17 = (void *)v37[3];
  v18 = v37[5];
  v19 = v37[6];
  v20 = (void *)v37[7];
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_symbolDescription);
  swift_beginAccess();
  v6 = *v4;
  v5 = v4[1];
  v8 = v4[2];
  v7 = (void *)v4[3];
  v10 = v4[4];
  v9 = v4[5];
  v11 = v4[6];
  v12 = (void *)v4[7];
  if (!v5)
  {
    outlined init with take of Any?((uint64_t)a1, (uint64_t)&v40, &demangling cache variable for type metadata for SymbolImageDescription?);
    if (!v41)
      return;
    goto LABEL_6;
  }
  outlined init with take of Any?((uint64_t)a1, (uint64_t)v38, &demangling cache variable for type metadata for SymbolImageDescription?);
  if (!v39)
  {
LABEL_6:
    v21 = v6;
    v22 = v5;
    v23 = v8;
    v24 = v7;
    v25 = v10;
    v26 = v9;
    v27 = v11;
    v28 = v12;
    v29 = v14;
    v30 = v15;
    v31 = v16;
    v32 = v17;
    v33 = v3;
    v34 = v18;
    v35 = v19;
    v36 = v20;
    outlined copy of SymbolImageDescription?(v6, v5, v8, v7, v10, v9, v11, v12);
    outlined retain of SymbolImageDescription?(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SymbolImageDescription?);
    outlined release of (SymbolImageDescription?, SymbolImageDescription?)((uint64_t)&v21);
    goto LABEL_7;
  }
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v17;
  LOWORD(v25) = v3 & 0x101;
  v26 = v18;
  LOBYTE(v27) = v19 & 1;
  v28 = v20;
  v40 = v6;
  v41 = v5;
  v42 = v8;
  v43 = v7;
  v44 = v10 & 0x101;
  v45 = v9;
  v46 = v11 & 1;
  v47 = v12;
  outlined copy of SymbolImageDescription?(v6, v5, v8, v7, v10, v9, v11, v12);
  outlined retain of SymbolImageDescription?(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SymbolImageDescription?);
  v13 = static SymbolImageDescription.== infix(_:_:)((uint64_t)&v40, (uint64_t)&v21);
  outlined retain of SymbolImageDescription?(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SymbolImageDescription?);
  outlined consume of SymbolImageDescription?(v6, v5, v8, v7, v10, v9, v11, v12);
  if ((v13 & 1) == 0)
LABEL_7:
    InCallControlButton.updateSymbol()();
}

id InCallControlButton.symbolDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id result;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_symbolDescription);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = (void *)v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v11 = v3[6];
  v10 = (void *)v3[7];
  result = outlined copy of SymbolImageDescription?(v4, v5, v6, v7, v8, v9, v11, v10);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = (uint64_t)v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v11;
  a1[7] = (uint64_t)v10;
  return result;
}

void InCallControlButton.symbolDescription.setter(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[8];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_symbolDescription);
  OUTLINED_FUNCTION_2_0();
  outlined init with take of Any?((uint64_t)v3, (uint64_t)v12, &demangling cache variable for type metadata for SymbolImageDescription?);
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = (void *)v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v11 = v3[6];
  v10 = (void *)v3[7];
  outlined init with take of Any?((uint64_t)a1, (uint64_t)v3, &demangling cache variable for type metadata for SymbolImageDescription?);
  OUTLINED_FUNCTION_48_30(v12);
  OUTLINED_FUNCTION_48_30(a1);
  outlined consume of SymbolImageDescription?(v4, v5, v6, v7, v8, v9, v11, v10);
  InCallControlButton.symbolDescription.didset(v12);
  OUTLINED_FUNCTION_48_30(a1);
  OUTLINED_FUNCTION_48_30(v12);
}

void InCallControlButton.symbolDescription.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v3 = malloc(0xE0uLL);
  *a1 = v3;
  v3[27] = v1;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_symbolDescription);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  v8 = (void *)v4[3];
  v9 = v4[4];
  v10 = v4[5];
  v11 = v4[6];
  v12 = (void *)v4[7];
  v3[16] = *v4;
  v3[17] = v6;
  v3 += 16;
  v3[2] = v7;
  v3[3] = v8;
  v3[4] = v9;
  v3[5] = v10;
  v3[6] = v11;
  v3[7] = v12;
  outlined copy of SymbolImageDescription?(v5, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_18();
}

void InCallControlButton.symbolDescription.modify(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a1 + 128;
  if ((a2 & 1) != 0)
  {
    outlined init with take of Any?(v3, v2, &demangling cache variable for type metadata for SymbolImageDescription?);
    outlined retain of SymbolImageDescription?((_QWORD *)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of SymbolImageDescription?);
    InCallControlButton.symbolDescription.setter((_QWORD *)v2);
    outlined consume of SymbolImageDescription?(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144), *(void **)(v2 + 152), *(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 176), *(void **)(v2 + 184));
  }
  else
  {
    outlined init with take of Any?(v3, v2 + 64, &demangling cache variable for type metadata for SymbolImageDescription?);
    InCallControlButton.symbolDescription.setter((_QWORD *)(v2 + 64));
  }
  OUTLINED_FUNCTION_4_2((void *)v2);
}

uint64_t key path setter for InCallControlButton.text : InCallControlButton(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x170);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

void InCallControlButton.text.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_text);
    if (v2)
    {
      v3 = v2;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

    }
  }
  OUTLINED_FUNCTION_18();
}

void InCallControlButton.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  if (v3)
  {
    if (a2)
    {
      v4 = (void *)MEMORY[0x1C3B72E00](a1, a2);
      OUTLINED_FUNCTION_2_1();
    }
    else
    {
      v4 = 0;
    }
    OUTLINED_FUNCTION_59_6(v3, sel_setText_);

  }
  else
  {
    OUTLINED_FUNCTION_2_1();
  }
  InCallControlButton.hyphenateLabelText()();
}

void InCallControlButton.text.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  InCallControlButton.text.getter();
  *a1 = v3;
  a1[1] = v4;
  OUTLINED_FUNCTION_0();
}

void InCallControlButton.text.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_83_15();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_83_15();
    OUTLINED_FUNCTION_18();
  }
}

uint64_t key path setter for InCallControlButton.colorConfiguration : InCallControlButton(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x188);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void InCallControlButton.colorConfiguration.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

void InCallControlButton.colorConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_colorConfiguration);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  v4 = swift_bridgeObjectRelease();
  InCallControlButton.updateColors()(v4);
  OUTLINED_FUNCTION_9_0();
}

void InCallControlButton.colorConfiguration.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlButton.colorConfiguration.modify()
{
  char v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
    InCallControlButton.updateColors()(v1);
  OUTLINED_FUNCTION_0();
}

id InCallControlButton.isSelected.getter()
{
  return InCallControlButton.isSelected.getter((SEL *)&selRef_isSelected);
}

void InCallControlButton.isSelected.setter(char a1)
{
  void *v1;
  objc_class *v3;
  char v4;
  objc_super v5;
  objc_super v6;

  v3 = (objc_class *)type metadata accessor for InCallControlButton();
  v6.receiver = v1;
  v6.super_class = v3;
  v4 = objc_msgSendSuper2(&v6, sel_isSelected);
  v5.receiver = v1;
  v5.super_class = v3;
  objc_msgSendSuper2(&v5, sel_setSelected_, a1 & 1);
  InCallControlButton.isSelected.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void InCallControlButton.isSelected.didset(char a1)
{
  void *v1;
  int v2;
  id v3;

  v2 = a1 & 1;
  v3 = objc_msgSend(v1, sel_isSelected);
  if ((_DWORD)v3 != v2)
  {
    InCallControlButton.updateColors()((uint64_t)v3);
    InCallControlButton.updateSymbol()();
  }
}

id InCallControlButton.isHighlighted.getter()
{
  return InCallControlButton.isSelected.getter((SEL *)&selRef_isHighlighted);
}

void InCallControlButton.isHighlighted.setter(char a1)
{
  InCallControlButton.isHighlighted.setter(a1, (SEL *)&selRef_setHighlighted_);
}

id InCallControlButton.isEnabled.getter()
{
  return InCallControlButton.isSelected.getter((SEL *)&selRef_isEnabled);
}

id InCallControlButton.isSelected.getter(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for InCallControlButton();
  return objc_msgSendSuper2(&v4, *a1);
}

void InCallControlButton.isEnabled.setter(char a1)
{
  InCallControlButton.isHighlighted.setter(a1, (SEL *)&selRef_setEnabled_);
}

void InCallControlButton.isHighlighted.setter(char a1, SEL *a2)
{
  void *v2;
  id v5;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for InCallControlButton();
  v5 = objc_msgSendSuper2(&v6, *a2, a1 & 1);
  InCallControlButton.updateColors()((uint64_t)v5);
}

id InCallControlButton.cnkContentAlpha.didset()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id result;
  unint64_t v7;
  double *v8;
  void *v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD *v21;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645390;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView);
  *(_QWORD *)(inited + 32) = v2;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView);
  *(_QWORD *)(inited + 40) = v3;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView);
  *(_QWORD *)(inited + 48) = v4;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  *(_QWORD *)(inited + 56) = v5;
  v21 = (_QWORD *)inited;
  result = (id)specialized Array._endMutation()();
  v7 = v21[2];
  if (!v7)
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  v8 = (double *)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_cnkContentAlpha);
  v9 = (void *)v21[4];
  if (v9)
  {
    swift_beginAccess();
    v10 = *v8;
    v11 = v5;
    v12 = v2;
    v13 = v3;
    v14 = v4;
    result = objc_msgSend(v9, sel_setAlpha_, v10);
    v7 = v21[2];
  }
  else
  {
    v15 = v5;
    v16 = v2;
    v17 = v3;
    result = v4;
  }
  if (v7 < 2)
    goto LABEL_16;
  v18 = (void *)v21[5];
  if (v18)
  {
    swift_beginAccess();
    result = objc_msgSend(v18, sel_setAlpha_, *v8);
    v7 = v21[2];
  }
  if (v7 < 3)
    goto LABEL_17;
  v19 = (void *)v21[6];
  if (v19)
  {
    swift_beginAccess();
    result = objc_msgSend(v19, sel_setAlpha_, *v8);
    v7 = v21[2];
  }
  if (v7 < 4)
    goto LABEL_18;
  v20 = (void *)v21[7];
  if (v20)
  {
    swift_beginAccess();
    objc_msgSend(v20, sel_setAlpha_, *v8);
  }
  return (id)swift_bridgeObjectRelease();
}

double InCallControlButton.cnkContentAlpha.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_cnkContentAlpha;
  OUTLINED_FUNCTION_2_0();
  return *(double *)v1;
}

id InCallControlButton.cnkContentAlpha.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_cnkContentAlpha);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return InCallControlButton.cnkContentAlpha.didset();
}

void InCallControlButton.cnkContentAlpha.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlButton.cnkContentAlpha.modify()
{
  char v0;

  OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
    InCallControlButton.cnkContentAlpha.didset();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for InCallControlButton.menuDataSource : InCallControlButton(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1B8);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

id InCallControlButton.menuDataSource.didset()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_menuDataSource];
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
    swift_unknownObjectRelease();
  objc_msgSend(v0, sel_setContextMenuInteractionEnabled_, v2 != 0);
  v3 = MEMORY[0x1C3B752C0](v1);
  if (v3)
    swift_unknownObjectRelease();
  return objc_msgSend(v0, sel_setShowsMenuAsPrimaryAction_, v3 != 0);
}

void InCallControlButton.menuDataSource.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void InCallControlButton.menuDataSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_menuDataSource;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  InCallControlButton.menuDataSource.didset();
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_9_0();
}

void InCallControlButton.menuDataSource.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_menuDataSource;
  v3[5] = v1;
  v3[6] = v4;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2AE0BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void InCallControlButton.menuDataSource.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
    InCallControlButton.menuDataSource.didset();
  }
  OUTLINED_FUNCTION_4_2(v3);
}

char *InCallControlButton.__allocating_init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(char *a1, void *a2, uint64_t a3, void *a4, int a5, int a6, uint64_t a7, uint64_t a8, double a9, char a10, char a11)
{
  objc_class *v11;
  id v19;
  int v20;
  int v21;

  v19 = objc_allocWithZone(v11);
  return InCallControlButton.init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(a1, a2, a3, a4, v20, v21, a7, a8, a9, a10, a11);
}

char *InCallControlButton.init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(char *a1, void *a2, uint64_t a3, void *a4, int a5, int a6, uint64_t a7, uint64_t a8, double a9, char a10, char a11)
{
  char *v11;
  uint64_t v12;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  id v21;
  double v22;
  void **v23;
  char *v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  char **v67;
  unint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  void *v72;
  id v73;
  void *v74;
  _QWORD *v75;
  id v76;
  id v77;
  _QWORD *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  id v87;
  void *v88;
  void *v89;
  id v90;
  id v91;
  id v92;
  objc_class *v93;
  uint64_t v94;
  void *v95;
  char *v96;
  id v97;
  id v98;
  uint64_t inited;
  void *v100;
  _QWORD *v101;
  void *v102;
  id v103;
  id v104;
  char *v105;
  void **v106;
  char *v107;
  _QWORD *v108;
  id v109;
  char *v110;
  void **v111;
  char *v112;
  _QWORD *v113;
  id v114;
  void *v115;
  void *v116;
  void *v117;
  id v118;
  void *v119;
  id v120;
  void *v121;
  id v122;
  void *v123;
  id v124;
  void *v125;
  id v126;
  void *v127;
  id v128;
  void *v129;
  id v130;
  void *v131;
  char *v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  id v139;
  uint64_t v140;
  Swift::String v142;
  Swift::String v143;
  id v144;
  Swift::String v145;
  Swift::String v146;
  Swift::String v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  id v166;
  id v167;
  unint64_t v168;
  objc_super v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;

  v12 = (uint64_t)v11;
  v160 = a8;
  v154 = a7;
  v155 = a3;
  v164 = a4;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_callbackCancellable] = 0;
  v16 = (char *)OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView] = 0;
  v17 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView] = 0;
  v18 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_paragraphStyle;
  v19 = objc_allocWithZone(MEMORY[0x1E0DC1288]);
  v20 = (char *)(id)v12;
  v21 = OUTLINED_FUNCTION_123((uint64_t)v20, sel_init);
  LODWORD(v22) = 1.0;
  OUTLINED_FUNCTION_11_4((uint64_t)objc_msgSend(v21, sel_setHyphenationFactor_, v22), sel_setAlignment_);
  *(_QWORD *)(v12 + v18) = v21;
  v23 = (void **)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_image];
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_image] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageLoadingTask] = 0;
  v24 = &v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_symbolDescription];
  *(_OWORD *)v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((_OWORD *)v24 + 2) = 0u;
  *((_OWORD *)v24 + 3) = 0u;
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_cnkContentAlpha] = 0x3FF0000000000000;
  OUTLINED_FUNCTION_40_4((uint64_t)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_menuDataSource]);
  *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style] = a1;
  if ((unint64_t)a1 > 6)
  {
    v173 = 0;
    v174 = 0xE000000000000000;
    _StringGuts.grow(_:)(70);
    v142._countAndFlagsBits = 0xD000000000000044;
    v142._object = (void *)0x80000001BD681070;
    String.append(_:)(v142);
    v171 = (unint64_t)a1;
    v143._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v143);
    OUTLINED_FUNCTION_13_3();
LABEL_98:
    OUTLINED_FUNCTION_0_109();
    __break(1u);
    JUMPOUT(0x1BD2AF074);
  }
  v25 = &unk_1EF4C7000;
  if (a1 == (char *)3)
  {
    v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_isUsingVisualEffects] = 0;
    goto LABEL_5;
  }
  if (one-time initialization token for shared != -1)
    goto LABEL_93;
  while (2)
  {
    v20[v25[23]] = ((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 320))() & 1) == 0;
LABEL_5:
    v26 = OUTLINED_FUNCTION_5_93(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_);
    v157 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView;
    *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView] = v26;
    v27 = objc_opt_self();
    v28 = v26;
    v166 = (id)v27;
    v29 = OUTLINED_FUNCTION_25_1((uint64_t)v28, sel_clearColor);
    OUTLINED_FUNCTION_48_1(v28, sel_setBackgroundColor_);

    v168 = (unint64_t)a1;
    v162 = (uint64_t)a2;
    if (v20[v25[23]] == 1)
    {
      if ((unint64_t)(a1 - 1) >= 2)
      {
        if (a1 != (char *)6)
        {
          v50 = closure #3 in InCallControlButton.init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
          v37 = *(void **)&v16[v12];
          *(_QWORD *)&v16[v12] = v50;
LABEL_21:

          goto LABEL_22;
        }
        v30 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 1);
      }
      else
      {
        if (one-time initialization token for backgroundBlurEffect != -1)
          swift_once();
        v30 = (id)static Colors.InCallControls.backgroundBlurEffect;
      }
      v31 = v30;
      v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v30);
      objc_msgSend(v32, sel_setAutoresizingMask_, 18);

      v33 = *(void **)&v16[v12];
      *(_QWORD *)&v16[v12] = v32;

      v34 = (void *)objc_opt_self();
      if (one-time initialization token for backgroundBlurEffect != -1)
        swift_once();
      v35 = objc_msgSend(v34, sel__effectForBlurEffect_vibrancyStyle_, static Colors.InCallControls.backgroundBlurEffect, 110);
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v35);
      OUTLINED_FUNCTION_49_5();
      objc_msgSend(v34, sel_setAutoresizingMask_, 18);
      v36 = *(void **)(v12 + v17);
      *(_QWORD *)(v12 + v17) = v34;

      v37 = *(void **)(v12 + v17);
      if (v37)
      {
        if (*(_QWORD *)&v16[v12])
        {
          v38 = v37;
          v39 = OUTLINED_FUNCTION_123((uint64_t)v38, sel_contentView);
          OUTLINED_FUNCTION_48_1(v39, sel_addSubview_);

          v40 = *(void **)&v16[v12];
          if (v40)
          {
            v41 = objc_msgSend(v40, sel_contentView);
            v48 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_87_8((int)v41, sel_whiteColor, v42, v43, v44, v45, v46, v47, v148, v149, v150, v151, v153, v154, v155, v157, v160, (uint64_t)a2,
                      (uint64_t)v164,
                      v166));
            v49 = objc_msgSend(v48, sel_colorWithAlphaComponent_, 0.1);

            a1 = (char *)v168;
            OUTLINED_FUNCTION_59_6(v41, sel_setBackgroundColor_);

            v37 = v38;
          }
        }
        else
        {
          v51 = v37;
        }
        goto LABEL_21;
      }
    }
LABEL_22:
    v52 = OUTLINED_FUNCTION_5_93(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_);
    *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView] = v52;
    v53 = v52;
    v60 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_87_8((int)v53, sel_clearColor, v54, v55, v56, v57, v58, v59, v148, v149, v150, v151, v153, v154, v155, v157, v160, v162,
              (uint64_t)v164,
              v166));
    OUTLINED_FUNCTION_48_1(v53, sel_setBackgroundColor_);

    v61 = *(void **)&v16[v12];
    if (v61)
    {
      v62 = v61;
      if (v161)
      {
        v63 = (void *)MEMORY[0x1C3B72E00](v154, v161);
        v62 = (id)OUTLINED_FUNCTION_13_3();
      }
      else
      {
        v63 = 0;
      }
      OUTLINED_FUNCTION_9_66((uint64_t)v62, sel__setGroupName_);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    switch((unint64_t)a1)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 6uLL:
        goto LABEL_29;
      case 4uLL:
      case 5uLL:
        if (a2)
        {
LABEL_29:
          v64 = OUTLINED_FUNCTION_5_93(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithFrame_);
          *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView] = v64;
          if (v64)
            objc_msgSend(v64, sel_setContentMode_, 1);
          OUTLINED_FUNCTION_2_0();
          v65 = *v23;
          *v23 = a2;
          v66 = a2;
        }
        else
        {
          *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView] = 0;
          OUTLINED_FUNCTION_2_0();
          v65 = *v23;
          *v23 = 0;
        }

        v67 = &selRef_associatedAppBundleIdentifier;
        v68 = MEMORY[0x1E0DC4A98];
        switch(MEMORY[0x1E0DC4A98])
        {
          case 0:
          case 1:
          case 2:
          case 3:
          case 6:
            if (v165)
            {
              v69 = OUTLINED_FUNCTION_76_13(0x1E0DC3000);
              v70 = OUTLINED_FUNCTION_5_93(v69, sel_initWithFrame_);
              v71 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label;
              *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label] = v70;
              if (v70)
              {
                v72 = v70;
                OUTLINED_FUNCTION_14_9(v70, sel_setLineBreakMode_);
                v73 = v72;
                v74 = (void *)MEMORY[0x1C3B72E00](v156, v165);
                OUTLINED_FUNCTION_21_0();
                OUTLINED_FUNCTION_48_1(v73, sel_setText_);

              }
              else
              {
                swift_bridgeObjectRelease();
              }
              v75 = (_QWORD *)&unk_1EF4C7000;
              if (*(_QWORD *)&v20[v71])
              {
                OUTLINED_FUNCTION_70_15();
                v76 = OUTLINED_FUNCTION_61_19();
                v77 = OUTLINED_FUNCTION_16_63();
                OUTLINED_FUNCTION_65(v76, sel_setFont_);

              }
            }
            else
            {
              *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label] = 0;
              v75 = (_QWORD *)&unk_1EF4C7000;
            }
            v78 = (_QWORD *)&unk_1EF4C7000;
            if ((v168 & 0xFFFFFFFFFFFFFFFELL) != 4)
              goto LABEL_61;
            goto LABEL_60;
          case 4:
            OUTLINED_FUNCTION_76_13(0x1E0DC3000);
            v79 = OUTLINED_FUNCTION_60_21();
            v80 = OUTLINED_FUNCTION_21_56(v79, sel_initWithFrame_);
            v81 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label;
            *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label] = v80;
            if (v80)
            {
              OUTLINED_FUNCTION_47_18(v80);
              v82 = v61;
              v83 = v82;
              if (v165)
                OUTLINED_FUNCTION_73_12();
              v78 = (_QWORD *)&unk_1EF4C7000;
              OUTLINED_FUNCTION_9_66((uint64_t)v82, (const char *)&selRef_setAccessibilityIdentifier_);

            }
            else
            {
              OUTLINED_FUNCTION_25();
              v78 = (_QWORD *)&unk_1EF4C7000;
            }
            v89 = *(void **)&v20[v81];
            v75 = (_QWORD *)&unk_1EF4C7000;
            if (!v89)
              goto LABEL_59;
            OUTLINED_FUNCTION_70_15();
            v90 = v89;
            v91 = OUTLINED_FUNCTION_16_63();
            UIFont.caseSensitive()();
            OUTLINED_FUNCTION_49_5();
            break;
          case 5:
            OUTLINED_FUNCTION_76_13(0x1E0DC3000);
            v84 = OUTLINED_FUNCTION_60_21();
            v85 = OUTLINED_FUNCTION_21_56(v84, sel_initWithFrame_);
            v86 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label;
            *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label] = v85;
            if (v85)
            {
              OUTLINED_FUNCTION_47_18(v85);
              v87 = v61;
              v88 = v87;
              if (v165)
                OUTLINED_FUNCTION_73_12();
              v78 = &unk_1EF4C7000;
              v67 = &selRef_associatedAppBundleIdentifier;
              OUTLINED_FUNCTION_9_66((uint64_t)v87, (const char *)&selRef_setAccessibilityIdentifier_);

            }
            else
            {
              OUTLINED_FUNCTION_25();
              v78 = (_QWORD *)&unk_1EF4C7000;
              v67 = &selRef_associatedAppBundleIdentifier;
            }
            v75 = &unk_1EF4C7000;
            if (!*(_QWORD *)&v20[v86])
              goto LABEL_59;
            OUTLINED_FUNCTION_70_15();
            v90 = OUTLINED_FUNCTION_61_19();
            v91 = OUTLINED_FUNCTION_16_63();
            break;
          default:
            v171 = 0;
            v172 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            _StringGuts.grow(_:)(43);
            swift_bridgeObjectRelease();
            v171 = 0xD000000000000029;
            v172 = 0x80000001BD6810F0;
            v170 = v68;
            type metadata accessor for CNKInCallControlButtonStyle(0);
            v146._countAndFlagsBits = String.init<A>(reflecting:)();
            String.append(_:)(v146);
            OUTLINED_FUNCTION_13_3();
            goto LABEL_98;
        }
        OUTLINED_FUNCTION_48_1(v90, v67[256]);

LABEL_59:
        swift_bridgeObjectRelease();
LABEL_60:
        v92 = objc_msgSend(*(id *)&v20[v158], sel_layer);
        OUTLINED_FUNCTION_40_3(v92, sel_setMasksToBounds_);

        OUTLINED_FUNCTION_40_3(*(id *)&v20[v158], sel_setClipsToBounds_);
LABEL_61:
        if (one-time initialization token for button != -1)
          swift_once();
        *(_QWORD *)&v20[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_colorConfiguration] = static Colors.InCallControls.button;
        swift_bridgeObjectRetain();

        v93 = (objc_class *)type metadata accessor for InCallControlButton();
        v169.receiver = v20;
        v169.super_class = v93;
        v12 = (uint64_t)objc_msgSendSuper2(&v169, sel_initWithFrame_, 0.0, 0.0, a9, a9 * 1.5);
        InCallControlButton.updateImage()();
        v94 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView;
        v95 = *(void **)(v12 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView);
        v96 = (char *)(id)v12;
        v97 = v95;
        v16 = v96;
        v164 = v97;
        OUTLINED_FUNCTION_40_3(v16, sel_setUserInteractionEnabled_);
        if ((a10 & 1) != 0)
        {
          v98 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3B18]), sel_initWithDelegate_, v16);
          OUTLINED_FUNCTION_65(v16, sel_addInteraction_);

        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BD6446F0;
        a1 = *(char **)(v12 + v94);
        *(_QWORD *)(inited + 32) = a1;
        v155 = v78[19];
        v23 = *(void ***)&v16[v155];
        *(_QWORD *)(inited + 40) = v23;
        v159 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView;
        v160 = v94;
        v20 = *(char **)&v16[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView];
        *(_QWORD *)(inited + 48) = v20;
        v25 = *(_QWORD **)&v16[v75[20]];
        *(_QWORD *)(inited + 56) = v25;
        v17 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView;
        a2 = *(void **)&v16[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView];
        *(_QWORD *)(inited + 64) = a2;
        v153 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label;
        v100 = *(void **)&v16[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label];
        *(_QWORD *)(inited + 72) = v100;
        v171 = inited;
        specialized Array._endMutation()();
        v101 = (_QWORD *)v171;
        if (*(_QWORD *)(v171 + 16) < 6uLL)
        {
          __break(1u);
LABEL_93:
          swift_once();
          continue;
        }
        v152 = v17;
        v102 = *(void **)(v171 + 32);
        v103 = v100;
        if (v102)
        {
          v104 = v102;
          v105 = a1;
          v106 = v23;
          v107 = v20;
          v108 = v25;
          v109 = a2;
          OUTLINED_FUNCTION_18_4(v104, sel_setTranslatesAutoresizingMaskIntoConstraints_);
          OUTLINED_FUNCTION_3_91();

        }
        else
        {
          v110 = a1;
          v111 = v23;
          v112 = v20;
          v113 = v25;
          v114 = a2;
        }
        v115 = (void *)v101[5];
        v116 = (void *)v163;
        v117 = v164;
        if (v115)
        {
          v118 = v115;
          OUTLINED_FUNCTION_18_4(v118, sel_setTranslatesAutoresizingMaskIntoConstraints_);
          OUTLINED_FUNCTION_3_91();

        }
        v119 = (void *)v101[6];
        if (v119)
        {
          v120 = v119;
          OUTLINED_FUNCTION_18_4(v120, sel_setTranslatesAutoresizingMaskIntoConstraints_);
          OUTLINED_FUNCTION_3_91();

        }
        v121 = (void *)v101[7];
        if (v121)
        {
          v122 = v121;
          OUTLINED_FUNCTION_18_4(v122, sel_setTranslatesAutoresizingMaskIntoConstraints_);
          OUTLINED_FUNCTION_3_91();

        }
        v123 = (void *)v101[8];
        if (v123)
        {
          v124 = v123;
          OUTLINED_FUNCTION_18_4(v124, sel_setTranslatesAutoresizingMaskIntoConstraints_);
          OUTLINED_FUNCTION_3_91();

        }
        v125 = (void *)v101[9];
        if (v125)
        {
          v126 = v125;
          OUTLINED_FUNCTION_18_4(v126, sel_setTranslatesAutoresizingMaskIntoConstraints_);
          OUTLINED_FUNCTION_3_91();
          OUTLINED_FUNCTION_27();

        }
        else
        {
          OUTLINED_FUNCTION_27();
        }
        objc_msgSend(v16, sel_addSubview_, *(_QWORD *)(v12 + v160));

        v127 = *(void **)&v16[v155];
        if (v127)
        {
          v128 = v127;
          OUTLINED_FUNCTION_65(v164, sel_addSubview_);

        }
        objc_msgSend(*(id *)(v12 + v160), sel_addSubview_, *(_QWORD *)&v16[v159]);
        if (v168 > 6)
        {
          v171 = 0;
          v172 = 0xE000000000000000;
          _StringGuts.grow(_:)(42);
          swift_bridgeObjectRelease();
          v171 = 0xD000000000000028;
          v172 = 0x80000001BD681120;
          v170 = v168;
          v147._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v147);
          OUTLINED_FUNCTION_13_3();
          goto LABEL_98;
        }
        if (((1 << v168) & 0x4F) != 0)
        {
          v129 = *(void **)&v16[v153];
          if (v129)
          {
            v130 = v129;
            InCallControlButton.addConstraintsForLabeledDisc(size:label:)(v130, a9);
            goto LABEL_88;
          }
          InCallControlButton.addConstraintsForDisc(size:)(a9);
        }
        else
        {
          v131 = *(void **)&v16[v152];
          if (v131)
          {
            v130 = v131;
            InCallControlButton.addConstraintsForPillWithImageView(_:imageSpacing:isImageTrailing:)(v130, 0, 1, a11 & 1);
LABEL_88:

          }
          else
          {
            InCallControlButton.addConstraintsForPill()();
          }
        }
        v132 = v16;
        v139 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_87_8((int)v132, sel_clearColor, v133, v134, v135, v136, v137, v138, v148, v149, v150, v152, v153, v12, v155, v159, v160, v163,
                   (uint64_t)v164,
                   v167));
        OUTLINED_FUNCTION_65(v132, sel_setBackgroundColor_);

        InCallControlButton.updateColors()(v140);
        return v132;
      default:
        v173 = 0;
        v174 = 0xE000000000000000;
        v144 = a2;
        _StringGuts.grow(_:)(44);
        swift_bridgeObjectRelease();
        v173 = 0xD00000000000002ALL;
        v174 = 0x80000001BD6810C0;
        v171 = (unint64_t)a1;
        type metadata accessor for CNKInCallControlButtonStyle(0);
        v145._countAndFlagsBits = String.init<A>(reflecting:)();
        String.append(_:)(v145);
        OUTLINED_FUNCTION_13_3();
        goto LABEL_98;
    }
  }
}

id closure #3 in InCallControlButton.init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v0 = (void *)objc_opt_self();
  if (one-time initialization token for backgroundBlurEffect != -1)
    swift_once();
  v1 = objc_msgSend(v0, sel__effectForBlurEffect_vibrancyStyle_, static Colors.InCallControls.backgroundBlurEffect, 112);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v1);

  v3 = objc_msgSend(v2, sel_contentView);
  v4 = objc_msgSend((id)objc_opt_self(), sel_tintColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  return v2;
}

void InCallControlButton.__allocating_init(coder:)(uint64_t a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void InCallControlButton.init(coder:)()
{
  char *v0;
  uint64_t v1;
  id v2;
  double v3;
  char *v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_callbackCancellable] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_paragraphStyle;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  LODWORD(v3) = 1.0;
  OUTLINED_FUNCTION_11_4((uint64_t)objc_msgSend(v2, sel_setHyphenationFactor_, v3), sel_setAlignment_);
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_image] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageLoadingTask] = 0;
  v4 = &v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_symbolDescription];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *((_OWORD *)v4 + 3) = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_cnkContentAlpha] = 0x3FF0000000000000;
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_menuDataSource]);

  OUTLINED_FUNCTION_0_109();
  __break(1u);
}

Swift::Void __swiftcall InCallControlButton.layoutSubviews()()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  Swift::String v18;
  objc_super v19;
  Swift::String v20;

  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for InCallControlButton();
  v1 = objc_msgSendSuper2(&v19, sel_layoutSubviews);
  switch(*(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style])
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 6:
      v2 = OUTLINED_FUNCTION_123((uint64_t)v1, sel_bounds);
      v4 = v3;
      OUTLINED_FUNCTION_123((uint64_t)v2, sel_bounds);
      if (v5 >= v4)
        v6 = v4;
      else
        v6 = v5;
      v7 = v6 * 0.5;
      v8 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView], sel_layer);
      OUTLINED_FUNCTION_29_44(v8, sel_setCornerRadius_);

      v9 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView];
      if (v9)
        objc_msgSend(v9, sel__setCornerRadius_continuous_maskedCorners_, 0, 15, v7);
      break;
    case 4:
      v10 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView], sel_layer);
      v11 = OUTLINED_FUNCTION_25_1((uint64_t)v10, sel_traitCollection);
      _UITableViewDefaultSectionCornerRadiusForTraitCollection();

      OUTLINED_FUNCTION_29_44(v10, sel_setCornerRadius_);
      break;
    case 5:
      objc_msgSend(v0, sel_bounds);
      v12 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView], sel_layer);
      OUTLINED_FUNCTION_29_44(v12, sel_setCornerRadius_);

      v14 = OUTLINED_FUNCTION_123(v13, sel_layer);
      OUTLINED_FUNCTION_29_44(v14, sel_setCornerRadius_);

      v16 = OUTLINED_FUNCTION_123(v15, sel_layer);
      objc_msgSend(v16, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

      v17 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView];
      if (v17)
        OUTLINED_FUNCTION_29_44(v17, sel__setContinuousCornerRadius_);
      break;
    default:
      OUTLINED_FUNCTION_23_49();
      _StringGuts.grow(_:)(52);
      v18._object = (void *)0x80000001BD681150;
      v18._countAndFlagsBits = 0xD000000000000032;
      String.append(_:)(v18);
      v20._countAndFlagsBits = OUTLINED_FUNCTION_35_27();
      OUTLINED_FUNCTION_11_71(v20);
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_0_109();
      __break(1u);
      JUMPOUT(0x1BD2AF5CCLL);
  }
  OUTLINED_FUNCTION_80_10();
}

uint64_t InCallControlButton.updateSymbolDescribing(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  outlined init with copy of FeatureEligibility?(a1, (uint64_t)&v9, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  if (v10)
  {
    v2 = outlined init with take of Notice(&v9, (uint64_t)v6);
    OUTLINED_FUNCTION_59(v2, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v3 = v7;
    v4 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 8))(&v9, v3, v4);
    static UIImage.symbolImage(for:)((uint64_t)&v9);
    outlined release of SymbolImageDescription((uint64_t)&v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v9, (uint64_t *)&demangling cache variable for type metadata for SymbolImageDescribing?);
  }
  return OUTLINED_FUNCTION_34_29(*v1);
}

void InCallControlButton.addConstraintsForDisc(size:)(double a1)
{
  char *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v2 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView];
  if (v2)
  {
    v9 = *(id *)&v1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView];
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style] == 2)
    {
      if (*(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView])
      {
        v4 = v2;
        v5 = OUTLINED_FUNCTION_123((uint64_t)v4, sel_contentView);
        objc_msgSend(v5, sel_addSubview_, v4);

      }
      else
      {
        v6 = v2;
      }
    }
    else
    {
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView], sel_addSubview_, v2);
    }
    v7 = OUTLINED_FUNCTION_14_9(v1, sel_setContentCompressionResistancePriority_forAxis_);
    v8 = (void *)MEMORY[0x1C3B749C0](v7);
    closure #1 in InCallControlButton.addConstraintsForDisc(size:)(v1, (uint64_t)v9, a1);
    objc_autoreleasePoolPop(v8);

  }
  else
  {
    OUTLINED_FUNCTION_0_109();
    __break(1u);
  }
}

void closure #1 in InCallControlButton.addConstraintsForDisc(size:)(char *a1, uint64_t a2, double a3)
{
  uint64_t inited;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  double v21;
  id v22;
  id v23;
  double v24;
  id v25;
  id v26;
  id v27;
  double v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t i;
  void *v83;
  id v84;
  void *v85;
  Class isa;
  id v88;
  int v89;
  uint64_t v90;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<NSLayoutConstraint?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD655CA0;
  v6 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView];
  v7 = objc_msgSend(v6, sel_topAnchor);
  v8 = objc_msgSend(a1, sel_topAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(_QWORD *)(inited + 32) = v9;
  v10 = objc_msgSend(v6, sel_leadingAnchor);
  v11 = objc_msgSend(a1, sel_leadingAnchor);
  v12 = objc_msgSend(v10, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v11);

  *(_QWORD *)(inited + 40) = v12;
  v13 = objc_msgSend(v6, sel_trailingAnchor);
  v14 = objc_msgSend(a1, sel_trailingAnchor);
  v15 = objc_msgSend(v13, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v14);

  *(_QWORD *)(inited + 48) = v15;
  v16 = objc_msgSend(v6, sel_bottomAnchor);
  v17 = objc_msgSend(a1, sel_bottomAnchor);
  v18 = objc_msgSend(v16, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v17);

  *(_QWORD *)(inited + 56) = v18;
  v19 = objc_msgSend(v6, sel_widthAnchor);
  v20 = objc_msgSend(v19, sel_constraintEqualToConstant_, a3);

  type metadata accessor for UILayoutPriority(0);
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UILayoutPriority and conformance UILayoutPriority, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, MEMORY[0x1E0DC2B88]);
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v21) = v89;
  objc_msgSend(v20, sel_setPriority_, v21);
  *(_QWORD *)(inited + 64) = v20;
  v22 = objc_msgSend(v6, sel_heightAnchor);
  v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, a3);

  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v24) = v89;
  objc_msgSend(v23, sel_setPriority_, v24);
  *(_QWORD *)(inited + 72) = v23;
  v25 = objc_msgSend(v6, sel_heightAnchor);
  v26 = objc_msgSend(v6, sel_widthAnchor);
  v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  LODWORD(v28) = 1148846080;
  objc_msgSend(v27, sel_setPriority_, v28);
  *(_QWORD *)(inited + 80) = v27;
  v29 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView;
  v30 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView];
  if (v30)
  {
    v31 = objc_msgSend(v30, sel_topAnchor);
    v32 = objc_msgSend(v6, sel_topAnchor);
    v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)(inited + 88) = v33;
  v34 = *(void **)&a1[v29];
  if (v34)
  {
    v35 = objc_msgSend(v34, sel_bottomAnchor);
    v36 = objc_msgSend(v6, sel_bottomAnchor);
    v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  }
  else
  {
    v37 = 0;
  }
  *(_QWORD *)(inited + 96) = v37;
  v38 = *(void **)&a1[v29];
  if (v38)
  {
    v39 = objc_msgSend(v38, sel_leadingAnchor);
    v40 = objc_msgSend(v6, sel_leadingAnchor);
    v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

  }
  else
  {
    v41 = 0;
  }
  *(_QWORD *)(inited + 104) = v41;
  v42 = *(void **)&a1[v29];
  if (v42)
  {
    v43 = objc_msgSend(v42, sel_trailingAnchor);
    v44 = objc_msgSend(v6, sel_trailingAnchor);
    v45 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v44);

  }
  else
  {
    v45 = 0;
  }
  *(_QWORD *)(inited + 112) = v45;
  v46 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView;
  v47 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView];
  if (v47)
  {
    v48 = objc_msgSend(v47, sel_topAnchor);
    v49 = objc_msgSend(v6, sel_topAnchor);
    v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  }
  else
  {
    v50 = 0;
  }
  *(_QWORD *)(inited + 120) = v50;
  v51 = *(void **)&a1[v46];
  if (v51)
  {
    v52 = objc_msgSend(v51, sel_bottomAnchor);
    v53 = objc_msgSend(v6, sel_bottomAnchor);
    v54 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v53);

  }
  else
  {
    v54 = 0;
  }
  *(_QWORD *)(inited + 128) = v54;
  v55 = *(void **)&a1[v46];
  if (v55)
  {
    v56 = objc_msgSend(v55, sel_leadingAnchor);
    v57 = objc_msgSend(v6, sel_leadingAnchor);
    v58 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v57);

  }
  else
  {
    v58 = 0;
  }
  *(_QWORD *)(inited + 136) = v58;
  v59 = *(void **)&a1[v46];
  if (v59)
  {
    v60 = objc_msgSend(v59, sel_trailingAnchor);
    v61 = objc_msgSend(v6, sel_trailingAnchor);
    v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v61);

  }
  else
  {
    v62 = 0;
  }
  *(_QWORD *)(inited + 144) = v62;
  v63 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView];
  v64 = objc_msgSend(v63, sel_topAnchor, a2);
  v65 = objc_msgSend(v6, sel_topAnchor);
  v66 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v65);

  *(_QWORD *)(inited + 152) = v66;
  v67 = objc_msgSend(v63, sel_bottomAnchor);
  v68 = objc_msgSend(v6, sel_bottomAnchor);
  v69 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v68);

  *(_QWORD *)(inited + 160) = v69;
  v70 = objc_msgSend(v63, sel_leadingAnchor);
  v71 = objc_msgSend(v6, sel_leadingAnchor);
  v72 = objc_msgSend(v70, sel_constraintEqualToAnchor_, v71);

  *(_QWORD *)(inited + 168) = v72;
  v73 = objc_msgSend(v63, sel_trailingAnchor);
  v74 = objc_msgSend(v6, sel_trailingAnchor);
  v75 = objc_msgSend(v73, sel_constraintEqualToAnchor_, v74);

  *(_QWORD *)(inited + 176) = v75;
  v76 = objc_msgSend(v88, sel_centerXAnchor);
  v77 = objc_msgSend(v6, sel_centerXAnchor);
  v78 = objc_msgSend(v76, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v77);

  *(_QWORD *)(inited + 184) = v78;
  v79 = objc_msgSend(v88, sel_centerYAnchor);
  v80 = objc_msgSend(v6, sel_centerYAnchor);
  v81 = objc_msgSend(v79, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v80);

  *(_QWORD *)(inited + 192) = v81;
  specialized Array._endMutation()();
  v90 = MEMORY[0x1E0DEE9D8];
  for (i = 32; i != 200; i += 8)
  {
    v83 = *(void **)(inited + i);
    if (v83)
    {
      v84 = v83;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  v85 = (void *)objc_opt_self();
  swift_bridgeObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v85, sel_activateConstraints_, isa);

}

void InCallControlButton.addConstraintsForLabeledDisc(size:label:)(void *a1, double a2)
{
  char *v2;
  void *v4;
  void *v6;
  id v7;
  double v8;
  id v9;
  id v10;
  double v11;
  id v12;
  void *v13;
  void *v14;

  v4 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView];
  if (v4)
  {
    v14 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView];
    if (*(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style] == 2)
    {
      v6 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView];
      v7 = v4;
      if (v6)
      {
        v9 = objc_msgSend(v6, sel_contentView);
        OUTLINED_FUNCTION_59_6(v9, sel_addSubview_);

      }
    }
    else
    {
      v7 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView], sel_addSubview_, v4);
    }
    v10 = OUTLINED_FUNCTION_42_33(v8, (uint64_t)v7, sel_setContentHuggingPriority_forAxis_);
    OUTLINED_FUNCTION_42_33(v11, (uint64_t)v10, sel_setContentCompressionResistancePriority_forAxis_);
    v12 = OUTLINED_FUNCTION_65(v2, sel_addSubview_);
    v13 = (void *)MEMORY[0x1C3B749C0](v12);
    closure #1 in InCallControlButton.addConstraintsForLabeledDisc(size:label:)(v2, v14, a1, a2);
    objc_autoreleasePoolPop(v13);
    OUTLINED_FUNCTION_9_73(v14);
  }
  else
  {
    OUTLINED_FUNCTION_0_109();
    __break(1u);
  }
}

void closure #1 in InCallControlButton.addConstraintsForLabeledDisc(size:label:)(char *a1, void *a2, void *a3, double a4)
{
  uint64_t inited;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t i;
  void *v67;
  id v68;
  void *v69;
  Class isa;
  uint64_t v73;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<NSLayoutConstraint?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD655CB0;
  v7 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView];
  v8 = objc_msgSend(v7, sel_topAnchor);
  v9 = objc_msgSend(a1, sel_topAnchor);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(_QWORD *)(inited + 32) = v10;
  v11 = objc_msgSend(v7, sel_leadingAnchor);
  v12 = objc_msgSend(a1, sel_leadingAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(inited + 40) = v13;
  v14 = objc_msgSend(v7, sel_trailingAnchor);
  v15 = objc_msgSend(a1, sel_trailingAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(inited + 48) = v16;
  v17 = objc_msgSend(v7, sel_widthAnchor);
  v18 = objc_msgSend(v17, sel_constraintEqualToConstant_, a4);

  *(_QWORD *)(inited + 56) = v18;
  v19 = objc_msgSend(v7, sel_heightAnchor);
  v20 = objc_msgSend(v19, sel_constraintEqualToConstant_, a4);

  *(_QWORD *)(inited + 64) = v20;
  v21 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView;
  v22 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView];
  if (v22)
  {
    v23 = objc_msgSend(v22, sel_topAnchor);
    v24 = objc_msgSend(v7, sel_topAnchor);
    v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  }
  else
  {
    v25 = 0;
  }
  *(_QWORD *)(inited + 72) = v25;
  v26 = *(void **)&a1[v21];
  if (v26)
  {
    v27 = objc_msgSend(v26, sel_bottomAnchor);
    v28 = objc_msgSend(v7, sel_bottomAnchor);
    v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  }
  else
  {
    v29 = 0;
  }
  *(_QWORD *)(inited + 80) = v29;
  v30 = *(void **)&a1[v21];
  if (v30)
  {
    v31 = objc_msgSend(v30, sel_leadingAnchor);
    v32 = objc_msgSend(v7, sel_leadingAnchor);
    v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)(inited + 88) = v33;
  v34 = *(void **)&a1[v21];
  if (v34)
  {
    v35 = objc_msgSend(v34, sel_trailingAnchor);
    v36 = objc_msgSend(v7, sel_trailingAnchor);
    v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  }
  else
  {
    v37 = 0;
  }
  *(_QWORD *)(inited + 96) = v37;
  v38 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView];
  v39 = objc_msgSend(v38, sel_topAnchor);
  v40 = objc_msgSend(v7, sel_topAnchor);
  v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

  *(_QWORD *)(inited + 104) = v41;
  v42 = objc_msgSend(v38, sel_bottomAnchor);
  v43 = objc_msgSend(v7, (SEL)&selRef_groupConversations + 5);
  v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  *(_QWORD *)(inited + 112) = v44;
  v45 = objc_msgSend(v38, sel_leadingAnchor);
  v46 = objc_msgSend(v7, sel_leadingAnchor);
  v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

  *(_QWORD *)(inited + 120) = v47;
  v48 = objc_msgSend(v38, sel_trailingAnchor);
  v49 = objc_msgSend(v7, sel_trailingAnchor);
  v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  *(_QWORD *)(inited + 128) = v50;
  v51 = objc_msgSend(a2, sel_centerXAnchor);
  v52 = objc_msgSend(v7, (SEL)&selRef_isHighlighted + 6);
  v53 = objc_msgSend(v51, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v52);

  *(_QWORD *)(inited + 136) = v53;
  v54 = objc_msgSend(a2, sel_centerYAnchor);
  v55 = objc_msgSend(v7, sel_centerYAnchor);
  v56 = objc_msgSend(v54, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v55);

  *(_QWORD *)(inited + 144) = v56;
  v57 = objc_msgSend(a3, sel_topAnchor);
  v58 = objc_msgSend(v7, (SEL)0x1F37B738DLL);
  v59 = objc_msgSend(v57, sel_constraintEqualToAnchor_constant_, v58, 5.0);

  *(_QWORD *)(inited + 152) = v59;
  v60 = objc_msgSend(a3, sel_centerXAnchor);
  v61 = objc_msgSend(v7, sel_centerXAnchor);
  v62 = objc_msgSend(v60, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v61);

  *(_QWORD *)(inited + 160) = v62;
  v63 = objc_msgSend(a3, (SEL)0x1F37B738DLL);
  v64 = objc_msgSend(a1, (SEL)0x1F37B738DLL);
  v65 = objc_msgSend(v63, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v64);

  *(_QWORD *)(inited + 168) = v65;
  specialized Array._endMutation()();
  v73 = MEMORY[0x1E0DEE9D8];
  for (i = 32; i != 176; i += 8)
  {
    v67 = *(void **)(inited + i);
    if (v67)
    {
      v68 = v67;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  v69 = (void *)objc_opt_self();
  swift_bridgeObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v69, sel_activateConstraints_, isa);

}

void InCallControlButton.addConstraintsForPillWithImageView(_:imageSpacing:isImageTrailing:)(void *a1, uint64_t a2, char a3, char a4)
{
  char *v4;
  void *v5;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  if (*(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label])
  {
    if ((a3 & 1) != 0)
      *(double *)&a2 = 3.0;
    v9 = objc_allocWithZone(MEMORY[0x1E0DC39A0]);
    v10 = OUTLINED_FUNCTION_84_8();
    v11 = objc_msgSend(v5, sel_init);
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
    v12 = *(void **)&v4[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView];
    objc_msgSend(v12, sel_addLayoutGuide_, v11);
    OUTLINED_FUNCTION_65(v12, sel_addSubview_);
    OUTLINED_FUNCTION_59_6(v12, sel_addSubview_);
    v13 = (void *)MEMORY[0x1C3B749C0](objc_msgSend(v12, sel_addLayoutGuide_, v14));
    closure #1 in InCallControlButton.addConstraintsForPillWithImageView(_:imageSpacing:isImageTrailing:)(v4, v11, v14, v10, a4 & 1, a1, *(double *)&a2);
    objc_autoreleasePoolPop(v13);
    OUTLINED_FUNCTION_14_9(a1, sel_setContentCompressionResistancePriority_forAxis_);

  }
  else
  {
    OUTLINED_FUNCTION_0_109();
    __break(1u);
  }
}

void closure #1 in InCallControlButton.addConstraintsForPillWithImageView(_:imageSpacing:isImageTrailing:)(char *a1, void *a2, void *a3, void *a4, char a5, void *a6, double a7)
{
  uint64_t inited;
  id v10;
  id v11;
  double v12;
  id v13;
  id v14;
  double v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  uint64_t i;
  void *v115;
  id v116;
  void *v117;
  Class isa;
  uint64_t v124;
  uint64_t v125;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<NSLayoutConstraint?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD655CC0;
  v10 = objc_msgSend(a1, sel_heightAnchor);
  v11 = objc_msgSend(v10, sel_constraintGreaterThanOrEqualToConstant_, 42.0);

  LODWORD(v12) = 1148846080;
  objc_msgSend(v11, sel_setPriority_, v12);
  *(_QWORD *)(inited + 32) = v11;
  v13 = objc_msgSend(a1, sel_widthAnchor);
  v14 = objc_msgSend(v13, sel_constraintGreaterThanOrEqualToConstant_, 72.0);

  LODWORD(v15) = 1148846080;
  objc_msgSend(v14, sel_setPriority_, v15);
  *(_QWORD *)(inited + 40) = v14;
  v16 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView];
  v17 = objc_msgSend(v16, sel_topAnchor);
  v18 = objc_msgSend(a1, sel_topAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(_QWORD *)(inited + 48) = v19;
  v20 = objc_msgSend(v16, sel_bottomAnchor);
  v21 = objc_msgSend(a1, sel_bottomAnchor);
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(_QWORD *)(inited + 56) = v22;
  v23 = objc_msgSend(v16, sel_leadingAnchor);
  v24 = objc_msgSend(a1, sel_leadingAnchor);
  v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  *(_QWORD *)(inited + 64) = v25;
  v26 = objc_msgSend(v16, sel_trailingAnchor);
  v27 = objc_msgSend(a1, sel_trailingAnchor);
  v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  *(_QWORD *)(inited + 72) = v28;
  v29 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView;
  v30 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView];
  if (v30)
  {
    v31 = objc_msgSend(v30, sel_topAnchor);
    v32 = v16;
    v33 = objc_msgSend(v16, sel_topAnchor);
    v34 = objc_msgSend(v31, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v33);

  }
  else
  {
    v32 = v16;
    v34 = 0;
  }
  *(_QWORD *)(inited + 80) = v34;
  v35 = *(void **)&a1[v29];
  if (v35)
  {
    v36 = objc_msgSend(v35, sel_bottomAnchor);
    v37 = objc_msgSend(v32, sel_bottomAnchor);
    v38 = objc_msgSend(v36, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v37);

  }
  else
  {
    v38 = 0;
  }
  *(_QWORD *)(inited + 88) = v38;
  v39 = *(void **)&a1[v29];
  if (v39)
  {
    v40 = objc_msgSend(v39, sel_leadingAnchor);
    v41 = objc_msgSend(v32, sel_leadingAnchor);
    v42 = objc_msgSend(v40, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v41);

  }
  else
  {
    v42 = 0;
  }
  *(_QWORD *)(inited + 96) = v42;
  v43 = *(void **)&a1[v29];
  if (v43)
  {
    v44 = objc_msgSend(v43, sel_trailingAnchor);
    v45 = objc_msgSend(v32, sel_trailingAnchor);
    v46 = objc_msgSend(v44, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v45);

  }
  else
  {
    v46 = 0;
  }
  *(_QWORD *)(inited + 104) = v46;
  v47 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView];
  v48 = objc_msgSend(v47, sel_topAnchor);
  v49 = objc_msgSend(v32, (SEL)&selRef_setUserInteractionEnabled_ + 4);
  v50 = objc_msgSend(v48, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v49);

  *(_QWORD *)(inited + 112) = v50;
  v51 = objc_msgSend(v47, sel_bottomAnchor);
  v52 = objc_msgSend(v32, (SEL)&selRef_groupConversations + 5);
  v53 = objc_msgSend(v51, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v52);

  *(_QWORD *)(inited + 120) = v53;
  v54 = objc_msgSend(v47, sel_leadingAnchor);
  v55 = objc_msgSend(v32, (SEL)&selRef_activeCall + 6);
  v56 = objc_msgSend(v54, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v55);

  *(_QWORD *)(inited + 128) = v56;
  v57 = objc_msgSend(v47, sel_trailingAnchor);
  v58 = objc_msgSend(v32, sel_trailingAnchor);
  v59 = objc_msgSend(v57, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v58);

  *(_QWORD *)(inited + 136) = v59;
  v60 = objc_msgSend(a2, sel_topAnchor);
  v61 = objc_msgSend(v32, sel_topAnchor);
  v62 = objc_msgSend(v60, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v61);

  *(_QWORD *)(inited + 144) = v62;
  v63 = objc_msgSend(a2, sel_bottomAnchor);
  v64 = objc_msgSend(v32, sel_bottomAnchor);
  v65 = objc_msgSend(v63, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v64);

  *(_QWORD *)(inited + 152) = v65;
  v66 = objc_msgSend(a2, sel_leadingAnchor);
  v67 = objc_msgSend(v32, sel_leadingAnchor);
  v68 = objc_msgSend(v66, sel_constraintEqualToAnchor_constant_, v67, 10.0);

  *(_QWORD *)(inited + 160) = v68;
  v69 = objc_msgSend(a3, (SEL)&selRef_setUserInteractionEnabled_ + 4);
  v70 = objc_msgSend(v32, (SEL)&selRef_setUserInteractionEnabled_ + 4);
  v71 = objc_msgSend(v69, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v70);

  *(_QWORD *)(inited + 168) = v71;
  v72 = objc_msgSend(a3, sel_bottomAnchor);
  v73 = objc_msgSend(v32, sel_bottomAnchor);
  v74 = objc_msgSend(v72, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v73);

  *(_QWORD *)(inited + 176) = v74;
  v75 = objc_msgSend(a3, sel_leadingAnchor);
  v76 = objc_msgSend(a4, (SEL)&selRef_setDateFormat_);
  v77 = objc_msgSend(v75, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v76);

  *(_QWORD *)(inited + 184) = v77;
  v78 = objc_msgSend(a3, (SEL)&selRef_setDateFormat_);
  v79 = objc_msgSend(v32, (SEL)&selRef_setDateFormat_);
  v80 = objc_msgSend(v78, sel_constraintEqualToAnchor_constant_, v79, -10.0);

  *(_QWORD *)(inited + 192) = v80;
  v81 = objc_msgSend(a2, sel_widthAnchor);
  v82 = objc_msgSend(a3, sel_widthAnchor);
  v83 = objc_msgSend(v81, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v82);

  *(_QWORD *)(inited + 200) = v83;
  v125 = inited;
  specialized Array._endMutation()();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = xmmword_1BD644E30;
  if ((a5 & 1) != 0)
  {
    v85 = objc_msgSend(a6, (SEL)&selRef_setDateFormat_);
    v86 = objc_msgSend(a3, (SEL)&selRef_setDateFormat_);
    v87 = objc_msgSend(v85, sel_constraintEqualToAnchor_constant_, v86, -a7);

    *(_QWORD *)(v84 + 32) = v87;
    v88 = objc_msgSend(a6, sel_centerYAnchor);
    v89 = objc_msgSend(v32, sel_centerYAnchor);
    v90 = objc_msgSend(v88, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v89);

    *(_QWORD *)(v84 + 40) = v90;
    v91 = objc_msgSend(a4, sel_leadingAnchor);
    v92 = objc_msgSend(a2, sel_leadingAnchor);
    v93 = objc_msgSend(v91, (SEL)&selRef_initWithLayoutStyle_ + 7, v92, a7);

    *(_QWORD *)(v84 + 48) = v93;
    v94 = objc_msgSend(a4, sel_topAnchor);
    v95 = objc_msgSend(v32, sel_topAnchor);
    v96 = objc_msgSend(v94, (SEL)&selRef_initWithLayoutStyle_ + 7, v95, 8.0);

    *(_QWORD *)(v84 + 56) = v96;
    v97 = objc_msgSend(a4, sel_bottomAnchor);
    v98 = objc_msgSend(v32, sel_bottomAnchor);
    v99 = objc_msgSend(v97, (SEL)&selRef_initWithLayoutStyle_ + 7, v98, -8.0);
  }
  else
  {
    v100 = objc_msgSend(a6, sel_leadingAnchor);
    v101 = objc_msgSend(a2, (SEL)&selRef_setDateFormat_);
    v102 = objc_msgSend(v100, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v101);

    *(_QWORD *)(v84 + 32) = v102;
    v103 = objc_msgSend(a6, sel_centerYAnchor);
    v104 = objc_msgSend(v32, sel_centerYAnchor);
    v105 = objc_msgSend(v103, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v104);

    *(_QWORD *)(v84 + 40) = v105;
    v106 = objc_msgSend(a4, sel_leadingAnchor);
    v107 = objc_msgSend(a6, (SEL)&selRef_setDateFormat_);
    v108 = objc_msgSend(v106, sel_constraintEqualToAnchor_constant_, v107, a7);

    *(_QWORD *)(v84 + 48) = v108;
    v109 = objc_msgSend(a4, sel_topAnchor);
    v110 = objc_msgSend(v32, sel_topAnchor);
    v111 = objc_msgSend(v109, sel_constraintEqualToAnchor_constant_, v110, 8.0);

    *(_QWORD *)(v84 + 56) = v111;
    v97 = objc_msgSend(a4, sel_bottomAnchor);
    v98 = objc_msgSend(v32, sel_bottomAnchor);
    v99 = objc_msgSend(v97, sel_constraintEqualToAnchor_constant_, v98, -8.0);
  }
  v112 = v99;

  *(_QWORD *)(v84 + 64) = v112;
  specialized Array._endMutation()();
  specialized _arrayForceCast<A, B>(_:)();
  swift_bridgeObjectRelease();
  specialized Array.append<A>(contentsOf:)();
  v124 = MEMORY[0x1E0DEE9D8];
  v113 = *(_QWORD *)(v125 + 16);
  if (v113)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v113; ++i)
    {
      v115 = *(void **)(v125 + 8 * i + 32);
      if (v115)
      {
        v116 = v115;
        MEMORY[0x1C3B7301C]();
        if (*(_QWORD *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v117 = (void *)objc_opt_self();
  swift_bridgeObjectRelease_n();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v117, sel_activateConstraints_, isa);

}

void InCallControlButton.addConstraintsForPill()()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label];
  if (v1)
  {
    v2 = v1;
    OUTLINED_FUNCTION_14_9(v2, sel_setContentHuggingPriority_forAxis_);
    OUTLINED_FUNCTION_14_9(v2, sel_setContentCompressionResistancePriority_forAxis_);
    v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView];
    OUTLINED_FUNCTION_65(v3, sel_addSubview_);
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
    objc_msgSend(v3, sel_addLayoutGuide_, v7);
    v5 = OUTLINED_FUNCTION_59_6(v3, sel_addLayoutGuide_);
    v6 = (void *)MEMORY[0x1C3B749C0](v5);
    closure #1 in InCallControlButton.addConstraintsForPill()(v0, v7, v2, v4);
    objc_autoreleasePoolPop(v6);

    OUTLINED_FUNCTION_9_73(v7);
  }
  else
  {
    OUTLINED_FUNCTION_0_109();
    __break(1u);
  }
}

void closure #1 in InCallControlButton.addConstraintsForPill()(char *a1, void *a2, void *a3, void *a4)
{
  uint64_t inited;
  id v6;
  id v7;
  double v8;
  id v9;
  id v10;
  double v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t i;
  void *v89;
  id v90;
  void *v91;
  Class isa;
  uint64_t v96;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<NSLayoutConstraint?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD655CD0;
  v6 = objc_msgSend(a1, sel_heightAnchor);
  v7 = objc_msgSend(v6, sel_constraintGreaterThanOrEqualToConstant_, 42.0);

  LODWORD(v8) = 1144750080;
  objc_msgSend(v7, sel_setPriority_, v8);
  *(_QWORD *)(inited + 32) = v7;
  v9 = objc_msgSend(a1, sel_widthAnchor);
  v10 = objc_msgSend(v9, sel_constraintGreaterThanOrEqualToConstant_, 72.0);

  LODWORD(v11) = 1144750080;
  objc_msgSend(v10, sel_setPriority_, v11);
  *(_QWORD *)(inited + 40) = v10;
  v12 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discView];
  v13 = objc_msgSend(v12, sel_topAnchor);
  v14 = objc_msgSend(a1, sel_topAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(_QWORD *)(inited + 48) = v15;
  v16 = objc_msgSend(v12, sel_bottomAnchor);
  v17 = objc_msgSend(a1, sel_bottomAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(inited + 56) = v18;
  v19 = objc_msgSend(v12, sel_leadingAnchor);
  v20 = objc_msgSend(a1, sel_leadingAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(inited + 64) = v21;
  v22 = objc_msgSend(v12, sel_trailingAnchor);
  v23 = objc_msgSend(a1, sel_trailingAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(_QWORD *)(inited + 72) = v24;
  v25 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView;
  v26 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView];
  if (v26)
  {
    v27 = objc_msgSend(v26, sel_topAnchor);
    v28 = objc_msgSend(v12, sel_topAnchor);
    v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  }
  else
  {
    v29 = 0;
  }
  *(_QWORD *)(inited + 80) = v29;
  v30 = *(void **)&a1[v25];
  if (v30)
  {
    v31 = objc_msgSend(v30, sel_bottomAnchor);
    v32 = objc_msgSend(v12, sel_bottomAnchor);
    v33 = objc_msgSend(v31, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v32);

  }
  else
  {
    v33 = 0;
  }
  *(_QWORD *)(inited + 88) = v33;
  v34 = *(void **)&a1[v25];
  if (v34)
  {
    v35 = objc_msgSend(v34, sel_leadingAnchor);
    v36 = objc_msgSend(v12, sel_leadingAnchor);
    v37 = objc_msgSend(v35, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v36);

  }
  else
  {
    v37 = 0;
  }
  *(_QWORD *)(inited + 96) = v37;
  v38 = *(void **)&a1[v25];
  if (v38)
  {
    v39 = objc_msgSend(v38, sel_trailingAnchor);
    v40 = objc_msgSend(v12, sel_trailingAnchor);
    v41 = objc_msgSend(v39, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v40);

  }
  else
  {
    v41 = 0;
  }
  *(_QWORD *)(inited + 104) = v41;
  v42 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView];
  v43 = objc_msgSend(v42, sel_topAnchor);
  v44 = objc_msgSend(v12, sel_topAnchor);
  v45 = objc_msgSend(v43, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v44);

  *(_QWORD *)(inited + 112) = v45;
  v46 = objc_msgSend(v42, sel_bottomAnchor);
  v47 = objc_msgSend(v12, (SEL)&selRef_groupConversations + 5);
  v48 = objc_msgSend(v46, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v47);

  *(_QWORD *)(inited + 120) = v48;
  v49 = objc_msgSend(v42, sel_leadingAnchor);
  v50 = objc_msgSend(v12, (SEL)&selRef_activeCall + 6);
  v51 = objc_msgSend(v49, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v50);

  *(_QWORD *)(inited + 128) = v51;
  v52 = objc_msgSend(v42, (SEL)&selRef_setDateFormat_);
  v53 = objc_msgSend(v12, (SEL)&selRef_setDateFormat_);
  v54 = objc_msgSend(v52, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v53);

  *(_QWORD *)(inited + 136) = v54;
  v55 = objc_msgSend(a2, sel_topAnchor);
  v56 = objc_msgSend(v12, sel_topAnchor);
  v57 = objc_msgSend(v55, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v56);

  *(_QWORD *)(inited + 144) = v57;
  v58 = objc_msgSend(a2, sel_bottomAnchor);
  v59 = objc_msgSend(v12, sel_bottomAnchor);
  v60 = objc_msgSend(v58, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v59);

  *(_QWORD *)(inited + 152) = v60;
  v61 = objc_msgSend(a2, sel_leadingAnchor);
  v62 = objc_msgSend(v12, sel_leadingAnchor);
  v63 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v62, 10.0);

  *(_QWORD *)(inited + 160) = v63;
  v64 = objc_msgSend(a3, sel_leadingAnchor);
  v65 = objc_msgSend(a2, (SEL)&selRef_setDateFormat_);
  v66 = objc_msgSend(v64, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v65);

  *(_QWORD *)(inited + 168) = v66;
  v67 = objc_msgSend(a3, sel_topAnchor);
  v68 = objc_msgSend(v12, sel_topAnchor);
  v69 = objc_msgSend(v67, sel_constraintEqualToAnchor_constant_, v68, 8.0);

  *(_QWORD *)(inited + 176) = v69;
  v70 = objc_msgSend(a3, sel_bottomAnchor);
  v71 = objc_msgSend(v12, sel_bottomAnchor);
  v72 = objc_msgSend(v70, sel_constraintEqualToAnchor_constant_, v71, -8.0);

  *(_QWORD *)(inited + 184) = v72;
  v73 = objc_msgSend(a4, sel_topAnchor);
  v74 = objc_msgSend(v12, (SEL)&selRef_setUserInteractionEnabled_ + 4);
  v75 = objc_msgSend(v73, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v74);

  *(_QWORD *)(inited + 192) = v75;
  v76 = objc_msgSend(a4, sel_bottomAnchor);
  v77 = objc_msgSend(v12, sel_bottomAnchor);
  v78 = objc_msgSend(v76, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v77);

  *(_QWORD *)(inited + 200) = v78;
  v79 = objc_msgSend(a4, sel_leadingAnchor);
  v80 = objc_msgSend(a3, sel_trailingAnchor);
  v81 = objc_msgSend(v79, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v80);

  *(_QWORD *)(inited + 208) = v81;
  v82 = objc_msgSend(a4, sel_trailingAnchor);
  v83 = objc_msgSend(v12, sel_trailingAnchor);
  v84 = objc_msgSend(v82, sel_constraintEqualToAnchor_constant_, v83, -10.0);

  *(_QWORD *)(inited + 216) = v84;
  v85 = objc_msgSend(a2, sel_widthAnchor);
  v86 = objc_msgSend(a4, sel_widthAnchor);
  v87 = objc_msgSend(v85, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v86);

  *(_QWORD *)(inited + 224) = v87;
  specialized Array._endMutation()();
  v96 = MEMORY[0x1E0DEE9D8];
  for (i = 32; i != 232; i += 8)
  {
    v89 = *(void **)(inited + i);
    if (v89)
    {
      v90 = v89;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  v91 = (void *)objc_opt_self();
  swift_bridgeObjectRelease();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v91, sel_activateConstraints_, isa);

}

void InCallControlButton.updateColors()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  id v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  Swift::String_optional v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  void (*v14)(void);
  void *v15;
  unint64_t v16;
  char v17;
  __n128 *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  unint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  __n128 *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  id v41;
  id v42;
  void *v43;
  char v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t (*v65)(void);
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  unsigned int v70;
  void *v71;
  void *v72;
  uint64_t v73;
  void *v74;
  void *v75;
  void *v76;
  char v77;
  void *v78;
  void *v79;
  void *v80;
  char v81[64];
  char v82[64];
  _QWORD v83[4];
  unsigned __int8 v84;
  void *v85;
  void *v86;
  void *v87;
  _QWORD v88[4];
  unsigned __int8 v89;
  void *v90;
  void *v91;
  void *v92;

  v2 = (uint64_t)OUTLINED_FUNCTION_25_1(a1, sel_isEnabled);
  if ((_DWORD)v2)
  {
    v3 = OUTLINED_FUNCTION_25_1(v2, sel_isHighlighted);
    v4 = (int)v3;
    v2 = (uint64_t)OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_isSelected);
    if (!v4)
    {
      if ((_DWORD)v2)
      {
        v2 = static Platform.current.getter();
        if (v2 == 2)
          v2 = (uint64_t)OUTLINED_FUNCTION_25_1(v2, sel_isFocused);
      }
    }
  }
  v5 = (uint64_t)OUTLINED_FUNCTION_25_1(v2, sel_accessibilityTraits);
  if ((*MEMORY[0x1E0DC46D8] & ~v5) == 0)
  {
    v6 = OUTLINED_FUNCTION_25_1(v5, sel_isSelected);
    v7 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v64 = 0xE000000000000000;
    if (v6)
    {
      v8 = 20047;
      v9 = 0xE200000000000000;
    }
    else
    {
      v8 = 4605519;
      v9 = 0xE300000000000000;
    }
    v10.value._countAndFlagsBits = 0x61737265766E6F43;
    v10.value._object = (void *)0xEF74694B6E6F6974;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v12 = 0;
    v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v8, v10, (NSBundle)v7, v11, *(Swift::String *)(&v64 - 1));

    outlined bridged method (mbnn) of @objc NSObject.accessibilityValue.setter(v13._countAndFlagsBits, (uint64_t)v13._object, v1);
  }
  v14 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x180);
  v14();
  specialized Dictionary.subscript.getter();
  OUTLINED_FUNCTION_13_3();
  outlined init with take of Any?((uint64_t)v81, (uint64_t)v88, &demangling cache variable for type metadata for InCallControlButtonConfiguration?);
  v15 = (void *)v88[0];
  v16 = MEMORY[0x1E0DEA968];
  if (v88[0] == 1)
  {
    v14();
    specialized Dictionary.subscript.getter();
    OUTLINED_FUNCTION_13_3();
    outlined init with take of Any?((uint64_t)v82, (uint64_t)v83, &demangling cache variable for type metadata for InCallControlButtonConfiguration?);
    v15 = (void *)v83[0];
    if (v83[0] == 1)
    {
      OUTLINED_FUNCTION_71_16();
      if (!v17)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v18 = (__n128 *)OUTLINED_FUNCTION_15();
      OUTLINED_FUNCTION_43_38(v18, (__n128)xmmword_1BD646740);
      v19 = OUTLINED_FUNCTION_77_11();
      v21 = v20;
      v18[3].n128_u64[1] = v16;
      v22 = lazy protocol witness table accessor for type String and conformance String();
      v18[4].n128_u64[0] = v22;
      v18[2].n128_u64[0] = v19;
      v18[2].n128_u64[1] = v21;
      v23 = OUTLINED_FUNCTION_77_11();
      v18[6].n128_u64[0] = v16;
      v18[6].n128_u64[1] = v22;
      v18[4].n128_u64[1] = v23;
      v18[5].n128_u64[0] = v24;
      v73 = ((uint64_t (*)(void))v14)();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Dictionary<UIControlState, InCallControlButtonConfiguration>);
      v25 = OUTLINED_FUNCTION_28_48();
      v18[8].n128_u64[1] = v16;
      v18[9].n128_u64[0] = v22;
      v18[7].n128_u64[0] = v25;
      v18[7].n128_u64[1] = v26;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      return;
    }
    v65 = (uint64_t (*)(void))v14;
    v66 = (void *)v83[1];
    v71 = (void *)v83[3];
    v72 = (void *)v83[2];
    v70 = v84;
    v31 = v87;
    v67 = v86;
    v68 = v85;
    OUTLINED_FUNCTION_71_16();
    if (!v17)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v32 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_43_38(v32, (__n128)xmmword_1BD645380);
    v33 = OUTLINED_FUNCTION_28_48();
    v35 = v34;
    v36 = MEMORY[0x1E0DEA968];
    v32[3].n128_u64[1] = MEMORY[0x1E0DEA968];
    v37 = lazy protocol witness table accessor for type String and conformance String();
    v32[4].n128_u64[0] = v37;
    v32[2].n128_u64[0] = v33;
    v32[2].n128_u64[1] = v35;
    v73 = v65();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Dictionary<UIControlState, InCallControlButtonConfiguration>);
    v38 = OUTLINED_FUNCTION_28_48();
    v32[6].n128_u64[0] = v36;
    v32[6].n128_u64[1] = v37;
    v32[4].n128_u64[1] = v38;
    v32[5].n128_u64[0] = v39;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v27 = v66;
    v30 = v67;
    v29 = v68;
    v28 = v70;
  }
  else
  {
    v27 = (void *)v88[1];
    v71 = (void *)v88[3];
    v72 = (void *)v88[2];
    v28 = v89;
    v29 = v90;
    v30 = v91;
    v31 = v92;
  }
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_isUsingVisualEffects) == 1)
  {
    if (v15)
    {
      v73 = (uint64_t)v15;
      v74 = v27;
      v75 = v72;
      v76 = v71;
      v40 = v28 & 1;
      v77 = v28 & 1;
      v41 = v15;
      v42 = v27;
      v69 = v15;
      v43 = v27;
      v44 = v28;
      v28 = (unint64_t)v30;
      v45 = v42;
      outlined copy of InCallControlButtonConfiguration.DiscConfiguration(v72, v71, v40);
      InCallControlButton.update(with:)(&v73);

      v46 = (void *)v28;
      LOBYTE(v28) = v44;
      v27 = v43;
      v15 = v69;
      outlined consume of InCallControlButtonConfiguration.DiscConfiguration(v72, v71, v40);
    }
    else
    {
      OUTLINED_FUNCTION_71_16();
      if (!v17)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v50 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v50 + 16) = xmmword_1BD645380;
      v73 = 0;
      v74 = v27;
      v75 = v72;
      v76 = v71;
      v77 = v28;
      v78 = v29;
      v79 = v30;
      v80 = v31;
      outlined copy of InCallControlButtonConfiguration.Flat?(v29, v30, v31);
      String.init<A>(reflecting:)();
      v51 = v31;
      v52 = v29;
      v53 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v50 + 56) = MEMORY[0x1E0DEA968];
      v54 = lazy protocol witness table accessor for type String and conformance String();
      OUTLINED_FUNCTION_18_60(v54);
      v55 = v1;
      v56 = OUTLINED_FUNCTION_78_15();
      *(_QWORD *)(v50 + 96) = v53;
      *(_QWORD *)(v50 + 104) = v27;
      v29 = v52;
      v31 = v51;
      v46 = v30;
      v27 = (void *)v28;
      LOBYTE(v28) = v70;
      *(_QWORD *)(v50 + 72) = v56;
      *(_QWORD *)(v50 + 80) = v57;
      OUTLINED_FUNCTION_75_12();
      OUTLINED_FUNCTION_21_0();
    }
  }
  else if (v29)
  {
    v47 = v29;
    v48 = v30;
    v46 = v30;
    v49 = v31;
    InCallControlButton.update(with:)((uint64_t)v47, (uint64_t)v48);

  }
  else
  {
    OUTLINED_FUNCTION_71_16();
    if (!v17)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v58 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v58 + 16) = xmmword_1BD645380;
    v73 = (uint64_t)v15;
    v74 = v27;
    v75 = v72;
    v76 = v71;
    v77 = v28;
    v78 = 0;
    v79 = v30;
    v80 = v31;
    outlined copy of InCallControlButtonConfiguration.Regular?(v15, v27, v72, v71, v28);
    String.init<A>(reflecting:)();
    v46 = v30;
    v59 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v58 + 56) = MEMORY[0x1E0DEA968];
    v60 = lazy protocol witness table accessor for type String and conformance String();
    OUTLINED_FUNCTION_18_60(v60);
    v61 = v1;
    v62 = OUTLINED_FUNCTION_78_15();
    *(_QWORD *)(v58 + 96) = v59;
    *(_QWORD *)(v58 + 104) = v27;
    v27 = (void *)v28;
    LOBYTE(v28) = v70;
    *(_QWORD *)(v58 + 72) = v62;
    *(_QWORD *)(v58 + 80) = v63;
    OUTLINED_FUNCTION_75_12();
    OUTLINED_FUNCTION_21_0();
    v29 = 0;
  }
  InCallControlButton.hyphenateLabelText()();
  outlined consume of InCallControlButtonConfiguration.Regular?(v15, v27, v72, v71, v28);
  outlined consume of InCallControlButtonConfiguration.Flat?(v29, v46, v31);
}

void InCallControlButton.update(with:)(uint64_t *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  Swift::String v25;

  v4 = (void *)a1[2];
  v3 = (void *)a1[3];
  if (*((_BYTE *)a1 + 32) == 1)
  {
    v5 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView;
    v6 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView);
    if (v6)
    {
      v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style);
      v8 = v7 > 6;
      v9 = (1 << v7) & 0x46;
      v10 = v8 || v9 == 0;
      v11 = (void *)a1[2];
      if (v10)
        v11 = (void *)a1[3];
      v12 = v11;
      outlined copy of InCallControlButtonConfiguration.DiscConfiguration(v4, v3, 1);
      v13 = v6;
      objc_msgSend(v13, sel_setEffect_, v12);

    }
    else
    {
      v17 = v4;
      v18 = v3;
    }
    v19 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundVibrancyView);
    if (v19)
      objc_msgSend(v19, sel_setEffect_, v3);
    v20 = *(void **)(v1 + v5);
    if (v20)
      OUTLINED_FUNCTION_18_4(v20, sel_setHidden_);
    OUTLINED_FUNCTION_40_3(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView), sel_setHidden_);

  }
  else
  {
    v14 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView);
    objc_msgSend(v14, sel_setBackgroundColor_, v4);
    OUTLINED_FUNCTION_18_4(v14, sel_setHidden_);
    v15 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundEffectView);
    if (v15)
    {
      v16 = v15;
      OUTLINED_FUNCTION_40_3(v16, sel_setHidden_);
      OUTLINED_FUNCTION_45_33();

    }
    else
    {
      OUTLINED_FUNCTION_45_33();
    }
  }
  v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style);
  if (v21 > 6)
  {
    OUTLINED_FUNCTION_23_49();
    _StringGuts.grow(_:)(44);
    OUTLINED_FUNCTION_85_12();
    v25._countAndFlagsBits = OUTLINED_FUNCTION_35_27();
    OUTLINED_FUNCTION_11_71(v25);
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_0_109();
    __break(1u);
    return;
  }
  if (((1 << v21) & 0x4F) != 0)
  {
    v22 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
    if (!v22)
      goto LABEL_26;
    v23 = *a1;
  }
  else
  {
    v22 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
    if (!v22)
      goto LABEL_26;
    v23 = a1[1];
  }
  objc_msgSend(v22, sel_setTextColor_, v23);
LABEL_26:
  v24 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView);
  if (v24)
    objc_msgSend(v24, sel_setTintColor_, a1[1]);
  else
    OUTLINED_FUNCTION_80_10();
}

void InCallControlButton.update(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_discBackgroundFlatView), sel_setBackgroundColor_);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style);
  if (v5 > 6)
  {
    _StringGuts.grow(_:)(70);
    v9._object = (void *)0x80000001BD681070;
    v9._countAndFlagsBits = 0xD000000000000044;
    String.append(_:)(v9);
    v10._countAndFlagsBits = OUTLINED_FUNCTION_35_27();
    OUTLINED_FUNCTION_11_71(v10);
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_0_109();
    __break(1u);
  }
  else
  {
    if (((1 << v5) & 0x4F) != 0)
    {
      v6 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
      if (v6)
        objc_msgSend(v6, sel_setTextColor_, a1);
    }
    else
    {
      v7 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
      if (v7)
        objc_msgSend(v7, sel_setTextColor_, a2);
    }
    v8 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_imageView);
    if (v8)
      objc_msgSend(v8, sel_setTintColor_, a2);
    else
      OUTLINED_FUNCTION_14_1();
  }
}

void InCallControlButton.updateSymbol()()
{
  uint64_t *v0;
  uint64_t *v1;
  unsigned int v2;
  char v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  _QWORD v18[8];
  _OWORD v19[4];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  id v31;

  v1 = v0;
  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))(v18);
  outlined init with take of Any?((uint64_t)v18, (uint64_t)v19, &demangling cache variable for type metadata for SymbolImageDescription?);
  if (*((_QWORD *)&v19[0] + 1))
  {
    v20 = v19[0];
    v21 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    v2 = objc_msgSend(v0, sel_isSelected);
    v3 = BYTE1(v22);
    if (BYTE1(v22) == 1)
    {
      v4 = v2;
      v24 = v20;
      lazy protocol witness table accessor for type String and conformance String();
      v5 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      v7 = v4 == 0;
      if (v4)
        v8 = 0x6C6C69662ELL;
      else
        v8 = 0;
      if (v7)
        v9 = (void *)0xE000000000000000;
      else
        v9 = (void *)0xE500000000000000;
      *(_QWORD *)&v24 = v5;
      *((_QWORD *)&v24 + 1) = v6;
      swift_bridgeObjectRetain();
      v10._countAndFlagsBits = v8;
      v10._object = v9;
      String.append(_:)(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = *((_QWORD *)&v24 + 1);
      v12 = v24;
      v13 = (void *)*((_QWORD *)&v21 + 1);
      v14 = (id)*((_QWORD *)&v23 + 1);
      v15 = *((id *)&v23 + 1);
      v16 = v13;
      v17 = v16;
    }
    else
    {
      v15 = (id)*((_QWORD *)&v23 + 1);
      v17 = (void *)*((_QWORD *)&v21 + 1);
      v11 = *((_QWORD *)&v20 + 1);
      v12 = v20;
      v16 = (id)outlined retain of SymbolImageDescription((uint64_t)&v20);
      v14 = v15;
    }
    OUTLINED_FUNCTION_59((uint64_t)v16, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    *(_QWORD *)&v24 = v12;
    *((_QWORD *)&v24 + 1) = v11;
    v25 = v21;
    v26 = v17;
    v27 = v22;
    v28 = v3;
    v29 = *((_QWORD *)&v22 + 1);
    v30 = v23;
    v31 = v14;
    static UIImage.symbolImage(for:)((uint64_t)&v24);

    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_34_29(*v1);
    outlined retain of SymbolImageDescription?(v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of SymbolImageDescription?);
  }
}

void InCallControlButton.hyphenateLabelText()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  id v24;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  if (v1)
  {
    v24 = v1;
    if (objc_msgSend(v24, sel_lineBreakMode))
    {
LABEL_3:

      return;
    }
    v2 = outlined bridged method (pb) of @objc UILabel.text.getter(v24);
    if (!v3)
    {
      OUTLINED_FUNCTION_14_9(v24, sel_setAttributedText_);
      goto LABEL_3;
    }
    v4 = v2;
    v5 = v3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Swift.AnyObject)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
    v7 = (void *)*MEMORY[0x1E0DC1178];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1178];
    v8 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_paragraphStyle);
    *(_QWORD *)(inited + 40) = v8;
    type metadata accessor for NSAttributedStringKey(0);
    _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, (uint64_t (*)(uint64_t))type metadata accessor for NSAttributedStringKey, (uint64_t)&protocol conformance descriptor for NSAttributedStringKey);
    v10 = v9;
    v11 = v7;
    v12 = v8;
    Dictionary.init(dictionaryLiteral:)();
    v13 = objc_msgSend(v24, sel_textColor);
    if (v13)
    {
      v14 = v13;
      v15 = (id)*MEMORY[0x1E0DC1140];
      OUTLINED_FUNCTION_84_8();
      OUTLINED_FUNCTION_72_17();
      OUTLINED_FUNCTION_22_55();

      swift_bridgeObjectRelease();
    }
    v16 = objc_msgSend(v24, sel_font);
    if (v16)
    {
      v17 = v16;
      v18 = (id)*MEMORY[0x1E0DC1138];
      OUTLINED_FUNCTION_84_8();
      OUTLINED_FUNCTION_72_17();
      OUTLINED_FUNCTION_22_55();

      swift_bridgeObjectRelease();
    }
    specialized _dictionaryUpCast<A, B, C, D>(_:)();
    v20 = v19;
    OUTLINED_FUNCTION_27();
    v21 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    @nonobjc NSAttributedString.init(string:attributes:)(v4, v5, v20);
    v23 = v22;
    OUTLINED_FUNCTION_65(v24, sel_setAttributedText_);

  }
  OUTLINED_FUNCTION_80_10();
}

UIControlEvents __swiftcall InCallControlButton._controlEventsForActionTriggered()()
{
  return 64;
}

id InCallControlButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void InCallControlButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InCallControlButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t InCallControlButton.shape.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t result;
  Swift::String v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style);
  if (v1 < 7)
    return 0x1020001010101uLL >> (8 * v1);
  OUTLINED_FUNCTION_23_49();
  _StringGuts.grow(_:)(48);
  OUTLINED_FUNCTION_85_12();
  OUTLINED_FUNCTION_26_43();
  v3._countAndFlagsBits = OUTLINED_FUNCTION_35_27();
  OUTLINED_FUNCTION_11_71(v3);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_74_11();
  result = OUTLINED_FUNCTION_0_109();
  __break(1u);
  return result;
}

unint64_t CNKInCallControlButtonStyle.shape.getter(unint64_t a1)
{
  unint64_t result;
  Swift::String v2;

  if (a1 < 7)
    return 0x1020001010101uLL >> (8 * a1);
  OUTLINED_FUNCTION_23_49();
  _StringGuts.grow(_:)(48);
  OUTLINED_FUNCTION_85_12();
  OUTLINED_FUNCTION_26_43();
  v2._countAndFlagsBits = OUTLINED_FUNCTION_35_27();
  OUTLINED_FUNCTION_11_71(v2);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_74_11();
  result = OUTLINED_FUNCTION_0_109();
  __break(1u);
  return result;
}

uint64_t protocol witness for Control.cnkContentAlpha.getter in conformance InCallControlButton()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t protocol witness for Control.cnkContentAlpha.setter in conformance InCallControlButton()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

void (*protocol witness for Control.cnkContentAlpha.modify in conformance InCallControlButton(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x1A8))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

void InCallControlButton.presentingControl.getter()
{
  void *v0;
  id v1;

  v1 = v0;
  OUTLINED_FUNCTION_21_6();
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for ControlMenuPresenter.menuDataSource.getter in conformance InCallControlButton()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

void protocol witness for ControlMenuPresenter.presentingControl.getter in conformance InCallControlButton()
{
  InCallControlButton.presentingControl.getter();
}

UIContextMenuConfiguration_optional __swiftcall InCallControlButton.contextMenuInteraction(_:configurationForMenuAtLocation:)(UIContextMenuInteraction _, CGPoint configurationForMenuAtLocation)
{
  _QWORD *v2;
  uint64_t (*v3)(void);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Bool v12;
  objc_class *v13;
  UIContextMenuConfiguration_optional result;

  v3 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x1B0);
  v4 = v2;
  v5 = v3();
  if (v5)
  {
    v7 = v6;
    OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for UIContextMenuConfiguration);
    v8 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v8 + 24) = v7;
    swift_unknownObjectWeakInit();
    v9 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v9 + 24) = &protocol witness table for InCallControlButton;
    swift_unknownObjectWeakInit();
    v10 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v10 + 16) = v9;
    *(_QWORD *)(v10 + 24) = v8;
    swift_retain();
    swift_retain();
    v11 = UIContextMenuConfiguration.init(identifier:previewProvider:actionProvider:)(0);
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_113();

  }
  else
  {

    v11 = 0;
  }
  v13 = (objc_class *)v11;
  result.value.super.isa = v13;
  result.is_nil = v12;
  return result;
}

void InCallControlButton.contextMenuInteraction(_:willDisplayMenuFor:animator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  id v8;
  Class isa;
  objc_super v10;

  OUTLINED_FUNCTION_49_31();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v7);
  v10.receiver = v3;
  v10.super_class = (Class)OUTLINED_FUNCTION_24_47();
  objc_msgSendSuper2(&v10, sel_contextMenuInteraction_willDisplayMenuForConfiguration_animator_, v5, v4, a3);
  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  static Notification.contextMenuWillPresent(target:)(v3);
  isa = Notification._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_53_27();
  OUTLINED_FUNCTION_48_1(v8, sel_postNotification_);

  OUTLINED_FUNCTION_65_1();
}

void InCallControlButton.contextMenuInteraction(_:willEndFor:animator:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  id v10;
  objc_super v11;

  v7 = v3;
  OUTLINED_FUNCTION_49_31();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v9);
  v11.receiver = v7;
  v11.super_class = (Class)OUTLINED_FUNCTION_24_47();
  objc_msgSendSuper2(&v11, sel_contextMenuInteraction_willEndForConfiguration_animator_, v5, v4, a3);
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  static Notification.contextMenuDidDismiss(target:)(v7);
  NSNotificationCenter.post(_:afterAnimatorCompletes:)(v6, a3);

  OUTLINED_FUNCTION_53_27();
  OUTLINED_FUNCTION_65_1();
}

void @objc InCallControlButton.contextMenuInteraction(_:willDisplayMenuFor:animator:)(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, id, uint64_t))
{
  id v10;
  id v11;
  id v12;

  v10 = a3;
  v11 = a4;
  swift_unknownObjectRetain();
  v12 = a1;
  a6(v10, v11, a5);

  OUTLINED_FUNCTION_113();
}

UIPointerRegion_optional __swiftcall InCallControlButton.pointerInteraction(_:regionFor:defaultRegion:)(UIPointerInteraction _, UIPointerRegionRequest regionFor, UIPointerRegion defaultRegion)
{
  id v3;
  Swift::Bool v4;
  uint64_t v5;
  objc_class *v6;
  objc_class *v7;
  UIPointerRegion_optional result;

  v3 = -[objc_class view](_.super.isa, sel_view, defaultRegion.super.isa);
  if (v3)
  {
    OUTLINED_FUNCTION_59((uint64_t)v3, (unint64_t *)&lazy cache variable for type metadata for UIPointerRegion);
    v6 = (objc_class *)v5;
    OUTLINED_FUNCTION_123(v5, sel_bounds);
    UIPointerRegion.init(rect:identifier:)();
    OUTLINED_FUNCTION_49_5();
  }
  else
  {
    v6 = 0;
  }
  v7 = v6;
  result.value.super.isa = v7;
  result.is_nil = v4;
  return result;
}

UIPointerStyle_optional __swiftcall InCallControlButton.pointerInteraction(_:styleFor:)(UIPointerInteraction _, UIPointerRegion styleFor)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  Swift::Bool v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  objc_class *v17;
  uint64_t v18;
  UIPointerStyle_optional result;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIPointerShape?);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_30_6();
  v6 = type metadata accessor for UIPointerEffect();
  OUTLINED_FUNCTION_213();
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = -[objc_class view](_.super.isa, sel_view);
  if (v10)
  {
    v12 = v10;
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D90]), sel_initWithView_, v10);
    OUTLINED_FUNCTION_59((uint64_t)v13, (unint64_t *)&lazy cache variable for type metadata for UIPointerStyle);
    *v9 = v13;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v9, *MEMORY[0x1E0DC1E30], v6);
    v14 = type metadata accessor for UIPointerShape();
    __swift_storeEnumTagSinglePayload(v2, 1, 1, v14);
    v15 = v13;
    OUTLINED_FUNCTION_21_6();
    v16 = UIPointerStyle.init(effect:shape:)();

  }
  else
  {
    v16 = 0;
  }
  v17 = (objc_class *)v16;
  result.value.super.super.isa = v17;
  result.is_nil = v11;
  return result;
}

void UIControlState.hash(into:)(int a1, Swift::UInt a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void protocol witness for Hashable.hashValue.getter in conformance UIControlState()
{
  specialized RawRepresentable<>.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance UIControlState(int a1)
{
  Swift::UInt *v1;

  UIControlState.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance UIControlState()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

id InCallControlButtonConfiguration.Regular.contentColor.getter()
{
  id *v0;

  return *v0;
}

void InCallControlButtonConfiguration.Regular.contentColor.setter()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_63_21();
  *v1 = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*InCallControlButtonConfiguration.Regular.contentColor.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id InCallControlButtonConfiguration.Regular.discContentColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void InCallControlButtonConfiguration.Regular.discContentColor.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_62_22();
  *(_QWORD *)(v1 + 8) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*InCallControlButtonConfiguration.Regular.discContentColor.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *InCallControlButtonConfiguration.Regular.disc.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  outlined copy of InCallControlButtonConfiguration.DiscConfiguration(v1, *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
  return v1;
}

void InCallControlButtonConfiguration.Regular.disc.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  outlined consume of InCallControlButtonConfiguration.DiscConfiguration(*(void **)(v3 + 16), *(void **)(v3 + 24), *(_BYTE *)(v3 + 32));
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 32) = a3 & 1;
  OUTLINED_FUNCTION_18();
}

uint64_t (*InCallControlButtonConfiguration.Regular.disc.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void InCallControlButtonConfiguration.Flat.contentColor.setter()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_63_21();
  *v1 = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*InCallControlButtonConfiguration.Flat.contentColor.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void InCallControlButtonConfiguration.Flat.discContentColor.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_62_22();
  *(_QWORD *)(v1 + 8) = v0;
  OUTLINED_FUNCTION_0();
}

uint64_t (*InCallControlButtonConfiguration.Flat.discContentColor.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void InCallControlButtonConfiguration.Flat.discBackgroundColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*InCallControlButtonConfiguration.Flat.discBackgroundColor.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void InCallControlButtonConfiguration.regular.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of FeatureEligibility?(v1, a1, (uint64_t *)&demangling cache variable for type metadata for InCallControlButtonConfiguration.Regular?);
}

uint64_t InCallControlButtonConfiguration.regular.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined assign with take of InCallControlButtonConfiguration.Regular?(a1, v1);
}

uint64_t (*InCallControlButtonConfiguration.regular.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *InCallControlButtonConfiguration.flat.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  outlined copy of InCallControlButtonConfiguration.Flat?(v1, *(void **)(v0 + 48), *(void **)(v0 + 56));
  return v1;
}

void InCallControlButtonConfiguration.flat.setter(void *a1, void *a2, void *a3)
{
  void **v3;

  outlined consume of InCallControlButtonConfiguration.Flat?(v3[5], v3[6], v3[7]);
  v3[5] = a1;
  v3[6] = a2;
  v3[7] = a3;
  OUTLINED_FUNCTION_18();
}

uint64_t (*InCallControlButtonConfiguration.flat.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double InCallControlButtonConfiguration.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  return result;
}

void outlined bridged method (mbnn) of @objc NSObject.accessibilityValue.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setAccessibilityValue_, v4);

}

id outlined copy of SymbolImageDescription?(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v8;
  id result;

  if (a2)
  {
    v8 = a8;
    swift_bridgeObjectRetain();
    return a4;
  }
  return result;
}

void outlined consume of SymbolImageDescription?(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

void outlined retain of SymbolImageDescription?(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for InCallControlButton()
{
  return objc_opt_self();
}

uint64_t sub_1BD2B454C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD2B4570()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void outlined consume of InCallControlButtonConfiguration.DiscConfiguration(void *a1, void *a2, char a3)
{

  if ((a3 & 1) != 0)
}

uint64_t outlined assign with take of InCallControlButtonConfiguration.Regular?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for InCallControlButtonConfiguration.Regular?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void outlined consume of InCallControlButtonConfiguration.Flat?(void *a1, void *a2, void *a3)
{
  if (a1)
  {

  }
}

void sub_1BD2B4690()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xD0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2B46C8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x118))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2B4708()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x168))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD2B4740()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x180))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2B4778()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x198))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2B47AC(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1A0))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2B47E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x1B0))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for InCallControlButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlButton.callbackCancellable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of InCallControlButton.callbackCancellable.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of InCallControlButton.callbackCancellable.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of InCallControlButton.image.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of InCallControlButton.image.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of InCallControlButton.image.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of InCallControlButton.symbolDescription.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of InCallControlButton.symbolDescription.setter(_OWORD *a1)
{
  _QWORD *v1;
  uint64_t (*v2)(_OWORD *);
  __int128 v3;
  __int128 v4;
  _OWORD v6[4];

  v2 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x158);
  v3 = a1[1];
  v6[0] = *a1;
  v6[1] = v3;
  v4 = a1[3];
  v6[2] = a1[2];
  v6[3] = v4;
  return v2(v6);
}

uint64_t dispatch thunk of InCallControlButton.symbolDescription.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of InCallControlButton.text.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of InCallControlButton.text.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of InCallControlButton.text.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of InCallControlButton.colorConfiguration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of InCallControlButton.colorConfiguration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of InCallControlButton.colorConfiguration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of InCallControlButton.cnkContentAlpha.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of InCallControlButton.cnkContentAlpha.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of InCallControlButton.cnkContentAlpha.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of InCallControlButton.menuDataSource.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of InCallControlButton.menuDataSource.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of InCallControlButton.menuDataSource.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of InCallControlButton.__allocating_init(style:image:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v6 + 456))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of InCallControlButton.updateSymbolDescribing(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

void destroy for InCallControlButtonConfiguration(uint64_t a1)
{
  void *v2;

  if (*(_QWORD *)a1)
  {

    outlined consume of InCallControlButtonConfiguration.DiscConfiguration(*(void **)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
  }
  v2 = *(void **)(a1 + 40);
  if (v2)
  {

  }
}

uint64_t initializeWithCopy for InCallControlButtonConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  id v9;
  id v10;
  __int128 v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2)
  {
    v6 = *(void **)(a2 + 8);
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = *(void **)(a2 + 24);
    v8 = *(_BYTE *)(a2 + 32);
    v9 = v4;
    v10 = v6;
    outlined copy of InCallControlButtonConfiguration.DiscConfiguration(v5, v7, v8);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = v8;
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  v12 = *(void **)(a2 + 40);
  if (v12)
  {
    v14 = *(void **)(a2 + 48);
    v13 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v14;
    *(_QWORD *)(a1 + 56) = v13;
    v15 = v12;
    v16 = v14;
    v17 = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  }
  return a1;
}

uint64_t assignWithCopy for InCallControlButtonConfiguration(uint64_t a1, __int128 *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  id v20;
  id v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD *v26;
  void *v27;
  void *v28;
  _OWORD *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  __int128 v43;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (v5)
    {
      *(_QWORD *)a1 = v5;
      v6 = v5;

      v7 = (void *)*((_QWORD *)a2 + 1);
      v8 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = v7;
      v9 = v7;

      v10 = (void *)*((_QWORD *)a2 + 2);
      v11 = (void *)*((_QWORD *)a2 + 3);
      v12 = *((_BYTE *)a2 + 32);
      outlined copy of InCallControlButtonConfiguration.DiscConfiguration(v10, v11, v12);
      v13 = *(void **)(a1 + 16);
      v14 = *(void **)(a1 + 24);
      v15 = *(_BYTE *)(a1 + 32);
      *(_QWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 24) = v11;
      *(_BYTE *)(a1 + 32) = v12;
      outlined consume of InCallControlButtonConfiguration.DiscConfiguration(v13, v14, v15);
    }
    else
    {
      outlined destroy of InCallControlButtonConfiguration.Regular(a1);
      v22 = *((_BYTE *)a2 + 32);
      v23 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v23;
      *(_BYTE *)(a1 + 32) = v22;
    }
  }
  else if (v5)
  {
    *(_QWORD *)a1 = v5;
    v16 = (void *)*((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 8) = v16;
    v17 = (void *)*((_QWORD *)a2 + 2);
    v18 = (void *)*((_QWORD *)a2 + 3);
    v19 = *((_BYTE *)a2 + 32);
    v20 = v5;
    v21 = v16;
    outlined copy of InCallControlButtonConfiguration.DiscConfiguration(v17, v18, v19);
    *(_QWORD *)(a1 + 16) = v17;
    *(_QWORD *)(a1 + 24) = v18;
    *(_BYTE *)(a1 + 32) = v19;
  }
  else
  {
    v24 = *a2;
    v25 = a2[1];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)a1 = v24;
    *(_OWORD *)(a1 + 16) = v25;
  }
  v26 = (_OWORD *)(a1 + 40);
  v27 = *(void **)(a1 + 40);
  v29 = (__int128 *)((char *)a2 + 40);
  v28 = (void *)*((_QWORD *)a2 + 5);
  if (v27)
  {
    if (v28)
    {
      *(_QWORD *)(a1 + 40) = v28;
      v30 = v28;

      v31 = (void *)*((_QWORD *)a2 + 6);
      v32 = *(void **)(a1 + 48);
      *(_QWORD *)(a1 + 48) = v31;
      v33 = v31;

      v34 = (void *)*((_QWORD *)a2 + 7);
      v35 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = v34;
      v36 = v34;

    }
    else
    {
      outlined destroy of InCallControlButtonConfiguration.Flat((id *)(a1 + 40));
      v42 = *((_QWORD *)a2 + 7);
      *v26 = *v29;
      *(_QWORD *)(a1 + 56) = v42;
    }
  }
  else if (v28)
  {
    *(_QWORD *)(a1 + 40) = v28;
    v37 = (void *)*((_QWORD *)a2 + 6);
    *(_QWORD *)(a1 + 48) = v37;
    v38 = (void *)*((_QWORD *)a2 + 7);
    *(_QWORD *)(a1 + 56) = v38;
    v39 = v28;
    v40 = v37;
    v41 = v38;
  }
  else
  {
    v43 = *v29;
    *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
    *v26 = v43;
  }
  return a1;
}

uint64_t outlined destroy of InCallControlButtonConfiguration.Regular(uint64_t a1)
{
  destroy for InCallControlButtonConfiguration.Regular(a1);
  return a1;
}

id *outlined destroy of InCallControlButtonConfiguration.Flat(id *a1)
{
  destroy for InCallControlButtonConfiguration.Flat(a1);
  return a1;
}

uint64_t assignWithTake for InCallControlButtonConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  char v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    if (*(_QWORD *)a2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;

      v5 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

      v6 = *(_BYTE *)(a2 + 32);
      v7 = *(void **)(a1 + 16);
      v8 = *(void **)(a1 + 24);
      v9 = *(_BYTE *)(a1 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 32) = v6;
      outlined consume of InCallControlButtonConfiguration.DiscConfiguration(v7, v8, v9);
      goto LABEL_6;
    }
    outlined destroy of InCallControlButtonConfiguration.Regular(a1);
  }
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_6:
  v11 = *(void **)(a1 + 40);
  v12 = *(_QWORD *)(a2 + 40);
  if (!v11)
  {
LABEL_10:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    return a1;
  }
  if (!v12)
  {
    outlined destroy of InCallControlButtonConfiguration.Flat((id *)(a1 + 40));
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 40) = v12;

  v13 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v14 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlButtonConfiguration(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 64))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InCallControlButtonConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for InCallControlButtonConfiguration()
{
  OUTLINED_FUNCTION_34_0();
}

void destroy for InCallControlButtonConfiguration.DiscConfiguration(uint64_t a1)
{
  outlined consume of InCallControlButtonConfiguration.DiscConfiguration(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t initializeBufferWithCopyOfBuffer for InCallControlButtonConfiguration.DiscConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  outlined copy of InCallControlButtonConfiguration.DiscConfiguration(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for InCallControlButtonConfiguration.DiscConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  outlined copy of InCallControlButtonConfiguration.DiscConfiguration(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  outlined consume of InCallControlButtonConfiguration.DiscConfiguration(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for InCallControlButtonConfiguration.DiscConfiguration(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  outlined consume of InCallControlButtonConfiguration.DiscConfiguration(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlButtonConfiguration.DiscConfiguration(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InCallControlButtonConfiguration.DiscConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t destructiveInjectEnumTag for InCallControlButtonConfiguration.DiscConfiguration(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for InCallControlButtonConfiguration.DiscConfiguration()
{
  OUTLINED_FUNCTION_34_0();
}

void destroy for InCallControlButtonConfiguration.Regular(uint64_t a1)
{

  outlined consume of InCallControlButtonConfiguration.DiscConfiguration(*(void **)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for InCallControlButtonConfiguration.Regular(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  v8 = v3;
  v9 = v4;
  outlined copy of InCallControlButtonConfiguration.DiscConfiguration(v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for InCallControlButtonConfiguration.Regular(uint64_t a1, void **a2)
{
  void **v2;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;

  v2 = a2;
  v4 = *a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *a2;
  v6 = v4;

  v7 = v2[1];
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = v2[2];
  v11 = v2[3];
  LOBYTE(v2) = *((_BYTE *)v2 + 32);
  outlined copy of InCallControlButtonConfiguration.DiscConfiguration(v10, v11, (char)v2);
  v12 = *(void **)(a1 + 16);
  v13 = *(void **)(a1 + 24);
  v14 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 32) = (_BYTE)v2;
  outlined consume of InCallControlButtonConfiguration.DiscConfiguration(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for InCallControlButtonConfiguration.Regular(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v5;
  outlined consume of InCallControlButtonConfiguration.DiscConfiguration(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlButtonConfiguration.Regular(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InCallControlButtonConfiguration.Regular(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for InCallControlButtonConfiguration.Regular()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for InCallControlButtonConfiguration.Flat(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for InCallControlButtonConfiguration.Flat(id *a1)
{

}

uint64_t assignWithCopy for InCallControlButtonConfiguration.Flat(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for InCallControlButtonConfiguration.Flat(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

void type metadata accessor for InCallControlButtonConfiguration.Flat()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t outlined release of (SymbolImageDescription?, SymbolImageDescription?)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(void **)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(void **)(a1 + 120);
  outlined consume of SymbolImageDescription?(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56));
  outlined consume of SymbolImageDescription?(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

void outlined consume of InCallControlButtonConfiguration.Regular?(void *a1, void *a2, void *a3, void *a4, char a5)
{
  if (a1)
  {

    outlined consume of InCallControlButtonConfiguration.DiscConfiguration(a3, a4, a5 & 1);
  }
}

uint64_t sub_1BD2B5530()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD2B5554()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in InCallControlButton.updateImage()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  return closure #1 in InCallControlButton.updateImage()(a1, v4, v5, v7, v6);
}

uint64_t OUTLINED_FUNCTION_75_12()
{
  return os_log(_:dso:log:type:_:)();
}

id OUTLINED_FUNCTION_76_13@<X0>(uint64_t a1@<X8>)
{
  return objc_allocWithZone(*(Class *)(a1 + 2448));
}

uint64_t OUTLINED_FUNCTION_85_12()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_87_8(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  return objc_msgSend(a20, a2);
}

void RadarReporting.additionalDirections.getter()
{
  OUTLINED_FUNCTION_34_0();
}

const char *RadarReporter.URLSchema.scheme.unsafeMutableAddressor()
{
  return "tap-to-radar";
}

uint64_t static RadarReporter.URLSchema.scheme.getter()
{
  return 0x722D6F742D706174;
}

const char *RadarReporter.URLSchema.Argument.title.unsafeMutableAddressor()
{
  return "Title";
}

uint64_t static RadarReporter.URLSchema.Argument.title.getter()
{
  return 0x656C746954;
}

const char *RadarReporter.URLSchema.Argument.description.unsafeMutableAddressor()
{
  return "Description";
}

void static RadarReporter.URLSchema.Argument.description.getter()
{
  OUTLINED_FUNCTION_12_70();
}

const char *RadarReporter.URLSchema.Argument.classification.unsafeMutableAddressor()
{
  return "Classification";
}

uint64_t static RadarReporter.URLSchema.Argument.classification.getter()
{
  return 0x6966697373616C43;
}

const char *RadarReporter.URLSchema.Argument.bugReproducibility.unsafeMutableAddressor()
{
  return "Reproducible";
}

uint64_t static RadarReporter.URLSchema.Argument.bugReproducibility.getter()
{
  return 0x6375646F72706552;
}

const char *RadarReporter.URLSchema.Argument.componentID.unsafeMutableAddressor()
{
  return "ComponentID";
}

void static RadarReporter.URLSchema.Argument.componentID.getter()
{
  OUTLINED_FUNCTION_12_70();
}

const char *RadarReporter.URLSchema.Argument.componentName.unsafeMutableAddressor()
{
  return "ComponentName";
}

uint64_t static RadarReporter.URLSchema.Argument.componentName.getter()
{
  return 0x6E656E6F706D6F43;
}

void *RadarReporter.URLSchema.Argument.componentVersion.unsafeMutableAddressor()
{
  return &static RadarReporter.URLSchema.Argument.componentVersion;
}

unint64_t static RadarReporter.URLSchema.Argument.componentVersion.getter()
{
  return OUTLINED_FUNCTION_0_52(16);
}

const char *RadarReporter.URLSchema.Argument.attachments.unsafeMutableAddressor()
{
  return "Attachments";
}

void static RadarReporter.URLSchema.Argument.attachments.getter()
{
  OUTLINED_FUNCTION_12_70();
}

const char *RadarReporter.Strings.defaultTitle.unsafeMutableAddressor()
{
  return "[Internal]";
}

uint64_t static RadarReporter.Strings.defaultTitle.getter()
{
  return 0x616E7265746E495BLL;
}

uint64_t static RadarReporter.Strings.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  Swift::String v4;
  Swift::String v5;
  _QWORD v7[2];

  v0 = type metadata accessor for UUID();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(307);
  v4._object = (void *)0x80000001BD6814E0;
  v4._countAndFlagsBits = 0xD000000000000128;
  String.append(_:)(v4);
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  OUTLINED_FUNCTION_18_61();
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x706172676D656D2ELL;
  v5._object = (void *)0xE900000000000068;
  String.append(_:)(v5);
  return v7[0];
}

void *RadarReporter.Strings.seperator.unsafeMutableAddressor()
{
  return &static RadarReporter.Strings.seperator;
}

unint64_t static RadarReporter.Strings.seperator.getter()
{
  return OUTLINED_FUNCTION_0_52(45);
}

void *RadarReporter.Action.new.unsafeMutableAddressor()
{
  return &static RadarReporter.Action.new;
}

uint64_t static RadarReporter.Action.new.getter()
{
  return 7824750;
}

BOOL RadarReporter.Reproducibility.init(rawValue:)(Swift::String a1)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &outlined read-only object #0 of RadarReporter.Reproducibility.init(rawValue:);
  return RadarReporter.Reproducibility.init(rawValue:)(a1, v1);
}

uint64_t RadarReporter.Reproducibility.rawValue.getter()
{
  return 0x6C70704120746F4ELL;
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance RadarReporter.Reproducibility@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = RadarReporter.Reproducibility.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance RadarReporter.Reproducibility(char *a1@<X8>)
{
  strcpy(a1, "Not Applicable");
  a1[15] = -18;
}

BOOL RadarReporter.Classification.init(rawValue:)(Swift::String a1)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &outlined read-only object #0 of RadarReporter.Classification.init(rawValue:);
  return RadarReporter.Reproducibility.init(rawValue:)(a1, v1);
}

void RadarReporter.Classification.rawValue.getter()
{
  OUTLINED_FUNCTION_12_70();
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance RadarReporter.Classification@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = RadarReporter.Classification.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance RadarReporter.Classification(_QWORD *a1@<X8>)
{
  *a1 = 0x2073756F69726553;
  a1[1] = 0xEB00000000677542;
}

uint64_t RadarReporter.Component.id.getter()
{
  return 0x34313734383031;
}

uint64_t RadarReporter.Component.version.getter()
{
  return 7105633;
}

BOOL RadarReporter.Component.init(rawValue:)(Swift::String a1)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &outlined read-only object #0 of RadarReporter.Component.init(rawValue:);
  return RadarReporter.Reproducibility.init(rawValue:)(a1, v1);
}

BOOL RadarReporter.Reproducibility.init(rawValue:)(Swift::String string, Swift::OpaquePointer cases)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  return v5 != 0;
}

unint64_t RadarReporter.Component.rawValue.getter()
{
  return OUTLINED_FUNCTION_0_52(27);
}

BOOL protocol witness for RawRepresentable.init(rawValue:) in conformance RadarReporter.Component@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = RadarReporter.Component.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance RadarReporter.Component@<X0>(_QWORD *a1@<X8>)
{
  unint64_t result;
  uint64_t v3;

  result = RadarReporter.Component.rawValue.getter();
  *a1 = 0xD00000000000001BLL;
  a1[1] = v3;
  return result;
}

void RadarReporter.Info.description.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void RadarReporter.Info.description.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_74();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*RadarReporter.Info.description.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void RadarReporter.Info.shortDescription.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void RadarReporter.Info.shortDescription.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_10_82();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*RadarReporter.Info.shortDescription.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t protocol witness for RadarReporting.additionalDirections.getter in conformance RadarReporter.Info()
{
  return specialized ParticipantsViewController.participantsViewControllerDelegate.getter();
}

uint64_t RadarReporter.reportingEnabled.getter()
{
  char v0;
  uint64_t v1;

  type metadata accessor for Defaults();
  OUTLINED_FUNCTION_0_13();
  v1 = Defaults.init()();
  OUTLINED_FUNCTION_15_72(v1);
  OUTLINED_FUNCTION_21_57();
  return v0 & 1;
}

void RadarReporter.title.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void RadarReporter.title.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_74();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*RadarReporter.title.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void RadarReporter.description.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void RadarReporter.description.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_10_82();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*RadarReporter.description.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*RadarReporter.reproducibility.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*RadarReporter.component.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*RadarReporter.classification.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void RadarReporter.requestUserPermission.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_0();
}

uint64_t RadarReporter.init(title:description:reproducibility:component:classification:requestUserPermission:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  *(_BYTE *)(a7 + 48) = 0;
  return result;
}

uint64_t RadarReporter.addSeperatorIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 48) & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 16);
    v2 = *(void **)(v0 + 24);
    swift_bridgeObjectRetain();
    v3._countAndFlagsBits = v1;
    v3._object = v2;
    String.append(_:)(v3);
    result = swift_bridgeObjectRelease_n();
    *(_QWORD *)(v0 + 16) = 0xD00000000000002FLL;
    *(_QWORD *)(v0 + 24) = 0x80000001BD6816B0;
    *(_BYTE *)(v0 + 48) = 1;
  }
  return result;
}

uint64_t RadarReporter.add(info:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4._countAndFlagsBits = OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16));
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 32;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  RadarReporter.addSeperatorIfNeeded()();
  OUTLINED_FUNCTION_1_5();
  v12 = dispatch thunk of CustomStringConvertible.description.getter();
  v13 = v6;
  v7._countAndFlagsBits = 10;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18_61();
  swift_bridgeObjectRelease_n();
  *(_QWORD *)(v1 + 16) = v12;
  *(_QWORD *)(v1 + 24) = v13;
  v8 = a1[4];
  OUTLINED_FUNCTION_1_5();
  result = OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24));
  if (v10)
  {
    String.append(_:)(*(Swift::String *)&result);
    swift_bridgeObjectRelease();
    v11._countAndFlagsBits = 10;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t RadarReporter.requestInternalUserToReportToRadar()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[4] = v0;
  type metadata accessor for MainActor();
  v1[5] = static MainActor.shared.getter();
  v1[6] = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v2;
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned __int8 v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v1 && (v2 = v1, v3 = objc_msgSend(v1, sel_isInternalInstall), v2, (v3 & 1) != 0))
  {
    type metadata accessor for Defaults();
    OUTLINED_FUNCTION_0_13();
    v4 = Defaults.init()();
    OUTLINED_FUNCTION_15_72(v4);
    OUTLINED_FUNCTION_21_57();
    v7 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)(v0 + 32) + 32) + *(_QWORD *)(*(_QWORD *)(v0 + 32) + 32));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v5;
    *v5 = v0;
    v5[1] = RadarReporter.requestInternalUserToReportToRadar();
    return v7();
  }
  else
  {
    OUTLINED_FUNCTION_13_71();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  uint64_t v0;
  int v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + 80);
  OUTLINED_FUNCTION_13_71();
  if (v1 == 1)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v2 = OUTLINED_FUNCTION_17_2();
    v3 = OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationKit);
    v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_7_5(&dword_1BD004000, v3, v5, "RadarReporter: user gave permission to create radar");
      OUTLINED_FUNCTION_1_106();
    }

    RadarReporter.createRadar()();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_17_2();
    v7 = OUTLINED_FUNCTION_3(v6, (uint64_t)&static Logger.conversationKit);
    v8 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_23_5(v8))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_7_5(&dword_1BD004000, v7, v9, "RadarReporter: user declined to create a radar");
      OUTLINED_FUNCTION_1_106();
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_13_71();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v1 = *(void **)(v0 + 72);
  v2 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationKit);
  v3 = v1;
  v4 = v1;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 72);
  if (v7)
  {
    v9 = (uint8_t *)OUTLINED_FUNCTION_105();
    v10 = OUTLINED_FUNCTION_105();
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v0 + 16) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v12 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    _os_log_impl(&dword_1BD004000, v5, v6, "RadarReporter: error: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v10, -1, -1);
    OUTLINED_FUNCTION_1_106();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t RadarReporter.requestInternalUserToReportToRadar()(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 80) = a1 & 1;
  return swift_task_switch();
}

uint64_t RadarReporter.createRadar()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint8_t *v35;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[3];
  uint64_t v46;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - v5;
  v7 = type metadata accessor for URL();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - v12;
  v14 = type metadata accessor for URLComponents();
  v43 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init()();
  URLComponents.scheme.setter();
  RadarReporter.queryItems()();
  URLComponents.queryItems.setter();
  URLComponents.host.setter();
  URLComponents.url.getter();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    outlined destroy of URL?((uint64_t)v6);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationKit);
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = v14;
      v22 = swift_slowAlloc();
      v46 = v22;
      v42 = v3;
      *(_DWORD *)v20 = 136315138;
      swift_beginAccess();
      lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type URLComponents and conformance URLComponents, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], MEMORY[0x1E0CAE8A0]);
      v23 = dispatch thunk of CustomStringConvertible.description.getter();
      v44 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v46);
      v3 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v18, v19, "RadarReporter: Failed to create url for radar using components %s", v20, 0xCu);
      swift_arrayDestroy();
      v25 = v22;
      v14 = v21;
      MEMORY[0x1C3B751B8](v25, -1, -1);
      MEMORY[0x1C3B751B8](v20, -1, -1);
    }

    URL.init(string:)();
    RadarReporter.open(url:)((uint64_t)v3);
    outlined destroy of URL?((uint64_t)v3);
  }
  else
  {
    v41 = v14;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)&static Logger.conversationKit);
    v40 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v40(v10, v13, v7);
    v27 = Logger.logObject.getter();
    v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v42 = v3;
      v30 = (uint8_t *)v29;
      v38 = swift_slowAlloc();
      v45[0] = v38;
      v39 = v0;
      *(_DWORD *)v30 = 136315138;
      v37 = v30 + 4;
      lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v31 = dispatch thunk of CustomStringConvertible.description.getter();
      v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v33 = *(void (**)(char *, uint64_t))(v8 + 8);
      v33(v10, v7);
      _os_log_impl(&dword_1BD004000, v27, v28, "RadarReporter: URL: %s", v30, 0xCu);
      v34 = v38;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v34, -1, -1);
      v35 = v30;
      v3 = v42;
      MEMORY[0x1C3B751B8](v35, -1, -1);
    }
    else
    {
      v33 = *(void (**)(char *, uint64_t))(v8 + 8);
      v33(v10, v7);
    }

    v14 = v41;
    v40(v3, v13, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v7);
    RadarReporter.open(url:)((uint64_t)v3);
    outlined destroy of URL?((uint64_t)v3);
    v33(v13, v7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v16, v14);
}

uint64_t RadarReporter.queryItems()()
{
  Swift::String *v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<URLQueryItem>);
  type metadata accessor for URLQueryItem();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD6503E0;
  String.append(_:)(*v0);
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  return v1;
}

void RadarReporter.open(url:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  uint64_t v7;
  NSURL *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v5)
  {
    v6 = v5;
    outlined init with copy of URL?(a1, (uint64_t)v4);
    v7 = type metadata accessor for URL();
    v9 = 0;
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v7) != 1)
    {
      URL._bridgeToObjectiveC()(v8);
      v9 = v10;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    }
    v11 = Dictionary.init(dictionaryLiteral:)();
    outlined bridged method (mnbnn) of @objc LSApplicationWorkspace.openSensitiveURL(_:withOptions:)((uint64_t)v9, v11, v6);

  }
  else
  {
    __break(1u);
  }
}

uint64_t static RadarReporter.createRadarReporterUsingAlert(title:description:reproducibility:component:classification:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_QWORD *)(a5 + 32) = &async function pointer to implicit closure #1 in static RadarReporter.createRadarReporterUsingAlert(title:description:reproducibility:component:classification:);
  *(_QWORD *)(a5 + 40) = 0;
  *(_BYTE *)(a5 + 48) = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t implicit closure #1 in static RadarReporter.createRadarReporterUsingAlert(title:description:reproducibility:component:classification:)()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = implicit closure #1 in static RadarReporter.createRadarReporterUsingAlert(title:description:reproducibility:component:classification:);
  return static RadarReporter.showAlert()();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_14_77();
  return OUTLINED_FUNCTION_10_5(*(unsigned __int8 *)(v0 + 48), *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_14_77();
  return OUTLINED_FUNCTION_10_5(0, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t implicit closure #1 in static RadarReporter.createRadarReporterUsingAlert(title:description:reproducibility:component:classification:)(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 48) = a1 & 1;
  dispatch thunk of Actor.unownedExecutor.getter();
  return OUTLINED_FUNCTION_0_6();
}

uint64_t static RadarReporter.showAlert()()
{
  _QWORD *v0;
  uint64_t v1;

  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  v0[4] = dispatch thunk of Actor.unownedExecutor.getter();
  v0[5] = v1;
  return swift_task_switch();
}

{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 48) = static MainActor.shared.getter();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = static RadarReporter.showAlert();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return OUTLINED_FUNCTION_0_6();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_14_77();
  return OUTLINED_FUNCTION_10_5(*(unsigned __int8 *)(v0 + 72), *(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_14_77();
  swift_release();
  return OUTLINED_FUNCTION_10_5(0, *(uint64_t (**)(void))(v0 + 8));
}

void closure #1 in static RadarReporter.showAlert()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(unint64_t, char *, uint64_t);
  id v26;
  id v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;

  v42 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Error>);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v40 = v1;
  v41 = v3;
  MEMORY[0x1E0C80A78](v1);
  v38 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_conversationKit);
  v44._object = (void *)0xE000000000000000;
  v7._object = (void *)0x80000001BD681610;
  v7._countAndFlagsBits = 0xD000000000000019;
  v8.value._countAndFlagsBits = 0x61737265766E6F43;
  v8.value._object = (void *)0xEF74694B6E6F6974;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v44._countAndFlagsBits = 0;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v44);

  v11 = objc_msgSend(v5, sel_conversationKit);
  v12._countAndFlagsBits = 0xD00000000000001BLL;
  v45._object = (void *)0xE000000000000000;
  v12._object = (void *)0x80000001BD681630;
  v13.value._countAndFlagsBits = 0x61737265766E6F43;
  v13.value._object = (void *)0xEF74694B6E6F6974;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v45._countAndFlagsBits = 0;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v45);

  v39 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v10._countAndFlagsBits, (uint64_t)v10._object, v15._countAndFlagsBits, (uint64_t)v15._object, 1);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
  v16 = objc_msgSend(v5, sel_conversationKit);
  v17._countAndFlagsBits = 0xD00000000000001ALL;
  v46._object = (void *)0xE000000000000000;
  v17._object = (void *)0x80000001BD681650;
  v18.value._countAndFlagsBits = 0x61737265766E6F43;
  v18.value._object = (void *)0xEF74694B6E6F6974;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v46._countAndFlagsBits = 0;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v46);

  v37 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v21 = v38;
  v22 = v40;
  v37(v38, v42, v40);
  v23 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v41 += v23;
  v24 = swift_allocObject();
  v25 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 32);
  v25(v24 + v23, v21, v22);
  v26 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v20._countAndFlagsBits, (uint64_t)v20._object, 0, (uint64_t)partial apply for closure #1 in closure #1 in static RadarReporter.showAlert());
  v27 = objc_msgSend(v5, sel_conversationKit);
  v47._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0x4C45434E4143;
  v28._object = (void *)0xE600000000000000;
  v29.value._countAndFlagsBits = 0x61737265766E6F43;
  v29.value._object = (void *)0xEF74694B6E6F6974;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v47._countAndFlagsBits = 0;
  v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v47);

  v37(v21, v42, v22);
  v32 = swift_allocObject();
  v25(v32 + v23, v21, v22);
  v33 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v31._countAndFlagsBits, (uint64_t)v31._object, 1, (uint64_t)partial apply for closure #2 in closure #1 in static RadarReporter.showAlert());
  v34 = v39;
  objc_msgSend(v39, sel_addAction_, v26);
  objc_msgSend(v34, sel_addAction_, v33);
  UIAlertController.show()();
  if (v35)
  {
    v43 = v35;
    v36 = v35;
    CheckedContinuation.resume(throwing:)();

  }
  else
  {

  }
}

uint64_t closure #1 in closure #1 in static RadarReporter.showAlert()()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Error>);
  return CheckedContinuation.resume(returning:)();
}

unint64_t lazy protocol witness table accessor for type RadarReporter.Reproducibility and conformance RadarReporter.Reproducibility()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RadarReporter.Reproducibility and conformance RadarReporter.Reproducibility;
  if (!lazy protocol witness table cache variable for type RadarReporter.Reproducibility and conformance RadarReporter.Reproducibility)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RadarReporter.Reproducibility, &type metadata for RadarReporter.Reproducibility);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RadarReporter.Reproducibility and conformance RadarReporter.Reproducibility);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RadarReporter.Classification and conformance RadarReporter.Classification()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RadarReporter.Classification and conformance RadarReporter.Classification;
  if (!lazy protocol witness table cache variable for type RadarReporter.Classification and conformance RadarReporter.Classification)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RadarReporter.Classification, &type metadata for RadarReporter.Classification);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RadarReporter.Classification and conformance RadarReporter.Classification);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type RadarReporter.Component and conformance RadarReporter.Component()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RadarReporter.Component and conformance RadarReporter.Component;
  if (!lazy protocol witness table cache variable for type RadarReporter.Component and conformance RadarReporter.Component)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RadarReporter.Component, &type metadata for RadarReporter.Component);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RadarReporter.Component and conformance RadarReporter.Component);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for RadarReporter.Info(uint64_t a1)
{
  unint64_t result;

  result = lazy protocol witness table accessor for type RadarReporter.Info and conformance RadarReporter.Info();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type RadarReporter.Info and conformance RadarReporter.Info()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RadarReporter.Info and conformance RadarReporter.Info;
  if (!lazy protocol witness table cache variable for type RadarReporter.Info and conformance RadarReporter.Info)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RadarReporter.Info, &type metadata for RadarReporter.Info);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RadarReporter.Info and conformance RadarReporter.Info);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RadarReporter.Info and conformance RadarReporter.Info;
  if (!lazy protocol witness table cache variable for type RadarReporter.Info and conformance RadarReporter.Info)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RadarReporter.Info, &type metadata for RadarReporter.Info);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RadarReporter.Info and conformance RadarReporter.Info);
  }
  return result;
}

uint64_t dispatch thunk of RadarReporting.shortDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RadarReporting.additionalDirections.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t destroy for RadarReporter()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for RadarReporter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RadarReporter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for RadarReporter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

void type metadata accessor for RadarReporter()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for RadarReporter.URLSchema()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for RadarReporter.URLSchema.Argument()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for RadarReporter.Strings()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for RadarReporter.Action()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for RadarReporter.Reproducibility()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for RadarReporter.Classification()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for RadarReporter.Reproducibility(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD2B7854 + 4 * asc_1BD655E00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD2B7874 + 4 * byte_1BD655E05[v4]))();
}

_BYTE *sub_1BD2B7854(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD2B7874(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD2B787C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD2B7884(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD2B788C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD2B7894(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for RadarReporter.Component()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeWithCopy for RadarReporter.Info(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RadarReporter.Info(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for RadarReporter.Info(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for RadarReporter.Info()
{
  OUTLINED_FUNCTION_34_0();
}

void partial apply for closure #1 in closure #1 in static RadarReporter.showAlert()()
{
  partial apply for closure #1 in closure #1 in static RadarReporter.showAlert()();
}

{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Error>);
  closure #1 in closure #1 in static RadarReporter.showAlert()();
  OUTLINED_FUNCTION_18();
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Error>);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void partial apply for closure #2 in closure #1 in static RadarReporter.showAlert()()
{
  partial apply for closure #1 in closure #1 in static RadarReporter.showAlert()();
}

id outlined bridged method (mnbnn) of @objc LSApplicationWorkspace.openSensitiveURL(_:withOptions:)(uint64_t a1, uint64_t a2, void *a3)
{
  Class isa;
  id v6;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(a3, sel_openSensitiveURL_withOptions_, a1, isa);

  return v6;
}

uint64_t key path setter for SystemApertureContainerView.content : SystemApertureContainerView(uint64_t a1, _QWORD **a2)
{
  id v2;
  uint64_t v3;
  uint64_t (*v4)(id, uint64_t);
  id v5;

  v2 = *(id *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(uint64_t (**)(id, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x60);
  v5 = *(id *)a1;
  return v4(v2, v3);
}

id SystemApertureContainerView.content.didset(void *a1)
{
  char *v1;
  char *v2;

  if (a1)
    objc_msgSend(a1, sel_removeFromSuperview);
  v2 = &v1[OBJC_IVAR____TtC15ConversationKit27SystemApertureContainerView_content];
  swift_beginAccess();
  if (*(_QWORD *)v2)
    objc_msgSend(v1, sel_addSubview_);
  return objc_msgSend(v1, sel_setNeedsLayout);
}

id SystemApertureContainerView.content.getter()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit27SystemApertureContainerView_content);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = *v1;
  return v2;
}

void SystemApertureContainerView.content.setter(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  id v7;

  v5 = v2 + OBJC_IVAR____TtC15ConversationKit27SystemApertureContainerView_content;
  OUTLINED_FUNCTION_2_0();
  v6 = *(void **)v5;
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  v7 = a1;
  SystemApertureContainerView.content.didset(v6);

}

void SystemApertureContainerView.content.modify(_QWORD *a1)
{
  uint64_t v1;
  char *v3;
  __int128 *v4;
  __int128 v5;
  id v6;

  v3 = (char *)malloc(0x30uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 5) = v1;
  v4 = (__int128 *)(v1 + OBJC_IVAR____TtC15ConversationKit27SystemApertureContainerView_content);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  *(_OWORD *)(v3 + 24) = *v4;
  v6 = (id)v5;
  OUTLINED_FUNCTION_18();
}

void SystemApertureContainerView.content.modify(uint64_t a1, char a2)
{
  void *v2;
  id *v3;
  id v4;

  v2 = *(void **)a1;
  v3 = (id *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v4 = *(id *)(*(_QWORD *)a1 + 24);
    OUTLINED_FUNCTION_6_75();

  }
  else
  {
    OUTLINED_FUNCTION_6_75();
  }
  free(v2);
}

id SystemApertureContainerView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SystemApertureContainerView.init()()
{
  char *v0;
  char *v1;
  objc_class *v2;
  objc_super v4;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit27SystemApertureContainerView_content];
  v2 = (objc_class *)type metadata accessor for SystemApertureContainerView();
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v4.receiver = v0;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
}

uint64_t type metadata accessor for SystemApertureContainerView()
{
  return objc_opt_self();
}

id SystemApertureContainerView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SystemApertureContainerView.init(coder:)()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit27SystemApertureContainerView_content];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void SystemApertureContainerView.preferredLayoutMargins.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t ObjectType;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];
  char v14;

  v3 = OUTLINED_FUNCTION_306_0(*v1);
  if (v3)
  {
    v5 = (void *)v3;
    v6 = v4;
    ObjectType = swift_getObjectType();
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v13, ObjectType, v6);
    v11 = v13[1];
    v12 = v13[0];
    v8 = v14;

    v10 = v11;
    v9 = v12;
  }
  else
  {
    v9 = 0uLL;
    v8 = 2;
    v10 = 0uLL;
  }
  *(_OWORD *)a1 = v9;
  *(_OWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 32) = v8;
}

Swift::Void __swiftcall SystemApertureContainerView.layoutSubviews()()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SystemApertureContainerView();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  v1 = OUTLINED_FUNCTION_306_0(*v0);
  if (v1)
  {
    v2 = (void *)v1;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v2, sel_setFrame_);

  }
}

CGSize __swiftcall SystemApertureContainerView.sizeThatFits(_:)(CGSize a1)
{
  uint64_t *v1;
  double height;
  double width;
  void *v4;
  double v5;
  double v6;
  CGSize result;
  objc_super v8;

  height = a1.height;
  width = a1.width;
  v4 = (void *)OUTLINED_FUNCTION_306_0(*v1);
  if (v4)
  {
    OUTLINED_FUNCTION_4_97(v4, sel_sizeThatFits_);
    OUTLINED_FUNCTION_15_10();
  }
  else
  {
    v8.receiver = v1;
    v8.super_class = (Class)type metadata accessor for SystemApertureContainerView();
    objc_msgSendSuper2(&v8, sel_sizeThatFits_, width, height);
  }
  OUTLINED_FUNCTION_2_96();
  result.height = v6;
  result.width = v5;
  return result;
}

void SystemApertureContainerView.intrinsicContentSize.getter()
{
  uint64_t *v0;
  void *v1;
  objc_super v2;

  v1 = (void *)OUTLINED_FUNCTION_306_0(*v0);
  if (v1)
  {
    objc_msgSend(v1, sel_intrinsicContentSize);
    OUTLINED_FUNCTION_15_10();
  }
  else
  {
    v2.receiver = v0;
    v2.super_class = (Class)type metadata accessor for SystemApertureContainerView();
    objc_msgSendSuper2(&v2, sel_intrinsicContentSize);
  }
  OUTLINED_FUNCTION_2_96();
}

double SystemApertureContainerView.sizeThatFits(_:for:)(uint64_t a1, double a2, double a3)
{
  uint64_t *v3;
  void *v7;
  void *v8;
  double v9;

  v7 = (void *)OUTLINED_FUNCTION_306_0(*v3);
  if (!v7)
    goto LABEL_5;
  v8 = v7;
  if ((objc_msgSend(v7, sel_respondsToSelector_, sel_sizeThatFits_forLayoutMode_) & 1) == 0)
  {

LABEL_5:
    OUTLINED_FUNCTION_4_97(v3, sel_sizeThatFits_);
    return v9;
  }
  objc_msgSend(v8, sel_sizeThatFits_forLayoutMode_, a1, a2, a3);
  OUTLINED_FUNCTION_15_10();
  return a3;
}

void SystemApertureContainerView.updateContentIfNeeded(_:)(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(void *, uint64_t);
  id v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  void (*v19)(void *, uint64_t);

  v3 = v2;
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v7 = OUTLINED_FUNCTION_306_0(*v2);
  if (v7)
  {
    v9 = v8;
    v18 = (id)v7;
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(a2 + 16))(v18, v9, ObjectType, a2) & 1) != 0)
    {
      v11 = *(void (**)(void *, uint64_t))((*v6 & *v3) + 0x60);
      v12 = a1;
      v11(a1, a2);
    }
    else
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v14 = type metadata accessor for Logger();
      __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationControls);
      v15 = Logger.logObject.getter();
      v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_1BD004000, v15, v16, "ignoring system aperture accessory view content update", v17, 2u);
        MEMORY[0x1C3B751B8](v17, -1, -1);
      }

    }
  }
  else
  {
    v19 = *(void (**)(void *, uint64_t))((*v6 & *v2) + 0x60);
    v13 = a1;
    v19(a1, a2);
  }
}

void SystemApertureContainerView.accessibilityLabel.getter()
{
  uint64_t *v0;
  void *v1;

  v1 = (void *)OUTLINED_FUNCTION_306_0(*v0);
  if (v1)
    outlined bridged method (ob) of @objc NSObject.accessibilityLabel.getter(v1);
}

void SystemApertureContainerView.accessibilityLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  void *v6;
  id v7;

  v5 = OUTLINED_FUNCTION_306_0(*v2);
  if (v5)
  {
    v6 = (void *)v5;
    if (a2)
    {
      v7 = (id)MEMORY[0x1C3B72E00](a1, a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
    objc_msgSend(v6, sel_setAccessibilityLabel_, v7);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

id SystemApertureContainerView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void SystemApertureContainerView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SystemApertureContainerView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SystemApertureContainerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for SystemApertureAccessoryView.preferredLayoutMargins.getter in conformance SystemApertureContainerView@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x70))(v4);
  return outlined init with take of SystemApertureLayoutMargins((uint64_t)v4, a1);
}

void outlined bridged method (ob) of @objc NSObject.accessibilityLabel.getter(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_accessibilityLabel);

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1BD2B873C@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = OUTLINED_FUNCTION_306_0(**a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t method lookup function for SystemApertureContainerView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureContainerView.content.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of SystemApertureContainerView.content.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of SystemApertureContainerView.content.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of SystemApertureContainerView.preferredLayoutMargins.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SystemApertureContainerView.sizeThatFits(_:for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SystemApertureContainerView.updateContentIfNeeded(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

char *SystemApertureIncomingCallLeadingView.__allocating_init(leadingViewType:)(void *a1, uint64_t a2, char a3)
{
  objc_class *v3;
  char v6;
  id v7;

  v6 = a3 & 1;
  v7 = objc_allocWithZone(v3);
  return SystemApertureIncomingCallLeadingView.init(leadingViewType:)(a1, a2, v6);
}

id SystemApertureIncomingCallLeadingView.__allocating_init(avatar:)()
{
  void *v0;

  OUTLINED_FUNCTION_16_1();
  return SystemApertureIncomingCallLeadingView.init(avatar:)(v0);
}

__n128 one-time initialization function for avatarPreferredSize()
{
  __n128 result;

  __asm { FMOV            V0.2D, #25.0 }
  static SystemApertureIncomingCallLeadingView.LayoutConstants.avatarPreferredSize = (__int128)result;
  return result;
}

__n128 one-time initialization function for brandedCallImagePreferredSize()
{
  __n128 result;

  __asm { FMOV            V0.2D, #23.0 }
  static SystemApertureIncomingCallLeadingView.LayoutConstants.brandedCallImagePreferredSize = (__int128)result;
  return result;
}

id SystemApertureIncomingCallLeadingView.init(avatar:)(void *a1)
{
  void *v1;
  _BYTE *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  objc_class *v10;
  unint64_t v11;
  NSBundle v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v26;
  objc_super v27;

  swift_getObjectType();
  v3 = v1;
  v4 = OUTLINED_FUNCTION_7_86();
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_leadingView] = v4;
  v3[OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_isLeadingViewBrandedCallIcon] = 0;

  v27.receiver = v3;
  v27.super_class = (Class)type metadata accessor for SystemApertureIncomingCallLeadingView();
  v5 = OUTLINED_FUNCTION_0_98(&v27, sel_initWithFrame_);
  v6 = OUTLINED_FUNCTION_7_86();
  objc_msgSend(v5, sel_addSubview_, v6);

  v7 = one-time initialization token for conversationKit;
  v8 = v5;
  if (v7 != -1)
    swift_once();
  v9 = qword_1EF4FCB38;
  v10 = (objc_class *)(id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v11 = OUTLINED_FUNCTION_4_98();
  v12.super.isa = v10;
  v15 = OUTLINED_FUNCTION_49_2(v11, v13, v14, v9, v12);
  v17 = v16;
  swift_bridgeObjectRelease();

  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v15, v17, v8);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationControls);
  v19 = Logger.logObject.getter();
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)OUTLINED_FUNCTION_105();
    v26 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v21 = 136446210;
    v22 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v19, v20, "[SystemAperture] %{public}s created", v21, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v24 = v8;
  objc_msgSend(v24, sel_setNeedsLayout, 0xE000000000000000);

  return v24;
}

char *SystemApertureIncomingCallLeadingView.init(leadingViewType:)(void *a1, uint64_t a2, char a3)
{
  _BYTE *v3;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  objc_class *v18;
  unint64_t v19;
  NSBundle v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  char *v33;
  void *v35;
  uint64_t v36;
  objc_super v37;

  swift_getObjectType();
  v6 = OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_isLeadingViewBrandedCallIcon;
  v3[OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_isLeadingViewBrandedCallIcon] = 0;
  if ((a3 & 1) != 0)
  {
    v7 = objc_allocWithZone(MEMORY[0x1E0DC3890]);
    v8 = v3;
    v9 = objc_msgSend(v7, sel_initWithImage_, a1);
    *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_leadingView] = v9;
    v3[v6] = 1;

  }
  else
  {
    *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_leadingView] = a1;
    v10 = a1;
  }
  v35 = a1;
  v37.receiver = v3;
  v37.super_class = (Class)type metadata accessor for SystemApertureIncomingCallLeadingView();
  v11 = (char *)OUTLINED_FUNCTION_0_98(&v37, sel_initWithFrame_);
  v12 = OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_leadingView;
  v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_leadingView];
  v14 = v11;
  objc_msgSend(v14, sel_addSubview_, v13);
  v15 = one-time initialization token for conversationKit;
  v16 = v14;
  if (v15 != -1)
    swift_once();
  v17 = qword_1EF4FCB38;
  v18 = (objc_class *)(id)static LocalizationSource.conversationKit;
  swift_bridgeObjectRetain();
  v19 = OUTLINED_FUNCTION_4_98();
  v20.super.isa = v18;
  v23 = OUTLINED_FUNCTION_49_2(v19, v21, v22, v17, v20);
  v25 = v24;
  swift_bridgeObjectRelease();

  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v23, v25, v16);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v26 = type metadata accessor for Logger();
  __swift_project_value_buffer(v26, (uint64_t)&static Logger.conversationControls);
  v27 = Logger.logObject.getter();
  v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)OUTLINED_FUNCTION_105();
    v36 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v29 = 136446210;
    v30 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v27, v28, "[SystemAperture] %{public}s created", v29, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v32 = objc_msgSend(*(id *)&v11[v12], sel_layer, 0xE000000000000000);
  objc_msgSend(v32, sel_setAllowsHitTesting_, 0);

  objc_msgSend(*(id *)&v11[v12], sel_setUserInteractionEnabled_, 0);
  v33 = v16;
  objc_msgSend(v33, sel_setNeedsLayout);
  outlined consume of PreCallControlsContext(v35);

  return v33;
}

uint64_t type metadata accessor for SystemApertureIncomingCallLeadingView()
{
  return objc_opt_self();
}

id SystemApertureIncomingCallLeadingView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void SystemApertureIncomingCallLeadingView.init(frame:)()
{
  OUTLINED_FUNCTION_1_107();
  __break(1u);
}

id SystemApertureIncomingCallLeadingView.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void SystemApertureIncomingCallLeadingView.init(coder:)()
{
  OUTLINED_FUNCTION_1_107();
  __break(1u);
}

Swift::Void __swiftcall SystemApertureIncomingCallLeadingView.layoutSubviews()()
{
  char *v0;
  uint64_t v1;
  __int128 *v2;
  double v3;
  double v4;
  double v5;
  CGFloat Height;
  uint64_t v7;
  id v8;
  id v9;
  objc_super v10;
  CGRect v11;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for SystemApertureIncomingCallLeadingView();
  objc_msgSendSuper2(&v10, sel_layoutSubviews);
  v1 = OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_isLeadingViewBrandedCallIcon;
  if (v0[OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_isLeadingViewBrandedCallIcon] == 1)
  {
    if (one-time initialization token for brandedCallImagePreferredSize != -1)
      swift_once();
    v2 = &static SystemApertureIncomingCallLeadingView.LayoutConstants.brandedCallImagePreferredSize;
  }
  else
  {
    if (one-time initialization token for avatarPreferredSize != -1)
      swift_once();
    v2 = &static SystemApertureIncomingCallLeadingView.LayoutConstants.avatarPreferredSize;
  }
  v4 = *(double *)v2;
  v3 = *((double *)v2 + 1);
  if (v0[v1])
    v5 = 10.0;
  else
    v5 = 0.0;
  objc_msgSend(v0, sel_bounds);
  Height = CGRectGetHeight(v11);
  v7 = OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_leadingView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_leadingView], sel_setFrame_, v5, (Height - v3) * 0.5, v4, v3);
  if (v0[v1] == 1)
  {
    v8 = objc_msgSend(*(id *)&v0[v7], sel_layer);
    objc_msgSend(v8, sel_setCornerRadius_, 5.0);

    v9 = objc_msgSend(*(id *)&v0[v7], sel_layer);
    objc_msgSend(v9, sel_setMasksToBounds_, 1);

  }
}

CGSize __swiftcall SystemApertureIncomingCallLeadingView.sizeThatFits(_:)(CGSize a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  __int128 *v4;
  double v5;
  double *v6;
  double v7;
  double v8;
  CGSize result;

  v2 = OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_isLeadingViewBrandedCallIcon;
  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtC15ConversationKit37SystemApertureIncomingCallLeadingView_isLeadingViewBrandedCallIcon) == 1)
  {
    v3 = 10.0;
    if (one-time initialization token for brandedCallImagePreferredSize != -1)
      swift_once();
    v4 = &static SystemApertureIncomingCallLeadingView.LayoutConstants.brandedCallImagePreferredSize;
  }
  else
  {
    v3 = 0.0;
    if (one-time initialization token for avatarPreferredSize != -1)
      swift_once();
    v4 = &static SystemApertureIncomingCallLeadingView.LayoutConstants.avatarPreferredSize;
  }
  v5 = *(double *)v4;
  if (*(_BYTE *)(v1 + v2) == 1)
  {
    if (one-time initialization token for brandedCallImagePreferredSize != -1)
      swift_once();
    v6 = (double *)&static SystemApertureIncomingCallLeadingView.LayoutConstants.brandedCallImagePreferredSize + 1;
  }
  else
  {
    if (one-time initialization token for avatarPreferredSize != -1)
      swift_once();
    v6 = (double *)&static SystemApertureIncomingCallLeadingView.LayoutConstants.avatarPreferredSize + 1;
  }
  v7 = v5 + v3;
  v8 = *v6;
  result.height = v8;
  result.width = v7;
  return result;
}

id SystemApertureIncomingCallLeadingView.sizeThatFits(_:for:)()
{
  void *v0;

  return objc_msgSend(v0, sel_sizeThatFits_);
}

double SystemApertureIncomingCallLeadingView.preferredLayoutMargins.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

id SystemApertureIncomingCallLeadingView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SystemApertureIncomingCallLeadingView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for SystemApertureAccessoryView.preferredLayoutMargins.getter in conformance SystemApertureIncomingCallLeadingView@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD v4[5];

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA8))(v4);
  return outlined init with take of SystemApertureLayoutMargins((uint64_t)v4, a1);
}

uint64_t method lookup function for SystemApertureIncomingCallLeadingView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureIncomingCallLeadingView.__allocating_init(avatar:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallLeadingView.__allocating_init(leadingViewType:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 152))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of SystemApertureIncomingCallLeadingView.sizeThatFits(_:for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SystemApertureIncomingCallLeadingView.preferredLayoutMargins.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

void ConversationControlsAppLaunchButtonProvider.__allocating_init(controlsManager:context:)(void *a1, char a2)
{
  swift_allocObject();
  ConversationControlsAppLaunchButtonProvider.init(controlsManager:context:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

void ConversationControlsAppLaunchButtonProvider.init(controlsManager:context:)(void *a1, char a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  id v6;

  *(_QWORD *)(v2 + 136) = a1;
  ControlsButtonProvider.init(context:shape:)(a2, 2);
  v4 = (void *)objc_opt_self();
  v5 = a1;
  swift_retain();
  ControlsButtonProvider.backgroundStyle.setter(objc_msgSend(v4, sel_whiteColor), 0, 64);
  v6 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4A90], 264);
  if (v6)
  {
    ControlsButtonProvider.titleFont.setter(v6);
    swift_release();

    OUTLINED_FUNCTION_18();
  }
  else
  {
    __break(1u);
  }
}

uint64_t ConversationControlsAppLaunchButtonProvider.buttonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v2;
  uint64_t result;
  id v4;
  id v5;

  ControlsButtonProvider.defaultButtonConfiguration.getter(a1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  UIButton.Configuration.baseForegroundColor.setter();
  if (one-time initialization token for buttonContentInsets != -1)
    swift_once();
  UIButton.Configuration.contentInsets.setter();
  UIButton.Configuration.titleLineBreakMode.setter();
  result = swift_beginAccess();
  if (*(_QWORD *)(v1 + 104))
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B60]);
    v5 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v4, 2);

    return UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  }
  return result;
}

void ConversationControlsAppLaunchButtonProvider.__allocating_init(controlsManager:context:shape:)()
{
  OUTLINED_FUNCTION_0_110();
  __break(1u);
}

void ConversationControlsAppLaunchButtonProvider.init(controlsManager:context:shape:)()
{
  OUTLINED_FUNCTION_0_110();
  __break(1u);
}

uint64_t ConversationControlsAppLaunchButtonProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = ControlsButtonProvider.deinit();
  OUTLINED_FUNCTION_1_24(v1);
  return v0;
}

uint64_t ConversationControlsAppLaunchButtonProvider.__deallocating_deinit()
{
  uint64_t v0;

  v0 = ControlsButtonProvider.deinit();
  OUTLINED_FUNCTION_1_24(v0);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConversationControlsAppLaunchButtonProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsAppLaunchButtonProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsAppLaunchButtonProvider.__allocating_init(controlsManager:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t CallScreening.EnteringAnsweringStateService.viewModel.getter()
{
  return swift_retain();
}

uint64_t CallScreening.EnteringAnsweringStateService.callServices.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of IDSLookupManager(v1 + 8, a1);
}

Swift::Void __swiftcall CallScreening.EnteringAnsweringStateService.enter(with:)(Swift::String with)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRetain();
  TranscriptionViewModel.callUUID.setter();
  v2 = v1[5];
  __swift_project_boxed_opaque_existential_1(v1 + 1, v1[4]);
  v3 = TranscriptionViewModel.callUUID.getter();
  (*(void (**)(uint64_t))(v2 + 64))(v3);
  swift_bridgeObjectRelease();
  TranscriptionViewModel.callerDisplayName.setter();
  TranscriptionViewModel.state.setter();
}

uint64_t CallScreening.EnteringAnsweringStateService.init(viewModel:callServices:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  return outlined init with take of Notice(a2, (uint64_t)(a3 + 1));
}

uint64_t destroy for CallScreening.EnteringAnsweringStateService(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 8;
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for CallScreening.EnteringAnsweringStateService(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a2 + 8;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = v4;
  v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_retain();
  v6(a1 + 8, v3, v5);
  return a1;
}

_QWORD *assignWithCopy for CallScreening.EnteringAnsweringStateService(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v3;

  v3 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t assignWithTake for CallScreening.EnteringAnsweringStateService(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for CallScreening.EnteringAnsweringStateService()
{
  return &type metadata for CallScreening.EnteringAnsweringStateService;
}

char *CallCenter.__allocating_init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(void *a1, void *a2, char a3, char a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(a1, a2, a3, a4);
}

char *CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(void *a1, void *a2, char a3, char a4)
{
  char *v4;
  objc_class *v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  char *v25;
  objc_super v27;

  v9 = (objc_class *)OUTLINED_FUNCTION_15_6();
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit10CallCenter_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit10CallCenter_placeholderCallCenter] = a2;
  v27.receiver = v4;
  v27.super_class = v9;
  v10 = a1;
  v11 = a2;
  v12 = (char *)objc_msgSendSuper2(&v27, sel_init);
  v13 = OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter;
  v14 = *(void **)&v12[OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter];
  v15 = v12;
  v16 = objc_msgSend(v14, sel_conversationManager, v27.receiver, v27.super_class);
  OUTLINED_FUNCTION_17_8((uint64_t)v16, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v17 = v15;
  v18 = (void *)static OS_dispatch_queue.main.getter();
  objc_msgSend(v16, sel_addDelegate_queue_, v17, v18);

  if ((a3 & 1) != 0)
  {
    v19 = OUTLINED_FUNCTION_55_26();
    v20 = objc_msgSend(v19, sel_mediaController);

    OUTLINED_FUNCTION_5_42(v20, sel_addDelegate_);
  }
  if ((a4 & 1) != 0)
  {
    v21 = OUTLINED_FUNCTION_55_26();
    v22 = objc_msgSend(v21, sel_reactionsController);

    OUTLINED_FUNCTION_5_42(v22, sel_addDelegate_);
  }
  v23 = objc_msgSend(*(id *)&v12[v13], sel_routeController);
  OUTLINED_FUNCTION_5_42(v23, sel_addDelegate_);

  v24 = objc_msgSend(*(id *)&v12[v13], sel_audioDeviceController);
  v25 = v17;
  objc_msgSend(v24, sel_addDelegate_, v25);

  return v25;
}

void CallCenter.currentAudioAndVideoCalls.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_8((uint64_t)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), sel_currentAudioAndVideoCalls), (unint64_t *)&lazy cache variable for type metadata for TUCall);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_49_5();
  specialized _arrayForceCast<A, B>(_:)();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_0();
}

uint64_t CallCenter.activeConversations.getter()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter], sel_conversationManager), sel_activeConversations);
  OUTLINED_FUNCTION_49_5();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  lazy protocol witness table accessor for type TUConversation and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversation, 0x1E0DBD240, MEMORY[0x1E0DEFCF8]);
  v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized _copyCollectionToContiguousArray<A>(_:)(v2);
  swift_bridgeObjectRelease();
  specialized _arrayForceCast<A, B>(_:)();
  v4 = v3;
  OUTLINED_FUNCTION_43();
  return v4;
}

id CallCenter.callContainer.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter);
}

void CallCenter.localVideoProvider.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), sel_videoDeviceController);
  a1[3] = OUTLINED_FUNCTION_17_8((uint64_t)v3, &lazy cache variable for type metadata for TUVideoDeviceController);
  a1[4] = &protocol witness table for TUVideoDeviceController;
  a1[5] = &protocol witness table for TUVideoDeviceController;
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

id CallCenter.conversationManager.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), sel_conversationManager);
}

id CallCenter.videoDeviceController.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), sel_videoDeviceController);
}

void CallCenter.audioRoute.getter()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), sel_routeController), sel_pickedRoute);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for CallCenter.delegate : CallCenter@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit10CallCenter_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for CallCenter.delegate : CallCenter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit10CallCenter_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t CallCenter.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit10CallCenter_delegate;
  OUTLINED_FUNCTION_1();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t CallCenter.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit10CallCenter_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return OUTLINED_FUNCTION_113();
}

uint64_t (*CallCenter.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit10CallCenter_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return ParticipantGridViewController.participantsViewControllerDelegate.modify;
}

void CallCenter.disconnect(_:reason:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_62_23();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 440))(a3, v5, v3);
  OUTLINED_FUNCTION_18();
}

void CallCenter.answer(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 448))(ObjectType, a2);
  OUTLINED_FUNCTION_0();
}

void CallCenter.activeConversation(for:)(uint64_t a1@<X8>)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = OUTLINED_FUNCTION_61_20(ObjectType);
  if (v3)
  {
    v4 = v3;
    *(_QWORD *)(a1 + 24) = OUTLINED_FUNCTION_17_8(v3, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    *(_QWORD *)(a1 + 32) = &protocol witness table for TUConversation;
    *(_QWORD *)a1 = v4;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  OUTLINED_FUNCTION_18();
}

void CallCenter.avLessConversation(for:)()
{
  PlaceholderCallCenter.avLessConversation(for:)();
  OUTLINED_FUNCTION_0();
}

void CallCenter.downgradeToAVLess(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = OUTLINED_FUNCTION_62_23();
  v3 = OUTLINED_FUNCTION_61_20(v2);
  if (v3)
  {
    v4 = (void *)v3;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v5 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v5 + 16) = xmmword_1BD6441D0;
    v6 = v4;
    v7 = objc_msgSend(v6, sel_description);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    v8 = MEMORY[0x1E0DEA968];
    v9 = String.init<A>(reflecting:)();
    v11 = v10;
    *(_QWORD *)(v5 + 56) = v8;
    *(_QWORD *)(v5 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v5 + 32) = v9;
    *(_QWORD *)(v5 + 40) = v11;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit10CallCenter_placeholderCallCenter);
    v13 = v6;
    specialized PlaceholderCallCenter.downgradeToAVLess(for:)(v13, v12);

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v14 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
    (*(void (**)(uint64_t, uint64_t))(v1 + 48))(v2, v1);
    v15 = MEMORY[0x1E0DEA968];
    v16 = String.init<A>(reflecting:)();
    v18 = v17;
    *(_QWORD *)(v14 + 56) = v15;
    *(_QWORD *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v14 + 32) = v16;
    *(_QWORD *)(v14 + 40) = v18;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
}

void CallCenter.setGridDisplayMode(mode:for:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[16];
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = objc_msgSend(OUTLINED_FUNCTION_28_49(), sel_activeConversations);
  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_42_34();
  OUTLINED_FUNCTION_59_21((unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject, v9, v10, MEMORY[0x1E0DEFCF8]);
  OUTLINED_FUNCTION_48_31();
  OUTLINED_FUNCTION_15_2();
  v19 = a2;
  OUTLINED_FUNCTION_26_44(partial apply for closure #1 in CallCenter.setGridDisplayMode(mode:for:), (uint64_t)v18);
  OUTLINED_FUNCTION_24_48();
  if (v2)
  {
    v11 = OUTLINED_FUNCTION_28_49();
    objc_msgSend(v11, sel_setGridDisplayMode_conversation_, a1, v2);

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v12 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v12 + 16) = xmmword_1BD6441D0;
    v13 = type metadata accessor for UUID();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v7, a2, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v13);
    specialized >> prefix<A>(_:)((uint64_t)v7);
    v15 = v14;
    v17 = v16;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v12 + 32) = v15;
    *(_QWORD *)(v12 + 40) = v17;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in CallCenter.setGridDisplayMode(mode:for:)(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char v7;
  uint64_t v9;

  v2 = type metadata accessor for UUID();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*a1, sel_UUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v7 = static UUID.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

void CallCenter.updateConversation(uuid:presentationContexts:)()
{
  uint64_t v0;
  id v1;
  id v2;
  Class isa;
  Class v4;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), sel_conversationManager));
  v2 = objc_msgSend(v1, sel_mediaController);

  isa = UUID._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_17_8((uint64_t)isa, &lazy cache variable for type metadata for TUConversationParticipantPresentationContext);
  v4 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, sel_updateConversationWithUUID_participantPresentationContexts_, isa, v4);

}

uint64_t CallCenter.calls(passingTest:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter);
  v6 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v7 + 16) = partial apply for thunk for @callee_guaranteed (@guaranteed Call) -> (@unowned Bool);
  *(_QWORD *)(v7 + 24) = v6;
  v8 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool), MEMORY[0x1E0C809B0], 1107296256, v13, v14);
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v5, sel_callsPassingTest_, v8);
  OUTLINED_FUNCTION_58_6();
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  result = OUTLINED_FUNCTION_43();
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_17_8(result, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_15_2();
    specialized _arrayForceCast<A, B>(_:)();
    v12 = v11;
    swift_release();
    OUTLINED_FUNCTION_27();
    return v12;
  }
  return result;
}

uint64_t thunk for @callee_guaranteed (@guaranteed Call) -> (@unowned Bool)(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4;

  lazy protocol witness table accessor for type TUConversation and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUCall and conformance TUCall, (unint64_t *)&lazy cache variable for type metadata for TUCall, 0x1E0DBD1B0, (uint64_t)&protocol conformance descriptor for TUCall);
  return a2(a1, v4) & 1;
}

uint64_t CallCenter.buzz(_:in:)(uint64_t a1, _QWORD *a2)
{
  return CallCenter.buzz(_:in:)(a1, a2, (void (*)(void *, void *))partial apply for closure #1 in CallCenter.buzz(_:in:));
}

void Conversation.performTUAction(for:action:)(uint64_t a1, void (*a2)(void *, void *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void *, void *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;

  v42 = a3;
  v10 = type metadata accessor for Optional();
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Participant(0);
  v20 = *(void **)(a1 + *(int *)(v19 + 28));
  if (v20)
  {
    v41 = a2;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v18, v5, a4);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    v21 = v20;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v22 = v46;
      v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 88))(a4, a5);
      v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 128))(a4, a5);
      specialized Set.union<A>(_:)(v24, v23);
      v26 = v25;
      v27 = v21;
      specialized Sequence.first(where:)(v26, v27);
      v29 = v28;
      swift_bridgeObjectRelease();
      if (v29)
      {
        v41(v22, v29);

        return;
      }

    }
    else
    {

    }
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BD645380;
  outlined init with copy of Participant(a1, (uint64_t)v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v19);
  specialized >> prefix<A>(_:)((uint64_t)v16);
  v32 = v31;
  v34 = v33;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v16, &demangling cache variable for type metadata for Participant?);
  v35 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
  v36 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v30 + 64) = v36;
  *(_QWORD *)(v30 + 32) = v32;
  *(_QWORD *)(v30 + 40) = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v12, v5, a4);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, a4);
  v37 = >> prefix<A>(_:)((uint64_t)v12, a4);
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v44);
  *(_QWORD *)(v30 + 96) = v35;
  *(_QWORD *)(v30 + 104) = v36;
  *(_QWORD *)(v30 + 72) = v37;
  *(_QWORD *)(v30 + 80) = v39;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
}

uint64_t CallCenter.kick(_:in:)(uint64_t a1, _QWORD *a2)
{
  return CallCenter.buzz(_:in:)(a1, a2, (void (*)(void *, void *))partial apply for closure #1 in CallCenter.kick(_:in:));
}

void closure #1 in CallCenter.buzz(_:in:)()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_52_26();
}

void sub_1BD2BB1B0(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  if (a1)
  {
    *(_QWORD *)(v6 - 136) = v3;
    *(_QWORD *)(v6 - 128) = v2;
    *(_QWORD *)(v6 - 120) = v1;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v8 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v8 + 16) = xmmword_1BD645380;
    outlined init with copy of Participant(v5, v4);
    v9 = type metadata accessor for Participant(0);
    __swift_storeEnumTagSinglePayload(v4, 0, 1, v9);
    specialized >> prefix<A>(_:)(v4);
    v11 = v10;
    v13 = v12;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v4, &demangling cache variable for type metadata for Participant?);
    v14 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    v15 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v8 + 64) = v15;
    *(_QWORD *)(v8 + 32) = v11;
    *(_QWORD *)(v8 + 40) = v13;
    v16 = OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter;
    v17 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter];
    *(_QWORD *)(v6 - 112) = v17;
    OUTLINED_FUNCTION_17_8(v15, &lazy cache variable for type metadata for TUCallCenter);
    v18 = v17;
    v19 = String.init<A>(reflecting:)();
    *(_QWORD *)(v8 + 96) = v14;
    *(_QWORD *)(v8 + 104) = v15;
    *(_QWORD *)(v8 + 72) = v19;
    *(_QWORD *)(v8 + 80) = v20;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_25();
    v21 = objc_msgSend(*(id *)&a1[v16], sel_conversationManager);
    objc_msgSend(v21, **(SEL **)(v6 - 120), *(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 128));

  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t CallCenter.approve(_:in:)(uint64_t a1, _QWORD *a2)
{
  return CallCenter.buzz(_:in:)(a1, a2, (void (*)(void *, void *))partial apply for closure #1 in CallCenter.approve(_:in:));
}

uint64_t CallCenter.reject(_:in:)(uint64_t a1, _QWORD *a2)
{
  return CallCenter.buzz(_:in:)(a1, a2, (void (*)(void *, void *))partial apply for closure #1 in CallCenter.reject(_:in:));
}

uint64_t CallCenter.buzz(_:in:)(uint64_t a1, _QWORD *a2, void (*a3)(void *, void *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v5 = a2[3];
  v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  v7 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v9[2] = v7;
  v9[3] = a1;
  Conversation.performTUAction(for:action:)(a1, a3, (uint64_t)v9, v5, v6);
  return swift_release();
}

void CallCenter.setDownlinkMuted(_:forRemoteParticipantsIn:)(char a1, uint64_t a2)
{
  CallCenter.setDownlinkMuted(_:forRemoteParticipantsIn:)(a1, a2, partial apply for closure #1 in CallCenter.setDownlinkMuted(_:forRemoteParticipantsIn:), (SEL *)&selRef_setDownlinkMuted_forRemoteParticipantsInConversation_);
}

void CallCenter.generateLink(for:completionHandler:)(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  _QWORD aBlock[7];

  v7 = objc_msgSend(OUTLINED_FUNCTION_28_49(), sel_activeConversations);
  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_42_34();
  OUTLINED_FUNCTION_59_21((unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject, v8, v9, MEMORY[0x1E0DEFCF8]);
  OUTLINED_FUNCTION_48_31();
  OUTLINED_FUNCTION_15_2();
  v15[2] = a1;
  OUTLINED_FUNCTION_26_44(partial apply for closure #1 in CallCenter.generateLink(for:completionHandler:), (uint64_t)v15);
  OUTLINED_FUNCTION_24_48();
  if (v3)
  {
    v10 = OUTLINED_FUNCTION_28_49();
    if (a2)
    {
      aBlock[4] = a2;
      aBlock[5] = a3;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
      aBlock[3] = &block_descriptor_12_1;
      a2 = _Block_copy(aBlock);
      swift_retain();
      OUTLINED_FUNCTION_43();
    }
    objc_msgSend(v10, sel_generateLinkForConversation_completionHandler_, v3, a2);
    OUTLINED_FUNCTION_58_6();

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v11 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
    outlined init with copy of IDSLookupManager(a1, (uint64_t)aBlock);
    v12 = specialized >> prefix<A>(_:)((uint64_t)aBlock);
    v14 = v13;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)aBlock, &demangling cache variable for type metadata for Conversation?);
    *(_QWORD *)(v11 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v11 + 32) = v12;
    *(_QWORD *)(v11 + 40) = v14;
    OUTLINED_FUNCTION_19_56();
    OUTLINED_FUNCTION_53();
  }
  OUTLINED_FUNCTION_20_1();
}

void CallCenter.ignoreLetMeIn(_:in:)(char a1, uint64_t a2)
{
  CallCenter.setDownlinkMuted(_:forRemoteParticipantsIn:)(a1, a2, partial apply for closure #1 in CallCenter.setDownlinkMuted(_:forRemoteParticipantsIn:), (SEL *)&selRef_setIgnoreLMIRequests_forConversation_);
}

void CallCenter.setDownlinkMuted(_:forRemoteParticipantsIn:)(char a1, uint64_t a2, uint64_t (*a3)(id *), SEL *a4)
{
  id v8;
  id v9;
  id v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[4];
  _BYTE v20[48];

  v8 = OUTLINED_FUNCTION_57_12();
  v9 = objc_msgSend(v8, sel_activeConversations);

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  lazy protocol witness table accessor for type TUConversation and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversation, 0x1E0DBD240, MEMORY[0x1E0DEFCF8]);
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v19[2] = a2;
  OUTLINED_FUNCTION_26_44(a3, (uint64_t)v19);
  OUTLINED_FUNCTION_24_48();
  if (a3)
  {
    v10 = OUTLINED_FUNCTION_57_12();
    objc_msgSend(v10, *a4, a1 & 1, a3);

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v11 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_43_39(v11, (__n128)xmmword_1BD6441D0, v12, v13, v14, v15);
    v16 = specialized >> prefix<A>(_:)((uint64_t)v20);
    v18 = v17;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v20, &demangling cache variable for type metadata for Conversation?);
    v11[4].n128_u64[0] = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
    v11[2].n128_u64[0] = v16;
    v11[2].n128_u64[1] = v18;
    OUTLINED_FUNCTION_19_56();
    OUTLINED_FUNCTION_53();
  }
  OUTLINED_FUNCTION_20_1();
}

void CallCenter.addScreenSharingType(_:in:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;
  __n128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v15[4];
  _BYTE v16[48];

  v5 = objc_msgSend(OUTLINED_FUNCTION_64_16(), sel_activeConversations);
  OUTLINED_FUNCTION_14_18();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  lazy protocol witness table accessor for type TUConversation and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversation and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversation, 0x1E0DBD240, MEMORY[0x1E0DEFCF8]);
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_15_2();
  v15[2] = a2;
  OUTLINED_FUNCTION_26_44(partial apply for closure #1 in CallCenter.setDownlinkMuted(_:forRemoteParticipantsIn:), (uint64_t)v15);
  OUTLINED_FUNCTION_24_48();
  if (v2)
  {
    v6 = OUTLINED_FUNCTION_64_16();
    objc_msgSend(v6, sel_addScreenSharingType_forConversation_, a1, v2);

  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v7 = (__n128 *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_43_39(v7, (__n128)xmmword_1BD6441D0, v8, v9, v10, v11);
    v12 = specialized >> prefix<A>(_:)((uint64_t)v16);
    v14 = v13;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v16, &demangling cache variable for type metadata for Conversation?);
    v7[4].n128_u64[0] = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
    v7[2].n128_u64[0] = v12;
    v7[2].n128_u64[1] = v14;
    OUTLINED_FUNCTION_19_56();
    OUTLINED_FUNCTION_53();
  }
}

uint64_t closure #1 in CallCenter.setDownlinkMuted(_:forRemoteParticipantsIn:)(id *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - v9;
  v11 = objc_msgSend(*a1, sel_UUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v12 = a2[3];
  v13 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  LOBYTE(a2) = static UUID.== infix(_:_:)();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v14(v10, v4);
  return a2 & 1;
}

void CallCenter.requestVideoUpgrade(for:)()
{
  uint64_t v0;
  uint64_t v1;

  objc_opt_self();
  v1 = OUTLINED_FUNCTION_95();
  if (v1)
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), sel_requestVideoUpgradeForCall_, v1);
  else
    OUTLINED_FUNCTION_0();
}

id CallCenter.launchApp(forJoin:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), sel_launchAppForJoinRequest_, a1);
}

void CallCenter.launchApp(for:completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter);
  if (a2)
  {
    v5 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> (), MEMORY[0x1E0C809B0], 1107296256, v6, v7);
    swift_retain();
    swift_release();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v4, sel_launchAppForDialRequest_completion_, a1, v5);
  OUTLINED_FUNCTION_58_6();
}

void CallCenter.requestScreenSharingPicker(for:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  void *v6;
  _BYTE v7[40];

  outlined init with copy of IDSLookupManager(a1, (uint64_t)v7);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation);
  OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  if (swift_dynamicCast())
  {
    v5 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), sel_conversationManager);
    objc_msgSend(v5, sel_requestScreenSharingPickerForConversation_withContentStyle_, v6, a2);

  }
}

id CallCenter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CallCenter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CallCenter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void protocol witness for CallCenterProvider.currentAudioAndVideoCalls.getter in conformance CallCenter()
{
  CallCenter.currentAudioAndVideoCalls.getter();
}

uint64_t protocol witness for CallCenterProvider.activeConversations.getter in conformance CallCenter()
{
  return CallCenter.activeConversations.getter();
}

id protocol witness for CallCenterProvider.callContainer.getter in conformance CallCenter()
{
  return CallCenter.callContainer.getter();
}

void protocol witness for CallCenterProvider.localVideoProvider.getter in conformance CallCenter(_QWORD *a1@<X8>)
{
  CallCenter.localVideoProvider.getter(a1);
}

void protocol witness for CallCenterProvider.audioRoute.getter in conformance CallCenter()
{
  CallCenter.audioRoute.getter();
}

uint64_t protocol witness for CallCenterProvider.delegate.getter in conformance CallCenter()
{
  return CallCenter.delegate.getter();
}

uint64_t protocol witness for CallCenterProvider.delegate.setter in conformance CallCenter(uint64_t a1, uint64_t a2)
{
  return CallCenter.delegate.setter(a1, a2);
}

uint64_t (*protocol witness for CallCenterProvider.delegate.modify in conformance CallCenter(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = OBJC_IVAR____TtC15ConversationKit10CallCenter_delegate;
  v3[5] = *v1;
  v3[6] = v5;
  v6 = v4 + v5;
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](v6);
  v8 = *(_QWORD *)(v6 + 8);
  v3[3] = v7;
  v3[4] = v8;
  return ParticipantGridViewController.participantsViewControllerDelegate.modify;
}

id protocol witness for CallCenterProvider.conversationManager.getter in conformance CallCenter()
{
  return CallCenter.conversationManager.getter();
}

id protocol witness for CallCenterProvider.videoDeviceController.getter in conformance CallCenter()
{
  return CallCenter.videoDeviceController.getter();
}

void protocol witness for CallCenterProvider.disconnect(_:reason:) in conformance CallCenter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CallCenter.disconnect(_:reason:)(a1, a2, a3);
}

void protocol witness for CallCenterProvider.answer(_:) in conformance CallCenter(uint64_t a1, uint64_t a2)
{
  CallCenter.answer(_:)(a1, a2);
}

void protocol witness for CallCenterProvider.activeConversation(for:) in conformance CallCenter(uint64_t a1@<X8>)
{
  CallCenter.activeConversation(for:)(a1);
}

void protocol witness for CallCenterProvider.avLessConversation(for:) in conformance CallCenter()
{
  CallCenter.avLessConversation(for:)();
}

void protocol witness for CallCenterProvider.updateConversation(uuid:presentationContexts:) in conformance CallCenter()
{
  CallCenter.updateConversation(uuid:presentationContexts:)();
}

void protocol witness for CallCenterProvider.downgradeToAVLess(for:) in conformance CallCenter()
{
  CallCenter.downgradeToAVLess(for:)();
}

void protocol witness for CallCenterProvider.setGridDisplayMode(mode:for:) in conformance CallCenter(uint64_t a1, uint64_t a2)
{
  CallCenter.setGridDisplayMode(mode:for:)(a1, a2);
}

uint64_t protocol witness for CallCenterProvider.buzz(_:in:) in conformance CallCenter(uint64_t a1, _QWORD *a2)
{
  return CallCenter.buzz(_:in:)(a1, a2);
}

uint64_t protocol witness for CallCenterProvider.kick(_:in:) in conformance CallCenter(uint64_t a1, _QWORD *a2)
{
  return CallCenter.kick(_:in:)(a1, a2);
}

void protocol witness for CallCenterProvider.setDownlinkMuted(_:forRemoteParticipantsIn:) in conformance CallCenter(char a1, uint64_t a2)
{
  CallCenter.setDownlinkMuted(_:forRemoteParticipantsIn:)(a1, a2);
}

uint64_t protocol witness for CallCenterProvider.approve(_:in:) in conformance CallCenter(uint64_t a1, _QWORD *a2)
{
  return CallCenter.approve(_:in:)(a1, a2);
}

uint64_t protocol witness for CallCenterProvider.reject(_:in:) in conformance CallCenter(uint64_t a1, _QWORD *a2)
{
  return CallCenter.reject(_:in:)(a1, a2);
}

void protocol witness for CallCenterProvider.generateLink(for:completionHandler:) in conformance CallCenter(uint64_t a1, void *a2, uint64_t a3)
{
  CallCenter.generateLink(for:completionHandler:)(a1, a2, a3);
}

void protocol witness for CallCenterProvider.ignoreLetMeIn(_:in:) in conformance CallCenter(char a1, uint64_t a2)
{
  CallCenter.ignoreLetMeIn(_:in:)(a1, a2);
}

void protocol witness for CallCenterProvider.addScreenSharingType(_:in:) in conformance CallCenter(uint64_t a1, uint64_t a2)
{
  CallCenter.addScreenSharingType(_:in:)(a1, a2);
}

uint64_t protocol witness for CallCenterProvider.calls(passingTest:) in conformance CallCenter(uint64_t a1, uint64_t a2)
{
  return CallCenter.calls(passingTest:)(a1, a2);
}

void protocol witness for CallCenterProvider.requestVideoUpgrade(for:) in conformance CallCenter()
{
  CallCenter.requestVideoUpgrade(for:)();
}

id protocol witness for CallCenterProvider.launchApp(forJoin:) in conformance CallCenter(uint64_t a1)
{
  return CallCenter.launchApp(forJoin:)(a1);
}

void protocol witness for CallCenterProvider.launchApp(for:completion:) in conformance CallCenter(uint64_t a1, uint64_t a2)
{
  CallCenter.launchApp(for:completion:)(a1, a2);
}

void protocol witness for CallCenterProvider.requestScreenSharingPicker(for:with:) in conformance CallCenter(uint64_t a1, uint64_t a2)
{
  CallCenter.requestScreenSharingPicker(for:with:)(a1, a2);
}

void protocol witness for CallCenterProvider.pttStartTransmit(_:) in conformance CallCenter(uint64_t a1, uint64_t a2)
{
  CallCenter.pttStartTransmit(_:)(a1, a2);
}

void CallCenter.pttStartTransmit(_:)(uint64_t a1, uint64_t a2)
{
  CallCenter.pttStartTransmit(_:)(a1, a2, (SEL *)&selRef_startTransmissionForBargeCall_sourceIsHandsfreeAccessory_);
}

void protocol witness for CallCenterProvider.pttStopTransmit(_:) in conformance CallCenter(uint64_t a1, uint64_t a2)
{
  CallCenter.pttStopTransmit(_:)(a1, a2);
}

void CallCenter.pttStopTransmit(_:)(uint64_t a1, uint64_t a2)
{
  CallCenter.pttStartTransmit(_:)(a1, a2, (SEL *)&selRef_stopTransmissionForBargeCall_sourceIsHandsfreeAccessory_);
}

void CallCenter.pttStartTransmit(_:)(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v5;
  void *v6;

  objc_opt_self();
  v5 = OUTLINED_FUNCTION_95();
  if (v5)
  {
    v6 = (void *)v5;
    OUTLINED_FUNCTION_71_17();
    if (objc_msgSend(v6, sel_isPTT))
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), *a3, v6, 0);
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

void protocol witness for CallCenterProvider.pttLeaveChannel(_:) in conformance CallCenter()
{
  CallCenter.pttLeaveChannel(_:)();
}

void CallCenter.pttLeaveChannel(_:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  objc_opt_self();
  v1 = OUTLINED_FUNCTION_95();
  if (v1)
  {
    v2 = (void *)v1;
    OUTLINED_FUNCTION_71_17();
    if (objc_msgSend(v2, sel_isPTT))
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), sel_disconnectCall_, v2);
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

void CallCenter.audioDeviceControllerMutedTalkerDidStart(_:)()
{
  CallCenter.audioDeviceControllerMutedTalkerDidStart(_:)();
}

{
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BC2D0()
{
  void *v0;
  void *v1;

}

void CallCenter.audioDeviceControllerMutedTalkerDidEnd(_:)()
{
  CallCenter.audioDeviceControllerMutedTalkerDidStart(_:)();
}

#error "1BD2BC358: call analysis failed (funcsize=13)"

void sub_1BD2BC39C()
{
  void *v0;
  void *v1;

}

void CallCenter.conversationManager(_:stateChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BC3E4(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BC484()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:localVideoToggledFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BC4D0(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BC570()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:remoteMembersChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BC5BC(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BC65C()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:activeRemoteParticipantsChangedFor:)()
{
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_52_26();
}

void sub_1BD2BC6C8(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t aBlock, uint64_t a12, void (*a13)(uint64_t a1, void *a2), void *a14, uint64_t (*a15)(), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_UNKNOWN **a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t ObjectType;
  void (*v42)(uint64_t *, uint64_t *, uint64_t, uint64_t);
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  if (a1)
  {
    v40 = *(_QWORD *)(v38 + 8);
    ObjectType = swift_getObjectType();
    a14 = v37;
    a15 = (uint64_t (*)())&protocol witness table for CallCenter;
    aBlock = (uint64_t)v36;
    a20 = OUTLINED_FUNCTION_17_8(ObjectType, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    a21 = &protocol witness table for TUConversation;
    a17 = (uint64_t)v39;
    v42 = *(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v40 + 32);
    v43 = v36;
    v44 = v39;
    v42(&aBlock, &a17, ObjectType, v40);
    OUTLINED_FUNCTION_10();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&a17);
    a1 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  }
  if (OUTLINED_FUNCTION_39(a1, sel_state) == (id)3)
  {
    v45 = objc_msgSend(v39, sel_isOneToOneModeEnabled);
    if ((_DWORD)v45)
    {
      v46 = OUTLINED_FUNCTION_39((uint64_t)v45, sel_activeRemoteParticipants);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
      lazy protocol witness table accessor for type TUConversation and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant, 0x1E0DBD2B0, MEMORY[0x1E0DEFCF8]);
      v47 = OUTLINED_FUNCTION_58_21();

      v48 = specialized Set.count.getter(v47);
      OUTLINED_FUNCTION_25();
      if (v48 == 1)
      {
        v49 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
        v50 = OUTLINED_FUNCTION_15();
        *(_QWORD *)(v50 + 16) = v39;
        v51 = OUTLINED_FUNCTION_15();
        *(_QWORD *)(v51 + 16) = partial apply for closure #1 in CallCenter.conversationManager(_:activeRemoteParticipantsChangedFor:);
        *(_QWORD *)(v51 + 24) = v50;
        a15 = thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool)partial apply;
        a16 = v51;
        aBlock = MEMORY[0x1E0C809B0];
        a12 = 1107296256;
        a13 = thunk for @escaping @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool);
        a14 = &block_descriptor_25_1;
        v52 = _Block_copy(&aBlock);
        v39;
        swift_retain();
        swift_release();
        v53 = objc_msgSend((id)v49, sel_callsPassingTest_, v52);

        _Block_release(v52);
        LOBYTE(v52) = swift_isEscapingClosureAtFileLocation();
        v54 = swift_release();
        if ((v52 & 1) != 0)
        {
          __break(1u);
        }
        else
        {
          OUTLINED_FUNCTION_17_8(v54, (unint64_t *)&lazy cache variable for type metadata for TUCall);
          v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (!(v49 >> 62))
          {
            if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_9:
              specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v49 & 0xC000000000000001) == 0, v49);
              if ((v49 & 0xC000000000000001) != 0)
                v55 = (id)MEMORY[0x1C3B73D18](0, v49);
              else
                v55 = *(id *)(v49 + 32);
              v56 = v55;
              OUTLINED_FUNCTION_25();
              v57 = v56;
              v58 = (uint64_t)objc_msgSend(v57, sel_isVideo);
              if ((v58 & 1) == 0)
              {
                v59 = OUTLINED_FUNCTION_39(v58, sel_activeRemoteParticipants);
                v60 = OUTLINED_FUNCTION_58_21();

                v62 = specialized Collection.randomElement<A>(using:)(v61, v60);
                OUTLINED_FUNCTION_27();
                if (v62)
                  OUTLINED_FUNCTION_52_26();
              }
              OUTLINED_FUNCTION_47_19();

              goto LABEL_18;
            }
LABEL_17:
            OUTLINED_FUNCTION_47_19();
            OUTLINED_FUNCTION_25();
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRetain();
        v63 = _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_25();
        if (v63)
          goto LABEL_9;
        goto LABEL_17;
      }
    }
  }
LABEL_18:
  OUTLINED_FUNCTION_243();
}

uint64_t closure #1 in CallCenter.conversationManager(_:activeRemoteParticipantsChangedFor:)(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v29 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v29 - v18;
  v20 = objc_msgSend(a1, sel_callGroupUUID);
  if (v20)
  {
    v21 = v20;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v19, v22, 1, v4);
  v23 = objc_msgSend(a2, sel_groupUUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v4);
  v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  outlined init with copy of UUID?((uint64_t)v19, (uint64_t)v10);
  outlined init with copy of UUID?((uint64_t)v17, v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4) == 1)
  {
    v25 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v24, 1, v4) == 1)
    {
      v26 = -1;
    }
    else
    {
      v25 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
      v26 = 0;
    }
  }
  else
  {
    outlined init with copy of UUID?((uint64_t)v10, (uint64_t)v14);
    if (__swift_getEnumTagSinglePayload(v24, 1, v4) == 1)
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
      v26 = 0;
      v25 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v24, v4);
      lazy protocol witness table accessor for type UUID and conformance UUID();
      v26 = dispatch thunk of static Equatable.== infix(_:_:)();
      v27 = *(void (**)(char *, uint64_t))(v5 + 8);
      v27(v7, v4);
      v25 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v27(v14, v4);
    }
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, v25);
  return v26 & 1;
}

void sub_1BD2BCE2C()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:pendingMembersChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BCE78(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BCF18()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:otherInvitedHandlesChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BCF64(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BD004()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:oneToOneModeChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BD050(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BD0F0()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:avModeChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BD13C(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BD1DC()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:resolvedAudioVideoModeChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BD228(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BD2C8()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:removedActiveConversation:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BD314(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BD3B4()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:addedActiveConversation:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BD400(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BD4A0()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:letMeInRequestStateChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BD4EC(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BD58C()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:ignoreLMIRequestsChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BD5D8(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BD678()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:rejectedMembersChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BD6C4(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BD764()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:linkChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BD7B0(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BD850()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:screenSharingAvailableChanged:)()
{
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_117_0();
}

#error "1BD2BD8D4: call analysis failed (funcsize=13)"

void sub_1BD2BD920()
{
  void *v0;
  void *v1;

}

void CallCenter.conversationManager(_:linkInvitedMemberHandlesChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BD968(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BDA08()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:migratingFrom:to:)()
{
  OUTLINED_FUNCTION_14_78();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_38_36();
}

#error "1BD2BDAD8: call analysis failed (funcsize=28)"

void sub_1BD2BDB38()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

}

void CallCenter.conversationManager(_:activitySessionsChangedFor:fromOldConversation:)()
{
  OUTLINED_FUNCTION_14_78();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_38_36();
}

#error "1BD2BDC10: call analysis failed (funcsize=28)"

void sub_1BD2BDC70()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

}

void CallCenter.conversationManager(_:conversation:participant:addedNotice:)(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_15_6();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v7 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v7 + 16) = xmmword_1BD646740;
  OUTLINED_FUNCTION_17_8(v7, &lazy cache variable for type metadata for TUConversationNotice);
  a4;
  v8 = OUTLINED_FUNCTION_39_42();
  v10 = v9;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v12 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v7 + 64) = v12;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  OUTLINED_FUNCTION_17_8(v12, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  v13 = a3;
  v14 = OUTLINED_FUNCTION_39_42();
  *(_QWORD *)(v7 + 96) = v11;
  *(_QWORD *)(v7 + 104) = v12;
  *(_QWORD *)(v7 + 72) = v14;
  *(_QWORD *)(v7 + 80) = v15;
  OUTLINED_FUNCTION_17_8(v14, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
  v16 = a2;
  v17 = OUTLINED_FUNCTION_39_42();
  *(_QWORD *)(v7 + 136) = v11;
  *(_QWORD *)(v7 + 144) = v12;
  *(_QWORD *)(v7 + 112) = v17;
  *(_QWORD *)(v7 + 120) = v18;
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_38_36();
}

void CallCenter.conversationManager(_:conversation:updatedMessagesGroupPhoto:)()
{
  OUTLINED_FUNCTION_33_35();
  OUTLINED_FUNCTION_18_62();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_53_28();
}

void sub_1BD2BDEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, _UNKNOWN **a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, _UNKNOWN **a19)
{
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a1)
  {
    v24 = OUTLINED_FUNCTION_40_33();
    a18 = v23;
    a19 = &protocol witness table for CallCenter;
    a15 = v22;
    a13 = OUTLINED_FUNCTION_17_8(v24, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    a14 = &protocol witness table for TUConversation;
    a10 = v21;
    v25 = v22;
    v26 = v21;
    OUTLINED_FUNCTION_23_50((uint64_t)&a15, (uint64_t)&a10, v20, v19);
    OUTLINED_FUNCTION_45_34();
    v27 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&a10);
    OUTLINED_FUNCTION_34_6(v27, v28, v29, v30, v31, v32);
  }
  OUTLINED_FUNCTION_22_21();
}

void sub_1BD2BDFE4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;

  outlined consume of Data?(v2, v3);

}

void CallCenter.conversationManager(_:conversation:launchStateChanged:session:)()
{
  OUTLINED_FUNCTION_33_35();
  OUTLINED_FUNCTION_18_62();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_53_28();
}

void sub_1BD2BE04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, _UNKNOWN **a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, _UNKNOWN **a19)
{
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a1)
  {
    v24 = OUTLINED_FUNCTION_40_33();
    a18 = v23;
    a19 = &protocol witness table for CallCenter;
    a15 = v22;
    a13 = OUTLINED_FUNCTION_17_8(v24, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    a14 = &protocol witness table for TUConversation;
    a10 = v21;
    v25 = v22;
    v26 = v21;
    OUTLINED_FUNCTION_23_50((uint64_t)&a15, v20, v19, (uint64_t)&a10);
    OUTLINED_FUNCTION_45_34();
    v27 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&a10);
    OUTLINED_FUNCTION_34_6(v27, v28, v29, v30, v31, v32);
  }
  OUTLINED_FUNCTION_22_21();
}

void sub_1BD2BE120()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

}

void CallCenter.conversationManager(_:remoteScreenShareAttributesChanged:isLocallySharing:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_getObjectType();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v0 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v0 + 16) = xmmword_1BD6441D0;
  OUTLINED_FUNCTION_71_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TUScreenShareAttributes);
  v1 = String.init<A>(reflecting:)();
  v3 = v2;
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v3;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_38_36();
}

void sub_1BD2BE324()
{
  void *v0;
  void *v1;

  swift_unknownObjectRelease();
}

void CallCenter.conversationManager(_:conversation:buzzedMember:)()
{
  OUTLINED_FUNCTION_33_35();
  OUTLINED_FUNCTION_14_78();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_38_36();
}

void sub_1BD2BE380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, _UNKNOWN **a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, _UNKNOWN **a19)
{
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a1)
  {
    v23 = OUTLINED_FUNCTION_30_44();
    a18 = v22;
    a19 = &protocol witness table for CallCenter;
    a15 = v21;
    a13 = OUTLINED_FUNCTION_17_8(v23, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    a14 = &protocol witness table for TUConversation;
    a10 = v20;
    v24 = v21;
    v25 = v20;
    OUTLINED_FUNCTION_21_58((uint64_t)&a15, (uint64_t)&a10, v19);
    OUTLINED_FUNCTION_9_10();
    v26 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&a10);
    OUTLINED_FUNCTION_34_6(v26, v27, v28, v29, v30, v31);
  }
  OUTLINED_FUNCTION_22_21();
}

void sub_1BD2BE448()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

}

void CallCenter.conversationManager(_:collaborationChanged:for:collaborationState:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BE4A0(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BE550()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

}

void CallCenter.conversationManager(_:conversation:participant:addedCollaborationNotice:)()
{
  OUTLINED_FUNCTION_33_35();
  OUTLINED_FUNCTION_18_62();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_53_28();
}

void sub_1BD2BE5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, _UNKNOWN **a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, _UNKNOWN **a19)
{
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a1)
  {
    v24 = OUTLINED_FUNCTION_40_33();
    a18 = v23;
    a19 = &protocol witness table for CallCenter;
    a15 = v22;
    a13 = OUTLINED_FUNCTION_17_8(v24, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    a14 = &protocol witness table for TUConversation;
    a10 = v21;
    v25 = v22;
    v26 = v21;
    OUTLINED_FUNCTION_23_50((uint64_t)&a15, v19, v20, (uint64_t)&a10);
    OUTLINED_FUNCTION_45_34();
    v27 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&a10);
    OUTLINED_FUNCTION_34_6(v27, v28, v29, v30, v31, v32);
  }
  OUTLINED_FUNCTION_22_21();
}

void @objc CallCenter.conversationManager(_:conversation:participant:addedNotice:)(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void (*a7)(void))
{
  id v12;

  v12 = a3;
  a4;
  a5;
  a6;
  a1;
  a7();
  JUMPOUT(0x1BD2BE6A0);
}

void CallCenter.conversationManager(_:cameraMixedWithScreenDidChangeFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BE6FC(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BE79C()
{
  void *v0;
  void *v1;
  void *v2;

}

void CallCenter.conversationManager(_:screenSharingRequestsChangedFor:fromOldConversation:)()
{
  OUTLINED_FUNCTION_14_78();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_117_0();
}

#error "1BD2BE8AC: call analysis failed (funcsize=43)"

void sub_1BD2BE90C()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

}

void CallCenter.mediaController(_:participantMediaPrioritiesChangedFor:)()
{
  OUTLINED_FUNCTION_15_73();
  OUTLINED_FUNCTION_6_76();
  OUTLINED_FUNCTION_1_108();
  OUTLINED_FUNCTION_117_0();
}

void sub_1BD2BE960(uint64_t a1, uint64_t a2, ...)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va;

  va_start(va, a2);
  if (a1)
  {
    OUTLINED_FUNCTION_5_94();
    OUTLINED_FUNCTION_13_72();
    OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    OUTLINED_FUNCTION_12_71();
    v5 = v3;
    OUTLINED_FUNCTION_0_111((uint64_t)v2);
    OUTLINED_FUNCTION_113();
    v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
    OUTLINED_FUNCTION_34_6(v6, v7, v8, v9, v10, v11);
  }
  OUTLINED_FUNCTION_3_92();
}

void sub_1BD2BEA00()
{
  void *v0;
  void *v1;
  void *v2;

}

uint64_t CallCenter.reactionsController(_:conversation:participant:didReact:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t ObjectType;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  _QWORD v26[5];

  v6 = v5;
  ObjectType = swift_getObjectType();
  v12 = &v6[OBJC_IVAR____TtC15ConversationKit10CallCenter_delegate];
  OUTLINED_FUNCTION_1();
  result = MEMORY[0x1C3B752C0](v12);
  if (result)
  {
    v14 = *((_QWORD *)v12 + 1);
    v15 = swift_getObjectType();
    v26[3] = ObjectType;
    v26[4] = &protocol witness table for CallCenter;
    v26[0] = v6;
    v25[3] = OUTLINED_FUNCTION_17_8(v15, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    v25[4] = &protocol witness table for TUConversation;
    v25[0] = a2;
    v16 = *(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 144);
    v17 = v6;
    v18 = a2;
    v16(v26, v25, a3, a4, a5, v15, v14);
    swift_unknownObjectRelease();
    v19 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return OUTLINED_FUNCTION_34_6(v19, v20, v21, v22, v23, v24);
  }
  return result;
}

void CallCenter.reactionsController(_:conversation:participantDidStopReacting:)()
{
  OUTLINED_FUNCTION_33_35();
  OUTLINED_FUNCTION_14_78();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_38_36();
}

void sub_1BD2BEBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, _UNKNOWN **a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, _UNKNOWN **a19)
{
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a1)
  {
    v23 = OUTLINED_FUNCTION_30_44();
    a18 = v22;
    a19 = &protocol witness table for CallCenter;
    a15 = v21;
    a13 = OUTLINED_FUNCTION_17_8(v23, (unint64_t *)&lazy cache variable for type metadata for TUConversation);
    a14 = &protocol witness table for TUConversation;
    a10 = v20;
    v24 = v21;
    v25 = v20;
    OUTLINED_FUNCTION_21_58((uint64_t)&a15, (uint64_t)&a10, v19);
    OUTLINED_FUNCTION_9_10();
    v26 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&a10);
    OUTLINED_FUNCTION_34_6(v26, v27, v28, v29, v30, v31);
  }
  OUTLINED_FUNCTION_22_21();
}

void sub_1BD2BECC4()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

}

void CallCenter.routesChanged(for:)()
{
  uint64_t v0;
  uint64_t ObjectType;
  id v2;
  char v3;

  ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_17_8(ObjectType, (unint64_t *)&lazy cache variable for type metadata for NSObject);
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15ConversationKit10CallCenter_tuCallCenter), sel_routeController));
  v3 = static NSObject.== infix(_:_:)();

  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_52_26();
  }
  OUTLINED_FUNCTION_26_40();
}

void specialized PlaceholderCallCenter.downgradeToAVLess(for:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v27 - 8);
  v8 = MEMORY[0x1E0C80A78](v27);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v27 - v11;
  v13 = (void (*)(char *, char *, uint64_t))type metadata accessor for DispatchPredicate();
  v14 = *((_QWORD *)v13 - 1);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(a2 + OBJC_IVAR____TtC15ConversationKit21PlaceholderCallCenter_queue);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v18 = a1;
  v19 = v17;
  v20 = _dispatchPreconditionTest(_:)();
  (*(void (**)(_QWORD *, void (*)(char *, char *, uint64_t)))(v14 + 8))(v16, v13);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v21 = objc_msgSend(v18, sel_UUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  PlaceholderCallCenter.setAVMode(_:for:)();
  v13 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v20 = v27;
  v13(v10, v12, v27);
  swift_beginAccess();
  specialized Set._Variant.update(with:)((unint64_t)v10, (uint64_t)v6);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  swift_endAccess();
  if (one-time initialization token for conversationKit != -1)
LABEL_5:
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BD6441D0;
  v13(v6, v12, v20);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v20);
  specialized >> prefix<A>(_:)((uint64_t)v6);
  v24 = v23;
  v26 = v25;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v22 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v22 + 32) = v24;
  *(_QWORD *)(v22 + 40) = v26;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v20);

}

uint64_t partial apply for closure #1 in CallCenter.setGridDisplayMode(mode:for:)(id *a1)
{
  return closure #1 in CallCenter.setGridDisplayMode(mode:for:)(a1) & 1;
}

uint64_t partial apply for thunk for @callee_guaranteed (@guaranteed Call) -> (@unowned Bool)(uint64_t a1)
{
  uint64_t v1;

  return thunk for @callee_guaranteed (@guaranteed Call) -> (@unowned Bool)(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
}

void _sSo6TUCallCSbIggd_ABSbIeggd_TRTA_0(uint64_t a1)
{
  uint64_t v1;

  thunk for @callee_guaranteed (@guaranteed TUCall) -> (@unowned Bool)(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1BD2BF150()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallCenter.buzz(_:in:)()
{
  closure #1 in CallCenter.buzz(_:in:)();
}

void partial apply for closure #1 in CallCenter.kick(_:in:)()
{
  closure #1 in CallCenter.buzz(_:in:)();
}

void partial apply for closure #1 in CallCenter.approve(_:in:)()
{
  closure #1 in CallCenter.buzz(_:in:)();
}

void partial apply for closure #1 in CallCenter.reject(_:in:)()
{
  closure #1 in CallCenter.buzz(_:in:)();
}

uint64_t partial apply for closure #1 in CallCenter.generateLink(for:completionHandler:)(id *a1)
{
  uint64_t v1;

  return closure #1 in CallCenter.setDownlinkMuted(_:forRemoteParticipantsIn:)(a1, *(_QWORD **)(v1 + 16)) & 1;
}

void lazy protocol witness table accessor for type TUConversation and conformance NSObject(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = _sSo8NSObjectCMaTm_0(255, a2);
    atomic_store(MEMORY[0x1C3B750C8](a4, v6), a1);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD2BF27C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallCenter.conversationManager(_:activeRemoteParticipantsChangedFor:)(void *a1)
{
  uint64_t v1;

  return closure #1 in CallCenter.conversationManager(_:activeRemoteParticipantsChangedFor:)(a1, *(void **)(v1 + 16));
}

uint64_t type metadata accessor for CallCenter()
{
  return objc_opt_self();
}

uint64_t method lookup function for CallCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallCenter.__allocating_init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t partial apply for closure #1 in CallCenter.setDownlinkMuted(_:forRemoteParticipantsIn:)(id *a1)
{
  return partial apply for closure #1 in CallCenter.generateLink(for:completionHandler:)(a1) & 1;
}

uint64_t OUTLINED_FUNCTION_39_42()
{
  return String.init<A>(reflecting:)();
}

id CallRecordingEducationViewController.__allocating_init()()
{
  objc_class *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = objc_allocWithZone(v0);
  String.localizedCallRecording.getter();
  v2 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  String.localizedCallRecording.getter();
  v5 = outlined bridged method (mnbnnnn) of @objc CallRecordingEducationViewController.init(title:detailText:icon:contentLayout:)((uint64_t)v2, v3, v4, 0, 1, v1);

  return v5;
}

uint64_t key path setter for CallRecordingEducationViewController.delegate : CallRecordingEducationViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x68);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t CallRecordingEducationViewController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit36CallRecordingEducationViewController_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t CallRecordingEducationViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit36CallRecordingEducationViewController_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*CallRecordingEducationViewController.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit36CallRecordingEducationViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id closure #1 in variable initialization expression of CallRecordingEducationViewController.continueButton()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_boldButton);
  String.localizedCallRecording.getter();
  outlined bridged method (mbnnn) of @objc UIButton.setTitle(_:for:)(v1, v2, 0, v0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_:));
  objc_msgSend(v0, sel_addTarget_action_forControlEvents_, _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(), sel_handleTappedEducationScreenContinue, 64, _s15ConversationKit36CallRecordingEducationViewControllerCACIego_Ieggo_ACxRi_zRi0_zlyACIsegr_Iegnr_TR04_s15a5Kit36cdefG94C14continueButton33_655044DE3502CE4C2EC422ECD64F29E5LLSo010OBBoldTrayI0CvpfiAGyXEfU_ACycACcfu_Tf3nnpf_n, 0);
  swift_unknownObjectRelease();
  return v0;
}

id (*implicit closure #1 in closure #1 in variable initialization expression of CallRecordingEducationViewController.continueButton(void *a1))()
{
  id v2;

  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v2 = a1;
  return partial apply for implicit closure #2 in implicit closure #1 in closure #1 in variable initialization expression of CallRecordingEducationViewController.continueButton;
}

id implicit closure #2 in implicit closure #1 in closure #1 in variable initialization expression of CallRecordingEducationViewController.continueButton(void *a1)
{
  return objc_msgSend(a1, sel_self);
}

uint64_t _s15ConversationKit36CallRecordingEducationViewControllerCACIego_Ieggo_ACxRi_zRi0_zlyACIsegr_Iegnr_TR04_s15a5Kit36cdefG94C14continueButton33_655044DE3502CE4C2EC422ECD64F29E5LLSo010OBBoldTrayI0CvpfiAGyXEfU_ACycACcfu_Tf3nnpf_n@<X0>(void **a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  id (*v3)();
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = implicit closure #1 in closure #1 in variable initialization expression of CallRecordingEducationViewController.continueButton(*a1);
  v5 = v4;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v5;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned CallRecordingEducationViewController);
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))result;
  return result;
}

Swift::Void __swiftcall CallRecordingEducationViewController.setupView()()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  Class isa;
  id v28;
  Class v29;
  UIAction_optional v30;
  UIMenu_optional v31;

  OUTLINED_FUNCTION_42_2();
  v2 = v0;
  specialized static UIImage.image(named:)(v3);
  v5 = v4;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v4);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v7 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v6, sel_setContentMode_, 1), sel_buttonTray);
  objc_msgSend(v7, sel_addButton_, *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit36CallRecordingEducationViewController_continueButton]);

  v8 = OUTLINED_FUNCTION_0_15();
  objc_msgSend(v8, sel_addSubview_, v6);

  v9 = OUTLINED_FUNCTION_0_15();
  objc_msgSend(v9, sel_setBackgroundColor_, 0);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BD644B60;
  v11 = OUTLINED_FUNCTION_0_15();
  v12 = objc_msgSend(v11, sel_heightAnchor);

  v14 = OUTLINED_FUNCTION_123(v13, sel_view);
  if (v14)
  {
    v15 = v14;
    v16 = (void *)objc_opt_self();
    v17 = objc_msgSend(v15, sel_widthAnchor);
    OUTLINED_FUNCTION_40_1();
    v18 = objc_msgSend(v12, sel_constraintEqualToAnchor_multiplier_, v1, 0.4);
    OUTLINED_FUNCTION_8_10();

    *(_QWORD *)(v10 + 32) = v15;
    v19 = objc_msgSend(v6, sel_centerXAnchor);
    v20 = OUTLINED_FUNCTION_0_15();
    v21 = objc_msgSend(v20, sel_centerXAnchor);
    OUTLINED_FUNCTION_40_1();
    v22 = OUTLINED_FUNCTION_3_9();
    OUTLINED_FUNCTION_8_10();

    *(_QWORD *)(v10 + 40) = v20;
    v23 = objc_msgSend(v6, sel_bottomAnchor);
    v24 = OUTLINED_FUNCTION_0_15();
    v25 = objc_msgSend(v24, sel_bottomAnchor);
    OUTLINED_FUNCTION_40_1();
    v26 = OUTLINED_FUNCTION_3_9();
    OUTLINED_FUNCTION_8_10();

    *(_QWORD *)(v10 + 48) = v24;
    specialized Array._endMutation()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_activateConstraints_, isa);

    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIBarButtonItem);
    v30.value.super.super.isa = 0;
    v30.is_nil = 0;
    v29 = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemCancel, v30, v31).super.super.isa;
    -[objc_class setAction:](v29, sel_setAction_, sel_handleTappedEducationScreenCancel);
    v28 = OUTLINED_FUNCTION_123((uint64_t)-[objc_class setTarget:](v29, sel_setTarget_, v2), sel_navigationItem);
    objc_msgSend(v28, sel_setLeftBarButtonItem_, v29);

    objc_msgSend(v2, sel_setModalPresentationStyle_, 7);
  }
  else
  {
    __break(1u);
  }
}

void CallRecordingEducationViewController.handleTappedEducationScreenContinue()()
{
  CallRecordingEducationViewController.handleTappedEducationScreenContinue()((uint64_t)&unk_1E762AD58, (uint64_t)partial apply for closure #1 in CallRecordingEducationViewController.handleTappedEducationScreenContinue(), (uint64_t)&block_descriptor_6_5);
}

uint64_t closure #1 in CallRecordingEducationViewController.handleTappedEducationScreenContinue()(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x60))();
  if (result)
  {
    v3 = v2;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void CallRecordingEducationViewController.handleTappedEducationScreenCancel()()
{
  CallRecordingEducationViewController.handleTappedEducationScreenContinue()((uint64_t)&unk_1E762AD08, (uint64_t)partial apply for closure #1 in CallRecordingEducationViewController.handleTappedEducationScreenCancel(), (uint64_t)&block_descriptor_52);
}

void CallRecordingEducationViewController.handleTappedEducationScreenContinue()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  v9[4] = a2;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = thunk for @escaping @callee_guaranteed () -> ();
  v9[3] = a3;
  v7 = _Block_copy(v9);
  v8 = v3;
  swift_release();
  objc_msgSend(v8, sel_dismissViewControllerAnimated_completion_, 1, v7);
  _Block_release(v7);
}

uint64_t closure #1 in CallRecordingEducationViewController.handleTappedEducationScreenCancel()(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x60))();
  if (result)
  {
    v3 = v2;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void CallRecordingEducationViewController.__allocating_init(title:detailText:symbolName:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  objc_class *v8;
  void *v14;
  void *v15;
  void *v16;

  v8 = v7;
  v14 = (void *)MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_25();
  if (!a4)
  {
    v15 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v16 = 0;
    goto LABEL_6;
  }
  v15 = (void *)MEMORY[0x1C3B72E00](a3, a4);
  OUTLINED_FUNCTION_21_0();
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v16 = (void *)MEMORY[0x1C3B72E00](a5, a6);
  swift_bridgeObjectRelease();
LABEL_6:
  objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_contentLayout_, v14, v15, v16, a7);

  OUTLINED_FUNCTION_65_1();
}

void CallRecordingEducationViewController.init(title:detailText:symbolName:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  void *v41;
  void *v42;
  objc_class *v43;

  OUTLINED_FUNCTION_42_2();
  a20 = v22;
  a21 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit36CallRecordingEducationViewController_delegate);
  v38 = OBJC_IVAR____TtC15ConversationKit36CallRecordingEducationViewController_continueButton;
  v39 = v21;
  *(_QWORD *)&v21[v38] = closure #1 in variable initialization expression of CallRecordingEducationViewController.continueButton();

  v40 = (void *)MEMORY[0x1C3B72E00](v37, v35);
  swift_bridgeObjectRelease();
  if (!v31)
  {
    v41 = 0;
    if (v27)
      goto LABEL_3;
LABEL_5:
    v42 = 0;
    goto LABEL_6;
  }
  v41 = (void *)MEMORY[0x1C3B72E00](v33, v31);
  OUTLINED_FUNCTION_21_0();
  if (!v27)
    goto LABEL_5;
LABEL_3:
  v42 = (void *)MEMORY[0x1C3B72E00](v29, v27);
  OUTLINED_FUNCTION_25();
LABEL_6:
  v43 = (objc_class *)type metadata accessor for CallRecordingEducationViewController();
  a9.receiver = v39;
  a9.super_class = v43;
  objc_msgSendSuper2(&a9, sel_initWithTitle_detailText_symbolName_contentLayout_, v40, v41, v42, v25);

  OUTLINED_FUNCTION_9_5();
}

#error "1BD2BFEA8: call analysis failed (funcsize=41)"

void CallRecordingEducationViewController.__allocating_init(title:detailText:icon:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  objc_class *v6;
  objc_class *v7;
  void *v12;
  void *v13;

  v7 = v6;
  v12 = (void *)MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_21_0();
  if (a4)
  {
    v13 = (void *)MEMORY[0x1C3B72E00](a3, a4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_contentLayout_, v12, v13, a5, a6);

  OUTLINED_FUNCTION_65_1();
}

void CallRecordingEducationViewController.init(title:detailText:icon:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  void *v39;
  objc_class *v40;

  OUTLINED_FUNCTION_42_2();
  a20 = v22;
  a21 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit36CallRecordingEducationViewController_delegate);
  v36 = OBJC_IVAR____TtC15ConversationKit36CallRecordingEducationViewController_continueButton;
  v37 = v21;
  *(_QWORD *)&v21[v36] = closure #1 in variable initialization expression of CallRecordingEducationViewController.continueButton();

  v38 = (void *)MEMORY[0x1C3B72E00](v35, v33);
  OUTLINED_FUNCTION_25();
  if (v29)
  {
    v39 = (void *)MEMORY[0x1C3B72E00](v31, v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = 0;
  }
  v40 = (objc_class *)type metadata accessor for CallRecordingEducationViewController();
  a9.receiver = v37;
  a9.super_class = v40;
  objc_msgSendSuper2(&a9, sel_initWithTitle_detailText_icon_contentLayout_, v38, v39, v27, v25);

  OUTLINED_FUNCTION_9_5();
}

#error "1BD2C00A8: call analysis failed (funcsize=36)"

id CallRecordingEducationViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallRecordingEducationViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id outlined bridged method (mnbnnnn) of @objc CallRecordingEducationViewController.init(title:detailText:icon:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v10;
  id v11;

  v10 = (void *)MEMORY[0x1C3B72E00](a2, a3);
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a6, sel_initWithTitle_detailText_icon_contentLayout_, a1, v10, a4, a5);

  return v11;
}

uint64_t type metadata accessor for CallRecordingEducationViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BD2C01CC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x60))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t method lookup function for CallRecordingEducationViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallRecordingEducationViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of CallRecordingEducationViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CallRecordingEducationViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CallRecordingEducationViewController.setupView()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t sub_1BD2C028C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CallRecordingEducationViewController.handleTappedEducationScreenCancel()()
{
  uint64_t v0;

  return closure #1 in CallRecordingEducationViewController.handleTappedEducationScreenCancel()(*(_QWORD **)(v0 + 16));
}

uint64_t partial apply for closure #1 in CallRecordingEducationViewController.handleTappedEducationScreenContinue()()
{
  uint64_t v0;

  return closure #1 in CallRecordingEducationViewController.handleTappedEducationScreenContinue()(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1BD2C02C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed () -> (@owned CallRecordingEducationViewController)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

id partial apply for implicit closure #2 in implicit closure #1 in closure #1 in variable initialization expression of CallRecordingEducationViewController.continueButton()
{
  uint64_t v0;

  return implicit closure #2 in implicit closure #1 in closure #1 in variable initialization expression of CallRecordingEducationViewController.continueButton(*(void **)(v0 + 16));
}

uint64_t ParticipantViewDragController.dragEnabled.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 16);
}

void ParticipantViewDragController.dragEnabled.setter(char a1)
{
  uint64_t v1;
  char v3;

  OUTLINED_FUNCTION_2_0();
  v3 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = a1;
  ParticipantViewDragController.dragEnabled.didset(v3);
  OUTLINED_FUNCTION_32();
}

void ParticipantViewDragController.dragEnabled.didset(char a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;

  v2 = a1 & 1;
  swift_beginAccess();
  if (*(unsigned __int8 *)(v1 + 16) != v2)
  {
    objc_msgSend(*(id *)(v1 + 96), sel_setEnabled_);
    v3 = MEMORY[0x1C3B752C0](v1 + 40);
    if (v3)
    {
      v4 = (void *)v3;
      v5 = *(_QWORD *)(v1 + 48);
      ObjectType = swift_getObjectType();
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 + 16))(*(unsigned __int8 *)(v1 + 16), ObjectType, v5);

    }
  }
}

void ParticipantViewDragController.dragEnabled.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  OUTLINED_FUNCTION_2_0();
  *((_BYTE *)v3 + 32) = *(_BYTE *)(v1 + 16);
  OUTLINED_FUNCTION_18();
}

void ParticipantViewDragController.dragEnabled.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  ParticipantViewDragController.dragEnabled.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

uint64_t ParticipantViewDragController.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v0 + 24);
}

uint64_t ParticipantViewDragController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return OUTLINED_FUNCTION_113();
}

void ParticipantViewDragController.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_2_0();
  v4 = MEMORY[0x1C3B752C0](v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v3[3] = v4;
  v3[4] = v5;
  OUTLINED_FUNCTION_18();
}

uint64_t ParticipantViewDragController.isDragging.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(unsigned __int8 *)(v0 + 88);
}

void ParticipantViewDragController.isDragging.setter(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 88) = a1;
  OUTLINED_FUNCTION_32();
}

uint64_t (*ParticipantViewDragController.isDragging.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t ParticipantViewDragController.__allocating_init(participantView:constraintIdentifier:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_7_21();
  v0 = (void *)OUTLINED_FUNCTION_8_47();
  return specialized ParticipantViewDragController.__allocating_init(participantView:constraintIdentifier:)(v0, v1, v2, v3, v4, v5);
}

uint64_t ParticipantViewDragController.init(participantView:constraintIdentifier:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_7_21();
  v0 = (void *)OUTLINED_FUNCTION_8_47();
  return specialized ParticipantViewDragController.init(participantView:constraintIdentifier:)(v0, v1, v2, v3, v4, v5);
}

id static ParticipantViewDragController.boingAnimator(usingVelocity:)(double a1, double a2)
{
  id v4;
  id v5;

  if (one-time initialization token for springStiffness != -1)
    swift_once();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA0]), sel_initWithMass_stiffness_damping_initialVelocity_, 4.5, *(double *)&static Animation.LocalPreview.springStiffness, 95.0, a1 * 0.00333333333, a2 * 0.00333333333);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F38]), sel_initWithDuration_timingParameters_, v4, 0.0);

  return v5;
}

Swift::Void __swiftcall ParticipantViewDragController.handlePanGestureRecognizer(_:)(UIPanGestureRecognizer *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  Swift::String v14;
  Swift::String v15;
  id v16;

  switch((unint64_t)-[UIPanGestureRecognizer state](a1, sel_state))
  {
    case 0uLL:
      break;
    case 1uLL:
      OUTLINED_FUNCTION_5_72();
    case 2uLL:
      v7 = (void *)MEMORY[0x1C3B752C0](v1 + 40);
      if (v7)
      {
        v8 = v7;
        v9 = objc_msgSend(v7, sel_superview);

      }
      else
      {
        v9 = 0;
      }
      -[UIPanGestureRecognizer locationInView:](a1, sel_locationInView_, v9);
      v11 = v10;
      v13 = v12;

      ParticipantViewDragController.handleDragDidMove(to:)((CGPoint)__PAIR128__(v13, v11));
      return;
    case 3uLL:
    case 4uLL:
    case 5uLL:
      v3 = (void *)MEMORY[0x1C3B752C0](v1 + 40);
      if (v3)
      {
        v4 = v3;
        v16 = objc_msgSend(v3, sel_superview);

        if (v16)
        {
          -[UIPanGestureRecognizer velocityInView:](a1, sel_velocityInView_, v16);
          ParticipantViewDragController.handleDragDidEnd(with:)((CGPoint)__PAIR128__(v6, v5));
        }
      }
      return;
    default:
      _StringGuts.grow(_:)(73);
      v14._object = (void *)0x80000001BD681DD0;
      v14._countAndFlagsBits = 0xD000000000000047;
      String.append(_:)(v14);
      -[UIPanGestureRecognizer state](a1, sel_state);
      v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x1BD2C09B0);
  }
  OUTLINED_FUNCTION_1_109();
}

Swift::Void __swiftcall ParticipantViewDragController.handleDragDidBegin(with:)(CGPoint with)
{
  uint64_t v1;
  CGFloat y;
  CGFloat x;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  y = with.y;
  x = with.x;
  v4 = (void *)MEMORY[0x1C3B752C0](v1 + 40);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_superview);

    if (v6)
    {
      *(CGFloat *)(v1 + 72) = x;
      *(CGFloat *)(v1 + 80) = y;
      OUTLINED_FUNCTION_2_0();
      *(_BYTE *)(v1 + 88) = 1;
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_5_72();
    }
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BD6441D0;
  if (MEMORY[0x1C3B752C0](v1 + 40))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DraggableView);
    v8 = String.init<A>(reflecting:)();
    v10 = v9;
  }
  else
  {
    v10 = 0xE300000000000000;
    v8 = 7104878;
  }
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  ParticipantViewDragController.dragEnabled.setter(0);
  OUTLINED_FUNCTION_1_109();
}

Swift::Void __swiftcall ParticipantViewDragController.handleDragDidMove(to:)(CGPoint to)
{
  OUTLINED_FUNCTION_2_10();
}

void sub_1BD2C0BAC(void *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  id v5;
  void *v6;
  double v7;
  double v8;
  id v9;

  if (a1)
  {
    OUTLINED_FUNCTION_2_0();
    if (*(_BYTE *)(v1 + 88) == 1)
    {
      v5 = objc_msgSend(a1, sel_superview);
      if (v5)
      {
        v6 = v5;
        v7 = v3 - *(double *)(v1 + 72);
        v8 = v2 - *(double *)(v1 + 80);
        v9 = a1;
        objc_msgSend(v9, sel_frame);
        objc_msgSend(v9, sel_setFrame_, v7, v8);

        return;
      }
    }

  }
  OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 88) = 0;
}

Swift::Void __swiftcall ParticipantViewDragController.handleDragDidEnd(with:)(CGPoint with)
{
  OUTLINED_FUNCTION_2_10();
}

uint64_t sub_1BD2C0C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  if (a1)
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_72();
  }
  ParticipantViewDragController.dragEnabled.setter(0);
  result = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 88) = 0;
  return result;
}

uint64_t ParticipantViewDragController.deinit()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 24);
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 40);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t ParticipantViewDragController.__deallocating_deinit()
{
  ParticipantViewDragController.deinit();
  return swift_deallocClassInstance();
}

uint64_t specialized ParticipantViewDragController.__allocating_init(participantView:constraintIdentifier:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;

  v11 = swift_allocObject();
  return specialized ParticipantViewDragController.init(participantView:constraintIdentifier:)(a1, a2, a3, v11, a5, a6);
}

uint64_t specialized ParticipantViewDragController.init(participantView:constraintIdentifier:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11;

  *(_BYTE *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a4 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a4 + 72) = 0;
  *(_QWORD *)(a4 + 80) = 0;
  *(_BYTE *)(a4 + 88) = 0;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AA0]), sel_init);
  *(_QWORD *)(a4 + 96) = v11;
  *(_QWORD *)(a4 + 48) = a6;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(a4 + 56) = a2;
  *(_QWORD *)(a4 + 64) = a3;
  objc_msgSend(v11, sel_addTarget_action_, a4, sel_handlePanGestureRecognizer_);
  objc_msgSend(v11, sel_setEnabled_, 0);
  objc_msgSend(a1, sel_addGestureRecognizer_, v11);

  return a4;
}

void sub_1BD2C0F6C(char *a1)
{
  ParticipantViewDragController.dragEnabled.setter(*a1);
}

uint64_t dispatch thunk of ParticipantViewDragControllerDelegate.participantViewDragControllerDidStartDrag(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ParticipantViewDragControllerDelegate.participantViewDragController(_:didEndDragAtPosition:velocity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DraggableView.dragEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DraggableView.dragEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DraggableView.dragEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for ParticipantViewDragController()
{
  return objc_opt_self();
}

uint64_t method lookup function for ParticipantViewDragController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantViewDragController.__allocating_init(participantView:constraintIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void one-time initialization function for interItemSpacing()
{
  static BadgedLabel.Constants.interItemSpacing = 0x4008000000000000;
}

uint64_t key path setter for BadgedLabel.badge : BadgedLabel(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x68);
  v4 = *a1;
  return v3(v2);
}

id BadgedLabel.badge.didset(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[4];

  v22[3] = *MEMORY[0x1E0C80C00];
  swift_getObjectType();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationControls);
  v4 = a1;
  v5 = v1;
  v6 = v4;
  v7 = (char *)v5;
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22[0] = v21;
    *(_DWORD *)v10 = 136446722;
    v12 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    v14 = (void **)&v7[OBJC_IVAR____TtC15ConversationKit11BadgedLabel_badge];
    swift_beginAccess();
    v15 = *v14;
    if (*v14)
    {
      v20 = v10 + 22;
      v16 = v15;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v11 = v15;

    *(_WORD *)(v10 + 22) = 2112;
    if (a1)
      v17 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v11[1] = a1;

    _os_log_impl(&dword_1BD004000, v8, v9, "[%{public}s] setting badge to %@ from %@", (uint8_t *)v10, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v21, -1, -1);
    MEMORY[0x1C3B751B8](v10, -1, -1);

  }
  else
  {

  }
  objc_msgSend(v6, sel_removeFromSuperview, v20);
  v18 = &v7[OBJC_IVAR____TtC15ConversationKit11BadgedLabel_badge];
  swift_beginAccess();
  if (*(_QWORD *)v18)
    objc_msgSend(v7, sel_addSubview_);
  return objc_msgSend(v7, sel_setNeedsLayout);
}

void *BadgedLabel.badge.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit11BadgedLabel_badge);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void BadgedLabel.badge.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit11BadgedLabel_badge);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  BadgedLabel.badge.didset(v4);

}

void (*BadgedLabel.badge.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit11BadgedLabel_badge);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  return BadgedLabel.badge.modify;
}

void BadgedLabel.badge.modify(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    BadgedLabel.badge.setter(v3);

  }
  else
  {
    BadgedLabel.badge.setter(*(void **)(*(_QWORD *)a1 + 24));
  }
  free(v2);
}

id BadgedLabel.attributedText.getter()
{
  uint64_t v0;

  return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC15ConversationKit11BadgedLabel_label), sel_attributedText));
}

void BadgedLabel.attributedText.setter(void *a1)
{
  char *v1;

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit11BadgedLabel_label], sel_setAttributedText_, a1);
  objc_msgSend(v1, sel_setNeedsLayout);

}

void (*BadgedLabel.attributedText.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit11BadgedLabel_label), sel_attributedText);
  return BadgedLabel.attributedText.modify;
}

void BadgedLabel.attributedText.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    BadgedLabel.attributedText.setter(v2);

  }
  else
  {
    BadgedLabel.attributedText.setter(*a1);
  }
}

id BadgedLabel.font.getter()
{
  uint64_t v0;
  id result;

  result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                 + OBJC_IVAR____TtC15ConversationKit11BadgedLabel_label), sel_font));
  if (!result)
    __break(1u);
  return result;
}

double BadgedLabel.glyphInsetFromTop.getter()
{
  uint64_t *v0;
  void *v1;
  double v2;
  double v3;
  void *v4;
  void *v5;
  double MinY;
  CGRect v8;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit11BadgedLabel_label);
  objc_msgSend(v1, sel__tightBoundingRectOfFirstLine);
  objc_msgSend(v1, sel_convertPoint_toCoordinateSpace_, v0);
  v3 = v2;
  v4 = (void *)OUTLINED_FUNCTION_3_67(*v0);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_frame);
    MinY = CGRectGetMinY(v8);

    if (MinY < v3)
      return MinY;
  }
  return v3;
}

id BadgedLabel.__allocating_init(label:badge:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return BadgedLabel.init(label:badge:)(a1, a2);
}

id BadgedLabel.init(label:badge:)(void *a1, void *a2)
{
  char *v2;
  void **v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  v5 = (void **)&v2[OBJC_IVAR____TtC15ConversationKit11BadgedLabel_badge];
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit11BadgedLabel_badge] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit11BadgedLabel_label] = a1;
  OUTLINED_FUNCTION_2_0();
  v6 = *v5;
  *v5 = a2;
  v7 = a1;
  v8 = a2;

  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for BadgedLabel();
  v9 = objc_msgSendSuper2(&v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v9, sel_addSubview_, v7);
  if (a2)
  {
    v10 = v9;
    objc_msgSend(v10, sel_addSubview_, v8);

  }
  return v9;
}

uint64_t type metadata accessor for BadgedLabel()
{
  return objc_opt_self();
}

uint64_t BadgedLabel.__allocating_init(font:textColor:badge:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  UILabel *v8;
  uint64_t v9;
  UIColor_optional v11;

  v3 = v2;
  type metadata accessor for UILabel();
  v6 = a1;
  v7 = a2;
  v11.value.super.isa = (Class)a2;
  UILabel.init(font:textColor:)(v8, (UIFont)v6, v11);
  v9 = (*(uint64_t (**)(void))(v3 + 160))();

  return v9;
}

id BadgedLabel.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void BadgedLabel.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit11BadgedLabel_badge] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall BadgedLabel.layoutSubviews()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  _BOOL4 v23;
  double v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  _DWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double Width;
  double Height;
  void *v57;
  double v58;
  double v59;
  double v60;
  os_log_type_t v61;
  _DWORD *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  os_log_type_t v81;
  _DWORD *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  double v103;
  id v104;
  SEL v105;
  os_log_type_t v106;
  _DWORD *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  os_log_type_t v126;
  _DWORD *v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  double v147;
  double MaxX;
  CGFloat v149;
  os_log_type_t v150;
  _DWORD *v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  NSObject *v170;
  os_log_type_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  void *v190;
  id v191;
  id v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t (*v198)(void);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  id v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  id v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t ObjectType;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  double v224;
  CGRect v225;
  CGRect v226;
  CGRect v227;
  CGRect v228;
  CGRect v229;

  ObjectType = swift_getObjectType();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = v0;
  OUTLINED_FUNCTION_38_3();
  v4 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_7_9(v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 136446466;
    v6 = OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_27_41(v6, v7, v8, v9, v10, v11);
    OUTLINED_FUNCTION_17_56();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_45();
    OUTLINED_FUNCTION_2_2(v12, sel_bounds);
    v13 = CGRect.description.getter();
    OUTLINED_FUNCTION_27_41(v13, v14, v15, v16, v17, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v0, v1, "[%{public}s][sizing] bounds %s", v5);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_2_2(v19, sel_bounds);
  v22 = BadgedLabel.makeBadgeSize(fitting:)(v20, v21);
  v23 = v22 > 2.22507386e-308;
  if (v24 <= 2.22507386e-308)
    v23 = 0;
  HIDWORD(v211) = v23;
  OUTLINED_FUNCTION_38_3();
  v25 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_7_9(v25))
  {
    v26 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v26 = 136446466;
    v27 = OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_36_39(v27, v28, v29, v30, v31, v32, v33, v34, v194, (uint64_t)v203, v211, ObjectType);
    OUTLINED_FUNCTION_17_56();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_45();
    OUTLINED_FUNCTION_21_59();
    v35 = OUTLINED_FUNCTION_9_75();
    OUTLINED_FUNCTION_36_39(v35, v36, v37, v38, v39, v40, v41, v42, v195, (uint64_t)v204, v212, v218);
    OUTLINED_FUNCTION_17_56();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v3, v1, "[%{public}s][layout] badgeSize %s", v26);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_38_3();
  v43 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_7_9(v43))
  {
    v44 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *v44 = 136446466;
    v45 = OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_27_41(v45, v46, v47, v48, v49, v50);
    OUTLINED_FUNCTION_17_56();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_37_35();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_28_50(&dword_1BD004000, v51, v52, "[%{public}s][layout] hasBadge %{BOOL}d");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_2_2(v53, sel_bounds);
  Width = CGRectGetWidth(v225);
  if (HIDWORD(v211))
  {
    if (one-time initialization token for interItemSpacing != -1)
      v54 = swift_once();
    Width = Width - v22 - *(double *)&static BadgedLabel.Constants.interItemSpacing;
  }
  OUTLINED_FUNCTION_2_2(v54, sel_bounds);
  Height = CGRectGetHeight(v226);
  v57 = *(Class *)((char *)&v3->isa + OBJC_IVAR____TtC15ConversationKit11BadgedLabel_label);
  objc_msgSend(v57, sel_sizeThatFits_, Width, Height);
  v59 = v58;
  v224 = v60;
  if (Width < v60)
    v224 = Width;
  OUTLINED_FUNCTION_38_3();
  v61 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_41_3(v61))
  {
    v62 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_39_43();
    *v62 = 136446466;
    v63 = OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_11_72(v63, v64, v65, v66, v67, v68, v69, v70, v194, (uint64_t)v203, v211, ObjectType);
    OUTLINED_FUNCTION_2_97();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_34_31();
    OUTLINED_FUNCTION_21_59();
    v71 = OUTLINED_FUNCTION_9_75();
    OUTLINED_FUNCTION_11_72(v71, v72, v73, v74, v75, v76, v77, v78, v196, (uint64_t)v205, v213, v219);
    OUTLINED_FUNCTION_3_93();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_77(&dword_1BD004000, v79, v80, "[%{public}s][layout] labelFittingSize %s");
    OUTLINED_FUNCTION_14_79();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_38_3();
  v81 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_41_3(v81))
  {
    v82 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_39_43();
    *v82 = 136446466;
    v83 = OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_11_72(v83, v84, v85, v86, v87, v88, v89, v90, v194, (uint64_t)v57, v211, ObjectType);
    OUTLINED_FUNCTION_2_97();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_34_31();
    OUTLINED_FUNCTION_21_59();
    v91 = OUTLINED_FUNCTION_9_75();
    OUTLINED_FUNCTION_11_72(v91, v92, v93, v94, v95, v96, v97, v98, v197, (uint64_t)v206, v214, v220);
    OUTLINED_FUNCTION_3_93();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_77(&dword_1BD004000, v99, v100, "[%{public}s][layout] labelSize %s");
    OUTLINED_FUNCTION_14_79();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_2_2(v101, sel_bounds);
  CGRectGetHeight(v227);
  v198 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & (uint64_t)v3->isa) + 0x60);
  v102 = v198();
  v103 = OUTLINED_FUNCTION_40_34();
  objc_msgSend(v104, v105, v103);

  OUTLINED_FUNCTION_38_3();
  v106 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_41_3(v106))
  {
    v107 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_39_43();
    *v107 = 136446466;
    v108 = OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_11_72(v108, v109, v110, v111, v112, v113, v114, v115, (uint64_t)v198, (uint64_t)v57, v211, ObjectType);
    OUTLINED_FUNCTION_2_97();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_41_28();
    type metadata accessor for CGPoint(0);
    v116 = OUTLINED_FUNCTION_9_75();
    OUTLINED_FUNCTION_11_72(v116, v117, v118, v119, v120, v121, v122, v123, v199, (uint64_t)v207, v215, v221);
    OUTLINED_FUNCTION_3_93();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_77(&dword_1BD004000, v124, v125, "[%{public}s][layout] badgeOrigin %s");
    OUTLINED_FUNCTION_14_79();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_38_3();
  v126 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_41_3(v126))
  {
    v127 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_39_43();
    *v127 = 136446466;
    v128 = OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_11_72(v128, v129, v130, v131, v132, v133, v134, v135, (uint64_t)v198, (uint64_t)v57, v211, ObjectType);
    OUTLINED_FUNCTION_2_97();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_41_28();
    type metadata accessor for CGRect(0);
    v136 = OUTLINED_FUNCTION_9_75();
    OUTLINED_FUNCTION_11_72(v136, v137, v138, v139, v140, v141, v142, v143, v200, (uint64_t)v208, v216, v222);
    OUTLINED_FUNCTION_3_93();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_77(&dword_1BD004000, v144, v145, "[%{public}s][layout] badgeFrame %s");
    OUTLINED_FUNCTION_14_79();
    OUTLINED_FUNCTION_60();
  }

  v147 = 0.0;
  if (HIDWORD(v211))
  {
    v228.origin.x = OUTLINED_FUNCTION_40_34();
    MaxX = CGRectGetMaxX(v228);
    if (one-time initialization token for interItemSpacing != -1)
      v146 = swift_once();
    v147 = MaxX + *(double *)&static BadgedLabel.Constants.interItemSpacing;
  }
  OUTLINED_FUNCTION_2_2(v146, sel_bounds);
  v149 = (CGRectGetHeight(v229) - v59) * 0.5;
  OUTLINED_FUNCTION_2_0();
  objc_msgSend(v57, sel_setFrame_, v147, v149, v224, v59);
  OUTLINED_FUNCTION_38_3();
  v150 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_41_3(v150))
  {
    v151 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *v151 = 136446466;
    v152 = OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_33_36(v152, v153, v154, v155, v156, v157, v158, v159, (uint64_t)v198, (uint64_t)v57);
    OUTLINED_FUNCTION_2_97();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_34_31();
    type metadata accessor for CGPoint(0);
    v160 = OUTLINED_FUNCTION_9_75();
    OUTLINED_FUNCTION_33_36(v160, v161, v162, v163, v164, v165, v166, v167, v201, (uint64_t)v209);
    OUTLINED_FUNCTION_3_93();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_77(&dword_1BD004000, v168, v169, "[%{public}s][layout] labelOrigin %s");
    OUTLINED_FUNCTION_14_79();
    OUTLINED_FUNCTION_60();
  }

  v170 = v3;
  OUTLINED_FUNCTION_38_3();
  v171 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_7_9(v171))
  {
    v172 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v172 = 136446466;
    v173 = OUTLINED_FUNCTION_11_5();
    OUTLINED_FUNCTION_33_36(v173, v174, v175, v176, v177, v178, v179, v180, (uint64_t)v198, (uint64_t)v57);
    OUTLINED_FUNCTION_17_56();
    swift_bridgeObjectRelease();
    *(_WORD *)(v172 + 12) = 2080;
    objc_msgSend(v57, sel_frame);
    type metadata accessor for CGRect(0);
    v181 = String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_33_36(v181, v182, v183, v184, v185, v186, v187, v188, v202, (uint64_t)v210);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v102, v1, "[%{public}s][layout] label.frame %s", (uint8_t *)v172);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  if (-[NSObject effectiveUserInterfaceLayoutDirection](v170, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
  {
    v189 = (void *)v198();
    v190 = v189;
    v223 = MEMORY[0x1E0DEE9D8];
    if (v189)
    {
      v191 = v189;
      MEMORY[0x1C3B7301C](v57);
      if (*(_QWORD *)((v223 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v223 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        OUTLINED_FUNCTION_32_7();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      v192 = v57;
    }
    v193 = v57;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v223 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v223 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      OUTLINED_FUNCTION_32_7();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    specialized Sequence.forEach(_:)(v223, v170);
    swift_bridgeObjectRelease();
  }
}

CGSize __swiftcall BadgedLabel.sizeThatFits(_:)(CGSize a1)
{
  NSObject *v1;
  os_log_type_t v2;
  os_log_type_t v3;
  NSObject *v4;
  double height;
  double width;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  double v22;
  double v23;
  double v24;
  _BOOL4 v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  _DWORD *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  double v84;
  double v85;
  CGSize result;
  uint64_t ObjectType;

  v4 = v1;
  height = a1.height;
  width = a1.width;
  ObjectType = swift_getObjectType();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = type metadata accessor for Logger();
  v8 = __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
  Logger.logObject.getter();
  v9 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_7_9(v9))
  {
    v10 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v10 = 136446466;
    v11 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_16_26(v11, v12, v13, v14, v15);
    OUTLINED_FUNCTION_17_56();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_45();
    OUTLINED_FUNCTION_21_59();
    v16 = String.init<A>(reflecting:)();
    OUTLINED_FUNCTION_16_26(v16, v17, v18, v19, v20);
    OUTLINED_FUNCTION_17_56();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v8, v3, "[%{public}s][sizing] fittingSize %s", v10);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  v21 = v4;
  v22 = BadgedLabel.makeBadgeSize(fitting:)(width, height);
  v24 = v23;
  v25 = v23 > 2.22507386e-308 && v22 > 2.22507386e-308;
  OUTLINED_FUNCTION_38_3();
  v26 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_7_9(v26))
  {
    v27 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v27 = 136446466;
    v28 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_16_26(v28, v29, v30, v31, v32);
    OUTLINED_FUNCTION_17_56();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_45();
    OUTLINED_FUNCTION_21_59();
    v33 = OUTLINED_FUNCTION_20_59();
    OUTLINED_FUNCTION_16_26(v33, v34, v35, v36, v37);
    OUTLINED_FUNCTION_17_56();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v4, v3, "[%{public}s][sizing] badgeSize %s", v27);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_38_3();
  v38 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_7_9(v38))
  {
    v39 = (_DWORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *v39 = 136446466;
    v40 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_38_37(v40, v41, v42);
    OUTLINED_FUNCTION_17_56();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_37_35();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_28_50(&dword_1BD004000, v43, v44, "[%{public}s][sizing] hasBadge %{BOOL}d");
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v45 = width;
  if (v25)
  {
    if (one-time initialization token for interItemSpacing != -1)
      swift_once();
    v45 = width - v22 - *(double *)&static BadgedLabel.Constants.interItemSpacing;
  }
  objc_msgSend(*(id *)((char *)&v4->isa + OBJC_IVAR____TtC15ConversationKit11BadgedLabel_label), sel_sizeThatFits_, v45, height, ObjectType);
  v47 = v46;
  v49 = v48;
  OUTLINED_FUNCTION_38_3();
  v50 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_4_14(v50))
  {
    v51 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v51 = 136446466;
    v52 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_16_26(v52, v53, v54, v55, v56);
    OUTLINED_FUNCTION_22_56();
    OUTLINED_FUNCTION_25();
    *(_WORD *)(v51 + 12) = 2080;
    OUTLINED_FUNCTION_21_59();
    v57 = OUTLINED_FUNCTION_20_59();
    OUTLINED_FUNCTION_16_26(v57, v58, v59, v60, v61);
    OUTLINED_FUNCTION_22_56();
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v21, v2, "[%{public}s][sizing] labelFittingSize %s", (uint8_t *)v51);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_38_3();
  v62 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_4_14(v62))
  {
    v63 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v63 = 136446466;
    v64 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_16_26(v64, v65, v66, v67, v68);
    OUTLINED_FUNCTION_22_56();
    OUTLINED_FUNCTION_25();
    *(_WORD *)(v63 + 12) = 2080;
    OUTLINED_FUNCTION_21_59();
    v69 = OUTLINED_FUNCTION_20_59();
    OUTLINED_FUNCTION_16_26(v69, v70, v71, v72, v73);
    OUTLINED_FUNCTION_22_56();
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v21, v2, "[%{public}s][sizing] labelSize %s", (uint8_t *)v63);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }

  if (v24 <= v49)
    v24 = v49;
  if (v25)
  {
    if (one-time initialization token for interItemSpacing != -1)
      swift_once();
    v47 = v47 + v22 + *(double *)&static BadgedLabel.Constants.interItemSpacing;
  }
  OUTLINED_FUNCTION_38_3();
  v74 = OUTLINED_FUNCTION_19_9();
  if (OUTLINED_FUNCTION_4_14(v74))
  {
    v75 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v75 = 136446466;
    v76 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_38_37(v76, v77, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_25();
    *(_WORD *)(v75 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v21, v2, "[%{public}s][sizing] measuredHeight %f", (uint8_t *)v75);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_38_3();
  v79 = OUTLINED_FUNCTION_19_9();
  if (os_log_type_enabled(v21, v79))
  {
    v80 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v80 = 136446466;
    v81 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_38_37(v81, v82, v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v80 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v21, v79, "[%{public}s][sizing] measuredWidth %f", (uint8_t *)v80);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  if (v47 <= width)
    v84 = v47;
  else
    v84 = width;
  if (v24 <= height)
    v85 = v24;
  else
    v85 = height;
  result.height = v85;
  result.width = v84;
  return result;
}

double BadgedLabel.makeBadgeSize(fitting:)(double a1, double a2)
{
  uint64_t *v2;
  uint64_t v5;
  void *v6;
  void *v7;
  BOOL v8;
  char **v9;
  double v10;
  double v11;

  v5 = OUTLINED_FUNCTION_3_67(*v2);
  if (!v5)
    return 0.0;
  v6 = (void *)v5;
  objc_opt_self();
  v7 = (void *)swift_dynamicCastObjCClass();
  v8 = v7 == 0;
  if (!v7)
    v7 = v6;
  v9 = &selRef_sizeThatFits_;
  if (!v8)
    v9 = &selRef_systemLayoutSizeFittingSize_;
  objc_msgSend(v7, *v9, a1, a2);
  v11 = v10;

  return v11;
}

id BadgedLabel.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void BadgedLabel.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BadgedLabel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BadgedLabel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for AlternatingLabel.attributedText.getter in conformance BadgedLabel()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t protocol witness for AlternatingLabel.attributedText.setter in conformance BadgedLabel()
{
  return OUTLINED_FUNCTION_25_42(*MEMORY[0x1E0DEEDD8]);
}

void (*protocol witness for AlternatingLabel.attributedText.modify in conformance BadgedLabel(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x88))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t sub_1BD2C2E90@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_3_67(**a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BD2C2ECC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x78))();
  *a2 = result;
  return result;
}

uint64_t method lookup function for BadgedLabel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BadgedLabel.badge.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of BadgedLabel.badge.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of BadgedLabel.badge.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of BadgedLabel.attributedText.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BadgedLabel.attributedText.setter()
{
  return OUTLINED_FUNCTION_25_42(*MEMORY[0x1E0DEEDD8]);
}

uint64_t dispatch thunk of BadgedLabel.attributedText.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BadgedLabel.font.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BadgedLabel.glyphInsetFromTop.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BadgedLabel.__allocating_init(label:badge:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

void *RemotePeoplePickerViewController.connection.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___CKRemotePeoplePickerViewController_connection);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void RemotePeoplePickerViewController.connection.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___CKRemotePeoplePickerViewController_connection);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

}

void RemotePeoplePickerViewController.connection.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for RemotePeoplePickerViewController.contentViewController : RemotePeoplePickerViewController(uint64_t a1, _QWORD **a2)
{
  id v2;
  uint64_t v3;
  uint64_t (*v4)(id, uint64_t);
  id v5;

  v2 = *(id *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(uint64_t (**)(id, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x80);
  v5 = *(id *)a1;
  return v4(v2, v3);
}

id RemotePeoplePickerViewController.contentViewController.getter()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;

  v1 = &v0[OBJC_IVAR___CKRemotePeoplePickerViewController____lazy_storage___contentViewController];
  v2 = *(void **)&v0[OBJC_IVAR___CKRemotePeoplePickerViewController____lazy_storage___contentViewController];
  v3 = v2;
  if (v2 == (void *)1)
  {
    v3 = closure #1 in RemotePeoplePickerViewController.contentViewController.getter(v0);
    v4 = *(void **)v1;
    *(_QWORD *)v1 = v3;
    *((_QWORD *)v1 + 1) = v5;
    v6 = v3;
    outlined consume of UIView??(v4);
  }
  outlined copy of UIView??(v2);
  return v3;
}

id closure #1 in RemotePeoplePickerViewController.contentViewController.getter(void *a1)
{
  id result;
  void *v2;

  result = objc_msgSend(a1, sel_makeContentViewController);
  if (result)
  {
    v2 = result;
    swift_getObjectType();
    result = (id)dynamic_cast_existential_1_conditional((uint64_t)v2);
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

void RemotePeoplePickerViewController.contentViewController.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;

  v3 = (_QWORD *)(v2 + OBJC_IVAR___CKRemotePeoplePickerViewController____lazy_storage___contentViewController);
  v4 = *(void **)(v2 + OBJC_IVAR___CKRemotePeoplePickerViewController____lazy_storage___contentViewController);
  *v3 = a1;
  v3[1] = a2;
  outlined consume of UIView??(v4);
}

void RemotePeoplePickerViewController.contentViewController.modify(id *a1)
{
  void *v1;
  void *v3;

  a1[2] = v1;
  *a1 = RemotePeoplePickerViewController.contentViewController.getter();
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void RemotePeoplePickerViewController.contentViewController.modify(id *a1, char a2)
{
  id v2;

  if ((a2 & 1) != 0)
  {
    v2 = *a1;
    OUTLINED_FUNCTION_29_45();

  }
  else
  {
    OUTLINED_FUNCTION_29_45();
  }
}

Swift::Void __swiftcall RemotePeoplePickerViewController.loadView()()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  objc_msgSend(v0, sel_setView_, v1);

}

Swift::Void __swiftcall RemotePeoplePickerViewController.viewDidLoad()()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  id v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  NSObject *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  Class isa;
  uint64_t v40;
  _WORD *v41;
  uint64_t v42;
  objc_super v43;

  v1 = v0;
  v43.receiver = v0;
  v43.super_class = (Class)type metadata accessor for RemotePeoplePickerViewController();
  objc_msgSendSuper2(&v43, sel_viewDidLoad);
  v2 = OUTLINED_FUNCTION_5_74(*v0);
  if (!v2)
    goto LABEL_10;
  v4 = (void *)v2;
  v5 = v3;
  ObjectType = swift_getObjectType();
  v7 = objc_msgSend(v4, sel_view);
  if (!v7)
  {

LABEL_10:
    if (one-time initialization token for default != -1)
      swift_once();
    v40 = OUTLINED_FUNCTION_17_2();
    v11 = OUTLINED_FUNCTION_3(v40, (uint64_t)&static Log.default);
    static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_108_4(v11))
    {
      v41 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v41);
      OUTLINED_FUNCTION_39_8(&dword_1BD004000, v11, v42, "Failed to create SharePlay people picker view controller");
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_14;
  }
  v8 = v7;
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64);
  v10 = swift_unknownObjectRetain();
  v9(v10, ObjectType, v5);
  v11 = v4;
  objc_msgSend(v1, sel_addChildViewController_, v11);
  v12 = OUTLINED_FUNCTION_25_5();
  if (!v12)
  {
    __break(1u);
    goto LABEL_16;
  }
  v13 = v12;
  objc_msgSend(v12, sel_addSubview_, v8);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v14 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v14 + 16) = xmmword_1BD644140;
  v15 = OUTLINED_FUNCTION_2_2(v14, sel_topAnchor);
  v16 = OUTLINED_FUNCTION_25_5();
  if (!v16)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_topAnchor);
  OUTLINED_FUNCTION_8_10();
  v19 = OUTLINED_FUNCTION_4_99();
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v14 + 32) = v17;
  v21 = OUTLINED_FUNCTION_2_2(v20, sel_bottomAnchor);
  v22 = OUTLINED_FUNCTION_25_5();
  if (!v22)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, sel_bottomAnchor);
  OUTLINED_FUNCTION_8_10();
  v25 = OUTLINED_FUNCTION_4_99();
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v14 + 40) = v23;
  v27 = OUTLINED_FUNCTION_2_2(v26, sel_leadingAnchor);
  v28 = OUTLINED_FUNCTION_25_5();
  if (!v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, sel_leadingAnchor);
  OUTLINED_FUNCTION_8_10();
  v31 = OUTLINED_FUNCTION_4_99();
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v14 + 48) = v29;
  v33 = OUTLINED_FUNCTION_2_2(v32, sel_trailingAnchor);
  v34 = OUTLINED_FUNCTION_25_5();
  if (v34)
  {
    v35 = v34;
    v36 = (void *)objc_opt_self();
    v37 = objc_msgSend(v35, sel_trailingAnchor);

    v38 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v37);
    *(_QWORD *)(v14 + 56) = v38;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_activateConstraints_, isa);

    -[NSObject didMoveToParentViewController:](v11, sel_didMoveToParentViewController_, v1);
LABEL_14:

    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t type metadata accessor for RemotePeoplePickerViewController()
{
  return objc_opt_self();
}

Swift::Void __swiftcall RemotePeoplePickerViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  _QWORD *v1;
  id v3;
  _QWORD *v4;
  uint64_t (*v5)(void);
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  objc_super v15;

  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for RemotePeoplePickerViewController();
  v3 = objc_msgSendSuper2(&v15, sel_viewDidDisappear_, a1);
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78);
  v6 = (void *)((uint64_t (*)(id))v5)(v3);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_willMoveToParentViewController_, 0);

  }
  v8 = (void *)v5();
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_view);

    if (!v10)
    {
      __break(1u);
      return;
    }
    objc_msgSend(v10, sel_removeFromSuperview);

  }
  v11 = (void *)v5();
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_removeFromParentViewController);

  }
  v13 = (void *)v5();
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, sel_didMoveToParentViewController_, 0);

  }
  (*(void (**)(_QWORD, _QWORD))((*v4 & *v1) + 0x80))(0, 0);
  OUTLINED_FUNCTION_49_0();
}

Swift::Bool __swiftcall RemotePeoplePickerViewController.shouldAcceptXPCConnection(_:)(NSXPCConnection a1)
{
  uint64_t *v1;
  os_log_type_t v2;
  uint64_t *v3;
  uint64_t v5;
  objc_class *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  objc_class *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  objc_class *v16;
  id v17;
  void *v18;
  void *v19;
  void (*v20)(void *);
  id v21;
  uint64_t ObjectType;
  void (*v23)(void *, uint64_t, uint64_t);
  id v24;
  Swift::Bool v25;
  _WORD *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  NSObject *v32;

  v3 = v1;
  if (one-time initialization token for default != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v5, (uint64_t)&static Log.default);
  v6 = a1.super.isa;
  OUTLINED_FUNCTION_55_1();
  v7 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_7_9(v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_105();
    v9 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v8 = 138412290;
    v10 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v9 = v6;

    OUTLINED_FUNCTION_48(&dword_1BD004000, a1.super.isa, v2, "Received request to accept connection for %@", v8);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v12 = OUTLINED_FUNCTION_13_73(*v3);
  if (!v12)
  {
    v14 = OUTLINED_FUNCTION_55_1();
    static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_108_4(v14))
    {
      v26 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v26);
      OUTLINED_FUNCTION_39_8(&dword_1BD004000, v14, v27, "Failed to create SharePlay people picker view controller");
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_13;
  }
  v14 = v12;
  v15 = v13;
  OUTLINED_FUNCTION_59(v12, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v16 = v6;
  static OS_dispatch_queue.main.getter();
  v17 = objc_allocWithZone((Class)type metadata accessor for PeoplePickerHostConnection());
  v18 = (void *)PeoplePickerHostConnection.init(connection:queue:)();
  if (!v18)
  {
    v28 = OUTLINED_FUNCTION_55_1();
    v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v30 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v28, v29, "Failed to create PeoplePickerHostConnection", v30);
      OUTLINED_FUNCTION_60();
    }

LABEL_13:
    v25 = 0;
    goto LABEL_14;
  }
  v19 = v18;
  v20 = *(void (**)(void *))((*v11 & *v3) + 0x68);
  v21 = v18;
  v20(v19);
  ObjectType = swift_getObjectType();
  v32 = v14;
  v23 = *(void (**)(void *, uint64_t, uint64_t))(v15 + 16);
  v24 = v21;
  v23(v19, ObjectType, v15);
  v14 = v32;
  lazy protocol witness table accessor for type RemotePeoplePickerViewController and conformance RemotePeoplePickerViewController();
  swift_unknownObjectRetain();
  PeoplePickerHostConnection.delegate.setter();

  v25 = 1;
LABEL_14:

  return v25;
}

id RemotePeoplePickerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id RemotePeoplePickerViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  void *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v3[OBJC_IVAR___CKRemotePeoplePickerViewController_connection] = 0;
  *(_OWORD *)&v3[OBJC_IVAR___CKRemotePeoplePickerViewController____lazy_storage___contentViewController] = xmmword_1BD64E9C0;
  if (a2)
  {
    v5 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for RemotePeoplePickerViewController();
  v6 = objc_msgSendSuper2(&v8, sel_initWithNibName_bundle_, v5, a3);

  return v6;
}

id RemotePeoplePickerViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id RemotePeoplePickerViewController.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___CKRemotePeoplePickerViewController_connection] = 0;
  *(_OWORD *)&v1[OBJC_IVAR___CKRemotePeoplePickerViewController____lazy_storage___contentViewController] = xmmword_1BD64E9C0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for RemotePeoplePickerViewController();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id RemotePeoplePickerViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RemotePeoplePickerViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall RemotePeoplePickerViewController.handleHostConnectionInvalidated()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  void *v13;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v6 = (uint64_t *)(v5 - v4);
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0DEF740], v2);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v6, v2);
  if ((v8 & 1) != 0)
  {
    if (one-time initialization token for default == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v9 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v9, (uint64_t)&static Log.default);
  v10 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v10))
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v11 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v8, (os_log_type_t)v2, "Connection invalidated", v11);
    OUTLINED_FUNCTION_60();
  }

  v12 = (void *)OUTLINED_FUNCTION_13_73(*v1);
  if (v12)
  {
    v13 = v12;
    OUTLINED_FUNCTION_54_17(v12, sel_dismissViewControllerAnimated_completion_);

  }
}

uint64_t RemotePeoplePickerViewController.checkIn(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v6 = (uint64_t *)(v5 - v4);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0DEF740], v2);
  v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) != 0)
  {
    if (one-time initialization token for default == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)&static Log.default);
  v9 = a1;
  v10 = Logger.logObject.getter();
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_DWORD *)v12 = 136315138;
    type metadata accessor for PeoplePickerConfiguration();
    v13 = v9;
    v14 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v10, v11, "Received checkIn from app configuration %s", v12, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  result = dispatch thunk of PeoplePickerConfiguration.shareSheetSessionID.getter();
  if (v17)
  {
    RemotePeoplePickerViewController.requestParticipants(_:)(*(Swift::String *)&result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall RemotePeoplePickerViewController.requestParticipants(_:)(Swift::String a1)
{
  os_log_type_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t aBlock[6];

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  if (one-time initialization token for default != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_17_2();
  v5 = __swift_project_value_buffer(v4, (uint64_t)&static Log.default);
  swift_bridgeObjectRetain_n();
  Logger.logObject.getter();
  v6 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_7_9(v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    aBlock[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v5, v1, "Requesting participants for shareSheetSessionID %s", v7);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  swift_bridgeObjectRelease_n();
  v8 = (void *)objc_opt_self();
  v9 = (void *)MEMORY[0x1C3B72E00](countAndFlagsBits, object);
  v10 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  aBlock[4] = (uint64_t)partial apply for closure #1 in RemotePeoplePickerViewController.requestParticipants(_:);
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed [Any]?) -> ();
  aBlock[3] = (uint64_t)&block_descriptor_53;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v8, sel_requestMailRecipientsForSessionID_completionHandler_, v9, v11);
  _Block_release(v11);

}

void RemotePeoplePickerViewController.updateActivity(_:)(id a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t *, _QWORD);
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  void (*v41)(id, uint64_t, uint64_t);
  id v42;
  id v43;
  void *v44;
  uint64_t v45[4];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v8 = (uint64_t *)(v7 - v6);
  OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v8, v4);
  if ((v10 & 1) != 0)
  {
    if (one-time initialization token for default == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v11 = OUTLINED_FUNCTION_17_2();
  v12 = __swift_project_value_buffer(v11, (uint64_t)&static Log.default);
  v13 = a1;
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)OUTLINED_FUNCTION_105();
    v17 = OUTLINED_FUNCTION_105();
    v45[0] = v17;
    *(_DWORD *)v16 = 136315138;
    if (a1)
    {
      OUTLINED_FUNCTION_59(v17, &lazy cache variable for type metadata for TUConversationActivity);
      v18 = v13;
      v19 = String.init<A>(reflecting:)();
      v21 = v20;
    }
    else
    {
      v21 = 0xE300000000000000;
      v19 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v14, v15, "Received updated activity %s", v16);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  if (!a1 || (a1 = OUTLINED_FUNCTION_2_2(v22, sel_sanitizedCopy)) == 0)
  {
    Logger.logObject.getter();
    v23 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v23))
    {
      v24 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v24 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v12, (os_log_type_t)a1, "Received empty activity, using placeholder activity", v24);
      OUTLINED_FUNCTION_60();
    }

    a1 = objc_msgSend((id)objc_opt_self(), sel_placeholderActivity);
  }
  v25 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v26 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x60))();
  if (v26)
  {
    v27 = v26;
    v28 = XPCHostConnection.isEntitledToUsePrivateAPI.getter();

    if ((v28 & 1) == 0
      || (outlined bridged method (pb) of @objc FBSDisplayLayoutElement.bundleIdentifier.getter(a1),
          v30 = v29,
          swift_bridgeObjectRelease(),
          !v30))
    {
      v31 = v27;
      v32 = XPCHostConnection.bundleIdentifier.getter();
      v34 = v33;

      outlined bridged method (mbnn) of @objc TUConversationActivity.bundleIdentifier.setter(v32, v34, a1);
    }

  }
  v36 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))((*v25 & *v2) + 0x88))(v45);
  v37 = *(void **)v35;
  if (*(_QWORD *)v35)
  {
    v38 = v35;
    v39 = *(_QWORD *)(v35 + 8);
    ObjectType = swift_getObjectType();
    v41 = *(void (**)(id, uint64_t, uint64_t))(v39 + 40);
    v42 = a1;
    v43 = v37;
    v41(a1, ObjectType, v39);
    v44 = *(void **)v38;
    *(_QWORD *)v38 = v37;
    *(_QWORD *)(v38 + 8) = v39;

  }
  v36(v45, 0);

}

uint64_t protocol witness for PeoplePickerHostConnectionDelegate.checkIn(_:) in conformance RemotePeoplePickerViewController(void *a1)
{
  return RemotePeoplePickerViewController.checkIn(_:)(a1);
}

void RemotePeoplePickerViewController.requestActivity(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  void *v7;
  void *v8;
  _QWORD *v9;
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  NSObject *v15;
  _QWORD aBlock[7];

  v3 = v2;
  v6 = OUTLINED_FUNCTION_3_67(*v2);
  if (v6)
  {
    v7 = (void *)v6;
    XPCHostConnection.clientObject.getter();
    v8 = (void *)aBlock[6];
    v9 = (_QWORD *)OUTLINED_FUNCTION_15();
    v9[2] = v3;
    v9[3] = a1;
    v9[4] = a2;
    aBlock[4] = partial apply for closure #1 in RemotePeoplePickerViewController.requestActivity(completionHandler:);
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
    aBlock[3] = &block_descriptor_6_6;
    v10 = _Block_copy(aBlock);
    v11 = v3;
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_requestActivity_, v10);

    _Block_release(v10);
    swift_unknownObjectRelease();
  }
  else
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v12 = OUTLINED_FUNCTION_17_2();
    v15 = OUTLINED_FUNCTION_3(v12, (uint64_t)&static Log.default);
    static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_108_4(v15))
    {
      v13 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v13);
      OUTLINED_FUNCTION_39_8(&dword_1BD004000, v15, v14, "No connection.  Cannot request activity.");
      OUTLINED_FUNCTION_60();
    }

  }
}

void closure #1 in RemotePeoplePickerViewController.requestActivity(completionHandler:)(void *a1, _QWORD *a2, void (*a3)(id))
{
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  if (!a1 || (v5 = objc_msgSend(a1, sel_sanitizedCopy)) == 0)
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Log.default);
    v7 = Logger.logObject.getter();
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BD004000, v7, v8, "Received empty activity, using placeholder activity", v9, 2u);
      MEMORY[0x1C3B751B8](v9, -1, -1);
    }

    v5 = objc_msgSend((id)objc_opt_self(), sel_placeholderActivity);
  }
  v10 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x60))();
  if (v10)
  {
    v11 = v10;
    v12 = XPCHostConnection.isEntitledToUsePrivateAPI.getter();

    if ((v12 & 1) == 0
      || (outlined bridged method (pb) of @objc FBSDisplayLayoutElement.bundleIdentifier.getter(v5),
          v14 = v13,
          swift_bridgeObjectRelease(),
          !v14))
    {
      v15 = v11;
      v16 = XPCHostConnection.bundleIdentifier.getter();
      v18 = v17;

      outlined bridged method (mbnn) of @objc TUConversationActivity.bundleIdentifier.setter(v16, v18, v5);
    }

  }
  v19 = v5;
  a3(v5);

}

Swift::Void __swiftcall RemotePeoplePickerViewController.dismissViewController(success:)(Swift::Bool success)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _WORD *v10;
  uint64_t v11;
  NSObject *v12;
  id v13;

  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = OUTLINED_FUNCTION_3_67(*v1);
  if (v4)
  {
    v5 = (void *)v4;
    XPCHostConnection.clientObject.getter();
    objc_msgSend(v13, sel_dismissViewControllerWithSuccess_, success);
    v6 = swift_unknownObjectRelease();
    v7 = (void *)(*(uint64_t (**)(uint64_t))((*v3 & *v1) + 0x78))(v6);
    if (v7)
    {
      v8 = v7;
      OUTLINED_FUNCTION_54_17(v7, sel_dismissViewControllerAnimated_completion_);

    }
    OUTLINED_FUNCTION_49_0();
  }
  else
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v9 = OUTLINED_FUNCTION_17_2();
    v12 = OUTLINED_FUNCTION_3(v9, (uint64_t)&static Log.default);
    static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_108_4(v12))
    {
      v10 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_52_3(v10);
      OUTLINED_FUNCTION_39_8(&dword_1BD004000, v12, v11, "No connection.  Cannot dismiss.");
      OUTLINED_FUNCTION_60();
    }

  }
}

void closure #1 in RemotePeoplePickerViewController.requestParticipants(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t ObjectType;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (_QWORD *)v4;
    if (one-time initialization token for default != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Log.default);
    swift_bridgeObjectRetain_n();
    v7 = Logger.logObject.getter();
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v24 = v10;
      *(_DWORD *)v9 = 136315138;
      if (a1)
      {
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Any]);
        v11 = String.init<A>(reflecting:)();
        v13 = v12;
      }
      else
      {
        v13 = 0xE300000000000000;
        v11 = 7104878;
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v13, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v7, v8, "Received recipients %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v10, -1, -1);
      MEMORY[0x1C3B751B8](v9, -1, -1);

      if (!a1)
        goto LABEL_15;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (!a1)
        goto LABEL_15;
    }
    v14 = specialized _arrayConditionalCast<A, B>(_:)(a1);
    if (v14)
    {
      v15 = v14;
      v16 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x78))();
      if (v16)
      {
        v18 = (void *)v16;
        v19 = v17;
        ObjectType = swift_getObjectType();
        v24 = (uint64_t)v18;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 80))(v15, ObjectType, v19);

      }
      swift_bridgeObjectRelease();
LABEL_18:

      return;
    }
LABEL_15:
    v21 = Logger.logObject.getter();
    v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1BD004000, v21, v22, "Unable to parse recipients as strings, dropping suggestions.", v23, 2u);
      MEMORY[0x1C3B751B8](v23, -1, -1);
    }

    goto LABEL_18;
  }
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed [Any]?) -> ()(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t lazy protocol witness table accessor for type RemotePeoplePickerViewController and conformance RemotePeoplePickerViewController()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type RemotePeoplePickerViewController and conformance RemotePeoplePickerViewController;
  if (!lazy protocol witness table cache variable for type RemotePeoplePickerViewController and conformance RemotePeoplePickerViewController)
  {
    v1 = type metadata accessor for RemotePeoplePickerViewController();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RemotePeoplePickerViewController, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RemotePeoplePickerViewController and conformance RemotePeoplePickerViewController);
  }
  return result;
}

uint64_t sub_1BD2C5198()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in RemotePeoplePickerViewController.requestParticipants(_:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in RemotePeoplePickerViewController.requestParticipants(_:)(a1, v1);
}

void outlined bridged method (mbnn) of @objc TUConversationActivity.bundleIdentifier.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setBundleIdentifier_, v4);

}

uint64_t sub_1BD2C5214()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in RemotePeoplePickerViewController.requestActivity(completionHandler:)(void *a1)
{
  uint64_t v1;

  closure #1 in RemotePeoplePickerViewController.requestActivity(completionHandler:)(a1, *(_QWORD **)(v1 + 16), *(void (**)(id))(v1 + 24));
}

uint64_t sub_1BD2C524C@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_3_67(**a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BD2C5288@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = OUTLINED_FUNCTION_5_74(**a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t dispatch thunk of SharePlayPeoplePicker.connection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SharePlayPeoplePicker.connection.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SharePlayPeoplePicker.connection.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SharePlayPeoplePicker.activity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SharePlayPeoplePicker.activity.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of SharePlayPeoplePicker.activity.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SharePlayPeoplePicker.extensionViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SharePlayPeoplePicker.extensionViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of SharePlayPeoplePicker.extensionViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of SharePlayPeoplePicker.updateShareSheetRecipients(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t method lookup function for RemotePeoplePickerViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemotePeoplePickerViewController.connection.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of RemotePeoplePickerViewController.connection.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of RemotePeoplePickerViewController.connection.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of RemotePeoplePickerViewController.contentViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of RemotePeoplePickerViewController.contentViewController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of RemotePeoplePickerViewController.contentViewController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of RemotePeoplePickerViewController.shouldAcceptXPCConnection(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t sub_1BD2C53E4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void LiveCallDurationView.__allocating_init(font:callDurationProvider:voiceOverUpdateHandler:)()
{
  objc_class *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_23_9();
  v2 = objc_allocWithZone(v0);
  __swift_mutable_project_boxed_opaque_existential_1(v1, *(_QWORD *)(v1 + 24));
  OUTLINED_FUNCTION_8_14();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0_112(v4, v5, v6);
  OUTLINED_FUNCTION_1_110();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_65_1();
}

uint64_t key path getter for LiveCallDurationView.voiceOverUpdateHandler : LiveCallDurationView@<X0>(_QWORD **a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)();

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x58))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)())result;
  return result;
}

uint64_t key path setter for LiveCallDurationView.voiceOverUpdateHandler : LiveCallDurationView(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t (*v7)(void (*)(), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(void (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x60);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return v7(v6, v5);
}

uint64_t LiveCallDurationView.voiceOverUpdateHandler.getter()
{
  return OUTLINED_FUNCTION_3_59();
}

uint64_t LiveCallDurationView.voiceOverUpdateHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit20LiveCallDurationView_controller)
                              + 200))();
}

uint64_t (*LiveCallDurationView.voiceOverUpdateHandler.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit20LiveCallDurationView_controller);
  *a1 = OUTLINED_FUNCTION_3_59();
  a1[1] = v3;
  return LiveCallDurationView.voiceOverUpdateHandler.modify;
}

uint64_t LiveCallDurationView.voiceOverUpdateHandler.modify(uint64_t *a1, char a2)
{
  uint64_t v2;

  v2 = *a1;
  if ((a2 & 1) == 0)
    return OUTLINED_FUNCTION_10_83();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(*a1);
  OUTLINED_FUNCTION_10_83();
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v2);
}

void LiveCallDurationView.init(font:callDurationProvider:voiceOverUpdateHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_23_9();
  __swift_mutable_project_boxed_opaque_existential_1(v1, *(_QWORD *)(v1 + 24));
  OUTLINED_FUNCTION_8_14();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_112(v3, v4, v5);
  OUTLINED_FUNCTION_1_110();
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_65_1();
}

id LiveCallDurationView.__deallocating_deinit()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  objc_class *v21;
  uint64_t v23;
  id v24;
  uint64_t v25;
  objc_super v26;
  uint64_t v27;
  uint64_t aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v0;
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit20LiveCallDurationView_controller];
  type metadata accessor for OS_dispatch_queue();
  swift_retain();
  v10 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = (uint64_t)partial apply for closure #1 in LiveCallDurationView.deinit;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = (uint64_t)&block_descriptor_54;
  v11 = _Block_copy(aBlock);
  v25 = v9;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v27 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)&static Logger.conversationControls);
  v13 = v24;
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)OUTLINED_FUNCTION_105();
    v17 = OUTLINED_FUNCTION_105();
    v27 = (uint64_t)v13;
    aBlock[0] = v17;
    *(_DWORD *)v16 = 136315138;
    type metadata accessor for LiveCallDurationView();
    v18 = v13;
    v19 = String.init<A>(reflecting:)();
    v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v14, v15, "%s deinit", v16, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  swift_release();
  v21 = (objc_class *)type metadata accessor for LiveCallDurationView();
  v26.receiver = v13;
  v26.super_class = v21;
  return objc_msgSendSuper2(&v26, sel_dealloc);
}

id LiveCallDurationView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void LiveCallDurationView.init(frame:)()
{
  OUTLINED_FUNCTION_21_4();
  __break(1u);
}

id LiveCallDurationView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void LiveCallDurationView.init(coder:)()
{
  OUTLINED_FUNCTION_21_4();
  __break(1u);
}

void LiveCallDurationView.accessibilityLabel.getter()
{
  id v0;

  v0 = OUTLINED_FUNCTION_9_76(OBJC_IVAR____TtC15ConversationKit20LiveCallDurationView_controller);
  outlined bridged method (ob) of @objc NSObject.accessibilityLabel.getter(v0);
}

void LiveCallDurationView.accessibilityLabel.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_super v4;

  if (a2)
  {
    v3 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for LiveCallDurationView();
  objc_msgSendSuper2(&v4, sel_setAccessibilityLabel_, v3);

}

id LiveCallDurationView.alpha.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LiveCallDurationView();
  return objc_msgSendSuper2(&v2, sel_alpha);
}

uint64_t LiveCallDurationView.alpha.setter(double a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for LiveCallDurationView();
  objc_msgSendSuper2(&v4, sel_setAlpha_, a1);
  return OUTLINED_FUNCTION_4_100(OBJC_IVAR____TtC15ConversationKit20LiveCallDurationView_controller);
}

id LiveCallDurationView.isHidden.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LiveCallDurationView();
  return objc_msgSendSuper2(&v2, sel_isHidden);
}

void LiveCallDurationView.isHidden.setter(char a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for LiveCallDurationView();
  objc_msgSendSuper2(&v3, sel_setHidden_, a1 & 1);
  OUTLINED_FUNCTION_4_100(OBJC_IVAR____TtC15ConversationKit20LiveCallDurationView_controller);
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall LiveCallDurationView.didMoveToWindow()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for LiveCallDurationView();
  objc_msgSendSuper2(&v1, sel_didMoveToWindow);
  OUTLINED_FUNCTION_4_100(OBJC_IVAR____TtC15ConversationKit20LiveCallDurationView_controller);
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall LiveCallDurationView.layoutSubviews()()
{
  void *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LiveCallDurationView();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  v1 = OUTLINED_FUNCTION_9_76(OBJC_IVAR____TtC15ConversationKit20LiveCallDurationView_controller);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);

  OUTLINED_FUNCTION_36();
}

CGSize __swiftcall LiveCallDurationView.sizeThatFits(_:)(CGSize a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  double v4;
  double v5;
  CGSize result;

  (*(void (**)(__n128, __n128))(**(_QWORD **)(v1
                                                       + OBJC_IVAR____TtC15ConversationKit20LiveCallDurationView_controller)
                                         + 224))((__n128)__PAIR128__(v2, *(unint64_t *)&a1.width), (__n128)__PAIR128__(v3, *(unint64_t *)&a1.height));
  result.height = v5;
  result.width = v4;
  return result;
}

id specialized LiveCallDurationView.init(font:callDurationProvider:voiceOverUpdateHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  char *v19;
  id v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  objc_class *v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  objc_super v53;
  uint64_t v54;

  v50 = a1;
  v12 = *(_QWORD *)(a6 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v45 - v16;
  (*(void (**)(char *))(v12 + 32))((char *)&v45 - v16);
  v18 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v19 = a5;
  v20 = objc_msgSend(v18, sel_init);
  if (one-time initialization token for systemApertureDurationTextColor != -1)
    swift_once();
  objc_msgSend(v20, sel_setTextColor_, static UIColor.systemApertureDurationTextColor);
  objc_msgSend(v20, sel_setFont_, v50);
  type metadata accessor for DurationLabelController();
  v21 = swift_allocObject();
  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v49 = v17;
  v22(v15, v17, a6);
  v23 = v20;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a3);
  specialized DurationLabelController.init(durationProvider:label:textColor:voiceOverUpdateHandler:prefixAttributedString:)((uint64_t)v15, (uint64_t)v23, 0, a3, a4, 0, v21, a6, a7, v44, v45, v46, v47, v48, (uint64_t)v49, (uint64_t)v50, v51, v52, (uint64_t)v53.receiver,
    (uint64_t)v53.super_class,
    v54);
  *(_QWORD *)&v19[OBJC_IVAR____TtC15ConversationKit20LiveCallDurationView_controller] = v24;
  v25 = *(void (**)(uint64_t))(*(_QWORD *)v24 + 248);
  v26 = swift_retain();
  v25(v26);
  swift_release();

  v27 = (objc_class *)type metadata accessor for LiveCallDurationView();
  v53.receiver = v19;
  v53.super_class = v27;
  v28 = objc_msgSendSuper2(&v53, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v29 = one-time initialization token for conversationControls;
  v30 = v28;
  if (v29 != -1)
    swift_once();
  v31 = type metadata accessor for Logger();
  __swift_project_value_buffer(v31, (uint64_t)&static Logger.conversationControls);
  v32 = v30;
  v33 = Logger.logObject.getter();
  v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    v45 = (uint64_t)v23;
    v35 = OUTLINED_FUNCTION_105();
    v48 = v12;
    v36 = (uint8_t *)v35;
    v37 = OUTLINED_FUNCTION_105();
    v51 = (uint64_t)v32;
    v52 = v37;
    v46 = a3;
    *(_DWORD *)v36 = 136315138;
    v38 = v32;
    v47 = a6;
    v39 = v38;
    v40 = String.init<A>(reflecting:)();
    v51 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v41, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v33, v34, "%s created", v36, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v42 = (uint64_t)v49;
  objc_msgSend(v32, sel_addSubview_, v23);

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a3);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v42, a6);
  return v32;
}

uint64_t partial apply for closure #1 in LiveCallDurationView.deinit()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)v0 + 200))(0, 0);
}

uint64_t type metadata accessor for LiveCallDurationView()
{
  return objc_opt_self();
}

uint64_t method lookup function for LiveCallDurationView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LiveCallDurationView.voiceOverUpdateHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of LiveCallDurationView.voiceOverUpdateHandler.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of LiveCallDurationView.voiceOverUpdateHandler.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of LiveCallDurationView.__allocating_init(font:callDurationProvider:voiceOverUpdateHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BD2C64B0()
{
  swift_release();
  return swift_deallocObject();
}

void specialized _ArrayProtocol.filter(_:)(uint64_t a1, char *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView_foregroundApp;
    v6 = a1 + 56;
    v7 = MEMORY[0x1E0DEE9D8];
    v25 = a2;
    v22 = a1 + 56;
    do
    {
      v23 = v7;
      v8 = (_OWORD *)(v6 + 40 * v4);
      v9 = v4;
      while (1)
      {
        if (v9 >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        v10 = *((_QWORD *)v8 - 3);
        v11 = *((_QWORD *)v8 - 2);
        v12 = *((_QWORD *)v8 - 1);
        v4 = v9 + 1;
        v26 = *v8;
        v13 = *(_QWORD *)&a2[v5];
        if (!v13)
          break;
        v14 = (_QWORD *)(v13 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_bundleIdentifier);
        if (v10 != *v14 || v11 != v14[1])
        {
          v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
          a2 = v25;
          if ((v16 & 1) == 0)
            break;
        }
        v8 = (_OWORD *)((char *)v8 + 40);
        ++v9;
        if (v3 == v4)
          goto LABEL_18;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = *((id *)&v26 + 1);
      v7 = v23;
      v27 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v7 = v23;
      }
      v18 = *(_QWORD *)(v7 + 16);
      v19 = v18 + 1;
      a2 = v25;
      if (v18 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        v24 = *(_QWORD *)(v7 + 16);
        v21 = v18 + 1;
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v19 = v21;
        v18 = v24;
        a2 = v25;
        v7 = v27;
      }
      *(_QWORD *)(v7 + 16) = v19;
      v20 = v7 + 40 * v18;
      *(_QWORD *)(v20 + 32) = v10;
      *(_QWORD *)(v20 + 40) = v11;
      *(_QWORD *)(v20 + 48) = v12;
      *(_OWORD *)(v20 + 56) = v26;
      v6 = v22;
    }
    while (v3 - 1 != v9);
  }
LABEL_18:

  swift_bridgeObjectRelease();
}

void SharePlayDiscoverabilityMenuView.__allocating_init(type:presentationStyle:foregroundApp:)(char a1, char a2, void *a3)
{
  objc_class *v3;
  char v5;
  char v6;
  id v7;

  v5 = a1 & 1;
  v6 = a2 & 1;
  v7 = objc_allocWithZone(v3);
  SharePlayDiscoverabilityMenuView.init(type:presentationStyle:foregroundApp:)(v5, v6, a3);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for SharePlayDiscoverabilityMenuView.titleLabel : SharePlayDiscoverabilityMenuView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x98))(*a1);
}

void SharePlayDiscoverabilityMenuView.titleLabel.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___titleLabel, (uint64_t (*)(uint64_t))closure #1 in SharePlayDiscoverabilityMenuView.titleLabel.getter);
}

id closure #1 in SharePlayDiscoverabilityMenuView.titleLabel.getter(uint64_t a1)
{
  id v2;
  id v3;
  id result;
  void *v5;
  Class isa;
  char v7;
  id v8;
  unint64_t v9;
  const char *v10;
  unint64_t v11;
  Swift::String_optional v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  unint64_t v16;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 2);
  v3 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v3);

  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4A88], *MEMORY[0x1E0DC1448]);
  if (result)
  {
    v5 = result;
    isa = UIFont.caseSensitive()().super.isa;

    objc_msgSend(v2, sel_setFont_, isa);
    if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView_presentationStyle) & 1) != 0)
    {
      v7 = *(_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView_type);
      v8 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      if ((v7 & 1) != 0)
      {
        v9 = 0xD00000000000001CLL;
        v16 = 0xE000000000000000;
        v10 = "COLLABORATE_SHARE_CARD_TITLE";
      }
      else
      {
        v9 = 0xD000000000000018;
        v16 = 0xE000000000000000;
        v10 = "Listen and Play Together";
      }
      v11 = (unint64_t)(v10 - 32) | 0x8000000000000000;
    }
    else
    {
      v8 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v16 = 0xE000000000000000;
      v11 = 0x80000001BD682340;
      v9 = 0xD000000000000012;
    }
    v12.value._countAndFlagsBits = 0x61737265766E6F43;
    v12.value._object = (void *)0xEF74694B6E6F6974;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    v14 = 0;
    v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, v12, (NSBundle)v8, v13, *(Swift::String *)(&v16 - 1));

    outlined bridged method (mbnn) of @objc UILabel.text.setter(v15._countAndFlagsBits, (uint64_t)v15._object, v2);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void SharePlayDiscoverabilityMenuView.titleLabel.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___titleLabel);
}

void SharePlayDiscoverabilityMenuView.titleLabel.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  SharePlayDiscoverabilityMenuView.titleLabel.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void SharePlayDiscoverabilityMenuView.titleLabel.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))SharePlayDiscoverabilityMenuView.titleLabel.setter);
}

uint64_t key path setter for SharePlayDiscoverabilityMenuView.moreButton : SharePlayDiscoverabilityMenuView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB0))(*a1);
}

void SharePlayDiscoverabilityMenuView.moreButton.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___moreButton, (uint64_t (*)(uint64_t))closure #1 in SharePlayDiscoverabilityMenuView.moreButton.getter);
}

void *closure #1 in SharePlayDiscoverabilityMenuView.moreButton.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _QWORD);
  uint64_t v20;
  uint64_t KeyPath;
  void *v22;
  id v23;
  void *v24;
  _QWORD v26[2];
  _BYTE v27[32];
  Swift::String v28;

  v2 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIButton.Configuration();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v26 - v11;
  static UIButton.Configuration.plain()();
  v13 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  UIButton.Configuration.baseForegroundColor.setter();
  v14 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v28._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 1701998413;
  v15._object = (void *)0xE400000000000000;
  v16.value._countAndFlagsBits = 0x61737265766E6F43;
  v16.value._object = (void *)0xEF74694B6E6F6974;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v28);

  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  v18 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v18);
  UIButton.Configuration.attributedTitle.setter();
  v19 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.attributedTitle.modify();
  if (!__swift_getEnumTagSinglePayload(v20, 1, v18))
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    swift_getKeyPath();
    v26[1] = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
    AttributedString.subscript.setter();
  }
  v19(v27, 0);
  UIButton.Configuration.contentInsets.setter();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIButton);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v22 = (void *)UIButton.init(configuration:primaryAction:)();
  objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v23 = objc_msgSend(v22, sel_titleLabel);
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v23, sel__setDrawsAsBackdropOverlayWithBlendMode_, 3);

  }
  objc_msgSend(v22, sel_addTarget_action_forControlEvents_, a1, sel_didTapMore, 0x2000);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView_presentationStyle) == 1)
    objc_msgSend(v22, sel_setHidden_, 1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return v22;
}

void SharePlayDiscoverabilityMenuView.moreButton.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___moreButton);
}

void SharePlayDiscoverabilityMenuView.moreButton.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  SharePlayDiscoverabilityMenuView.moreButton.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void SharePlayDiscoverabilityMenuView.moreButton.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))SharePlayDiscoverabilityMenuView.moreButton.setter);
}

void SharePlayDiscoverabilityMenuView.sortedSharePlayApps.getter()
{
  unsigned __int8 *v0;
  void *v1;
  uint64_t v2;

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static SharePlayDiscoverabilityAppsController.shared)
                                         + 0x90))(v0[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView_type]);
  specialized _ArrayProtocol.filter(_:)(v2, (char *)v1);
}

uint64_t SharePlayDiscoverabilityMenuView.appCellRegistration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewCell, Application>?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v12[-v7];
  v9 = v1 + OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___appCellRegistration;
  swift_beginAccess();
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v9, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewCell, Application>?);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewCell, Application>);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, v8, v10);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewCell, Application>?);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UICollectionViewCell);
  UICollectionView.CellRegistration.init(handler:)();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a1, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
  swift_beginAccess();
  outlined assign with take of UICollectionView.CellRegistration<UICollectionViewCell, Application>?((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t closure #1 in closure #1 in SharePlayDiscoverabilityMenuView.appCellRegistration.getter(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v3;
  uint64_t v5[5];
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v3 = a3[1];
  v6 = *a3;
  v7 = v3;
  v8 = *((_QWORD *)a3 + 4);
  v5[3] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIHostingConfiguration<SharePlayAppCell, EmptyView>);
  v5[4] = lazy protocol witness table accessor for type UIHostingConfiguration<SharePlayAppCell, EmptyView> and conformance UIHostingConfiguration<A, B>();
  __swift_allocate_boxed_opaque_existential_1(v5);
  type metadata accessor for SharePlayAppCell();
  lazy protocol witness table accessor for type SharePlayAppCell and conformance SharePlayAppCell();
  UIHostingConfiguration<>.init(content:)();
  return MEMORY[0x1C3B73700](v5);
}

uint64_t closure #1 in closure #1 in closure #1 in SharePlayDiscoverabilityMenuView.appCellRegistration.getter@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  uint64_t *v13;
  id v14;
  __int128 v16;
  __int128 v17;

  v6 = type metadata accessor for SharePlayAppCell();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v16 = a1[1];
  v11 = v16;
  v17 = v10;
  v12 = (void *)*((_QWORD *)a1 + 4);
  *(_OWORD *)v9 = v10;
  *((_OWORD *)v9 + 1) = v11;
  *((_QWORD *)v9 + 4) = v12;
  *((_QWORD *)v9 + 5) = partial apply for closure #1 in closure #1 in closure #1 in closure #1 in SharePlayDiscoverabilityMenuView.appCellRegistration.getter;
  *((_QWORD *)v9 + 6) = a2;
  v13 = (uint64_t *)&v9[*(int *)(v7 + 24)];
  *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  outlined init with take of SharePlayAppCell((uint64_t)v9, a3);
  outlined retain of String((uint64_t)&v17);
  outlined retain of String((uint64_t)&v16);
  v14 = v12;
  return swift_retain();
}

void closure #1 in closure #1 in closure #1 in closure #1 in SharePlayDiscoverabilityMenuView.appCellRegistration.getter(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    SharePlayDiscoverabilityMenuView.didTapApp(_:)(a1);

  }
}

void SharePlayDiscoverabilityMenuView.didTapApp(_:)(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v4 = *a1;
  v3 = a1[1];
  v27 = *((_OWORD *)a1 + 1);
  v5 = (void *)a1[4];
  swift_bridgeObjectRetain();
  outlined retain of String((uint64_t)&v27);
  v6 = v5;
  swift_bridgeObjectRetain();
  outlined retain of String((uint64_t)&v27);
  v7 = v6;
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.default.getter();
  v25 = v4;
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v26 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    v12 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    outlined release of String((uint64_t)&v27);
    swift_bridgeObjectRelease();

    outlined release of String((uint64_t)&v27);
    _os_log_impl(&dword_1BD004000, v8, v9, "User did tap discoverability app with bundleIdentifier: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v11, -1, -1);
    MEMORY[0x1C3B751B8](v10, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease();
    outlined release of String((uint64_t)&v27);
    swift_bridgeObjectRelease();

    outlined release of String((uint64_t)&v27);
  }
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for FBSOpenApplicationOptions);
  v14 = (id)TUUnlockDeviceWithPromptFrontBoardOptionsDictionary();
  static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  specialized _dictionaryUpCast<A, B, C, D>(_:)();
  v16 = v15;
  swift_bridgeObjectRelease();
  @nonobjc FBSOpenApplicationOptions.__allocating_init(dictionary:)(v16);
  v18 = v17;
  v19 = objc_msgSend((id)objc_opt_self(), sel_serviceWithDefaultShellEndpoint);
  if (v19)
  {
    v20 = v19;
    v21 = (void *)MEMORY[0x1C3B72E00](v25, v3);
    objc_msgSend(v20, sel_openApplication_withOptions_completion_, v21, v18, 0);

  }
  else
  {
    v22 = Logger.logObject.getter();
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1BD004000, v22, v23, "Unable to launch discoverability app because FBSOpenApplicationService was null", v24, 2u);
      MEMORY[0x1C3B751B8](v24, -1, -1);
    }

    v21 = v18;
  }

}

void SharePlayDiscoverabilityMenuView.collectionViewLayout.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___collectionViewLayout);
  if (!v2)
  {
    v3 = (void *)closure #1 in SharePlayDiscoverabilityMenuView.collectionViewLayout.getter();
    OUTLINED_FUNCTION_17_3(v3);

    v2 = 0;
  }
  v4 = v2;
  OUTLINED_FUNCTION_18();
}

uint64_t closure #1 in SharePlayDiscoverabilityMenuView.collectionViewLayout.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  Class isa;
  id v13;
  id v14;
  id v15;
  UICollectionViewCompositionalLayout *v16;
  uint64_t v17;
  uint64_t v18;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_estimatedDimension_, 0.0);
  v2 = objc_msgSend(v0, sel_fractionalHeightDimension_, 1.0);
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_sizeWithWidthDimension_heightDimension_, v1, v2);

  v5 = objc_msgSend((id)objc_opt_self(), sel_itemWithLayoutSize_, v4);
  objc_msgSend(v5, sel_setContentInsets_, *MEMORY[0x1E0DC3298], *(double *)(MEMORY[0x1E0DC3298] + 8), *(double *)(MEMORY[0x1E0DC3298] + 16), *(double *)(MEMORY[0x1E0DC3298] + 24));
  v6 = objc_msgSend(v0, sel_estimatedDimension_, 0.0);
  v7 = objc_msgSend(v0, sel_fractionalHeightDimension_, 1.0);
  v8 = objc_msgSend(v3, sel_sizeWithWidthDimension_heightDimension_, v6, v7);

  v9 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v10 + 32) = v5;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for NSCollectionLayoutItem);
  v11 = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v9, sel_horizontalGroupWithLayoutSize_subitems_, v8, isa);

  v14 = objc_msgSend((id)objc_opt_self(), sel_sectionWithGroup_, v13);
  static Platform.current.getter();
  objc_msgSend(v14, sel_setInterGroupSpacing_, 10.0);
  static Platform.current.getter();
  static Platform.current.getter();
  objc_msgSend(v14, sel_setContentInsets_, 0.0, 8.0, 0.0, 8.0);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC35D8]), sel_init);
  objc_msgSend(v15, sel_setScrollDirection_, 1);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UICollectionViewCompositionalLayout);
  UICollectionViewCompositionalLayout.__allocating_init(section:configuration:)(v16, (NSCollectionLayoutSection)v14, (UICollectionViewCompositionalLayoutConfiguration)v15);
  v18 = v17;

  return v18;
}

void __swiftcall UICollectionViewCompositionalLayout.__allocating_init(section:configuration:)(UICollectionViewCompositionalLayout *__return_ptr retstr, NSCollectionLayoutSection section, UICollectionViewCompositionalLayoutConfiguration configuration)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithSection_configuration_, section.super.isa, configuration.super.isa);

}

void SharePlayDiscoverabilityMenuView.collectionView.getter()
{
  CallControlsFullScreenStatusView.textContainer.getter(&OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___collectionView, (uint64_t (*)(uint64_t))closure #1 in SharePlayDiscoverabilityMenuView.collectionView.getter);
}

id closure #1 in SharePlayDiscoverabilityMenuView.collectionView.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  SharePlayDiscoverabilityMenuView.collectionViewLayout.getter();
  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC35B8]), sel_initWithFrame_collectionViewLayout_, v0, 0.0, 0.0, 0.0, 0.0);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setShowsHorizontalScrollIndicator_, 0);
  v3 = (void *)objc_opt_self();
  v4 = v2;
  v5 = objc_msgSend(v3, sel_clearColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  return v4;
}

void SharePlayDiscoverabilityMenuView.collectionView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___collectionView);
}

void SharePlayDiscoverabilityMenuView.collectionView.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  SharePlayDiscoverabilityMenuView.collectionView.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void SharePlayDiscoverabilityMenuView.collectionView.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))SharePlayDiscoverabilityMenuView.collectionView.setter);
}

id SharePlayDiscoverabilityMenuView.init(type:presentationStyle:foregroundApp:)(char a1, char a2, void *a3)
{
  _BYTE *v3;
  uint64_t v4;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  objc_super v13;

  v6 = a1 & 1;
  v7 = a2 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewCell, Application>);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_1();
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___moreButton] = 0;
  __swift_storeEnumTagSinglePayload((uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___appCellRegistration], 1, 1, v8);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___collectionViewLayout] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___collectionView] = 0;
  v3[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView_type] = v6;
  v3[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView_presentationStyle] = v7;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView_foregroundApp] = a3;
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for SharePlayDiscoverabilityMenuView();
  v10 = a3;
  v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  SharePlayDiscoverabilityMenuView.appCellRegistration.getter(v4);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v8);
  SharePlayDiscoverabilityMenuView.setupRootView()();

  return v11;
}

uint64_t type metadata accessor for SharePlayDiscoverabilityMenuView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SharePlayDiscoverabilityMenuView;
  if (!type metadata singleton initialization cache for SharePlayDiscoverabilityMenuView)
    return swift_getSingletonMetadata();
  return result;
}

void SharePlayDiscoverabilityMenuView.setupRootView()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)(void);
  void *v8;
  uint64_t (*v9)(void);
  void *v10;
  uint64_t (*v11)(void);
  void *v12;
  void *v13;
  id v14;
  uint64_t *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  double v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  Class isa;
  _QWORD v71[2];

  v1 = v0;
  v2 = type metadata accessor for SharePlayAppCell();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v7 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90);
  v8 = (void *)((uint64_t (*)(uint64_t))v7)(v3);
  objc_msgSend(v1, sel_addSubview_, v8);

  v9 = *(uint64_t (**)(void))((*v6 & *v1) + 0xA8);
  v10 = (void *)v9();
  objc_msgSend(v1, sel_addSubview_, v10);

  v11 = *(uint64_t (**)(void))((*v6 & *v1) + 0xF8);
  v12 = (void *)v11();
  objc_msgSend(v1, sel_addSubview_, v12);

  v13 = (void *)v11();
  objc_msgSend(v13, sel_setDataSource_, v1);

  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView_presentationStyle) & 1) == 0)
  {
    v25 = objc_msgSend(v1, sel_heightAnchor);
    static Platform.current.getter();
    v26 = objc_msgSend(v25, sel_constraintEqualToConstant_, 160.0);

    objc_msgSend(v26, sel_setActive_, 1);
    goto LABEL_6;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v14 = @nonobjc UIImage.__allocating_init(systemName:)();
  if (!v14)
  {
    __break(1u);
    goto LABEL_13;
  }
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  v5[2] = 0xD000000000000012;
  v5[3] = 0x80000001BD6822E0;
  v5[4] = v14;
  v5[5] = TPNumberPadCharacter.rawValue.getter;
  v5[6] = 0;
  v15 = (_QWORD *)((char *)v5 + *(int *)(v2 + 24));
  *v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  v16 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIHostingController<SharePlayAppCell>));
  v17 = (void *)UIHostingController.init(rootView:)();
  v18 = objc_msgSend(v17, sel_view);
  if (!v18)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v19 = v18;
  objc_msgSend(v18, sel_intrinsicContentSize);
  v21 = v20;

  v22 = (void *)v11();
  v23 = objc_msgSend(v22, sel_heightAnchor);

  v24 = objc_msgSend(v23, sel_constraintEqualToConstant_, v21);
  objc_msgSend(v24, sel_setActive_, 1);

LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BD6564F0;
  v28 = (void *)v7();
  v29 = objc_msgSend(v28, sel_topAnchor);

  v30 = objc_msgSend(v1, (SEL)&selRef_setUserInteractionEnabled_ + 4);
  v31 = 12.0;
  if (static Platform.current.getter() == 1)
    v32 = 16.0;
  else
    v32 = 12.0;
  v33 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v30, v32);

  *(_QWORD *)(v27 + 32) = v33;
  v34 = (void *)v7();
  v35 = objc_msgSend(v34, sel_leadingAnchor);

  v36 = objc_msgSend(v1, sel_leadingAnchor);
  static Platform.current.getter();
  v37 = objc_msgSend(v35, (SEL)&selRef_initWithLayoutStyle_ + 7, v36, 16.0);

  *(_QWORD *)(v27 + 40) = v37;
  v38 = (void *)v7();
  v39 = objc_msgSend(v38, sel_trailingAnchor);

  v40 = (void *)v9();
  v41 = objc_msgSend(v40, sel_leadingAnchor);

  v42 = objc_msgSend(v39, sel_constraintLessThanOrEqualToAnchor_, v41);
  *(_QWORD *)(v27 + 48) = v42;
  v43 = (void *)v9();
  v44 = objc_msgSend(v43, sel_topAnchor);

  v45 = (void *)v7();
  v46 = objc_msgSend(v45, sel_topAnchor);

  v47 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v46);
  *(_QWORD *)(v27 + 56) = v47;
  v48 = (void *)v9();
  v49 = objc_msgSend(v48, sel_trailingAnchor);

  v50 = objc_msgSend(v1, sel_trailingAnchor);
  static Platform.current.getter();
  v51 = objc_msgSend(v49, sel_constraintEqualToAnchor_constant_, v50, -16.0);

  *(_QWORD *)(v27 + 64) = v51;
  v52 = (void *)v11();
  v53 = objc_msgSend(v52, sel_leadingAnchor);

  v54 = objc_msgSend(v1, sel_leadingAnchor);
  v55 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v54);

  *(_QWORD *)(v27 + 72) = v55;
  v56 = (void *)v11();
  v57 = objc_msgSend(v56, sel_trailingAnchor);

  v58 = objc_msgSend(v1, sel_trailingAnchor);
  v59 = objc_msgSend(v57, sel_constraintEqualToAnchor_, v58);

  *(_QWORD *)(v27 + 80) = v59;
  v60 = (void *)v11();
  v61 = objc_msgSend(v60, sel_topAnchor);

  v62 = (void *)v7();
  v63 = objc_msgSend(v62, sel_bottomAnchor);

  if (static Platform.current.getter() == 1)
    v31 = 16.0;
  v64 = (void *)objc_opt_self();
  v65 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v63, v31);

  *(_QWORD *)(v27 + 88) = v65;
  v66 = (void *)v11();
  v67 = objc_msgSend(v66, sel_bottomAnchor);

  v68 = objc_msgSend(v1, sel_bottomAnchor);
  v69 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v68);

  *(_QWORD *)(v27 + 96) = v69;
  v71[1] = v27;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v64, sel_activateConstraints_, isa);

}

void SharePlayDiscoverabilityMenuView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void SharePlayDiscoverabilityMenuView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___moreButton] = 0;
  v1 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___appCellRegistration];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewCell, Application>);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___collectionViewLayout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32SharePlayDiscoverabilityMenuView____lazy_storage___collectionView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id SharePlayDiscoverabilityMenuView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void SharePlayDiscoverabilityMenuView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharePlayDiscoverabilityMenuView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharePlayDiscoverabilityMenuView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Int __swiftcall SharePlayDiscoverabilityMenuView.collectionView(_:numberOfItemsInSection:)(UICollectionView *_, Swift::Int numberOfItemsInSection)
{
  Swift::Int result;

  SharePlayDiscoverabilityMenuView.sortedSharePlayApps.getter();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0();
  return result;
}

unint64_t SharePlayDiscoverabilityMenuView.collectionView(_:cellForItemAt:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewCell, Application>);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  SharePlayDiscoverabilityMenuView.sortedSharePlayApps.getter();
  v4 = v3;
  result = IndexPath.item.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v4 + 16))
  {
    v6 = *(void **)(v4 + 40 * result + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = v6;
    swift_bridgeObjectRelease();
    SharePlayDiscoverabilityMenuView.appCellRegistration.getter(v0);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UICollectionViewCell);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = v7;
    v9 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
    return v9;
  }
  __break(1u);
  return result;
}

void sub_1BD2C87F8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x90))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2C8830()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xA8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2C8868()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xF8))();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for SharePlayDiscoverabilityMenuView()
{
  return type metadata accessor for SharePlayDiscoverabilityMenuView();
}

void type metadata completion function for SharePlayDiscoverabilityMenuView()
{
  unint64_t v0;

  type metadata accessor for UICollectionView.CellRegistration<UICollectionViewCell, Application>?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SharePlayDiscoverabilityMenuView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityMenuView.titleLabel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityMenuView.titleLabel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityMenuView.titleLabel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityMenuView.moreButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityMenuView.moreButton.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityMenuView.moreButton.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityMenuView.collectionView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityMenuView.collectionView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityMenuView.collectionView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityMenuView.__allocating_init(type:presentationStyle:foregroundApp:)(char a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 272))(a1 & 1, a2 & 1);
}

void type metadata accessor for UICollectionView.CellRegistration<UICollectionViewCell, Application>?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewCell, Application>?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewCell, Application>);
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewCell, Application>?);
  }
}

void SharePlayDiscoverabilityMenuView.didTapMore()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  NSURL *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;

  v0 = type metadata accessor for URL();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  URL.init(string:)();
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v9, (uint64_t)v7, &demangling cache variable for type metadata for URL?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v0) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v9, &demangling cache variable for type metadata for URL?);
    v9 = v7;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v7, v0);
    URL._bridgeToObjectiveC()(v10);
    v12 = v11;
    TUOpenSensitiveURL();

    v13 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (one-time initialization token for appLaunchTriggeredPreferringHUDDismissal != -1)
      swift_once();
    objc_msgSend(v13, sel_postNotificationName_object_, static Strings.Notifications.appLaunchTriggeredPreferringHUDDismissal, 0);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v9, &demangling cache variable for type metadata for URL?);
}

uint64_t sub_1BD2C8DA4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in SharePlayDiscoverabilityMenuView.appCellRegistration.getter(uint64_t a1, uint64_t a2, __int128 *a3)
{
  return closure #1 in closure #1 in SharePlayDiscoverabilityMenuView.appCellRegistration.getter(a1, a2, a3);
}

uint64_t outlined assign with take of UICollectionView.CellRegistration<UICollectionViewCell, Application>?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UICollectionView.CellRegistration<UICollectionViewCell, Application>?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in SharePlayDiscoverabilityMenuView.appCellRegistration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in SharePlayDiscoverabilityMenuView.appCellRegistration.getter(*(__int128 **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t lazy protocol witness table accessor for type UIHostingConfiguration<SharePlayAppCell, EmptyView> and conformance UIHostingConfiguration<A, B>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UIHostingConfiguration<SharePlayAppCell, EmptyView> and conformance UIHostingConfiguration<A, B>;
  if (!lazy protocol witness table cache variable for type UIHostingConfiguration<SharePlayAppCell, EmptyView> and conformance UIHostingConfiguration<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for UIHostingConfiguration<SharePlayAppCell, EmptyView>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDC120], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIHostingConfiguration<SharePlayAppCell, EmptyView> and conformance UIHostingConfiguration<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SharePlayAppCell and conformance SharePlayAppCell()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type SharePlayAppCell and conformance SharePlayAppCell;
  if (!lazy protocol witness table cache variable for type SharePlayAppCell and conformance SharePlayAppCell)
  {
    v1 = type metadata accessor for SharePlayAppCell();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SharePlayAppCell, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SharePlayAppCell and conformance SharePlayAppCell);
  }
  return result;
}

void partial apply for closure #1 in closure #1 in closure #1 in closure #1 in SharePlayDiscoverabilityMenuView.appCellRegistration.getter(uint64_t *a1)
{
  uint64_t v1;

  closure #1 in closure #1 in closure #1 in closure #1 in SharePlayDiscoverabilityMenuView.appCellRegistration.getter(a1, v1);
}

uint64_t outlined init with take of SharePlayAppCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharePlayAppCell();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD2C8EFC()
{
  return 8;
}

uint64_t sub_1BD2C8F08()
{
  return swift_release();
}

uint64_t sub_1BD2C8F10(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BD2C8F24(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t InCallCallControlsService.__allocating_init(activeCall:localVideoSupported:letMeInState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  InCallCallControlsService.init(activeCall:localVideoSupported:letMeInState:)(a1, a2);
  return v4;
}

void InCallCallControlsService.updateMode(_:)()
{
  CurrentValueSubject.send(_:)();
  OUTLINED_FUNCTION_36();
}

uint64_t key path getter for InCallCallControlsService.controlsManager : InCallCallControlsService@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  *a2 = result;
  return result;
}

uint64_t key path setter for InCallCallControlsService.controlsManager : InCallCallControlsService()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

void InCallCallControlsService.controlsManager.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2C9078()
{
  OUTLINED_FUNCTION_32();
}

void InCallCallControlsService.controlsManager.setter()
{
  void *v0;

  OUTLINED_FUNCTION_34_32();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_44_35();

  OUTLINED_FUNCTION_32();
}

void InCallCallControlsService.controlsManager.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

{
  id *v0;
  void *v1;
  char v2;

  OUTLINED_FUNCTION_28_51();
  swift_unknownObjectWeakAssign();
  if ((v2 & 1) != 0)
  {

    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();

  }
  OUTLINED_FUNCTION_4_2(v0);
}

void sub_1BD2C90E4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t key path getter for InCallCallControlsService.videoTileConversationController : InCallCallControlsService@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 24;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  *a2 = result;
  return result;
}

uint64_t key path setter for InCallCallControlsService.videoTileConversationController : InCallCallControlsService()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

void InCallCallControlsService.videoTileConversationController.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2C9204()
{
  OUTLINED_FUNCTION_32();
}

void InCallCallControlsService.videoTileConversationController.setter(void *a1)
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_44_35();

  OUTLINED_FUNCTION_32();
}

void InCallCallControlsService.videoTileConversationController.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

{
  id *v0;
  void *v1;
  char v2;

  OUTLINED_FUNCTION_28_51();
  swift_unknownObjectWeakAssign();
  if ((v2 & 1) != 0)
  {

    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();

  }
  OUTLINED_FUNCTION_4_2(v0);
}

void sub_1BD2C927C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

void InCallCallControlsService.init(activeCall:localVideoSupported:letMeInState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;

  v5 = v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v9 = v5 + OBJC_IVAR____TtC15ConversationKit25InCallCallControlsService__hasPendingParticipant;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v9, v3, v7);
  v10 = OBJC_IVAR____TtC15ConversationKit25InCallCallControlsService_conversationStateSubject;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<TUConversationState, Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)(v5 + v10) = OUTLINED_FUNCTION_12_72();
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 184))(ObjectType, a2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<TUCallStatus, Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15ConversationKit25InCallCallControlsService_callStatusSubject) = OUTLINED_FUNCTION_12_72();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<InCallControlsMode?, Never>);
  OUTLINED_FUNCTION_14_0();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15ConversationKit25InCallCallControlsService_modeSubject) = OUTLINED_FUNCTION_12_72();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<TUConversationLetMeInRequestState, Never>);
  OUTLINED_FUNCTION_14_0();
  v12 = OUTLINED_FUNCTION_12_72();
  swift_unknownObjectRelease();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC15ConversationKit25InCallCallControlsService_letMeInStateSubject) = v12;
  OUTLINED_FUNCTION_65_1();
}

void InCallCallControlsService.conversation.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2C946C(_QWORD *a1)
{
  if (a1)
  {
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x290))();

  }
  OUTLINED_FUNCTION_32();
}

void InCallCallControlsService.currentCallStatus.getter()
{
  CurrentValueSubject.value.getter();
  OUTLINED_FUNCTION_36();
}

void InCallCallControlsService.currentConversationState.getter()
{
  OUTLINED_FUNCTION_38_38();
  OUTLINED_FUNCTION_36();
}

void InCallCallControlsService.currentMode.getter()
{
  CurrentValueSubject.value.getter();
  OUTLINED_FUNCTION_36();
}

void InCallCallControlsService.currentLetMeInState.getter()
{
  OUTLINED_FUNCTION_38_38();
  OUTLINED_FUNCTION_36();
}

void InCallCallControlsService.callStatus.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_40();
  OUTLINED_FUNCTION_13_47();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type CurrentValueSubject<TUCallStatus, Never> and conformance CurrentValueSubject<A, B>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TUCallStatus and conformance TUCallStatus, type metadata accessor for TUCallStatus);
  OUTLINED_FUNCTION_2_98();
  OUTLINED_FUNCTION_31_46(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<TUCallStatus, Never>> and conformance Publishers.RemoveDuplicates<A>);
  OUTLINED_FUNCTION_9_77();
  OUTLINED_FUNCTION_5_95();
  OUTLINED_FUNCTION_65_1();
}

void InCallCallControlsService.conversationState.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_40();
  OUTLINED_FUNCTION_13_47();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type CurrentValueSubject<TUConversationState, Never> and conformance CurrentValueSubject<A, B>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TUConversationState and conformance TUConversationState, type metadata accessor for TUConversationState);
  OUTLINED_FUNCTION_2_98();
  OUTLINED_FUNCTION_31_46(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<TUConversationState, Never>> and conformance Publishers.RemoveDuplicates<A>);
  OUTLINED_FUNCTION_9_77();
  OUTLINED_FUNCTION_5_95();
  OUTLINED_FUNCTION_65_1();
}

void InCallCallControlsService.mode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.CompactMap<CurrentValueSubject<InCallControlsMode?, Never>, InCallControlsMode>);
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_7();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.CompactMap<CurrentValueSubject<InCallControlsMode?, Never>, InCallControlsMode>>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  swift_retain();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type CurrentValueSubject<InCallControlsMode?, Never> and conformance CurrentValueSubject<A, B>);
  Publisher.compactMap<A>(_:)();
  swift_release();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.CompactMap<CurrentValueSubject<InCallControlsMode?, Never>, InCallControlsMode> and conformance Publishers.CompactMap<A, B>, &demangling cache variable for type metadata for Publishers.CompactMap<CurrentValueSubject<InCallControlsMode?, Never>, InCallControlsMode>);
  lazy protocol witness table accessor for type InCallControlsMode and conformance InCallControlsMode();
  Publisher<>.removeDuplicates()();
  OUTLINED_FUNCTION_101(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Publishers.CompactMap<CurrentValueSubject<InCallControlsMode?, Never>, InCallControlsMode>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.CompactMap<CurrentValueSubject<InCallControlsMode?, Never>, InCallControlsMode>>);
  OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_42_4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_52_1();
}

_BYTE *closure #1 in InCallCallControlsService.mode.getter@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t lazy protocol witness table accessor for type InCallControlsMode and conformance InCallControlsMode()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsMode and conformance InCallControlsMode;
  if (!lazy protocol witness table cache variable for type InCallControlsMode and conformance InCallControlsMode)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsMode, &type metadata for InCallControlsMode);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsMode and conformance InCallControlsMode);
  }
  return result;
}

void InCallCallControlsService.letMeInStates.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_43_40();
  OUTLINED_FUNCTION_13_47();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type CurrentValueSubject<TUConversationLetMeInRequestState, Never> and conformance CurrentValueSubject<A, B>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type TUConversationLetMeInRequestState and conformance TUConversationLetMeInRequestState, type metadata accessor for TUConversationLetMeInRequestState);
  OUTLINED_FUNCTION_2_98();
  OUTLINED_FUNCTION_31_46(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<TUConversationLetMeInRequestState, Never>> and conformance Publishers.RemoveDuplicates<A>);
  OUTLINED_FUNCTION_9_77();
  OUTLINED_FUNCTION_5_95();
  OUTLINED_FUNCTION_65_1();
}

void InCallCallControlsService.updateCallStatus(_:)()
{
  CurrentValueSubject.send(_:)();
  OUTLINED_FUNCTION_36();
}

void InCallCallControlsService.updateConversationState(_:)()
{
  InCallCallControlsService.updateConversationState(_:)();
}

{
  CurrentValueSubject.send(_:)();
  OUTLINED_FUNCTION_36();
}

void InCallCallControlsService.updateLetMeInState(_:)()
{
  InCallCallControlsService.updateConversationState(_:)();
}

uint64_t InCallCallControlsService.hasPendingParticipant.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_19();
  swift_release();
  return v1;
}

uint64_t key path getter for InCallCallControlsService.hasPendingParticipant : InCallCallControlsService@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = InCallCallControlsService.hasPendingParticipant.getter();
  *a1 = result & 1;
  return result;
}

void sub_1BD2C9A58(_BYTE *a1@<X8>)
{
  *a1 = InCallCallControlsService.hasPendingParticipant.getter() & 1;
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for InCallCallControlsService.hasPendingParticipant : InCallCallControlsService()
{
  return InCallCallControlsService.hasPendingParticipant.setter();
}

void sub_1BD2C9AA4()
{
  InCallCallControlsService.hasPendingParticipant.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t InCallCallControlsService.hasPendingParticipant.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

void InCallCallControlsService.$hasPendingParticipant.getter()
{
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

void key path setter for InCallCallControlsService.$hasPendingParticipant : InCallCallControlsService(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  InCallCallControlsService.$hasPendingParticipant.setter((uint64_t)v4);
}

void InCallCallControlsService.$hasPendingParticipant.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, a1, v1);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.setter();
  swift_endAccess();
  OUTLINED_FUNCTION_101(a1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_91();
}

void InCallCallControlsService.hasPendingParticipantPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<Bool>.Publisher>);
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher);
  Publisher<>.removeDuplicates()();
  OUTLINED_FUNCTION_101(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Published<Bool>.Publisher> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<Bool>.Publisher>);
  OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_42_4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_52_1();
}

uint64_t InCallCallControlsService.updateConversation(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  outlined init with copy of Conversation?(a1, (uint64_t)&v9);
  if (v10)
  {
    outlined init with take of Notice(&v9, (uint64_t)v11);
    v1 = v12;
    v2 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 128))(v1, v2);
    specialized Set.isEmpty.getter(v3);
    swift_bridgeObjectRelease();
    InCallCallControlsService.hasPendingParticipant.setter();
    if (one-time initialization token for sidebar != -1)
      swift_once();
    v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)&static Logger.sidebar);
    swift_retain();
    v5 = Logger.logObject.getter();
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v7 = 67109120;
      LOBYTE(v9) = InCallCallControlsService.hasPendingParticipant.getter() & 1;
      LODWORD(v9) = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_19();
      _os_log_impl(&dword_1BD004000, v5, v6, "CallControlsService updated conversation; hasPendingParticipant = %{BOOL}d",
        v7,
        8u);
      MEMORY[0x1C3B751B8](v7, -1, -1);

    }
    else
    {

      OUTLINED_FUNCTION_19();
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    outlined destroy of Conversation?((uint64_t)&v9);
    return InCallCallControlsService.hasPendingParticipant.setter();
  }
}

Swift::Void __swiftcall InCallCallControlsService.joinConversation()()
{
  InCallCallControlsService.joinConversation()();
}

Swift::Void __swiftcall InCallCallControlsService.leaveConversation()()
{
  InCallCallControlsService.joinConversation()();
}

Swift::Void __swiftcall InCallCallControlsService.cancelJoinCountdown()()
{
  InCallCallControlsService.joinConversation()();
}

void InCallCallControlsService.joinConversation()()
{
  void (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_34_32();
  OUTLINED_FUNCTION_2_0();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v0();

  }
  OUTLINED_FUNCTION_32();
}

uint64_t InCallCallControlsService.muted.getter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_3_94((void (*)(uint64_t *__return_ptr))closure #1 in InCallCallControlsService.muted.getter, a2, (void (*)(uint64_t *__return_ptr))protocol witness for static LayoutValueKey.defaultValue.getter in conformance LayoutPositionKey);
}

uint64_t closure #1 in InCallCallControlsService.muted.getter@<X0>(_QWORD *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x5E0))();
  *a2 = (result & 1) == 0;
  return result;
}

uint64_t specialized InCallCallControlsService.fromControlManager<A>(_:defaultValue:)(void (*a1)(uint64_t *__return_ptr), uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v3 + 16);
  if (v6)
  {
    v7 = (void *)v6;
    a1(&v13);

  }
  else
  {
    if (one-time initialization token for sidebar != -1)
      swift_once();
    v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)&static Logger.sidebar);
    v9 = Logger.logObject.getter();
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1BD004000, v9, v10, "[InCallCallControlsService] Missing control manager.", v11, 2u);
      MEMORY[0x1C3B751B8](v11, -1, -1);
    }

    a3(&v13);
  }
  return v13;
}

{
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v3 + 16);
  if (v6)
  {
    v7 = (void *)v6;
    a1(&v13);

  }
  else
  {
    if (one-time initialization token for sidebar != -1)
      swift_once();
    v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)&static Logger.sidebar);
    v9 = Logger.logObject.getter();
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1BD004000, v9, v10, "[InCallCallControlsService] Missing control manager.", v11, 2u);
      MEMORY[0x1C3B751B8](v11, -1, -1);
    }

    a3(&v13);
  }
  return v13;
}

uint64_t InCallCallControlsService.mutedStates.getter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_4_101((void (*)(uint64_t *__return_ptr))closure #1 in InCallCallControlsService.mutedStates.getter, a2, (void (*)(uint64_t *__return_ptr))closure #2 in InCallCallControlsService.mutedStates.getter);
}

uint64_t closure #1 in InCallCallControlsService.mutedStates.getter@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t *v19;

  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<Published<Bool>.Publisher, Bool>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.Map<Published<Bool>.Publisher, Bool>>);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x5F8))(v13);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher);
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Map<Published<Bool>.Publisher, Bool> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<Published<Bool>.Publisher, Bool>);
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Publishers.Map<Published<Bool>.Publisher, Bool>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.Map<Published<Bool>.Publisher, Bool>>);
  v16 = Publisher.eraseToAnyPublisher()();
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  *v19 = v16;
  return result;
}

_BYTE *closure #1 in closure #1 in InCallCallControlsService.mutedStates.getter@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

void closure #2 in InCallCallControlsService.mutedStates.getter(uint64_t *a1@<X8>)
{
  closure #2 in InCallCallControlsService.mutedStates.getter(a1);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  Just.init(_:)();
  OUTLINED_FUNCTION_34_7(&lazy protocol witness table cache variable for type Just<Bool> and conformance Just<A>);
  v6 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  *a1 = v6;
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall InCallCallControlsService.mutateMutedState(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if ((OUTLINED_FUNCTION_3_94((void (*)(uint64_t *__return_ptr))closure #1 in InCallCallControlsService.muted.getter, v1, (void (*)(uint64_t *__return_ptr))protocol witness for static LayoutValueKey.defaultValue.getter in conformance LayoutPositionKey) & 1) != a1)
  {
    OUTLINED_FUNCTION_2_0();
    v3 = MEMORY[0x1C3B752C0](v2 + 16);
    if (v3)
    {
      v4 = (void *)v3;
      ConversationControlsManager.setLocalAudio(muted:bluetoothAudioFormat:)();

    }
  }
}

uint64_t InCallCallControlsService.localVideoSupported.getter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_3_94((void (*)(uint64_t *__return_ptr))closure #1 in InCallCallControlsService.localVideoSupported.getter, a2, (void (*)(uint64_t *__return_ptr))closure #2 in InCallCallControlsService.localVideoSupported.getter);
}

uint64_t closure #1 in InCallCallControlsService.localVideoSupported.getter@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x610))();
  *a2 = result & 1;
  return result;
}

void closure #2 in InCallCallControlsService.localVideoSupported.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t InCallCallControlsService.localVideoSupportedState.getter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_4_101((void (*)(uint64_t *__return_ptr))closure #1 in InCallCallControlsService.localVideoSupportedState.getter, a2, (void (*)(uint64_t *__return_ptr))closure #2 in InCallCallControlsService.localVideoSupportedState.getter);
}

uint64_t closure #1 in InCallCallControlsService.localVideoSupportedState.getter@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return closure #1 in InCallCallControlsService.localVideoSupportedState.getter(a1, (uint64_t)closure #1 in InCallCallControlsService.mode.getter, a2);
}

void closure #2 in InCallCallControlsService.localVideoSupportedState.getter(uint64_t *a1@<X8>)
{
  closure #2 in InCallCallControlsService.mutedStates.getter(a1);
}

uint64_t InCallCallControlsService.isVideoOn.getter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_3_94((void (*)(uint64_t *__return_ptr))closure #1 in InCallCallControlsService.isVideoOn.getter, a2, (void (*)(uint64_t *__return_ptr))closure #2 in InCallCallControlsService.localVideoSupported.getter);
}

uint64_t closure #1 in InCallCallControlsService.isVideoOn.getter@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x610))();
  *a2 = BYTE1(result) & 1;
  return result;
}

uint64_t InCallCallControlsService.isVideoOnState.getter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_4_101((void (*)(uint64_t *__return_ptr))closure #1 in InCallCallControlsService.isVideoOnState.getter, a2, (void (*)(uint64_t *__return_ptr))closure #2 in InCallCallControlsService.localVideoSupportedState.getter);
}

uint64_t closure #1 in InCallCallControlsService.isVideoOnState.getter@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return closure #1 in InCallCallControlsService.localVideoSupportedState.getter(a1, (uint64_t)closure #1 in closure #1 in InCallCallControlsService.isVideoOnState.getter, a2);
}

uint64_t closure #1 in InCallCallControlsService.localVideoSupportedState.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t *v21;

  v20 = a2;
  v21 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ControlsActionState>.Publisher);
  OUTLINED_FUNCTION_19_11();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<Published<ControlsActionState>.Publisher, Bool>);
  OUTLINED_FUNCTION_26_24();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.Map<Published<ControlsActionState>.Publisher, Bool>>);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_11_2();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x628))(v17);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<ControlsActionState>.Publisher and conformance Published<A>.Publisher, (uint64_t *)&demangling cache variable for type metadata for Published<ControlsActionState>.Publisher);
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v8);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Map<Published<ControlsActionState>.Publisher, Bool> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<Published<ControlsActionState>.Publisher, Bool>);
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v3);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Publishers.Map<Published<ControlsActionState>.Publisher, Bool>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Publishers.Map<Published<ControlsActionState>.Publisher, Bool>>);
  v18 = Publisher.eraseToAnyPublisher()();
  result = OUTLINED_FUNCTION_101(v4, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  *v21 = v18;
  return result;
}

uint64_t closure #1 in closure #1 in InCallCallControlsService.isVideoOnState.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 1);
  return result;
}

Swift::Void __swiftcall InCallCallControlsService.mutateVideoOnState(_:)(Swift::Bool a1)
{
  uint64_t v1;

  if ((OUTLINED_FUNCTION_3_94((void (*)(uint64_t *__return_ptr))closure #1 in InCallCallControlsService.isVideoOn.getter, v1, (void (*)(uint64_t *__return_ptr))closure #2 in InCallCallControlsService.localVideoSupported.getter) & 1) != a1)
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_26();
  }
}

void InCallCallControlsService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit25InCallCallControlsService__hasPendingParticipant;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  OUTLINED_FUNCTION_3_88();
  OUTLINED_FUNCTION_3_88();
  OUTLINED_FUNCTION_3_88();
  OUTLINED_FUNCTION_3_88();
  OUTLINED_FUNCTION_0();
}

uint64_t InCallCallControlsService.__deallocating_deinit()
{
  InCallCallControlsService.deinit();
  return swift_deallocClassInstance();
}

void protocol witness for CallControlsService.conversation.getter in conformance InCallCallControlsService()
{
  InCallCallControlsService.conversation.getter();
}

void protocol witness for CallControlsService.currentCallStatus.getter in conformance InCallCallControlsService()
{
  InCallCallControlsService.currentCallStatus.getter();
}

void protocol witness for CallControlsService.currentConversationState.getter in conformance InCallCallControlsService()
{
  InCallCallControlsService.currentConversationState.getter();
}

void protocol witness for CallControlsService.currentMode.getter in conformance InCallCallControlsService()
{
  InCallCallControlsService.currentMode.getter();
}

void protocol witness for CallControlsService.currentLetMeInState.getter in conformance InCallCallControlsService()
{
  InCallCallControlsService.currentLetMeInState.getter();
}

void protocol witness for CallControlsService.callStatus.getter in conformance InCallCallControlsService()
{
  InCallCallControlsService.callStatus.getter();
}

void protocol witness for CallControlsService.conversationState.getter in conformance InCallCallControlsService()
{
  InCallCallControlsService.conversationState.getter();
}

void protocol witness for CallControlsService.mode.getter in conformance InCallCallControlsService()
{
  InCallCallControlsService.mode.getter();
}

void protocol witness for CallControlsService.letMeInStates.getter in conformance InCallCallControlsService()
{
  InCallCallControlsService.letMeInStates.getter();
}

uint64_t protocol witness for CallControlsService.hasPendingParticipant.getter in conformance InCallCallControlsService()
{
  return InCallCallControlsService.hasPendingParticipant.getter() & 1;
}

void protocol witness for CallControlsService.hasPendingParticipantPublisher.getter in conformance InCallCallControlsService()
{
  InCallCallControlsService.hasPendingParticipantPublisher.getter();
}

void protocol witness for CallControlsService.updateCallStatus(_:) in conformance InCallCallControlsService()
{
  InCallCallControlsService.updateCallStatus(_:)();
}

void protocol witness for CallControlsService.updateConversationState(_:) in conformance InCallCallControlsService()
{
  InCallCallControlsService.updateConversationState(_:)();
}

void protocol witness for CallControlsService.updateMode(_:) in conformance InCallCallControlsService()
{
  InCallCallControlsService.updateMode(_:)();
}

void protocol witness for CallControlsService.updateLetMeInState(_:) in conformance InCallCallControlsService()
{
  InCallCallControlsService.updateLetMeInState(_:)();
}

uint64_t protocol witness for CallControlsService.updateConversation(_:) in conformance InCallCallControlsService(uint64_t a1)
{
  return InCallCallControlsService.updateConversation(_:)(a1);
}

uint64_t protocol witness for CallControlsService.controlsManager.getter in conformance InCallCallControlsService()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 16;
  swift_beginAccess();
  return MEMORY[0x1C3B752C0](v1);
}

void protocol witness for CallControlsService.joinConversation() in conformance InCallCallControlsService()
{
  InCallCallControlsService.joinConversation()();
}

void protocol witness for CallControlsService.leaveConversation() in conformance InCallCallControlsService()
{
  InCallCallControlsService.leaveConversation()();
}

void protocol witness for CallControlsService.cancelJoinCountdown() in conformance InCallCallControlsService()
{
  InCallCallControlsService.cancelJoinCountdown()();
}

uint64_t protocol witness for CallControlsService.muted.getter in conformance InCallCallControlsService(uint64_t a1, uint64_t a2)
{
  return InCallCallControlsService.muted.getter(a1, a2) & 1;
}

uint64_t protocol witness for CallControlsService.mutedStates.getter in conformance InCallCallControlsService(uint64_t a1, uint64_t a2)
{
  return InCallCallControlsService.mutedStates.getter(a1, a2);
}

void protocol witness for CallControlsService.mutateMutedState(_:) in conformance InCallCallControlsService(Swift::Bool a1)
{
  InCallCallControlsService.mutateMutedState(_:)(a1);
}

uint64_t protocol witness for CallControlsService.localVideoSupported.getter in conformance InCallCallControlsService(uint64_t a1, uint64_t a2)
{
  return InCallCallControlsService.localVideoSupported.getter(a1, a2) & 1;
}

uint64_t protocol witness for CallControlsService.localVideoSupportedState.getter in conformance InCallCallControlsService(uint64_t a1, uint64_t a2)
{
  return InCallCallControlsService.localVideoSupportedState.getter(a1, a2);
}

uint64_t protocol witness for CallControlsService.isVideoOn.getter in conformance InCallCallControlsService(uint64_t a1, uint64_t a2)
{
  return InCallCallControlsService.isVideoOn.getter(a1, a2) & 1;
}

uint64_t protocol witness for CallControlsService.isVideoOnState.getter in conformance InCallCallControlsService(uint64_t a1, uint64_t a2)
{
  return InCallCallControlsService.isVideoOnState.getter(a1, a2);
}

void protocol witness for CallControlsService.mutateVideoOnState(_:) in conformance InCallCallControlsService(Swift::Bool a1)
{
  InCallCallControlsService.mutateVideoOnState(_:)(a1);
}

uint64_t outlined destroy of Conversation?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BD2CAE3C()
{
  InCallCallControlsService.$hasPendingParticipant.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of CallControlsService.conversation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CallControlsService.currentCallStatus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CallControlsService.currentConversationState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CallControlsService.currentMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CallControlsService.currentLetMeInState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CallControlsService.callStatus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CallControlsService.conversationState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CallControlsService.mode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CallControlsService.letMeInStates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CallControlsService.hasPendingParticipant.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of CallControlsService.hasPendingParticipantPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of CallControlsService.updateCallStatus(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of CallControlsService.updateConversationState(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of CallControlsService.updateMode(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of CallControlsService.updateLetMeInState(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of CallControlsService.updateConversation(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of CallControlsService.controlsManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of CallControlsService.joinConversation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of CallControlsService.leaveConversation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of CallControlsService.cancelJoinCountdown()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of CallControlsService.muted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of CallControlsService.mutedStates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of CallControlsService.mutateMutedState(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of CallControlsService.localVideoSupported.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of CallControlsService.localVideoSupportedState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of CallControlsService.isVideoOn.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of CallControlsService.isVideoOnState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of CallControlsService.mutateVideoOnState(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t ObjC metadata update function for InCallCallControlsService()
{
  return type metadata accessor for InCallCallControlsService();
}

uint64_t type metadata accessor for InCallCallControlsService()
{
  uint64_t result;

  result = type metadata singleton initialization cache for InCallCallControlsService;
  if (!type metadata singleton initialization cache for InCallCallControlsService)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for InCallCallControlsService()
{
  unint64_t v0;

  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for InCallCallControlsService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallCallControlsService.__allocating_init(activeCall:localVideoSupported:letMeInState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

Swift::String __swiftcall String.hashWithSalt(salt:)(Swift::String salt)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  Swift::String result;
  _QWORD v17[10];
  uint64_t v18;
  unint64_t v19;

  v3 = v2;
  v4 = v1;
  object = salt._object;
  countAndFlagsBits = salt._countAndFlagsBits;
  v7 = type metadata accessor for SHA256();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940];
  MEMORY[0x1E0C80A78](v7);
  v9 = type metadata accessor for SHA256Digest();
  v17[4] = *(_QWORD *)(v9 - 8);
  v17[5] = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v17[3] = (char *)v17 - v11;
  v18 = v4;
  v19 = v3;
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = countAndFlagsBits;
  v12._object = object;
  String.append(_:)(v12);
  specialized Data.init<A>(_:)(v18, v19);
  v14 = v13;
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type SHA256 and conformance SHA256, v8, MEMORY[0x1E0CA9930]);
  dispatch thunk of HashFunction.init()();
  v15 = (char *)&loc_1BD2CB14C + dword_1BD2CB454[v14 >> 62];
  v17[2] = v14;
  __asm { BR              X10 }
  return result;
}

uint64_t sub_1BD2CB160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  _ss15withUnsafeBytes2of_q0_x_q0_SWq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lFs5UInt8V_A13Et_sAC_pytTg5037_s10Foundation4DataV06InlineB0V15withB31BytesyxxSWKXEKlFxSWKXEfU_yt_TG5SWxsAC_pRi_zRi0_zlyytIsgyrzo_SiTf1nnc_n063_s9CryptoKit12HashFunctionPAAE6update4datayqd___t10Foundation12I70ProtocolRd__lFy7Regions_7ElementQYd__XEfU_ySWXEfU_AA6SHA256V_AF0H0VTg50U3Kit6SHA256VTf1nncn_n();
  OUTLINED_FUNCTION_3_95();
  v6 = *(_QWORD *)(v5 - 152);
  dispatch thunk of HashFunction.finalize()();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v4, v2);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 144) + 16))(v3, v6, *(_QWORD *)(v5 - 136));
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type SHA256Digest and conformance SHA256Digest, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA92F8], MEMORY[0x1E0CA9308]);
  dispatch thunk of Sequence.makeIterator()();
  v7 = *(_QWORD *)(v5 - 96);
  v8 = *(_QWORD *)(v5 - 88);
  v9 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v5 - 168) = v1;
  if (v8 != v9)
  {
    if (v8 < v9)
    {
      v10 = MEMORY[0x1E0DEE9D8];
      *(_OWORD *)(v5 - 128) = xmmword_1BD6441D0;
      v16 = v8;
      while ((v8 & 0x8000000000000000) == 0)
      {
        if (v16 >= *(_QWORD *)(v7 + 16))
          goto LABEL_15;
        v17 = *(_BYTE *)(v7 + 32 + v16);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = *(_OWORD *)(v5 - 128);
        *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEDE70];
        *(_QWORD *)(v18 + 64) = MEMORY[0x1E0DEDEC8];
        *(_BYTE *)(v18 + 32) = v17;
        v19 = String.init(format:_:)();
        v21 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_2_28();
          v10 = v24;
        }
        v22 = *(_QWORD *)(v10 + 16);
        if (v22 >= *(_QWORD *)(v10 + 24) >> 1)
        {
          OUTLINED_FUNCTION_2_28();
          v10 = v25;
        }
        ++v16;
        *(_QWORD *)(v10 + 16) = v22 + 1;
        v23 = v10 + 16 * v22;
        *(_QWORD *)(v23 + 32) = v19;
        *(_QWORD *)(v23 + 40) = v21;
        if (v9 == v16)
          goto LABEL_3;
      }
      __break(1u);
LABEL_15:
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x1BD2CB450);
  }
  v10 = MEMORY[0x1E0DEE9D8];
LABEL_3:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 - 96) = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  lazy protocol witness table accessor for type [String] and conformance [A]();
  v11 = BidirectionalCollection<>.joined(separator:)();
  v13 = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 - 96) = v11;
  *(_QWORD *)(v5 - 88) = v13;
  v14 = String.init<A>(_:)();
  outlined consume of Data._Representation(*(_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 160));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 144) + 8))(*(_QWORD *)(v5 - 152), *(_QWORD *)(v5 - 136));
  return v14;
}

uint64_t specialized Data.init<A>(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContiguousBytes);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    outlined destroy of ContiguousBytes?((uint64_t)v14);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = _StringObject.sharedUTF8.getter();
      }
      if (v2)
        v4 = (char *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_QWORD *)v2;
    }
    v6 = MEMORY[0x1C3B6FE3C](v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = String.UTF8View._foreignCount()();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = MEMORY[0x1C3B6FE24](v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x1E0C80A78](*(_QWORD *)&v14[0]);
    specialized Data._Representation.withUnsafeMutableBytes<A>(_:)();
    __asm { BR              X12 }
  }
  outlined init with take of Notice(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

uint64_t _ss15withUnsafeBytes2of_q0_x_q0_SWq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lFs5UInt8V_A13Et_sAC_pytTg5037_s10Foundation4DataV06InlineB0V15withB31BytesyxxSWKXEKlFxSWKXEfU_yt_TG5SWxsAC_pRi_zRi0_zlyytIsgyrzo_SiTf1nnc_n063_s9CryptoKit12HashFunctionPAAE6update4datayqd___t10Foundation12I70ProtocolRd__lFy7Regions_7ElementQYd__XEfU_ySWXEfU_AA6SHA256V_AF0H0VTg50U3Kit6SHA256VTf1nncn_n()
{
  type metadata accessor for SHA256();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type SHA256 and conformance SHA256, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

_QWORD *_ss22withUnsafeMutableBytes2of_q0_xz_q0_Swq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lFs5UInt8V_A13Et_sAC_ps16IndexingIteratorVySS8UTF8ViewVG_SitTg5037_s10Foundation4DataV06InlineB0V22withbc17BytesyxxSwKXEKlFxt9KXEfU_s16hi5VySS8jK10VG_Sit_TG5SwxsAC_pRi_zRi0_zlyAJ_SitIsgyrzo_SiTf1nc_n(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  result = a2(&v6, a1, a1 + a4);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

uint64_t _StringGuts._slowEnsureMatchingEncoding(_:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v6 = String.UTF16View.index(_:offsetBy:)();
    OUTLINED_FUNCTION_0_113(v6);
    return v7 | 4;
  }
  else
  {
    v3 = MEMORY[0x1C3B72F2C](15, a1 >> 16);
    OUTLINED_FUNCTION_0_113(v3);
    return v4 | 8;
  }
}

_QWORD *specialized closure #3 in Data.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[3];
  _QWORD v6[2];

  v6[0] = a3;
  v6[1] = a4;
  v5[2] = v6;
  return _sSw17withMemoryRebound2to_q0_xm_q0_SryxGq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lFs5UInt8V_s5NeverOs16IndexingIteratorVySS8UTF8ViewVG_SitTgm5((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))partial apply for specialized closure #1 in closure #3 in Data.init<A>(_:), (uint64_t)v5, a1, a2);
}

void specialized Data._Representation.withUnsafeMutableBytes<A>(_:)()
{
  __asm { BR              X11 }
}

_QWORD *sub_1BD2CBB9C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;

  v7 = v4;
  LOWORD(v8) = a1;
  BYTE2(v8) = BYTE2(a1);
  HIBYTE(v8) = BYTE3(a1);
  v9 = BYTE4(a1);
  v10 = BYTE5(a1);
  v11 = BYTE6(a1);
  result = _ss22withUnsafeMutableBytes2of_q0_xz_q0_Swq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lFs5UInt8V_A13Et_sAC_ps16IndexingIteratorVySS8UTF8ViewVG_SitTg5037_s10Foundation4DataV06InlineB0V22withbc17BytesyxxSwKXEKlFxt9KXEfU_s16hi5VySS8jK10VG_Sit_TG5SwxsAC_pRi_zRi0_zlyAJ_SitIsgyrzo_SiTf1nc_n((uint64_t)&v7, v3, v2, BYTE6(a1));
  v6 = v8 | ((unint64_t)v9 << 32) | ((unint64_t)v10 << 40) | ((unint64_t)v11 << 48);
  *v1 = v7;
  v1[1] = v6;
  return result;
}

uint64_t closure #1 in Data.init<A>(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = Data.InlineData.init(_:)();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = MEMORY[0x1C3B6FDF4]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = MEMORY[0x1C3B6FE0C]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t specialized closure #1 in closure #3 in Data.init<A>(_:)(uint64_t result)
{
  char v1;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = _StringGuts.copyUTF8(into:)();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *_sSw17withMemoryRebound2to_q0_xm_q0_SryxGq_YKXEtq_YKs5ErrorR_Ri_zRi_0_r1_lFs5UInt8V_s5NeverOs16IndexingIteratorVySS8UTF8ViewVG_SitTgm5(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  if (a3)
  {
    v6 = a4 - a3;
    v7 = a3;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  result = a1(&v9, v7, v6);
  if (!v4)
    return (_QWORD *)v9;
  return result;
}

char *specialized __DataStorage.withUnsafeMutableBytes<A>(in:apply:)(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)__DataStorage._bytes.getter();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)__DataStorage._offset.getter();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = __DataStorage._length.getter();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t specialized __DataStorage.withUnsafeBytes<A>(in:apply:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = __DataStorage._bytes.getter();
  if (!result || (result = __DataStorage._offset.getter(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      __DataStorage._length.getter();
      type metadata accessor for SHA256();
      lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type SHA256 and conformance SHA256, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
      return dispatch thunk of HashFunction.update(bufferPointer:)();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t outlined destroy of ContiguousBytes?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContiguousBytes?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *specialized closure #3 in Data.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = specialized closure #3 in Data.init<A>(_:)(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

_QWORD *partial apply for specialized closure #3 in Data.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return specialized closure #3 in Data.init<A>(_:)(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t specialized closure #1 in closure #3 in Data.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = specialized closure #1 in closure #3 in Data.init<A>(_:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t partial apply for specialized closure #1 in closure #3 in Data.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return specialized closure #1 in closure #3 in Data.init<A>(_:)(a1, a2);
}

uint64_t MonogramView.text.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit12MonogramView_text);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t key path getter for MonogramView.text : MonogramView@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit12MonogramView_text);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

id key path setter for MonogramView.text : MonogramView(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return MonogramView.text.setter(v1, v2);
}

id MonogramView.text.setter(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;

  v5 = &v2[OBJC_IVAR____TtC15ConversationKit12MonogramView_text];
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  swift_bridgeObjectRelease();
  return objc_msgSend(v2, sel_setNeedsDisplay);
}

id (*MonogramView.text.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return MonogramView.text.modify;
}

id MonogramView.text.modify(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 24), sel_setNeedsDisplay);
  return result;
}

id MonogramView.__allocating_init(colorStyle:)()
{
  unsigned __int8 *v0;

  OUTLINED_FUNCTION_16_1();
  return MonogramView.init(colorStyle:)(v0);
}

id MonogramView.init(colorStyle:)(unsigned __int8 *a1)
{
  _BYTE *v1;
  int v3;
  _QWORD *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  objc_super v17;

  swift_getObjectType();
  v3 = *a1;
  OUTLINED_FUNCTION_7_87(OBJC_IVAR____TtC15ConversationKit12MonogramView_lastSizeForFont);
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit12MonogramView_font] = 0;
  v4 = &v1[OBJC_IVAR____TtC15ConversationKit12MonogramView_text];
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  v1[OBJC_IVAR____TtC15ConversationKit12MonogramView_colorStyle] = v3;
  v17.receiver = v1;
  v17.super_class = v5;
  v6 = objc_msgSendSuper2(&v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, sel_setContentMode_, 3);
  v7 = (void *)objc_opt_self();
  v8 = v6;
  v9 = objc_msgSend(v7, sel_clearColor);
  objc_msgSend(v8, sel_setBackgroundColor_, v9);

  v10 = v8;
  if (v3 == 1)
  {
    v11 = v8;
    v12 = objc_msgSend(v11, sel_layer);
    OUTLINED_FUNCTION_17_8((uint64_t)v12, &lazy cache variable for type metadata for CAFilter);
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    CAFilter.__allocating_init(type:)(v13, v14);
    v10 = v15;
    objc_msgSend(v12, sel_setCompositingFilter_, v15);

  }
  return v8;
}

id MonogramView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MonogramView.init()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_87(OBJC_IVAR____TtC15ConversationKit12MonogramView_lastSizeForFont);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit12MonogramView_font) = 0;
  OUTLINED_FUNCTION_1_112(OBJC_IVAR____TtC15ConversationKit12MonogramView_text);
  OUTLINED_FUNCTION_3_63();
  __break(1u);
}

id MonogramView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void MonogramView.init(frame:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_87(OBJC_IVAR____TtC15ConversationKit12MonogramView_lastSizeForFont);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit12MonogramView_font) = 0;
  OUTLINED_FUNCTION_1_112(OBJC_IVAR____TtC15ConversationKit12MonogramView_text);
  OUTLINED_FUNCTION_3_63();
  __break(1u);
}

id MonogramView.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void MonogramView.init(coder:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_87(OBJC_IVAR____TtC15ConversationKit12MonogramView_lastSizeForFont);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit12MonogramView_font) = 0;
  OUTLINED_FUNCTION_1_112(OBJC_IVAR____TtC15ConversationKit12MonogramView_text);
  OUTLINED_FUNCTION_3_63();
  __break(1u);
}

Swift::Void __swiftcall MonogramView.draw(_:)(__C::CGRect a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  double v8;
  double v9;
  char v10;
  double v11;
  double v12;
  BOOL v13;
  double v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t inited;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  Class isa;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  CGFloat MidY;
  CGRect v38;
  CGRect v39;

  OUTLINED_FUNCTION_17_7();
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit12MonogramView_text);
  OUTLINED_FUNCTION_2_0();
  v3 = v2[1];
  v4 = *v2 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v4 = HIBYTE(v3) & 0xF;
  if (v4)
  {
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit12MonogramView_colorStyle) & 1) != 0)
    {
      v5 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    }
    else
    {
      if (one-time initialization token for contactMonogram != -1)
        swift_once();
      v5 = (id)static Colors.ParticipantViews.contactMonogram;
    }
    v6 = v5;
    v7 = v1 + OBJC_IVAR____TtC15ConversationKit12MonogramView_lastSizeForFont;
    v8 = *(double *)(v1 + OBJC_IVAR____TtC15ConversationKit12MonogramView_lastSizeForFont);
    v9 = *(double *)(v1 + OBJC_IVAR____TtC15ConversationKit12MonogramView_lastSizeForFont + 8);
    v10 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit12MonogramView_lastSizeForFont + 16);
    OUTLINED_FUNCTION_3_96();
    if ((v10 & 1) != 0 || (v8 == v11 ? (v13 = v9 == v12) : (v13 = 0), !v13))
    {
      OUTLINED_FUNCTION_3_96();
      v15 = MonogramView.createFont(for:)(v14);
      v16 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit12MonogramView_font);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit12MonogramView_font) = v15;

      OUTLINED_FUNCTION_3_96();
      *(_QWORD *)v7 = v17;
      *(_QWORD *)(v7 + 8) = v18;
      *(_BYTE *)(v7 + 16) = 0;
    }
    v19 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit12MonogramView_font);
    if (v19)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BD645380;
      v21 = (void *)*MEMORY[0x1E0DC1138];
      *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
      v22 = OUTLINED_FUNCTION_17_8(inited, (unint64_t *)&lazy cache variable for type metadata for UIFont);
      *(_QWORD *)(inited + 40) = v19;
      v23 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(inited + 64) = v22;
      *(_QWORD *)(inited + 72) = v23;
      *(_QWORD *)(inited + 104) = OUTLINED_FUNCTION_17_8(v22, (unint64_t *)&lazy cache variable for type metadata for UIColor);
      *(_QWORD *)(inited + 80) = v6;
      type metadata accessor for NSAttributedStringKey(0);
      lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
      v24 = v19;
      v25 = v21;
      v26 = v23;
      v27 = v6;
      v28 = Dictionary.init(dictionaryLiteral:)();
      lazy protocol witness table accessor for type String and conformance String();
      v29 = StringProtocol.localizedUppercase.getter();
      v30 = (void *)MEMORY[0x1C3B72E00](v29);
      swift_bridgeObjectRelease();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v30, sel_sizeWithAttributes_, isa);
      v33 = v32;
      v35 = v34;

      v38.origin.x = OUTLINED_FUNCTION_15_0();
      v36 = CGRectGetMidX(v38) - v33 * 0.5;
      v39.origin.x = OUTLINED_FUNCTION_15_0();
      MidY = CGRectGetMidY(v39);
      outlined bridged method (mnbnn) of @objc NSString.draw(in:withAttributes:)(v36, MidY - v35 * 0.5, v33, v35, v28, v30);

    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      os_log(_:dso:log:type:_:)();
    }

  }
}

id MonogramView.createFont(for:)(double a1)
{
  double v1;
  void *v2;
  id result;

  v1 = a1 * 0.515555556;
  v2 = (void *)objc_opt_self();
  result = outlined bridged method (mnnbgnn) of @objc static UIFont.systemFont(ofSize:weight:design:)(v1, *MEMORY[0x1E0DC1438], 0xD00000000000001BLL, 0x80000001BD6824E0, v2);
  if (!result)
    __break(1u);
  return result;
}

id MonogramView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id outlined bridged method (mnnbgnn) of @objc static UIFont.systemFont(ofSize:weight:design:)(double a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)MEMORY[0x1C3B72E00]();
  v9 = objc_msgSend(a5, sel_systemFontOfSize_weight_design_, v8, a1, a2);

  return v9;
}

void outlined bridged method (mnbnn) of @objc NSString.draw(in:withAttributes:)(double a1, double a2, double a3, double a4, uint64_t a5, void *a6)
{
  Class isa;

  type metadata accessor for NSAttributedStringKey(0);
  lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a6, sel_drawInRect_withAttributes_, isa, a1, a2, a3, a4);

}

uint64_t type metadata accessor for MonogramView()
{
  return objc_opt_self();
}

uint64_t method lookup function for MonogramView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MonogramView.__allocating_init(colorStyle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

double ParticipantScreenShareInfoView.customCornerRadius.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return *(double *)v0;
}

void ParticipantScreenShareInfoView.customCornerRadius.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_customCornerRadius);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  ParticipantScreenShareInfoView.customCornerRadius.didset();
}

void ParticipantScreenShareInfoView.customCornerRadius.didset()
{
  _QWORD *v0;
  id v1;

  v1 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_backgroundBlurView), sel_layer);
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
  objc_msgSend(v1, sel_setCornerRadius_);

}

void ParticipantScreenShareInfoView.customCornerRadius.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantScreenShareInfoView.customCornerRadius.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantScreenShareInfoView.customCornerRadius.didset);
}

double ParticipantScreenShareInfoView.preferredHeight.getter()
{
  uint64_t *v0;
  char v1;
  double result;

  v1 = OUTLINED_FUNCTION_65_0(*v0);
  result = 40.0;
  if ((v1 & 1) != 0)
    return 54.0;
  return result;
}

void *ParticipantScreenShareInfoView.avatarImage.getter()
{
  void **v0;
  void *v1;
  id v2;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  v2 = v1;
  return v1;
}

void ParticipantScreenShareInfoView.avatarImage.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_avatarImage);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  ParticipantScreenShareInfoView.avatarImage.didset();
}

uint64_t key path setter for ParticipantScreenShareInfoView.avatarImage : ParticipantScreenShareInfoView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xF0);
  v4 = *a1;
  return v3(v2);
}

id ParticipantScreenShareInfoView.avatarImage.didset()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  void *v3;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_avatarImage);
  swift_beginAccess();
  v2 = *(void **)(v0 + OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_avatarImageView);
  objc_msgSend(v2, sel_setHidden_, *v1 == 0);
  objc_msgSend(v2, sel_setImage_, *v1);
  v3 = *(void **)(v0 + OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_stackView);
  objc_msgSend(v3, sel_directionalLayoutMargins);
  return objc_msgSend(v3, sel_setDirectionalLayoutMargins_);
}

void ParticipantScreenShareInfoView.avatarImage.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ParticipantScreenShareInfoView.avatarImage.modify(uint64_t a1, char a2)
{
  return SystemApertureOngoingTelephonyControlsView.cnkContentAlpha.modify(a1, a2, (uint64_t (*)(uint64_t))ParticipantScreenShareInfoView.avatarImage.didset);
}

uint64_t ParticipantScreenShareInfoView.isFullScreenMode.getter()
{
  unsigned __int8 *v0;

  OUTLINED_FUNCTION_1_7();
  return *v0;
}

uint64_t ParticipantScreenShareInfoView.isFullScreenMode.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_isFullScreenMode);
  result = OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return result;
}

void ParticipantScreenShareInfoView.isFullScreenMode.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id ParticipantScreenShareInfoView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *ParticipantScreenShareInfoView.init()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  void *v36;
  double v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  Class isa;
  uint64_t v79;
  objc_super v80;

  v1 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_nameLabel;
  v2 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);
  v4 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_stackView;
  *(_QWORD *)&v3[v4] = OUTLINED_FUNCTION_20_60(objc_allocWithZone(MEMORY[0x1E0DC3CA8]));
  v5 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_avatarImageView;
  *(_QWORD *)&v3[v5] = OUTLINED_FUNCTION_20_60(objc_allocWithZone(MEMORY[0x1E0DC3890]));
  v6 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_backgroundBlurView;
  *(_QWORD *)&v3[v6] = OUTLINED_FUNCTION_20_60(objc_allocWithZone(MEMORY[0x1E0DC3F58]));
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_normalConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_fullScreenConstraints] = v7;
  *(_QWORD *)&v3[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_customCornerRadius] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_avatarImage] = 0;
  v3[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_isFullScreenMode] = 0;

  v80.receiver = v3;
  v80.super_class = (Class)type metadata accessor for ParticipantScreenShareInfoView();
  v8 = (char *)objc_msgSendSuper2(&v80, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_backgroundBlurView;
  v10 = *(void **)&v8[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_backgroundBlurView];
  v11 = v8;
  v12 = v10;
  UIVisualEffectView.applyEffect(_:)(ConversationKit_PlatformEffectViewStyle_thinDark);

  v13 = *(void **)&v8[v9];
  v14 = (void *)objc_opt_self();
  v15 = v13;
  v16 = objc_msgSend(v14, sel_clearColor);
  OUTLINED_FUNCTION_5_42(v15, sel_setBackgroundColor_);

  v17 = *(void **)&v8[v9];
  OUTLINED_FUNCTION_7_88(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  v19 = v17;
  v20 = objc_msgSend(v19, sel_layer);
  OUTLINED_FUNCTION_40_3(v20, sel_setMasksToBounds_);

  v21 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_stackView;
  v22 = *(void **)&v11[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_stackView];
  objc_msgSend(v22, sel_setDirectionalLayoutMargins_, 0.0, 10.0, 0.0, 10.0);
  v23 = OUTLINED_FUNCTION_40_3(v22, sel_setLayoutMarginsRelativeArrangement_);
  v24 = OUTLINED_FUNCTION_7_88((uint64_t)v23, (const char *)&selRef_systemFontOfSize_weight_);
  OUTLINED_FUNCTION_22_57((uint64_t)v24, sel_setAxis_);
  OUTLINED_FUNCTION_22_57((uint64_t)objc_msgSend(v22, sel_setAlignment_, 3), sel_setDistribution_);
  objc_msgSend(v22, sel_setSpacing_, 5.0);
  v25 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_avatarImageView;
  v26 = *(id *)&v11[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_avatarImageView];
  v27 = OUTLINED_FUNCTION_19_57();
  OUTLINED_FUNCTION_5_42(v26, sel_setTintColor_);

  v28 = *(void **)&v11[v25];
  OUTLINED_FUNCTION_40_3(v28, sel_setHidden_);
  v29 = objc_msgSend(*(id *)&v11[v21], sel_addArrangedSubview_, v28);
  v30 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_nameLabel;
  v31 = *(void **)&v11[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_nameLabel];
  OUTLINED_FUNCTION_7_88((uint64_t)v29, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  v32 = v31;
  v33 = OUTLINED_FUNCTION_19_57();
  OUTLINED_FUNCTION_48_1(v32, sel_setTextColor_);

  v34 = one-time initialization token for screenShareInfo;
  v35 = *(id *)&v11[v30];
  if (v34 != -1)
    swift_once();
  objc_msgSend(v35, sel_setFont_, static Fonts.ParticipantViews.screenShareInfo);

  v36 = *(void **)&v11[v30];
  OUTLINED_FUNCTION_40_3(v36, sel_setAdjustsFontForContentSizeCategory_);
  LODWORD(v37) = 1144750080;
  objc_msgSend(v36, sel_setContentCompressionResistancePriority_forAxis_, 0, v37);
  OUTLINED_FUNCTION_48_1(*(id *)&v11[v21], sel_addArrangedSubview_);
  v38 = *(void **)&v8[v9];
  objc_msgSend(v11, sel_addSubview_, v38);
  OUTLINED_FUNCTION_5_42(v11, sel_addSubview_);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v39 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v39 + 16) = xmmword_1BD644E30;
  v40 = OUTLINED_FUNCTION_2_11(v39, sel_leadingAnchor);
  v41 = objc_msgSend(v38, (SEL)&selRef_activeCall + 6);
  v42 = OUTLINED_FUNCTION_1_21((uint64_t)v41, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v39 + 32) = &selRef_associatedAppBundleIdentifier;
  v43 = objc_msgSend(*(id *)&v11[v21], sel_centerYAnchor);
  v44 = objc_msgSend(*(id *)&v8[v9], sel_centerYAnchor);
  v45 = OUTLINED_FUNCTION_1_21((uint64_t)v44, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v39 + 40) = &selRef_associatedAppBundleIdentifier;
  v46 = objc_msgSend(*(id *)&v11[v21], sel_trailingAnchor);
  v47 = OUTLINED_FUNCTION_13_74();
  v48 = OUTLINED_FUNCTION_1_21((uint64_t)v47, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v39 + 48) = &selRef_associatedAppBundleIdentifier;
  v49 = objc_msgSend(*(id *)&v11[v25], sel_heightAnchor);
  v50 = objc_msgSend(v49, sel_constraintEqualToConstant_, 28.0);

  *(_QWORD *)(v39 + 56) = v50;
  v52 = OUTLINED_FUNCTION_2_11(v51, sel_widthAnchor);
  v53 = OUTLINED_FUNCTION_2_11((uint64_t)v52, sel_heightAnchor);
  v54 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v53);

  *(_QWORD *)(v39 + 64) = v54;
  OUTLINED_FUNCTION_5_96();
  OUTLINED_FUNCTION_18_63(v79);
  v55 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v55 + 16) = xmmword_1BD644B60;
  v56 = objc_msgSend(*(id *)&v11[v21], sel_centerXAnchor);
  v57 = objc_msgSend(*(id *)&v8[v9], sel_centerXAnchor);
  v58 = OUTLINED_FUNCTION_1_21((uint64_t)v57, (const char *)&selRef_attemptToPlaySoundType_forCall_ + 6);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v55 + 32) = v54;
  v59 = objc_msgSend(*(id *)&v11[v21], sel_topAnchor);
  v60 = objc_msgSend(*(id *)&v8[v9], sel_safeAreaLayoutGuide);
  v61 = objc_msgSend(v60, (SEL)&selRef_setUserInteractionEnabled_ + 4);

  v62 = objc_msgSend(v59, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v61);
  *(_QWORD *)(v55 + 40) = v62;
  v63 = objc_msgSend(*(id *)&v11[v21], sel_trailingAnchor);
  v64 = OUTLINED_FUNCTION_13_74();
  v65 = objc_msgSend(v59, sel_constraintEqualToAnchor_constant_, v64, -30.0);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v55 + 48) = v61;
  OUTLINED_FUNCTION_5_96();
  OUTLINED_FUNCTION_18_63(v79);
  v66 = (void *)objc_opt_self();
  v67 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v67 + 16) = xmmword_1BD644140;
  v68 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(*(id *)&v8[v9], sel_topAnchor), sel_topAnchor);
  v69 = OUTLINED_FUNCTION_1_113((uint64_t)v68);
  OUTLINED_FUNCTION_23_51();

  *(_QWORD *)(v67 + 32) = v21;
  v70 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(*(id *)&v8[v9], sel_bottomAnchor), sel_bottomAnchor);
  v71 = OUTLINED_FUNCTION_1_113((uint64_t)v70);
  OUTLINED_FUNCTION_23_51();

  *(_QWORD *)(v67 + 40) = v21;
  v72 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(*(id *)&v8[v9], sel_leadingAnchor), sel_leadingAnchor);
  v73 = OUTLINED_FUNCTION_1_113((uint64_t)v72);
  OUTLINED_FUNCTION_23_51();

  *(_QWORD *)(v67 + 48) = v21;
  v74 = objc_msgSend(*(id *)&v8[v9], sel_trailingAnchor);
  v75 = OUTLINED_FUNCTION_123((uint64_t)v74, sel_trailingAnchor);
  v76 = objc_msgSend(v74, (SEL)&selRef_attemptToPlaySoundType_forCall_ + 6, v75);

  *(_QWORD *)(v67 + 56) = v76;
  OUTLINED_FUNCTION_5_96();
  swift_bridgeObjectRetain();
  specialized Array.append<A>(contentsOf:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v66, sel_activateConstraints_, isa);

  return v11;
}

uint64_t type metadata accessor for ParticipantScreenShareInfoView()
{
  return objc_opt_self();
}

id ParticipantScreenShareInfoView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantScreenShareInfoView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_nameLabel;
  *(_QWORD *)&v0[v1] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3990]));
  v2 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_stackView;
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3CA8]));
  v3 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_avatarImageView;
  *(_QWORD *)&v0[v3] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3890]));
  v4 = OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_backgroundBlurView;
  *(_QWORD *)&v0[v4] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3F58]));
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_normalConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_fullScreenConstraints] = v5;
  *(_QWORD *)&v0[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_customCornerRadius] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_avatarImage] = 0;
  v0[OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_isFullScreenMode] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ParticipantScreenShareInfoView.configure(with:isFullScreenMode:)(Swift::String with, Swift::Bool isFullScreenMode)
{
  _QWORD *v2;
  double v3;
  _QWORD *v4;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  void *v14;
  Class isa;
  Class v16;
  uint64_t v17;

  v4 = v2;
  object = with._object;
  countAndFlagsBits = with._countAndFlagsBits;
  v8 = type metadata accessor for DispatchPredicate();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  (*(void (**)(Swift::Bool))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x108))(isFullScreenMode);
  v12 = *(_QWORD *)((char *)v4 + OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_nameLabel);
  if (isFullScreenMode)
  {
    v3 = 0.0;
    if (one-time initialization token for screenShareInfoFullScreen == -1)
    {
LABEL_4:
      v13 = &static Fonts.ParticipantViews.screenShareInfoFullScreen;
      goto LABEL_8;
    }
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  v3 = 1.0;
  if (one-time initialization token for screenShareInfo != -1)
    swift_once();
  v13 = &static Fonts.ParticipantViews.screenShareInfo;
LABEL_8:
  objc_msgSend((id)v12, sel_setFont_, *v13);
  OUTLINED_FUNCTION_5_42((id)v12, sel_setTextAlignment_);
  outlined bridged method (mbgnn) of @objc UILabel.text.setter(countAndFlagsBits, (uint64_t)object, (void *)v12);
  objc_msgSend(*(id *)((char *)v4 + OBJC_IVAR___CNKParticipantScreenShareInfoViewInternal_backgroundBlurView), sel_setAlpha_, v3);
  v14 = (void *)objc_opt_self();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_42(v14, sel_deactivateConstraints_);

  swift_bridgeObjectRetain();
  v16 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_1(v14, sel_activateConstraints_);

}

id ParticipantScreenShareInfoView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantScreenShareInfoView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ParticipantScreenShareInfoView.__deallocating_deinit()
{
  return ParticipantScreenShareInfoView.layoutSubviews()((SEL *)&selRef_dealloc);
}

id ParticipantScreenShareInfoView.layoutSubviews()(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ParticipantScreenShareInfoView();
  return objc_msgSendSuper2(&v4, *a1);
}

void sub_1BD2CE140()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xC8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2CE174(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD0))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2CE1AC()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xE8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2CE1E4()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_65_0(v1) & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD2CE214(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x108))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for ParticipantScreenShareInfoView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantScreenShareInfoView.customCornerRadius.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ParticipantScreenShareInfoView.customCornerRadius.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ParticipantScreenShareInfoView.customCornerRadius.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ParticipantScreenShareInfoView.preferredHeight.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ParticipantScreenShareInfoView.avatarImage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ParticipantScreenShareInfoView.avatarImage.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ParticipantScreenShareInfoView.avatarImage.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ParticipantScreenShareInfoView.isFullScreenMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ParticipantScreenShareInfoView.isFullScreenMode.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ParticipantScreenShareInfoView.isFullScreenMode.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ParticipantScreenShareInfoView.configure(with:isFullScreenMode:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t key path getter for DefaultParticipantCaptionsProviderCreator.participantCaptionsProviderDelegate : DefaultParticipantCaptionsProviderCreator@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  outlined init with copy of DefaultParticipantCaptionsProviderCreator(a1, (uint64_t)v6);
  v3 = MEMORY[0x1C3B752C0](v6);
  v4 = v6[1];
  result = outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v6);
  *a2 = v3;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for DefaultParticipantCaptionsProviderCreator.participantCaptionsProviderDelegate : DefaultParticipantCaptionsProviderCreator(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return swift_unknownObjectWeakAssign();
}

uint64_t DefaultParticipantCaptionsProviderCreator.participantCaptionsProviderDelegate.getter()
{
  uint64_t v0;

  return MEMORY[0x1C3B752C0](v0);
}

uint64_t DefaultParticipantCaptionsProviderCreator.participantCaptionsProviderDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return OUTLINED_FUNCTION_0_101();
}

uint64_t (*DefaultParticipantCaptionsProviderCreator.participantCaptionsProviderDelegate.modify(uint64_t *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  v3 = MEMORY[0x1C3B752C0](v1);
  v4 = *(_QWORD *)(v1 + 8);
  *a1 = v3;
  a1[1] = v4;
  return DefaultParticipantCaptionsProviderCreator.participantCaptionsProviderDelegate.modify;
}

uint64_t DefaultParticipantCaptionsProviderCreator.participantCaptionsProviderDelegate.modify(uint64_t a1)
{
  *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8) = *(_QWORD *)(a1 + 8);
  swift_unknownObjectWeakAssign();
  return OUTLINED_FUNCTION_0_101();
}

_QWORD *DefaultParticipantCaptionsProviderCreator.createParticipantCaptionsProvider(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  _QWORD *v15;
  _BYTE v17[16];

  v2 = v1;
  v4 = type metadata accessor for Logger();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  outlined init with copy of DefaultParticipantCaptionsProviderCreator(v2, (uint64_t)v17);
  v8 = MEMORY[0x1C3B752C0](v17);
  outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v17);
  swift_unknownObjectRelease();
  if (v8)
  {
    if (one-time initialization token for conversationController == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v9 = __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationController);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = objc_allocWithZone((Class)type metadata accessor for CaptionsClientParticipantCaptionsProvider());
  v11 = CaptionsClientParticipantCaptionsProvider.init(logger:token:usage:)((uint64_t)v7, a1, 1);
  if (v11)
  {
    v12 = MEMORY[0x1C3B752C0](v2);
    v13 = *(_QWORD *)(v2 + 8);
    v14 = *(void (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v11) + 0x80);
    v15 = v11;
    v14(v12, v13);

  }
  return v11;
}

uint64_t DefaultParticipantCaptionsProviderCreator.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 8) = 0;
  return swift_unknownObjectWeakInit();
}

uint64_t DefaultParticipantCaptionsProviderCreator.init(participantCaptionsProviderDelegate:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = a1;
  swift_unknownObjectWeakInit();
  return OUTLINED_FUNCTION_0_101();
}

uint64_t dispatch thunk of ParticipantCaptionsProviderCreator.createParticipantCaptionsProvider(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t initializeWithCopy for DefaultParticipantCaptionsProviderCreator(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for DefaultParticipantCaptionsProviderCreator(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for DefaultParticipantCaptionsProviderCreator(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for DefaultParticipantCaptionsProviderCreator(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for DefaultParticipantCaptionsProviderCreator(uint64_t a1, int a2)
{
  int v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    {
      v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
    }
    else
    {
      v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DefaultParticipantCaptionsProviderCreator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultParticipantCaptionsProviderCreator()
{
  return &type metadata for DefaultParticipantCaptionsProviderCreator;
}

void InCallControlsViewController.groupName.getter()
{
  OUTLINED_FUNCTION_1();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.groupName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_groupName);
  OUTLINED_FUNCTION_2_0();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsViewController.groupName.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id InCallControlsViewController.contentView.getter()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id result;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_opt_self();
    v3 = (void *)swift_dynamicCastObjCClass();
    if (v3)
    {
      v4 = objc_msgSend(v3, sel_contentView);

      if (v4)
        return v4;
    }
    else
    {

    }
  }
  result = objc_msgSend(v0, sel_view);
  v4 = result;
  if (result)
    return v4;
  __break(1u);
  return result;
}

uint64_t InCallControlsViewController.participants.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController);
  swift_beginAccess();
  if (!*v1)
    return MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void InCallControlsViewController.mode.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for InCallControlsViewController.mode : InCallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_mode);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsViewController.mode.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_mode);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  InCallControlsViewController.mode.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsViewController.mode.didset(char a1)
{
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_1BD2CEABC()
{
  uint64_t v0;
  unsigned int v1;
  id *v2;
  id v3;

  if (v1 >= 0x20)
  {
    v2 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController);
    swift_beginAccess();
    if (*v2)
    {
      v3 = *v2;
      InCallControlsCollectionViewController.mode.setter(v1);

    }
    InCallControlsViewController.updateJoinLeaveButton()();
  }
}

void InCallControlsViewController.updateJoinLeaveButton()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD645380;
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_mode;
  swift_beginAccess();
  v3 = String.init<A>(reflecting:)();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  v7 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v1 + 64) = v7;
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v5;
  v8 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_shouldShowLeaveButton);
  swift_beginAccess();
  v9 = String.init<A>(reflecting:)();
  *(_QWORD *)(v1 + 96) = v6;
  *(_QWORD *)(v1 + 104) = v7;
  *(_QWORD *)(v1 + 72) = v9;
  *(_QWORD *)(v1 + 80) = v10;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (*v8 != 1)
    __asm { BR              X11 }
  v11 = v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent;
  swift_beginAccess();
  if (*(_QWORD *)v11)
  {
    v12 = *(id *)(v11 + 16);
    InCallControlsView.joinLeaveConfiguration.setter(2u);

  }
}

void InCallControlsViewController.mode.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[3] = v1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_mode);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v2 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void InCallControlsViewController.mode.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  InCallControlsViewController.mode.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

void InCallControlsViewController.gridLayoutStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_gridLayoutStyle);
  OUTLINED_FUNCTION_1();
  *a1 = *v3;
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for InCallControlsViewController.gridLayoutStyle : InCallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_gridLayoutStyle);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void key path setter for InCallControlsViewController.gridLayoutStyle : InCallControlsViewController(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  InCallControlsViewController.gridLayoutStyle.setter(&v1);
}

void InCallControlsViewController.gridLayoutStyle.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 *v3;
  unsigned __int8 v4;
  unsigned __int8 v5;

  v2 = *a1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_gridLayoutStyle);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = v2;
  v5 = v4;
  InCallControlsViewController.gridLayoutStyle.didset(&v5);
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsViewController.gridLayoutStyle.didset(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  int v4;
  void **v5;
  void *v6;
  id v7;
  unsigned __int8 v8;

  v2 = *a1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_gridLayoutStyle);
  swift_beginAccess();
  v4 = *v3;
  if (v2 != v4)
  {
    v5 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController);
    swift_beginAccess();
    v6 = *v5;
    if (*v5)
    {
      v8 = v4;
      v7 = v6;
      InCallControlsCollectionViewController.gridLayoutStyle.setter(&v8);

    }
  }
}

void InCallControlsViewController.gridLayoutStyle.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[3] = v1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_gridLayoutStyle);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v2 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void InCallControlsViewController.gridLayoutStyle.modify(uint64_t a1, char a2)
{
  void *v2;
  unsigned __int8 *v3;
  char v4;
  char v5;

  v2 = *(void **)a1;
  if ((a2 & 1) != 0)
  {
    v4 = *(_BYTE *)(*(_QWORD *)a1 + 32);
    v3 = (unsigned __int8 *)&v4;
  }
  else
  {
    v5 = *(_BYTE *)(*(_QWORD *)a1 + 32);
    v3 = (unsigned __int8 *)&v5;
  }
  InCallControlsViewController.gridLayoutStyle.setter(v3);
  free(v2);
}

double InCallControlsViewController.topInset.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset;
  OUTLINED_FUNCTION_1();
  return *(double *)v1;
}

double key path getter for InCallControlsViewController.topInset : InCallControlsViewController@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

id InCallControlsViewController.topInset.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  return InCallControlsViewController.topInset.didset();
}

id InCallControlsViewController.topInset.didset()
{
  uint64_t v0;
  _QWORD *v1;
  id result;
  void *v3;
  double *v4;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  result = (id)OUTLINED_FUNCTION_1();
  if (*v1)
  {
    v3 = (void *)v1[3];
    v4 = (double *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset);
    OUTLINED_FUNCTION_1();
    return objc_msgSend(v3, sel_setConstant_, *v4);
  }
  return result;
}

void InCallControlsViewController.topInset.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.topInset.modify()
{
  InCallControlsViewController.topInset.modify();
}

{
  void (*v0)(uint64_t);
  char v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_69_3();
  if ((v1 & 1) == 0)
    v0(v2);
  OUTLINED_FUNCTION_18();
}

void InCallControlsViewController.isExpanded.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.isExpanded.setter(char a1)
{
  LocalParticipantView.blurEnabled.setter(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isExpanded, (void (*)(uint64_t))InCallControlsViewController.isExpanded.didset);
}

uint64_t key path getter for InCallControlsViewController.isExpanded : InCallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isExpanded);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsViewController.isExpanded.didset()
{
  uint64_t v0;
  char *v1;
  char v2;

  v1 = (char *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isExpanded);
  OUTLINED_FUNCTION_1();
  if (*v1 == 1)
  {
    InCallControlsViewController.initializeCollectionViewIfNecessary()();
    v2 = *v1;
  }
  else
  {
    v2 = 0;
  }
  InCallControlsViewController.updateControlsVisibility(forExpandedState:)(v2);
  OUTLINED_FUNCTION_32();
}

id InCallControlsViewController.initializeCollectionViewIfNecessary()()
{
  char *v0;
  char *v1;
  void **v2;
  id result;
  void *v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t ObjectType;
  void *v12;
  void *v13;

  v1 = v0;
  v2 = (void **)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController];
  result = (id)swift_beginAccess();
  if (!*v2)
  {
    v4 = (void *)objc_opt_self();
    objc_msgSend(v4, sel_begin);
    objc_msgSend(v4, sel_setDisableActions_, 1);
    swift_beginAccess();
    swift_beginAccess();
    v5 = &v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_menuHostViewController];
    swift_beginAccess();
    MEMORY[0x1C3B752C0](v5);
    v6 = objc_allocWithZone((Class)type metadata accessor for InCallControlsCollectionViewController(0));
    InCallControlsCollectionViewController.init(conversation:participants:mode:gridLayoutStyle:isLegacy:shareLinkEnabled:menuHostViewController:)();
    v7 = *v2;
    *v2 = v8;

    InCallControlsViewController.setUpCollectionViewConstraints()();
    v9 = &v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_delegate];
    swift_beginAccess();
    if (MEMORY[0x1C3B752C0](v9))
    {
      v10 = *((_QWORD *)v9 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 24))(v0, ObjectType, v10);
      swift_unknownObjectRelease();
    }
    result = objc_msgSend(v0, sel_view);
    if (result)
    {
      v12 = result;
      objc_msgSend(result, sel_setNeedsLayout);

      result = objc_msgSend(v1, sel_view);
      if (result)
      {
        v13 = result;
        objc_msgSend(result, sel_layoutIfNeeded);

        return objc_msgSend(v4, sel_commit);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void InCallControlsViewController.updateControlsVisibility(forExpandedState:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  unint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent;
  swift_beginAccess();
  v4 = *(void **)v3;
  if (*(_QWORD *)v3)
  {
    v5 = *(void **)(v3 + 8);
    v6 = *(void **)(v3 + 16);
    v7 = *(void **)(v3 + 24);
    v8 = *(_QWORD *)(v3 + 32);
    v9 = *(void **)(v3 + 40);
    v10 = *(void **)(v3 + 48);
    v11 = one-time initialization token for conversationKit;
    v34 = v4;
    v12 = v4;
    v33 = v5;
    v13 = v5;
    v32 = v6;
    v14 = v6;
    v31 = v7;
    v15 = v7;
    swift_bridgeObjectRetain();
    v30 = v9;
    v16 = v9;
    v29 = v10;
    v17 = v10;
    if (v11 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BD6441D0;
    if ((a1 & 1) != 0)
      v19 = 1.0;
    else
      v19 = 0.0;
    v20 = String.init<A>(reflecting:)();
    v22 = v21;
    *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v18 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v18 + 32) = v20;
    *(_QWORD *)(v18 + 40) = v22;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = _CocoaArrayWrapper.endIndex.getter();
      if (v23)
        goto LABEL_9;
    }
    else
    {
      v23 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v23)
      {
LABEL_9:
        if (v23 < 1)
        {
          __break(1u);
          return;
        }
        v24 = 0;
        v25 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        do
        {
          if ((v8 & 0xC000000000000001) != 0)
            v26 = (id)MEMORY[0x1C3B73D18](v24, v8);
          else
            v26 = *(id *)(v8 + 8 * v24 + 32);
          v27 = v26;
          type metadata accessor for InCallControlButton();
          v28 = (_QWORD *)swift_dynamicCastClass();
          if (v28)
            (*(void (**)(double))((*v25 & *v28) + 0x1A0))(v19);
          else
            objc_msgSend(v27, sel_setAlpha_, v19, v29, v30, v31, v32, v33, v34);
          ++v24;
          objc_msgSend(v27, sel_setUserInteractionEnabled_, a1 & 1, v29);

        }
        while (v23 != v24);
      }
    }
    swift_bridgeObjectRelease();
    outlined consume of InCallControlsViewController.ViewContent?(v34, v33, v32, v31, v8, v30, v29);
  }
}

void InCallControlsViewController.isExpanded.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.isExpanded.modify()
{
  InCallControlsViewController.topInset.modify();
}

void InCallControlsViewController.audioIsEnabled.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.audioIsEnabled.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t v4;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_audioIsEnabled);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_96_9(&OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_audioIsEnabled, (uint64_t)"Updating mute audio button for audioIsEnabled=%@", v4, &OBJC_IVAR____TtC15ConversationKit18InCallControlsView_muteButton);
  OUTLINED_FUNCTION_9_0();
}

uint64_t key path getter for InCallControlsViewController.audioIsEnabled : InCallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_audioIsEnabled);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsViewController.audioIsEnabled.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.audioIsEnabled.modify(uint64_t a1, char a2)
{
  uint64_t v3;

  swift_endAccess();
  if ((a2 & 1) == 0)
    OUTLINED_FUNCTION_96_9(&OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_audioIsEnabled, (uint64_t)"Updating mute audio button for audioIsEnabled=%@", v3, &OBJC_IVAR____TtC15ConversationKit18InCallControlsView_muteButton);
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.videoIsEnabled.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.videoIsEnabled.setter(char a1)
{
  LocalParticipantView.blurEnabled.setter(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_videoIsEnabled, (void (*)(uint64_t))InCallControlsViewController.videoIsEnabled.didset);
}

uint64_t key path getter for InCallControlsViewController.videoIsEnabled : InCallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_videoIsEnabled);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsViewController.videoIsEnabled.didset()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_videoIsEnabled);
  swift_beginAccess();
  if ((*v1 & 1) == 0)
  {
    v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
    swift_beginAccess();
    *v2 = 0;
    InCallControlsViewController.updateEffectsButton()();
  }
  InCallControlsViewController.updateMuteAudioButton()(&OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_videoIsEnabled, (uint64_t)"Updating disable video button videoIsEnabled=%@", 47, &OBJC_IVAR____TtC15ConversationKit18InCallControlsView_toggleCameraButton);
  InCallControlsViewController.updateEffectsButton()();
  InCallControlsViewController.updateFlipCameraButton()();
}

void InCallControlsViewController.effectsAreEnabled.setter(char a1)
{
  LocalParticipantView.blurEnabled.setter(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled, (void (*)(uint64_t))InCallControlsViewController.updateEffectsButton());
}

void InCallControlsViewController.updateMuteAudioButton()(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v7 = OUTLINED_FUNCTION_16_9();
  *(_OWORD *)(v7 + 16) = xmmword_1BD6441D0;
  v8 = (_BYTE *)(v4 + *a1);
  OUTLINED_FUNCTION_1();
  LOBYTE(v13) = *v8;
  v9 = String.init<A>(reflecting:)();
  v11 = v10;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v11;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  OUTLINED_FUNCTION_1();
  if (*v12)
    objc_msgSend(*(id *)(v12[2] + *a4), sel_setSelected_, (*v8 & 1) == 0, v13);
  OUTLINED_FUNCTION_0_20();
}

void InCallControlsViewController.updateEffectsButton()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v1 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v1 + 16) = xmmword_1BD646740;
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_videoIsEnabled);
  OUTLINED_FUNCTION_1();
  v3 = OUTLINED_FUNCTION_65_16();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  v7 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v1 + 64) = v7;
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v5;
  v8 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
  OUTLINED_FUNCTION_1();
  v9 = OUTLINED_FUNCTION_65_16();
  *(_QWORD *)(v1 + 96) = v6;
  *(_QWORD *)(v1 + 104) = v7;
  *(_QWORD *)(v1 + 72) = v9;
  *(_QWORD *)(v1 + 80) = v10;
  v11 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreAvailable);
  OUTLINED_FUNCTION_1();
  LOBYTE(v20) = *v11;
  v12 = OUTLINED_FUNCTION_65_16();
  *(_QWORD *)(v1 + 136) = v6;
  *(_QWORD *)(v1 + 144) = v7;
  *(_QWORD *)(v1 + 112) = v12;
  *(_QWORD *)(v1 + 120) = v13;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_133();
  v14 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  OUTLINED_FUNCTION_1();
  if (*v14)
  {
    v15 = *(void **)(v14[2] + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_effectsButton);
    v16 = one-time initialization token for shared;
    v17 = v15;
    if (v16 != -1)
      swift_once();
    v18 = OUTLINED_FUNCTION_48_5() & *v11 & *v2;
    if ((v18 & 1) != 0 && *v8 == 1)
    {
      OUTLINED_FUNCTION_40_3(v17, sel_setSelected_);
      v19 = 2;
    }
    else
    {
      OUTLINED_FUNCTION_18_4(v17, sel_setSelected_);
      v19 = 1;
    }
    objc_msgSend(v17, sel_setEnabled_, v18 & 1, v20);
    specialized static UIImage.image(named:)(v19);
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v17) + 0x120))();

  }
}

void InCallControlsViewController.updateFlipCameraButton()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  id v10;
  _BOOL8 v11;
  id v12;
  uint64_t v13;

  v1 = v0;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441D0;
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_videoIsEnabled);
  swift_beginAccess();
  LOBYTE(v13) = *v3;
  v4 = String.init<A>(reflecting:)();
  v6 = v5;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v6;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  swift_beginAccess();
  if (*v7)
  {
    v8 = *(void **)(v7[2] + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_flipCameraButton);
    if (*v3 == 1)
    {
      v9 = one-time initialization token for shared;
      v10 = v8;
      if (v9 != -1)
        v10 = (id)swift_once();
      v11 = ((*(uint64_t (**)(id))(*(_QWORD *)static Defaults.shared + 152))(v10) & 1) != 0
         || *(_QWORD *)(v1
                      + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_representedLegacyCallIdentifier
                      + 8) != 0;
    }
    else
    {
      v12 = v8;
      v11 = 0;
    }
    objc_msgSend(v8, sel_setEnabled_, v11, v13);

  }
}

void InCallControlsViewController.videoIsEnabled.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.videoIsEnabled.modify()
{
  InCallControlsViewController.topInset.modify();
}

void InCallControlsViewController.isScreenSharing.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.isScreenSharing.setter(char a1)
{
  LocalParticipantView.blurEnabled.setter(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isScreenSharing, (void (*)(uint64_t))InCallControlsViewController.updateScreenShareButton());
}

uint64_t key path getter for InCallControlsViewController.isScreenSharing : InCallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isScreenSharing);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

id InCallControlsViewController.updateScreenShareButton()()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id result;
  uint64_t v8;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v1 = OUTLINED_FUNCTION_16_9();
  *(_OWORD *)(v1 + 16) = xmmword_1BD6441D0;
  v2 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isScreenSharing);
  OUTLINED_FUNCTION_1();
  LOBYTE(v8) = *v2;
  v3 = String.init<A>(reflecting:)();
  v5 = v4;
  *(_QWORD *)(v1 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v5;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_53();
  v6 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  result = (id)OUTLINED_FUNCTION_1();
  if (*v6)
    return objc_msgSend(*(id *)(v6[2] + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_screenShareButton), sel_setSelected_, *v2, v8);
  return result;
}

void InCallControlsViewController.isScreenSharing.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.isScreenSharing.modify()
{
  InCallControlsViewController.topInset.modify();
}

void InCallControlsViewController.cinematicFramingIsAvailable.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.cinematicFramingIsAvailable.setter(char a1)
{
  InCallControlsViewController.cinematicFramingIsAvailable.setter(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsAvailable);
}

uint64_t key path getter for InCallControlsViewController.cinematicFramingIsAvailable : InCallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsAvailable);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsViewController.cinematicFramingIsAvailable.didset()
{
  InCallControlsViewController.cinematicFramingIsAvailable.didset();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[6];

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for DispatchWorkItemFlags();
  v13 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2_20();
  v7 = type metadata accessor for DispatchQoS();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v10 = (void *)static OS_dispatch_queue.main.getter();
  v11 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v14[4] = v5;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = thunk for @escaping @callee_guaranteed () -> ();
  v14[3] = v3;
  v12 = _Block_copy(v14);
  swift_release();
  static DispatchQoS.unspecified.getter();
  v14[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v1, v0, v12);
  _Block_release(v12);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0, v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
  OUTLINED_FUNCTION_52_1();
}

id InCallControlsViewController.updateCinematicFramingButton()()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id result;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD645380;
  v2 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsEnabled);
  swift_beginAccess();
  v3 = String.init<A>(reflecting:)();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  v7 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v1 + 64) = v7;
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v5;
  v8 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsAvailable);
  swift_beginAccess();
  v9 = String.init<A>(reflecting:)();
  *(_QWORD *)(v1 + 96) = v6;
  *(_QWORD *)(v1 + 104) = v7;
  *(_QWORD *)(v1 + 72) = v9;
  *(_QWORD *)(v1 + 80) = v10;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  result = (id)swift_beginAccess();
  if (*v11)
  {
    result = objc_msgSend(*(id *)(v11[2] + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_toggleCinematicFramingButton), sel_setEnabled_, *v8);
    if (*v11)
      return objc_msgSend(*(id *)(v11[2] + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_toggleCinematicFramingButton), sel_setSelected_, *v2);
  }
  return result;
}

void InCallControlsViewController.cinematicFramingIsAvailable.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.cinematicFramingIsAvailable.modify(uint64_t a1, char a2)
{
  InCallControlsViewController.cinematicFramingIsAvailable.modify(a1, a2);
}

{
  swift_endAccess();
  if ((a2 & 1) == 0)
    OUTLINED_FUNCTION_108_5();
  OUTLINED_FUNCTION_18();
}

void InCallControlsViewController.cinematicFramingIsEnabled.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.cinematicFramingIsEnabled.setter(char a1)
{
  InCallControlsViewController.cinematicFramingIsAvailable.setter(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsEnabled);
}

void InCallControlsViewController.cinematicFramingIsAvailable.setter(char a1, _QWORD *a2)
{
  uint64_t v2;
  _BYTE *v4;

  v4 = (_BYTE *)(v2 + *a2);
  OUTLINED_FUNCTION_2_0();
  *v4 = a1;
  OUTLINED_FUNCTION_108_5();
  OUTLINED_FUNCTION_289_0();
}

uint64_t key path getter for InCallControlsViewController.cinematicFramingIsEnabled : InCallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsEnabled);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsViewController.cinematicFramingIsEnabled.didset()
{
  InCallControlsViewController.cinematicFramingIsAvailable.didset();
}

void closure #1 in InCallControlsViewController.cinematicFramingIsAvailable.didset()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2D0B4C(void *a1)
{
  if (a1)
  {
    InCallControlsViewController.updateCinematicFramingButton()();

  }
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.cinematicFramingIsEnabled.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.cinematicFramingIsEnabled.modify(uint64_t a1, char a2)
{
  InCallControlsViewController.cinematicFramingIsAvailable.modify(a1, a2);
}

void InCallControlsViewController.effectsAreAvailable.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.effectsAreAvailable.setter(char a1)
{
  LocalParticipantView.blurEnabled.setter(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreAvailable, (void (*)(uint64_t))InCallControlsViewController.updateEffectsButton());
}

uint64_t key path getter for InCallControlsViewController.effectsAreAvailable : InCallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreAvailable);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsViewController.effectsAreAvailable.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.effectsAreAvailable.modify()
{
  InCallControlsViewController.topInset.modify();
}

void InCallControlsViewController.effectsAreEnabled.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for InCallControlsViewController.effectsAreEnabled : InCallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsViewController.effectsAreEnabled.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.shouldShowLeaveButton.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.shouldShowLeaveButton.setter(char a1)
{
  LocalParticipantView.blurEnabled.setter(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_shouldShowLeaveButton, (void (*)(uint64_t))InCallControlsViewController.updateJoinLeaveButton());
}

uint64_t key path getter for InCallControlsViewController.shouldShowLeaveButton : InCallControlsViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_shouldShowLeaveButton);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallControlsViewController.shouldShowLeaveButton.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.shouldShowLeaveButton.modify()
{
  InCallControlsViewController.topInset.modify();
}

void InCallControlsViewController.audioButton.getter()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  OUTLINED_FUNCTION_1();
  if (*v1)
    v2 = *(id *)(v1[2] + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_audioRouteButton);
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.delegate.getter()
{
  InCallControlsViewController.delegate.getter();
}

{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void InCallControlsViewController.delegate.setter()
{
  InCallControlsViewController.delegate.setter();
}

{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_68_14();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsViewController.delegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_delegate;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2D1068(uint64_t a1)
{
  OUTLINED_FUNCTION_347(a1);
  OUTLINED_FUNCTION_18();
}

void InCallControlsViewController.participantDelegate.getter()
{
  InCallControlsViewController.delegate.getter();
}

void InCallControlsViewController.participantDelegate.setter()
{
  InCallControlsViewController.delegate.setter();
}

void InCallControlsViewController.participantDelegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantDelegate;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2D10D8(uint64_t a1)
{
  OUTLINED_FUNCTION_347(a1);
  OUTLINED_FUNCTION_18();
}

void InCallControlsViewController.participantsViewControllerDelegate.getter()
{
  InCallControlsViewController.delegate.getter();
}

void InCallControlsViewController.participantsViewControllerDelegate.setter()
{
  InCallControlsViewController.delegate.setter();
}

void InCallControlsViewController.participantsViewControllerDelegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantsViewControllerDelegate;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2D118C(uint64_t a1)
{
  OUTLINED_FUNCTION_347(a1);
  OUTLINED_FUNCTION_18();
}

void key path getter for InCallControlsViewController.delegate : InCallControlsViewController(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1 + *a2;
  OUTLINED_FUNCTION_1();
  v5 = MEMORY[0x1C3B752C0](v4);
  v6 = *(_QWORD *)(v4 + 8);
  *a3 = v5;
  a3[1] = v6;
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.menuHostViewController.getter()
{
  InCallControlsViewController.delegate.getter();
}

void sub_1BD2D121C()
{
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.menuHostViewController.setter(void *a1)
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_68_14();

  OUTLINED_FUNCTION_9_0();
}

void InCallControlsViewController.menuHostViewController.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_menuHostViewController;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2D12AC(uint64_t a1)
{
  OUTLINED_FUNCTION_347(a1);
  OUTLINED_FUNCTION_18();
}

void InCallControlsViewController.menuHostViewController.modify(uint64_t a1)
{
  id *v1;
  void *v2;
  char v3;

  OUTLINED_FUNCTION_21_60(a1);
  if ((v3 & 1) != 0)
  {

    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();

  }
  OUTLINED_FUNCTION_4_2(v1);
}

uint64_t InCallControlsViewController.description.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  char *v5;
  void **v6;
  void *v7;
  uint64_t v8;
  id v9;
  char *v10;
  _QWORD v12[4];

  v1 = OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(name: String, value: Any?)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD646740;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001BD67CC10;
  v3 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_localParticipant];
  OUTLINED_FUNCTION_1();
  *(_QWORD *)(inited + 72) = OUTLINED_FUNCTION_14_2();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
  outlined init with copy of ConversationControlsAction(v3, (uint64_t)boxed_opaque_existential_1, type metadata accessor for Participant);
  *(_QWORD *)(inited + 80) = 1701080941;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  v5 = &v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_mode];
  OUTLINED_FUNCTION_1();
  *(_BYTE *)(inited + 96) = *v5;
  *(_QWORD *)(inited + 120) = &type metadata for InCallControlsMode;
  *(_QWORD *)(inited + 128) = 0xD000000000000018;
  *(_QWORD *)(inited + 136) = 0x80000001BD682640;
  v6 = (void **)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController];
  OUTLINED_FUNCTION_1();
  v7 = *v6;
  if (v7)
  {
    v8 = type metadata accessor for InCallControlsCollectionViewController(0);
  }
  else
  {
    v8 = 0;
    *(_QWORD *)(inited + 152) = 0;
    *(_QWORD *)(inited + 160) = 0;
  }
  *(_QWORD *)(inited + 144) = v7;
  *(_QWORD *)(inited + 168) = v8;
  v12[3] = v1;
  v12[0] = v0;
  v9 = v7;
  v10 = v0;
  return String.init(namedPropertyValues:for:)(inited, v12);
}

id InCallControlsViewController.__allocating_init(localParticipant:remoteParticipants:mode:gridLayoutStyle:representedLegacyCallIdentifier:isLocalMemberAuthorizedToChangeGroupMembership:isLinkSharingSupported:menuHostViewController:)(uint64_t a1, uint64_t a2, char a3, char *a4, uint64_t a5, uint64_t a6, int a7, int a8, void *a9, uint64_t a10)
{
  objc_class *v10;
  id v17;

  v17 = objc_allocWithZone(v10);
  return InCallControlsViewController.init(localParticipant:remoteParticipants:mode:gridLayoutStyle:representedLegacyCallIdentifier:isLocalMemberAuthorizedToChangeGroupMembership:isLinkSharingSupported:menuHostViewController:)(a1, a2, a3, a4, a5, a6, 0, 0, a9, a10);
}

id InCallControlsViewController.init(localParticipant:remoteParticipants:mode:gridLayoutStyle:representedLegacyCallIdentifier:isLocalMemberAuthorizedToChangeGroupMembership:isLinkSharingSupported:menuHostViewController:)(uint64_t a1, uint64_t a2, char a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  _BYTE *v10;
  _BYTE *v11;
  _QWORD *v15;
  _QWORD *v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char *v22;
  char v23;
  id v24;
  id v25;
  id v26;
  objc_class *ObjectType;
  objc_super v31;

  v11 = v10;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_bridgeObjectRelease();
  v15 = &v11[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_groupName];
  *v15 = 0;
  v15[1] = 0;
  v16 = &v11[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_representedLegacyCallIdentifier];
  *v16 = 0;
  v16[1] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_tableViewSeparator] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController] = 0;
  v17 = &v11[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent];
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((_OWORD *)v17 + 2) = 0u;
  *((_QWORD *)v17 + 6) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset] = 0x4043800000000000;
  v18 = *a4;
  v11[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isExpanded] = 0;
  v11[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_audioIsEnabled] = 1;
  v11[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isScreenSharing] = 0;
  v19 = OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreAvailable;
  v20 = one-time initialization token for shared;
  v21 = v11;
  if (v20 != -1)
    swift_once();
  v11[v19] = OUTLINED_FUNCTION_49_32() & 1;
  v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_delegate]);
  OUTLINED_FUNCTION_40_4((uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantDelegate]);
  OUTLINED_FUNCTION_40_4((uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantsViewControllerDelegate]);
  v22 = &v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_menuHostViewController];
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_menuHostViewController + 8] = 0;
  swift_unknownObjectWeakInit();
  outlined init with copy of ConversationControlsAction(a1, (uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_localParticipant], type metadata accessor for Participant);
  *(_QWORD *)&v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_controlsButtonRowCount] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_gridLayoutStyle] = v18;
  v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_mode] = a3;
  v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_shouldShowLeaveButton] = 0;
  *v16 = a5;
  v16[1] = a6;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_27();
  if ((OUTLINED_FUNCTION_48_5() & 1) != 0 || a6)
  {
    OUTLINED_FUNCTION_133();
    v23 = 1;
  }
  else
  {
    v23 = 0;
  }
  v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_videoIsEnabled] = v23;
  OUTLINED_FUNCTION_2_0();
  *((_QWORD *)v22 + 1) = a10;
  swift_unknownObjectWeakAssign();
  v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsEnabled] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsAvailable] = 0;

  v31.receiver = v21;
  v31.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v31, sel_initWithNibName_bundle_, 0, 0);
  objc_opt_self();
  v25 = v24;
  v26 = OUTLINED_FUNCTION_2_2((uint64_t)v25, sel_defaultCenter);
  objc_msgSend(v26, sel_addObserver_selector_name_object_, v25, sel_handleLegacyCallStatusDidChangeNotification_, *MEMORY[0x1E0DBD4F0], 0);

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
  return v25;
}

void InCallControlsViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.init(coder:)()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  char *v3;
  uint64_t v4;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_groupName];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_representedLegacyCallIdentifier];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_tableViewSeparator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController] = 0;
  v3 = &v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_QWORD *)v3 + 6) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset] = 0x4043800000000000;
  v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isExpanded] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_audioIsEnabled] = 1;
  v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isScreenSharing] = 0;
  v4 = OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreAvailable;
  if (one-time initialization token for shared != -1)
    swift_once();
  v0[v4] = OUTLINED_FUNCTION_49_32() & 1;
  v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_delegate]);
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantDelegate]);
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantsViewControllerDelegate]);
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_menuHostViewController]);

  OUTLINED_FUNCTION_99_7();
  __break(1u);
}

Swift::Void __swiftcall InCallControlsViewController.embedEffectsBrowserViewController(_:)(UIViewController *a1)
{
  char *v1;
  char *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;

  objc_msgSend(v1, sel_loadViewIfNeeded);
  v3 = &v1[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent];
  OUTLINED_FUNCTION_1();
  v4 = *(void **)v3;
  if (*(_QWORD *)v3)
  {
    v5 = (void *)*((_QWORD *)v3 + 5);
    v19 = v5;
    v20 = (void *)*((_QWORD *)v3 + 6);
    v7 = (void *)*((_QWORD *)v3 + 3);
    v6 = *((_QWORD *)v3 + 4);
    v10 = v3 + 8;
    v9 = (void *)*((_QWORD *)v3 + 1);
    v8 = (void *)*((_QWORD *)v10 + 1);
    v11 = v20;
    v12 = v4;
    v13 = v9;
    v14 = v8;
    v15 = v7;
    swift_bridgeObjectRetain();
    v16 = v5;
    objc_msgSend(v1, sel_addChildViewController_, a1);
    v17 = InCallControlsViewController.contentView.getter();
    v18 = OUTLINED_FUNCTION_123((uint64_t)v17, sel_view);
    objc_msgSend(v17, sel_insertSubview_below_, v18, v14);

    OUTLINED_FUNCTION_48_1(a1, sel_didMoveToParentViewController_);
    outlined consume of InCallControlsViewController.ViewContent?(v4, v9, v8, v7, v6, v19, v20);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
  OUTLINED_FUNCTION_0_20();
}

void InCallControlsViewController.setUpCollectionViewConstraints()()
{
  char *v0;
  char *v1;
  void **v2;
  void *v3;
  void *v4;
  char *v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  unint64_t v15;
  id v16;
  void *v17;
  char v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  char *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  double v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  char *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  Class isa;
  id v56;
  void *v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  void *v64;
  id v65;
  void *v66;
  void *v67;
  void *v68;

  v1 = v0;
  v2 = (void **)&v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController];
  swift_beginAccess();
  v3 = *v2;
  if (!v3)
    return;
  v4 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_tableViewSeparator];
  if (!v4)
    return;
  v5 = &v1[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent];
  swift_beginAccess();
  v6 = *(void **)v5;
  if (!*(_QWORD *)v5)
    return;
  v7 = v3;
  v8 = v4;
  v9 = v6;
  v10 = objc_msgSend(v1, sel_childViewControllers);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v10) = specialized Sequence<>.contains(_:)((uint64_t)v7, v11);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v12 = objc_msgSend(v1, sel_view);
    if (!v12)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v13 = v12;
    v14 = objc_msgSend(v12, sel_subviews);

    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v16 = objc_msgSend(v7, sel_view);
    if (!v16)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v17 = v16;
    v18 = specialized Sequence<>.contains(_:)((uint64_t)v16, v15);
    swift_bridgeObjectRelease();

    if ((v18 & 1) == 0)
    {
      v19 = objc_msgSend(v7, sel_view);
      if (!v19)
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      v20 = v19;
      objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      v21 = InCallControlsViewController.contentView.getter();
      v22 = objc_msgSend(v7, sel_view);
      if (!v22)
      {
LABEL_38:
        __break(1u);
        return;
      }
      v23 = v22;
      objc_msgSend(v21, sel_addSubview_, v22);

    }
  }
  else
  {
    objc_msgSend(v1, sel_addChildViewController_, v7);
    v24 = objc_msgSend(v7, sel_view);
    if (!v24)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v25 = v24;
    objc_msgSend(v24, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

    v26 = InCallControlsViewController.contentView.getter();
    v27 = objc_msgSend(v7, sel_view);
    if (!v27)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v28 = v27;
    objc_msgSend(v26, sel_addSubview_, v27);

    objc_msgSend(v7, sel_didMoveToParentViewController_, v1);
    v29 = &v7[OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_inCallControlsCollectionViewControllerDelegate];
    swift_beginAccess();
    *((_QWORD *)v29 + 1) = &protocol witness table for InCallControlsViewController;
    swift_unknownObjectWeakAssign();
  }
  v30 = objc_msgSend(v7, sel_view);
  if (!v30)
  {
    __break(1u);
    goto LABEL_30;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, sel_bottomAnchor);

  v33 = objc_msgSend(v9, sel_bottomAnchor);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, -0.0);

  LODWORD(v35) = 1132068864;
  v68 = v34;
  objc_msgSend(v34, sel_setPriority_, v35);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1BD644140;
  v37 = objc_msgSend(v7, sel_view);
  if (!v37)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v38 = v37;
  v39 = objc_msgSend(v37, sel_topAnchor);

  v67 = v8;
  v40 = objc_msgSend(v8, sel_bottomAnchor);
  v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

  *(_QWORD *)(v36 + 32) = v41;
  v42 = objc_msgSend(v7, sel_view);
  if (!v42)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v43 = v42;
  v44 = v7;
  v45 = objc_msgSend(v42, sel_leadingAnchor);

  v46 = objc_msgSend(v9, sel_leadingAnchor);
  v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v46, 0.0);

  *(_QWORD *)(v36 + 40) = v47;
  v48 = objc_msgSend(v7, sel_view);
  if (!v48)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v49 = v48;
  v50 = (void *)objc_opt_self();
  v51 = objc_msgSend(v49, sel_trailingAnchor);

  v66 = v9;
  v52 = objc_msgSend(v9, sel_trailingAnchor);
  v53 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v52, -0.0);

  *(_QWORD *)(v36 + 48) = v53;
  *(_QWORD *)(v36 + 56) = v68;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  v54 = v68;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_activateConstraints_, isa);

  v56 = objc_msgSend(v44, sel_view);
  if (v56)
  {
    v57 = v56;
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_controlsButtonRowCount] == 1)
    {
      swift_beginAccess();
      if (*(_QWORD *)v5)
      {
        v58 = v57;
        MEMORY[0x1C3B7301C]();
        specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)((*((_QWORD *)v5 + 4) & 0xFFFFFFFFFFFFF8)
                                                                                    + 0x10));
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      swift_endAccess();
      v59 = &v1[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isExpanded];
      swift_beginAccess();
      InCallControlsViewController.updateControlsVisibility(forExpandedState:)(*v59);
    }

  }
  v60 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_representedLegacyCallIdentifier
                     + 8];
  if (v60)
  {
    v61 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_representedLegacyCallIdentifier];
    v62 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v63 = objc_msgSend(v62, sel_sharedInstance);
    v64 = (void *)MEMORY[0x1C3B72E00](v61, v60);
    swift_bridgeObjectRelease();
    v65 = objc_msgSend(v63, sel_callWithUniqueProxyIdentifier_, v64);

    if (v65)
    {
      InCallControlsViewController.updateToRepresentLegacyCall(_:)();

    }
  }

}

void InCallControlsViewController.updateToRepresentLegacyCall(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  unsigned __int8 v54;
  unsigned __int8 *v55;
  _BYTE *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  void **v64;
  void *v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  void *v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85[23];
  __int16 v86;
  uint64_t v87[8];
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  __int16 v94;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.CountdownInfo?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v77 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  v15 = OUTLINED_FUNCTION_37_36();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v78 = (uint64_t)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  if ((objc_msgSend(v4, sel_isConversation) & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v19 = OUTLINED_FUNCTION_16_9();
    *(_OWORD *)(v19 + 16) = xmmword_1BD6441D0;
    v82 = v4;
    OUTLINED_FUNCTION_59(v19, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v20 = v4;
    v21 = OUTLINED_FUNCTION_91_9();
    v23 = v22;
    *(_QWORD *)(v19 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v19 + 32) = v21;
    *(_QWORD *)(v19 + 40) = v23;
LABEL_23:
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_53();
    goto LABEL_31;
  }
  v75 = v0;
  v76 = v13;
  v72 = v9;
  v73 = v1;
  v71 = v16;
  v24 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_representedLegacyCallIdentifier);
  v26 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_representedLegacyCallIdentifier);
  v25 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_representedLegacyCallIdentifier
                  + 8);
  v74 = v24;
  v27 = swift_bridgeObjectRetain();
  v28 = OUTLINED_FUNCTION_20_4(v27, sel_uniqueProxyIdentifier);
  v29 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  v31 = v30;

  if (v25)
  {
    if (v26 == v29 && v25 == v31)
    {
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_66_19();
    }
    else
    {
      v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_66_19();
      if ((v33 & 1) == 0)
        goto LABEL_16;
    }
    v35 = v75;
    v36 = InCallControlsViewController.participants.getter();
    specialized Collection.first.getter(v36, v2);
    OUTLINED_FUNCTION_27();
    if (__swift_getEnumTagSinglePayload(v2, 1, v15) != 1)
    {
      outlined init with take of Participant(v2, v31);
      goto LABEL_25;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_66_19();
  }
LABEL_16:
  v37 = OUTLINED_FUNCTION_5_39(v34, sel_handle);
  if (!v37)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v47 = OUTLINED_FUNCTION_16_9();
    *(_OWORD *)(v47 + 16) = xmmword_1BD6441D0;
    v82 = v29;
    OUTLINED_FUNCTION_59(v47, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v48 = v29;
    v49 = OUTLINED_FUNCTION_91_9();
    v51 = v50;
    *(_QWORD *)(v47 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v47 + 32) = v49;
    *(_QWORD *)(v47 + 40) = v51;
    goto LABEL_23;
  }
  v38 = v37;
  v70 = v31;
  Date.init()();
  swift_storeEnumTagMultiPayload();
  v39 = v72;
  UUID.init()();
  v82 = v38;
  v83 = xmmword_1BD6491B0;
  v84 = 0;
  v85[0] = 0;
  v40 = v38;
  v41 = static Colors.ParticipantGradients.gradient(for:)(v40);
  v42 = type metadata accessor for Participant.CountdownInfo(0);
  v43 = v73;
  __swift_storeEnumTagSinglePayload(v73, 1, 1, v42);
  v44 = type metadata accessor for ParticipantContactDetailsCache();
  v45 = lazy protocol witness table accessor for type TUCall and conformance TUCall();
  v46 = v45;
  if (one-time initialization token for queue != -1)
    v45 = swift_once();
  MEMORY[0x1E0C80A78](v45);
  *(&v70 - 4) = v44;
  *(&v70 - 3) = (uint64_t)v29;
  v69 = v46;
  OS_dispatch_queue.sync<A>(execute:)();
  LOBYTE(v69) = 1;
  v31 = v70;
  Participant.init(state:identifier:capabilities:remoteIdentifiers:gradient:nickname:countdownInfo:isAuthorizedToChangeGroupMembership:cache:)(v76, v39, 0x100010100, (uint64_t)&v82, v41, 0, 0, v43, v69, v88, v70, v71, v72, v73, (uint64_t)v74, v75, v76, v77, v78,
    v79,
    v80,
    v81);

  v35 = v75;
LABEL_25:
  v52 = objc_msgSend(v29, sel_status);
  v53 = v78;
  if (v52 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
    lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType();
    v88 = Dictionary.init(dictionaryLiteral:)();
    v89 = xmmword_1BD64E9C0;
    v90 = 1;
    v91 = 0u;
    v92 = 0u;
    v93 = 0;
    v94 = 1;
    v82 = 0;
    v83 = 0uLL;
    v84 = 1;
    bzero(v85, 0xB1uLL);
    Participant.copresenceInfo.getter(v87);
    Participant.asJoined(avInfo:videoInfo:screenInfo:captionInfo:copresenceInfo:)();
    outlined release of Participant.CopresenceInfo?(v87);
    OUTLINED_FUNCTION_2_1();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v82, (uint64_t *)&demangling cache variable for type metadata for Participant.ScreenInfo?);
    InCallControlsViewController.mode.setter(0);
    v54 = objc_msgSend(v29, sel_isSendingVideo);
    v55 = (unsigned __int8 *)(v35 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_videoIsEnabled);
    OUTLINED_FUNCTION_2_0();
    *v55 = v54;
    InCallControlsViewController.videoIsEnabled.didset();
  }
  else
  {
    Participant.asWaiting()();
    InCallControlsViewController.mode.setter(32);
  }
  v56 = (_BYTE *)(v35 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_shouldShowLeaveButton);
  OUTLINED_FUNCTION_2_0();
  *v56 = 1;
  InCallControlsViewController.updateJoinLeaveButton()();
  v58 = OUTLINED_FUNCTION_5_39(v57, sel_uniqueProxyIdentifier);
  v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v60 = v35;
  v62 = v61;

  v63 = v74;
  *v74 = v59;
  v63[1] = v62;
  swift_bridgeObjectRelease();
  v64 = (void **)(v60 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController);
  OUTLINED_FUNCTION_2_0();
  v65 = *v64;
  if (v65)
  {
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
    v66 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_1BD6441D0;
    outlined init with copy of ConversationControlsAction(v53, v67 + v66, type metadata accessor for Participant);
    v86 = 513;
    v68 = v65;
    InCallControlsCollectionViewController.update(with:updateReason:)();

    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_82_6();
    outlined destroy of AccountUpdateNotice(v31, type metadata accessor for Participant);
  }
  else
  {
    outlined destroy of AccountUpdateNotice(v53, type metadata accessor for Participant);
    outlined destroy of AccountUpdateNotice(v31, type metadata accessor for Participant);
    swift_endAccess();
  }
LABEL_31:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall InCallControlsViewController.loadView()()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = v0;
  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_40_6() & 1) != 0)
  {
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    v3 = one-time initialization token for background;
    v4 = v2;
    v5 = v4;
    if (v3 != -1)
    {
      swift_once();
      v4 = v5;
    }
    objc_msgSend(v4, sel_setBackgroundColor_, static Colors.InCallControls.background);

  }
  else
  {
    if (one-time initialization token for backgroundBlurEffect != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_48_1(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_);
  }
  objc_msgSend(v1, sel_setView_, v5);

}

Swift::Void __swiftcall InCallControlsViewController.viewDidLoad()()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  objc_super v26;

  v26.receiver = v0;
  v26.super_class = (Class)OUTLINED_FUNCTION_15_6();
  v1 = objc_msgSendSuper2(&v26, sel_viewDidLoad);
  v2 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel__setCornerRadius_, 10.0);

    v5 = OUTLINED_FUNCTION_25_1(v4, sel_view);
    if (v5)
    {
      v6 = v5;
      OUTLINED_FUNCTION_40_3(v5, sel_setClipsToBounds_);

      v7 = MEMORY[0x1E0DEE9D8];
      v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
      v9 = InCallControlsViewController.contentView.getter();
      objc_msgSend(v9, sel_addLayoutGuide_, v8);

      v11 = OUTLINED_FUNCTION_20_4(v10, sel_leadingAnchor);
      v12 = InCallControlsViewController.contentView.getter();
      v13 = objc_msgSend(v12, sel_leadingAnchor);

      v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
      v16 = OUTLINED_FUNCTION_20_4(v15, sel_trailingAnchor);
      v17 = InCallControlsViewController.contentView.getter();
      v18 = objc_msgSend(v17, sel_trailingAnchor);

      v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
      v21 = OUTLINED_FUNCTION_20_4(v20, sel_topAnchor);
      v22 = objc_msgSend(InCallControlsViewController.contentView.getter(), sel_topAnchor);
      OUTLINED_FUNCTION_6_16();
      v23 = OUTLINED_FUNCTION_7_24(v21, sel_constraintEqualToAnchor_);

      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        v24 = _CocoaArrayWrapper.endIndex.getter();
        OUTLINED_FUNCTION_53();
      }
      else
      {
        v24 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (!__OFADD__(v24, 3))
      {
        OUTLINED_FUNCTION_36_40(v24 + 3);
        specialized Array._endMutation()();
        v25 = v14;
        OUTLINED_FUNCTION_40();
      }
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  JUMPOUT(0x1BD2D3BE0);
}

void sub_1BD2D3D94()
{
  void *v0;

}

Swift::Void __swiftcall InCallControlsViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)OUTLINED_FUNCTION_15_6();
  v3 = objc_msgSendSuper2(&v6, sel_viewDidAppear_, a1);
  v4 = OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_view);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setNeedsUpdateConstraints);

    InCallControlsViewController.setUpCollectionViewConstraints()();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall InCallControlsViewController.willMove(toParent:)(UIViewController_optional *toParent)
{
  void *v1;
  void *v3;
  UIViewController_optional *v4;
  id v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_102_9(&v6, sel_willMoveToParentViewController_);
  if (toParent)
  {
    v3 = (void *)objc_opt_self();
    v4 = toParent;
    v5 = objc_msgSend(v3, sel_traitCollectionWithUserInterfaceStyle_, 2);
    -[UIViewController_optional setOverrideTraitCollection:forChildViewController:](v4, sel_setOverrideTraitCollection_forChildViewController_, v5, v1);

  }
}

Swift::Void __swiftcall InCallControlsViewController.didMove(toParent:)(UIViewController_optional *toParent)
{
  char *v1;
  id v3;
  id v4;
  void *v5;
  void **v6;
  void *v7;
  unint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  objc_super v20;

  v20.receiver = v1;
  v20.super_class = (Class)OUTLINED_FUNCTION_15_6();
  v3 = OUTLINED_FUNCTION_102_9(&v20, sel_didMoveToParentViewController_);
  if (toParent)
  {
    v4 = OUTLINED_FUNCTION_123((uint64_t)v3, sel_viewIfLoaded);
    if (v4)
    {
      v5 = v4;
      v6 = (void **)&v1[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent];
      OUTLINED_FUNCTION_1();
      v7 = *v6;
      if (*v6)
      {
        v8 = MEMORY[0x1E0DEE9D8];
        v9 = objc_allocWithZone(MEMORY[0x1E0DC39A0]);
        v10 = objc_msgSend(v5, sel_addLayoutGuide_, OUTLINED_FUNCTION_2_2((uint64_t)v7, sel_init));
        v11 = OUTLINED_FUNCTION_2_2((uint64_t)v10, sel_leadingAnchor);
        v12 = OUTLINED_FUNCTION_123((uint64_t)v11, sel_leadingAnchor);
        v13 = OUTLINED_FUNCTION_7_24(v11, sel_constraintEqualToAnchor_);

        v15 = OUTLINED_FUNCTION_2_2(v14, sel_trailingAnchor);
        v16 = OUTLINED_FUNCTION_123((uint64_t)v15, sel_trailingAnchor);
        v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);
        OUTLINED_FUNCTION_17_52();

        if (v8 >> 62)
        {
          swift_bridgeObjectRetain();
          v18 = _CocoaArrayWrapper.endIndex.getter();
          OUTLINED_FUNCTION_27();
        }
        else
        {
          v18 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (!__OFADD__(v18, 2))
        {
          specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v18 + 2, 1);
          OUTLINED_FUNCTION_45_1();
          v19 = v13;
          OUTLINED_FUNCTION_44_36();
        }
        __break(1u);
        JUMPOUT(0x1BD2D4628);
      }

    }
  }
}

Swift::Void __swiftcall InCallControlsViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  char *v2;
  id *v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_102_9(&v4, sel_traitCollectionDidChange_);
  v2 = &v1[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController];
  OUTLINED_FUNCTION_1();
  if (*(_QWORD *)v2)
  {
    v3 = (id *)(*(_QWORD *)v2 + OBJC_IVAR____TtC15ConversationKit38InCallControlsCollectionViewController_collectionView);
    OUTLINED_FUNCTION_1();
    objc_msgSend(*v3, sel_reloadData);
  }
  OUTLINED_FUNCTION_289_0();
}

Swift::Void __swiftcall InCallControlsViewController.updateViewConstraints()()
{
  char *v0;
  objc_class *v1;
  id v2;
  void *v3;
  id v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  objc_super v14;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v2 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_parentViewController);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_viewIfLoaded);

    if (v4)
    {
      v5 = &v0[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent];
      OUTLINED_FUNCTION_1();
      if (*(_QWORD *)v5)
      {
        v6 = (void *)*((_QWORD *)v5 + 6);
        if (v6)
        {
          v7 = (void *)*((_QWORD *)v5 + 5);
          if (v7)
          {
            v8 = v6;
            v9 = v7;
            OUTLINED_FUNCTION_86_8();
            objc_msgSend(v8, sel_setActive_, v10 < v11);
            OUTLINED_FUNCTION_86_8();
            objc_msgSend(v9, sel_setActive_, v13 < v12);

            v4 = v9;
          }
        }
      }

    }
  }
  v14.receiver = v0;
  v14.super_class = v1;
  objc_msgSendSuper2(&v14, sel_updateViewConstraints);
}

Swift::Void __swiftcall InCallControlsViewController.viewDidLayoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_viewDidLayoutSubviews);
  InCallControlsViewController.updateViewConstraints()();
}

Swift::Bool __swiftcall InCallControlsViewController._canShowWhileLocked()()
{
  return 1;
}

uint64_t InCallControlsViewController.handle(_:from:completion:)(unint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  char *v4;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  id v15;

  v9 = &v4[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_delegate];
  OUTLINED_FUNCTION_1();
  result = MEMORY[0x1C3B752C0](v9);
  if (result)
  {
    v11 = result;
    v12 = *((_QWORD *)v9 + 1);
    if ((CNKCommand.isAvailableWhileLocked.getter(a1) & 1) != 0)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, unint64_t, void *, uint64_t, uint64_t))(v12 + 16))(v4, a1, a2, ObjectType, v12);
      if (a3)
        a3(1);
      return swift_unknownObjectRelease();
    }
    else
    {
      v14 = type metadata accessor for SpringBoardUtilities();
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)a3);
      v15 = a2;
      return specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)(v14, a1, a3, a4, v11, v12, v4, a2);
    }
  }
  return result;
}

void closure #1 in InCallControlsViewController.handle(_:from:completion:)(char a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((a1 & 1) != 0)
  {
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 16))(a7, a2, a8, ObjectType, a6);
    if (a3)
    {
      v14 = 1;
LABEL_8:
      a3(v14);
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v15 = OUTLINED_FUNCTION_16_9();
    *(_OWORD *)(v15 + 16) = xmmword_1BD6441D0;
    type metadata accessor for CNKCommand(0);
    v16 = String.init<A>(reflecting:)();
    v18 = v17;
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v15 + 32) = v16;
    *(_QWORD *)(v15 + 40) = v18;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_133();
    if (a3)
    {
      v14 = 0;
      goto LABEL_8;
    }
  }
  OUTLINED_FUNCTION_289_0();
}

uint64_t InCallControlsViewController.didTapEffectsButton(_:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  v4 = v1;
  InCallControlsViewController.handle(_:from:completion:)(1uLL, a1, (void (*)(uint64_t))partial apply for closure #1 in InCallControlsViewController.didTapEffectsButton(_:), v3);
  return swift_release();
}

void closure #1 in InCallControlsViewController.didTapEffectsButton(_:)(char a1, uint64_t a2)
{
  BOOL *v2;

  if ((a1 & 1) != 0)
  {
    v2 = (BOOL *)(a2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
    swift_beginAccess();
    *v2 = !*v2;
    InCallControlsViewController.updateEffectsButton()();
  }
}

uint64_t InCallControlsViewController.didTapJoinLeaveButton(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BD6441D0;
  v4 = v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_mode;
  swift_beginAccess();
  v5 = String.init<A>(reflecting:)();
  v7 = v6;
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v7;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v8 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_shouldShowLeaveButton);
  swift_beginAccess();
  if (*v8 != 1)
    __asm { BR              X11 }
  return InCallControlsViewController.handle(_:from:completion:)(2uLL, a1, 0, 0);
}

uint64_t InCallControlsViewController.didTapFlipCameraButton(_:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  return InCallControlsViewController.handle(_:from:completion:)(a4, a1, 0, 0);
}

void InCallControlsViewController.updateControls(forLocalParticipantState:broadcastingState:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  __int128 v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v29 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant.State?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v11 = swift_allocObject();
  v28 = xmmword_1BD645380;
  *(_OWORD *)(v11 + 16) = xmmword_1BD645380;
  outlined init with copy of ConversationControlsAction(a1, (uint64_t)v10, type metadata accessor for Participant.State);
  v12 = type metadata accessor for Participant.State(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  specialized >> prefix<A>(_:)((uint64_t)v10);
  v14 = v13;
  v16 = v15;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant.State?);
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v18 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v11 + 64) = v18;
  *(_QWORD *)(v11 + 32) = v14;
  *(_QWORD *)(v11 + 40) = v16;
  v30 = a2;
  v31 = a3;
  LODWORD(v14) = v29;
  v32 = v29;
  v19 = String.init<A>(reflecting:)();
  *(_QWORD *)(v11 + 96) = v17;
  *(_QWORD *)(v11 + 104) = v18;
  *(_QWORD *)(v11 + 72) = v19;
  *(_QWORD *)(v11 + 80) = v20;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  LOBYTE(v11) = (a2 & 1) == 0;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v28;
  LOBYTE(v30) = v11;
  v22 = String.init<A>(reflecting:)();
  *(_QWORD *)(v21 + 56) = v17;
  *(_QWORD *)(v21 + 64) = v18;
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v23;
  LODWORD(v14) = (v14 >> 7) & 1;
  LOBYTE(v30) = v14;
  v24 = String.init<A>(reflecting:)();
  *(_QWORD *)(v21 + 96) = v17;
  *(_QWORD *)(v21 + 104) = v18;
  *(_QWORD *)(v21 + 72) = v24;
  *(_QWORD *)(v21 + 80) = v25;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v26 = (_BYTE *)(v4 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_audioIsEnabled);
  swift_beginAccess();
  *v26 = v11;
  InCallControlsViewController.updateMuteAudioButton()(&OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_audioIsEnabled, (uint64_t)"Updating mute audio button for audioIsEnabled=%@", 48, &OBJC_IVAR____TtC15ConversationKit18InCallControlsView_muteButton);
  v27 = (_BYTE *)(v4 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_videoIsEnabled);
  swift_beginAccess();
  *v27 = v14;
  InCallControlsViewController.videoIsEnabled.didset();
}

void InCallControlsViewController.updateAudioRouteButton(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t (*v20)(id, uint64_t, uint64_t, uint64_t);
  id v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  void (*v25)(void *);
  _QWORD *v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  BOOL v39;
  unint64_t v40;
  id v41;
  const char *v42;
  Swift::String v43;
  Swift::String_optional v44;
  Swift::String v45;
  uint64_t v46;
  Swift::String v47;
  Swift::String v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_33_0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_0_7();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v7 = OUTLINED_FUNCTION_16_9();
  v8 = (_QWORD *)v7;
  *(_OWORD *)(v7 + 16) = xmmword_1BD6441D0;
  if (v4)
  {
    OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for TURoute);
    v9 = v4;
    v10 = OUTLINED_FUNCTION_65_16();
    v12 = v11;
  }
  else
  {
    v12 = 0xE300000000000000;
    v10 = 7104878;
  }
  v8[8] = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
  v8[4] = v10;
  v8[5] = v12;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_53();
  v13 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  OUTLINED_FUNCTION_1();
  if (!*v13)
    goto LABEL_21;
  v14 = *(_QWORD **)(v13[2] + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_audioRouteButton);
  v15 = &metadata instantiation cache for protocol conformance descriptor for ImageNames.Roster;
  if (v4
    && (v16 = v2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_delegate,
        OUTLINED_FUNCTION_1(),
        MEMORY[0x1C3B752C0](v16)))
  {
    v50 = v6;
    v51 = v5;
    v52 = v2;
    v17 = *(_QWORD *)(v16 + 8);
    ObjectType = swift_getObjectType();
    v53 = OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style;
    v19 = *(_QWORD *)((char *)v14 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style);
    v20 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(v17 + 40);
    v21 = v4;
    v22 = v14;
    v23 = (void *)v20(v21, v19, ObjectType, v17);
    swift_unknownObjectRelease();
    if (v23)
    {
      v24 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v25 = *(void (**)(void *))((*MEMORY[0x1E0DEEDD8] & *v22) + 0x120);
      v26 = v23;
      v25(v23);
      v27 = TURoute.name(for:)(*(_QWORD *)((char *)v14 + v53));
      (*(void (**)(uint64_t))((*v24 & *v22) + 0x170))(v27);

      v14 = v26;
      v28 = v22;
LABEL_20:

LABEL_21:
      OUTLINED_FUNCTION_52_1();
      return;
    }

    v5 = v51;
    v2 = v52;
    v6 = v50;
    v15 = (_QWORD *)&metadata instantiation cache for protocol conformance descriptor for ImageNames.Roster;
  }
  else
  {
    v29 = v14;
  }
  UUID.init()();
  v30 = UUID.uuidString.getter();
  v32 = v31;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  v33 = objc_allocWithZone(MEMORY[0x1E0DBD348]);
  v28 = @nonobjc TUMutableRoute.init(uniqueIdentifier:name:)(v30, v32, 0x72656B61657053, 0xE700000000000000);
  OUTLINED_FUNCTION_40_3(v28, sel_setSpeaker_);
  v34 = v2 + v15[475];
  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](v34))
  {
    v35 = *(_QWORD *)(v34 + 8);
    v36 = swift_getObjectType();
    (*(void (**)(id, _QWORD, uint64_t, uint64_t))(v35 + 40))(v28, *(_QWORD *)((char *)v14 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style), v36, v35);
    OUTLINED_FUNCTION_111_6();
  }
  else
  {
    v35 = 0;
  }
  v37 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v14) + 0x120))(v35);
  v38 = *(_QWORD *)((char *)v14 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_style);
  v39 = v38 >= 4;
  v40 = v38 - 4;
  if (!v39)
  {
    v41 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v49 = 0xE000000000000000;
    v42 = "DRAWER_DISC_AUDIO_ROUTE_BUTTON";
LABEL_19:
    v43._object = (void *)((unint64_t)(v42 - 32) | 0x8000000000000000);
    v43._countAndFlagsBits = 0xD00000000000001ELL;
    v44.value._countAndFlagsBits = 0x61737265766E6F43;
    v44.value._object = (void *)0xEF74694B6E6F6974;
    v45._countAndFlagsBits = 0;
    v45._object = (void *)0xE000000000000000;
    v46 = 0;
    v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v41, v45, *(Swift::String *)(&v49 - 1));

    (*(void (**)(uint64_t, void *))((*v37 & *v14) + 0x170))(v47._countAndFlagsBits, v47._object);
    goto LABEL_20;
  }
  if (v40 < 2)
  {
    v41 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v49 = 0xE000000000000000;
    v42 = "DRAWER_PILL_AUDIO_ROUTE_BUTTON";
    goto LABEL_19;
  }
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  type metadata accessor for CNKInCallControlButtonStyle(0);
  v48._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v48);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_99_7();
  __break(1u);
}

uint64_t TURoute.name(for:)(unint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  id v6;
  uint64_t v7;
  Swift::String v8;

  if (a1 >= 4)
  {
    if (a1 - 4 > 1)
    {
      _StringGuts.grow(_:)(35);
      swift_bridgeObjectRelease();
      type metadata accessor for CNKInCallControlButtonStyle(0);
      v8._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
    else
    {
      v6 = objc_msgSend(v1, sel_name);
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v7;
    }
  }
  else
  {
    v2 = objc_msgSend(v1, sel_deviceType);
    v3 = objc_msgSend(v1, sel_name);
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    if (!v2)
    {
      lazy protocol witness table accessor for type String and conformance String();
      v4 = StringProtocol.localizedLowercase.getter();
      swift_bridgeObjectRelease();
    }
    return v4;
  }
  return result;
}

void *InCallControlsViewController.accessibilityHotdog()()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  swift_beginAccess();
  if (!*v1)
    return 0;
  v2 = (void *)v1[1];
  v3 = v2;
  return v2;
}

void InCallControlsViewController.accessibilityJoinLeaveButton()(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  id v4;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  OUTLINED_FUNCTION_1();
  if (*v3)
    v4 = *(id *)(v3[2] + *a1);
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.accessibilityEffectsLabel()(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id v5;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  OUTLINED_FUNCTION_1();
  if (*v3)
  {
    v4 = *(void **)(*(_QWORD *)(v3[2] + *a1) + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
    if (v4)
      v5 = v4;
  }
  OUTLINED_FUNCTION_32();
}

id InCallControlsViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void InCallControlsViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InCallControlsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void InCallControlsViewController.handleLegacyCallStatusDidChangeNotification(_:)()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  void *v38;
  _BYTE v39[24];
  uint64_t v40;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v0 = (__n128 *)OUTLINED_FUNCTION_16_9();
  v37 = (__n128)xmmword_1BD6441D0;
  OUTLINED_FUNCTION_89_13(v0, (__n128)xmmword_1BD6441D0);
  v8 = specialized >> prefix<A>(_:)((uint64_t)v39, v1, v2, v3, v4, v5, v6, v7);
  v10 = v9;
  OUTLINED_FUNCTION_85_13(v8, &demangling cache variable for type metadata for Any?, v11, v12, v13, v14);
  v15 = MEMORY[0x1E0DEA968];
  v0[3].n128_u64[1] = MEMORY[0x1E0DEA968];
  v16 = lazy protocol witness table accessor for type String and conformance String();
  v0[4].n128_u64[0] = v16;
  v0[2].n128_u64[0] = v8;
  v0[2].n128_u64[1] = v10;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v17 = Notification.object.getter();
  if (v40)
  {
    OUTLINED_FUNCTION_59(v17, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    if ((swift_dynamicCast() & 1) != 0)
    {
      InCallControlsViewController.updateToRepresentLegacyCall(_:)();

      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_85_13(v17, &demangling cache variable for type metadata for Any?, v18, v19, v20, v21, 1, 2);
  }
  v22 = (__n128 *)OUTLINED_FUNCTION_16_9();
  OUTLINED_FUNCTION_89_13(v22, v37);
  v30 = specialized >> prefix<A>(_:)((uint64_t)v39, v23, v24, v25, v26, v27, v28, v29);
  v32 = v31;
  OUTLINED_FUNCTION_85_13(v30, &demangling cache variable for type metadata for Any?, v33, v34, v35, v36);
  v22[3].n128_u64[1] = v15;
  v22[4].n128_u64[0] = v16;
  v22[2].n128_u64[0] = v30;
  v22[2].n128_u64[1] = v32;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_2_1();
}

uint64_t InCallControlsViewController.participantIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_93();
  v13 = OUTLINED_FUNCTION_14_2();
  v2 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_2_20();
  v3 = type metadata accessor for UUID();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  v5 = InCallControlsViewController.participants.getter();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v6, 0);
    v7 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v12 = *(_QWORD *)(v2 + 72);
    do
    {
      outlined init with copy of ConversationControlsAction(v7, v0, type metadata accessor for Participant);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v0 + *(int *)(v13 + 20), v3);
      outlined destroy of AccountUpdateNotice(v0, type metadata accessor for Participant);
      v8 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v8 = v14;
      }
      v10 = *(_QWORD *)(v8 + 16);
      v9 = *(_QWORD *)(v8 + 24);
      if (v10 >= v9 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
        v8 = v14;
      }
      *(_QWORD *)(v8 + 16) = v10 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v10, v1, v3);
      v14 = v8;
      v7 += v12;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_25();
    return MEMORY[0x1E0DEE9D8];
  }
  return v8;
}

void InCallControlsViewController.participantCount.getter()
{
  InCallControlsViewController.participants.getter();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0();
}

void InCallControlsViewController.update(participant:broadcastingState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  OUTLINED_FUNCTION_93();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  v13 = OUTLINED_FUNCTION_37_36();
  if (*(_QWORD *)(v10 + *(int *)(v13 + 28)))
  {
    v14 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController);
    OUTLINED_FUNCTION_1();
    if (*v14)
    {
      v15 = *v14;
      InCallControlsCollectionViewController.update(participant:broadcastingState:)();

    }
  }
  else
  {
    v16 = v13;
    v24 = v6;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v17 = OUTLINED_FUNCTION_16_9();
    *(_OWORD *)(v17 + 16) = xmmword_1BD6441D0;
    outlined init with copy of ConversationControlsAction(v10, v2, type metadata accessor for Participant);
    __swift_storeEnumTagSinglePayload(v2, 0, 1, v16);
    specialized >> prefix<A>(_:)(v2);
    v19 = v18;
    v21 = v20;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v17 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v17 + 32) = v19;
    *(_QWORD *)(v17 + 40) = v21;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v22 = v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_localParticipant;
    OUTLINED_FUNCTION_2_0();
    outlined assign with copy of Participant(v10, v22);
    swift_endAccess();
    if ((v8 & 0xFFFFFFFFFFFFFCFELL) != 0x7FFFFFCFELL || v4 >= 2u)
    {
      outlined init with copy of ConversationControlsAction(v22, v1, type metadata accessor for Participant.State);
      InCallControlsViewController.updateControls(forLocalParticipantState:broadcastingState:)(v1, v8, v24, v4);
      OUTLINED_FUNCTION_82_6();
    }
  }
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall InCallControlsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::OpaquePointer a1, Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  uint64_t v2;
  id *v5;
  id v6;

  v5 = (id *)(v2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController);
  OUTLINED_FUNCTION_1();
  if (*v5)
  {
    v6 = *v5;
    InCallControlsCollectionViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(a1, isLocalMemberAuthorizedToChangeGroupMembership);

  }
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsViewController.update(participant:isKickingAvailable:)(uint64_t a1)
{
  uint64_t v1;
  id *v2;
  id v3;

  if (*(_QWORD *)(a1 + *(int *)(OUTLINED_FUNCTION_14_2() + 28)))
  {
    v2 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController);
    OUTLINED_FUNCTION_1();
    if (*v2)
    {
      v3 = *v2;
      InCallControlsCollectionViewController.update(participant:isKickingAvailable:)();

    }
  }
  OUTLINED_FUNCTION_9_0();
}

void InCallControlsViewController.update(with:updateReason:)(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  id *v3;
  id v4;
  unsigned __int8 v5[24];

  if (a2[1] == 1)
  {
    v5[0] = *a2 & 1;
    InCallControlsViewController.gridLayoutStyle.setter(v5);
  }
  v3 = (id *)(v2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_collectionViewController);
  OUTLINED_FUNCTION_1();
  if (*v3)
  {
    v4 = *v3;
    InCallControlsCollectionViewController.update(with:updateReason:)();

  }
  OUTLINED_FUNCTION_32();
}

double InCallControlsViewController.spatialPosition(for:relativeTo:)()
{
  return 0.0;
}

void protocol witness for ParticipantsViewController.participantsViewControllerDelegate.getter in conformance InCallControlsViewController()
{
  InCallControlsViewController.participantsViewControllerDelegate.getter();
}

void protocol witness for ParticipantsViewController.participantsViewControllerDelegate.setter in conformance InCallControlsViewController()
{
  InCallControlsViewController.participantsViewControllerDelegate.setter();
}

uint64_t (*protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance InCallControlsViewController(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantsViewControllerDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  v6 = v4 + v5;
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](v6);
  v8 = *(_QWORD *)(v6 + 8);
  v3[3] = v7;
  v3[4] = v8;
  return InCallControlsViewController.delegate.modify;
}

void InCallControlsViewController.delegate.modify(uint64_t a1)
{
  void *v1;
  char v2;

  OUTLINED_FUNCTION_21_60(a1);
  if ((v2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_4_2(v1);
}

uint64_t protocol witness for ParticipantsViewController.participantIdentifiers.getter in conformance InCallControlsViewController()
{
  return InCallControlsViewController.participantIdentifiers.getter();
}

void protocol witness for ParticipantsViewController.participantCount.getter in conformance InCallControlsViewController()
{
  InCallControlsViewController.participantCount.getter();
}

void protocol witness for ParticipantsViewController.update(participant:broadcastingState:) in conformance InCallControlsViewController()
{
  InCallControlsViewController.update(participant:broadcastingState:)();
}

void protocol witness for ParticipantsViewController.update(participant:isKickingAvailable:) in conformance InCallControlsViewController(uint64_t a1)
{
  InCallControlsViewController.update(participant:isKickingAvailable:)(a1);
}

void protocol witness for ParticipantsViewController.update(with:updateReason:) in conformance InCallControlsViewController(uint64_t a1, _BYTE *a2)
{
  InCallControlsViewController.update(with:updateReason:)(a1, a2);
}

void protocol witness for ParticipantsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:) in conformance InCallControlsViewController(Swift::OpaquePointer a1, Swift::Bool a2)
{
  InCallControlsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(a1, a2);
}

void *InCallControlsViewController.menu(for:button:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  char v6;

  InCallControlsViewController.audioButton.getter();
  v4 = (void *)v3;
  if (v3)
  {
    OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for UIView);
    v5 = a2;
    v6 = static NSObject.== infix(_:_:)();

    v4 = 0;
    if ((v6 & 1) != 0)
    {
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_26();
    }
  }
  return v4;
}

uint64_t InCallControlsViewController.isCaptioningEnabled(inCallControlsCollectionViewController:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  char v4;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_delegate;
  OUTLINED_FUNCTION_1();
  if (MEMORY[0x1C3B752C0](v1))
  {
    v2 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 8))(v0, ObjectType, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

void InCallControlsViewController.inCallControlsCollectionViewController(_:didTap:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;

  v4 = OUTLINED_FUNCTION_33_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  type metadata accessor for InCallControlsCollectionViewController.Action(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  outlined init with copy of ConversationControlsAction(a2, v2, v6);
  v7 = (char *)sub_1BD2D6D2C + 4 * byte_1BD656802[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1BD2D6D2C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_73_13(0);
  outlined destroy of AccountUpdateNotice(v0, type metadata accessor for InCallControlsCollectionViewController.Action);
}

uint64_t InCallControlsViewController.didTapBuzz(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
  v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, a1, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  specialized >> prefix<A>(_:)((uint64_t)v5);
  v9 = v8;
  v11 = v10;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 40) = v11;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v12 = v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantDelegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v12);
  if (result)
  {
    v14 = *(_QWORD *)(v12 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v1, a1, ObjectType, v14);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t InCallControlsViewController.didTapApprove(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
  v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, a1, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  specialized >> prefix<A>(_:)((uint64_t)v5);
  v9 = v8;
  v11 = v10;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 40) = v11;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v12 = v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantDelegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v12);
  if (result)
  {
    v14 = *(_QWORD *)(v12 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16))(v1, a1, ObjectType, v14);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t InCallControlsViewController.didTapDismiss(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
  v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, a1, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  specialized >> prefix<A>(_:)((uint64_t)v5);
  v9 = v8;
  v11 = v10;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 40) = v11;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v12 = v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantDelegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v12);
  if (result)
  {
    v14 = *(_QWORD *)(v12 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 24))(v1, a1, ObjectType, v14);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t InCallControlsViewController.didTapKick(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
  v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, a1, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  specialized >> prefix<A>(_:)((uint64_t)v5);
  v9 = v8;
  v11 = v10;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 40) = v11;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v12 = v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantDelegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v12);
  if (result)
  {
    v14 = *(_QWORD *)(v12 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 32))(v1, a1, ObjectType, v14);
    return swift_unknownObjectRelease();
  }
  return result;
}

void InCallControlsViewController.videoButtonIsEnabled.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  OUTLINED_FUNCTION_1();
  if (*v1)
    objc_msgSend(*(id *)(v1[2] + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_toggleCameraButton), sel_isEnabled);
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.videoButtonIsEnabled.setter(char a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_viewContent);
  OUTLINED_FUNCTION_1();
  if (*v3)
    objc_msgSend(*(id *)(v3[2] + OBJC_IVAR____TtC15ConversationKit18InCallControlsView_toggleCameraButton), sel_setEnabled_, a1 & 1);
  OUTLINED_FUNCTION_32();
}

void InCallControlsViewController.videoButtonIsEnabled.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  InCallControlsViewController.videoButtonIsEnabled.getter();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_0();
}

{
  InCallControlsViewController.videoButtonIsEnabled.setter(*(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_0();
}

void outlined consume of InCallControlsViewController.ViewContent?(void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, void *a7)
{
  if (a1)
  {

    swift_bridgeObjectRelease();
  }
}

id @nonobjc TUMutableRoute.init(uniqueIdentifier:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  v7 = (void *)MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_53();
  v8 = (void *)MEMORY[0x1C3B72E00](a3, a4);
  OUTLINED_FUNCTION_13_3();
  v9 = objc_msgSend(v4, sel_initWithUniqueIdentifier_name_, v7, v8);

  return v9;
}

unint64_t lazy protocol witness table accessor for type Participant.VideoProviderType and conformance Participant.VideoProviderType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Participant.VideoProviderType and conformance Participant.VideoProviderType;
  if (!lazy protocol witness table cache variable for type Participant.VideoProviderType and conformance Participant.VideoProviderType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Participant.VideoProviderType, &type metadata for Participant.VideoProviderType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant.VideoProviderType and conformance Participant.VideoProviderType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Participant.VideoProviderType and conformance Participant.VideoProviderType;
  if (!lazy protocol witness table cache variable for type Participant.VideoProviderType and conformance Participant.VideoProviderType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for Participant.VideoProviderType, &type metadata for Participant.VideoProviderType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Participant.VideoProviderType and conformance Participant.VideoProviderType);
  }
  return result;
}

void sub_1BD2D77EC(char *a1)
{
  InCallControlsViewController.mode.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D7818(double *a1)
{
  InCallControlsViewController.topInset.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D783C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  InCallControlsViewController.isExpanded.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D785C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  InCallControlsViewController.audioIsEnabled.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D787C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  InCallControlsViewController.videoIsEnabled.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D789C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  InCallControlsViewController.isScreenSharing.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D78BC(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  InCallControlsViewController.cinematicFramingIsAvailable.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D78DC(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  InCallControlsViewController.cinematicFramingIsEnabled.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D78FC(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  InCallControlsViewController.effectsAreAvailable.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D791C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  InCallControlsViewController.effectsAreEnabled.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D793C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  InCallControlsViewController.shouldShowLeaveButton.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D7958(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  key path getter for InCallControlsViewController.delegate : InCallControlsViewController(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_delegate, a2);
}

void sub_1BD2D7974(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_delegate);
}

void sub_1BD2D7990(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  key path getter for InCallControlsViewController.delegate : InCallControlsViewController(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantDelegate, a2);
}

void sub_1BD2D79AC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantDelegate);
}

void sub_1BD2D79C8(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  key path getter for InCallControlsViewController.delegate : InCallControlsViewController(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantsViewControllerDelegate, a2);
}

void sub_1BD2D79E4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantsViewControllerDelegate);
}

void sub_1BD2D7A00(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  key path getter for InCallControlsViewController.delegate : InCallControlsViewController(a1, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_menuHostViewController, a2);
}

void sub_1BD2D7A1C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_menuHostViewController);
}

void sub_1BD2D7A38(_BYTE *a1@<X8>)
{
  char v2;

  InCallControlsViewController.videoButtonIsEnabled.getter();
  *a1 = v2 & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD2D7A60(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  InCallControlsViewController.videoButtonIsEnabled.setter(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for InCallControlsViewController()
{
  return type metadata accessor for InCallControlsViewController();
}

uint64_t type metadata accessor for InCallControlsViewController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for InCallControlsViewController;
  if (!type metadata singleton initialization cache for InCallControlsViewController)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for InCallControlsViewController()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Participant(319);
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for InCallControlsViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsViewController.__allocating_init(localParticipant:remoteParticipants:mode:gridLayoutStyle:representedLegacyCallIdentifier:isLocalMemberAuthorizedToChangeGroupMembership:isLinkSharingSupported:menuHostViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

void destroy for InCallControlsViewController.ViewContent(id *a1)
{

  swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for InCallControlsViewController.ViewContent(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(void **)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v7;
  v8 = *(void **)(a2 + 48);
  a1[6] = v8;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  swift_bridgeObjectRetain();
  v13 = v7;
  v14 = v8;
  return a1;
}

uint64_t assignWithCopy for InCallControlsViewController.ViewContent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = *(void **)(a1 + 40);
  v17 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v17;
  v18 = v17;

  v19 = *(void **)(a1 + 48);
  v20 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v20;
  v21 = v20;

  return a1;
}

uint64_t assignWithTake for InCallControlsViewController.ViewContent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  return a1;
}

void *type metadata accessor for InCallControlsViewController.ViewContent()
{
  return &unk_1E762B498;
}

uint64_t sub_1BD2D7DB8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in InCallControlsViewController.didTapEffectsButton(_:)(char a1)
{
  uint64_t v1;

  closure #1 in InCallControlsViewController.didTapEffectsButton(_:)(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BD2D7DE4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in InCallControlsViewController.cinematicFramingIsEnabled.didset()
{
  closure #1 in InCallControlsViewController.cinematicFramingIsAvailable.didset();
}

void OUTLINED_FUNCTION_85_13(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_89_13(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return Notification.object.getter();
}

uint64_t OUTLINED_FUNCTION_99_7()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

id OUTLINED_FUNCTION_102_9(objc_super *a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSendSuper2(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_111_6()
{
  return swift_unknownObjectRelease();
}

id CNComposeRecipient.messagesChatGUID.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;

  if (!objc_msgSend(v0, sel_isGroup))
    return 0;
  result = objc_msgSend(v0, sel_autocompleteResult);
  if (!result)
    return result;
  v2 = result;
  v3 = objc_msgSend(result, sel_psSuggestion);

  if (v3)
    return (id)outlined bridged method (ob) of @objc _PSSuggestion.messagesGroupIdentifier.getter(v3, (SEL *)&selRef_conversationIdentifier);
  else
    return 0;
}

uint64_t CNComposeRecipient.messagesGroupUUID.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  if (objc_msgSend(v1, sel_isGroup)
    && (v3 = objc_msgSend(v1, sel_autocompleteResult)) != 0
    && (v4 = v3, v5 = objc_msgSend(v3, sel_psSuggestion), v4, v5)
    && (outlined bridged method (ob) of @objc _PSSuggestion.messagesGroupIdentifier.getter(v5, (SEL *)&selRef_messagesGroupIdentifier), v6))
  {
    UUID.init(uuidString:)();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v8 = type metadata accessor for UUID();
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v8);
  }
}

uint64_t outlined bridged method (ob) of @objc _PSSuggestion.messagesGroupIdentifier.getter(void *a1, SEL *a2)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(a1, *a2);

  if (!v3)
    return 0;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t dispatch thunk of InCallControlsViewControllerDelegate.isCaptioningEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of InCallControlsViewControllerDelegate.inCallControlsViewController(_:didTap:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of InCallControlsViewControllerDelegate.didCreateCollectionViewForInCallControlsViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of InCallControlsViewControllerDelegate.audioRouteMenu()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InCallControlsViewControllerDelegate.audioRouteGlyph(for:buttonStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of InCallControlsViewControllerDelegate.inCallControlsViewController(_:didAdd:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

id @nonobjc UIView.isHidden.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isHidden);
}

id @nonobjc UIView.isHidden.setter(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setHidden_, a1 & 1);
}

double CallControlsStatusView.LeadingView.size.getter()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 32))
    return *(double *)(v0 + 8);
  if (*(_BYTE *)(v0 + 32) == 1)
    return *(double *)(v0 + 16);
  return 72.0;
}

id CallControlsStatusView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id CallControlsStatusView.init(frame:)()
{
  uint64_t v0;
  uint64_t ObjectType;
  double v2;
  objc_super *v3;
  SEL v4;
  id v5;
  uint64_t v7;

  OUTLINED_FUNCTION_17_7();
  ObjectType = swift_getObjectType();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___container) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainerWidthConstraint) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainerHeightConstraint) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainer) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView_customView) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageViewWidthConstraint) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageViewHeightConstraint) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageView) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___labelContainer) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___titleLabel) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___subtitleLabel) = 0;
  v7 = ObjectType;
  v2 = OUTLINED_FUNCTION_15_0();
  v5 = objc_msgSendSuper2(v3, v4, v2, v0, v7);
  CallControlsStatusView.build()();

  return v5;
}

void CallControlsStatusView.build()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  unint64_t v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  Class isa;
  unint64_t v52;

  v1 = v0;
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD644140;
  CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___container, (uint64_t (*)(uint64_t))closure #1 in CallControlsStatusView.container.getter);
  v4 = v3;
  v5 = objc_msgSend(v3, sel_topAnchor);

  v6 = objc_msgSend(v1, sel_topAnchor);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(_QWORD *)(v2 + 32) = v7;
  CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___container, (uint64_t (*)(uint64_t))closure #1 in CallControlsStatusView.container.getter);
  v9 = v8;
  v10 = objc_msgSend(v8, sel_bottomAnchor);

  v11 = objc_msgSend(v1, sel_bottomAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(_QWORD *)(v2 + 40) = v12;
  CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___container, (uint64_t (*)(uint64_t))closure #1 in CallControlsStatusView.container.getter);
  v14 = v13;
  v15 = objc_msgSend(v13, sel_leadingAnchor);

  v16 = objc_msgSend(v1, sel_leadingAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v2 + 48) = v17;
  CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___container, (uint64_t (*)(uint64_t))closure #1 in CallControlsStatusView.container.getter);
  v19 = v18;
  v20 = objc_msgSend(v18, sel_trailingAnchor);

  v21 = objc_msgSend(v1, sel_trailingAnchor);
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(_QWORD *)(v2 + 56) = v22;
  v52 = v2;
  specialized Array._endMutation()();
  v23 = v2;
  CallControlsStatusView.leadingContainerWidthConstraint.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainerWidthConstraint, &selRef_widthAnchor);
  v25 = v24;
  CallControlsStatusView.leadingContainerWidthConstraint.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainerHeightConstraint, &selRef_heightAnchor);
  v27 = v26;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v28, 2))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v28 + 2, 1);
    specialized Array._endMutation()();
    v25 = v25;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_5;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_5:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v29 = v27;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageView, (uint64_t (*)(uint64_t))closure #1 in CallControlsStatusView.imageView.getter);
  v31 = v30;
  v32 = objc_msgSend(v30, sel_centerXAnchor);

  v33 = CallControlsStatusView.leadingContainer.getter();
  v34 = objc_msgSend(v33, sel_centerXAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v34);
  CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageView, (uint64_t (*)(uint64_t))closure #1 in CallControlsStatusView.imageView.getter);
  v37 = v36;
  v38 = objc_msgSend(v36, sel_centerYAnchor);

  v39 = CallControlsStatusView.leadingContainer.getter();
  v40 = objc_msgSend(v39, sel_centerYAnchor);

  v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v40);
  CallControlsStatusView.imageViewHeightConstraint.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageViewWidthConstraint, &selRef_widthAnchor);
  v43 = v42;
  CallControlsStatusView.imageViewHeightConstraint.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageViewHeightConstraint, &selRef_heightAnchor);
  v45 = v44;
  if (v52 >> 62)
  {
    swift_bridgeObjectRetain();
    v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v46, 4))
  {
    __break(1u);
  }
  else
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v46 + 4, 1);
    specialized Array._endMutation()();
    v35 = v35;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_11;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_11:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v47 = v41;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v48 = v43;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v49 = v45;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  v50 = (void *)objc_opt_self();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_activateConstraints_, isa);

}

id CallControlsStatusView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CallControlsStatusView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___container] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainerWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainerHeightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView_customView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageViewWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageViewHeightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___labelContainer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___subtitleLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall CallControlsStatusView.set(title:subtitle:)(NSAttributedString_optional title, NSAttributedString_optional subtitle)
{
  uint64_t v2;
  Class isa;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v2 = *(_QWORD *)&title.is_nil;
  isa = title.value.super.isa;
  OUTLINED_FUNCTION_1_114();
  v5 = v4;
  objc_msgSend(v4, sel_setAttributedText_, isa);

  OUTLINED_FUNCTION_1_114();
  v7 = v6;
  objc_msgSend(v6, sel_setHidden_, isa == 0);

  OUTLINED_FUNCTION_3_97();
  v9 = v8;
  OUTLINED_FUNCTION_65(v8, sel_setAttributedText_);

  OUTLINED_FUNCTION_3_97();
  v11 = v10;
  objc_msgSend(v10, sel_setHidden_, v2 == 0);

}

void CallControlsStatusView.titleLabel.getter(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(v2 + *a1);
  if (!v3)
  {
    closure #1 in CallControlsStatusView.titleLabel.getter(a2);
    OUTLINED_FUNCTION_17_3(v4);
    OUTLINED_FUNCTION_134();
    v3 = 0;
  }
  v5 = v3;
  OUTLINED_FUNCTION_18();
}

void CallControlsStatusView.set(leadingView:)(uint64_t a1)
{
  void *v1;
  double v2;
  double v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;

  v1 = *(void **)a1;
  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  CallControlsStatusView.leadingContainerWidthConstraint.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainerWidthConstraint, &selRef_widthAnchor);
  v6 = v5;
  OUTLINED_FUNCTION_7_90();

  CallControlsStatusView.leadingContainerWidthConstraint.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainerHeightConstraint, &selRef_heightAnchor);
  v8 = v7;
  OUTLINED_FUNCTION_7_90();

  v9 = CallControlsStatusView.leadingContainer.getter();
  OUTLINED_FUNCTION_10_84(v9);

  CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageView, (uint64_t (*)(uint64_t))closure #1 in CallControlsStatusView.imageView.getter);
  v11 = v10;
  OUTLINED_FUNCTION_10_84(v10);

  if (!v4)
  {
    v26 = v1;
    CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageView, (uint64_t (*)(uint64_t))closure #1 in CallControlsStatusView.imageView.getter);
    v28 = v27;
    OUTLINED_FUNCTION_40_3(v27, sel_setHidden_);

    v29 = v26;
    CallControlsStatusView.customView.setter(v1);
    v21 = (void *)OUTLINED_FUNCTION_11_74();
    v25 = 0;
    goto LABEL_5;
  }
  if (v4 == 1)
  {
    v12 = v1;
    CallControlsStatusView.customView.setter(0);
    OUTLINED_FUNCTION_13_75();
    v14 = v13;
    OUTLINED_FUNCTION_65(v13, sel_setContentMode_);

    OUTLINED_FUNCTION_13_75();
    v16 = v15;
    objc_msgSend(v15, sel_setImage_, v12);

    CallControlsStatusView.imageViewHeightConstraint.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageViewWidthConstraint, &selRef_widthAnchor);
    v18 = v17;
    objc_msgSend(v17, sel_setConstant_, v2);

    CallControlsStatusView.imageViewHeightConstraint.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageViewHeightConstraint, &selRef_heightAnchor);
    v20 = v19;
    objc_msgSend(v19, sel_setConstant_, v3);

    v21 = (void *)OUTLINED_FUNCTION_11_74();
    v25 = 1;
LABEL_5:
    outlined consume of CallControlsStatusView.LeadingView(v21, v22, v23, v24, v25);
    return;
  }
  CallControlsStatusView.customView.setter(0);
  v30 = CallControlsStatusView.leadingContainer.getter();
  OUTLINED_FUNCTION_40_3(v30, sel_setHidden_);

}

void CallControlsStatusView.leadingContainerWidthConstraint.getter(_QWORD *a1, void *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v6;
  id v7;
  id v8;
  id v9;

  v4 = *(void **)(v2 + *a1);
  if (!v4)
  {
    v6 = CallControlsStatusView.leadingContainer.getter();
    v7 = OUTLINED_FUNCTION_14_80(v6);
    OUTLINED_FUNCTION_134();
    v8 = objc_msgSend(a2, sel_constraintEqualToConstant_, 72.0);

    OUTLINED_FUNCTION_12_74();
    v4 = 0;
  }
  v9 = v4;
  OUTLINED_FUNCTION_91();
}

id CallControlsStatusView.leadingContainer.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainer);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___leadingContainer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void CallControlsStatusView.customView.setter(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView_customView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView_customView) = a1;
  v3 = a1;
  objc_msgSend(v2, sel_removeFromSuperview);
  CallControlsStatusView.buildCustomView()();

}

void CallControlsStatusView.imageViewHeightConstraint.getter(_QWORD *a1, void *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v6;
  id v7;
  id v8;
  id v9;

  v4 = *(void **)(v2 + *a1);
  if (!v4)
  {
    CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___imageView, (uint64_t (*)(uint64_t))closure #1 in CallControlsStatusView.imageView.getter);
    v7 = OUTLINED_FUNCTION_14_80(v6);
    OUTLINED_FUNCTION_134();
    v8 = objc_msgSend(a2, sel_constraintEqualToConstant_, 26.0);

    OUTLINED_FUNCTION_12_74();
    v4 = 0;
  }
  v9 = v4;
  OUTLINED_FUNCTION_91();
}

void outlined consume of CallControlsStatusView.LeadingView(id a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 1u)

}

void *closure #1 in CallControlsStatusView.container.getter(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  UIStackView *v4;
  void *v5;
  void *v6;

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIStackView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v2 + 32) = CallControlsStatusView.leadingContainer.getter();
  CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___labelContainer, (uint64_t (*)(uint64_t))closure #1 in CallControlsStatusView.labelContainer.getter);
  *(_QWORD *)(v2 + 40) = v3;
  specialized Array._endMutation()();
  UIStackView.__allocating_init(arrangedSubviews:)(v4, (Swift::OpaquePointer)v2);
  v6 = v5;
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v6, sel_setSpacing_, 8.0);
  objc_msgSend(v6, sel_setAxis_, 0);
  objc_msgSend(v6, sel_setAlignment_, 3);
  objc_msgSend(a1, sel_addSubview_, v6);
  return v6;
}

void CallControlsStatusView.imageView.getter(_QWORD *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(v2 + *a1);
  if (!v3)
  {
    v4 = (void *)a2(v2);
    OUTLINED_FUNCTION_17_3(v4);
    OUTLINED_FUNCTION_134();
    v3 = 0;
  }
  v5 = v3;
  OUTLINED_FUNCTION_18();
}

void CallControlsStatusView.buildCustomView()()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  Class isa;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView_customView);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v3 = CallControlsStatusView.leadingContainer.getter();
    objc_msgSend(v3, sel_addSubview_, v2);

    v4 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BD644140;
    v6 = objc_msgSend(v2, sel_topAnchor);
    v7 = CallControlsStatusView.leadingContainer.getter();
    v8 = objc_msgSend(v7, sel_topAnchor);

    v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
    *(_QWORD *)(v5 + 32) = v9;
    v10 = objc_msgSend(v2, sel_leadingAnchor);
    v11 = CallControlsStatusView.leadingContainer.getter();
    v12 = objc_msgSend(v11, sel_leadingAnchor);

    v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
    *(_QWORD *)(v5 + 40) = v13;
    v14 = objc_msgSend(v2, sel_trailingAnchor);
    v15 = CallControlsStatusView.leadingContainer.getter();
    v16 = objc_msgSend(v15, sel_trailingAnchor);

    v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
    *(_QWORD *)(v5 + 48) = v17;
    v18 = objc_msgSend(v2, sel_bottomAnchor);
    v19 = CallControlsStatusView.leadingContainer.getter();
    v20 = objc_msgSend(v19, sel_bottomAnchor);

    v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
    *(_QWORD *)(v5 + 56) = v21;
    specialized Array._endMutation()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_activateConstraints_, isa);

  }
}

id closure #1 in CallControlsStatusView.imageView.getter()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setContentMode_, 4);
  v1 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTintColor_, v1);

  v2 = CallControlsStatusView.leadingContainer.getter();
  objc_msgSend(v2, sel_addSubview_, v0);

  return v0;
}

void *closure #1 in CallControlsStatusView.labelContainer.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  UIStackView *v3;
  void *v4;
  void *v5;

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIStackView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BD6441C0;
  CallControlsStatusView.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___titleLabel, MEMORY[0x1E0DC4B50]);
  *(_QWORD *)(v0 + 32) = v1;
  CallControlsStatusView.titleLabel.getter(&OBJC_IVAR____TtC15ConversationKit22CallControlsStatusView____lazy_storage___subtitleLabel, MEMORY[0x1E0DC4B60]);
  *(_QWORD *)(v0 + 40) = v2;
  specialized Array._endMutation()();
  UIStackView.__allocating_init(arrangedSubviews:)(v3, (Swift::OpaquePointer)v0);
  v5 = v4;
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_setSpacing_, 8.0);
  objc_msgSend(v5, sel_setAxis_, 1);
  objc_msgSend(v5, sel_setAlignment_, 1);
  return v5;
}

void closure #1 in CallControlsStatusView.titleLabel.getter(uint64_t *a1)
{
  id v2;
  UILabel *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  UIColor_optional v8;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UILabel);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
  v2 = static UIFont.preferredFont(textStyle:weight:maximumPointSize:)(*a1, 0, 1);
  v8.value.super.isa = 0;
  UILabel.init(font:textColor:)(v3, (UIFont)v2, v8);
  v5 = v4;
  OUTLINED_FUNCTION_40_3(v4, sel_setAdjustsFontForContentSizeCategory_);
  v6 = (void *)objc_opt_self();
  v7 = OUTLINED_FUNCTION_14_80(v6);
  OUTLINED_FUNCTION_65(v5, sel_setTextColor_);

  OUTLINED_FUNCTION_40_3(v5, sel__setWantsContentAwareTypesettingLanguage_);
  OUTLINED_FUNCTION_18();
}

id CallControlsStatusView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CallControlsStatusView()
{
  return objc_opt_self();
}

id outlined copy of CallControlsStatusView.LeadingView(id result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 1u)
    return result;
  return result;
}

void destroy for CallControlsStatusView.LeadingView(uint64_t a1)
{
  outlined consume of CallControlsStatusView.LeadingView(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for CallControlsStatusView.LeadingView(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  outlined copy of CallControlsStatusView.LeadingView(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for CallControlsStatusView.LeadingView(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  outlined copy of CallControlsStatusView.LeadingView(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  outlined consume of CallControlsStatusView.LeadingView(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for CallControlsStatusView.LeadingView(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  outlined consume of CallControlsStatusView.LeadingView(v4, v6, v5, v7, v9);
  return a1;
}

ValueMetadata *type metadata accessor for CallControlsStatusView.LeadingView()
{
  return &type metadata for CallControlsStatusView.LeadingView;
}

uint64_t ConversationHUDMenuController.__allocating_init()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_0_114();
  return v0;
}

uint64_t *ConversationHUDMenuController.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static ConversationHUDMenuController.shared;
}

uint64_t static ConversationHUDMenuController.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

uint64_t key path setter for ConversationHUDMenuController.activeMenuButtonProvider : ConversationHUDMenuController(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 96);
  v3 = swift_retain();
  return v2(v3);
}

void ConversationHUDMenuController.activeMenuButtonProvider.didset()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)&static Logger.conversationControls);
  swift_retain_n();
  v1 = Logger.logObject.getter();
  v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      type metadata accessor for ConversationControlsMenuButtonProvider();
      v5 = String.init<A>(reflecting:)();
      v7 = v6;
    }
    else
    {
      v7 = 0xE300000000000000;
      v5 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v7, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v1, v2, "activeMenuButtonProvider: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v4, -1, -1);
    MEMORY[0x1C3B751B8](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t ConversationHUDMenuController.activeMenuButtonProvider.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_weakLoadStrong();
}

uint64_t ConversationHUDMenuController.activeMenuButtonProvider.setter()
{
  OUTLINED_FUNCTION_2_0();
  swift_weakAssign();
  ConversationHUDMenuController.activeMenuButtonProvider.didset();
  return swift_release();
}

void (*ConversationHUDMenuController.activeMenuButtonProvider.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  OUTLINED_FUNCTION_2_0();
  v3[3] = swift_weakLoadStrong();
  return ConversationHUDMenuController.activeMenuButtonProvider.modify;
}

void ConversationHUDMenuController.activeMenuButtonProvider.modify(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_weakAssign();
  if ((a2 & 1) != 0)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
    ConversationHUDMenuController.activeMenuButtonProvider.didset();
  }
  free(v3);
}

uint64_t ConversationHUDMenuController.deinit()
{
  uint64_t v0;

  swift_weakDestroy();
  return v0;
}

uint64_t ConversationHUDMenuController.__deallocating_deinit()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t ConversationHUDMenuController.init()()
{
  uint64_t v0;

  swift_weakInit();
  return v0;
}

uint64_t sub_1BD2D9DE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 88))();
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for ConversationHUDMenuController()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationHUDMenuController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationHUDMenuController.activeMenuButtonProvider.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of ConversationHUDMenuController.activeMenuButtonProvider.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ConversationHUDMenuController.activeMenuButtonProvider.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ConversationHUDMenuController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

BOOL CNKDeviceOrientation.isPortrait.getter(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFDLL) == 1;
}

BOOL CNKDeviceOrientation.isLandscape.getter(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFDLL) == 0;
}

uint64_t CNKDeviceOrientation.uiDeviceOrientation.getter(unint64_t a1)
{
  if (a1 > 3)
    return 1;
  else
    return qword_1BD656A58[a1];
}

uint64_t CNKDeviceOrientation.toggled.getter(uint64_t a1)
{
  if ((a1 & 0xFFFFFFFFFFFFFFFDLL) == 1)
    return 2;
  else
    return 1;
}

unint64_t CNKDeviceOrientation.debugDescription.getter(uint64_t a1)
{
  unint64_t result;

  result = 0x616373646E616C2ELL;
  switch(a1)
  {
    case 0:
    case 2:
      return result;
    case 1:
      result = 0x69617274726F702ELL;
      break;
    case 3:
      result = 0xD000000000000013;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

unint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CNKDeviceOrientation()
{
  uint64_t *v0;

  return CNKDeviceOrientation.debugDescription.getter(*v0);
}

uint64_t CNKSupportedDeviceOrientations.debugDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 1819042094;
  v2 = 0x6E776F6E6B6E75;
  if (a1 == 1)
    v2 = 0x616373646E616C2ELL;
  if (a1 != 2)
    v1 = v2;
  if (a1)
    return v1;
  else
    return 0x69617274726F702ELL;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CNKSupportedDeviceOrientations()
{
  uint64_t *v0;

  return CNKSupportedDeviceOrientations.debugDescription.getter(*v0);
}

uint64_t IconMenu.content.getter(uint64_t a1, uint64_t a2)
{
  swift_retain();
  return a2;
}

void IconMenu.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>);
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image> and conformance <> _ConditionalContent<A, B>();
  OUTLINED_FUNCTION_11_75();
  type metadata accessor for Menu();
  type metadata accessor for ButtonMenuStyle();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD2DA0AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v6;

  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonMenuStyle and conformance ButtonMenuStyle, v3);
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v6;
  OUTLINED_FUNCTION_11_75();
  OUTLINED_FUNCTION_4_104();
}

void sub_1BD2DA0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = type metadata accessor for IconMenuButtonStyle(255, v6, a3, a4);
  *(_QWORD *)(v9 - 120) = v4;
  *(_QWORD *)(v9 - 112) = v5;
  *(_QWORD *)(v9 - 104) = v8;
  *(_QWORD *)(v9 - 96) = v7;
  v12 = OUTLINED_FUNCTION_7_18();
  v13 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for IconMenuButtonStyle<A>, v11);
  *(_QWORD *)(v9 - 120) = a1;
  *(_QWORD *)(v9 - 112) = v11;
  *(_QWORD *)(v9 - 104) = v12;
  *(_QWORD *)(v9 - 96) = v13;
  OUTLINED_FUNCTION_11_75();
  OUTLINED_FUNCTION_4_104();
}

void sub_1BD2DA13C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  OUTLINED_FUNCTION_0_115();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD2DA17C()
{
  OUTLINED_FUNCTION_6_78();
  OUTLINED_FUNCTION_0_115();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  type metadata accessor for _ConditionalContent();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD2DA1DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = MEMORY[0x1E0CDA228];
  *(_QWORD *)(v1 - 136) = a1;
  *(_QWORD *)(v1 - 128) = v2;
  OUTLINED_FUNCTION_8_81();
}

void sub_1BD2DA1FC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, v1);
  *(_QWORD *)(v5 - 152) = a1;
  *(_QWORD *)(v5 - 144) = v7;
  *(_QWORD *)(v5 - 168) = MEMORY[0x1C3B750C8](v3, v2, v5 - 152);
  *(_QWORD *)(v5 - 160) = a1;
  v8 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v4, v5 - 168);
  *(_QWORD *)(v5 - 120) = v4;
  *(_QWORD *)(v5 - 112) = v8;
  OUTLINED_FUNCTION_11_75();
  OUTLINED_FUNCTION_4_104();
}

uint64_t sub_1BD2DA264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t);
  _BYTE v16[96];

  v5 = type metadata accessor for ModifiedContent();
  v6 = type metadata accessor for _ConditionalContent();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v16[-v11];
  IconMenu.menuWithAccessbilityLabel()(*(_QWORD *)(v4 - 232), *(_QWORD *)(v4 - 224), *(_QWORD *)(v4 - 216), *(_QWORD *)(v4 - 256), *(_QWORD *)(v4 - 240), *(_QWORD *)(v4 - 248), (uint64_t)v10);
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 184) = OUTLINED_FUNCTION_7_18();
  *(_QWORD *)(v4 - 176) = v0;
  *(_QWORD *)(v4 - 200) = MEMORY[0x1C3B750C8](v2, v5, v4 - 184);
  *(_QWORD *)(v4 - 192) = v1;
  v13 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v6, v4 - 200);
  static ViewBuilder.buildExpression<A>(_:)(v10, v6, v13);
  v14 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v14(v10, v6);
  static ViewBuilder.buildBlock<A>(_:)((uint64_t)v12, v6, *(_QWORD *)(v4 - 208));
  return ((uint64_t (*)(_BYTE *, uint64_t))v14)(v12, v6);
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CDF820];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Image.Scale> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
    v3[0] = MEMORY[0x1E0CDF820];
    v3[1] = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t type metadata accessor for IconMenuButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IconMenuButtonStyle);
}

uint64_t IconMenu.menuWithAccessbilityLabel()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[4];
  _QWORD v87[2];
  _QWORD v88[2];
  _QWORD v89[2];
  _QWORD v90[2];
  _QWORD v91[2];
  _QWORD v92[2];
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;

  v81 = a3;
  v80 = a2;
  v85 = a7;
  v73 = type metadata accessor for AccessibilityChildBehavior();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v71 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>);
  v13 = lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image> and conformance <> _ConditionalContent<A, B>();
  v93 = v12;
  v94 = a5;
  v83 = a5;
  v95 = v13;
  v96 = a6;
  v84 = a6;
  v14 = type metadata accessor for Menu();
  v15 = type metadata accessor for ButtonMenuStyle();
  v16 = (void (*)(uint64_t))MEMORY[0x1E0CD9860];
  v17 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDD990], v14);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonMenuStyle and conformance ButtonMenuStyle, v16);
  v19 = v18;
  v93 = v14;
  v94 = v15;
  v95 = v17;
  v96 = v18;
  v20 = MEMORY[0x1C3B75050](255, &v93, MEMORY[0x1E0CDF2E8], 0);
  v82 = a4;
  v23 = type metadata accessor for IconMenuButtonStyle(255, a4, v21, v22);
  v93 = v14;
  v94 = v15;
  v95 = v17;
  v96 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v25 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for IconMenuButtonStyle<A>, v23);
  v93 = v20;
  v94 = v23;
  v95 = OpaqueTypeConformance2;
  v96 = v25;
  MEMORY[0x1C3B75050](255, &v93, MEMORY[0x1E0CDE000], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  swift_getTupleTypeMetadata2();
  v26 = type metadata accessor for TupleView();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v26);
  v27 = type metadata accessor for VStack();
  v28 = type metadata accessor for ModifiedContent();
  type metadata accessor for AccessibilityAttachmentModifier();
  v29 = (void (*)(uint64_t))MEMORY[0x1E0CDCFD0];
  v30 = type metadata accessor for ModifiedContent();
  v31 = type metadata accessor for _ConditionalContent();
  v74 = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x1E0C80A78](v31);
  v67 = (uint64_t)&v67 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v75 = (uint64_t)&v67 - v34;
  v92[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v27);
  v92[1] = MEMORY[0x1E0CDA228];
  v35 = MEMORY[0x1E0CD9C20];
  v36 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v28, v92);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, v29);
  v91[0] = v36;
  v91[1] = v37;
  v79 = v37;
  v90[0] = MEMORY[0x1C3B750C8](v35, v30, v91);
  v90[1] = v36;
  v38 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v31, v90);
  v93 = v31;
  v94 = v38;
  v39 = MEMORY[0x1C3B75050](0, &v93, MEMORY[0x1E0CDEA98], 0);
  v68 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v67 - v40;
  v42 = a1;
  v43 = type metadata accessor for ModifiedContent();
  v69 = *(_QWORD *)(v43 - 8);
  v44 = MEMORY[0x1E0C80A78](v43);
  v46 = (char *)&v67 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v44);
  v70 = (char *)&v67 - v47;
  v78 = type metadata accessor for _ConditionalContent();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v76 = (char *)&v67 - v48;
  IconButtonConfig.accessibilityLabel.getter();
  if (v50)
  {
    v51 = v49;
    v52 = v50;
    v53 = v75;
    IconMenu.menuWithAccessbilityIdentifier()(v42, v80, v81, v82, v83, v84, v75);
    v54 = v71;
    static AccessibilityChildBehavior.combine.getter();
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v54, v73);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v53, v31);
    v93 = v51;
    v94 = v52;
    v86[2] = v31;
    v86[3] = v38;
    v55 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type String and conformance String();
    View.accessibilityLabel<A>(_:)();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v41, v39);
    swift_bridgeObjectRelease();
    v56 = v79;
    v86[0] = v55;
    v86[1] = v79;
    v57 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v43, v86);
    v58 = (uint64_t)v70;
    static ViewBuilder.buildExpression<A>(_:)(v46, v43, v57);
    v59 = *(void (**)(char *, uint64_t))(v69 + 8);
    v59(v46, v43);
    static ViewBuilder.buildBlock<A>(_:)(v58, v43, (uint64_t)v46);
    v60 = (uint64_t)v76;
    static ViewBuilder.buildEither<A, B>(first:)();
    v59(v46, v43);
    v59((char *)v58, v43);
  }
  else
  {
    v61 = v67;
    IconMenu.menuWithAccessbilityIdentifier()(a1, v80, v81, v82, v83, v84, v67);
    v62 = v75;
    static ViewBuilder.buildExpression<A>(_:)(v61, v31, v38);
    v63 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    v63(v61, v31);
    static ViewBuilder.buildBlock<A>(_:)(v62, v31, v61);
    v93 = v31;
    v94 = v38;
    v64 = swift_getOpaqueTypeConformance2();
    v56 = v79;
    v89[0] = v64;
    v89[1] = v79;
    MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v43, v89);
    v60 = (uint64_t)v76;
    static ViewBuilder.buildEither<A, B>(second:)();
    v63(v61, v31);
    v63(v62, v31);
  }
  v93 = v31;
  v94 = v38;
  v88[0] = swift_getOpaqueTypeConformance2();
  v88[1] = v56;
  v87[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v43, v88);
  v87[1] = v38;
  v65 = v78;
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v78, v87);
  static ViewBuilder.buildBlock<A>(_:)(v60, v65, v85);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 8))(v60, v65);
}

uint64_t associated type witness table accessor for View.Body : View in IconMenu<A, B>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t IconMenu.menuWithAccessbilityIdentifier()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[2];
  _QWORD v73[2];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v59 = a3;
  v58 = a2;
  v56 = a1;
  v65 = a7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>);
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image> and conformance <> _ConditionalContent<A, B>();
  v61 = a5;
  v62 = a6;
  v10 = type metadata accessor for Menu();
  v11 = type metadata accessor for ButtonMenuStyle();
  v12 = (void (*)(uint64_t))MEMORY[0x1E0CD9860];
  v13 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDD990], v10);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonMenuStyle and conformance ButtonMenuStyle, v12);
  v15 = v14;
  v74 = v10;
  v75 = v11;
  v76 = v13;
  v77 = v14;
  v16 = MEMORY[0x1C3B75050](255, &v74, MEMORY[0x1E0CDF2E8], 0);
  v60 = a4;
  v19 = type metadata accessor for IconMenuButtonStyle(255, a4, v17, v18);
  v74 = v10;
  v75 = v11;
  v76 = v13;
  v77 = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v21 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for IconMenuButtonStyle<A>, v19);
  v74 = v16;
  v75 = v19;
  v76 = OpaqueTypeConformance2;
  v77 = v21;
  MEMORY[0x1C3B75050](255, &v74, MEMORY[0x1E0CDE000], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  swift_getTupleTypeMetadata2();
  v22 = type metadata accessor for TupleView();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v22);
  v66 = type metadata accessor for VStack();
  v23 = type metadata accessor for ModifiedContent();
  v55 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v54 - v27;
  type metadata accessor for AccessibilityAttachmentModifier();
  v29 = type metadata accessor for ModifiedContent();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v54 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v54 - v34;
  v64 = type metadata accessor for _ConditionalContent();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v57 = (char *)&v54 - v36;
  v37 = v56;
  IconButtonConfig.accessibilityIdentifier.getter();
  if (v38)
  {
    IconMenu.menu()(v37, v58, v59, v60, v61, v62, (uint64_t)v28);
    v68[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v66);
    v68[1] = MEMORY[0x1E0CDA228];
    v39 = MEMORY[0x1E0CD9C20];
    v40 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v23, v68);
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v23);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v67[0] = v40;
    v67[1] = v41;
    v42 = MEMORY[0x1C3B750C8](v39, v29, v67);
    static ViewBuilder.buildExpression<A>(_:)(v33, v29, v42);
    v43 = *(void (**)(char *, uint64_t))(v30 + 8);
    v43(v33, v29);
    static ViewBuilder.buildBlock<A>(_:)((uint64_t)v35, v29, (uint64_t)v33);
    v44 = (uint64_t)v57;
    static ViewBuilder.buildEither<A, B>(first:)();
    v43(v33, v29);
    v43(v35, v29);
  }
  else
  {
    IconMenu.menu()(v37, v58, v59, v60, v61, v62, (uint64_t)v26);
    v73[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v66);
    v73[1] = MEMORY[0x1E0CDA228];
    v45 = MEMORY[0x1E0CD9C20];
    v46 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v23, v73);
    static ViewBuilder.buildExpression<A>(_:)(v26, v23, v46);
    v47 = *(void (**)(char *, uint64_t))(v55 + 8);
    v47(v26, v23);
    static ViewBuilder.buildBlock<A>(_:)((uint64_t)v28, v23, (uint64_t)v26);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v72[0] = v46;
    v72[1] = v48;
    MEMORY[0x1C3B750C8](v45, v29, v72);
    v44 = (uint64_t)v57;
    static ViewBuilder.buildEither<A, B>(second:)();
    v47(v26, v23);
    v47(v28, v23);
  }
  v71[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v66);
  v71[1] = MEMORY[0x1E0CDA228];
  v49 = MEMORY[0x1E0CD9C20];
  v50 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v23, v71);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
  v70[0] = v50;
  v70[1] = v51;
  v69[0] = MEMORY[0x1C3B750C8](v49, v29, v70);
  v69[1] = v50;
  v52 = v64;
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v64, v69);
  static ViewBuilder.buildBlock<A>(_:)(v44, v52, v65);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v44, v52);
}

uint64_t IconMenu.menu()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  _QWORD v59[17];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v50 = a7;
  v51 = a6;
  v48 = a2;
  v49 = a3;
  v47 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>);
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image> and conformance <> _ConditionalContent<A, B>();
  v9 = type metadata accessor for Menu();
  v10 = type metadata accessor for ButtonMenuStyle();
  v11 = (void (*)(uint64_t))MEMORY[0x1E0CD9860];
  v12 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDD990], v9);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonMenuStyle and conformance ButtonMenuStyle, v11);
  v14 = v13;
  v60 = v9;
  v61 = v10;
  v62 = v12;
  v63 = v13;
  v15 = MEMORY[0x1C3B75050](255, &v60, MEMORY[0x1E0CDF2E8], 0);
  v18 = type metadata accessor for IconMenuButtonStyle(255, a4, v16, v17);
  v60 = v9;
  v61 = v10;
  v62 = v12;
  v63 = v14;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v20 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for IconMenuButtonStyle<A>, v18);
  v60 = v15;
  v61 = v18;
  v62 = OpaqueTypeConformance2;
  v63 = v20;
  MEMORY[0x1C3B75050](255, &v60, MEMORY[0x1E0CDE000], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  swift_getTupleTypeMetadata2();
  v21 = type metadata accessor for TupleView();
  v40 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v21);
  v22 = type metadata accessor for VStack();
  v45 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v41 = (char *)v39 - v23;
  v44 = type metadata accessor for ModifiedContent();
  v46 = *(_QWORD *)(v44 - 8);
  v24 = MEMORY[0x1E0C80A78](v44);
  v42 = (char *)v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v43 = (char *)v39 - v26;
  v27 = v47;
  v28 = v48;
  v29 = v49;
  v39[1] = a5;
  v30 = v51;
  IconMenu.style.getter(v47, v49, a4, (uint64_t)v59);
  outlined release of IconButtonStyle<A>(v59, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
  v52 = a4;
  v53 = a5;
  v54 = v30;
  v55 = v27;
  v56 = v28;
  v57 = v29;
  default argument 0 of VStack.init(alignment:spacing:content:)(v21, v40);
  v31 = v41;
  VStack.init(alignment:spacing:content:)();
  IconMenu.style.getter(v27, v29, a4, (uint64_t)&v60);
  outlined release of IconButtonStyle<A>(&v60, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
  v38 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFCC0], v22);
  default argument 6 of View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v22, v38);
  v32 = v42;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v22);
  v58[0] = v38;
  v58[1] = MEMORY[0x1E0CDA228];
  v33 = v44;
  v34 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v44, v58);
  v35 = (uint64_t)v43;
  static ViewBuilder.buildExpression<A>(_:)(v32, v33, v34);
  v36 = *(void (**)(char *, uint64_t))(v46 + 8);
  v36(v32, v33);
  static ViewBuilder.buildBlock<A>(_:)(v35, v33, v50);
  return ((uint64_t (*)(uint64_t, uint64_t))v36)(v35, v33);
}

uint64_t IconMenu.style.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + 32;
  v6 = type metadata accessor for IconButtonStyle(0, a3, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v5, v6);
}

uint64_t closure #1 in IconMenu.menu()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *KeyPath;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  _QWORD v102[2];
  _BYTE v103[136];
  uint64_t v104[2];
  _QWORD v105[2];
  char v106;
  uint64_t v107;
  char *v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  __int128 v118;
  __int16 v119;
  _QWORD v120[2];
  _QWORD v121[17];
  _QWORD v122[17];
  _QWORD v123[17];
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  char v131;
  __int128 v132;
  _BYTE v133[144];

  v83 = a3;
  v84 = a4;
  v81 = a7;
  v82 = a2;
  v77 = a1;
  v10 = type metadata accessor for ButtonMenuStyle();
  v11 = (void (*)(uint64_t))MEMORY[0x1E0CD9860];
  v80 = *(char **)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v79 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>);
  v75 = v13;
  v74 = lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image> and conformance <> _ConditionalContent<A, B>();
  v124 = v13;
  v125 = a5;
  v126 = v74;
  v127 = a6;
  v14 = type metadata accessor for Menu();
  v78 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  KeyPath = (char *)&v62 - v15;
  v16 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDD990], v14);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonMenuStyle and conformance ButtonMenuStyle, v11);
  v18 = v17;
  v124 = v14;
  v125 = v10;
  v64 = v10;
  v65 = v17;
  v126 = v16;
  v66 = v16;
  v127 = v17;
  v19 = MEMORY[0x1C3B75050](0, &v124, MEMORY[0x1E0CDF2E8], 0);
  v76 = *(_QWORD *)(v19 - 8);
  v70 = v19;
  MEMORY[0x1E0C80A78](v19);
  v67 = (char *)&v62 - v20;
  v23 = type metadata accessor for IconMenuButtonStyle(255, a4, v21, v22);
  v124 = v14;
  v125 = v10;
  v126 = v16;
  v127 = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v69 = OpaqueTypeConformance2;
  v68 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for IconMenuButtonStyle<A>, v23);
  v124 = v19;
  v125 = v23;
  v126 = OpaqueTypeConformance2;
  v127 = v68;
  v25 = MEMORY[0x1C3B75050](0, &v124, MEMORY[0x1E0CDE000], 0);
  v73 = *(_QWORD *)(v25 - 8);
  v71 = v25;
  MEMORY[0x1E0C80A78](v25);
  v63 = (char *)&v62 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v87 = type metadata accessor for ModifiedContent();
  v85 = *(_QWORD *)(v87 - 8);
  v27 = MEMORY[0x1E0C80A78](v87);
  v29 = (char *)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v86 = (char *)&v62 - v30;
  v94 = v84;
  v95 = a5;
  v31 = v77;
  v96 = a6;
  v97 = v77;
  v98 = v82;
  v99 = v83;
  v88 = v84;
  v89 = a5;
  v90 = a6;
  v91 = v77;
  v92 = v82;
  v93 = v83;
  v32 = KeyPath;
  v62 = a5;
  v75 = a6;
  Menu.init(content:label:)();
  v33 = v79;
  ButtonMenuStyle.init()();
  v34 = v67;
  v35 = v64;
  View.menuStyle<A>(_:)();
  (*((void (**)(char *, uint64_t))v80 + 1))(v33, v35);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v32, v14);
  v124 = v31;
  v36 = v31;
  swift_retain();
  v37 = swift_checkMetadataState();
  v38 = v63;
  v40 = v69;
  v39 = v70;
  v41 = v68;
  View.buttonStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v34, v39);
  IconButtonConfig.enabled.getter();
  v124 = v39;
  v125 = v37;
  v126 = v40;
  v127 = v41;
  v42 = swift_getOpaqueTypeConformance2();
  v43 = v71;
  View.disabled(_:)();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v38, v43);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  v120[0] = v42;
  v120[1] = v44;
  v45 = v87;
  v46 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v87, v120);
  static ViewBuilder.buildExpression<A>(_:)(v29, v45, v46);
  v47 = *(void (**)(char *, uint64_t))(v85 + 8);
  v80 = v29;
  v47(v29, v45);
  IconButtonConfig.title.getter();
  if (v49)
  {
    v124 = v48;
    v125 = v49;
    lazy protocol witness table accessor for type String and conformance String();
    v76 = Text.init<A>(_:)();
    v73 = v51;
    v74 = v50;
    LODWORD(v71) = v52;
    KeyPath = (char *)swift_getKeyPath();
    v53 = v36;
    v54 = v36;
    v55 = v83;
    v56 = v84;
    IconMenu.style.getter(v54, v83, v84, (uint64_t)v121);
    v70 = v121[4];
    swift_retain();
    v78 = v46;
    outlined release of IconButtonStyle<A>(v121, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
    v69 = swift_getKeyPath();
    IconMenu.style.getter(v53, v55, v56, (uint64_t)v122);
    v79 = (char *)v47;
    v67 = (char *)v122[3];
    swift_retain();
    outlined release of IconButtonStyle<A>(v122, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
    v68 = swift_getKeyPath();
    IconMenu.style.getter(v53, v55, v56, (uint64_t)v123);
    outlined release of IconButtonStyle<A>(v123, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
    IconMenu.style.getter(v53, v55, v56, (uint64_t)&v124);
    v46 = v78;
    outlined release of IconButtonStyle<A>(&v124, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    v103[0] = v71 & 1;
    LOBYTE(v104[0]) = v129;
    LOBYTE(v102[0]) = v131;
    v105[0] = v76;
    v105[1] = v74;
    v106 = v71 & 1;
    v107 = v73;
    v108 = KeyPath;
    v109 = 1;
    v110 = v69;
    v111 = v70;
    v112 = v68;
    v113 = v67;
    v47 = (void (*)(char *, uint64_t))v79;
    v114 = v128;
    v115 = v129;
    v116 = v130;
    v117 = v131;
    v118 = v132;
    v119 = 1;
    TPNumberPadCharacter.rawValue.getter(v105);
    v57 = v105;
  }
  else
  {
    _s7SwiftUI15ModifiedContentVyACyACyACyACyAA4TextVAA30_EnvironmentKeyWritingModifierVyAA0E9AlignmentOGGAGyAA4FontVSgGGAGyAA5ColorVSgGGAA12_FrameLayoutVGAA010_FixedSizeN0VGSgWOi0_(&v124);
    v57 = &v124;
  }
  outlined init with take of Any?((uint64_t)v57, (uint64_t)v133, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  v58 = v86;
  v59 = (uint64_t)v80;
  v60 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v80, v86, v87);
  v104[0] = v59;
  outlined init with take of Any?((uint64_t)v133, (uint64_t)v103, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  v104[1] = (uint64_t)v103;
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?((uint64_t)v133, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))outlined copy of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  v102[0] = v60;
  v102[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  v100 = v46;
  v101 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>? and conformance <A> A?();
  static ViewBuilder.buildBlock<each A>(_:)(v104, 2, (uint64_t)v102);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?((uint64_t)v133, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))outlined consume of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  v47(v58, v60);
  outlined init with take of Any?((uint64_t)v103, (uint64_t)v105, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?((uint64_t)v105, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))outlined consume of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  return ((uint64_t (*)(uint64_t, uint64_t))v47)(v59, v60);
}

uint64_t closure #1 in closure #1 in IconMenu.menu()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v17 - v12;
  v14(v11);
  static ViewBuilder.buildExpression<A>(_:)(v10, a2, a3);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, a2);
  static ViewBuilder.buildBlock<A>(_:)((uint64_t)v13, a2, a4);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, a2);
}

void closure #2 in closure #1 in IconMenu.menu()(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE __dst[152];

  memcpy(__dst, (const void *)(a1 + 16), sizeof(__dst));
  v7 = type metadata accessor for StateIconButtonStyle(0, a2, v5, v6);
  StateIconButtonStyle.image()(v7, a3);
}

void protocol witness for View.body.getter in conformance IconMenu<A, B>()
{
  IconMenu.body.getter();
}

void initializeBufferWithCopyOfBuffer for IconMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v2;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for IconMenu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IconMenu);
}

void sub_1BD2DC100()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>);
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image> and conformance <> _ConditionalContent<A, B>();
  OUTLINED_FUNCTION_12_75();
  type metadata accessor for Menu();
  type metadata accessor for ButtonMenuStyle();
  OUTLINED_FUNCTION_8_81();
}

void sub_1BD2DC16C()
{
  void (*v0)(uint64_t);

  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonMenuStyle and conformance ButtonMenuStyle, v0);
  OUTLINED_FUNCTION_12_75();
  OUTLINED_FUNCTION_4_104();
}

void sub_1BD2DC1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for IconMenuButtonStyle(255, v4, a3, a4);
  OUTLINED_FUNCTION_7_18();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD2DC1E0()
{
  OUTLINED_FUNCTION_12_75();
  OUTLINED_FUNCTION_4_104();
}

void sub_1BD2DC1F8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
  OUTLINED_FUNCTION_0_115();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD2DC238()
{
  OUTLINED_FUNCTION_6_78();
  OUTLINED_FUNCTION_0_115();
  type metadata accessor for AccessibilityAttachmentModifier();
  type metadata accessor for ModifiedContent();
  type metadata accessor for _ConditionalContent();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD2DC298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  a17 = a1;
  a18 = MEMORY[0x1E0CDA228];
  v24 = MEMORY[0x1E0CD9C20];
  v25 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v21, &a17);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, v22);
  a15 = v25;
  a16 = v26;
  a13 = MEMORY[0x1C3B750C8](v24, v23, &a15);
  a14 = v25;
  v27 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v20, &a13);
  a19 = v20;
  a20 = v27;
  OUTLINED_FUNCTION_12_75();
  OUTLINED_FUNCTION_4_104();
}

void sub_1BD2DC328()
{
  type metadata accessor for ModifiedContent();
  type metadata accessor for _ConditionalContent();
  OUTLINED_FUNCTION_7_18();
  OUTLINED_FUNCTION_8_81();
}

uint64_t sub_1BD2DC370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = a1;
  v6 = v2;
  return MEMORY[0x1C3B750C8](v1, v3, &v5);
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in IconMenuButtonStyle<A>()
{
  return swift_getOpaqueTypeConformance2();
}

void IconMenuButtonStyle.makeBody(configuration:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *);
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *);
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99[8];
  uint64_t (*v100)(char *);
  uint64_t v101;
  uint64_t v102[10];
  void (*v103)(char *);
  _QWORD v104[12];
  _QWORD v105[17];
  _QWORD v106[17];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  char v110[8];
  uint64_t (*v111)(char *);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v75 = a1;
  v96 = a3;
  v4 = type metadata accessor for Material();
  v94 = *(_QWORD *)(v4 - 8);
  v95 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v93 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IconOnlyLabelStyle();
  v74 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ButtonStyleConfiguration.Label();
  v73 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
  v76 = *(_QWORD *)(v15 - 8);
  v77 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>);
  MEMORY[0x1E0C80A78](v98);
  v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  v80 = *(_QWORD *)(v20 - 8);
  v81 = v20;
  MEMORY[0x1E0C80A78](v20);
  v79 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>);
  MEMORY[0x1E0C80A78](v78);
  v83 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v82);
  v86 = (uint64_t)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
  MEMORY[0x1E0C80A78](v85);
  v91 = (uint64_t)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>);
  MEMORY[0x1E0C80A78](v84);
  v90 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
  MEMORY[0x1E0C80A78](v87);
  v92 = (uint64_t)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OpacityEffect>);
  MEMORY[0x1E0C80A78](v89);
  v88 = (uint64_t)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  IconOnlyLabelStyle.init()();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label, (void (*)(uint64_t))MEMORY[0x1E0CDC528]);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type IconOnlyLabelStyle and conformance IconOnlyLabelStyle, (void (*)(uint64_t))MEMORY[0x1E0CDAF30]);
  View.labelStyle<A>(_:)();
  v28 = v9;
  v29 = v75;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v11, v28);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v12);
  IconMenuButtonStyle.symbol.getter(v29, a2, v30, v31, (uint64_t)v99);
  v32 = v100;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v100);
  swift_release();
  swift_release();
  swift_release();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v99[6]);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v32);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v101);
  if (v32)
  {
    StateHolder.state.getter((uint64_t)v8);
    v33 = v32(v8);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v32);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v8, a2);
  }
  else
  {
    v33 = 0;
  }
  KeyPath = swift_getKeyPath();
  v36 = v76;
  v35 = v77;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v19, v17, v77);
  v37 = (uint64_t *)&v19[*(int *)(v98 + 36)];
  *v37 = KeyPath;
  v37[1] = v33;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v35);
  IconMenuButtonStyle.symbol.getter(v29, a2, v38, v39, (uint64_t)v102);
  v40 = v103;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)v103);
  swift_release();
  swift_release();
  swift_release();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v102[6]);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v102[8]);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v40);
  if (v40)
  {
    StateHolder.state.getter((uint64_t)v8);
    v40(v8);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v40);
    v41 = v97;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v8, a2);
  }
  else
  {
    v41 = v97;
  }
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  v42 = v79;
  View.fontWeight(_:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>);
  IconMenuButtonStyle.symbol.getter(v29, a2, v43, v44, (uint64_t)v104);
  v45 = (uint64_t (*)(char *))v104[2];
  swift_release();
  swift_release();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v104[6]);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v104[8]);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v104[10]);
  StateHolder.state.getter((uint64_t)v8);
  v46 = v45(v8);
  swift_release();
  v47 = *(void (**)(char *, uint64_t))(v41 + 8);
  v47(v8, a2);
  v49 = v80;
  v48 = v81;
  v50 = (uint64_t)v83;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v83, v42, v81);
  *(_QWORD *)(v50 + *(int *)(v78 + 36)) = v46;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v42, v48);
  IconMenuButtonStyle.style.getter(v29, a2, v51, v52, (uint64_t)v105);
  outlined release of IconButtonStyle<A>(v105, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
  IconMenuButtonStyle.style.getter(v29, a2, v53, v54, (uint64_t)v106);
  outlined release of IconButtonStyle<A>(v106, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v55 = v86;
  outlined init with copy of FeatureEligibility?(v50, v86, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>);
  v56 = (_OWORD *)(v55 + *(int *)(v82 + 36));
  v57 = v108;
  *v56 = v107;
  v56[1] = v57;
  v56[2] = v109;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v50, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>);
  IconMenuButtonStyle.symbol.getter(v29, a2, v58, v59, (uint64_t)v110);
  v60 = v111;
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v112);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v113);
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v114);
  StateHolder.state.getter((uint64_t)v8);
  v61 = v60(v8);
  swift_release();
  v47(v8, a2);
  LOBYTE(v48) = static Edge.Set.all.getter();
  v62 = v91;
  outlined init with copy of FeatureEligibility?(v55, v91, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>);
  v63 = v62 + *(int *)(v85 + 36);
  *(_QWORD *)v63 = v61;
  *(_BYTE *)(v63 + 8) = v48;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v55, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>);
  v64 = v93;
  static Material.ultraThin.getter();
  LOBYTE(v61) = static Edge.Set.all.getter();
  v65 = (uint64_t)v90;
  v66 = &v90[*(int *)(v84 + 36)];
  v68 = v94;
  v67 = v95;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v66, v64, v95);
  v66[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>)
             + 36)] = v61;
  outlined init with copy of FeatureEligibility?(v62, v65, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v64, v67);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v62, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
  v69 = v92;
  outlined init with copy of FeatureEligibility?(v65, v92, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>);
  *(_WORD *)(v69 + *(int *)(v87 + 36)) = 256;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v65, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>);
  if ((IconButtonConfig.enabled.getter() & 1) != 0)
    v70 = 1.0;
  else
    v70 = 0.5;
  v71 = v88;
  outlined init with copy of FeatureEligibility?(v69, v88, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
  *(double *)(v71 + *(int *)(v89 + 36)) = v70;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v69, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
  outlined init with take of Any?(v71, v96, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OpacityEffect>);
}

__n128 IconMenuButtonStyle.symbol.getter@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 result;
  __n128 v15;
  __int128 v16;
  _QWORD v17[6];
  __int128 v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  IconMenuButtonStyle.style.getter(a1, a2, a3, a4, (uint64_t)v17);
  v6 = v17[5];
  v7 = v20;
  v8 = v21;
  v9 = v22;
  v10 = v23;
  v11 = v24;
  v12 = v25;
  v13 = v26;
  v16 = v18;
  swift_retain();
  v15 = v19;
  swift_retain();
  swift_retain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v8);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v10);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v12);
  outlined release of IconButtonStyle<A>(v17, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe, (void (*)(uint64_t, uint64_t))_sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe);
  *(_QWORD *)a5 = v6;
  *(_OWORD *)(a5 + 8) = v16;
  result = v15;
  *(__n128 *)(a5 + 24) = v15;
  *(_QWORD *)(a5 + 40) = v7;
  *(_QWORD *)(a5 + 48) = v8;
  *(_QWORD *)(a5 + 56) = v9;
  *(_QWORD *)(a5 + 64) = v10;
  *(_QWORD *)(a5 + 72) = v11;
  *(_QWORD *)(a5 + 80) = v12;
  *(_QWORD *)(a5 + 88) = v13;
  return result;
}

uint64_t IconMenuButtonStyle.style.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a1 + 32;
  v7 = type metadata accessor for IconButtonStyle(0, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a5, v6, v7);
}

void protocol witness for ButtonStyle.makeBody(configuration:) in conformance IconMenuButtonStyle<A>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  IconMenuButtonStyle.makeBody(configuration:)(*v2, *(_QWORD *)(a1 + 16), a2);
}

_QWORD *outlined release of IconButtonStyle<A>(_QWORD *a1, void (*a2)(uint64_t, uint64_t), void (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  v9 = a1[15];
  v11 = a1[16];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  a2(v5, v6);
  a3(v7, v8);
  a4(v9, v11);
  return a1;
}

uint64_t partial apply for closure #1 in IconMenu.menu()()
{
  return partial apply for closure #1 in IconMenu.menu()((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in IconMenu.menu());
}

uint64_t partial apply for closure #1 in closure #1 in IconMenu.menu()()
{
  return partial apply for closure #1 in IconMenu.menu()((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in closure #1 in IconMenu.menu());
}

uint64_t partial apply for closure #2 in closure #1 in IconMenu.menu()()
{
  return partial apply for closure #1 in IconMenu.menu()((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #2 in closure #1 in IconMenu.menu());
}

uint64_t partial apply for closure #1 in IconMenu.menu()(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[5], v1[6], v1[7], v1[2], v1[3], v1[4]);
}

void _s7SwiftUI15ModifiedContentVyACyACyACyACyAA4TextVAA30_EnvironmentKeyWritingModifierVyAA0E9AlignmentOGGAGyAA4FontVSgGGAGyAA5ColorVSgGGAA12_FrameLayoutVGAA010_FixedSizeN0VGSgWOi0_(void *a1)
{
  bzero(a1, 0x82uLL);
}

uint64_t outlined copy of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    outlined copy of Text.Storage(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CDA1F0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
    v3[0] = MEMORY[0x1E0CDDD58];
    v3[1] = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int16 v4;

  v4 = *(_WORD *)(a1 + 128);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v4);
  return a1;
}

uint64_t outlined consume of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _FixedSizeLayout>?(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    outlined consume of Text.Storage(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OpacityEffect>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CD9728];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ClipEffect<Circle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Circle>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ClipEffect<Circle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Circle>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Material> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Material>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Material> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Material>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>);
    v4[3] = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.labelStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>, &demangling cache variable for type metadata for _ForegroundStyleModifier<Color>);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>>);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>, _EnvironmentKeyWritingModifier<Font?>>);
    v4[3] = lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Image.Scale>>, Image>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>, &demangling cache variable for type metadata for _ForegroundStyleModifier<Color>);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void InCallControlsStatusCellViewModel.title.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void InCallControlsStatusCellViewModel.subtitle.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

id InCallControlsStatusCellViewModel.controlsManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void InCallControlsStatusCellViewModel.init(participants:controlsManager:)(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  char v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  Swift::String_optional v25;
  Swift::String v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v63 = a3;
  v5 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_5_27();
  v68 = v6;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v60 - v8;
  v10 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_5_27();
  v66 = v11;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v12);
  v70 = (uint64_t)&v60 - v13;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v14);
  v67 = (char *)&v60 - v15;
  OUTLINED_FUNCTION_8_4();
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v60 - v18;
  v20 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v21 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x320))(v17);
  v22 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v59 = 0xE000000000000000;
  if ((v21 & 1) != 0)
  {
    v23 = 0x414C504552414853;
    v24 = 0xE900000000000059;
  }
  else
  {
    v23 = 0x454D495445434146;
    v24 = 0xE800000000000000;
  }
  v25.value._countAndFlagsBits = 0x61737265766E6F43;
  v25.value._object = (void *)0xEF74694B6E6F6974;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v27 = 0;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v23, v25, (NSBundle)v22, v26, *(Swift::String *)(&v59 - 1));
  object = v28._object;
  countAndFlagsBits = v28._countAndFlagsBits;

  v29 = *(uint64_t (**)(void))((*v20 & *a2) + 0x290);
  v64 = a2;
  v30 = v29();
  if (v30)
  {
    v31 = (void *)v30;
    OUTLINED_FUNCTION_30_4();
    v32 = objc_msgSend(v31, sel_mergedActiveRemoteParticipants);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
    v33 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    v34 = specialized Set.count.getter(v33);
    OUTLINED_FUNCTION_53();
    v35 = objc_msgSend(v31, sel_pendingMembers);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
    v36 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    v37 = specialized Set.count.getter(v36);
    OUTLINED_FUNCTION_53();

    v39 = countAndFlagsBits;
    v38 = v63;
    v40 = (uint64_t)object;
    if (v34)
      goto LABEL_16;
    goto LABEL_14;
  }
  v41 = MEMORY[0x1E0DEE9D8];
  v71 = MEMORY[0x1E0DEE9D8];
  v42 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v65 = v5;
  v69 = v42;
  if (v42)
  {
    if (*(_QWORD *)(a1 + 16))
    {
      OUTLINED_FUNCTION_7_91();
      outlined init with copy of Participant(a1 + v42 + (_QWORD)v20 * v43, (uint64_t)v19, type metadata accessor for Participant);
      outlined init with copy of Participant((uint64_t)v19, (uint64_t)v9, type metadata accessor for Participant.State);
      v44 = (char *)&loc_1BD2DDB6C + *((int *)qword_1BD2DDF18 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
    __break(1u);
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_30_4();
  v67 = *(char **)(v41 + 16);
  swift_release();
  v71 = v41;
  if (v69)
  {
    v45 = v68;
    if (*(_QWORD *)(a1 + 16))
    {
      OUTLINED_FUNCTION_7_91();
      v47 = v70;
      outlined init with copy of Participant(a1 + v41 + (_QWORD)v20 * v46, v70, type metadata accessor for Participant);
      outlined init with copy of Participant(v47, v45, type metadata accessor for Participant.State);
      v48 = (char *)&loc_1BD2DDCEC + dword_1BD2DDF34[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
LABEL_19:
    __break(1u);
    JUMPOUT(0x1BD2DDF18);
  }
  OUTLINED_FUNCTION_30_4();
  v37 = *(_QWORD *)(v41 + 16);
  swift_release();
  v39 = countAndFlagsBits;
  v38 = v63;
  v40 = (uint64_t)object;
  v34 = (uint64_t)v67;
  if (v67)
  {
LABEL_16:
    String.localizedConversationControls.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v52 = OUTLINED_FUNCTION_16_9();
    v53 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v52 + 16) = xmmword_1BD6441D0;
    v54 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v52 + 56) = v53;
    *(_QWORD *)(v52 + 64) = v54;
    *(_QWORD *)(v52 + 32) = v34;
    goto LABEL_17;
  }
LABEL_14:
  if (v37 < 1)
    goto LABEL_16;
  String.localizedConversationControls.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v49 = OUTLINED_FUNCTION_16_9();
  v50 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v49 + 16) = xmmword_1BD6441D0;
  v51 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v49 + 56) = v50;
  *(_QWORD *)(v49 + 64) = v51;
  *(_QWORD *)(v49 + 32) = v37;
LABEL_17:
  v55 = static String.localizedStringWithFormat(_:_:)();
  v57 = v56;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_53();
  v58 = (uint64_t)v64;

  *v38 = v39;
  v38[1] = v40;
  v38[2] = v55;
  v38[3] = v57;
  v38[4] = v58;
}

uint64_t lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    type metadata accessor for NSObject(255, a2);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *assignWithCopy for InCallControlsStatusCellViewModel(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for InCallControlsStatusCellViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InCallControlsStatusCellViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsStatusCellViewModel()
{
  return &type metadata for InCallControlsStatusCellViewModel;
}

id CNKMutedTalkerBannerViewControllerFactory.makeViewController()()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MutedTalkerBannerViewController()), sel_init);
}

id MutedTalkerBannerViewController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t type metadata accessor for MutedTalkerBannerViewController()
{
  return objc_opt_self();
}

CNKMutedTalkerBannerViewControllerFactory __swiftcall CNKMutedTalkerBannerViewControllerFactory.init()()
{
  return (CNKMutedTalkerBannerViewControllerFactory)objc_msgSend(objc_allocWithZone((Class)OUTLINED_FUNCTION_39_44()), sel_init);
}

id CNKMutedTalkerBannerViewControllerFactory.init()()
{
  objc_super v1;

  v1.super_class = (Class)CNKMutedTalkerBannerViewControllerFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t MutedTalkerBannerViewController.currentRequestID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_currentRequestID);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

void MutedTalkerBannerViewController.pillViewSubtitle.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillViewSubtitle);
}

void MutedTalkerBannerViewController.pillViewTitle.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillViewTitle);
}

uint64_t MutedTalkerBannerViewController.isBannerPresent.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_isBannerPresent);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

void MutedTalkerBannerViewController.isBannerPresent.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_isBannerPresent);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MutedTalkerBannerViewController.isBannerPresent.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t MutedTalkerBannerViewController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

void MutedTalkerBannerViewController.delegate.setter()
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_32();
}

uint64_t key path setter for MutedTalkerBannerViewController.delegate : MutedTalkerBannerViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x148);
  v3 = swift_unknownObjectRetain();
  return v2(v3);
}

void (*MutedTalkerBannerViewController.delegate.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v3[3] = MEMORY[0x1C3B752C0](v5);
  return DestinationQueryController.delegate.modify;
}

void MutedTalkerBannerViewController.init()()
{
  void *v0;
  id v1;
  _BYTE *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  Class isa;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  objc_super v51;

  swift_unknownObjectWeakInit();
  v1 = objc_allocWithZone(MEMORY[0x1E0CB3A28]);
  v2 = v0;
  v3 = OUTLINED_FUNCTION_2_2((uint64_t)v2, sel_init);
  v4 = objc_msgSend(v3, sel_UUIDString);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v7 = v6;

  v8 = (uint64_t *)&v2[OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_currentRequestID];
  *v8 = v5;
  v8[1] = v7;
  v2[OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_isMuted] = 1;
  v2[OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_isBannerPresent] = 0;
  OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v10 = OUTLINED_FUNCTION_3_98();
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v10);

  v12 = OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillImageView;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillImageView] = v11;
  objc_opt_self();
  v13 = v11;
  v14 = OUTLINED_FUNCTION_25_1((uint64_t)v13, sel_systemOrangeColor);
  OUTLINED_FUNCTION_48_1(v13, sel_setTintColor_);

  OUTLINED_FUNCTION_59(v15, &lazy cache variable for type metadata for PLPillContentItem);
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_conversationKit);
  v18 = OUTLINED_FUNCTION_0_3(0xD000000000000021, 0x80000001BD683400);
  v20 = v19;

  PLPillContentItem.__allocating_init(text:)(v18, v20);
  v21 = OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillViewTitle;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillViewTitle] = v22;
  v23 = objc_msgSend(v16, sel_conversationKit, 0xE000000000000000);
  OUTLINED_FUNCTION_0_3(0xD00000000000002ELL, 0x80000001BD683430);
  OUTLINED_FUNCTION_45_4();
  PLPillContentItem.__allocating_init(text:style:)((uint64_t)v16, v18, 5);
  v24 = OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillViewSubtitle;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillViewSubtitle] = v25;
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7D3E0]), sel_initWithLeadingAccessoryView_, *(_QWORD *)&v2[v12], 0xE000000000000000);
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillView] = v26;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v27 = OUTLINED_FUNCTION_13_13();
  *(_OWORD *)(v27 + 16) = xmmword_1BD6441C0;
  v28 = *(void **)&v2[v21];
  *(_QWORD *)(v27 + 32) = v28;
  v29 = *(void **)&v2[v24];
  *(_QWORD *)(v27 + 40) = v29;
  OUTLINED_FUNCTION_44_4();
  v30 = v26;
  v31 = v28;
  v32 = v29;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setCenterContentItems_, isa);

  OUTLINED_FUNCTION_59(v34, (unint64_t *)&lazy cache variable for type metadata for BNBannerSource);
  @nonobjc BNBannerSource.__allocating_init(for:forRequesterIdentifier:)(0, 0xD000000000000037, 0x80000001BD683460);
  if (!v35)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_bannerSource] = v35;
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();

  v51.receiver = v2;
  v51.super_class = (Class)type metadata accessor for MutedTalkerBannerViewController();
  v50 = objc_msgSendSuper2(&v51, sel_initWithNibName_bundle_, 0, 0);
  v36 = objc_allocWithZone(MEMORY[0x1E0DC3D80]);
  v37 = v50;
  v40 = OUTLINED_FUNCTION_33_37((uint64_t)v37, v38, v39);
  objc_msgSend(v40, sel_setNumberOfTapsRequired_, 1);
  v41 = objc_msgSend(v37, sel_view);
  if (!v41)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v42 = v41;
  objc_msgSend(v41, sel_addGestureRecognizer_, v40);

  v43 = objc_allocWithZone(MEMORY[0x1E0DC3D80]);
  v44 = v37;
  v47 = OUTLINED_FUNCTION_33_37((uint64_t)v44, v45, v46);
  v48 = OUTLINED_FUNCTION_2_2((uint64_t)objc_msgSend(v47, sel_setNumberOfTapsRequired_, 2), sel_view);
  if (v48)
  {
    v49 = v48;
    OUTLINED_FUNCTION_48_1(v48, sel_addGestureRecognizer_);

    OUTLINED_FUNCTION_48_1(v40, sel_requireGestureRecognizerToFail_);
    return;
  }
LABEL_7:
  __break(1u);
}

void PLPillContentItem.__allocating_init(text:)(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;

  v4 = objc_allocWithZone((Class)OUTLINED_FUNCTION_39_44());
  v5 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_initWithText_, v5);

  OUTLINED_FUNCTION_18();
}

void PLPillContentItem.__allocating_init(text:style:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;

  v6 = objc_allocWithZone((Class)OUTLINED_FUNCTION_39_44());
  v7 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_initWithText_style_, v7, a3);

  OUTLINED_FUNCTION_18();
}

void @nonobjc BNBannerSource.__allocating_init(for:forRequesterIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *ObjCClassFromMetadata;
  id v5;

  if (a3)
  {
    v3 = (void *)MEMORY[0x1C3B72E00](a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v5 = OUTLINED_FUNCTION_38_39(ObjCClassFromMetadata, sel_bannerSourceForDestination_forRequesterIdentifier_);

  OUTLINED_FUNCTION_18();
}

id MutedTalkerBannerViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void MutedTalkerBannerViewController.init(coder:)()
{
  void *v0;

  swift_unknownObjectWeakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall MutedTalkerBannerViewController.viewDidLoad()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  id v14;
  id v15;

  v1 = OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillView), sel_setAutoresizingMask_, 18);
  v2 = *(id *)(v0 + v1);
  v3 = OUTLINED_FUNCTION_25_1((uint64_t)v2, sel_view);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_bounds);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
    v14 = OUTLINED_FUNCTION_25_1(v13, sel_view);
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, sel_addSubview_, *(_QWORD *)(v0 + v1));

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall MutedTalkerBannerViewController.handleTap(_:)(UITapGestureRecognizer_optional *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  type metadata accessor for DispatchWorkItemFlags();
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_13_76();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v7 = (void *)OUTLINED_FUNCTION_7_22();
  *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v1;
  v8 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v9 = v1;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  OUTLINED_FUNCTION_36_11(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  OUTLINED_FUNCTION_29_46();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v3, v2, v8);
  OUTLINED_FUNCTION_50_3();

  OUTLINED_FUNCTION_7_92();
  OUTLINED_FUNCTION_11_76();
  OUTLINED_FUNCTION_52_1();
}

void *closure #1 in MutedTalkerBannerViewController.handleTap(_:)(_QWORD *a1)
{
  uint64_t v2;
  _BYTE *v3;
  _QWORD *v4;
  uint64_t v5;
  void *result;

  v2 = OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_isMuted;
  v3 = (char *)a1 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_isMuted;
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = (*(uint64_t (**)(BOOL))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x160))((*((_BYTE *)a1
                                                                                   + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_isMuted) & 1) == 0);
  *((_BYTE *)a1 + v2) = (*v3 & 1) == 0;
  result = (void *)(*(uint64_t (**)(uint64_t))((*v4 & *a1) + 0x140))(v5);
  if (result)
  {
    objc_msgSend(result, sel_bannerDidGetTap);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall MutedTalkerBannerViewController.updatePillView(isMuted:)(Swift::Bool isMuted)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  const char *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  Class isa;

  v3 = v1;
  OUTLINED_FUNCTION_59(isMuted, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v5 = OUTLINED_FUNCTION_60_3();
  if (isMuted)
  {
    v6 = OUTLINED_FUNCTION_3_98();
    OUTLINED_FUNCTION_48_1(v5, sel_setImage_);

    objc_opt_self();
    v7 = OUTLINED_FUNCTION_60_3();
    v8 = OUTLINED_FUNCTION_25_1((uint64_t)v7, sel_systemOrangeColor);
    OUTLINED_FUNCTION_48_1(v7, sel_setTintColor_);

    OUTLINED_FUNCTION_59(v9, &lazy cache variable for type metadata for PLPillContentItem);
    v10 = (void *)objc_opt_self();
    v11 = OUTLINED_FUNCTION_24_49(v10);
    OUTLINED_FUNCTION_0_3(0xD000000000000021, 0x80000001BD683400);
    OUTLINED_FUNCTION_45_4();
    OUTLINED_FUNCTION_22_58();
    MutedTalkerBannerViewController.pillViewTitle.setter(v12);
    v14 = OUTLINED_FUNCTION_2_2(v13, (const char *)(v2 + 1326));
    v15 = 0xD00000000000002ELL;
    v16 = "PARTICIPANT_VIEW_MUTED_TALKER_MIC_SUBTITLE_OFF";
  }
  else
  {
    v17 = @nonobjc UIImage.init(_systemName:)(0x6C6C69662E63696DLL, 0xE800000000000000);
    OUTLINED_FUNCTION_48_1(v5, sel_setImage_);

    objc_opt_self();
    v18 = OUTLINED_FUNCTION_60_3();
    v19 = OUTLINED_FUNCTION_25_1((uint64_t)v18, sel_systemOrangeColor);
    OUTLINED_FUNCTION_48_1(v18, sel_setTintColor_);

    OUTLINED_FUNCTION_59(v20, &lazy cache variable for type metadata for PLPillContentItem);
    v21 = (void *)objc_opt_self();
    v22 = OUTLINED_FUNCTION_24_49(v21);
    OUTLINED_FUNCTION_0_3(0xD000000000000020, 0x80000001BD6834E0);
    OUTLINED_FUNCTION_45_4();
    OUTLINED_FUNCTION_22_58();
    MutedTalkerBannerViewController.pillViewTitle.setter(v23);
    v14 = OUTLINED_FUNCTION_2_2(v24, (const char *)(v2 + 1326));
    v15 = 0xD00000000000002DLL;
    v16 = "PARTICIPANT_VIEW_MUTED_TALKER_MIC_SUBTITLE_ON";
  }
  v25 = OUTLINED_FUNCTION_0_3(v15, (unint64_t)(v16 - 32) | 0x8000000000000000);
  v27 = v26;

  PLPillContentItem.__allocating_init(text:style:)(v25, v27, 5);
  MutedTalkerBannerViewController.pillViewSubtitle.setter(v28);
  v29 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v30 = OUTLINED_FUNCTION_13_13();
  *(_OWORD *)(v30 + 16) = xmmword_1BD6441C0;
  v31 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillViewTitle);
  v32 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillViewSubtitle);
  *(_QWORD *)(v30 + 32) = v31;
  *(_QWORD *)(v30 + 40) = v32;
  OUTLINED_FUNCTION_44_4();
  v33 = v29;
  v34 = v31;
  v35 = v32;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setCenterContentItems_, isa, 0xE000000000000000);

}

Swift::Void __swiftcall MutedTalkerBannerViewController.playBannerSound()()
{
  AudioServicesPlaySystemSound(0x556u);
}

Swift::Void __swiftcall MutedTalkerBannerViewController.showBanner()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_13_76();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  *((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_isMuted) = 1;
  if ((OUTLINED_FUNCTION_36_1(*v0) & 1) == 0)
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3A28]), sel_init);
    v5 = objc_msgSend(v4, sel_UUIDString);

    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v8 = v7;

    v9 = MutedTalkerBannerViewController.currentRequestID.setter(v6, v8);
    OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    OUTLINED_FUNCTION_7_22();
    *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v1;
    OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
    OUTLINED_FUNCTION_35_28();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_36_11(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    OUTLINED_FUNCTION_29_46();
    OUTLINED_FUNCTION_5_98();
    OUTLINED_FUNCTION_5_91();
  }
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in MutedTalkerBannerViewController.showBanner()(char *a1)
{
  void *v2;
  NSObject *v3;
  NSObject *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23[2];

  v23[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_bannerSource];
  v23[0] = 0;
  v3 = objc_msgSend(v2, sel_layoutDescriptionWithError_, v23);
  if (v3)
  {
    v4 = v3;
    v5 = v23[0];
    -[NSObject presentationSize](v4, sel_presentationSize);
    v7 = v6;
    v9 = v8;
    -[NSObject containerSize](v4, sel_containerSize);
    objc_msgSend(a1, sel_preferredContentSizeWithPresentationSize_containerSize_, v7, v9, v10, v11);
    objc_msgSend(a1, sel_setPreferredContentSize_);
    v23[0] = 0;
    if (objc_msgSend(v2, sel_postPresentable_options_userInfo_error_, a1, 1, 0, v23))
    {
      v12 = v23[0];
      goto LABEL_11;
    }
    v15 = v23[0];
    v14 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  else
  {
    v13 = v23[0];
    v14 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
  v4 = Logger.logObject.getter();
  v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1BD004000, v4, v17, "MutedTalker: unable to post banner", v18, 2u);
    MEMORY[0x1C3B751B8](v18, -1, -1);
  }

LABEL_11:
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)&static Logger.conversationControls);
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1BD004000, v20, v21, "MutedTalker: banner presented", v22, 2u);
    MEMORY[0x1C3B751B8](v22, -1, -1);
  }

}

Swift::Void __swiftcall MutedTalkerBannerViewController.dismissBanner()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_113_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_13_76();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  v4 = OUTLINED_FUNCTION_36_1(*v0);
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    OUTLINED_FUNCTION_7_22();
    *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v1;
    OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
    OUTLINED_FUNCTION_35_28();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_269();
    OUTLINED_FUNCTION_36_11(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    OUTLINED_FUNCTION_29_46();
    OUTLINED_FUNCTION_5_98();
    OUTLINED_FUNCTION_5_91();
  }
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in MutedTalkerBannerViewController.dismissBanner()(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_bannerSource);
  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_currentRequestID);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_currentRequestID + 8);
  swift_bridgeObjectRetain();
  v4 = (void *)MEMORY[0x1C3B72E00](0x727574206574756DLL, 0xEF66666F2064656ELL);
  v9[0] = 0;
  v5 = outlined bridged method (mbnnnnnn) of @objc BNBannerSource.revokePresentable(withRequestIdentifier:reason:animated:userInfo:)(v2, v3, (uint64_t)v4, 1, 0, (uint64_t)v9, v1);

  v6 = v9[0];
  if (v5)
  {

  }
  else
  {
    v7 = v6;
    v8 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

  }
}

uint64_t MutedTalkerBannerViewController.presentableWillAppear(asBanner:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))(1);
}

uint64_t MutedTalkerBannerViewController.presentableWillDisappear(asBanner:withReason:)()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))(0);
  return (*(uint64_t (**)(uint64_t))((*v1 & *v0) + 0x160))(1);
}

void MutedTalkerBannerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  OUTLINED_FUNCTION_38_39(objc_allocWithZone(v4), sel_initWithNibName_bundle_);

  OUTLINED_FUNCTION_18();
}

void MutedTalkerBannerViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MutedTalkerBannerViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MutedTalkerBannerViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MutedTalkerBannerViewController.presentableBehavior.getter()
{
  return 1;
}

void MutedTalkerBannerViewController.requestIdentifier.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void *MutedTalkerBannerViewController.viewController.getter()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

unint64_t MutedTalkerBannerViewController.requesterIdentifier.getter()
{
  return 0xD000000000000037;
}

CGSize __swiftcall MutedTalkerBannerViewController.preferredContentSize(withPresentationSize:containerSize:)(CGSize withPresentationSize, CGSize containerSize)
{
  uint64_t v2;
  double v3;
  double v4;
  CGSize result;

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillView), sel_systemLayoutSizeFittingSize_, withPresentationSize.width, withPresentationSize.height, containerSize.width, containerSize.height);
  result.height = v4;
  result.width = v3;
  return result;
}

id MutedTalkerBannerViewController.bannerContentOutsets.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit31MutedTalkerBannerViewController_pillView), sel_shadowOutsets);
}

id outlined bridged method (mbnnnnnn) of @objc BNBannerSource.revokePresentable(withRequestIdentifier:reason:animated:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v12;
  id v13;

  v12 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(a7, sel_revokePresentableWithRequestIdentifier_reason_animated_userInfo_error_, v12, a3, a4 & 1, a5, a6);

  return v13;
}

uint64_t sub_1BD2DFE54()
{
  uint64_t v0;

  return swift_deallocObject();
}

void *partial apply for closure #1 in MutedTalkerBannerViewController.handleTap(_:)()
{
  uint64_t v0;

  return closure #1 in MutedTalkerBannerViewController.handleTap(_:)(*(_QWORD **)(v0 + 16));
}

void partial apply for closure #1 in MutedTalkerBannerViewController.showBanner()()
{
  uint64_t v0;

  closure #1 in MutedTalkerBannerViewController.showBanner()(*(char **)(v0 + 16));
}

void partial apply for closure #1 in MutedTalkerBannerViewController.dismissBanner()()
{
  uint64_t v0;

  closure #1 in MutedTalkerBannerViewController.dismissBanner()(*(_QWORD *)(v0 + 16));
}

void sub_1BD2DFE90(uint64_t **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = OUTLINED_FUNCTION_36_1(**a1) & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD2DFEC8(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x130))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2DFF00(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x140))();
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for CNKMutedTalkerBannerViewControllerFactory(uint64_t a1)
{
  type metadata accessor for NSObject(a1, &lazy cache variable for type metadata for CNKMutedTalkerBannerViewControllerFactory);
}

uint64_t method lookup function for MutedTalkerBannerViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.isBannerPresent.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.isBannerPresent.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.isBannerPresent.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.handleTap(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.updatePillView(isMuted:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.playBannerSound()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.showBanner()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.dismissBanner()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.presentableWillAppear(asBanner:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of MutedTalkerBannerViewController.presentableWillDisappear(asBanner:withReason:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t OUTLINED_FUNCTION_39_44()
{
  return swift_getObjCClassFromMetadata();
}

uint64_t CarrierBundleSettings.__allocating_init()()
{
  void *v0;
  id v1;
  uint64_t v2;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v0 = (void *)static OS_dispatch_queue.main.getter();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CA6E38]), sel_initWithQueue_, v0);

  v2 = swift_allocObject();
  CarrierBundleSettings.init(ctClient:)((uint64_t)v1);
  return v2;
}

uint64_t static CarrierBundleSettings.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

id CarrierBundleSettings.ctClient.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit21CarrierBundleSettings_ctClient);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

void CarrierBundleSettings.ctClient.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit21CarrierBundleSettings_ctClient);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*CarrierBundleSettings.ctClient.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

void CarrierBundleSettings.__allocating_init(ctClient:)(uint64_t a1)
{
  swift_allocObject();
  CarrierBundleSettings.init(ctClient:)(a1);
  OUTLINED_FUNCTION_0();
}

void CarrierBundleSettings.init(ctClient:)(uint64_t a1)
{
  uint64_t v1;

  Logger.init(subsystem:category:)();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21CarrierBundleSettings_ctClient) = a1;
  OUTLINED_FUNCTION_0();
}

double CarrierBundleSettings.fetchCarrierBundleValue(for:context:)@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  id *v7;
  id v8;
  Class isa;
  id v10;
  id v11;
  double result;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31[5];

  v31[4] = *(id *)MEMORY[0x1E0C80C00];
  v7 = (id *)(v3 + OBJC_IVAR____TtC15ConversationKit21CarrierBundleSettings_ctClient);
  OUTLINED_FUNCTION_2_0();
  v8 = *v7;
  specialized _arrayForceCast<A, B>(_:)(a1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v31[0] = 0;
  v10 = objc_msgSend(v8, sel_context_getCarrierBundleValue_error_, a2, isa, v31);

  v30 = v31[0];
  if (v10)
  {
    *(_QWORD *)(a3 + 24) = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    *(_QWORD *)a3 = v10;
    v11 = v30;
  }
  else
  {
    v13 = v31[0];
    v14 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    OUTLINED_FUNCTION_35_0();
    v15 = a2;
    v16 = v14;
    OUTLINED_FUNCTION_35_0();
    v17 = v15;
    v18 = v14;
    v19 = Logger.logObject.getter();
    v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = OUTLINED_FUNCTION_105();
      v22 = (_QWORD *)OUTLINED_FUNCTION_105();
      v31[0] = (id)OUTLINED_FUNCTION_105();
      *(_DWORD *)v21 = 136315650;
      v23 = OUTLINED_FUNCTION_35_0();
      v24 = MEMORY[0x1C3B7304C](v23, MEMORY[0x1E0DEA968]);
      v26 = v25;
      swift_bridgeObjectRelease();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v26, (uint64_t *)v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_22_5();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2112;
      v27 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v22 = v17;

      *(_WORD *)(v21 + 22) = 2080;
      swift_getErrorValue();
      v28 = Error.localizedDescription.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, (uint64_t *)v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_2_13();
      OUTLINED_FUNCTION_2_13();
      _os_log_impl(&dword_1BD004000, v19, v20, "Error while extracting carrier bundle value for key hierarchy: %s for subscription context: %@. Error - %s", (uint8_t *)v21, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_2_13();

    OUTLINED_FUNCTION_22_5();
    OUTLINED_FUNCTION_2_13();
    OUTLINED_FUNCTION_2_13();
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

id CarrierBundleSettings.subscription(for:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  os_log_type_t v3;
  void **v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  char v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v40;
  NSObject *log;
  id v43[5];

  v43[4] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void **)(v2 + OBJC_IVAR____TtC15ConversationKit21CarrierBundleSettings_ctClient);
  swift_beginAccess();
  v6 = *v5;
  v43[0] = 0;
  v7 = objc_msgSend(v6, sel_getSubscriptionInfoWithError_, v43);
  v8 = v43[0];
  if (!v7)
  {
    v23 = v43[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return v8;
  }
  v9 = v7;
  v10 = v43[0];
  v11 = outlined bridged method (ob) of @objc CTXPCServiceSubscriptionInfo.subscriptions.getter(v9);
  if (!v11)
  {
    v24 = Logger.logObject.getter();
    v25 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_51_3(v25))
    {
      v26 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1BD004000, v24, v3, "Not able to fetch subscriptions active in device.", v26, 2u);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_48;
  }
  v12 = v11;
  if (v11 >> 62)
  {
LABEL_38:
    v13 = _CocoaArrayWrapper.endIndex.getter();
    if (v13)
      goto LABEL_5;
    goto LABEL_39;
  }
  v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v13)
  {
LABEL_39:
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_10_17();
    v24 = Logger.logObject.getter();
    v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v34))
    {
      v35 = (uint8_t *)OUTLINED_FUNCTION_105();
      v36 = (void *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v35 = 136315138;
      v43[0] = v36;
      if (a2)
        v37 = a1;
      else
        v37 = 0;
      if (a2)
        v38 = a2;
      else
        v38 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v38, (uint64_t *)v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_19_1();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v24, v34, "Not able to find subscription context for SIM ID - %s", v35, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_19_1();
LABEL_48:

    return 0;
  }
LABEL_5:
  v14 = 4;
  v15 = a1;
  while (1)
  {
    if ((v12 & 0xC000000000000001) != 0)
      v16 = (id)MEMORY[0x1C3B73D18](v14 - 4, v12);
    else
      v16 = *(id *)(v12 + 8 * v14);
    v8 = v16;
    v17 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    v18 = outlined bridged method (pb) of @objc CTXPCServiceSubscriptionContext.labelID.getter(v16);
    if (v19)
      break;
    if (!a2)
      goto LABEL_28;

LABEL_21:
    ++v14;
    if (v17 == v13)
      goto LABEL_39;
  }
  if (!a2)
  {

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (v18 == v15 && v19 == a2)
  {
    OUTLINED_FUNCTION_21_0();
    goto LABEL_28;
  }
  v21 = a2;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {

    a2 = v21;
    v15 = a1;
    goto LABEL_21;
  }
  a2 = v21;
LABEL_28:
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_10_17();
  v27 = v8;
  v28 = Logger.logObject.getter();
  v29 = static os_log_type_t.default.getter();
  if (OUTLINED_FUNCTION_51_3(v29))
  {
    v30 = OUTLINED_FUNCTION_105();
    v40 = (_QWORD *)OUTLINED_FUNCTION_105();
    v43[0] = (id)OUTLINED_FUNCTION_105();
    *(_DWORD *)v30 = 138412546;
    log = v28;
    v31 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v40 = v8;

    *(_WORD *)(v30 + 12) = 2080;
    if (a2)
      v32 = a1;
    else
      v32 = 0;
    if (a2)
      v33 = a2;
    else
      v33 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, (uint64_t *)v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_19_1();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, log, (os_log_type_t)v17, "Found subscription context %@ for SIM ID %s", (uint8_t *)v30, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_14_22();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_1();

  return v8;
}

void CarrierBundleSettings.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_13_77();
  OUTLINED_FUNCTION_17_1(v1);

  OUTLINED_FUNCTION_0();
}

uint64_t CarrierBundleSettings.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_13_77();
  OUTLINED_FUNCTION_17_1(v1);

  return swift_deallocClassInstance();
}

uint64_t outlined bridged method (ob) of @objc CTXPCServiceSubscriptionInfo.subscriptions.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_subscriptions);

  if (!v2)
    return 0;
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CTXPCServiceSubscriptionContext);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t outlined bridged method (pb) of @objc CTXPCServiceSubscriptionContext.labelID.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_labelID);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t ObjC metadata update function for CarrierBundleSettings()
{
  return type metadata accessor for CarrierBundleSettings();
}

uint64_t type metadata accessor for CarrierBundleSettings()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CarrierBundleSettings;
  if (!type metadata singleton initialization cache for CarrierBundleSettings)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for CarrierBundleSettings()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CarrierBundleSettings()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CarrierBundleSettings.__allocating_init(ctClient:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t ParticipantMonogramView.ViewModel.init(participant:includeAudioVisualization:includeRingButton:titles:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v22;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  Participant.contactDetails.getter();
  v13 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Participant(0) + 32));
  v22 = v26;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_22_3();
  OUTLINED_FUNCTION_26_22();
  outlined destroy of Participant(a1);
  OUTLINED_FUNCTION_26_22();
  outlined copy of (title: String, subtitle: String?)?(a4, a5);
  outlined consume of AnsweringMachineCallStatus?(0, 0);
  v14 = v22;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_22_3();
  OUTLINED_FUNCTION_26_22();
  v15 = OUTLINED_FUNCTION_9_78();
  outlined copy of (title: String, subtitle: String?)?(v15, v16);
  v17 = OUTLINED_FUNCTION_9_78();
  outlined consume of AnsweringMachineCallStatus?(v17, v18);
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_25();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_21_0();
  *(_QWORD *)a8 = v26;
  *(_QWORD *)(a8 + 8) = v27;
  *(_QWORD *)(a8 + 16) = v28;
  *(_QWORD *)(a8 + 24) = v29;
  *(_QWORD *)(a8 + 32) = v30;
  *(_QWORD *)(a8 + 40) = v31;
  *(_QWORD *)(a8 + 48) = v32;
  *(_QWORD *)(a8 + 56) = v13;
  *(_BYTE *)(a8 + 64) = a2;
  *(_BYTE *)(a8 + 65) = a3;
  *(_QWORD *)(a8 + 72) = a4;
  *(_QWORD *)(a8 + 80) = a5;
  *(_QWORD *)(a8 + 88) = a6;
  *(_QWORD *)(a8 + 96) = a7;
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_25();
  swift_bridgeObjectRelease();

  v19 = OUTLINED_FUNCTION_9_78();
  return outlined consume of AnsweringMachineCallStatus?(v19, v20);
}

BOOL static ParticipantMonogramView.ViewModel.== infix(_:_:)(__int128 *a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  Swift::Int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;

  v54 = *(_QWORD *)(a2 + 24);
  v56 = *(_QWORD *)(a2 + 8);
  v52 = *(_QWORD *)(a2 + 40);
  v36 = *(_QWORD *)(a2 + 48);
  v38 = *(_QWORD *)(a2 + 32);
  v32 = *(_QWORD *)a2;
  v34 = *(_QWORD *)(a2 + 56);
  LODWORD(v50) = *(unsigned __int8 *)(a2 + 65);
  HIDWORD(v50) = *(unsigned __int8 *)(a2 + 64);
  v46 = *(_QWORD *)(a2 + 72);
  v48 = *(_QWORD *)(a2 + 16);
  v42 = *(_QWORD *)(a2 + 88);
  v44 = *(_QWORD *)(a2 + 80);
  v40 = *(_QWORD *)(a2 + 96);
  v58 = *a1;
  OUTLINED_FUNCTION_12_9();
  v2 = (id)v58;
  OUTLINED_FUNCTION_22_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_26_22();
  OUTLINED_FUNCTION_79_1();
  v3 = OUTLINED_FUNCTION_43_42();
  v5 = outlined copy of (title: String, subtitle: String?)?(v3, v4);
  OUTLINED_FUNCTION_38_40(v5, v6, v7, v8, v9, v10, v11, v12, v30, v32, v34, v36, v38, v40, v42, v44, v46, v48, v50,
    v52,
    v54,
    v56,
    v58,
    *((uint64_t *)&v58 + 1),
    v62,
    v64);
  v59 = Hasher._finalize()();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_21_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_58_1();

  v13 = OUTLINED_FUNCTION_43_42();
  outlined consume of AnsweringMachineCallStatus?(v13, v14);
  OUTLINED_FUNCTION_12_9();
  v15 = v33;
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_22_3();
  OUTLINED_FUNCTION_18_64();
  v18 = outlined copy of (title: String, subtitle: String?)?(v16, v17);
  OUTLINED_FUNCTION_38_40(v18, v19, v20, v21, v22, v23, v24, v25, v31, (uint64_t)v33, v35, v37, v39, v41, v43, v45, v47, v49, v51,
    v53,
    v55,
    v57,
    v59,
    v61,
    v63,
    v65);
  v26 = Hasher._finalize()();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_2_1();

  OUTLINED_FUNCTION_18_64();
  outlined consume of AnsweringMachineCallStatus?(v27, v28);
  return v60 == v26;
}

uint64_t ParticipantMonogramView.ViewModel.participantContactDetails.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  id v8;

  v3 = *((_QWORD *)v1 + 2);
  v2 = *((_QWORD *)v1 + 3);
  v5 = *((_QWORD *)v1 + 4);
  v4 = *((_QWORD *)v1 + 5);
  v6 = *((_QWORD *)v1 + 6);
  v7 = *v1;
  *(_OWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v6;
  v8 = (id)v7;
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_8_8();
  return swift_bridgeObjectRetain();
}

__n128 ParticipantMonogramView.ViewModel.participantContactDetails.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *(void **)v1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_1();
  swift_bridgeObjectRelease();

  *(_OWORD *)v1 = v7;
  *(_OWORD *)(v1 + 16) = v6;
  result = v5;
  *(__n128 *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 48) = v2;
  return result;
}

uint64_t (*ParticipantMonogramView.ViewModel.participantContactDetails.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantMonogramView.ViewModel.gradient.getter()
{
  return swift_bridgeObjectRetain();
}

void ParticipantMonogramView.ViewModel.gradient.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ParticipantMonogramView.ViewModel.gradient.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantMonogramView.ViewModel.includeAudioVisualization.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t ParticipantMonogramView.ViewModel.includeAudioVisualization.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = result;
  return result;
}

uint64_t (*ParticipantMonogramView.ViewModel.includeAudioVisualization.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantMonogramView.ViewModel.includeRingButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t ParticipantMonogramView.ViewModel.includeRingButton.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 65) = result;
  return result;
}

uint64_t (*ParticipantMonogramView.ViewModel.includeRingButton.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ParticipantMonogramView.ViewModel.titles.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_42_35();
  outlined copy of (title: String, subtitle: String?)?(v0, v1);
  return OUTLINED_FUNCTION_42_35();
}

uint64_t ParticipantMonogramView.ViewModel.titles.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t result;

  result = outlined consume of AnsweringMachineCallStatus?(v4[9], v4[10]);
  v4[9] = a1;
  v4[10] = a2;
  v4[11] = a3;
  v4[12] = a4;
  return result;
}

uint64_t (*ParticipantMonogramView.ViewModel.titles.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id ParticipantMonogramView.ringButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_ringButton);
}

void ParticipantMonogramView.ringButton.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_ringButton);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_ringButton) = a1;

}

id ParticipantMonogramView.titleLabelContainer.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_titleLabelContainer);
}

id ParticipantMonogramView.subtitleLabelContainer.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_subtitleLabelContainer);
}

uint64_t ParticipantMonogramView.isInRoster.getter()
{
  unsigned __int8 *v0;

  OUTLINED_FUNCTION_1_7();
  return *v0;
}

uint64_t key path getter for ParticipantMonogramView.isInRoster : ParticipantMonogramView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_isInRoster);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ParticipantMonogramView.isInRoster.setter(char a1)
{
  char *v1;
  char *v3;

  v3 = &v1[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_isInRoster];
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  objc_msgSend(v1, sel_setNeedsLayout);
  OUTLINED_FUNCTION_9_0();
}

void ParticipantMonogramView.isInRoster.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ParticipantMonogramView.isInRoster.modify()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_551();
  if ((v1 & 1) != 0)
    OUTLINED_FUNCTION_0();
  else
    objc_msgSend(*(id *)(v0 + 24), sel_setNeedsLayout);
}

double ParticipantMonogramView.customCornerRadius.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return *(double *)v0;
}

double key path getter for ParticipantMonogramView.customCornerRadius : ParticipantMonogramView@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_customCornerRadius);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

void ParticipantMonogramView.customCornerRadius.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_customCornerRadius);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  ParticipantMonogramView.customCornerRadius.didset();
}

void ParticipantMonogramView.customCornerRadius.didset()
{
  uint64_t v0;
  void *v1;
  double *v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_glowClippingView);
  if (v1)
  {
    v2 = (double *)(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_customCornerRadius);
    OUTLINED_FUNCTION_2_0();
    objc_msgSend(v1, sel__setContinuousCornerRadius_, *v2);
  }
  OUTLINED_FUNCTION_32();
}

void ParticipantMonogramView.customCornerRadius.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ParticipantMonogramView.customCornerRadius.modify()
{
  char v0;

  OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
    ParticipantMonogramView.customCornerRadius.didset();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for ParticipantMonogramView.delegate : ParticipantMonogramView@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for ParticipantMonogramView.delegate : ParticipantMonogramView(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t ParticipantMonogramView.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return MEMORY[0x1C3B752C0](v0);
}

void ParticipantMonogramView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void (*ParticipantMonogramView.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

uint64_t ParticipantMonogramView.participantMonogramViewLayout.getter()
{
  OUTLINED_FUNCTION_1_7();
  return swift_retain();
}

void ParticipantMonogramView.participantMonogramViewLayout.setter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_35_29();
  OUTLINED_FUNCTION_32();
}

void ParticipantMonogramView.participantMonogramViewLayout.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ParticipantMonogramView.__allocating_init(colorStyle:)()
{
  unsigned __int8 *v0;

  OUTLINED_FUNCTION_16_1();
  ParticipantMonogramView.init(colorStyle:)(v0);
  OUTLINED_FUNCTION_0();
}

char *ParticipantMonogramView.init(colorStyle:)(unsigned __int8 *a1)
{
  char *v1;
  objc_class *v3;
  int v4;
  uint64_t v5;
  objc_class *ObjCClassFromMetadata;
  id v7;
  char *v8;
  uint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String v25;
  char *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t (*v46)(void);
  char *v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  char v54;
  id v55;
  id v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[4];
  objc_super v84;
  Swift::String v85;

  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v4 = *a1;
  v5 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_titleLabelContainer;
  OUTLINED_FUNCTION_23_52();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v7 = objc_allocWithZone(ObjCClassFromMetadata);
  v8 = v1;
  *(_QWORD *)&v1[v5] = OUTLINED_FUNCTION_2_11((uint64_t)v8, sel_init);
  v9 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_subtitleLabelContainer;
  *(_QWORD *)&v8[v9] = OUTLINED_FUNCTION_50_26(objc_allocWithZone(ObjCClassFromMetadata));
  v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_isInRoster] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_customCornerRadius] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_delegate]);
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_participantMonogramViewLayout] = 0;
  if (one-time initialization token for shared != -1)
    swift_once();
  v10 = v4;
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 320))() & 1) != 0 || v4)
  {
    *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_glowClippingView] = 0;
    *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_glowView] = 0;
  }
  else
  {
    v11 = OUTLINED_FUNCTION_50_26(objc_allocWithZone(MEMORY[0x1E0DC3F10]));
    v12 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_glowClippingView;
    *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_glowClippingView] = v11;
    if (v11)
    {
      v13 = (void *)objc_opt_self();
      v14 = v11;
      v15 = objc_msgSend(v13, sel_clearColor);
      OUTLINED_FUNCTION_19_14((uint64_t)v15, sel_setBackgroundColor_);

      v11 = *(id *)&v8[v12];
    }
    if (v11)
      OUTLINED_FUNCTION_40_3(v11, sel_setClipsToBounds_);
    specialized static UIImage.image(named:)(6);
    v17 = v16;
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v16);

    *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_glowView] = v18;
    if (v18)
      objc_msgSend(v18, sel_setAlpha_, 0.2);
  }
  LOBYTE(v83[0]) = v4;
  v19 = objc_allocWithZone((Class)type metadata accessor for AudioVisualizationView());
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_audioVisualizationView] = AudioVisualizationView.init(colorStyle:)((unsigned __int8 *)v83);
  LOBYTE(v83[0]) = v4;
  v20 = objc_allocWithZone((Class)type metadata accessor for ParticipantContactView());
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_contactView] = ParticipantContactView.init(colorStyle:)((unsigned __int8 *)v83);
  v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_colorStyle] = v4;
  v21 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v85._object = (void *)0xE000000000000000;
  v22._object = (void *)0x80000001BD683820;
  v22._countAndFlagsBits = 0xD000000000000015;
  v23.value._countAndFlagsBits = 0x61737265766E6F43;
  v23.value._object = (void *)0xEF74694B6E6F6974;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v85._countAndFlagsBits = 0;
  v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v85);

  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_ringButton] = OUTLINED_FUNCTION_50_26(objc_allocWithZone(MEMORY[0x1E0DC3518]));
  v84.receiver = v8;
  v84.super_class = v3;
  v26 = (char *)objc_msgSendSuper2(&v84, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v27 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_ringButton;
  v28 = *(void **)&v26[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_ringButton];
  v83[3] = v3;
  v83[0] = v26;
  v29 = v26;
  v30 = v28;
  UIButton.add(target:action:)((uint64_t)v83, (uint64_t)sel_didTapRingButton);

  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v83, &demangling cache variable for type metadata for Any?);
  outlined bridged method (mbnnn) of @objc UIButton.setTitle(_:for:)(v25._countAndFlagsBits, (uint64_t)v25._object, 0, *(void **)&v26[v27]);
  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0x74747542676E6972, 0xEA00000000006E6FLL, *(void **)&v26[v27]);
  v31 = objc_msgSend(*(id *)&v26[v27], sel_titleLabel);
  if (v31)
  {
    v32 = v31;
    if (one-time initialization token for ringButton != -1)
      v31 = (id)swift_once();
    OUTLINED_FUNCTION_25_1((uint64_t)v31, sel_setFont_);

  }
  v33 = one-time initialization token for ringButtonColor;
  v34 = *(id *)&v26[v27];
  v35 = v34;
  if (v33 != -1)
    v34 = (id)swift_once();
  OUTLINED_FUNCTION_25_1((uint64_t)v34, sel_setBackgroundColor_);

  v36 = *(void **)&v26[v27];
  objc_opt_self();
  v37 = v36;
  v38 = OUTLINED_FUNCTION_2_11((uint64_t)v37, sel_whiteColor);
  objc_msgSend(v37, sel_setTitleColor_forState_, v38, 0);

  v81 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_glowView;
  v39 = *(void **)&v29[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_glowView];
  if (v39)
  {
    v40 = *(void **)&v29[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_glowClippingView];
    if (v40)
    {
      v37 = v39;
      v41 = v40;
      objc_msgSend(v41, sel_addSubview_, v37);
      objc_msgSend(v29, sel_addSubview_, v41);

    }
  }
  v42 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_titleLabelContainer;
  v43 = *(id *)&v29[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_titleLabelContainer];
  OUTLINED_FUNCTION_39_45();

  v44 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_subtitleLabelContainer;
  v45 = *(id *)&v29[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_subtitleLabelContainer];
  OUTLINED_FUNCTION_39_45();

  v82 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_audioVisualizationView;
  OUTLINED_FUNCTION_4_105();
  OUTLINED_FUNCTION_4_105();
  v80 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_contactView;
  OUTLINED_FUNCTION_4_105();
  OUTLINED_FUNCTION_4_105();
  OUTLINED_FUNCTION_4_105();
  v46 = *(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 320);
  v47 = v29;
  v48 = v46();
  if ((v48 & 1) != 0)
  {
    if (one-time initialization token for background != -1)
      swift_once();
    v49 = (id)static Colors.ParticipantViews.background;
  }
  else
  {
    v49 = OUTLINED_FUNCTION_2_11(v48, sel_clearColor);
  }
  v50 = v49;
  objc_msgSend(v47, sel_setBackgroundColor_, v49);

  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD000000000000016, 0x80000001BD683840, *(void **)&v29[v82]);
  OUTLINED_FUNCTION_45_35();
  v52 = v51;
  OUTLINED_FUNCTION_40_35();
  if (!v54)
    v53 = swift_once();
  OUTLINED_FUNCTION_25_1(v53, sel_setFont_);

  OUTLINED_FUNCTION_45_35();
  v56 = v55;
  OUTLINED_FUNCTION_40_35();
  if (!v54)
    v57 = swift_once();
  OUTLINED_FUNCTION_25_1(v57, sel_setFont_);

  OUTLINED_FUNCTION_45_35();
  if ((v10 & 1) != 0)
  {
    v59 = v58;
    OUTLINED_FUNCTION_40_35();
    if (!v54)
      v60 = swift_once();
    OUTLINED_FUNCTION_25_1(v60, sel_setTextColor_);

    objc_msgSend(*(id *)(*(_QWORD *)&v29[v44] + OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label), sel_setTextColor_, static Colors.ParticipantViews.overlayContent);
  }
  else
  {
    v61 = v58;
    OUTLINED_FUNCTION_40_35();
    if (!v54)
      v62 = swift_once();
    OUTLINED_FUNCTION_25_1(v62, sel_setTextColor_);

    OUTLINED_FUNCTION_45_35();
    v63 = one-time initialization token for subtitleLabel;
    v65 = v64;
    v66 = v65;
    if (v63 != -1)
      v65 = (id)swift_once();
    OUTLINED_FUNCTION_25_1((uint64_t)v65, sel_setTextColor_);

  }
  v67 = *(void **)&v29[v82];
  v68 = *(void **)&v29[v80];
  v69 = *(void **)&v29[v42];
  v70 = *(void **)&v29[v44];
  v71 = *(void **)&v29[v81];
  v72 = *(void **)&v26[v27];
  type metadata accessor for ParticipantMonogramViewLayout();
  swift_allocObject();
  v73 = v67;
  v74 = v68;
  v75 = v69;
  v76 = v70;
  v77 = v71;
  v78 = v72;
  OUTLINED_FUNCTION_18_64();
  ParticipantMonogramViewLayout.init(audioVisualizer:contactView:titleView:subtitleView:glowView:ringButton:)();

  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_35_29();
  return v47;
}

id ParticipantMonogramView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ParticipantMonogramView.init()()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  id v5;

  v1 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_titleLabelContainer;
  OUTLINED_FUNCTION_23_52();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v3 = OUTLINED_FUNCTION_27_42(ObjCClassFromMetadata);
  *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_53_3(v3);
  v4 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_subtitleLabelContainer;
  v5 = OUTLINED_FUNCTION_44_37();
  *(_QWORD *)(v0 + v4) = OUTLINED_FUNCTION_53_3(v5);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_isInRoster) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_customCornerRadius) = 0;
  OUTLINED_FUNCTION_40_4(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_delegate);
  OUTLINED_FUNCTION_47_20(OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_participantMonogramViewLayout);
  OUTLINED_FUNCTION_5_36();
  __break(1u);
}

void ParticipantMonogramView.__allocating_init(coder:)()
{
  void *v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  OUTLINED_FUNCTION_0();
}

void ParticipantMonogramView.init(coder:)()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  id v5;

  v1 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_titleLabelContainer;
  OUTLINED_FUNCTION_23_52();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v3 = OUTLINED_FUNCTION_27_42(ObjCClassFromMetadata);
  *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_53_3(v3);
  v4 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_subtitleLabelContainer;
  v5 = OUTLINED_FUNCTION_44_37();
  *(_QWORD *)(v0 + v4) = OUTLINED_FUNCTION_53_3(v5);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_isInRoster) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_customCornerRadius) = 0;
  OUTLINED_FUNCTION_40_4(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_delegate);
  OUTLINED_FUNCTION_47_20(OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_participantMonogramViewLayout);
  OUTLINED_FUNCTION_5_36();
  __break(1u);
}

id ParticipantMonogramView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantMonogramView.init(frame:)()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  id v5;

  v1 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_titleLabelContainer;
  OUTLINED_FUNCTION_23_52();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v3 = OUTLINED_FUNCTION_27_42(ObjCClassFromMetadata);
  *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_53_3(v3);
  v4 = OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_subtitleLabelContainer;
  v5 = OUTLINED_FUNCTION_44_37();
  *(_QWORD *)(v0 + v4) = OUTLINED_FUNCTION_53_3(v5);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_isInRoster) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_customCornerRadius) = 0;
  OUTLINED_FUNCTION_40_4(v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_delegate);
  OUTLINED_FUNCTION_47_20(OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_participantMonogramViewLayout);
  OUTLINED_FUNCTION_5_36();
  __break(1u);
}

Swift::Void __swiftcall ParticipantMonogramView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  ParticipantMonogramView._layout()();
}

uint64_t ParticipantMonogramView._layout()()
{
  char *v0;
  uint64_t result;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  char *v6;
  char *v7;
  CGRect v8;
  CGRect v9;
  __C::CGRect v10;

  objc_msgSend(v0, sel_bounds);
  result = CGRectIsInfinite(v8);
  if ((result & 1) == 0)
  {
    objc_msgSend(v0, sel_bounds);
    result = CGRectIsEmpty(v9);
    if ((result & 1) == 0)
    {
      objc_msgSend(v0, sel_bounds);
      v3 = v2;
      v5 = v4;
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_glowClippingView], sel_setFrame_, 0.0, 0.0);
      v6 = &v0[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_participantMonogramViewLayout];
      result = swift_beginAccess();
      if (*(_QWORD *)v6)
      {
        v7 = &v0[OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_isInRoster];
        swift_beginAccess();
        LOBYTE(v7) = *v7;
        swift_retain();
        v10.origin.x = 0.0;
        v10.origin.y = 0.0;
        v10.size.width = v3;
        v10.size.height = v5;
        ParticipantMonogramViewLayout.layout(in:inRoster:)(v10, (Swift::Bool)v7);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t ParticipantMonogramView.didTapRingButton()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v1);
  if (result)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t ParticipantMonogramView.configure(with:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  char *v18;
  char *v19;
  char v20;
  id v21;
  id v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35[7];

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v29 = *(_QWORD *)(a1 + 24);
  v30 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v31 = *(unsigned __int8 *)(a1 + 64);
  v32 = *(unsigned __int8 *)(a1 + 65);
  v27 = *(_QWORD *)(a1 + 72);
  v28 = *(_QWORD *)(a1 + 40);
  v26 = *(_QWORD *)(a1 + 88);
  v33 = *(_QWORD *)(a1 + 80);
  v34 = *(_QWORD *)(a1 + 96);
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_glowView))
    goto LABEL_8;
  if (v6 >> 62)
  {
    OUTLINED_FUNCTION_22_3();
    v7 = (void *)_CocoaArrayWrapper.endIndex.getter();
    if (v7)
      goto LABEL_4;
  }
  else
  {
    v7 = *(void **)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_22_3();
    if (v7)
    {
LABEL_4:
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v6 & 0xC000000000000001) == 0, v6);
      if ((v6 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1C3B73D18](0, v6);
      else
        v8 = *(id *)(v6 + 32);
      v7 = v8;
    }
  }
  v9 = OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_19_14(v9, sel_setTintColor_);

LABEL_8:
  v10 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_audioVisualizationView);
  v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v12 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x90);
  v13 = OUTLINED_FUNCTION_22_3();
  v12(v13);
  v14 = OUTLINED_FUNCTION_22_3();
  GradientView.colors.setter(v14);
  v35[0] = (uint64_t)v2;
  v35[1] = v30;
  v35[2] = v3;
  v35[3] = v29;
  v35[4] = v4;
  v35[5] = v28;
  v35[6] = v5;
  v15 = v2;
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_26_22();
  ParticipantContactView.contactDetails.setter(v35);
  if (v31)
  {
    v16 = OUTLINED_FUNCTION_18_4(v10, sel_setHidden_);
    (*(void (**)(id))((*v11 & *v10) + 0xA0))(v16);
  }
  else
  {
    (*(void (**)(void))((*v11 & *v10) + 0xA8))();
    OUTLINED_FUNCTION_40_3(v10, sel_setHidden_);
  }
  v17 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_ringButton);
  if (v32)
  {
    OUTLINED_FUNCTION_18_4(v17, sel_setHidden_);
    v18 = *(char **)(v1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_titleLabelContainer);
    ParticipantViewLabelContainerView.isCentered.setter(0);
    v19 = *(char **)(v1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_subtitleLabelContainer);
    v20 = 0;
  }
  else
  {
    OUTLINED_FUNCTION_40_3(v17, sel_setHidden_);
    v18 = *(char **)(v1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_titleLabelContainer);
    ParticipantViewLabelContainerView.isCentered.setter(1);
    v19 = *(char **)(v1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_subtitleLabelContainer);
    v20 = 1;
  }
  ParticipantViewLabelContainerView.isCentered.setter(v20);
  if (v33)
  {
    v21 = *(id *)&v18[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label];
    outlined bridged method (mbgnn) of @objc UILabel.text.setter(v27, v33, v21);

    OUTLINED_FUNCTION_18_4(v18, sel_setHidden_);
    if (v34)
    {
      v22 = *(id *)&v19[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label];
      outlined bridged method (mbgnn) of @objc UILabel.text.setter(v26, v34, v22);

      v23 = HIBYTE(v34) & 0xF;
      if ((v34 & 0x2000000000000000) == 0)
        v23 = v26 & 0xFFFFFFFFFFFFLL;
      v24 = v23 == 0;
    }
    else
    {
      v24 = 1;
    }
  }
  else
  {
    v24 = 1;
    OUTLINED_FUNCTION_40_3(v18, sel_setHidden_);
  }
  objc_msgSend(v19, sel_setHidden_, v24);
  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label], sel_sizeToFit);
  objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC15ConversationKit33ParticipantViewLabelContainerView_label], sel_sizeToFit);
  return ParticipantMonogramView._layout()();
}

Swift::Void __swiftcall ParticipantMonogramView.reset()()
{
  uint64_t v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                          + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_audioVisualizationView))
                    + 0xA8))();
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall ParticipantMonogramView.updateAudioVisualization(with:)(Swift::Float with)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_audioVisualizationView);
  if ((objc_msgSend(v3, sel_isHidden) & 1) == 0)
    (*(void (**)(float))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x78))(with);
}

id ParticipantMonogramView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ParticipantMonogramView.ViewModel.hashValue.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_115();
  v0 = OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_29_47(v0);
  Hasher._finalize()();
  OUTLINED_FUNCTION_46_27();
}

uint64_t ParticipantMonogramView.ViewModel.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  unint64_t v4;
  id v5;
  uint64_t v6;
  Swift::UInt8 v7;
  uint64_t v9;
  Swift::UInt8 v10;
  Swift::UInt8 v11;
  uint64_t v12;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 56);
  v10 = *(_BYTE *)(v1 + 64);
  v11 = *(_BYTE *)(v1 + 65);
  v12 = *(_QWORD *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 96);
  OUTLINED_FUNCTION_33_1();
  String.hash(into:)();
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_22_3();
  String.hash(into:)();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_8_8();
  String.hash(into:)();
  OUTLINED_FUNCTION_2_1();
  if (!v3)
    goto LABEL_4;
  v5 = v3;
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_22_3();
  OUTLINED_FUNCTION_8_8();
  v6 = String.count.getter();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_54_1();

  if ((unint64_t)(v6 - 1) < 2)
    v7 = 1;
  else
LABEL_4:
    v7 = 0;
  OUTLINED_FUNCTION_17_57(v7);
  OUTLINED_FUNCTION_79_1();
  specialized Array<A>.hash(into:)(a1, v4);
  OUTLINED_FUNCTION_25();
  Hasher._combine(_:)(v10);
  Hasher._combine(_:)(v11);
  if (!v12)
  {
    OUTLINED_FUNCTION_17_57(0);
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_17_57(1u);
  OUTLINED_FUNCTION_124();
  String.hash(into:)();
  swift_bridgeObjectRelease_n();
  if (!v9)
  {
LABEL_9:
    OUTLINED_FUNCTION_17_57(0);
    return swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_17_57(1u);
  OUTLINED_FUNCTION_124();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ParticipantMonogramView.ViewModel()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_115();
  v0 = Hasher.init(_seed:)();
  OUTLINED_FUNCTION_29_47(v0);
  Hasher._finalize()();
  OUTLINED_FUNCTION_46_27();
}

void specialized Array<A>.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::UInt v5;
  uint64_t v6;

  OUTLINED_FUNCTION_16_64(a1, a2);
  if (v2)
  {
    v4 = v3 + 64;
    do
    {
      v5 = *(unsigned __int8 *)(v4 - 16);
      v6 = *(_QWORD *)(v4 - 8);
      swift_bridgeObjectRetain();
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v6);
      String.hash(into:)();
      Hasher._combine(_:)(v5);
      Hasher._combine(_:)(v6 == 0);
      swift_bridgeObjectRelease();
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v6);
      v4 += 40;
      --v2;
    }
    while (v2);
  }
}

{
  uint64_t v2;
  uint64_t v3;
  Swift::UInt *v4;
  Swift::UInt v5;

  OUTLINED_FUNCTION_16_64(a1, a2);
  if (v2)
  {
    v4 = (Swift::UInt *)(v3 + 40);
    do
    {
      v5 = *v4;
      Hasher._combine(_:)(*(v4 - 1));
      Hasher._combine(_:)(v5);
      v4 += 2;
      --v2;
    }
    while (v2);
  }
}

void specialized Array<A>.hash(into:)(uint64_t a1, unint64_t a2)
{
  unint64_t v3;
  Swift::UInt v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;

  v3 = a2 >> 62;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  Hasher._combine(_:)(v4);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v5)
      return;
  }
  else
  {
    v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      return;
  }
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v5; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1C3B73D18](i, a2);
      else
        v7 = *(id *)(a2 + 8 * i + 32);
      v8 = v7;
      NSObject.hash(into:)();

    }
  }
}

unint64_t lazy protocol witness table accessor for type ParticipantMonogramView.ViewModel and conformance ParticipantMonogramView.ViewModel()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantMonogramView.ViewModel and conformance ParticipantMonogramView.ViewModel;
  if (!lazy protocol witness table cache variable for type ParticipantMonogramView.ViewModel and conformance ParticipantMonogramView.ViewModel)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantMonogramView.ViewModel, &type metadata for ParticipantMonogramView.ViewModel);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantMonogramView.ViewModel and conformance ParticipantMonogramView.ViewModel);
  }
  return result;
}

void sub_1BD2E30AC(char *a1)
{
  ParticipantMonogramView.isInRoster.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2E30D0(double *a1)
{
  ParticipantMonogramView.customCornerRadius.setter(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of ParticipantMonogramViewDelegate.participantViewDidTapRing()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for ParticipantMonogramView()
{
  return objc_opt_self();
}

uint64_t method lookup function for ParticipantMonogramView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantMonogramView.__allocating_init(colorStyle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t destroy for ParticipantMonogramView.ViewModel(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 80);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ParticipantMonogramView.ViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v9;
    v11 = *(_QWORD *)(a2 + 88);
    v12 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v13;
  }
  return a1;
}

uint64_t assignWithCopy for ParticipantMonogramView.ViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v7 = (_OWORD *)(a1 + 72);
  v8 = (_OWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(a1 + 72, &demangling cache variable for type metadata for (title: String, subtitle: String?));
      v10 = *(_OWORD *)(a2 + 88);
      *v7 = *v8;
      *(_OWORD *)(a1 + 88) = v10;
    }
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 88);
    *v7 = *v8;
    *(_OWORD *)(a1 + 88) = v11;
  }
  return a1;
}

void *__swift_memcpy104_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t assignWithTake for ParticipantMonogramView.ViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  if (!*(_QWORD *)(a1 + 80))
    goto LABEL_5;
  v8 = *(_QWORD *)(a2 + 80);
  if (!v8)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(a1 + 72, &demangling cache variable for type metadata for (title: String, subtitle: String?));
LABEL_5:
    v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    return a1;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantMonogramView.ViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticipantMonogramView.ViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticipantMonogramView.ViewModel()
{
  return &type metadata for ParticipantMonogramView.ViewModel;
}

void OUTLINED_FUNCTION_39_45()
{
  ParticipantViewLabelContainerView.isCentered.setter(0);
}

CABasicAnimation __swiftcall CABasicAnimation.animationCopy()()
{
  void *v0;
  void *v1;
  uint32_t v2;
  objc_class *v3;
  id v4;
  CABasicAnimation result;

  objc_msgSend(v0, sel_copy);
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  type metadata accessor for CABasicAnimation();
  if (swift_dynamicCast())
  {
    objc_msgSend(v4, sel_setDelegate_, 0);
    v3 = (objc_class *)v4;
  }
  else
  {
    v3 = (objc_class *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  result.super.super._attr = v1;
  result.super.super.super.isa = v3;
  result.super.super._flags = v2;
  return result;
}

unint64_t type metadata accessor for CABasicAnimation()
{
  unint64_t result;

  result = lazy cache variable for type metadata for CABasicAnimation;
  if (!lazy cache variable for type metadata for CABasicAnimation)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CABasicAnimation);
  }
  return result;
}

uint64_t PreCallStatusViewModel.statusView.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v0 + 16);
}

void PreCallStatusViewModel.statusView.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void (*PreCallStatusViewModel.statusView.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_2_0();
  v4 = MEMORY[0x1C3B752C0](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return PreCallStatusViewModel.statusView.modify;
}

void PreCallStatusViewModel.statusView.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    OUTLINED_FUNCTION_10();
  }
  free(v3);
}

uint64_t PreCallStatusViewModel.__allocating_init(preCallContextProvider:)(uint64_t a1)
{
  return PreCallStatusViewModel.__allocating_init(preCallContextProvider:)(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized PreCallStatusViewModel.__allocating_init(preCallContextProvider:));
}

uint64_t PreCallStatusViewModel.init(preCallContextProvider:)(uint64_t a1)
{
  return PreCallStatusViewModel.__allocating_init(preCallContextProvider:)(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))specialized PreCallStatusViewModel.init(preCallContextProvider:));
}

uint64_t PreCallStatusViewModel.__allocating_init(preCallContextProvider:)(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = __swift_mutable_project_boxed_opaque_existential_1(a1, v6);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  (*(void (**)(uint64_t))(v9 + 16))(v3);
  v10 = a2(v3, v2, v6, v7);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v10;
}

Swift::Void __swiftcall PreCallStatusViewModel.startObservation()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12[2];

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0_7();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<PreCallControlsContext?, Never>, NSRunLoop>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0[7];
  v9 = v0[8];
  __swift_project_boxed_opaque_existential_1(v0 + 4, v8);
  v12[1] = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  v12[0] = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v10 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<PreCallControlsContext?, Never>);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type AnyPublisher<PreCallControlsContext?, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<PreCallControlsContext?, Never>);
  _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_1(&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
  Publisher.receive<A>(on:options:)();
  outlined destroy of NSRunLoop.SchedulerOptions?(v1);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  lazy protocol witness table accessor for type Published<Bool>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<PreCallControlsContext?, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<PreCallControlsContext?, Never>, NSRunLoop>);
  v11 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v2[9] = v11;
  swift_release();
}

uint64_t closure #1 in PreCallStatusViewModel.startObservation()(uint64_t a1)
{
  void *v1;
  int v2;
  uint64_t result;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(a1 + 8);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (v2 != 255)
    {
      outlined copy of PreCallControlsContext(v1);
      if (one-time initialization token for preCall != -1)
        swift_once();
      v4 = type metadata accessor for Logger();
      __swift_project_value_buffer(v4, (uint64_t)&static Logger.preCall);
      outlined copy of PreCallControlsContext(v1);
      outlined copy of PreCallControlsContext(v1);
      v5 = Logger.logObject.getter();
      v6 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        v8 = swift_slowAlloc();
        *(_DWORD *)v7 = 136315138;
        v11 = v8;
        v12 = (uint64_t)v1;
        v13 = v2 & 1;
        outlined copy of PreCallControlsContext(v1);
        v9 = String.init<A>(reflecting:)();
        v12 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v11);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined consume of PreCallControlsContext?(v1, v2);
        outlined consume of PreCallControlsContext?(v1, v2);
        _os_log_impl(&dword_1BD004000, v5, v6, "PreCallStatusViewModel: preCallContext: %s", v7, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v8, -1, -1);
        MEMORY[0x1C3B751B8](v7, -1, -1);
      }
      else
      {
        outlined consume of PreCallControlsContext?(v1, v2);
        outlined consume of PreCallControlsContext?(v1, v2);
      }

      v12 = (uint64_t)v1;
      v13 = v2 & 1;
      PreCallStatusViewModel.updateStatus(preCallContext:)();
    }
    PreCallStatusViewModel.clearStatus()();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall PreCallStatusViewModel.clearStatus()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t ObjectType;

  v1 = v0;
  if (one-time initialization token for preCall != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.preCall);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "PreCallStatusViewModel: clear status", v5, 2u);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  OUTLINED_FUNCTION_2_0();
  if (MEMORY[0x1C3B752C0](v1 + 16))
  {
    v6 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(1, ObjectType, v6);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_9_0();
}

void PreCallStatusViewModel.updateStatus(preCallContext:)()
{
  uint64_t v0;

  PreCallControlsContext.labels.getter((uint64_t)&v0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_22_59();
}

void sub_1BD2E3EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v18;
  char v19;
  uint64_t v20;

  if (a1)
  {
    v20 = OUTLINED_FUNCTION_7_93();
    a18 = v19;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v18 + 40))(&a14, v20, v18);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_22_59();
}

void sub_1BD2E3EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1)
  {
    v12 = OUTLINED_FUNCTION_7_93();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32))(v11, a10, v12, v10);
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_22_59();
}

void sub_1BD2E3F10(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;

  if (a1)
  {
    v3 = OUTLINED_FUNCTION_7_93();
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 16))(0, v3, v1);
    OUTLINED_FUNCTION_2_99();
    OUTLINED_FUNCTION_10();
  }
  else
  {
    OUTLINED_FUNCTION_2_99();
  }

}

uint64_t PreCallControlsContext.labels.getter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  int v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;

  v3 = *(void **)v1;
  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
  {
    v4 = objc_msgSend(v3, sel_remoteMembers);
    OUTLINED_FUNCTION_12_76();
    OUTLINED_FUNCTION_20_61(&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
    v5 = OUTLINED_FUNCTION_14_81();

    v6 = specialized Set.count.getter(v5);
    if (v6)
    {
      v7 = v6;
      v51 = a1;
      v52 = (uint64_t)v3;
      OUTLINED_FUNCTION_18_65();
      if ((v5 & 0xC000000000000001) != 0)
      {
        result = OUTLINED_FUNCTION_8_82();
        v10 = 1;
      }
      else
      {
        result = specialized _NativeSet.startIndex.getter(v5);
        v10 = v17 & 1;
      }
      v58 = result;
      v59 = v9;
      v60 = v10;
      if ((v7 & 0x8000000000000000) == 0)
      {
        do
        {
          v18 = OUTLINED_FUNCTION_0_117();
          specialized Set.subscript.getter(v18, v19, v20, v21);
          v23 = v22;
          v24 = objc_msgSend(v22, sel_handle);

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          OUTLINED_FUNCTION_5_99();
          OUTLINED_FUNCTION_10_85();
          result = specialized ContiguousArray._endMutation()();
          if ((v5 & 0xC000000000000001) != 0)
          {
            if ((v60 & 1) == 0)
              goto LABEL_32;
            if (OUTLINED_FUNCTION_21_61())
              swift_isUniquelyReferenced_nonNull_native();
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>.Index);
            OUTLINED_FUNCTION_11_77();
            v37 = OUTLINED_FUNCTION_3_99();
            v29 = OUTLINED_FUNCTION_17_58(v37, v38, v51, v52);
          }
          else
          {
            v25 = OUTLINED_FUNCTION_0_117();
            specialized _NativeSet.index(after:)(v25, v26, v27, v28);
            v29 = OUTLINED_FUNCTION_1_116();
          }
          --v7;
        }
        while (v7);
LABEL_28:
        OUTLINED_FUNCTION_16_65(v29, v30, v31, v32, v33, v34, v35, v36, v51, v52, v54, v55, v56, v57, v58, v59, v60);
        v3 = v53;
        goto LABEL_29;
      }
      __break(1u);
      goto LABEL_31;
    }
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_29:
    v50 = OUTLINED_FUNCTION_13_78();
    outlined consume of PreCallControlsContext(v3);
    swift_bridgeObjectRelease();
    return v50;
  }
  v11 = objc_msgSend(v3, sel_handles);
  OUTLINED_FUNCTION_12_76();
  OUTLINED_FUNCTION_20_61(&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
  v12 = OUTLINED_FUNCTION_14_81();

  v13 = specialized Set.count.getter(v12);
  if (!v13)
    goto LABEL_8;
  v14 = v13;
  v51 = a1;
  v52 = (uint64_t)v3;
  OUTLINED_FUNCTION_18_65();
  if ((v12 & 0xC000000000000001) != 0)
  {
    result = OUTLINED_FUNCTION_8_82();
    v16 = 1;
  }
  else
  {
    result = specialized _NativeSet.startIndex.getter(v12);
    v16 = v39 & 1;
  }
  v58 = result;
  v59 = v15;
  v60 = v16;
  if ((v14 & 0x8000000000000000) == 0)
  {
    do
    {
      v40 = OUTLINED_FUNCTION_0_117();
      specialized Set.subscript.getter(v40, v41, v42, v43);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      OUTLINED_FUNCTION_5_99();
      OUTLINED_FUNCTION_10_85();
      result = specialized ContiguousArray._endMutation()();
      if ((v12 & 0xC000000000000001) != 0)
      {
        if ((v60 & 1) == 0)
          goto LABEL_33;
        if (OUTLINED_FUNCTION_21_61())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
        OUTLINED_FUNCTION_11_77();
        v48 = OUTLINED_FUNCTION_3_99();
        v29 = OUTLINED_FUNCTION_17_58(v48, v49, v51, v52);
      }
      else
      {
        v44 = OUTLINED_FUNCTION_0_117();
        specialized _NativeSet.index(after:)(v44, v45, v46, v47);
        v29 = OUTLINED_FUNCTION_1_116();
      }
      --v14;
    }
    while (v14);
    goto LABEL_28;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t PreCallStatusViewModel.deinit()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return v0;
}

uint64_t PreCallStatusViewModel.__deallocating_deinit()
{
  PreCallStatusViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t PreCallControlsContext.getLabel(from:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  char *v29;
  id v30;
  id v31;
  Class isa;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  Class v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = type metadata accessor for PersonNameComponents();
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultSettings);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97470]), sel_initWithSettings_, v7);

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for TUContactsDataProviderFetchRequest);
  v9 = swift_bridgeObjectRetain();
  v10 = TUContactsDataProviderFetchRequest.__allocating_init(handles:isConversation:)(v9, 1);
  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_contactStore);

  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD228]), sel_initWithContactsDataSource_, v12);
  v14 = objc_msgSend(v13, sel_executeFetchRequest_, v10);

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v15)
    goto LABEL_20;
  v59 = MEMORY[0x1E0DEE9D8];
  result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v15 & 0x8000000000000000) == 0)
  {
    v45 = v14;
    v46 = (uint64_t)v10;
    v47 = a1;
    v17 = 0;
    v48 = v8;
    v49 = a2 & 0xC000000000000001;
    v50 = v15;
    v51 = a2;
    do
    {
      if (v49)
        v18 = (id)MEMORY[0x1C3B73D18](v17, a2);
      else
        v18 = *(id *)(a2 + 8 * v17 + 32);
      v19 = one-time initialization token for faceTime;
      v20 = v18;
      if (v19 != -1)
        swift_once();
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:nickname:)((uint64_t)v20, 0, 0, v21, v22, v23, v24, v25, v44, (uint64_t)v45, v46, v47, (uint64_t)v48, v49, v50, v51, v52, v53, v54,
        (uint64_t)v20);
      v26 = v56;
      v54 = v58;
      v27 = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      PersonNameComponents.init()();
      if (v26)
      {
        v28 = objc_msgSend(v27, sel_givenName);
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        v29 = v6;

        PersonNameComponents.givenName.setter();
        v30 = objc_msgSend(v27, sel_familyName);
        static String._unconditionallyBridgeFromObjectiveC(_:)();

      }
      else
      {
        PersonNameComponents.givenName.setter();
        v29 = v6;
      }
      PersonNameComponents.familyName.setter();
      if (one-time initialization token for initials != -1)
        swift_once();
      swift_beginAccess();
      v31 = (id)static NSPersonNameComponentsFormatter.initials;
      isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      v33 = objc_msgSend(v31, sel_stringFromPersonNameComponents_, isa);

      v34 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      v36 = v35;

      v6 = v29;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v29, v53);
      v56 = v34;
      v57 = v36;
      lazy protocol witness table accessor for type String and conformance String();
      StringProtocol.localizedUppercase.getter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v37 = v55;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v26)
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel__initWithHandle_, v37);

      ++v17;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      a2 = v51;
    }
    while (v50 != v17);
    a1 = v47;
    v8 = v48;
    v14 = v45;
LABEL_20:
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
    v38 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setContacts_, v38);

    v39 = objc_msgSend(v14, sel_localizedName);
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v42 = v41;

    *(_QWORD *)a1 = objc_msgSend(v8, sel_view);
    *(int64x2_t *)(a1 + 8) = vdupq_n_s64(0x4052000000000000uLL);
    *(_QWORD *)(a1 + 24) = 0;
    *(_BYTE *)(a1 + 32) = 0;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    v43._countAndFlagsBits = v40;
    v43._object = v42;
    NSMutableAttributedString.__allocating_init(string:)(v43);
  }
  __break(1u);
  return result;
}

id TUContactsDataProviderFetchRequest.__allocating_init(handles:isConversation:)(uint64_t a1, char a2)
{
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithHandles_isConversation_, isa, a2 & 1);

  return v5;
}

_QWORD *specialized PreCallStatusViewModel.__allocating_init(preCallContextProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v11 = specialized PreCallStatusViewModel.init(preCallContextProvider:)((uint64_t)v9, v10, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a3);
  return v11;
}

_QWORD *specialized PreCallStatusViewModel.init(preCallContextProvider:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;

  a2[7] = a3;
  a2[8] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2 + 4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  a2[3] = 0;
  swift_unknownObjectWeakInit();
  a2[9] = 0;
  return a2;
}

uint64_t sub_1BD2E4B20()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PreCallStatusViewModel.startObservation()(uint64_t a1)
{
  return closure #1 in PreCallStatusViewModel.startObservation()(a1);
}

uint64_t _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_1(uint64_t *a1, unint64_t *a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    _sSo8NSObjectCMaTm_0(255, a2);
    OUTLINED_FUNCTION_52_0();
  }
  return result;
}

uint64_t type metadata accessor for PreCallStatusViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for PreCallStatusViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PreCallStatusViewModel.__allocating_init(preCallContextProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void outlined consume of PreCallControlsContext?(id a1, unsigned __int8 a2)
{
  if (a2 != 255)
    outlined consume of PreCallControlsContext(a1);
}

uint64_t key path getter for VideoMessageController.state : VideoMessageController@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xF0))();
  *a2 = result;
  return result;
}

uint64_t key path setter for VideoMessageController.state : VideoMessageController()
{
  return VideoMessageController.state.setter();
}

uint64_t VideoMessageController.state.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  return v1;
}

void sub_1BD2E4CA4()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_109_1(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2E4CD0()
{
  VideoMessageController.state.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t VideoMessageController.state.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return static Published.subscript.setter();
}

void VideoMessageController.$state.getter()
{
  VideoMessageController.$state.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22VideoMessageController__state, &demangling cache variable for type metadata for Published<VideoMessageController.State>);
}

uint64_t VideoMessageController.$state.setter(uint64_t a1)
{
  return VideoMessageController.$state.setter(a1, (uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22VideoMessageController__state, &demangling cache variable for type metadata for Published<VideoMessageController.State>);
}

uint64_t key path setter for VideoMessageController.mostRecentActiveConversation : VideoMessageController(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[40];

  outlined init with copy of Conversation?(a1, (uint64_t)v4, &demangling cache variable for type metadata for Conversation?);
  return (*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x128))(v4);
}

void VideoMessageController.mostRecentActiveConversation.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_mostRecentActiveConversation;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of Conversation?(v3, a1, &demangling cache variable for type metadata for Conversation?);
  OUTLINED_FUNCTION_32();
}

void VideoMessageController.mostRecentActiveConversation.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_50();
  outlined assign with take of Conversation?(v0, v1);
  OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_32();
}

uint64_t outlined assign with take of Conversation?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Conversation?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void VideoMessageController.mostRecentActiveConversation.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for VideoMessageController.mostRecentLocalHandle : VideoMessageController(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x140);
  v4 = *a1;
  return v3(v2);
}

void VideoMessageController.mostRecentLocalHandle.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_mostRecentLocalHandle);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  OUTLINED_FUNCTION_32();
}

void VideoMessageController.mostRecentLocalHandle.setter(void *a1)
{
  ConversationHUDControlsView.ephemeralAlertTimer.setter(a1, &OBJC_IVAR____TtC15ConversationKit22VideoMessageController_mostRecentLocalHandle);
}

void VideoMessageController.mostRecentLocalHandle.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for VideoMessageController.currentVideoMessagePlayerViewModel : VideoMessageController(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x158);
  v4 = *a1;
  return v3(v2);
}

uint64_t VideoMessageController.currentVideoMessagePlayerViewModel.didset()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  void *v11;
  _BYTE v13[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.Filter<Published<VideoMessageController.State>.Publisher>);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))(v7);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<VideoMessageController.State>.Publisher and conformance Published<A>.Publisher, (uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  Publisher.filter(_:)();
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  swift_allocObject();
  v10 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_currentVideoMessagePlayerViewModel;
  swift_beginAccess();
  v11 = (void *)MEMORY[0x1C3B752C0](v10);
  swift_unknownObjectWeakInit();

  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.Filter<Published<VideoMessageController.State>.Publisher> and conformance Publishers.Filter<A>, (uint64_t *)&demangling cache variable for type metadata for Publishers.Filter<Published<VideoMessageController.State>.Publisher>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

void closure #1 in VideoMessageController.currentVideoMessagePlayerViewModel.didset(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BD2E526C()
{
  char v0;

  v0 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t closure #2 in VideoMessageController.currentVideoMessagePlayerViewModel.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v11 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = partial apply for closure #1 in closure #2 in VideoMessageController.currentVideoMessagePlayerViewModel.didset;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_95;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v10, v6, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void closure #1 in closure #2 in VideoMessageController.currentVideoMessagePlayerViewModel.didset(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = v2;
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v2) + 0xF8))(4);

  }
}

void VideoMessageController.currentVideoMessagePlayerViewModel.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD2E561C()
{
  OUTLINED_FUNCTION_32();
}

void VideoMessageController.currentVideoMessagePlayerViewModel.setter(void *a1)
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  VideoMessageController.currentVideoMessagePlayerViewModel.didset();

  OUTLINED_FUNCTION_9_0();
}

void VideoMessageController.currentVideoMessagePlayerViewModel.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit22VideoMessageController_currentVideoMessagePlayerViewModel;
  v3[4] = v1;
  v3[5] = v4;
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void (*sub_1BD2E56B8(uint64_t a1))(id **a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return VideoMessageController.currentVideoMessagePlayerViewModel.modify;
}

void VideoMessageController.currentVideoMessagePlayerViewModel.modify(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    VideoMessageController.currentVideoMessagePlayerViewModel.didset();
  }
  free(v3);
}

void VideoMessageController.isVideoSensitive.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void VideoMessageController.isVideoSensitive.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_isVideoSensitive);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void VideoMessageController.videoMessageSendSoundPlayer.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_videoMessageSendSoundPlayer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_videoMessageSendSoundPlayer) = a1;

}

uint64_t VideoMessageController.isInVideoMessageFlow.getter()
{
  _QWORD *v0;
  unsigned __int8 v1;

  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 872))() & 1) == 0)
    return 0;
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
  if (v1 > 9u)
    return 1;
  else
    return (0x1F8u >> v1) & 1;
}

uint64_t VideoMessageController.State.isInVideoMessageFlow.getter(unsigned __int8 a1)
{
  return (a1 > 9u) | (0x1F8u >> a1) & 1;
}

uint64_t VideoMessageController.updateState()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumTagSinglePayload;
  int v24;
  uint64_t (*v25)(void);
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v33 - v6;
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_ignoresStateUpdates) & 1) == 0)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))(result) & 1) != 0)
    {
      v15 = OBJC_IVAR____TtC15ConversationKit22VideoMessageController_latestVideoMessageSandboxURL;
      if (*(_QWORD *)((char *)v0
                     + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_latestVideoMessageSandboxURL)
        && (v16 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_currentRecordingUUID,
            swift_beginAccess(),
            outlined init with copy of Conversation?(v16, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?), v17 = type metadata accessor for UUID(), LODWORD(v16) = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v17), outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for UUID?), (_DWORD)v16 == 1))
      {
        v18 = 9;
      }
      else if ((*((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_sendingInProgress) & 1) != 0)
      {
        v18 = 8;
      }
      else if (*(_QWORD *)((char *)v0 + v15)
             && (v19 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_currentRecordingUUID,
                 swift_beginAccess(),
                 outlined init with copy of Conversation?(v19, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?), v20 = type metadata accessor for UUID(), LODWORD(v19) = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v20), outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?), (_DWORD)v19 != 1))
      {
        v18 = 7;
      }
      else
      {
        v21 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_currentRecordingUUID;
        swift_beginAccess();
        outlined init with copy of Conversation?(v21, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v22 = type metadata accessor for UUID();
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v22);
        outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        if (EnumTagSinglePayload == 1
          || *((_BYTE *)v0 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_hasActiveOrPendingRecordingSession) == 1)
        {
          outlined init with copy of Conversation?(v21, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          v24 = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v22);
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          if (v24 == 1
            && (*((_BYTE *)v0
                + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_hasActiveOrPendingRecordingSession) & 1) == 0)
          {
            if (*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_countdownSink))
            {
              v18 = 4;
            }
            else
            {
              v25 = *(uint64_t (**)(void))((*v14 & *v0) + 0x1A0);
              if ((v25() & 1) != 0
                && (VideoMessageController.callStateReadyForVideoMessageRecording.getter() & 1) != 0
                && ((*(uint64_t (**)(void))((*v14 & *v0) + 0x2F0))() & 1) != 0)
              {
                v18 = 3;
              }
              else if ((v25() & 1) != 0
                     && (VideoMessageController.callStateReadyForVideoMessageRecording.getter() & 1) != 0)
              {
                v18 = 2;
              }
              else
              {
                v18 = 1;
              }
            }
          }
          else
          {
            v18 = 5;
          }
        }
        else
        {
          v18 = 6;
        }
      }
    }
    else
    {
      v18 = 0;
    }
    v26 = (*(uint64_t (**)(void))((*v14 & *v0) + 0xF0))();
    v27 = VideoMessageController.State.rawValue.getter(v26);
    v29 = v28;
    if (v27 == VideoMessageController.State.rawValue.getter(v18) && v29 == v30)
    {
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
        return VideoMessageController.state.setter();
    }
  }
  return result;
}

void VideoMessageController.viewStateReadyForVideoMessageRecording.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void VideoMessageController.viewStateReadyForVideoMessageRecording.setter(char a1)
{
  VideoMessageController.viewStateReadyForVideoMessageRecording.setter(a1, &OBJC_IVAR____TtC15ConversationKit22VideoMessageController_viewStateReadyForVideoMessageRecording);
}

void VideoMessageController.viewStateReadyForVideoMessageRecording.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void VideoMessageController.isVideoMessagingEnabled.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void VideoMessageController.isVideoMessagingEnabled.setter(char a1)
{
  VideoMessageController.viewStateReadyForVideoMessageRecording.setter(a1, &OBJC_IVAR____TtC15ConversationKit22VideoMessageController_isVideoMessagingEnabled);
}

void VideoMessageController.viewStateReadyForVideoMessageRecording.setter(char a1, _QWORD *a2)
{
  uint64_t v2;
  _BYTE *v4;

  v4 = (_BYTE *)(v2 + *a2);
  OUTLINED_FUNCTION_2_0();
  *v4 = a1;
  VideoMessageController.updateState()();
  OUTLINED_FUNCTION_9_0();
}

void VideoMessageController.isVideoMessagingEnabled.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void VideoMessageController.viewStateReadyForVideoMessageRecording.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    VideoMessageController.updateState()();
  OUTLINED_FUNCTION_0();
}

uint64_t VideoMessageController.callStateReadyForVideoMessageRecording.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  int v4;

  OUTLINED_FUNCTION_123_5(OBJC_IVAR____TtC15ConversationKit22VideoMessageController_callCenter);
  v1 = OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (i = v1 + 40; ; i += 16)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      if (OUTLINED_FUNCTION_100_4() == 1 || OUTLINED_FUNCTION_100_4() == 3)
      {
        OUTLINED_FUNCTION_13_3();
        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_13_3();
        return 0;
      }
      v4 = OUTLINED_FUNCTION_100_4();
      swift_unknownObjectRelease();
      if (v4 == 2)
        break;
      if (!--v2)
      {
        OUTLINED_FUNCTION_3_3();
        return 1;
      }
    }
    OUTLINED_FUNCTION_3_3();
    return 0;
  }
  else
  {
    OUTLINED_FUNCTION_13_3();
    return 1;
  }
}

uint64_t VideoMessageController.mediaType.getter()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;

  OUTLINED_FUNCTION_123_5(OBJC_IVAR____TtC15ConversationKit22VideoMessageController_callCenter);
  v1 = (void *)OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 80));
  v2 = objc_msgSend(v1, sel_isPreviewRunning);

  if (v2)
    return 2;
  else
    return 1;
}

void VideoMessageController.currentRecordingUUID.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_0();
  v2 = OUTLINED_FUNCTION_65_2();
  outlined assign with copy of UUID?(v2, v3);
  OUTLINED_FUNCTION_25_29();
  VideoMessageController.updateState()();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(a1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_9_0();
}

uint64_t key path getter for VideoMessageController.latestVideoMessageURL : VideoMessageController(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x210))();
}

void key path setter for VideoMessageController.latestVideoMessageURL : VideoMessageController(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Conversation?(a1, (uint64_t)v4, &demangling cache variable for type metadata for URL?);
  VideoMessageController.latestVideoMessageURL.setter((uint64_t)v4);
}

uint64_t VideoMessageController.latestVideoMessageURL.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_11_0();
  return swift_release();
}

void VideoMessageController.latestVideoMessageURL.setter(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t *v7;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with copy of Conversation?(a1, v2, &demangling cache variable for type metadata for URL?);
  v5 = v1;
  static Published.subscript.setter();
  VideoMessageController.updateState()();
  v6 = OUTLINED_FUNCTION_65_2();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v6, v7);
}

uint64_t key path setter for VideoMessageController.$state : VideoMessageController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_16_2();
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v6, a1);
  return a6(v6);
}

void VideoMessageController.$latestVideoMessageURL.getter()
{
  VideoMessageController.$state.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22VideoMessageController__latestVideoMessageURL, &demangling cache variable for type metadata for Published<URL?>);
}

void VideoMessageController.$state.getter(uint64_t a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  Published.projectedValue.getter();
  OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_9_0();
}

uint64_t VideoMessageController.$latestVideoMessageURL.setter(uint64_t a1)
{
  return VideoMessageController.$state.setter(a1, &demangling cache variable for type metadata for Published<URL?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22VideoMessageController__latestVideoMessageURL, &demangling cache variable for type metadata for Published<URL?>);
}

uint64_t VideoMessageController.$state.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9 - v8, a1, v6);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

void VideoMessageController.latestVideoMessageSandboxURL.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_latestVideoMessageSandboxURL);
  if (v4)
  {
    v5 = objc_msgSend(v4, sel_URL);
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v6 = type metadata accessor for URL();
    v7 = 0;
  }
  else
  {
    v6 = type metadata accessor for URL();
    v7 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v3, v7, 1, v6);
  VideoMessageController.latestVideoMessageURL.setter((uint64_t)v3);
}

void VideoMessageController.latestVideoMessageSandboxURL.setter(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_latestVideoMessageSandboxURL);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_latestVideoMessageSandboxURL) = a1;
  v3 = a1;

  VideoMessageController.latestVideoMessageSandboxURL.didset();
}

void VideoMessageController.momentsController.getter()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController__momentsController);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  if (*v1)
    goto LABEL_5;
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  VideoMessageController._momentsController.setter(v3);
  if (*v1)
  {
    objc_msgSend(*v1, sel_addDelegate_, v0);
    if (*v1)
    {
      v4 = *v1;
      v2 = 0;
LABEL_5:
      v5 = v2;
      OUTLINED_FUNCTION_32();
      return;
    }
  }
  __break(1u);
}

void VideoMessageController._momentsController.setter(void *a1)
{
  ConversationHUDControlsView.ephemeralAlertTimer.setter(a1, &OBJC_IVAR____TtC15ConversationKit22VideoMessageController__momentsController);
}

uint64_t VideoMessageController.ignoresStateUpdates.didset(uint64_t result)
{
  uint64_t v1;

  if ((result & 1) != 0
    && (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_ignoresStateUpdates) & 1) == 0)
  {
    return VideoMessageController.updateState()();
  }
  return result;
}

uint64_t VideoMessageController.ignoresStateUpdates.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_ignoresStateUpdates);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_ignoresStateUpdates) = a1;
  return VideoMessageController.ignoresStateUpdates.didset(v2);
}

void VideoMessageController.countdownSink.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_countdownSink) = a1;
  swift_release();
  v2 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_countdownShown);
  OUTLINED_FUNCTION_2_0();
  *v2 = 1;
  OUTLINED_FUNCTION_32();
}

void VideoMessageController.countdownShown.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void VideoMessageController.countdownShown.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_countdownShown);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

id VideoMessageController.__allocating_init(callCenter:notificationCenter:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return VideoMessageController.init(callCenter:notificationCenter:)();
}

id VideoMessageController.init(callCenter:notificationCenter:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_class *v48;
  id v49;
  char *v50;
  void *v51;
  char *v52;
  void *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  objc_super v76;
  uint64_t v77;
  uint64_t v78;

  OUTLINED_FUNCTION_93();
  v77 = v1;
  v78 = v2;
  v70 = v3;
  v65 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.Merge<NSNotificationCenter.Publisher, NSNotificationCenter.Publisher>);
  v6 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  v73 = v6;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v71 = v8;
  v9 = type metadata accessor for NSNotificationCenter.Publisher();
  v68 = *(_QWORD *)(v9 - 8);
  v69 = v9;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_79();
  v67 = (char *)(v11 - v12);
  v14 = MEMORY[0x1E0C80A78](v13);
  v66 = (char *)&v62 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v64 = (char *)&v62 - v17;
  MEMORY[0x1E0C80A78](v16);
  v74 = (char *)&v62 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<URL?>);
  v62 = *(_QWORD *)(v19 - 8);
  v63 = v19;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_77();
  v23 = v22 - v21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_79();
  v27 = v25 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v62 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_77();
  v35 = v34 - v33;
  v36 = &v0[OBJC_IVAR____TtC15ConversationKit22VideoMessageController__state];
  v75 = 0;
  v37 = v0;
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v36, v35, v31);
  v38 = &v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_mostRecentActiveConversation];
  *(_OWORD *)v38 = 0u;
  *((_OWORD *)v38 + 1) = 0u;
  *((_QWORD *)v38 + 4) = 0;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_mostRecentLocalHandle] = 0;
  swift_unknownObjectWeakInit();
  v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_isVideoSensitive] = 0;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_videoMessageSendSoundPlayer] = 0;
  v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_viewStateReadyForVideoMessageRecording] = 0;
  v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_isVideoMessagingEnabled] = 0;
  v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_hasActiveOrPendingRecordingSession] = 0;
  v39 = (uint64_t)&v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_currentRecordingUUID];
  v40 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_77_0(v39, v41, v42, v40);
  v43 = &v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController__latestVideoMessageURL];
  v44 = type metadata accessor for URL();
  OUTLINED_FUNCTION_77_0((uint64_t)v30, v45, v46, v44);
  outlined init with copy of Conversation?((uint64_t)v30, v27, &demangling cache variable for type metadata for URL?);
  Published.init(initialValue:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v30, &demangling cache variable for type metadata for URL?);
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v43, v23, v63);
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_latestVideoMessageSandboxURL] = 0;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController__momentsController] = 0;
  v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_warmedMomentsController] = 0;
  v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_sendingInProgress] = 0;
  v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_ignoresStateUpdates] = 0;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_countdownSink] = 0;
  *(_QWORD *)&v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_subscriptions] = MEMORY[0x1E0DEE9E8];
  v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_countdownShown] = 0;
  v47 = v65;
  outlined init with copy of IDSLookupManager(v65, (uint64_t)&v37[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_callCenter]);

  v48 = (objc_class *)type metadata accessor for VideoMessageController();
  v76.receiver = v37;
  v76.super_class = v48;
  v49 = objc_msgSendSuper2(&v76, sel_init);
  v50 = v74;
  v51 = v70;
  NSNotificationCenter.publisher(for:object:)();
  v52 = v64;
  v53 = v51;
  NSNotificationCenter.publisher(for:object:)();
  v54 = v68;
  v55 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  v56 = v50;
  v57 = v69;
  v55(v66, v56, v69);
  v55(v67, v52, v57);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher, (void (*)(uint64_t))MEMORY[0x1E0CB1F30]);
  v58 = v71;
  Publishers.Merge.init(_:_:)();
  OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Merge<NSNotificationCenter.Publisher, NSNotificationCenter.Publisher> and conformance Publishers.Merge<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.Merge<NSNotificationCenter.Publisher, NSNotificationCenter.Publisher>);
  v59 = v72;
  Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_11_0();
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v58, v59);
  OUTLINED_FUNCTION_2_0();
  AnyCancellable.store(in:)();
  swift_endAccess();

  OUTLINED_FUNCTION_43();
  __swift_destroy_boxed_opaque_existential_1(v47);
  v60 = *(void (**)(char *, uint64_t))(v54 + 8);
  v60(v52, v57);
  v60(v74, v57);
  return v49;
}

void closure #1 in VideoMessageController.init(callCenter:notificationCenter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    VideoMessageController.updateState()();

  }
}

char *VideoMessageController.__allocating_init(callCenter:momentsControllerType:notificationCenter:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t (*v6)(_BYTE *, id);
  id v7;
  void *v8;
  id v9;
  char *v10;
  id v11;
  void **v12;
  void *v13;
  void *v14;
  id v15;
  _BYTE v17[40];

  outlined init with copy of IDSLookupManager(a1, (uint64_t)v17);
  v6 = *(uint64_t (**)(_BYTE *, id))(v3 + 776);
  v7 = a3;
  v8 = (void *)v6(v17, v7);
  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v10 = v8;
  v11 = objc_msgSend(v9, sel_init);
  v12 = (void **)&v10[OBJC_IVAR____TtC15ConversationKit22VideoMessageController__momentsController];
  OUTLINED_FUNCTION_2_0();
  v13 = *v12;
  *v12 = v11;

  OUTLINED_FUNCTION_2_0();
  v14 = *v12;
  if (*v12)
  {
    swift_endAccess();
    v15 = v14;
    objc_msgSend(v15, sel_addDelegate_, v10);

    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_endAccess();

  }
  return v10;
}

Swift::Void __swiftcall VideoMessageController.playSentVideoMessageTone()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  id v16;
  void (*v17)(uint64_t, _BYTE *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  id v23;
  id v24;
  unsigned int v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[16];
  id v37[2];

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v37[1] = *(id *)MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_2_20();
  v4 = type metadata accessor for URL();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_79();
  v8 = v6 - v7;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = &v36[-v11];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v36[-v13];
  v15 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v16 = outlined bridged method (mbbnn) of @objc NSBundle.url(forResource:withExtension:)(0xD000000000000015, 0x80000001BD683B40, 6709603, 0xE300000000000000, v15);

  if (v16)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v17 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32);
    v17(v1, v12, v4);
    OUTLINED_FUNCTION_72(v1, 0);
    if (__swift_getEnumTagSinglePayload(v1, 1, v4) != 1)
    {
      v17((uint64_t)v14, (_BYTE *)v1, v4);
      v18 = (void *)objc_opt_self();
      v19 = objc_msgSend(v18, sel_sharedInstance);
      v20 = *MEMORY[0x1E0C89690];
      v21 = *MEMORY[0x1E0C89748];
      v37[0] = 0;
      v22 = objc_msgSend(v19, sel_setCategory_mode_options_error_, v20, v21, 2, v37);

      if (v22)
      {
        v23 = v37[0];
        v24 = objc_msgSend(v18, sel_sharedInstance);
        v37[0] = 0;
        v25 = objc_msgSend(v24, sel_setActive_withOptions_error_, 1, 0, v37);

        v26 = v37[0];
        if (v25)
        {
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 16))(v8, v14, v4);
          objc_allocWithZone(MEMORY[0x1E0C89AC8]);
          v27 = v26;
          v28 = @nonobjc AVAudioPlayer.init(contentsOf:)(v8);
          VideoMessageController.videoMessageSendSoundPlayer.setter((uint64_t)v28);
          objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_videoMessageSendSoundPlayer), sel_play);
LABEL_13:
          OUTLINED_FUNCTION_39_0((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
          goto LABEL_14;
        }
        v31 = v37[0];
        v30 = (void *)_convertNSErrorToError(_:)();

      }
      else
      {
        v29 = v37[0];
        v30 = (void *)_convertNSErrorToError(_:)();

      }
      swift_willThrow();
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v32 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v32 + 16) = xmmword_1BD6441D0;
      v37[0] = v30;
      OUTLINED_FUNCTION_59_11();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      v33 = String.init<A>(reflecting:)();
      v35 = v34;
      *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v32 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v32 + 32) = v33;
      *(_QWORD *)(v32 + 40) = v35;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_48_3();
      goto LABEL_13;
    }
  }
  else
  {
    OUTLINED_FUNCTION_72(v1, 1);
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v1, &demangling cache variable for type metadata for URL?);
LABEL_14:
  OUTLINED_FUNCTION_52_1();
}

id VideoMessageController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void VideoMessageController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VideoMessageController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoMessageController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL static VideoMessageController.UnrecoverableErrors.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void VideoMessageController.UnrecoverableErrors.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void VideoMessageController.UnrecoverableErrors.hashValue.getter(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(a1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance VideoMessageController.UnrecoverableErrors(char *a1, char *a2)
{
  return static VideoMessageController.UnrecoverableErrors.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance VideoMessageController.UnrecoverableErrors()
{
  unsigned __int8 *v0;

  VideoMessageController.UnrecoverableErrors.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance VideoMessageController.UnrecoverableErrors(uint64_t a1)
{
  unsigned __int8 *v1;

  VideoMessageController.UnrecoverableErrors.hash(into:)(a1, *v1);
}

uint64_t static VideoMessageController.VideoMessageError.== infix(_:_:)()
{
  return 1;
}

void VideoMessageController.VideoMessageError.hash(into:)()
{
  Hasher._combine(_:)(0);
  OUTLINED_FUNCTION_0();
}

void VideoMessageController.VideoMessageError.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(0);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

void VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v36 = v2;
  v42 = v3;
  v39 = v4;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v37 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.HandleEvents<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_41();
  v38 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_77();
  v15 = v14 - v13;
  v16 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v16 + 16) = v6;
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v17 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v17, (uint64_t)&static Logger.videoMessaging);
  OUTLINED_FUNCTION_1_28();
  Logger.logObject.getter();
  v18 = OUTLINED_FUNCTION_31_6();
  if (os_log_type_enabled(v6, v18))
  {
    v19 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v19 = 134217984;
    OUTLINED_FUNCTION_2_0();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v6, v18, "Starting countdown %ld", v19);
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_22();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  v20 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop);
  v21 = type metadata accessor for NSRunLoop.SchedulerOptions();
  OUTLINED_FUNCTION_77_0(v15, v22, v23, v21);
  static NSTimer.publish(every:tolerance:on:in:options:)();

  OUTLINED_FUNCTION_167_0(v24, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, (void (*)(uint64_t))MEMORY[0x1E0CB20A0]);
  ConnectablePublisher.autoconnect()();
  OUTLINED_FUNCTION_11_0();
  v25 = (_QWORD *)OUTLINED_FUNCTION_15();
  v25[2] = v16;
  v25[3] = v36;
  v25[4] = v1;
  OUTLINED_FUNCTION_1_28();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>, &demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)();
  OUTLINED_FUNCTION_19();
  v26 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v27 = (_QWORD *)OUTLINED_FUNCTION_15();
  v27[2] = v16;
  v27[3] = v39;
  v27[4] = v42;
  v27[5] = v26;
  v27[6] = v36;
  v27[7] = v1;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.HandleEvents<Publishers.Autoconnect<NSTimer.TimerPublisher>> and conformance Publishers.HandleEvents<A>, (uint64_t *)&demangling cache variable for type metadata for Publishers.HandleEvents<Publishers.Autoconnect<NSTimer.TimerPublisher>>);
  OUTLINED_FUNCTION_1_28();
  swift_retain();
  swift_retain();
  v28 = Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_11_0();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v41);
  VideoMessageController.countdownSink.setter(v28);
  VideoMessageController.updateState()();
  OUTLINED_FUNCTION_2_0();
  v39(*(_QWORD *)(v16 + 16));
  v29 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_77_0(v37, v30, v31, v29);
  v32 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_48_2();
  swift_retain();
  v33 = static MainActor.shared.getter();
  v34 = (_QWORD *)OUTLINED_FUNCTION_15();
  v35 = MEMORY[0x1E0DF06E8];
  v34[2] = v33;
  v34[3] = v35;
  v34[4] = v32;
  OUTLINED_FUNCTION_19();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  OUTLINED_FUNCTION_22();
  swift_release();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t result;

  result = swift_beginAccess();
  if (*(_QWORD *)(a1 + 16))
    return a2(0);
  return result;
}

uint64_t closure #2 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v10 = (uint64_t *)(a2 + 16);
  swift_beginAccess();
  v11 = *(_QWORD *)(a2 + 16);
  result = v11 - 1;
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    *v10 = result;
    a3();
    result = swift_beginAccess();
    if (*v10 <= 0)
    {
      v13 = a5 + 16;
      swift_beginAccess();
      v14 = MEMORY[0x1C3B752C0](v13);
      if (v14)
      {
        v15 = (void *)v14;
        VideoMessageController.countdownSink.setter(0);

      }
      swift_beginAccess();
      v16 = MEMORY[0x1C3B752C0](v13);
      if (v16)
      {
        v17 = (void *)v16;
        VideoMessageController.updateState()();

      }
      return a6(1);
    }
  }
  return result;
}

uint64_t closure #3 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[14] = a4;
  type metadata accessor for MainActor();
  v4[15] = static MainActor.shared.getter();
  v4[16] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[17] = v5;
  return swift_task_switch();
}

void closure #3 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_185_0();
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  swift_release();

  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1BD2E79B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 144) = a1;
  if (a1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 152) = v2;
    *v2 = v1;
    v2[1] = closure #3 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:);
    return VideoMessageController.prewarm()();
  }
  else
  {
    swift_release();
    return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t closure #3 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v2);
  *(_QWORD *)(v0 + 160) = v1;
  swift_task_dealloc();
  if (!v1)

  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1BD2E7AC0(char *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = *(_QWORD *)&a1[OBJC_IVAR____TtC15ConversationKit22VideoMessageController_countdownSink];

    if (v2)
    {
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_185_0();
    }
  }

  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t VideoMessageController.prewarm()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[15] = v0;
  OUTLINED_FUNCTION_48_2();
  v1[16] = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_116();
  v1[17] = v2;
  v1[18] = v3;
  return OUTLINED_FUNCTION_2_8();
}

{
  uint8_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _WORD *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v1[15];
  v3 = OBJC_IVAR____TtC15ConversationKit22VideoMessageController_warmedMomentsController;
  v1[19] = OBJC_IVAR____TtC15ConversationKit22VideoMessageController_warmedMomentsController;
  if ((*(_BYTE *)(v2 + v3) & 1) != 0)
  {
    swift_release();
    v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
    return OUTLINED_FUNCTION_1_8(v4);
  }
  else
  {
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_17_2();
    v1[20] = __swift_project_value_buffer(v6, (uint64_t)&static Logger.videoMessaging);
    v7 = Logger.logObject.getter();
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v9);
      _os_log_impl(&dword_1BD004000, v7, v8, "Prewarming audio client", v0, 2u);
      OUTLINED_FUNCTION_60();
    }

    VideoMessageController.momentsController.getter();
    v11 = v10;
    v1[21] = v10;
    v12 = OUTLINED_FUNCTION_19_58((uint64_t)VideoMessageController.prewarm());
    v1[10] = MEMORY[0x1E0C809B0];
    v13 = v1 + 10;
    v13[1] = 0x40000000;
    OUTLINED_FUNCTION_89_14(v12, (uint64_t)@objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ());
    objc_msgSend(v11, sel_prewarmAudioClientWithCompletion_, v13);
    return OUTLINED_FUNCTION_31_1();
  }
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_23();
  *(_QWORD *)(v0 + 176) = v1;
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (void *)v0[21];
  v2 = v0[19];
  v3 = v0[15];
  swift_release();

  *(_BYTE *)(v3 + v2) = 1;
  VideoMessageController.updateState()();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return v4();
}

{
  os_log_type_t v0;
  uint64_t v1;
  void *v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;

  OUTLINED_FUNCTION_32_8();
  v2 = *(void **)(v1 + 168);
  v3 = *(NSObject **)(v1 + 160);
  swift_release();
  OUTLINED_FUNCTION_136_2();

  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  Logger.logObject.getter();
  v4 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v4))
  {
    v5 = *(void **)(v1 + 176);
    v6 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 136315138;
    *(_QWORD *)(v1 + 80) = v5;
    v7 = v5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v8 = OUTLINED_FUNCTION_66_20();
    *(_QWORD *)(v1 + 80) = OUTLINED_FUNCTION_38_37(v8, v9, v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_30_10();
    OUTLINED_FUNCTION_30_10();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v0, "Failed to prewarm audio client with error %s", v6);
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  lazy protocol witness table accessor for type VideoMessageController.UnrecoverableErrors and conformance VideoMessageController.UnrecoverableErrors();
  OUTLINED_FUNCTION_10_8();
  *v11 = 0;
  swift_willThrow();
  OUTLINED_FUNCTION_48_3();
  return OUTLINED_FUNCTION_165(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ()(uint64_t a1, void *a2)
{
  if (a2)
    return specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(*(_QWORD *)(a1 + 32), a2);
  else
    return specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(*(_QWORD *)(a1 + 32));
}

uint64_t VideoMessageController.start()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[20] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v1[21] = OUTLINED_FUNCTION_23_3();
  v2 = OUTLINED_FUNCTION_33_0();
  v1[22] = v2;
  v1[23] = *(_QWORD *)(v2 - 8);
  v1[24] = OUTLINED_FUNCTION_6_15();
  v1[25] = OUTLINED_FUNCTION_5_55();
  v1[26] = OUTLINED_FUNCTION_5_55();
  OUTLINED_FUNCTION_48_2();
  v1[27] = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_116();
  v1[28] = v3;
  v1[29] = v4;
  return OUTLINED_FUNCTION_2_8();
}

{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  os_log_type_t v16;
  _BOOL4 v17;
  void *v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  void *v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void);

  OUTLINED_FUNCTION_32_8();
  v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v1 + 160)) + 0xF0);
  v3 = v2();
  if (VideoMessageController.State.rawValue.getter(v3) == 0xD000000000000014 && v4 == 0x80000001BD66C3B0)
    goto LABEL_10;
  OUTLINED_FUNCTION_13();
  v5 = OUTLINED_FUNCTION_16_27();
  if ((v0 & 1) != 0)
    goto LABEL_11;
  v6 = ((uint64_t (*)(uint64_t))v2)(v5);
  v8 = VideoMessageController.State.rawValue.getter(v6) == 0x7964616572 && v7 == 0xE500000000000000;
  if (v8
    || (OUTLINED_FUNCTION_13(),
        v9 = OUTLINED_FUNCTION_16_27(),
        v10 = ((uint64_t (*)(uint64_t))v2)(v9),
        VideoMessageController.State.rawValue.getter(v10) == 0xD000000000000014)
    && v11 == 0x80000001BD66C3B0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    v12 = *(NSObject **)(v1 + 160);
    if ((*((_BYTE *)&v12->isa + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_warmedMomentsController) & 1) != 0)
    {
      if (one-time initialization token for videoMessaging != -1)
      {
        swift_once();
        v12 = *(NSObject **)(v1 + 160);
      }
      v13 = OUTLINED_FUNCTION_17_2();
      v14 = __swift_project_value_buffer(v13, (uint64_t)&static Logger.videoMessaging);
      v15 = OUTLINED_FUNCTION_151_1(v14);
      Logger.logObject.getter();
      v16 = OUTLINED_FUNCTION_31_6();
      v17 = OUTLINED_FUNCTION_71_0(v12);
      v18 = *(void **)(v1 + 160);
      if (v17)
      {
        v19 = (uint8_t *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_105();
        *(_DWORD *)(v1 + 288) = OUTLINED_FUNCTION_127_4(4.8149e-34);
        v20 = OUTLINED_FUNCTION_156_2();
        *(_QWORD *)(v1 + 136) = OUTLINED_FUNCTION_174_0(v20, v21, v22, v23);
        OUTLINED_FUNCTION_42_36();
        OUTLINED_FUNCTION_25();

        OUTLINED_FUNCTION_48(&dword_1BD004000, v12, v16, "Starting message recording with media type %s", v19);
        OUTLINED_FUNCTION_6_3();
        OUTLINED_FUNCTION_60();
      }

      v26 = *(_QWORD *)(v1 + 200);
      OUTLINED_FUNCTION_126_1(OBJC_IVAR____TtC15ConversationKit22VideoMessageController_hasActiveOrPendingRecordingSession);
      VideoMessageController.momentsController.getter();
      OUTLINED_FUNCTION_186_0(v27);
      *(_QWORD *)(v1 + 56) = v26;
      v28 = OUTLINED_FUNCTION_19_58((uint64_t)VideoMessageController.start());
      *(_QWORD *)(v1 + 80) = MEMORY[0x1E0C809B0];
      *(_QWORD *)(v1 + 88) = 0x40000000;
      v29 = OUTLINED_FUNCTION_89_14(v28, (uint64_t)@objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSUUID?, @unowned NSError?) -> () with result type UUID);
      OUTLINED_FUNCTION_138_2(v29, sel_startRecordingMessageWithMediaType_completion_);
      return OUTLINED_FUNCTION_53_29();
    }
    else
    {
      v24 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v1 + 240) = v24;
      *v24 = v1;
      v24[1] = VideoMessageController.start();
      return VideoMessageController.prewarm()();
    }
  }
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_16_27();
  OUTLINED_FUNCTION_154_1();
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v30 = *(void **)(v1 + 160);
  v31 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v31, (uint64_t)&static Logger.videoMessaging);
  v32 = v30;
  v33 = Logger.logObject.getter();
  v34 = static os_log_type_t.error.getter();
  v35 = OUTLINED_FUNCTION_71_0(v33);
  v36 = *(void **)(v1 + 160);
  if (v35)
  {
    v37 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v37 = 136315138;
    *(_BYTE *)(v1 + 292) = v2();
    v38 = OUTLINED_FUNCTION_156_2();
    *(_QWORD *)(v1 + 120) = OUTLINED_FUNCTION_174_0(v38, v39, v40, v41);
    OUTLINED_FUNCTION_42_36();
    OUTLINED_FUNCTION_25();

    OUTLINED_FUNCTION_48(&dword_1BD004000, v33, v34, "Attempted to start video message recording in invalid state %s", v37);
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_124_6();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  v42 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_165(v42);
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v2);
  *(_QWORD *)(v0 + 248) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v1 = *(NSObject **)(v0 + 160);
  v2 = OUTLINED_FUNCTION_17_2();
  v3 = __swift_project_value_buffer(v2, (uint64_t)&static Logger.videoMessaging);
  v4 = OUTLINED_FUNCTION_151_1(v3);
  Logger.logObject.getter();
  v5 = OUTLINED_FUNCTION_31_6();
  v6 = OUTLINED_FUNCTION_71_0(v1);
  v7 = *(void **)(v0 + 160);
  if (v6)
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_105();
    v22 = OUTLINED_FUNCTION_105();
    *(_DWORD *)(v0 + 288) = OUTLINED_FUNCTION_127_4(4.8149e-34);
    v9 = OUTLINED_FUNCTION_156_2();
    *(_QWORD *)(v0 + 136) = OUTLINED_FUNCTION_152_2(v9, v10, v11, v12, v13, v14, v15, v16, v22);
    OUTLINED_FUNCTION_42_36();
    OUTLINED_FUNCTION_25();

    OUTLINED_FUNCTION_48(&dword_1BD004000, v1, v5, "Starting message recording with media type %s", v8);
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }

  v17 = *(_QWORD *)(v0 + 200);
  OUTLINED_FUNCTION_126_1(OBJC_IVAR____TtC15ConversationKit22VideoMessageController_hasActiveOrPendingRecordingSession);
  VideoMessageController.momentsController.getter();
  OUTLINED_FUNCTION_186_0(v18);
  *(_QWORD *)(v0 + 56) = v17;
  v19 = OUTLINED_FUNCTION_19_58((uint64_t)VideoMessageController.start());
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  v20 = OUTLINED_FUNCTION_89_14(v19, (uint64_t)@objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSUUID?, @unowned NSError?) -> () with result type UUID);
  OUTLINED_FUNCTION_138_2(v20, sel_startRecordingMessageWithMediaType_completion_);
  return OUTLINED_FUNCTION_47_21();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_23();
  *(_QWORD *)(v0 + 280) = v1;
  return OUTLINED_FUNCTION_4_4();
}

{
  _QWORD *v0;
  void *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  OUTLINED_FUNCTION_79_0();
  v1 = (void *)v0[34];
  v2 = v0[32];
  v3 = v0[26];
  v5 = v0[24];
  v4 = v0[25];
  v6 = v0[22];
  v7 = v0[23];
  swift_release();
  v8 = OUTLINED_FUNCTION_65_2();
  v9(v8);

  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v10(v5, v3, v6);
  Logger.logObject.getter();
  v11 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v11))
  {
    v12 = v0[24];
    v24 = v0[23];
    v14 = v0[21];
    v13 = v0[22];
    v15 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v15 = 136315138;
    v10(v14, v12, v13);
    OUTLINED_FUNCTION_22_60();
    OUTLINED_FUNCTION_125_4(v16, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v0[19] = OUTLINED_FUNCTION_45_36(v17, v18, v19, v20);
    OUTLINED_FUNCTION_26_38();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v12, v13);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v2, (os_log_type_t)v4, "Successfully started message recording with UUID %s", v15);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  (*(void (**)(_QWORD, _QWORD))(v0[23] + 8))(v0[24], v0[22]);

  v21 = v0[21];
  v10(v21, v0[26], v0[22]);
  OUTLINED_FUNCTION_82_7(v21, 0);
  OUTLINED_FUNCTION_179_0();
  OUTLINED_FUNCTION_124_6();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  v22 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_8_6(v22);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_154_1();
  OUTLINED_FUNCTION_117_7();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

{
  os_log_type_t v0;
  uint64_t v1;
  void *v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v19;

  v2 = *(void **)(v1 + 272);
  v3 = *(NSObject **)(v1 + 256);
  OUTLINED_FUNCTION_154_1();
  OUTLINED_FUNCTION_136_2();

  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  Logger.logObject.getter();
  v4 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_5_3(v4))
  {
    v5 = *(void **)(v1 + 280);
    v6 = (uint8_t *)OUTLINED_FUNCTION_105();
    v7 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 136315138;
    v19 = v7;
    *(_QWORD *)(v1 + 128) = v5;
    v8 = v5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v9 = OUTLINED_FUNCTION_66_20();
    *(_QWORD *)(v1 + 144) = OUTLINED_FUNCTION_152_2(v9, v10, v11, v12, v13, v14, v15, v16, v19);
    OUTLINED_FUNCTION_33_38();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_30_10();
    OUTLINED_FUNCTION_30_10();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v0, "Failed to start message recording with error %s", v6);
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  OUTLINED_FUNCTION_70_16(*(_QWORD *)(v1 + 264));
  lazy protocol witness table accessor for type VideoMessageController.UnrecoverableErrors and conformance VideoMessageController.UnrecoverableErrors();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_98_6(v17, 1);
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_117_7();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  return OUTLINED_FUNCTION_48_0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSUUID?, @unowned NSError?) -> () with result type UUID(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = type metadata accessor for UUID();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 32);
  if (a3)
    return specialized _resumeUnsafeThrowingContinuationWithError<A>(_:_:)(v8, a3);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  return specialized _resumeUnsafeThrowingContinuation<A>(_:_:)(v8, (uint64_t)v7);
}

uint64_t VideoMessageController.pause()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  OUTLINED_FUNCTION_48_2();
  *(_QWORD *)(v1 + 24) = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_release();
  VideoMessageController.countdownSink.setter(0);
  VideoMessageController.updateState()();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t VideoMessageController.stop()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[22] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v1[23] = OUTLINED_FUNCTION_6_15();
  v1[24] = OUTLINED_FUNCTION_5_55();
  v2 = OUTLINED_FUNCTION_33_0();
  v1[25] = v2;
  v1[26] = *(_QWORD *)(v2 - 8);
  v1[27] = OUTLINED_FUNCTION_6_15();
  v1[28] = OUTLINED_FUNCTION_5_55();
  v1[29] = OUTLINED_FUNCTION_5_55();
  OUTLINED_FUNCTION_48_2();
  v1[30] = OUTLINED_FUNCTION_54_2();
  v1[31] = OUTLINED_FUNCTION_34();
  v1[32] = v3;
  return OUTLINED_FUNCTION_2_8();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  uint64_t (*v17)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_189();
  v4 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_159_1(v4, v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_83_16(v1);
  if (v15)
  {
    v6 = OUTLINED_FUNCTION_188_0();
    OUTLINED_FUNCTION_143(v6, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v7, (uint64_t)&static Logger.videoMessaging);
    v8 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_23_5(v8))
    {
      v9 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v9);
      OUTLINED_FUNCTION_11_78(&dword_1BD004000, v10, v11, "Attempted to stop video message recording with no active recording UUID");
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_14;
  }
  OUTLINED_FUNCTION_95_11();
  v12 = OUTLINED_FUNCTION_109_1(*v0);
  v13 = VideoMessageController.State.rawValue.getter(v12);
  v15 = v13 == 0x6552657669746361 && v14 == 0xEF676E6964726F63;
  if (v15)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_27();
    if ((v16 & 1) == 0)
    {
      OUTLINED_FUNCTION_137_5();
      OUTLINED_FUNCTION_43();
LABEL_14:
      OUTLINED_FUNCTION_58_22();
      OUTLINED_FUNCTION_29_0();
      OUTLINED_FUNCTION_12();
      OUTLINED_FUNCTION_81_0();
      OUTLINED_FUNCTION_625();
      v17 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
      return OUTLINED_FUNCTION_55_2(v17);
    }
  }
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v19 = *(_QWORD *)(v2 + 224);
  v20 = OUTLINED_FUNCTION_17_2();
  v21 = __swift_project_value_buffer(v20, (uint64_t)&static Logger.videoMessaging);
  OUTLINED_FUNCTION_71_18(v21);
  Logger.logObject.getter();
  v22 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v22))
  {
    v35 = *(_QWORD *)(v2 + 208);
    v23 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_75_13(4.8149e-34);
    OUTLINED_FUNCTION_105_8();
    OUTLINED_FUNCTION_167_0(v24, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v31 = OUTLINED_FUNCTION_132_5(v25, v26, v27, v28, v29, v30);
    OUTLINED_FUNCTION_97_6(v31);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_52_27(v35);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, (os_log_type_t)v19, "Stopping message recording with UUID %s", v23);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_52_27(*(_QWORD *)(v2 + 208));

  OUTLINED_FUNCTION_113_8();
  *(NSUUID *)(v2 + 296) = OUTLINED_FUNCTION_118_8(v32);
  v33 = OUTLINED_FUNCTION_19_58((uint64_t)VideoMessageController.stop());
  *(_QWORD *)(v2 + 80) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v2 + 88) = 0x40000000;
  v34 = OUTLINED_FUNCTION_89_14(v33, (uint64_t)@objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ());
  OUTLINED_FUNCTION_50_27(v34, sel_endRecordingMessageWithUUID_completion_);
  return OUTLINED_FUNCTION_56_27();
}

{
  OUTLINED_FUNCTION_88_8();
  return OUTLINED_FUNCTION_4_4();
}

#error "1BD2E8F34: call analysis failed (funcsize=69)"

#error "1BD2E901C: call analysis failed (funcsize=72)"

uint64_t VideoMessageController.save()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[22] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v1[23] = OUTLINED_FUNCTION_6_15();
  v1[24] = OUTLINED_FUNCTION_5_55();
  v2 = OUTLINED_FUNCTION_33_0();
  v1[25] = v2;
  v1[26] = *(_QWORD *)(v2 - 8);
  v1[27] = OUTLINED_FUNCTION_6_15();
  v1[28] = OUTLINED_FUNCTION_5_55();
  v1[29] = OUTLINED_FUNCTION_5_55();
  OUTLINED_FUNCTION_48_2();
  v1[30] = OUTLINED_FUNCTION_54_2();
  v1[31] = OUTLINED_FUNCTION_34();
  v1[32] = v3;
  return OUTLINED_FUNCTION_2_8();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  _WORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t (*v19)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_189();
  v5 = v4 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_currentRecordingUUID;
  v6 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_159_1(v6, v7, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_83_16(v1);
  if (v17)
  {
    v8 = OUTLINED_FUNCTION_188_0();
    OUTLINED_FUNCTION_143(v8, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v9 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v9, (uint64_t)&static Logger.videoMessaging);
    v10 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_23_5(v10))
    {
      v11 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v11);
      OUTLINED_FUNCTION_11_78(&dword_1BD004000, v12, v13, "Attempted to save video message recording with no active recording UUID");
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_14;
  }
  OUTLINED_FUNCTION_153_2();
  OUTLINED_FUNCTION_95_11();
  v14 = OUTLINED_FUNCTION_109_1(*v0);
  v15 = VideoMessageController.State.rawValue.getter(v14);
  v17 = v15 == v5 && v16 == 0xEE006574656C706DLL;
  if (v17)
  {
    OUTLINED_FUNCTION_101_11();
  }
  else
  {
    v18 = OUTLINED_FUNCTION_39_46();
    OUTLINED_FUNCTION_27();
    if ((v18 & 1) == 0)
    {
      OUTLINED_FUNCTION_137_5();
      OUTLINED_FUNCTION_43();
LABEL_14:
      OUTLINED_FUNCTION_58_22();
      OUTLINED_FUNCTION_29_0();
      OUTLINED_FUNCTION_12();
      OUTLINED_FUNCTION_81_0();
      OUTLINED_FUNCTION_625();
      v19 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
      return OUTLINED_FUNCTION_55_2(v19);
    }
  }
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v21 = *(_QWORD *)(v2 + 224);
  v22 = OUTLINED_FUNCTION_17_2();
  v23 = __swift_project_value_buffer(v22, (uint64_t)&static Logger.videoMessaging);
  OUTLINED_FUNCTION_71_18(v23);
  Logger.logObject.getter();
  v24 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v24))
  {
    v37 = *(_QWORD *)(v2 + 208);
    v25 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_75_13(4.8149e-34);
    OUTLINED_FUNCTION_105_8();
    OUTLINED_FUNCTION_167_0(v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v33 = OUTLINED_FUNCTION_132_5(v27, v28, v29, v30, v31, v32);
    OUTLINED_FUNCTION_97_6(v33);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_52_27(v37);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, (os_log_type_t)v21, "Saving message recording with UUID %s", v25);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_52_27(*(_QWORD *)(v2 + 208));

  OUTLINED_FUNCTION_113_8();
  *(NSUUID *)(v2 + 296) = OUTLINED_FUNCTION_118_8(v34);
  v35 = OUTLINED_FUNCTION_19_58((uint64_t)VideoMessageController.save());
  *(_QWORD *)(v2 + 80) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v2 + 88) = 0x40000000;
  v36 = OUTLINED_FUNCTION_89_14(v35, (uint64_t)@objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ());
  OUTLINED_FUNCTION_50_27(v36, sel_saveVideoMessageWithUUID_completion_);
  return OUTLINED_FUNCTION_56_27();
}

{
  OUTLINED_FUNCTION_88_8();
  return OUTLINED_FUNCTION_4_4();
}

#error "1BD2E9540: call analysis failed (funcsize=69)"

#error "1BD2E9628: call analysis failed (funcsize=72)"

uint64_t VideoMessageController.complete(sendingTo:sendingFrom:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v4[13] = OUTLINED_FUNCTION_6_15();
  v4[14] = OUTLINED_FUNCTION_5_55();
  v5 = OUTLINED_FUNCTION_33_0();
  v4[15] = v5;
  v4[16] = *(_QWORD *)(v5 - 8);
  v4[17] = OUTLINED_FUNCTION_6_15();
  v4[18] = OUTLINED_FUNCTION_5_55();
  v4[19] = OUTLINED_FUNCTION_5_55();
  v4[20] = OUTLINED_FUNCTION_48_2();
  v4[21] = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_116();
  v4[22] = v6;
  v4[23] = v7;
  return OUTLINED_FUNCTION_2_8();
}

uint64_t VideoMessageController.complete(sendingTo:sendingFrom:in:)()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _QWORD *v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int8x16_t v43;
  uint64_t v44;

  v2 = v0[7].i64[0];
  v3 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_175_0(v3, v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_83_16(v2);
  if (v19)
  {
    v5 = swift_release();
    OUTLINED_FUNCTION_143(v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_17_2();
    v7 = (void *)OUTLINED_FUNCTION_3(v6, (uint64_t)&static Logger.videoMessaging);
    v8 = static os_log_type_t.fault.getter();
    if (OUTLINED_FUNCTION_23_5(v8))
    {
      v9 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_124_3(v9);
      OUTLINED_FUNCTION_11_78(&dword_1BD004000, v10, v11, "There is no UUID to send, this should not be able to happen");
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_80_11();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
    return v12();
  }
  else
  {
    OUTLINED_FUNCTION_153_2();
    v14 = (_QWORD *)v0[6].i64[0];
    v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[8].i64[0] + 32))(v0[9].i64[1], v0[7].i64[0], v0[7].i64[1]);
    v16 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v14) + 0xF0))(v15);
    v17 = VideoMessageController.State.rawValue.getter(v16);
    v19 = v17 == v1 && v18 == 0xEE006574656C706DLL;
    if (v19)
    {
      OUTLINED_FUNCTION_101_11();
    }
    else
    {
      OUTLINED_FUNCTION_39_46();
      OUTLINED_FUNCTION_16_27();
    }
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v20 = v0[9].i64[0];
    v21 = v0[8].i64[0];
    v22 = OUTLINED_FUNCTION_17_2();
    v23 = __swift_project_value_buffer(v22, (uint64_t)&static Logger.videoMessaging);
    v0[12].i64[0] = v23;
    v24 = *(void (**)(uint64_t))(v21 + 16);
    v0[12].i64[1] = (uint64_t)v24;
    v25 = OUTLINED_FUNCTION_50();
    v24(v25);
    v26 = v23;
    Logger.logObject.getter();
    v27 = OUTLINED_FUNCTION_12_0();
    v28 = OUTLINED_FUNCTION_23_5(v27);
    v29 = v0[9].i64[0];
    v30 = v0[7].i64[1];
    if (v28)
    {
      v42 = v0[8].i64[0];
      v31 = v0[6].i64[1];
      v32 = (uint8_t *)OUTLINED_FUNCTION_105();
      v44 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v32 = 136315138;
      ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v31, v29, v30);
      __swift_storeEnumTagSinglePayload(v31, 0, 1, v30);
      specialized >> prefix<A>(_:)(v31);
      v34 = v33;
      v36 = v35;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v31, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v0[4].i64[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_115_7(v42);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v26, (os_log_type_t)v20, "Attempting to send message with UUID %s", v32);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_115_7(v0[8].i64[0]);

    v0[13].i64[0] = (uint64_t)v24;
    v37 = v0[9].i64[1];
    v38 = v0[6].i64[0];
    v39 = v0[4].i64[1];
    v43 = v0[5];
    *(_BYTE *)(v38 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_sendingInProgress) = 1;
    VideoMessageController.updateState()();
    v0[13].i64[1] = static MainActor.shared.getter();
    v40 = swift_task_alloc();
    v0[14].i64[0] = v40;
    *(_QWORD *)(v40 + 16) = v37;
    *(int8x16_t *)(v40 + 24) = vextq_s8(v43, v43, 8uLL);
    *(_QWORD *)(v40 + 40) = v39;
    *(_QWORD *)(v40 + 48) = v38;
    v41 = (_QWORD *)swift_task_alloc();
    v0[14].i64[1] = (uint64_t)v41;
    *v41 = v0;
    v41[1] = VideoMessageController.complete(sendingTo:sendingFrom:in:);
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v2);
  *(_QWORD *)(v0 + 240) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    OUTLINED_FUNCTION_29_0();
  }
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v1 = *(NSObject **)(v0 + 192);
  OUTLINED_FUNCTION_150_1();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_633();
  VideoMessageController.updateState()();
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  Logger.logObject.getter();
  v2 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_4_14(v2))
  {
    v3 = *(_QWORD *)(v0 + 240);
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 40) = v3;
    OUTLINED_FUNCTION_15_63();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v5 = OUTLINED_FUNCTION_66_20();
    *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_38_37(v5, v6, v7);
    OUTLINED_FUNCTION_33_38();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v1, (os_log_type_t)v1, "Failed to send video message with error: %s", v4);
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  (*(void (**)(_QWORD, _QWORD))(v0 + 208))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 120));
  OUTLINED_FUNCTION_80_11();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_48_0(v8);
}

#error "1BD2E9DF8: call analysis failed (funcsize=81)"

void closure #1 in VideoMessageController.complete(sendingTo:sendingFrom:in:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, __n128);
  id v19;
  id v20;
  void *v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v27 = a4;
  v28 = a6;
  v26 = a3;
  v29 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Error>);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = type metadata accessor for UUID();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - v15;
  v18 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v18((char *)&v26 - v15, a2, v10, v14);
  ((void (*)(char *, uint64_t, uint64_t))v18)(v12, v26, v10);
  objc_allocWithZone(MEMORY[0x1E0DBD330]);
  v19 = v27;
  swift_bridgeObjectRetain();
  v20 = @nonobjc TUMomentsMessageSendRequest.init(sessionUUID:conversationID:senderHandle:destinationHandles:)((uint64_t)v16, (uint64_t)v12, v19);
  VideoMessageController.momentsController.getter();
  v22 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v7);
  v23 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v24 + v23, (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = partial apply for closure #1 in closure #1 in VideoMessageController.complete(sendingTo:sendingFrom:in:);
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_88;
  v25 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v22, sel_sendVideoMessageWithRequest_completion_, v20, v25);
  _Block_release(v25);

}

uint64_t closure #1 in closure #1 in VideoMessageController.complete(sendingTo:sendingFrom:in:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  id v9;
  _QWORD v11[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Error>);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return CheckedContinuation.resume(returning:)();
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a2, v4, v6);
  v11[1] = a1;
  v9 = a1;
  CheckedContinuation.resume(throwing:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t VideoMessageController.reset()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[46] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v1[47] = OUTLINED_FUNCTION_23_3();
  v2 = OUTLINED_FUNCTION_33_0();
  v1[48] = v2;
  v1[49] = *(_QWORD *)(v2 - 8);
  v1[50] = OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_48_2();
  v1[51] = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_116();
  v1[52] = v3;
  v1[53] = v4;
  return OUTLINED_FUNCTION_2_8();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v10;

  v2 = v0[47];
  v1 = v0[48];
  v3 = v0[46];
  VideoMessageController.ignoresStateUpdates.setter(1);
  v4 = v3 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_currentRecordingUUID;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of Conversation?(v4, v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v0[47], (uint64_t *)&demangling cache variable for type metadata for UUID?);
    VideoMessageController.momentsController.getter();
    v6 = v5;
    v0[62] = v5;
    v0[10] = v0;
    v0[11] = VideoMessageController.reset();
    v7 = OUTLINED_FUNCTION_25_44();
    v0[26] = MEMORY[0x1E0C809B0];
    v8 = v0 + 26;
    v8[1] = 0x40000000;
    OUTLINED_FUNCTION_89_14(v7, (uint64_t)@objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ());
    objc_msgSend(v6, sel_resetVideoMessagingWithSessionUUID_completion_, 0, v8);
    return OUTLINED_FUNCTION_31_1();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[49] + 32))(v0[50], v0[47], v0[48]);
    v10 = (_QWORD *)swift_task_alloc();
    v0[54] = v10;
    *v10 = v0;
    v10[1] = VideoMessageController.reset();
    return VideoMessageController.stop()();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_24_4(v2);
  *(_QWORD *)(v0 + 440) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  NSUUID *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;

  VideoMessageController.momentsController.getter();
  v0[56].super.isa = v1;
  v0[57].super.isa = UUID._bridgeToObjectiveC()().super.isa;
  v2 = OUTLINED_FUNCTION_19_58((uint64_t)VideoMessageController.reset());
  v0[31].super.isa = (Class)MEMORY[0x1E0C809B0];
  v0[32].super.isa = (Class)0x40000000;
  v3 = OUTLINED_FUNCTION_89_14(v2, (uint64_t)@objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ());
  OUTLINED_FUNCTION_50_27(v3, sel_discardVideoMessageWithUUID_completion_);
  return OUTLINED_FUNCTION_31_1();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_23();
  *(_QWORD *)(v0 + 464) = v1;
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  Class isa;

  v2 = *(void **)(v0 + 456);

  VideoMessageController.momentsController.getter();
  isa = OUTLINED_FUNCTION_78_16(v3).super.isa;
  *(_QWORD *)(v0 + 480) = isa;
  *(_QWORD *)(v0 + 144) = v0;
  *(_QWORD *)(v0 + 152) = VideoMessageController.reset();
  *(_QWORD *)(v0 + 320) = OUTLINED_FUNCTION_25_44();
  *(_QWORD *)(v0 + 288) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 296) = 0x40000000;
  *(_QWORD *)(v0 + 304) = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ();
  *(_QWORD *)(v0 + 312) = &block_descriptor_37_0;
  objc_msgSend(v1, sel_resetVideoMessagingWithSessionUUID_completion_, isa, v0 + 288);
  return OUTLINED_FUNCTION_74_12();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_459();
  *(_QWORD *)(v0 + 488) = *(_QWORD *)(v0 + 176);
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t (*v5)(void);

  v4 = *(void **)(v1 + 472);
  v3 = *(void **)(v1 + 480);
  OUTLINED_FUNCTION_166();
  OUTLINED_FUNCTION_39_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));

  OUTLINED_FUNCTION_165_2();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_40_36(v5);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_459();
  *(_QWORD *)(v0 + 504) = *(_QWORD *)(v0 + 112);
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);

  v1 = *(void **)(v0 + 496);
  swift_release();

  OUTLINED_FUNCTION_165_2();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_20();
  return OUTLINED_FUNCTION_1_8(v2);
}

{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  swift_willThrow();
  OUTLINED_FUNCTION_161_1(*(void **)(v0 + 496));
  $defer #1 () in VideoMessageController.reset()(v1);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  return OUTLINED_FUNCTION_40_36(*(uint64_t (**)(void))(v0 + 8));
}

{
  NSUUID *v0;
  os_log_type_t v1;
  objc_class *isa;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  isa = v0[55].super.isa;
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.videoMessaging);
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_4_14(v5))
  {
    v6 = (uint8_t *)OUTLINED_FUNCTION_105();
    v18 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 136315138;
    v0[44].super.isa = isa;
    OUTLINED_FUNCTION_15_63();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v7 = OUTLINED_FUNCTION_88_2();
    v0[45].super.isa = (Class)OUTLINED_FUNCTION_152_2(v7, v8, v9, v10, v11, v12, v13, v14, v18);
    OUTLINED_FUNCTION_42_36();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v4, v1, "Discard during reset failed with error: %s", v6);
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  OUTLINED_FUNCTION_102_10();
  v0[60].super.isa = OUTLINED_FUNCTION_78_16(v15).super.isa;
  v0[18].super.isa = (Class)v0;
  v0[19].super.isa = (Class)VideoMessageController.reset();
  v16 = OUTLINED_FUNCTION_38_41();
  v0[40].super.isa = (Class)v16;
  v0[36].super.isa = (Class)MEMORY[0x1E0C809B0];
  v0[37].super.isa = (Class)0x40000000;
  v0[38].super.isa = (Class)@objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ();
  v0[39].super.isa = (Class)&block_descriptor_37_0;
  OUTLINED_FUNCTION_114_10(v16, sel_resetVideoMessagingWithSessionUUID_completion_);
  return OUTLINED_FUNCTION_47_21();
}

{
  NSUUID *v0;
  os_log_type_t v1;
  Class isa;
  Class v3;
  objc_class *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_32_8();
  isa = v0[57].super.isa;
  v3 = v0[56].super.isa;
  swift_willThrow();

  v4 = v0[58].super.isa;
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.videoMessaging);
  OUTLINED_FUNCTION_15_63();
  OUTLINED_FUNCTION_15_63();
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.info.getter();
  if (OUTLINED_FUNCTION_4_14(v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v8 = 136315138;
    v0[44].super.isa = v4;
    OUTLINED_FUNCTION_15_63();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v9 = OUTLINED_FUNCTION_88_2();
    v0[45].super.isa = (Class)OUTLINED_FUNCTION_38_37(v9, v10, v11);
    OUTLINED_FUNCTION_42_36();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v6, v1, "Discard during reset failed with error: %s", v8);
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  OUTLINED_FUNCTION_102_10();
  v0[60].super.isa = OUTLINED_FUNCTION_78_16(v12).super.isa;
  v0[18].super.isa = (Class)v0;
  v0[19].super.isa = (Class)VideoMessageController.reset();
  v13 = OUTLINED_FUNCTION_38_41();
  v0[40].super.isa = (Class)v13;
  v0[36].super.isa = (Class)MEMORY[0x1E0C809B0];
  v0[37].super.isa = (Class)0x40000000;
  v0[38].super.isa = (Class)@objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ();
  v0[39].super.isa = (Class)&block_descriptor_37_0;
  OUTLINED_FUNCTION_114_10(v13, sel_resetVideoMessagingWithSessionUUID_completion_);
  return OUTLINED_FUNCTION_53_29();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v3 = *(void **)(v1 + 480);
  OUTLINED_FUNCTION_166();
  swift_willThrow();
  OUTLINED_FUNCTION_39_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));

  OUTLINED_FUNCTION_161_1(*(void **)(v1 + 472));
  $defer #1 () in VideoMessageController.reset()((uint64_t)v3);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  return OUTLINED_FUNCTION_40_36(*(uint64_t (**)(void))(v1 + 8));
}

void $defer #1 () in VideoMessageController.reset()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _BYTE v12[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for UUID();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  VideoMessageController.currentRecordingUUID.setter((uint64_t)v4);
  VideoMessageController.countdownSink.setter(0);
  VideoMessageController.latestVideoMessageSandboxURL.setter(0);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_warmedMomentsController) = 0;
  VideoMessageController._momentsController.setter(0);
  v6 = (_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_countdownShown);
  swift_beginAccess();
  *v6 = 0;
  v7 = (_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_isVideoSensitive);
  swift_beginAccess();
  *v7 = 0;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_sendingInProgress) = 0;
  VideoMessageController.ignoresStateUpdates.setter(0);
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)&static Logger.videoMessaging);
  v9 = Logger.logObject.getter();
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_1BD004000, v9, v10, "Reset message controller complete", v11, 2u);
    MEMORY[0x1C3B751B8](v11, -1, -1);
  }

}

uint64_t VideoMessageController.discardRecording()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[20] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v1[21] = OUTLINED_FUNCTION_6_15();
  v1[22] = OUTLINED_FUNCTION_5_55();
  v2 = OUTLINED_FUNCTION_33_0();
  v1[23] = v2;
  v1[24] = *(_QWORD *)(v2 - 8);
  v1[25] = OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_48_2();
  v1[26] = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_116();
  v1[27] = v3;
  v1[28] = v4;
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_175_0(v2, v3, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_83_16(v1);
  if (v4)
  {
    v5 = swift_release();
    OUTLINED_FUNCTION_143(v5, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_68_15();
    OUTLINED_FUNCTION_70_16(OBJC_IVAR____TtC15ConversationKit22VideoMessageController_warmedMomentsController);
    OUTLINED_FUNCTION_62_24();
    OUTLINED_FUNCTION_70_16(OBJC_IVAR____TtC15ConversationKit22VideoMessageController_warmedMomentsController);
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 32))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));
    VideoMessageController.momentsController.getter();
    *(_QWORD *)(v0 + 232) = v6;
    *(NSUUID *)(v0 + 240) = UUID._bridgeToObjectiveC()();
    v7 = OUTLINED_FUNCTION_19_58((uint64_t)VideoMessageController.discardRecording());
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    v8 = OUTLINED_FUNCTION_89_14(v7, (uint64_t)@objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ());
    OUTLINED_FUNCTION_50_27(v8, sel_discardVideoMessageWithUUID_completion_);
    return OUTLINED_FUNCTION_74_12();
  }
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_23();
  *(_QWORD *)(v0 + 248) = v1;
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)(v0 + 232);
  v1 = *(void **)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  swift_release();

  OUTLINED_FUNCTION_82_7(v4, 1);
  OUTLINED_FUNCTION_4_41(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_68_15();
  OUTLINED_FUNCTION_70_16(OBJC_IVAR____TtC15ConversationKit22VideoMessageController_warmedMomentsController);
  OUTLINED_FUNCTION_62_24();
  OUTLINED_FUNCTION_70_16(OBJC_IVAR____TtC15ConversationKit22VideoMessageController_warmedMomentsController);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_32_8();
  v1 = *(void **)(v0 + 240);
  v2 = *(void **)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 192);
  swift_release();
  swift_willThrow();
  OUTLINED_FUNCTION_39_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));

  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  v6 = __swift_project_value_buffer(v5, (uint64_t)&static Logger.videoMessaging);
  OUTLINED_FUNCTION_59_11();
  OUTLINED_FUNCTION_59_11();
  v7 = v6;
  Logger.logObject.getter();
  v8 = OUTLINED_FUNCTION_232();
  v9 = OUTLINED_FUNCTION_4_14(v8);
  v10 = *(_QWORD *)(v0 + 248);
  if (v9)
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v0 + 144) = v10;
    OUTLINED_FUNCTION_15_63();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v12 = OUTLINED_FUNCTION_88_2();
    *(_QWORD *)(v0 + 152) = OUTLINED_FUNCTION_38_37(v12, v13, v14);
    OUTLINED_FUNCTION_42_36();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v7, (os_log_type_t)v1, "Recording discard failed with error: %s", v11);
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_19_2();

  OUTLINED_FUNCTION_62_24();
  OUTLINED_FUNCTION_70_16(OBJC_IVAR____TtC15ConversationKit22VideoMessageController_warmedMomentsController);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t VideoMessageController.State.debugDescription.getter()
{
  Swift::String v0;

  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  _print_unlocked<A, B>(_:_:)();
  return 0;
}

ConversationKit::VideoMessageController::State_optional __swiftcall VideoMessageController.State.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of VideoMessageController.State.init(rawValue:), v2);
  OUTLINED_FUNCTION_13_3();
  if (v3 >= 0xA)
    return (ConversationKit::VideoMessageController::State_optional)10;
  else
    return (ConversationKit::VideoMessageController::State_optional)v3;
}

void *static VideoMessageController.State.allCases.getter()
{
  return &outlined read-only object #0 of static VideoMessageController.State.allCases.getter;
}

uint64_t VideoMessageController.State.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD2EB29C + 4 * byte_1BD656E2A[a1]))(0x616C696176616E75, 0xEB00000000656C62);
}

uint64_t sub_1BD2EB29C()
{
  return 0x7964616552746F6ELL;
}

unint64_t sub_1BD2EB2B4()
{
  return 0xD000000000000014;
}

uint64_t sub_1BD2EB2D4()
{
  return 0x7964616572;
}

uint64_t sub_1BD2EB2E8()
{
  return 0x676E696D726177;
}

uint64_t sub_1BD2EB374()
{
  return 1953391987;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance VideoMessageController.State(char *a1)
{
  specialized == infix<A>(_:_:)(*a1);
}

void protocol witness for Hashable.hashValue.getter in conformance VideoMessageController.State()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance VideoMessageController.State(uint64_t a1)
{
  char *v1;

  specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance VideoMessageController.State(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

ConversationKit::VideoMessageController::State_optional protocol witness for RawRepresentable.init(rawValue:) in conformance VideoMessageController.State@<W0>(Swift::String *a1@<X0>, ConversationKit::VideoMessageController::State_optional *a2@<X8>)
{
  ConversationKit::VideoMessageController::State_optional result;

  result.value = VideoMessageController.State.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance VideoMessageController.State(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = VideoMessageController.State.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void protocol witness for static CaseIterable.allCases.getter in conformance VideoMessageController.State(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static VideoMessageController.State.allCases.getter;
}

void VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[6];

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  v18 = *(_QWORD *)(type metadata accessor for DispatchWorkItemFlags() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2_20();
  v17 = type metadata accessor for DispatchQoS();
  v7 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v11 = (void *)static OS_dispatch_queue.main.getter();
  v12 = (_QWORD *)OUTLINED_FUNCTION_15();
  v12[2] = v0;
  v12[3] = v3;
  v12[4] = v5;
  v19[4] = partial apply for closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:);
  v19[5] = v12;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = thunk for @escaping @callee_guaranteed () -> ();
  v19[3] = &block_descriptor_43_0;
  v13 = _Block_copy(v19);
  v14 = v0;
  v15 = v3;
  v16 = v5;
  OUTLINED_FUNCTION_43();
  static DispatchQoS.unspecified.getter();
  v19[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v10, v1, v13);
  _Block_release(v13);

  OUTLINED_FUNCTION_39_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v17);
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)(_QWORD *a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  int EnumTagSinglePayload;
  int v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char **v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  void (*v44)(_BYTE *, uint64_t);
  _BYTE *v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  unsigned __int8 v53;
  uint64_t v54;
  char v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  _BYTE *v60;
  id v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  void (*v67)(_BYTE *, uint64_t);
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  _BYTE *v72;
  NSURL *v73;
  void *v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  char v82;
  uint64_t v83;
  id v84;
  _QWORD *v85;
  id v86;
  _QWORD *v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  id v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  _BYTE v101[4];
  int v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  id v108;
  _BYTE *v109;
  uint64_t v110;
  _BYTE *v111;
  _BYTE *v112;
  _BYTE *v113;
  void *v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *aBlock;
  uint64_t v118;
  void *v119;
  void *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;

  v108 = a3;
  v5 = type metadata accessor for URL();
  v104 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v103 = &v101[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v7);
  v107 = &v101[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for UUID();
  v115 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v109 = &v101[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  v12 = MEMORY[0x1E0C80A78](v11);
  v113 = &v101[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v15 = &v101[-v14];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v17 = MEMORY[0x1E0C80A78](v16);
  v106 = &v101[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x1E0C80A78](v17);
  v112 = &v101[-v20];
  v21 = MEMORY[0x1E0C80A78](v19);
  v111 = &v101[-v22];
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = &v101[-v24];
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = &v101[-v27];
  MEMORY[0x1E0C80A78](v26);
  v30 = &v101[-v29];
  v116 = a1;
  v31 = (uint64_t)a1 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_currentRecordingUUID;
  swift_beginAccess();
  outlined init with copy of Conversation?(v31, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v114 = a2;
  v32 = objc_msgSend(a2, sel_uuid);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v9);
  v110 = v11;
  v33 = (uint64_t)&v15[*(int *)(v11 + 48)];
  outlined init with copy of Conversation?((uint64_t)v30, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of Conversation?((uint64_t)v28, v33, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9);
  v105 = v5;
  if (EnumTagSinglePayload != 1)
  {
    outlined init with copy of Conversation?((uint64_t)v15, (uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v33, 1, v9) != 1)
    {
      v41 = v115;
      v42 = v31;
      v43 = v109;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v115 + 32))(v109, v33, v9);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      v102 = dispatch thunk of static Equatable.== infix(_:_:)();
      v44 = *(void (**)(_BYTE *, uint64_t))(v41 + 8);
      v45 = v43;
      v31 = v42;
      v44(v45, v9);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v44(v25, v9);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v39 = (uint64_t)v113;
      v38 = v114;
      v40 = &selRef_setTarget_;
      v36 = (uint64_t)v112;
      if ((v102 & 1) != 0)
        goto LABEL_9;
LABEL_8:
      v46 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload((uint64_t)v107, 1, 1, v46);
      type metadata accessor for MainActor();
      v47 = v108;
      v48 = v38;
      v49 = static MainActor.shared.getter();
      v50 = (_QWORD *)swift_allocObject();
      v51 = MEMORY[0x1E0DF06E8];
      v50[2] = v49;
      v50[3] = v51;
      v50[4] = v47;
      v50[5] = v48;
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      v37 = swift_release();
      goto LABEL_9;
    }
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v25, v9);
    v36 = (uint64_t)v112;
LABEL_6:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    v39 = (uint64_t)v113;
    v38 = v114;
    v40 = &selRef_setTarget_;
    goto LABEL_8;
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v35 = __swift_getEnumTagSinglePayload(v33, 1, v9);
  v36 = (uint64_t)v112;
  if (v35 != 1)
    goto LABEL_6;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v39 = (uint64_t)v113;
  v38 = v114;
  v40 = &selRef_setTarget_;
LABEL_9:
  v52 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v116) + 0xF0);
  v53 = v52(v37);
  if (VideoMessageController.State.rawValue.getter(v53) == 0x6552657669746361 && v54 == 0xEF676E6964726F63)
    goto LABEL_16;
  v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
  v57 = swift_bridgeObjectRelease();
  if ((v56 & 1) != 0)
    goto LABEL_17;
  v58 = v52(v57);
  if (VideoMessageController.State.rawValue.getter(v58) == 0xD000000000000013 && v59 == 0x80000001BD66C3F0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
  }
  else
  {
    v82 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v82 & 1) == 0)
      goto LABEL_31;
  }
LABEL_17:
  v60 = v111;
  outlined init with copy of Conversation?(v31, (uint64_t)v111, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v61 = objc_msgSend(v38, v40[87]);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  __swift_storeEnumTagSinglePayload(v36, 0, 1, v9);
  v62 = v39 + *(int *)(v110 + 48);
  outlined init with copy of Conversation?((uint64_t)v60, v39, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of Conversation?(v36, v62, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v39, 1, v9) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v60, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v62, 1, v9) == 1)
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v39, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (!objc_msgSend((id)objc_opt_self(), sel_isAnalysisEnabled))
        goto LABEL_29;
LABEL_24:
      if (one-time initialization token for shared != -1)
        swift_once();
      if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 872))() & 1) != 0)
      {
        v69 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC61A0]), sel_init);
        v70 = objc_msgSend(v38, sel_videoURL);
        v71 = objc_msgSend(v70, sel_URL);

        v72 = v103;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        URL._bridgeToObjectiveC()(v73);
        v75 = v74;
        (*(void (**)(_BYTE *, uint64_t))(v104 + 8))(v72, v105);
        v121 = closure #2 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:);
        v122 = 0;
        v76 = MEMORY[0x1E0C809B0];
        aBlock = (_QWORD *)MEMORY[0x1E0C809B0];
        v118 = 1107296256;
        v119 = thunk for @escaping @callee_guaranteed (@in_guaranteed URL, @unowned Double) -> ();
        v120 = &block_descriptor_68;
        v77 = _Block_copy(&aBlock);
        v78 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v79 = swift_allocObject();
        *(_QWORD *)(v79 + 16) = v78;
        *(_QWORD *)(v79 + 24) = v38;
        v121 = partial apply for closure #3 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:);
        v122 = v79;
        aBlock = (_QWORD *)v76;
        v118 = 1107296256;
        v119 = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
        v120 = &block_descriptor_75;
        v80 = _Block_copy(&aBlock);
        v81 = v38;
        swift_release();
        objc_msgSend(v69, sel_analyzeVideoFile_useBlastdoor_progressHandler_completionHandler_, v75, 0, v77, v80);
        _Block_release(v80);
        _Block_release(v77);

      }
      else
      {
LABEL_29:
        VideoMessageController.latestVideoMessageSandboxURL.setter(objc_msgSend(v38, sel_videoURL));
      }
      return;
    }
    goto LABEL_22;
  }
  v63 = v106;
  outlined init with copy of Conversation?(v39, (uint64_t)v106, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v62, 1, v9) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v60, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v63, v9);
LABEL_22:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v39, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_31;
  }
  v64 = v60;
  v65 = v115;
  v66 = v109;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v115 + 32))(v109, v62, v9);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  LODWORD(v113) = dispatch thunk of static Equatable.== infix(_:_:)();
  v67 = *(void (**)(_BYTE *, uint64_t))(v65 + 8);
  v67(v66, v9);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v36, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v68 = (uint64_t)v64;
  v38 = v114;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v68, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v67(v63, v9);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v39, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if ((v113 & 1) != 0)
    goto LABEL_24;
LABEL_31:
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v83 = type metadata accessor for Logger();
  __swift_project_value_buffer(v83, (uint64_t)&static Logger.videoMessaging);
  v84 = v38;
  v85 = v116;
  v86 = v84;
  v87 = v85;
  v88 = Logger.logObject.getter();
  v89 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v88, v89))
  {
    v90 = swift_slowAlloc();
    v116 = (_QWORD *)swift_slowAlloc();
    aBlock = v116;
    *(_DWORD *)v90 = 136315394;
    v114 = (void *)(v90 + 4);
    v91 = objc_msgSend(v86, v40[87]);
    v92 = v109;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v93 = dispatch thunk of CustomStringConvertible.description.getter();
    v94 = v52;
    v96 = v95;
    (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v92, v9);
    v123 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v93, v96, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    v97 = swift_bridgeObjectRelease();
    *(_WORD *)(v90 + 12) = 2080;
    LOBYTE(v123) = v94(v97);
    v98 = String.init<A>(reflecting:)();
    v123 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v98, v99, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v88, v89, "Unexpected callback for message %s while in state %s", (uint8_t *)v90, 0x16u);
    v100 = v116;
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v100, -1, -1);
    MEMORY[0x1C3B751B8](v90, -1, -1);

  }
  else
  {

  }
}

uint64_t closure #1 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for UUID();
  v5[17] = v6;
  v5[18] = *(_QWORD *)(v6 - 8);
  v5[19] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[20] = static MainActor.shared.getter();
  v5[21] = dispatch thunk of Actor.unownedExecutor.getter();
  v5[22] = v7;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  Class isa;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(void **)(v0 + 120);
  v5 = objc_msgSend(*(id *)(v0 + 128), sel_uuid);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  isa = UUID._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)(v0 + 184) = isa;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = closure #1 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:);
  v7 = OUTLINED_FUNCTION_38_41();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = @objc completion handler block implementation for @escaping @callee_unowned @convention(block) (@unowned NSError?) -> () with result type ();
  *(_QWORD *)(v0 + 104) = &block_descriptor_82_0;
  *(_QWORD *)(v0 + 112) = v7;
  objc_msgSend(v4, sel_discardVideoMessageWithUUID_completion_, isa, v0 + 80);
  return swift_continuation_await();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_23();
  *(_QWORD *)(v0 + 192) = v1;
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 184);
  swift_release();

  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.videoMessaging);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_23_5(v3))
  {
    v4 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v4);
    OUTLINED_FUNCTION_11_78(&dword_1BD004000, v5, v6, "Tossed mismatched video message");
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_12();
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  swift_release();
  swift_willThrow();
  OUTLINED_FUNCTION_48_3();

  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.videoMessaging);
  v4 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_23_5(v4))
  {
    v5 = (_WORD *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_124_3(v5);
    OUTLINED_FUNCTION_11_78(&dword_1BD004000, v6, v7, "Tossed mismatched video message");
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_12();
  return OUTLINED_FUNCTION_14_3(*(uint64_t (**)(void))(v0 + 8));
}

void closure #2 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)&static Logger.videoMessaging);
  oslog = Logger.logObject.getter();
  v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v2 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, oslog, v1, "Evaluation percentage: %f", v2, 0xCu);
    MEMORY[0x1C3B751B8](v2, -1, -1);
  }

}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed URL, @unowned Double) -> ()(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, double);
  uint64_t v10;

  v4 = type metadata accessor for URL();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *, double))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v8(v7, a2);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t closure #3 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)(int a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint8_t *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v8 = type metadata accessor for DispatchWorkItemFlags();
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS();
  v38 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v36 = a1;
    v14 = a2;
    if (one-time initialization token for videoMessaging != -1)
      swift_once();
    v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)&static Logger.videoMessaging);
    v16 = a2;
    v17 = a2;
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v32 = a3;
      v20 = swift_slowAlloc();
      v35 = v8;
      v21 = (uint8_t *)v20;
      v31 = (_QWORD *)swift_slowAlloc();
      v33 = a4;
      v34 = v11;
      *(_DWORD *)v21 = 138412290;
      v22 = a2;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v23;
      a4 = v33;
      v11 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v24 = v31;
      *v31 = v23;
      a3 = v32;

      _os_log_impl(&dword_1BD004000, v18, v19, "Evaluation of video returned an error: %@", v21, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v24, -1, -1);
      v25 = v21;
      v8 = v35;
      MEMORY[0x1C3B751B8](v25, -1, -1);

    }
    else
    {

    }
    LOBYTE(a1) = v36;
  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v26 = (void *)static OS_dispatch_queue.main.getter();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a3;
  *(_BYTE *)(v27 + 24) = a1 & 1;
  *(_QWORD *)(v27 + 32) = a4;
  aBlock[4] = partial apply for closure #1 in closure #3 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:);
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_81;
  v28 = _Block_copy(aBlock);
  swift_retain();
  v29 = a4;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v13, v10, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v13, v11);
}

void closure #1 in closure #3 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)(uint64_t a1, char a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _BYTE *v8;
  uint64_t v9;
  void *v10;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (_BYTE *)(v6 + OBJC_IVAR____TtC15ConversationKit22VideoMessageController_isVideoSensitive);
    swift_beginAccess();
    *v8 = a2 & 1;

  }
  swift_beginAccess();
  v9 = MEMORY[0x1C3B752C0](v5);
  if (v9)
  {
    v10 = (void *)v9;
    VideoMessageController.latestVideoMessageSandboxURL.setter(objc_msgSend(a3, sel_videoURL));

  }
}

void sub_1BD2ECC7C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x210))();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for VideoMessageController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for VideoMessageController;
  if (!type metadata singleton initialization cache for VideoMessageController)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BD2ECCE8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in VideoMessageController.init(callCenter:notificationCenter:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in VideoMessageController.init(callCenter:notificationCenter:)(a1, v1);
}

id @nonobjc AVAudioPlayer.init(contentsOf:)(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  id v11;
  uint64_t v12;
  id v14;
  NSURL *v15;

  v2 = v1;
  v15 = (NSURL *)*MEMORY[0x1E0C80C00];
  URL._bridgeToObjectiveC()(v15);
  v5 = v4;
  v14 = 0;
  v6 = objc_msgSend(v2, sel_initWithContentsOfURL_error_, v4, &v14);

  v7 = v14;
  if (v6)
  {
    v8 = type metadata accessor for URL();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v10 = v7;
    v9(a1, v8);
  }
  else
  {
    v11 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v12 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

id @nonobjc TUMomentsMessageSendRequest.init(sessionUUID:conversationID:senderHandle:destinationHandles:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v4;
  Class isa;
  Class v9;
  Class v10;
  id v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  v4 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = UUID._bridgeToObjectiveC()().super.isa;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject();
  v10 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v4, sel_initWithSessionUUID_conversationID_senderHandle_destinationHandles_, isa, v9, a3, v10);

  v12 = type metadata accessor for UUID();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(a2, v12);
  v13(a1, v12);
  return v11;
}

id outlined bridged method (mbbnn) of @objc NSBundle.url(forResource:withExtension:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  void *v9;
  id v10;

  v8 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  v9 = (void *)MEMORY[0x1C3B72E00](a3, a4);
  OUTLINED_FUNCTION_27();
  v10 = objc_msgSend(a5, sel_URLForResource_withExtension_, v8, v9);

  return v10;
}

uint64_t sub_1BD2ECFA4()
{
  return swift_deallocObject();
}

uint64_t sub_1BD2ECFB4()
{
  return objectdestroy_13Tm_2((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t partial apply for closure #1 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)()
{
  uint64_t v0;

  return closure #1 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)(*(_QWORD *)(v0 + 16), *(uint64_t (**)(_QWORD))(v0 + 24));
}

uint64_t sub_1BD2ECFCC()
{
  OUTLINED_FUNCTION_285();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t (**)(uint64_t))(v1 + 48));
}

uint64_t sub_1BD2ED014()
{
  return objectdestroy_13Tm_2((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t objectdestroy_13Tm_2(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = OUTLINED_FUNCTION_20_27(v3);
  return closure #3 in VideoMessageController.prewarm(withDuration:countdownTicker:countdownStopped:)(v4, v5, v6, v2);
}

unint64_t lazy protocol witness table accessor for type VideoMessageController.UnrecoverableErrors and conformance VideoMessageController.UnrecoverableErrors()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessageController.UnrecoverableErrors and conformance VideoMessageController.UnrecoverableErrors;
  if (!lazy protocol witness table cache variable for type VideoMessageController.UnrecoverableErrors and conformance VideoMessageController.UnrecoverableErrors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessageController.UnrecoverableErrors, &type metadata for VideoMessageController.UnrecoverableErrors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessageController.UnrecoverableErrors and conformance VideoMessageController.UnrecoverableErrors);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessageController.UnrecoverableErrors and conformance VideoMessageController.UnrecoverableErrors;
  if (!lazy protocol witness table cache variable for type VideoMessageController.UnrecoverableErrors and conformance VideoMessageController.UnrecoverableErrors)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessageController.UnrecoverableErrors, &type metadata for VideoMessageController.UnrecoverableErrors);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessageController.UnrecoverableErrors and conformance VideoMessageController.UnrecoverableErrors);
  }
  return result;
}

void outlined init with copy of Conversation?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(a3);
  v3 = OUTLINED_FUNCTION_50();
  v4(v3);
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type VideoMessageController.VideoMessageError and conformance VideoMessageController.VideoMessageError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessageController.VideoMessageError and conformance VideoMessageController.VideoMessageError;
  if (!lazy protocol witness table cache variable for type VideoMessageController.VideoMessageError and conformance VideoMessageController.VideoMessageError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessageController.VideoMessageError, &type metadata for VideoMessageController.VideoMessageError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessageController.VideoMessageError and conformance VideoMessageController.VideoMessageError);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessageController.VideoMessageError and conformance VideoMessageController.VideoMessageError;
  if (!lazy protocol witness table cache variable for type VideoMessageController.VideoMessageError and conformance VideoMessageController.VideoMessageError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessageController.VideoMessageError, &type metadata for VideoMessageController.VideoMessageError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessageController.VideoMessageError and conformance VideoMessageController.VideoMessageError);
  }
  return result;
}

void partial apply for closure #1 in VideoMessageController.complete(sendingTo:sendingFrom:in:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in VideoMessageController.complete(sendingTo:sendingFrom:in:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1BD2ED168()
{
  uint64_t v0;

  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

void partial apply for closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)()
{
  uint64_t v0;

  closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)(*(_QWORD **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t lazy protocol witness table accessor for type VideoMessageController.State and conformance VideoMessageController.State()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VideoMessageController.State and conformance VideoMessageController.State;
  if (!lazy protocol witness table cache variable for type VideoMessageController.State and conformance VideoMessageController.State)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VideoMessageController.State, &type metadata for VideoMessageController.State);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VideoMessageController.State and conformance VideoMessageController.State);
  }
  return result;
}

void associated type witness table accessor for CaseIterable.AllCases : Collection in VideoMessageController.State()
{
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [VideoMessageController.State] and conformance [A], &demangling cache variable for type metadata for [VideoMessageController.State]);
}

void sub_1BD2ED288()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x108))();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD2ED2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for VideoMessageController.$state : VideoMessageController(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher, VideoMessageController.$state.setter);
}

void sub_1BD2ED2DC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x120))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2ED310()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x138))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2ED348()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x150))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD2ED380()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x168))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2ED3B4(char *a1)
{
  VideoMessageController.isVideoSensitive.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2ED3D4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x1A0))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2ED408(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1A8))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2ED440()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x1B8))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2ED474(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1C0))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2ED4AC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x228))();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD2ED4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for VideoMessageController.$state : VideoMessageController(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<URL?>.Publisher, VideoMessageController.$latestVideoMessageURL.setter);
}

void sub_1BD2ED500()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x2F0))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD2ED534(char *a1)
{
  VideoMessageController.countdownShown.setter(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for VideoMessageController()
{
  return type metadata accessor for VideoMessageController();
}

void type metadata completion function for VideoMessageController()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Published<VideoMessageController.State>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID?();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<URL?>();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for VideoMessageController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VideoMessageController.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of VideoMessageController.$state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of VideoMessageController.mostRecentActiveConversation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of VideoMessageController.mostRecentActiveConversation.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of VideoMessageController.mostRecentActiveConversation.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of VideoMessageController.mostRecentLocalHandle.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of VideoMessageController.mostRecentLocalHandle.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of VideoMessageController.mostRecentLocalHandle.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of VideoMessageController.currentVideoMessagePlayerViewModel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of VideoMessageController.currentVideoMessagePlayerViewModel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of VideoMessageController.currentVideoMessagePlayerViewModel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of VideoMessageController.isVideoSensitive.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of VideoMessageController.isInVideoMessageFlow.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of VideoMessageController.viewStateReadyForVideoMessageRecording.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of VideoMessageController.viewStateReadyForVideoMessageRecording.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of VideoMessageController.viewStateReadyForVideoMessageRecording.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of VideoMessageController.isVideoMessagingEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of VideoMessageController.isVideoMessagingEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of VideoMessageController.isVideoMessagingEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of VideoMessageController.latestVideoMessageURL.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of VideoMessageController.$latestVideoMessageURL.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x228))();
}

uint64_t dispatch thunk of VideoMessageController.countdownShown.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2F0))();
}

uint64_t dispatch thunk of VideoMessageController.__allocating_init(callCenter:notificationCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 776))();
}

uint64_t dispatch thunk of VideoMessageController.playSentVideoMessageTone()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x310))();
}

void type metadata accessor for Published<URL?>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<URL?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for URL?);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<URL?>);
  }
}

uint64_t storeEnumTagSinglePayload for VideoMessageController.UnrecoverableErrors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD2ED994 + 4 * byte_1BD656E39[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD2ED9C8 + 4 * byte_1BD656E34[v4]))();
}

uint64_t sub_1BD2ED9C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2ED9D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD2ED9D8);
  return result;
}

uint64_t sub_1BD2ED9E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD2ED9ECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD2ED9F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2ED9F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VideoMessageController.UnrecoverableErrors()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for VideoMessageController.VideoMessageError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD2EDA50 + 4 * byte_1BD656E3E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD2EDA70 + 4 * byte_1BD656E43[v4]))();
}

_BYTE *sub_1BD2EDA50(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD2EDA70(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD2EDA78(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD2EDA80(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD2EDA88(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD2EDA90(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for VideoMessageController.VideoMessageError()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for VideoMessageController.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoMessageController.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1BD2EDB7C + 4 * byte_1BD656E4D[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1BD2EDBB0 + 4 * byte_1BD656E48[v4]))();
}

uint64_t sub_1BD2EDBB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2EDBB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD2EDBC0);
  return result;
}

uint64_t sub_1BD2EDBCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD2EDBD4);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1BD2EDBD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD2EDBE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VideoMessageController.State()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1BD2EDBF8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_109_8();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = OUTLINED_FUNCTION_20_27(v4);
  return closure #1 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)(v5, v6, v7, v3, v2);
}

uint64_t sub_1BD2EDC90()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)(int a1, void *a2)
{
  uint64_t v2;

  return closure #3 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1BD2EDCC0()
{
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_109_8();
  OUTLINED_FUNCTION_43_2();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #3 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)()
{
  uint64_t v0;

  closure #1 in closure #3 in closure #1 in VideoMessageController.momentsController(_:didFinishProcessingRawVideoMessage:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1BD2EDCEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Error>);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in VideoMessageController.complete(sendingTo:sendingFrom:in:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<(), Error>)
                                      - 8)
                          + 80);
  return closure #1 in closure #1 in VideoMessageController.complete(sendingTo:sendingFrom:in:)(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t outlined assign with copy of UUID?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #2 in VideoMessageController.currentVideoMessagePlayerViewModel.didset(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in VideoMessageController.currentVideoMessagePlayerViewModel.didset(a1, v1);
}

void partial apply for closure #1 in closure #2 in VideoMessageController.currentVideoMessagePlayerViewModel.didset()
{
  uint64_t v0;

  closure #1 in closure #2 in VideoMessageController.currentVideoMessagePlayerViewModel.didset(v0);
}

uint64_t OUTLINED_FUNCTION_39_46()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t OUTLINED_FUNCTION_75_13(float a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  float *v4;
  uint64_t v5;

  *v4 = a1;
  return v3(v5, v1, v2);
}

id OUTLINED_FUNCTION_76_14(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, float a9, uint64_t a10, uint64_t a11)
{
  float *v11;
  uint64_t v12;
  void *v13;

  *v11 = a9;
  *(_QWORD *)(v12 + 144) = v13;
  return v13;
}

uint64_t OUTLINED_FUNCTION_89_14@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;

  v3[2] = a2;
  v3[3] = v2;
  v3[4] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_101_11()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_102_10()
{
  VideoMessageController.momentsController.getter();
}

uint64_t OUTLINED_FUNCTION_103_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_104_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t))
{
  uint64_t v12;

  return a12(a11, v12);
}

uint64_t OUTLINED_FUNCTION_117_7()
{
  return swift_task_dealloc();
}

NSUUID OUTLINED_FUNCTION_118_8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 288) = a1;
  return UUID._bridgeToObjectiveC()();
}

uint64_t OUTLINED_FUNCTION_124_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_126_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 264) = a1;
  *(_BYTE *)(v1 + a1) = 1;
  return VideoMessageController.updateState()();
}

uint64_t OUTLINED_FUNCTION_127_4(float a1)
{
  float *v1;

  *v1 = a1;
  return VideoMessageController.mediaType.getter();
}

uint64_t OUTLINED_FUNCTION_129_4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 280))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
}

uint64_t OUTLINED_FUNCTION_132_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  unint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v6, (uint64_t *)va);
}

id OUTLINED_FUNCTION_138_2(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, v2, v4);
}

uint64_t OUTLINED_FUNCTION_139_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_150_1()
{
  return swift_release();
}

id OUTLINED_FUNCTION_151_1(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 256) = a1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_154_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_159_1(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of Conversation?(v4, v3, a3);
}

void OUTLINED_FUNCTION_161_1(void *a1@<X8>)
{

}

void OUTLINED_FUNCTION_165_2()
{
  uint64_t v0;

  $defer #1 () in VideoMessageController.reset()(*(_QWORD *)(v0 + 368));
}

void OUTLINED_FUNCTION_167_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_174_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)va);
}

void OUTLINED_FUNCTION_175_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of Conversation?(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_179_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_182_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_186_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = a1;
  return VideoMessageController.mediaType.getter();
}

uint64_t OUTLINED_FUNCTION_188_0()
{
  return swift_release();
}

uint64_t specialized BidirectionalCollection.last.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return specialized BidirectionalCollection.last.getter(a1, type metadata accessor for HUDActivityManager.BannerUpdate, a2);
}

{
  return specialized BidirectionalCollection.last.getter(a1, type metadata accessor for Participant, a2);
}

{
  return specialized BidirectionalCollection.last.getter(a1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction, a2);
}

{
  return specialized BidirectionalCollection.last.getter(a1, type metadata accessor for CaptionSectioner.Caption, a2);
}

{
  return specialized BidirectionalCollection.last.getter(a1, type metadata accessor for CaptionSectioner.SpeakerSection, a2);
}

{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = v3 - 1;
    v6 = type metadata accessor for IndexPath();
    OUTLINED_FUNCTION_12_11();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1 + v7 + *(_QWORD *)(v8 + 72) * v5, v6);
    return OUTLINED_FUNCTION_0_29(a2, 0, 1, v6);
  }
  else
  {
    type metadata accessor for IndexPath();
    v10 = OUTLINED_FUNCTION_76_0();
    return OUTLINED_FUNCTION_0_29(v10, v11, v12, v13);
  }
}

uint64_t specialized BidirectionalCollection.last.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 32 * v1);
  OUTLINED_FUNCTION_25_2();
  return v2;
}

{
  if (*(_QWORD *)(a1 + 16))
    return swift_bridgeObjectRetain();
  else
    return 0;
}

{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    return *(unsigned __int8 *)(v1 + a1 + 31);
  else
    return 8;
}

uint64_t specialized BidirectionalCollection.last.getter@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v7 = v5 - 1;
    v8 = a2(0);
    OUTLINED_FUNCTION_12_11();
    _s15ConversationKit11ParticipantVWOcTm_3(a1 + v9 + *(_QWORD *)(v10 + 72) * v7, a3, a2);
    v11 = a3;
    v12 = 0;
    v13 = 1;
    v14 = v8;
  }
  else
  {
    a2(0);
    v11 = OUTLINED_FUNCTION_76_0();
  }
  return __swift_storeEnumTagSinglePayload(v11, v12, v13, v14);
}

double specialized BidirectionalCollection.last.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    outlined init with copy of RadarReporting(a1 + 40 * v2 - 8, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void SessionActivationRequestNotice.fullSentence.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;

  OUTLINED_FUNCTION_93();
  v3 = OUTLINED_FUNCTION_222_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_101_0();
  type metadata accessor for String.LocalizationValue();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_154_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_254_1();
  OUTLINED_FUNCTION_30_46();
  OUTLINED_FUNCTION_61();
  v7._countAndFlagsBits = 0x100000000000001ALL;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v7);
  v8 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SessionActivationRequestNotice(0) + 60));
  v9 = v8[3];
  v10 = v8[4];
  OUTLINED_FUNCTION_76_11(v8);
  v11._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 80))(v9, v10);
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v11);
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_108_6();
  OUTLINED_FUNCTION_388();
  OUTLINED_FUNCTION_383_0();
  if (one-time initialization token for foregroundContainer != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_88();
  __swift_project_value_buffer(v12, (uint64_t)static AttributedStrings.Notices.foregroundContainer);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0CAEFD8], v3);
  OUTLINED_FUNCTION_378_0();
  OUTLINED_FUNCTION_39_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_52_1();
}

uint64_t type metadata accessor for SessionActivationRequestNotice(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for SessionActivationRequestNotice);
}

void SessionActivationRequestNotice.title.getter()
{
  objc_class *v0;
  NSBundle v1;
  uint64_t v2;

  v0 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_16_15();
  OUTLINED_FUNCTION_61();
  v1.super.isa = v0;
  OUTLINED_FUNCTION_49_2(0xD000000000000016, v2, 0x61737265766E6F43, 0xEF74694B6E6F6974, v1);

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_45_0();
}

void SessionActivationRequestNotice.attributedSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  unint64_t v4;
  NSBundle v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  v3 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_18_3();
  v4 = OUTLINED_FUNCTION_95_12();
  v5.super.isa = v3;
  OUTLINED_FUNCTION_49_2(v4, v6, v7, v8, v5);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v9 = OUTLINED_FUNCTION_16_9();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
  v10 = type metadata accessor for SessionActivationRequestNotice(0);
  OUTLINED_FUNCTION_372_0((_QWORD *)(v0 + *(int *)(v10 + 60)));
  v11 = OUTLINED_FUNCTION_13_11(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 80));
  v13 = v12;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  OUTLINED_FUNCTION_380_0();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_30_4();
  OUTLINED_FUNCTION_299_0();
  AttributedString.init(_:attributes:)();
  OUTLINED_FUNCTION_65_1();
}

void AccountUpdateNotice.fullSentence.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  char v30;
  uint64_t (**v31)(uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  Class isa;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(_QWORD);
  Swift::String v57;
  Swift::String v58;
  uint64_t v59;
  unint64_t v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_QWORD);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  id v86;

  OUTLINED_FUNCTION_93();
  v5 = v4;
  OUTLINED_FUNCTION_156_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_101_0();
  v72 = type metadata accessor for AttributedString.InterpolationOptions();
  v70 = *(_QWORD *)(v72 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v71 = v8;
  OUTLINED_FUNCTION_154_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  v82 = OUTLINED_FUNCTION_64_17(v10, v65);
  v79 = *(void (**)(_QWORD))(v82 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v81 = v12;
  v80 = OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_41();
  v75 = v14;
  OUTLINED_FUNCTION_51_5();
  OUTLINED_FUNCTION_168();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_112_8();
  v16 = type metadata accessor for AttributedString();
  v77 = *(_QWORD *)(v16 - 8);
  v78 = v16;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_5_27();
  v74 = v18;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_62();
  v83 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v21);
  v22 = OUTLINED_FUNCTION_75_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v65 - v25;
  v76 = v0;
  v27 = *((_QWORD *)v0 + 1);
  specialized BidirectionalCollection.last.getter(v27, v28, v2);
  v29 = OUTLINED_FUNCTION_69_0(v2, 1, v22);
  if (!v30)
  {
    _s15ConversationKit11ParticipantVWObTm_1(v2, (uint64_t)v26, type metadata accessor for Participant);
    v33 = *(char **)(v27 + 16);
    v34 = *(void **)&v26[*(int *)(v22 + 28)];
    v69 = v5;
    if (v34)
    {
      OUTLINED_FUNCTION_296_1(v34);
      v67 = (char *)v35;
      if (v36)
      {
        if ((OUTLINED_FUNCTION_2_11(v35, sel_shouldHideContact) & 1) != 0)
        {
          OUTLINED_FUNCTION_26_22();
          OUTLINED_FUNCTION_46_18();
          OUTLINED_FUNCTION_20_12();
          OUTLINED_FUNCTION_50_2();
          if (one-time initialization token for initials != -1)
            swift_once();
          OUTLINED_FUNCTION_1();
          v37 = (id)static NSPersonNameComponentsFormatter.initials;
          isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          v39 = objc_msgSend(v37, sel_stringFromPersonNameComponents_, isa);

          v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v42 = v41;

          OUTLINED_FUNCTION_283_0((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
          v84 = (char *)v40;
          v85 = v42;
          lazy protocol witness table accessor for type String and conformance String();
          StringProtocol.localizedUppercase.getter();
          OUTLINED_FUNCTION_411_0();
          OUTLINED_FUNCTION_30_4();
          v43 = 0;
LABEL_15:
          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_58_1();

          v67 = v26;
          Participant.name(_:)();
          OUTLINED_FUNCTION_152_3();
          OUTLINED_FUNCTION_21_0();
          AttributeContainer.init()();
          OUTLINED_FUNCTION_50();
          AttributedString.init(_:attributes:)();
          v51 = v81;
          if (one-time initialization token for subjectContainer != -1)
            swift_once();
          v52 = v80;
          OUTLINED_FUNCTION_241_0(v80, (uint64_t)static AttributedStrings.Notices.subjectContainer);
          v53 = *MEMORY[0x1E0CAEFE0];
          v54 = v82;
          v66 = (void (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v79 + 13);
          v66(v51, v53, v82);
          v75 = (uint64_t)v39;
          OUTLINED_FUNCTION_378_0();
          v55 = OUTLINED_FUNCTION_263();
          v79 = v56;
          v56(v55);
          if (*v76)
          {
            if (*v76 != 1)
            {
              if ((unint64_t)v33 < 2)
              {
                OUTLINED_FUNCTION_30_46();
                OUTLINED_FUNCTION_38_42();
                v84 = (char *)MEMORY[0x1E0DEE9D8];
                _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
                OUTLINED_FUNCTION_31_11();
                OUTLINED_FUNCTION_31_47(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A]);
                OUTLINED_FUNCTION_6_79();
                OUTLINED_FUNCTION_53_30();
                OUTLINED_FUNCTION_27_43();
                OUTLINED_FUNCTION_61();
                v61._countAndFlagsBits = 0xD000000000000011;
                String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v61);
              }
              else
              {
                OUTLINED_FUNCTION_338_0();
                OUTLINED_FUNCTION_89_15();
                OUTLINED_FUNCTION_38_42();
                v84 = (char *)MEMORY[0x1E0DEE9D8];
                _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
                OUTLINED_FUNCTION_31_11();
                OUTLINED_FUNCTION_31_47(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A]);
                OUTLINED_FUNCTION_6_79();
                OUTLINED_FUNCTION_53_30();
                OUTLINED_FUNCTION_27_43();
                OUTLINED_FUNCTION_122_3();
                v84 = v33 - 1;
                OUTLINED_FUNCTION_102_11();
                OUTLINED_FUNCTION_132_6(0xD000000000000018, (uint64_t)" people turned camera on");
              }
              OUTLINED_FUNCTION_128_4();
              OUTLINED_FUNCTION_140_5();
              goto LABEL_30;
            }
            if ((unint64_t)v33 >= 2)
            {
              OUTLINED_FUNCTION_89_15();
              OUTLINED_FUNCTION_38_42();
              v84 = (char *)MEMORY[0x1E0DEE9D8];
              _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
              OUTLINED_FUNCTION_31_11();
              OUTLINED_FUNCTION_31_47(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A]);
              OUTLINED_FUNCTION_6_79();
              OUTLINED_FUNCTION_53_30();
              OUTLINED_FUNCTION_27_43();
              OUTLINED_FUNCTION_122_3();
              v84 = v33 - 1;
              OUTLINED_FUNCTION_102_11();
              v57._countAndFlagsBits = OUTLINED_FUNCTION_333();
              v57._object = (void *)0xEC0000007466656CLL;
              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v57);
              OUTLINED_FUNCTION_128_4();
              OUTLINED_FUNCTION_140_5();
LABEL_30:
              AttributedString.init(conversationControlsLocalized:comment:)();
              goto LABEL_31;
            }
            OUTLINED_FUNCTION_338_0();
            OUTLINED_FUNCTION_30_46();
            OUTLINED_FUNCTION_38_42();
            v84 = (char *)MEMORY[0x1E0DEE9D8];
            _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
            OUTLINED_FUNCTION_31_11();
            OUTLINED_FUNCTION_31_47(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A]);
            OUTLINED_FUNCTION_6_79();
            OUTLINED_FUNCTION_53_30();
            OUTLINED_FUNCTION_27_43();
            v59 = 0x7466656C20;
            v60 = 0xE500000000000000;
          }
          else
          {
            if ((unint64_t)v33 >= 2)
            {
              OUTLINED_FUNCTION_338_0();
              OUTLINED_FUNCTION_89_15();
              OUTLINED_FUNCTION_38_42();
              v84 = (char *)MEMORY[0x1E0DEE9D8];
              _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
              OUTLINED_FUNCTION_31_11();
              OUTLINED_FUNCTION_31_47(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A]);
              OUTLINED_FUNCTION_6_79();
              OUTLINED_FUNCTION_53_30();
              OUTLINED_FUNCTION_27_43();
              OUTLINED_FUNCTION_122_3();
              v84 = v33 - 1;
              OUTLINED_FUNCTION_102_11();
              v58._countAndFlagsBits = OUTLINED_FUNCTION_333();
              v58._object = (void *)0xEE0064656E696F6ALL;
              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v58);
              OUTLINED_FUNCTION_128_4();
              OUTLINED_FUNCTION_140_5();
              goto LABEL_30;
            }
            OUTLINED_FUNCTION_338_0();
            OUTLINED_FUNCTION_30_46();
            OUTLINED_FUNCTION_38_42();
            v84 = (char *)MEMORY[0x1E0DEE9D8];
            _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
            OUTLINED_FUNCTION_31_11();
            OUTLINED_FUNCTION_31_47(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A]);
            OUTLINED_FUNCTION_6_79();
            OUTLINED_FUNCTION_53_30();
            OUTLINED_FUNCTION_27_43();
            v59 = 0x64656E696F6A20;
            v60 = 0xE700000000000000;
          }
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v59);
          OUTLINED_FUNCTION_128_4();
          OUTLINED_FUNCTION_140_5();
          AttributedString.init(cnkLocalized:)();
LABEL_31:
          if (one-time initialization token for foregroundContainer != -1)
            swift_once();
          OUTLINED_FUNCTION_241_0(v52, (uint64_t)static AttributedStrings.Notices.foregroundContainer);
          v66(v51, *MEMORY[0x1E0CAEFD8], v54);
          AttributedString.mergeAttributes(_:mergePolicy:)();
          v62 = OUTLINED_FUNCTION_263();
          v79(v62);
          AttributedString.replaceLinks(with:)();
          v64 = v77;
          v63 = v78;
          OUTLINED_FUNCTION_39_0(v83, *(uint64_t (**)(uint64_t, uint64_t))(v77 + 8));
          outlined destroy of Participant((uint64_t)v67, type metadata accessor for Participant);
          (*(void (**)(uint64_t, void *, uint64_t))(v64 + 32))(v69, &demangling cache variable for type metadata for [AttributedString.InterpolationOptions], v63);
          goto LABEL_34;
        }

        OUTLINED_FUNCTION_21_0();
      }
      else
      {

      }
    }
    _s15ConversationKit11ParticipantVWOcTm_3((uint64_t)v26, v1, type metadata accessor for Participant);
    v39 = *(id *)&v26[*(int *)(v22 + 64)];
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)(v1, v44, v45, v46, v47, v48, v49, v50, v65, (uint64_t)v66, (uint64_t)v67, v68, v69, v70, v71, v72, v73, v74, v75,
      (uint64_t)v76);
    v43 = v86;
    OUTLINED_FUNCTION_26_22();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_21_0();

    swift_release();
    outlined destroy of Participant(v1, type metadata accessor for Participant);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_219(v29, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_61();
  String.LocalizationValue.init(stringLiteral:)();
  AttributedString.init(cnkLocalized:)();
  if (one-time initialization token for subjectContainer != -1)
    swift_once();
  OUTLINED_FUNCTION_241_0(v80, (uint64_t)static AttributedStrings.Notices.subjectContainer);
  v31 = (uint64_t (**)(uint64_t, uint64_t))v79;
  v32 = v81;
  (*((void (**)(uint64_t, _QWORD, uint64_t))v79 + 13))(v81, *MEMORY[0x1E0CAEFD8], v82);
  OUTLINED_FUNCTION_326_1();
  AttributedString.mergeAttributes(_:mergePolicy:)();
  OUTLINED_FUNCTION_101(v32, v31[1]);
LABEL_34:
  OUTLINED_FUNCTION_52_1();
}

void AccountUpdateNotice.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  unint64_t v24;
  NSBundle v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  Class v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  Class v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  OUTLINED_FUNCTION_93();
  v5 = OUTLINED_FUNCTION_51_5();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_78();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v8 = OUTLINED_FUNCTION_75_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_75_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_202_2();
  v11 = *(_QWORD *)(v1 + 8);
  specialized BidirectionalCollection.last.getter(v11, v12, (uint64_t)v2);
  v13 = OUTLINED_FUNCTION_312();
  v15 = OUTLINED_FUNCTION_69_0(v13, v14, v8);
  if (!v17)
  {
    OUTLINED_FUNCTION_135_2((uint64_t)v2, v16, type metadata accessor for Participant);
    v27 = *(_QWORD *)(v11 + 16);
    if (v27 >= 2)
    {
      v67 = v27 - 1;
      OUTLINED_FUNCTION_393();
      String.localizedConversationControls.getter();
      v65 = v28;
      v69 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v30 = OUTLINED_FUNCTION_417_0();
      *(_OWORD *)(v30 + 16) = xmmword_1BD645380;
      v31 = *(void **)(v0 + *(int *)(v8 + 28));
      if (v31)
      {
        OUTLINED_FUNCTION_296_1(v31);
        v63 = v32;
        if (v33)
        {
          if ((OUTLINED_FUNCTION_2_11(v32, sel_shouldHideContact) & 1) != 0)
          {
            OUTLINED_FUNCTION_79_1();
            OUTLINED_FUNCTION_46_18();
            OUTLINED_FUNCTION_20_12();
            OUTLINED_FUNCTION_50_2();
            if (one-time initialization token for initials != -1)
              swift_once();
            OUTLINED_FUNCTION_1();
            v34 = (id)static NSPersonNameComponentsFormatter.initials;
            v35 = OUTLINED_FUNCTION_414_0();
            v36 = objc_msgSend(&static NSPersonNameComponentsFormatter.initials, sel_stringFromPersonNameComponents_, v35);

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            OUTLINED_FUNCTION_101(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
            lazy protocol witness table accessor for type String and conformance String();
            OUTLINED_FUNCTION_324_1();
            OUTLINED_FUNCTION_411_0();
            OUTLINED_FUNCTION_58_1();
            v37 = 0;
            goto LABEL_25;
          }

          OUTLINED_FUNCTION_25();
        }
        else
        {

        }
      }
      v5 = (uint64_t)type metadata accessor for Participant;
      OUTLINED_FUNCTION_190_0();
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:)(v3, v45, v46, v47, v48, v49, v50, v51, v62, v63, v65, v67, v69, v70, v71, v72, v75, v76, v77,
        v78);
      v1 = v79;
      v37 = v73;
      OUTLINED_FUNCTION_79_1();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_25();

      swift_release();
      OUTLINED_FUNCTION_245();
LABEL_25:
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_58_1();

      OUTLINED_FUNCTION_263();
      OUTLINED_FUNCTION_229_2();
      OUTLINED_FUNCTION_45_21();
      OUTLINED_FUNCTION_25();
      *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
      v52 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v30 + 32) = v1;
      *(_QWORD *)(v30 + 40) = v5;
      v53 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v30 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v30 + 104) = v53;
      *(_QWORD *)(v30 + 64) = v52;
      *(_QWORD *)(v30 + 72) = v67;
      OUTLINED_FUNCTION_380_0();
      OUTLINED_FUNCTION_53();
LABEL_29:
      v61 = swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_69_15(v61, type metadata accessor for Participant);
      goto LABEL_30;
    }
    v38 = *(void **)(v0 + *(int *)(v8 + 28));
    if (v38)
    {
      v39 = v38;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v39);
      if (v40)
      {
        if ((objc_msgSend(v39, sel_shouldHideContact) & 1) != 0)
        {
          OUTLINED_FUNCTION_25_2();
          OUTLINED_FUNCTION_46_18();
          OUTLINED_FUNCTION_20_12();
          OUTLINED_FUNCTION_50_2();
          if (one-time initialization token for initials != -1)
            swift_once();
          OUTLINED_FUNCTION_1();
          v41 = (id)static NSPersonNameComponentsFormatter.initials;
          v42 = OUTLINED_FUNCTION_414_0();
          v43 = OUTLINED_FUNCTION_7_24(&static NSPersonNameComponentsFormatter.initials, sel_stringFromPersonNameComponents_);

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          OUTLINED_FUNCTION_101(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
          lazy protocol witness table accessor for type String and conformance String();
          OUTLINED_FUNCTION_324_1();

          OUTLINED_FUNCTION_25();
          v44 = 0;
          goto LABEL_28;
        }

        OUTLINED_FUNCTION_53();
      }
      else
      {

      }
    }
    OUTLINED_FUNCTION_190_0();
    OUTLINED_FUNCTION_264_0();
    OUTLINED_FUNCTION_317_0(v3, v54, v55, v56, v57, v58, v59, v60, v62, v63, v64, v66, v68, v70, v71, v72, v75, v76, v77,
      v78);
    v44 = OUTLINED_FUNCTION_261_0(v74);
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_79_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53();

    OUTLINED_FUNCTION_14_12();
    OUTLINED_FUNCTION_245();
LABEL_28:
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_25();

    OUTLINED_FUNCTION_229_2();
    goto LABEL_29;
  }
  OUTLINED_FUNCTION_219(v15, &demangling cache variable for type metadata for Participant?);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationControls);
  v19 = (void *)Logger.logObject.getter();
  v20 = static os_log_type_t.error.getter();
  if (OUTLINED_FUNCTION_13_0(v20))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_14_14(&dword_1BD004000, v21, v22, "No participant for accountUpdateNotice");
    OUTLINED_FUNCTION_1_106();
  }

  v23 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  OUTLINED_FUNCTION_18_3();
  v24 = OUTLINED_FUNCTION_393();
  v25.super.isa = v23;
  OUTLINED_FUNCTION_49_2(v24, v26, 0x61737265766E6F43, 0xEF74694B6E6F6974, v25);
  OUTLINED_FUNCTION_167_1();
LABEL_30:
  OUTLINED_FUNCTION_52_1();
}

void AccountUpdateNotice.attributedSubtitle.getter()
{
  _BYTE *v0;
  uint64_t v1;
  objc_class *v2;
  unint64_t v3;
  uint64_t v4;
  NSBundle v5;

  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0_7();
  if (*v0)
  {
    if (*v0 == 1)
    {
      v2 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_18_3();
      v3 = 1952867660;
      v4 = 0xE400000000000000;
    }
    else
    {
      v2 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      OUTLINED_FUNCTION_18_3();
      v3 = OUTLINED_FUNCTION_215();
    }
  }
  else
  {
    v2 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_18_3();
    v3 = 0x64656E696F4ALL;
    v4 = 0xE600000000000000;
  }
  v5.super.isa = v2;
  OUTLINED_FUNCTION_49_2(v3, v4, 0x61737265766E6F43, 0xEF74694B6E6F6974, v5);

  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  OUTLINED_FUNCTION_91();
}

void ReactionNotice.fullSentence.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  Class v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  Swift::String v78;

  OUTLINED_FUNCTION_93();
  v72 = v6;
  v7 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_2_20();
  type metadata accessor for String.LocalizationValue();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v69 = (void *)v10;
  v68 = type metadata accessor for AttributedString.InterpolationOptions();
  v66 = *(_QWORD *)(v68 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v65 = v12;
  OUTLINED_FUNCTION_154_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  v15 = OUTLINED_FUNCTION_64_17(v14, v58);
  v70 = *(_QWORD *)(v15 - 8);
  v71 = v15;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_41();
  v73 = v17;
  v74 = OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_101_0();
  type metadata accessor for PersonNameComponents();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v19);
  v20 = OUTLINED_FUNCTION_112_8();
  v21 = type metadata accessor for ParticipantReaction(v20);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_81();
  v23 = OUTLINED_FUNCTION_188_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_75_0();
  MEMORY[0x1E0C80A78](v24);
  v67 = v0;
  v28 = *(void **)v0;
  v29 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v29 != 1)
  {
    if (v29)
    {
      v39 = v26;
      v40 = v27;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v78._countAndFlagsBits = 23390;
      v78._object = (void *)0xE200000000000000;
      OUTLINED_FUNCTION_303_0(v78);
      OUTLINED_FUNCTION_102_11();
      OUTLINED_FUNCTION_61();
      v41._countAndFlagsBits = 0xD000000000000032;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v41);
      OUTLINED_FUNCTION_396_0();
      v77 = (id)MEMORY[0x1E0DEE9D8];
      _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
      OUTLINED_FUNCTION_31_11();
      OUTLINED_FUNCTION_31_47(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A]);
      OUTLINED_FUNCTION_43_43();
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
      OUTLINED_FUNCTION_101(v65, *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8));
      v42 = *(void (**)(uint64_t))(v40 + 8);
      v43 = OUTLINED_FUNCTION_202_0();
      v42(v43);
      OUTLINED_FUNCTION_136_3();
      v1 = v69;
      OUTLINED_FUNCTION_347_0();
      KeyPath = swift_getKeyPath();
      specialized AttributedString.init<A>(conversationControlsLocalized:including:)((uint64_t)v69, KeyPath, v72);
      AttributedString.applyContainer()();
      ((void (*)(uint64_t, uint64_t))v42)(v72, v39);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v72, v3, v39);
    }
    else
    {
      OUTLINED_FUNCTION_17_0();
      AttributedString.init(stringLiteral:)();
    }
    v45 = v70;
    goto LABEL_18;
  }
  v63 = (uint64_t)&v58 - v25;
  v60 = v3;
  v61 = v27;
  v62 = v26;
  _s15ConversationKit11ParticipantVWOcTm_3((uint64_t)v28 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)), v5, type metadata accessor for ParticipantReaction);
  v30 = *(void **)(v5 + *(int *)(v7 + 28));
  if (v30)
  {
    OUTLINED_FUNCTION_296_1(v30);
    if (v32)
    {
      if ((OUTLINED_FUNCTION_2_11(v31, sel_shouldHideContact) & 1) != 0)
      {
        v59 = (uint64_t)v2;
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_46_18();
        OUTLINED_FUNCTION_20_12();
        OUTLINED_FUNCTION_50_2();
        if (one-time initialization token for initials != -1)
          swift_once();
        OUTLINED_FUNCTION_1();
        v33 = (id)static NSPersonNameComponentsFormatter.initials;
        v34 = OUTLINED_FUNCTION_414_0();
        v1 = OUTLINED_FUNCTION_7_24(v2, sel_stringFromPersonNameComponents_);

        v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v37 = v36;

        OUTLINED_FUNCTION_39_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
        v75 = v35;
        v76 = v37;
        lazy protocol witness table accessor for type String and conformance String();
        StringProtocol.localizedUppercase.getter();

        OUTLINED_FUNCTION_21_0();
        v38 = 0;
        goto LABEL_15;
      }

      OUTLINED_FUNCTION_30_4();
    }
    else
    {

    }
  }
  _s15ConversationKit11ParticipantVWOcTm_3(v5, (uint64_t)v1, type metadata accessor for Participant);
  swift_retain();
  ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v1, v46, v47, v48, v49, v50, v51, v52, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68,
    (uint64_t)v69);
  v38 = v77;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_79_1();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_4();

  swift_release();
  OUTLINED_FUNCTION_293_0((uint64_t)v1);
LABEL_15:
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_25();

  Participant.name(_:)();
  OUTLINED_FUNCTION_30_4();
  outlined destroy of Participant(v5, type metadata accessor for Participant);
  AttributeContainer.init()();
  OUTLINED_FUNCTION_50();
  AttributedString.init(_:attributes:)();
  if (one-time initialization token for subjectContainer != -1)
    swift_once();
  v53 = OUTLINED_FUNCTION_241_0(v74, (uint64_t)static AttributedStrings.Notices.subjectContainer);
  v45 = v70;
  OUTLINED_FUNCTION_247_1(v53, *MEMORY[0x1E0CAEFE0]);
  OUTLINED_FUNCTION_65_2();
  AttributedString.mergeAttributes(_:mergePolicy:)();
  OUTLINED_FUNCTION_283_0((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
  OUTLINED_FUNCTION_89_15();
  OUTLINED_FUNCTION_59_22();
  v75 = MEMORY[0x1E0DEE9D8];
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0], MEMORY[0x1E0CAF000]);
  v59 = v54;
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_31_47(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OUTLINED_FUNCTION_49_16();
  OUTLINED_FUNCTION_173_1();
  OUTLINED_FUNCTION_418_0();
  v55._countAndFlagsBits = OUTLINED_FUNCTION_172_0();
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v55);
  v56 = v60;
  OUTLINED_FUNCTION_396_0();
  v75 = MEMORY[0x1E0DEE9D8];
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OUTLINED_FUNCTION_173_1();
  OUTLINED_FUNCTION_418_0();
  OUTLINED_FUNCTION_379(v56);
  OUTLINED_FUNCTION_136_3();
  v1 = v69;
  String.LocalizationValue.init(stringInterpolation:)();
  OUTLINED_FUNCTION_231_2();
  OUTLINED_FUNCTION_379(v63);
LABEL_18:
  if (one-time initialization token for foregroundContainer != -1)
    swift_once();
  v57 = OUTLINED_FUNCTION_241_0(v74, (uint64_t)static AttributedStrings.Notices.foregroundContainer);
  OUTLINED_FUNCTION_247_1(v57, *MEMORY[0x1E0CAEFD8]);
  OUTLINED_FUNCTION_65_2();
  AttributedString.mergeAttributes(_:mergePolicy:)();
  OUTLINED_FUNCTION_283_0((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
  OUTLINED_FUNCTION_52_1();
}

#error "1BD2F0118: call analysis failed (funcsize=239)"

void ReactionNotice.attributedSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_156_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_2_20();
  v2 = type metadata accessor for AttributedString.InterpolationOptions();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEFF0];
  v8 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_177_0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_111_7();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_30_46();
  v9._countAndFlagsBits = OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_134_3(v9);
  ReactionNotice.reactionSymbols.getter(v0);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.InterpolationOptions and conformance AttributedString.InterpolationOptions, v3, MEMORY[0x1E0CAF000]);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_31_47(&lazy protocol witness table cache variable for type [AttributedString.InterpolationOptions] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OUTLINED_FUNCTION_91_10();
  OUTLINED_FUNCTION_159_2(v8);
  OUTLINED_FUNCTION_29_2(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_136_3();
  String.LocalizationValue.init(stringInterpolation:)();
  OUTLINED_FUNCTION_231_2();
  OUTLINED_FUNCTION_52_1();
}

uint64_t static SessionActionNotice.NoticeType.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_3_0();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_1BD2F0374 + 4 * byte_1BD657280[*(_QWORD *)(v18 + 16) >> 62]))(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_1BD2F0374()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;

  if (v5 >> 62)
  {
    v22 = OUTLINED_FUNCTION_56_28();
    outlined consume of SessionActionNotice.NoticeType(v22, v23, v24);
    v21 = 0;
  }
  else
  {
    LOBYTE(v26) = v5;
    outlined copy of SessionActionNotice.NoticeType(v7, v6, v5);
    outlined copy of SessionActionNotice.NoticeType(v4, v3, v2);
    outlined copy of SessionActionNotice.NoticeType(v7, v6, v5);
    v8 = outlined copy of SessionActionNotice.NoticeType(v4, v3, v2);
    OUTLINED_FUNCTION_366_0(v8, v9, v10, v11, v12, v13, v14, v15, v7, v6, v26, v4);
    v17 = v16;
    v18 = OUTLINED_FUNCTION_58_23();
    outlined consume of SessionActionNotice.NoticeType(v18, v19, v20);
    v21 = v17 & (v0 == v1);
  }
  return v21 & 1;
}

void SessionActionNotice.fullSentence.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  Class isa;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;

  OUTLINED_FUNCTION_93();
  type metadata accessor for AttributedString.InterpolationOptions();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_154_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_156_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v79 = OUTLINED_FUNCTION_64_17(v6, v59);
  v77 = *(_QWORD *)(v79 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v81 = v8;
  v73 = OUTLINED_FUNCTION_51_5();
  v72 = *(_QWORD *)(v73 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v71 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_253_1(v12, v60);
  v76 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_62();
  v75 = v15;
  v80 = OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_77_1();
  v17 = OUTLINED_FUNCTION_188_1();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_5_27();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_5_18();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_112();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_202_2();
  v34 = (int *)type metadata accessor for SessionActionNotice(0);
  v35 = (_QWORD *)(v1 + v34[6]);
  v37 = v35[3];
  v36 = v35[4];
  __swift_project_boxed_opaque_existential_1(v35, v37);
  (*(void (**)(uint64_t, uint64_t))(v36 + 224))(v37, v36);
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  if ((*(_BYTE *)(v1 + v34[8]) & 1) == 0)
  {
    outlined init with copy of FeatureEligibility?(v1 + v34[5], v78, &demangling cache variable for type metadata for Participant?);
    v38 = OUTLINED_FUNCTION_69_0(v78, 1, v76);
    if (!v39)
    {
      v40 = v75;
      _s15ConversationKit11ParticipantVWObTm_1(v78, v75, type metadata accessor for Participant);
      v41 = *(void **)(v75 + *(int *)(v76 + 28));
      if (v41)
      {
        OUTLINED_FUNCTION_296_1(v41);
        if (v43)
        {
          if ((OUTLINED_FUNCTION_2_11(v42, sel_shouldHideContact) & 1) != 0)
          {
            OUTLINED_FUNCTION_25_2();
            OUTLINED_FUNCTION_46_18();
            OUTLINED_FUNCTION_20_12();
            OUTLINED_FUNCTION_50_2();
            if (one-time initialization token for initials != -1)
              swift_once();
            OUTLINED_FUNCTION_1();
            v44 = (id)static NSPersonNameComponentsFormatter.initials;
            isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            v46 = objc_msgSend(v44, sel_stringFromPersonNameComponents_, isa);

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
            lazy protocol witness table accessor for type String and conformance String();
            StringProtocol.localizedUppercase.getter();
            OUTLINED_FUNCTION_411_0();
            OUTLINED_FUNCTION_30_4();
            v47 = 0;
            v40 = v75;
            goto LABEL_15;
          }

          OUTLINED_FUNCTION_53();
        }
        else
        {

        }
      }
      _s15ConversationKit11ParticipantVWOcTm_3(v75, v74, type metadata accessor for Participant);
      swift_retain();
      OUTLINED_FUNCTION_317_0(v74, v48, v49, v50, v51, v52, v53, v54, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71,
        v72);
      v47 = v82;
      v55 = v82;
      OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_79_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_53();

      swift_release();
      outlined destroy of Participant(v74, type metadata accessor for Participant);
LABEL_15:
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_25();

      OUTLINED_FUNCTION_38_21();
      Participant.name(_:)();
      OUTLINED_FUNCTION_53();
      AttributeContainer.init()();
      AttributedString.init(_:attributes:)();
      outlined destroy of Participant(v40, type metadata accessor for Participant);
LABEL_16:
      if (one-time initialization token for subjectContainer != -1)
        swift_once();
      OUTLINED_FUNCTION_241_0(v80, (uint64_t)static AttributedStrings.Notices.subjectContainer);
      v56 = *MEMORY[0x1E0CAEFE0];
      v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 104);
      v57(v81, v56, v79);
      OUTLINED_FUNCTION_416_0();
      AttributedString.mergeAttributes(_:mergePolicy:)();
      v58 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
      OUTLINED_FUNCTION_379(v81);
      v57(v81, v56, v79);
      AttributedString.mergeAttributes(_:mergePolicy:)();
      v58(v81, v79);
      __asm { BR              X10 }
    }
    OUTLINED_FUNCTION_96_3(v38, &demangling cache variable for type metadata for Participant?);
  }
  (*(void (**)(void *, uint64_t, uint64_t))(v18 + 16))(v2, v0, v17);
  goto LABEL_16;
}

void SessionActionNotice.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for SessionActionNotice(0);
  if (*(_BYTE *)(v0 + *(int *)(v1 + 32)) == 1)
    SessionActionNotice.actionDescription.getter();
  else
    SessionActionNotice.attributionDescription.getter(v1);
}

void SessionActionNotice.attributedSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for SessionActionNotice(0);
  if (*(_BYTE *)(v0 + *(int *)(v2 + 32)) == 1)
    SessionActionNotice.attributionDescription.getter(v2);
  else
    SessionActionNotice.actionDescription.getter();
  OUTLINED_FUNCTION_257_1();
  OUTLINED_FUNCTION_299_0();
  OUTLINED_FUNCTION_236_1();
  OUTLINED_FUNCTION_18();
}

BOOL SessionActionNotice.isSticky.getter()
{
  uint64_t v1;
  unint64_t v2;

  SessionActionNotice.noticeAccessory.getter();
  if (v2 >= 2)
    outlined consume of NoticeAccessory(v1, v2);
  return v2 > 1;
}

void AppLaunchNotice.bundleIdentifier.getter()
{
  type metadata accessor for AppLaunchNotice(0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void AppLaunchNotice.fullSentence.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  Swift::String v8;
  unsigned int v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_93();
  v16 = OUTLINED_FUNCTION_222_0();
  v15 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_41();
  v14 = v2;
  OUTLINED_FUNCTION_156_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_154_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_187_0();
  v6 = *(_QWORD **)(v0 + *(int *)(v5 + 28));
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v8._countAndFlagsBits = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v6) + 0x68))();
  String.append(_:)(v8);
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_389(10322146);
  v9 = *((unsigned __int8 *)v6 + OBJC_IVAR____TtC15ConversationKit13ForegroundApp_type);
  (*(void (**)(void))((*v7 & *v6) + 0x70))();
  if (v9 > 1)
  {
    if (*(_BYTE *)(v0 + *(int *)(v5 + 36)) == 1)
    {
      OUTLINED_FUNCTION_25();
      AppLaunchNotice.attributedCollaborationTitle()();
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_30_46();
    v10._countAndFlagsBits = OUTLINED_FUNCTION_17_0();
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v10);
    v11._countAndFlagsBits = 10256610;
    v11._object = (void *)0xA300000000000000;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v11);
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_61();
    v12._countAndFlagsBits = 0x100000000000001CLL;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
    OUTLINED_FUNCTION_388();
  }
  else
  {
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_301_0();
    String.LocalizationValue.init(stringLiteral:)();
  }
  OUTLINED_FUNCTION_383_0();
LABEL_7:
  if (one-time initialization token for subjectContainer != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_88();
  __swift_project_value_buffer(v13, (uint64_t)static AttributedStrings.Notices.subjectContainer);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104))(v14, *MEMORY[0x1E0CAEFD8], v16);
  OUTLINED_FUNCTION_378_0();
  OUTLINED_FUNCTION_39_0(v14, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  OUTLINED_FUNCTION_52_1();
}

void AppLaunchNotice.title.getter()
{
  AppLaunchNotice.noticeContent.getter();
  OUTLINED_FUNCTION_152_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void AppLaunchNotice.attributedSubtitle.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_4_1();
  AppLaunchNotice.noticeContent.getter();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_299_0();
  OUTLINED_FUNCTION_236_1();
  OUTLINED_FUNCTION_18();
}

void SystemUpdateNotice.fullSentence.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::String v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  NSBundle v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_93();
  v21 = v1;
  v22 = v2;
  OUTLINED_FUNCTION_156_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_154_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  if (!*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_17_0();
    AttributedString.init(stringLiteral:)();
    return;
  }
  if (*(_BYTE *)v0)
  {
    if (*(_BYTE *)v0 == 1)
    {
      OUTLINED_FUNCTION_30_46();
      v5 = 0x64656D2065766F4DLL;
      v6 = 0xEE00206F74206169;
LABEL_13:
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v5);
      OUTLINED_FUNCTION_390();
      v8 = OUTLINED_FUNCTION_215();
      goto LABEL_14;
    }
    outlined init with copy of FeatureEligibility?(v0 + 24, (uint64_t)v18, &demangling cache variable for type metadata for Activity?);
    if (v19)
    {
      v10 = v20;
      __swift_project_boxed_opaque_existential_1(v18, v19);
      OUTLINED_FUNCTION_13_11(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48));
      v12 = v11;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      if (v12)
      {
LABEL_12:
        OUTLINED_FUNCTION_89_15();
        v16._countAndFlagsBits = 0x9C80E22079616C50;
        v16._object = (void *)0xA800000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
        v17._countAndFlagsBits = OUTLINED_FUNCTION_348();
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v17);
        OUTLINED_FUNCTION_21_0();
        v5 = 0x206E6F209D80E2;
        v6 = 0xA700000000000000;
        goto LABEL_13;
      }
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for Activity?);
    }
    v13 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_18_3();
    v14.super.isa = v13;
    OUTLINED_FUNCTION_49_2(v15, 0x80000001BD6809B0, 0x61737265766E6F43, 0xEF74694B6E6F6974, v14);
    swift_bridgeObjectRelease();

    goto LABEL_12;
  }
  OUTLINED_FUNCTION_30_46();
  v7._countAndFlagsBits = 543519573;
  v7._object = (void *)0xE400000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v7);
  OUTLINED_FUNCTION_390();
  OUTLINED_FUNCTION_332_0();
  OUTLINED_FUNCTION_61();
LABEL_14:
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v8);
  String.LocalizationValue.init(stringInterpolation:)();
  AttributedString.init(cnkLocalized:)();
  OUTLINED_FUNCTION_52_1();
}

uint64_t SystemUpdateNotice.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSBundle v10;
  uint64_t v11;
  void *v12;
  objc_class *v13;
  NSBundle v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  objc_class *v26;
  NSBundle v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_3_0();
  v37 = v1;
  v38 = v2;
  v3 = *(_QWORD *)(v0 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 8);
    if (*(_BYTE *)v0)
    {
      if (*(_BYTE *)v0 != 1)
      {
        v12 = (void *)objc_opt_self();
        OUTLINED_FUNCTION_124();
        v13 = (objc_class *)objc_msgSend(v12, sel_conversationKit);
        OUTLINED_FUNCTION_16_15();
        OUTLINED_FUNCTION_2_15();
        v14.super.isa = v13;
        OUTLINED_FUNCTION_49_2(v15, v16, v17, v18, v14);

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v19 = OUTLINED_FUNCTION_417_0();
        *(_OWORD *)(v19 + 16) = xmmword_1BD645380;
        outlined init with copy of FeatureEligibility?(v0 + 24, (uint64_t)v34, &demangling cache variable for type metadata for Activity?);
        v20 = v35;
        if (v35)
        {
          v21 = v36;
          __swift_project_boxed_opaque_existential_1(v34, v35);
          v20 = OUTLINED_FUNCTION_13_11(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 48));
          v23 = v22;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
        }
        else
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v34, &demangling cache variable for type metadata for Activity?);
          v23 = 0;
        }
        v24 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
        v25 = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v19 + 64) = v25;
        if (!v23)
        {
          v26 = (objc_class *)objc_msgSend(v12, sel_conversationKit);
          OUTLINED_FUNCTION_16_15();
          OUTLINED_FUNCTION_2_15();
          v27.super.isa = v26;
          v20 = OUTLINED_FUNCTION_49_2(v28, v29, v30, v31, v27);
          v23 = v32;

        }
        *(_QWORD *)(v19 + 32) = v20;
        *(_QWORD *)(v19 + 40) = v23;
        *(_QWORD *)(v19 + 96) = v24;
        *(_QWORD *)(v19 + 104) = v25;
        *(_QWORD *)(v19 + 72) = v4;
        *(_QWORD *)(v19 + 80) = v3;
        OUTLINED_FUNCTION_315_0();
        String.init(format:_:)();
        OUTLINED_FUNCTION_218_1();
        goto LABEL_14;
      }
      objc_opt_self();
      v5 = OUTLINED_FUNCTION_124();
      v6 = (objc_class *)OUTLINED_FUNCTION_25_1(v5, sel_conversationKit);
      OUTLINED_FUNCTION_16_15();
      OUTLINED_FUNCTION_61();
      v8 = 0xD000000000000015;
    }
    else
    {
      objc_opt_self();
      v9 = OUTLINED_FUNCTION_124();
      v6 = (objc_class *)OUTLINED_FUNCTION_25_1(v9, sel_conversationKit);
      OUTLINED_FUNCTION_16_15();
      OUTLINED_FUNCTION_61();
    }
    v10.super.isa = v6;
    OUTLINED_FUNCTION_49_2(v8, v7, 0x61737265766E6F43, 0xEF74694B6E6F6974, v10);
    OUTLINED_FUNCTION_10_3();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v11 = OUTLINED_FUNCTION_16_9();
    *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v11 + 64) = OUTLINED_FUNCTION_376_0(v11, MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v11 + 32) = v4;
    *(_QWORD *)(v11 + 40) = v3;
    String.init(format:_:)();
LABEL_14:
    swift_bridgeObjectRelease();
  }
  return OUTLINED_FUNCTION_50();
}

void SystemUpdateNotice.attributedSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  unint64_t v3;
  NSBundle v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_11_2();
  if (*(_QWORD *)(v0 + 16))
  {
    v2 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v3 = OUTLINED_FUNCTION_96_10();
    v4.super.isa = v2;
    OUTLINED_FUNCTION_49_2(v3, v5, v6, v7, v4);
    OUTLINED_FUNCTION_407_0();
  }
  AttributeContainer.init()();
  OUTLINED_FUNCTION_315_0();
  AttributedString.init(_:attributes:)();
  OUTLINED_FUNCTION_91();
}

void PushToTalkNotice.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  objc_class *v6;
  NSBundle v7;
  uint64_t v8;

  type metadata accessor for PushToTalkNotice.NoticeType(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v3 = OUTLINED_FUNCTION_76_2();
  v4 = type metadata accessor for PushToTalkNotice(v3);
  OUTLINED_FUNCTION_345_0(v1 + *(int *)(v4 + 20), v0);
  OUTLINED_FUNCTION_65_2();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
                   + 48);
    v6 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_61();
    v7.super.isa = v6;
    OUTLINED_FUNCTION_49_2(0xD00000000000002BLL, v8, 0x61737265766E6F43, 0xEF74694B6E6F6974, v7);
    OUTLINED_FUNCTION_45_21();

  }
  else
  {
    v5 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                   + 48);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0 + v5, &demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_91();
}

void PushToTalkNotice.attributedSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  int v5;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  objc_class *v10;
  NSBundle v11;
  NSBundle v12;
  uint64_t v13;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  v1 = OUTLINED_FUNCTION_111_7();
  type metadata accessor for PushToTalkNotice.NoticeType(v1);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (unsigned __int8 *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_98_7();
  if (OUTLINED_FUNCTION_212() == 1)
  {
    v5 = *v4;
    v6 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_61();
    if (v5 == 1)
      v7 = 0xD000000000000020;
    v12.super.isa = v6;
    OUTLINED_FUNCTION_49_2(v7, v8, 0x61737265766E6F43, 0xEF74694B6E6F6974, v12);

    v9 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (enabled: Bool, image: URL?))
                   + 48);
  }
  else
  {
    OUTLINED_FUNCTION_93_2();
    v9 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (speaker: String, image: URL?))
                   + 48);
    v10 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_18_3();
    v11.super.isa = v10;
    OUTLINED_FUNCTION_49_2(0x676E696B61657053, 0xE800000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v11);

  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v4[v9], &demangling cache variable for type metadata for URL?);
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  OUTLINED_FUNCTION_65_1();
}

void PushToTalkNotice.fullSentence.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;

  OUTLINED_FUNCTION_93();
  v15[1] = v0;
  v1 = OUTLINED_FUNCTION_222_0();
  v16 = *(_QWORD *)(v1 - 8);
  v17 = v1;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_41();
  v15[0] = v3;
  OUTLINED_FUNCTION_156_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_58_5();
  type metadata accessor for AttributedString.CharacterView();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v6 = OUTLINED_FUNCTION_188_1();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_154_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_89_15();
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  OUTLINED_FUNCTION_303_0(v18);
  PushToTalkNotice.title.getter();
  OUTLINED_FUNCTION_256_1(v19);
  OUTLINED_FUNCTION_13_3();
  v11._countAndFlagsBits = 32;
  v11._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
  PushToTalkNotice.attributedSubtitle.getter();
  AttributedString.characters.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.CharacterView and conformance AttributedString.CharacterView, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10], MEMORY[0x1E0CAEF28]);
  v20._countAndFlagsBits = String.init<A>(_:)();
  OUTLINED_FUNCTION_256_1(v20);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_136_3();
  OUTLINED_FUNCTION_347_0();
  OUTLINED_FUNCTION_383_0();
  if (one-time initialization token for foregroundContainer != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_241_0(v12, (uint64_t)static AttributedStrings.Notices.foregroundContainer);
  v13 = v16;
  v14 = v15[0];
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v16 + 104))(v15[0], *MEMORY[0x1E0CAEFD8], v17);
  OUTLINED_FUNCTION_269_1();
  AttributedString.mergeAttributes(_:mergePolicy:)();
  OUTLINED_FUNCTION_101(v14, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  OUTLINED_FUNCTION_52_1();
}

uint64_t *AppLaunchNotice.bundleIDToItemType.unsafeMutableAddressor()
{
  if (one-time initialization token for bundleIDToItemType != -1)
    swift_once();
  return &static AppLaunchNotice.bundleIDToItemType;
}

BOOL specialized static Comparable.<= infix(_:_:)(char a1, char a2)
{
  return !static Bool.< infix(_:_:)(a2, a1);
}

BOOL specialized static Comparable.<= infix(_:_:)(double a1, double a2)
{
  return a2 >= a1;
}

BOOL specialized static Comparable.<= infix(_:_:)()
{
  char v0;

  static HUDActivityManager.BannerUpdate.< infix(_:_:)();
  return (v0 & 1) == 0;
}

BOOL specialized static Comparable.<= infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 >= a1;
}

uint64_t specialized AttributedString.init<A>(conversationControlsLocalized:including:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v16 = a1;
  v17 = a2;
  v18 = a3;
  v4 = type metadata accessor for AttributedString.FormattingOptions();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF88];
  MEMORY[0x1E0C80A78](v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v12 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v13 = type metadata accessor for Locale();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v13);
  v19 = MEMORY[0x1E0DEE9D8];
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributedString.FormattingOptions and conformance AttributedString.FormattingOptions, v5, MEMORY[0x1E0CAEF98]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AttributedString.FormattingOptions]);
  _sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWlTm_0(&lazy protocol witness table cache variable for type [AttributedString.FormattingOptions] and conformance [A], &demangling cache variable for type metadata for [AttributedString.FormattingOptions]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  lazy protocol witness table accessor for type AttributeScopes.ConversationKitAttributes and conformance AttributeScopes.ConversationKitAttributes();
  AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v16, v9);
}

void default argument 2 of AppLaunchNotice.init(uuid:date:priority:app:conversation:supportsCollaboration:dismissalDuration:style:shouldTransitionToHUD:actionHandler:dismissHandler:subtitleStyle:noticeAccessory:)(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

void default argument 6 of AppLaunchNotice.init(uuid:date:priority:app:conversation:supportsCollaboration:dismissalDuration:style:shouldTransitionToHUD:actionHandler:dismissHandler:subtitleStyle:noticeAccessory:)()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 976))();
  OUTLINED_FUNCTION_0();
}

void default argument 7 of AppLaunchNotice.init(uuid:date:priority:app:conversation:supportsCollaboration:dismissalDuration:style:shouldTransitionToHUD:actionHandler:dismissHandler:subtitleStyle:noticeAccessory:)(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

uint64_t AppLaunchNotice.init(uuid:date:priority:app:conversation:supportsCollaboration:dismissalDuration:style:shouldTransitionToHUD:actionHandler:dismissHandler:subtitleStyle:noticeAccessory:)@<X0>(uint64_t a1@<X0>, char *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char a5@<W5>, char *a6@<X6>, char a7@<W7>, uint64_t a8@<X8>, double a9@<D0>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char *a14, uint64_t *a15)
{
  char v21;
  char v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  int *v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v21 = *a2;
  v22 = *a6;
  v31 = *a14;
  v32 = a15[1];
  v33 = *a15;
  OUTLINED_FUNCTION_33_0();
  v23 = OUTLINED_FUNCTION_337_0();
  v24(v23, a1);
  v25 = (int *)OUTLINED_FUNCTION_187_0();
  v26 = OUTLINED_FUNCTION_33();
  result = OUTLINED_FUNCTION_197_0(v26);
  *(_BYTE *)(a8 + v25[6]) = v21;
  *(_QWORD *)(a8 + v25[7]) = a3;
  *(_QWORD *)(a8 + v25[8]) = a4;
  *(_BYTE *)(a8 + v25[9]) = a5;
  *(double *)(a8 + v25[10]) = a9;
  *(_BYTE *)(a8 + v25[11]) = v22;
  *(_BYTE *)(a8 + v25[12]) = a7;
  v28 = (_QWORD *)(a8 + v25[13]);
  *v28 = a10;
  v28[1] = a11;
  v29 = (_QWORD *)(a8 + v25[14]);
  *v29 = a12;
  v29[1] = a13;
  *(_BYTE *)(a8 + v25[15]) = v31;
  v30 = (_QWORD *)(a8 + v25[16]);
  *v30 = v33;
  v30[1] = v32;
  return result;
}

void default argument 4 of AccountUpdateNotice.init(type:participants:uuid:date:priority:bundleIdentifier:shouldTransitionToHUD:actionHandler:dismissHandler:noticeAccessory:)(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

void default argument 9 of AccountUpdateNotice.init(type:participants:uuid:date:priority:bundleIdentifier:shouldTransitionToHUD:actionHandler:dismissHandler:noticeAccessory:)(__n128 *a1@<X8>)
{
  OUTLINED_FUNCTION_351_0(a1, (__n128)xmmword_1BD6491B0);
}

void AccountUpdateNotice.init(type:participants:uuid:date:priority:bundleIdentifier:shouldTransitionToHUD:actionHandler:dismissHandler:noticeAccessory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t *a31)
{
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  OUTLINED_FUNCTION_3_0();
  v54 = v31;
  v53 = v32;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v41 = *v40;
  v42 = *a31;
  v52 = a31[1];
  *(_BYTE *)v37 = *v39;
  *(_QWORD *)(v37 + 8) = v43;
  v44 = (int *)OUTLINED_FUNCTION_155_0();
  v45 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_197_0(v45);
  OUTLINED_FUNCTION_33();
  v46 = OUTLINED_FUNCTION_336_0();
  v47(v46, v36);
  *(_BYTE *)(v38 + v44[8]) = v41;
  v48 = (_QWORD *)(v38 + v44[9]);
  *v48 = v34;
  v48[1] = v53;
  *(_BYTE *)(v38 + v44[10]) = v54;
  v49 = (_QWORD *)(v38 + v44[11]);
  *v49 = a27;
  v49[1] = a28;
  v50 = (_QWORD *)(v38 + v44[12]);
  *v50 = a29;
  v50[1] = a30;
  v51 = (_QWORD *)(v38 + v44[13]);
  *v51 = v42;
  v51[1] = v52;
  OUTLINED_FUNCTION_0_20();
}

void default argument 1 of SessionActivationRequestNotice.init(expirationCheck:dismissalDuration:uuid:date:priority:style:shouldTransitionToHUD:noticeAccessory:actionHandler:dismissHandler:bundleIdentifier:activity:)()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 968))();
  OUTLINED_FUNCTION_0();
}

void default argument 4 of SessionActivationRequestNotice.init(expirationCheck:dismissalDuration:uuid:date:priority:style:shouldTransitionToHUD:noticeAccessory:actionHandler:dismissHandler:bundleIdentifier:activity:)(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

void default argument 5 of SessionActivationRequestNotice.init(expirationCheck:dismissalDuration:uuid:date:priority:style:shouldTransitionToHUD:noticeAccessory:actionHandler:dismissHandler:bundleIdentifier:activity:)(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

void default argument 7 of SessionActivationRequestNotice.init(expirationCheck:dismissalDuration:uuid:date:priority:style:shouldTransitionToHUD:noticeAccessory:actionHandler:dismissHandler:bundleIdentifier:activity:)(__n128 *a1@<X8>)
{
  OUTLINED_FUNCTION_351_0(a1, (__n128)xmmword_1BD6491B0);
}

uint64_t SessionActivationRequestNotice.init(expirationCheck:dismissalDuration:uuid:date:priority:style:shouldTransitionToHUD:noticeAccessory:actionHandler:dismissHandler:bundleIdentifier:activity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 *a15)
{
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char *v20;
  char v21;
  char *v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  char v42;

  OUTLINED_FUNCTION_280_0();
  v42 = v15;
  v17 = v16;
  v19 = v18;
  OUTLINED_FUNCTION_358();
  v21 = *v20;
  v23 = *v22;
  v25 = *v24;
  v26 = v24[1];
  *v19 = v27;
  v19[1] = v28;
  v19[2] = v29;
  v30 = (int *)OUTLINED_FUNCTION_265_1();
  v31 = (char *)v19 + v30[6];
  v32 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v31, v17, v32);
  OUTLINED_FUNCTION_33();
  v33 = OUTLINED_FUNCTION_49_16();
  v34(v33);
  *((_BYTE *)v19 + v30[8]) = v21;
  *((_BYTE *)v19 + v30[9]) = v23;
  *((_BYTE *)v19 + v30[10]) = v42;
  v35 = (_QWORD *)((char *)v19 + v30[11]);
  *v35 = v25;
  v35[1] = v26;
  v36 = (_QWORD *)((char *)v19 + v30[12]);
  *v36 = a9;
  v36[1] = v40;
  v37 = (_QWORD *)((char *)v19 + v30[13]);
  *v37 = v41;
  v37[1] = a12;
  v38 = (_QWORD *)((char *)v19 + v30[14]);
  *v38 = a13;
  v38[1] = a14;
  return outlined init with take of Notice(a15, (uint64_t)v19 + v30[15]);
}

uint64_t ParticipantReaction.init(participant:reaction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v6;
  ConversationKit::VideoReaction_optional v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  ConversationKit::VideoReaction value;
  uint64_t v19;
  uint64_t v20;

  v6 = (id)MEMORY[0x1C3B72E00](a2, a3);
  v7.value = VideoReaction.init(rawValue:)((__C::AVCaptureReactionType)v6).value;
  if (v7.value == ConversationKit_VideoReaction_unknownDefault)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v8 = OUTLINED_FUNCTION_16_9();
    *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
    v9 = MEMORY[0x1E0DEA968];
    v10 = String.init<A>(reflecting:)();
    v12 = v11;
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v8 + 32) = v10;
    *(_QWORD *)(v8 + 40) = v12;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    OUTLINED_FUNCTION_21_0();
    outlined destroy of Participant(a1, type metadata accessor for Participant);
    type metadata accessor for ParticipantReaction(0);
    v13 = OUTLINED_FUNCTION_76_0();
    return __swift_storeEnumTagSinglePayload(v13, v14, v15, v16);
  }
  else
  {
    value = v7.value;

    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_135_2(a1, v19, type metadata accessor for Participant);
    v20 = type metadata accessor for ParticipantReaction(0);
    *(_BYTE *)(a4 + *(int *)(v20 + 20)) = value;
    return __swift_storeEnumTagSinglePayload(a4, 0, 1, v20);
  }
}

void default argument 8 of ReactionNotice.init(reactions:uuid:date:priority:bundleIdentifier:shouldTransitionToHUD:actionHandler:dismissHandler:dismissalDuration:noticeAccessory:)()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 1056))();
  OUTLINED_FUNCTION_0();
}

void default argument 9 of ReactionNotice.init(reactions:uuid:date:priority:bundleIdentifier:shouldTransitionToHUD:actionHandler:dismissHandler:dismissalDuration:noticeAccessory:)(__n128 *a1@<X8>)
{
  OUTLINED_FUNCTION_351_0(a1, (__n128)xmmword_1BD6491B0);
}

void ReactionNotice.init(reactions:uuid:date:priority:bundleIdentifier:shouldTransitionToHUD:actionHandler:dismissHandler:dismissalDuration:noticeAccessory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char *v20;
  char v21;
  uint64_t v22;
  int *v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  OUTLINED_FUNCTION_280_0();
  v35 = v15;
  v34 = v16;
  v31 = v17;
  OUTLINED_FUNCTION_331_0();
  v19 = v18;
  v21 = *v20;
  v32 = a12[1];
  v33 = *a12;
  *v18 = v22;
  v23 = (int *)type metadata accessor for ReactionNotice(0);
  v24 = (char *)v19 + v23[5];
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_275_0();
  v25(v24, v13);
  v26 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_196(v26);
  *((_BYTE *)v19 + v23[7]) = v21;
  v27 = (_QWORD *)((char *)v19 + v23[8]);
  *v27 = v12;
  v27[1] = v31;
  *((_BYTE *)v19 + v23[9]) = v34;
  v28 = (_QWORD *)((char *)v19 + v23[10]);
  *v28 = v35;
  v28[1] = a9;
  v29 = (_QWORD *)((char *)v19 + v23[11]);
  *v29 = a10;
  v29[1] = a11;
  *(_QWORD *)((char *)v19 + v23[12]) = v14;
  v30 = (_QWORD *)((char *)v19 + v23[13]);
  *v30 = v33;
  v30[1] = v32;
  OUTLINED_FUNCTION_141_3();
}

uint64_t SessionActionNotice.init(type:participant:conversation:activity:triggeredLocally:deviceFamily:uuid:date:bundleIdentifier:shouldTransitionToHUD:actionHandler:dismissHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  __int128 *v24;
  __int128 *v25;
  __int128 *v26;
  __int128 *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  int *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t result;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_280_0();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  OUTLINED_FUNCTION_358();
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = (int *)type metadata accessor for SessionActionNotice(0);
  outlined init with take of Any?(v29, (uint64_t)v31 + v34[5], &demangling cache variable for type metadata for Participant?);
  outlined init with take of Notice(v27, (uint64_t)v31 + v34[6]);
  outlined init with take of Notice(v25, (uint64_t)v31 + v34[7]);
  *((_BYTE *)v31 + v34[8]) = v23;
  v35 = (char *)v31 + v34[9];
  *(_QWORD *)v35 = v21;
  v35[8] = v19 & 1;
  v36 = (char *)v31 + v34[10];
  v37 = OUTLINED_FUNCTION_33_0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v36, v17, v37);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_275_0();
  v38 = OUTLINED_FUNCTION_38_21();
  result = v39(v38);
  v41 = (_QWORD *)((char *)v31 + v34[12]);
  *v41 = v44;
  v41[1] = v45;
  *((_BYTE *)v31 + v34[13]) = a12;
  v42 = (_QWORD *)((char *)v31 + v34[14]);
  *v42 = a13;
  v42[1] = a14;
  v43 = (_QWORD *)((char *)v31 + v34[15]);
  *v43 = a15;
  v43[1] = a16;
  return result;
}

void SessionActionNotice.NoticeType.init(notice:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  id v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  id v20;
  uint64_t v21;
  unint64_t v22;
  int64x2_t v23;

  v6 = objc_msgSend(a1, sel_sessionEventType);
  switch((unint64_t)v6)
  {
    case 1uLL:

      v7 = 0;
      v8 = xmmword_1BD657270;
      goto LABEL_29;
    case 2uLL:

      v7 = 0;
      v8 = xmmword_1BD6400D0;
      goto LABEL_29;
    case 3uLL:

      v7 = 0;
      v8 = xmmword_1BD657260;
      goto LABEL_29;
    case 4uLL:

      v7 = 0;
      v8 = xmmword_1BD657250;
      goto LABEL_29;
    case 7uLL:
      OUTLINED_FUNCTION_170();
      OUTLINED_FUNCTION_10_3();
      v7 = 0;
      if (v3)
        v9 = v2;
      else
        v9 = 0;
      v10 = 0xE000000000000000;
      if (v3)
        v10 = v3;
      *a2 = v9;
      a2[1] = v10;
      v11 = 0x8000000000000000;
      goto LABEL_31;
    case 8uLL:
      v12 = OUTLINED_FUNCTION_25_1((uint64_t)v6, sel_queueItemType);
      if (v12 == (id)2)
      {
        OUTLINED_FUNCTION_170();
        OUTLINED_FUNCTION_10_3();
        if (v3)
          v13 = v2;
        else
          v13 = 0;
        v14 = 0xE000000000000000;
        if (v3)
          v14 = v3;
        _Q0 = vdupq_n_s64(0x4000000000000001uLL);
        goto LABEL_41;
      }
      if (v12 == (id)1)
      {
        OUTLINED_FUNCTION_170();
        OUTLINED_FUNCTION_10_3();
        if (v3)
          v13 = v2;
        else
          v13 = 0;
        v14 = 0xE000000000000000;
        if (v3)
          v14 = v3;
        __asm { FMOV            V0.2D, #2.0 }
LABEL_41:
        _Q0.i64[0] = v14;
        goto LABEL_43;
      }

      v13 = 0;
      _Q0 = (int64x2_t)xmmword_1BD657230;
LABEL_43:
      v7 = 0;
      *a2 = v13;
      *(int64x2_t *)(a2 + 1) = _Q0;
      goto LABEL_32;
    case 0xAuLL:
      v20 = OUTLINED_FUNCTION_25_1((uint64_t)v6, sel_queueItemType);
      if (v20 == (id)2)
      {
        OUTLINED_FUNCTION_170();
        OUTLINED_FUNCTION_10_3();
        OUTLINED_FUNCTION_412_0();
        v22 = 0xE000000000000000;
        if (!_ZF)
          v22 = v3;
        v23 = vdupq_n_s64(1uLL);
        goto LABEL_47;
      }
      if (v20 == (id)1)
      {
        OUTLINED_FUNCTION_170();
        OUTLINED_FUNCTION_10_3();
        OUTLINED_FUNCTION_412_0();
        v22 = 0xE000000000000000;
        if (!_ZF)
          v22 = v3;
        v23.i64[1] = 0;
LABEL_47:
        v23.i64[0] = v22;
        goto LABEL_49;
      }

      v21 = 0;
      v23 = (int64x2_t)xmmword_1BD657240;
LABEL_49:
      *a2 = v21;
      *(int64x2_t *)(a2 + 1) = v23;
      v7 = 1;
LABEL_32:
      a2[3] = v7;
      OUTLINED_FUNCTION_18();
      return;
    case 0xBuLL:

      v7 = 0;
      v8 = xmmword_1BD657220;
      goto LABEL_29;
    case 0xCuLL:

      v7 = 0;
      *a2 = 0;
      a2[1] = 0;
      goto LABEL_30;
    case 0xDuLL:

      v7 = 0;
      v8 = xmmword_1BD64E9C0;
      goto LABEL_29;
    case 0xEuLL:

      v7 = 0;
      v8 = xmmword_1BD657210;
      goto LABEL_29;
    case 0xFuLL:

      v7 = 0;
      v8 = xmmword_1BD6548E0;
LABEL_29:
      *(_OWORD *)a2 = v8;
LABEL_30:
      v11 = 0xC000000000000000;
      goto LABEL_31;
    default:

      v7 = 0;
      *a2 = 0;
      a2[1] = 0;
      v11 = 0x3FFFFFFFCLL;
LABEL_31:
      a2[2] = v11;
      goto LABEL_32;
  }
}

void SessionActionNotice.NoticeType.isSessionChange.getter()
{
  __asm { BR              X10 }
}

void sub_1BD2F3F94()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = OUTLINED_FUNCTION_326_1();
  outlined copy of CallScreening.EndingAction(v1, v2, v0);
  v3 = OUTLINED_FUNCTION_228_1();
  outlined consume of SessionActionNotice.NoticeType(v3, v4, v5);
  OUTLINED_FUNCTION_9_79(0);
  v6 = OUTLINED_FUNCTION_228_1();
  outlined copy of SessionActionNotice.NoticeType(v6, v7, v8);
  v9 = OUTLINED_FUNCTION_228_1();
  outlined consume of SessionActionNotice.NoticeType(v9, v10, v11);
  OUTLINED_FUNCTION_9_79(1);
  OUTLINED_FUNCTION_91();
}

void sub_1BD2F3FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v1 == 0xC000000000000000 && (v3 | v0 | v2) == 0)
  {
    OUTLINED_FUNCTION_9_79(0);
  }
  else
  {
    if (v0 != 1 || v3 != 0 || v1 != 0xC000000000000000 || v2 != 0)
      JUMPOUT(0x1BD2F3FACLL);
    OUTLINED_FUNCTION_129_5();
    OUTLINED_FUNCTION_78_17();
    OUTLINED_FUNCTION_9_79(1);
  }
  JUMPOUT(0x1BD2F3FD0);
}

void default argument 3 of PushToTalkNotice.init(uuid:type:date:priority:bundleIdentifier:dismissalDuration:shouldTransitionToHUD:actionHandler:dismissHandler:subtitleStyle:noticeAccessory:)(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

void default argument 5 of PushToTalkNotice.init(uuid:type:date:priority:bundleIdentifier:dismissalDuration:shouldTransitionToHUD:actionHandler:dismissHandler:subtitleStyle:noticeAccessory:)()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_363_0();
  OUTLINED_FUNCTION_0();
}

void default argument 9 of PushToTalkNotice.init(uuid:type:date:priority:bundleIdentifier:dismissalDuration:shouldTransitionToHUD:actionHandler:dismissHandler:subtitleStyle:noticeAccessory:)(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

void PushToTalkNotice.init(uuid:type:date:priority:bundleIdentifier:dismissalDuration:shouldTransitionToHUD:actionHandler:dismissHandler:subtitleStyle:noticeAccessory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, uint64_t *a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  char v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  int *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  OUTLINED_FUNCTION_280_0();
  v38 = v16;
  v37 = v17;
  v19 = v18;
  OUTLINED_FUNCTION_331_0();
  v21 = v20;
  v23 = v22;
  v25 = *v24;
  v26 = *a12;
  v35 = a13[1];
  v36 = *a13;
  OUTLINED_FUNCTION_33_0();
  v27 = OUTLINED_FUNCTION_337_0();
  v28(v27, v21);
  v29 = (int *)OUTLINED_FUNCTION_186_1();
  _s15ConversationKit11ParticipantVWObTm_1(v14, v23 + v29[5], type metadata accessor for PushToTalkNotice.NoticeType);
  v30 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_196(v30);
  *(_BYTE *)(v23 + v29[7]) = v25;
  v31 = (_QWORD *)(v23 + v29[8]);
  *v31 = v13;
  v31[1] = v19;
  *(_QWORD *)(v23 + v29[9]) = v15;
  *(_BYTE *)(v23 + v29[10]) = v37;
  v32 = (_QWORD *)(v23 + v29[11]);
  *v32 = v38;
  v32[1] = a9;
  v33 = (_QWORD *)(v23 + v29[12]);
  *v33 = a10;
  v33[1] = a11;
  *(_BYTE *)(v23 + v29[13]) = v26;
  OUTLINED_FUNCTION_355_0(v29[14], v34, v35, v36);
  OUTLINED_FUNCTION_141_3();
}

void default argument 4 of SystemUpdateNotice.init(type:activity:uuid:date:priority:bundleIdentifier:shouldTransitionToHUD:actionHandler:dismissHandler:subtitleStyle:noticeAccessory:)(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

void default argument 9 of SystemUpdateNotice.init(type:activity:uuid:date:priority:bundleIdentifier:shouldTransitionToHUD:actionHandler:dismissHandler:subtitleStyle:noticeAccessory:)(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

#error "1BD2F43CC: call analysis failed (funcsize=66)"

BOOL static NoticePriority.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t NoticePriority.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ConversationKit::NoticePriority_optional __swiftcall NoticePriority.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 6;
  if ((unint64_t)rawValue < 6)
    v2 = rawValue;
  *v1 = v2;
  return (ConversationKit::NoticePriority_optional)rawValue;
}

void protocol witness for Hashable.hash(into:) in conformance NoticePriority(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>.hash(into:)(a1, *v1);
}

ConversationKit::NoticePriority_optional protocol witness for RawRepresentable.init(rawValue:) in conformance NoticePriority(Swift::Int *a1)
{
  return NoticePriority.init(rawValue:)(*a1);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance NoticePriority(uint64_t *a1@<X8>)
{
  *a1 = NoticePriority.rawValue.getter();
  OUTLINED_FUNCTION_0();
}

BOOL protocol witness for static Comparable.<= infix(_:_:) in conformance NoticePriority(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized static Comparable.<= infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.>= infix(_:_:) in conformance NoticePriority(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized static Comparable.>= infix(_:_:)(*a1, *a2);
}

BOOL protocol witness for static Comparable.> infix(_:_:) in conformance NoticePriority(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized static Comparable.> infix(_:_:)(*a1, *a2);
}

ConversationKit::ConversationNoticeStyle_optional __swiftcall ConversationNoticeStyle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  uint64_t countAndFlagsBits;
  char *v3;
  Swift::OpaquePointer v4;
  Swift::Int v5;
  char v6;
  ConversationKit::ConversationNoticeStyle_optional result;

  countAndFlagsBits = rawValue._countAndFlagsBits;
  v3 = v1;
  v4._rawValue = &outlined read-only object #0 of ConversationNoticeStyle.init(rawValue:);
  v5 = OUTLINED_FUNCTION_4_89(v4, countAndFlagsBits);
  OUTLINED_FUNCTION_13_3();
  if (v5 == 1)
    v6 = 1;
  else
    v6 = 2;
  if (!v5)
    v6 = 0;
  *v3 = v6;
  OUTLINED_FUNCTION_18();
  return result;
}

uint64_t ConversationNoticeStyle.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6765746E696E6F6ELL;
  else
    return 0x7461726765746E69;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance ConversationNoticeStyle(char *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance ConversationNoticeStyle()
{
  specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ConversationNoticeStyle()
{
  return specialized RawRepresentable<>.hash(into:)();
}

